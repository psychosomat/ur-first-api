{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"English               \ud55c\uad6d\uc5b4               \u0420\u0443\u0441\u0441\u043a\u0438\u0439               Espa\u00f1ol               Portugu\u00eas               \u4e2d\u6587               Fran\u00e7ais      Welcome aboard, cadet! \ud83d\ude80 <p>This guide is your first step into the boundless universe of APIs. It doesn't claim to be a perfect encyclopedia, but serves as a practical guide to help you quickly grasp the basics and start creating your own projects. Here you will find real-world examples, clear explanations, and a pinch of cosmic inspiration.</p> <p>This tutorial is intended for beginners, students, and junior developers (up to mid-level). If you notice an error or want to suggest improvements\u2014both for the material and the translation\u2014I would be happy to receive your feedback.</p> <p>The translation from English was done with the help of AI and may contain inaccuracies.</p> \ud83d\ude80 Go to the tutorial \u2604 Support the mission <p>Creating this tutorial is a long and complex flight that requires a lot of time and energy. If you found the material useful, you can help refuel our expedition's tanks. Every contribution is another orbit towards new useful materials.</p> \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0431\u043e\u0440\u0442, \u043a\u0443\u0440\u0441\u0430\u043d\u0442! \ud83d\ude80 <p>\u042d\u0442\u043e \u043f\u043e\u0441\u043e\u0431\u0438\u0435 \u2014 \u0432\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0448\u0430\u0433 \u0432 \u0431\u0435\u0437\u0433\u0440\u0430\u043d\u0438\u0447\u043d\u0443\u044e \u0432\u0441\u0435\u043b\u0435\u043d\u043d\u0443\u044e API. \u041e\u043d\u043e \u043d\u0435 \u043f\u0440\u0435\u0442\u0435\u043d\u0434\u0443\u0435\u0442 \u043d\u0430 \u0437\u0432\u0430\u043d\u0438\u0435 \u0438\u0434\u0435\u0430\u043b\u044c\u043d\u043e\u0439 \u044d\u043d\u0446\u0438\u043a\u043b\u043e\u043f\u0435\u0434\u0438\u0438, \u043d\u043e \u0441\u043b\u0443\u0436\u0438\u0442 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u043d\u044b\u043c \u043f\u0443\u0442\u0435\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u043e\u043d\u044f\u0442\u044c \u043e\u0441\u043d\u043e\u0432\u044b \u0438 \u043d\u0430\u0447\u0430\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u044b. \u0417\u0434\u0435\u0441\u044c \u0432\u044b \u043d\u0430\u0439\u0434\u0451\u0442\u0435 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b, \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0435 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u044f \u0438 \u0449\u0435\u043f\u043e\u0442\u043a\u0443 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0432\u0434\u043e\u0445\u043d\u043e\u0432\u0435\u043d\u0438\u044f.</p> <p>\u0423\u0447\u0435\u0431\u043d\u0438\u043a \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u043d \u043d\u0430 \u043d\u043e\u0432\u0438\u0447\u043a\u043e\u0432, \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432 \u0438 \u0434\u0436\u0443\u043d\u043e\u0432 (\u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u0434\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u043c\u0438\u0434\u0434\u043b). \u0415\u0441\u043b\u0438 \u0432\u044b \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0443 \u0438\u043b\u0438 \u0437\u0430\u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u0442\u044c \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u2014 \u043a\u0430\u043a \u043f\u043e \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0443, \u0442\u0430\u043a \u0438 \u043f\u043e \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0443 \u2014 \u0431\u0443\u0434\u0443 \u0440\u0430\u0434 \u0432\u0430\u0448\u0435\u0439 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0439 \u0441\u0432\u044f\u0437\u0438.</p> <p>\u041f\u0435\u0440\u0435\u0432\u043e\u0434 \u0441 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0418\u0418 \u0438 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043d\u0435\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438.</p> \ud83d\ude80 \u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u0443\u0447\u0435\u0431\u043d\u0438\u043a\u0443 \u2604 \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0442\u0435 \u043c\u0438\u0441\u0441\u0438\u044e <p>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0443\u0447\u0435\u0431\u043d\u0438\u043a\u0430 \u2014 \u0434\u043e\u043b\u0433\u0438\u0439 \u0438 \u0441\u043b\u043e\u0436\u043d\u044b\u0439 \u043f\u043e\u043b\u0451\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043d\u0435\u043c\u0430\u043b\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0438 \u044d\u043d\u0435\u0440\u0433\u0438\u0438. \u0415\u0441\u043b\u0438 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b \u043e\u043a\u0430\u0437\u0430\u043b\u0441\u044f \u0434\u043b\u044f \u0432\u0430\u0441 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043c\u043e\u0447\u044c \u043f\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0442\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0435 \u0431\u0430\u043a\u0438 \u043d\u0430\u0448\u0435\u0439 \u044d\u043a\u0441\u043f\u0435\u0434\u0438\u0446\u0438\u0438.     \u041a\u0430\u0436\u0434\u0430\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u2014 \u0435\u0449\u0451 \u043e\u0434\u0438\u043d \u0448\u0430\u0433 \u043a \u043d\u043e\u0432\u044b\u043c \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430\u043c.</p> \u00a1Bienvenido a bordo, cadete! \ud83d\ude80 <p>Este manual es tu primer paso en el universo ilimitado de las API. No pretende ser una enciclopedia perfecta, pero sirve como una gu\u00eda pr\u00e1ctica que te ayudar\u00e1 a comprender r\u00e1pidamente los conceptos b\u00e1sicos y comenzar a crear tus propios proyectos. Aqu\u00ed encontrar\u00e1s ejemplos reales, explicaciones claras y una pizca de inspiraci\u00f3n c\u00f3smica.</p> <p>El tutorial est\u00e1 dirigido a principiantes, estudiantes y desarrolladores junior (como m\u00e1ximo, de nivel medio). Si notas un error o quieres sugerir mejoras, tanto en el material como en la traducci\u00f3n, estar\u00e9 encantado de recibir tus comentarios.</p> <p>La traducci\u00f3n del ingl\u00e9s se realiz\u00f3 con la ayuda de IA y puede contener imprecisiones.</p> \ud83d\ude80 Ir al tutorial \u2604 Apoya la misi\u00f3n <p>Crear este tutorial es un vuelo largo y complejo que requiere mucho tiempo y energ\u00eda. Si el material te ha resultado \u00fatil, puedes ayudar a rellenar los tanques de combustible de nuestra expedici\u00f3n. Cada apoyo es una \u00f3rbita m\u00e1s hacia nuevos materiales \u00fatiles.</p> Bem-vindo a bordo, cadete! \ud83d\ude80 <p>Este manual \u00e9 o seu primeiro passo no universo ilimitado das APIs. N\u00e3o pretende ser uma enciclop\u00e9dia perfeita, mas serve como um guia pr\u00e1tico que o ajudar\u00e1 a compreender rapidamente os conceitos b\u00e1sicos e a come\u00e7ar a criar os seus pr\u00f3prios projetos. Aqui encontrar\u00e1 exemplos reais, explica\u00e7\u00f5es claras e uma pitada de inspira\u00e7\u00e3o c\u00f3smica.</p> <p>O tutorial destina-se a iniciantes, estudantes e programadores j\u00fanior (no m\u00e1ximo, de n\u00edvel intermedi\u00e1rio). Se notar algum erro ou quiser sugerir melhorias \u2014 tanto no material como na tradu\u00e7\u00e3o \u2014 terei todo o gosto em receber o seu feedback.</p> <p>A tradu\u00e7\u00e3o do ingl\u00eas foi feita com a ajuda de IA e pode conter imprecis\u00f5es.</p> \ud83d\ude80 Ir para o tutorial \u2604 Apoie a miss\u00e3o <p>Criar este tutorial \u00e9 um voo longo e complexo que requer muito tempo e energia. Se o material lhe foi \u00fatil, pode ajudar a abastecer a expedi\u00e7\u00e3o. Cada apoio \u00e9 mais uma \u00f3rbita em dire\u00e7\u00e3o a novos materiais \u00fateis.</p> \u6b22\u8fce\u767b\u8239\uff0c\u5b66\u5458\uff01\ud83d\ude80 <p>\u672c\u624b\u518c\u662f\u60a8\u8fdb\u5165\u65e0\u9650API\u4e16\u754c\u7684\u7b2c\u4e00\u6b65\u3002\u5b83\u5e76\u975e\u4e00\u672c\u5b8c\u7f8e\u7684\u767e\u79d1\u5168\u4e66\uff0c\u800c\u662f\u4e00\u672c\u5b9e\u7528\u7684\u6307\u5357\uff0c\u53ef\u5e2e\u52a9\u60a8\u5feb\u901f\u638c\u63e1\u57fa\u7840\u77e5\u8bc6\u5e76\u5f00\u59cb\u521b\u5efa\u81ea\u5df1\u7684\u9879\u76ee\u3002\u5728\u8fd9\u91cc\uff0c\u60a8\u4f1a\u53d1\u73b0\u771f\u5b9e\u7684\u793a\u4f8b\u3001\u6e05\u6670\u7684\u89e3\u91ca\u548c\u4e00\u4e1d\u5b87\u5b99\u7684\u7075\u611f\u3002</p> <p>\u672c\u6559\u7a0b\u9762\u5411\u521d\u5b66\u8005\u3001\u5b66\u751f\u548c\u521d\u7ea7\u5f00\u53d1\u4eba\u5458\uff08\u6700\u591a\u4e3a\u4e2d\u7ea7\uff09\u3002\u5982\u679c\u60a8\u53d1\u73b0\u9519\u8bef\u6216\u5e0c\u671b\u63d0\u51fa\u6539\u8fdb\u5efa\u8bae\u2014\u2014\u65e0\u8bba\u662f\u9488\u5bf9\u6750\u6599\u8fd8\u662f\u7ffb\u8bd1\u2014\u2014\u6211\u5c06\u5f88\u9ad8\u5174\u6536\u5230\u60a8\u7684\u53cd\u9988\u3002</p> <p>\u8be5\u8bd1\u6587\u662f\u5728\u4eba\u5de5\u667a\u80fd\u7684\u5e2e\u52a9\u4e0b\u4ece\u82f1\u6587\u7ffb\u8bd1\u800c\u6765\uff0c\u53ef\u80fd\u5b58\u5728\u4e0d\u51c6\u786e\u4e4b\u5904\u3002</p> \ud83d\ude80 \u524d\u5f80\u6559\u7a0b \u2604 \u652f\u6301\u4efb\u52a1 <p>\u521b\u5efa\u672c\u6559\u7a0b\u662f\u4e00\u9879\u6f2b\u957f\u800c\u590d\u6742\u7684\u98de\u884c\uff0c\u9700\u8981\u5927\u91cf\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u3002\u5982\u679c\u60a8\u89c9\u5f97\u8fd9\u4e9b\u6750\u6599\u6709\u7528\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4e3a\u63a2\u9669\u961f\u7684\u6cb9\u7bb1\u52a0\u6ee1\u6cb9\u3002\u6bcf\u4e00\u6b21\u652f\u6301\u90fd\u662f\u5411\u7740\u65b0\u7684\u6709\u7528\u6750\u6599\u7684\u53c8\u4e00\u5708\u8f68\u9053\u3002</p> \ud0d1\uc2b9\uc744 \ud658\uc601\ud569\ub2c8\ub2e4, \uc0dd\ub3c4! \ud83d\ude80 <p>\uc774 \ud578\ub4dc\ubd81\uc740 \ubb34\ud55c\ud55c API\uc758 \uc138\uacc4\ub85c \ub098\uc544\uac00\ub294 \uccab \uac78\uc74c\uc785\ub2c8\ub2e4. \uc644\ubcbd\ud55c \ubc31\uacfc\uc0ac\uc804\uc740 \uc544\ub2c8\uc9c0\ub9cc, \uae30\ubcf8 \uc0ac\ud56d\uc744 \ube60\ub974\uac8c \ud30c\uc545\ud558\uace0 \uc790\uc2e0\ub9cc\uc758 \ud504\ub85c\uc81d\ud2b8\ub97c \uc2dc\uc791\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uc2e4\uc6a9\uc801\uc778 \uac00\uc774\ub4dc \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\uc11c\ub294 \uc2e4\uc81c \uc608\uc81c, \uba85\ud655\ud55c \uc124\uba85, \uadf8\ub9ac\uace0 \uc57d\uac04\uc758 \uc6b0\uc8fc\uc801 \uc601\uac10\uc744 \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc740 \ucd08\ubcf4\uc790, \ud559\uc0dd, \uc8fc\ub2c8\uc5b4 \uac1c\ubc1c\uc790(\ucd08\uae09 \ubc0f \uc8fc\ub2c8\uc5b4 \uac1c\ubc1c\uc790 \ub300\uc0c1)\ub97c \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4. \uc790\ub8cc\ub098 \ubc88\uc5ed\uc5d0 \ub300\ud55c \uc624\ub958\ub97c \ubc1c\uacac\ud558\uac70\ub098 \uac1c\uc120 \uc0ac\ud56d\uc744 \uc81c\uc548\ud558\uace0 \uc2f6\ub2e4\uba74 \uc5b8\uc81c\ub4e0\uc9c0 \ud53c\ub4dc\ubc31\uc744 \ubcf4\ub0b4\uc8fc\uc138\uc694.</p> <p>\uc601\uc5b4 \ubc88\uc5ed\uc740 AI\uc758 \ub3c4\uc6c0\uc744 \ubc1b\uc544 \uc774\ub8e8\uc5b4\uc84c\uc73c\uba70 \ubd80\uc815\ud655\ud55c \ub0b4\uc6a9\uc774 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> \ud83d\ude80 \ud29c\ud1a0\ub9ac\uc5bc\ub85c \uc774\ub3d9 \u2604 \uc784\ubb34 \uc9c0\uc6d0 <p>\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc744 \ub9cc\ub4dc\ub294 \uac83\uc740 \ub9ce\uc740 \uc2dc\uac04\uacfc \uc5d0\ub108\uc9c0\uac00 \ud544\uc694\ud55c \uae38\uace0 \ubcf5\uc7a1\ud55c \ube44\ud589\uc785\ub2c8\ub2e4. \uc790\ub8cc\uac00 \uc720\uc6a9\ud588\ub2e4\uba74 \ud0d0\ud5d8\ub300\uc758 \uc5f0\ub8cc \ud0f1\ud06c\ub97c \ubcf4\ucda9\ud558\ub294 \ub370 \ub3c4\uc6c0\uc744 \uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc9c0\uc6d0\uc740 \uc0c8\ub85c\uc6b4 \uc720\uc6a9\ud55c \uc790\ub8cc\ub97c \ud5a5\ud55c \ub610 \ub2e4\ub978 \uada4\ub3c4\uc785\ub2c8\ub2e4.</p> Bienvenue \u00e0 bord, cadet ! \ud83d\ude80 <p>Ce manuel est votre premier pas dans l'univers infini des API. Il ne pr\u00e9tend pas \u00eatre une encyclop\u00e9die parfaite, mais sert de guide pratique pour vous aider \u00e0 comprendre rapidement les bases et \u00e0 commencer \u00e0 cr\u00e9er vos propres projets. Vous y trouverez des exemples concrets, des explications claires et une pinc\u00e9e d'inspiration cosmique.</p> <p>Ce tutoriel s'adresse aux d\u00e9butants, aux \u00e9tudiants et aux d\u00e9veloppeurs juniors (au plus, de niveau interm\u00e9diaire). Si vous remarquez une erreur ou si vous souhaitez sugg\u00e9rer des am\u00e9liorations, tant pour le mat\u00e9riel que pour la traduction, je serai heureux de recevoir vos commentaires.</p> <p>La traduction de l'anglais a \u00e9t\u00e9 r\u00e9alis\u00e9e \u00e0 l'aide de l'IA et peut contenir des inexactitudes.</p> \ud83d\ude80 Aller au tutoriel \u2604 Soutenez la mission <p>La cr\u00e9ation de ce tutoriel est un vol long et complexe qui demande beaucoup de temps et d'\u00e9nergie. Si le mat\u00e9riel vous a \u00e9t\u00e9 utile, vous pouvez aider \u00e0 remplir les r\u00e9servoirs de carburant de notre exp\u00e9dition. Chaque soutien est une autre orbite vers de nouveaux mat\u00e9riaux utiles.</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/1/","title":"Chapter 1.1: What is an API and why is it needed?","text":"<p>Study time: 30 minutes</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/1/#1-introduction-api-as-a-space-docking-port","title":"1. Introduction: API as a \"space docking port\"","text":"<p>Imagine you are the commander of a spaceship. To connect your ship to the ISS, you need a standard docking port. Without it, docking is impossible, even if the ship and the station are a perfect match.</p> <p>API (Application Programming Interface) is the same \"docking port\" for programs. - It is a set of rules that allows different applications to exchange data and work together. - Example: when a mobile application shows the weather forecast, it uses the API of a weather service.</p> <p>\ud83d\udca1 Analogy from space: An API is like a communication protocol between Earth and a Mars rover. The rover receives commands in a format it understands (e.g., \"take a photo of the crater\"), performs the task, and sends the data back.</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/1/#2-why-are-apis-needed","title":"2. Why are APIs needed?","text":"<ol> <li> <p>Simplifying development    Instead of creating everything from scratch, you use a ready-made API, like the SpaceX API.    <pre><code># Example: Getting data about SpaceX launches\nimport requests\nresponse = requests.get(\"https://api.spacexdata.com/v3/missions\")\nprint(response.json()[0])  # Output data\n</code></pre></p> </li> <li> <p>Process automation    APIs allow robotic probes to automatically transmit data to Earth without manual intervention.</p> </li> <li> <p>System integration    Like docking modules of the ISS: an API connects your application with payment systems, databases, or even telescopes!</p> </li> <li> <p>Access to unique data    For example, the SpaceX API provides real data on rocket launches.</p> </li> </ol>"},{"location":"en/Chapter%201%20-%20API%20Basics/1/#3-how-does-an-api-work","title":"3. How does an API work?","text":"<ul> <li>The client (your program) sends an HTTP request to the server.</li> <li>The server (e.g., NASA) processes the request and returns a response in JSON format.</li> <li>The data is \"space treasures\": ISS coordinates, photos of galaxies, a list of exoplanets.</li> </ul> <p>\u26a1 Example of a request to the \"Open Notify\" API (ISS): <pre><code>curl \"http://api.open-notify.org/iss-now.json\"\n</code></pre> Response: <pre><code>{\n  \"message\": \"success\",\n  \"timestamp\": 1725431234,\n  \"iss_position\": {\n    \"latitude\": \"51.1234\",\n    \"longitude\": \"-120.5678\"\n  }\n}\n</code></pre></p>"},{"location":"en/Chapter%201%20-%20API%20Basics/1/#4-types-of-apis-brief-overview","title":"4. Types of APIs (Brief overview)","text":"Type Example from space Where it is used REST Standard communication \"MCC \u2194 satellite\" Web services (90% of cases) GraphQL \"Custom request\" (e.g., \"give only the size and mass of the planet\") Complex systems SOAP Like radio encryption in old missions Enterprise applications <p>In this tutorial, we will focus on REST API - the most popular format.</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/1/#5-examples-of-space-apis","title":"5. Examples of space APIs","text":"<ol> <li>NASA Open API: Data on asteroids, photos from the Hubble telescope.</li> <li>SpaceX API: Information about launches, rockets, Dragon ships.</li> <li>Open Notify: Current position of the ISS, number of people in space.</li> </ol>"},{"location":"en/Chapter%201%20-%20API%20Basics/1/#interactive-quiz","title":"Interactive quiz","text":"<p>1. An API is...</p>  a) Artificial intelligence  b) A set of rules for program interaction  c) A programming language <p>2. Why use an API instead of writing your own code?</p>  a) To save time  b) To get access to unique data  c) Both options <p>3. What data format does an API most often return?</p>  a) XML  b) JSON  c) TXT Check <p>\ud83d\ude80 Chapter summary:</p> <p>An API is the foundation for working with data from external sources. Just as an astronaut cannot work without communication with the MCC, a developer cannot build a complex application without an API. In the next chapter, we will learn how to send \"commands\" to the server using HTTP methods!</p> <p>\ud83d\udccc Hint: Try making a request to the Open Notify API and find out where the ISS is now! (You can do this even with a simple console)</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/2/","title":"Chapter 1.2: HTTP Methods and Status Codes","text":"<p>Study time: 40 minutes</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/2/#1-http-the-language-of-communication-in-space","title":"1. HTTP: The Language of Communication in Space","text":"<p>Imagine you are the Mission Control Center (MCC), and the API server is a spaceship. HTTP (HyperText Transfer Protocol) is the radio communication between you.</p> <p>Each message contains:</p> <ul> <li> <p>Method \u2192 What to do (e.g., \"launch a probe\")</p> </li> <li> <p>Status code \u2192 Result of the operation (\"probe launched successfully!\")</p> </li> </ul> <p>\ud83d\udca1 Space analogy: <code>GET /stars</code> = \"MCC \u2192 Ship: Report star coordinates!\" <code>200 OK</code> = \"Ship \u2192 MCC: Coordinates transmitted!\"</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/2/#2-basic-http-methods","title":"2. Basic HTTP Methods","text":"<p>Each method is like a type of command for a space mission:</p> Method Space Analogy Example Request Description GET Requesting data (telescope) <code>GET /planets</code> Get a list of planets POST Sending a new object (rocket launch) <code>POST /satellites</code> Create a new satellite PUT Full object update (orbit correction) <code>PUT /satellites/iss</code> Update ISS data DELETE Destroying an object (de-orbiting) <code>DELETE /debris/123</code> Delete space debris <p>\u26a1 Code Example (Python): <pre><code>import requests\n\n# GET: Get data about the Falcon 9 rocket\n# Using a real SpaceX API endpoint\nresponse = requests.get(\"https://api.spacexdata.com/v4/rockets/5e9d0d95eda69973a809d1ec\")\nprint(response.status_code, response.json()['name']) # 200 Falcon 9\n\n# POST: Create a new post in a test API\n# Using the jsonplaceholder sandbox service\nnew_post = {\"title\": \"Artemis Mission\", \"body\": \"Ready for launch\", \"userId\": 1}\nresponse = requests.post(\"https://jsonplaceholder.typicode.com/posts\", json=new_post)\nprint(response.status_code, response.json()['id'])  # 201 101 (or another ID)\n</code></pre></p>"},{"location":"en/Chapter%201%20-%20API%20Basics/2/#3-important-status-codes","title":"3. Important Status Codes","text":"<p>The server's response is like a signal from a spacecraft:</p> Group Code Space Analogy Description <code>2xx</code> 200 \u2705 \"Mission accomplished!\" Success 201 \ud83d\ude80 \"Rocket launched!\" Object created <code>3xx</code> 301 \ud83c\udf0d \"MCC has moved to a new address\" Redirection <code>4xx</code> 400 \u274c \"Incorrect coordinates in the request!\" Client error 404 \ud83e\ude90 \"Planet not found!\" Resource not found <code>5xx</code> 500 \ud83d\udd25 \"Engine failure!\" Server error"},{"location":"en/Chapter%201%20-%20API%20Basics/2/#4-practice-handling-status-codes","title":"4. Practice: Handling Status Codes","text":"<p>Always check the API response! Example of error handling: <pre><code>import requests\n\ndef get_post_data(post_id):\n    \"\"\"Function to get post data with status code handling.\"\"\"\n    try:\n        response = requests.get(f\"https://jsonplaceholder.typicode.com/posts/{post_id}\")\n\n        # Check the response status code\n        if response.status_code == 200:\n            print(f\"\u2705 Data for post {post_id} successfully received!\")\n            return response.json()\n        elif response.status_code == 404:\n            print(f\"\u26a0\ufe0f Resource for post {post_id} not found!\")\n            return None\n        else:\n            # Handle other client (4xx) or server (5xx) errors\n            print(f\"\ud83d\udea8 An error occurred! Status code: {response.status_code}\")\n            return None\n\n    except requests.exceptions.RequestException as e:\n        # Handle connection errors (e.g., no internet)\n        print(f\"\ud83d\udd25 Connection error: {e}\")\n        return None\n\n# --- Testing our function ---\nprint(\"--- Searching for an existing post ---\")\nget_post_data(1)\n\nprint(\"\\n--- Searching for a non-existent post ---\")\nget_post_data(9999) # This post does not exist, we expect a 404\n</code></pre></p> <p>\ud83d\udd2d Example from a real API (SpaceX): Request: <code>GET https://api.spacexdata.com/v4/ships/OCISLY</code> Response: <code>200 OK</code> + ship data Request: <code>GET https://api.spacexdata.com/v4/ships/UNICORN</code> Response: <code>404 Not Found</code></p>"},{"location":"en/Chapter%201%20-%20API%20Basics/2/#quiz-for-reinforcement","title":"Quiz for reinforcement","text":"<p>1. Which method should be used to get data about stars?</p>  a) POST  b) PUT  c) GET <p>2. The status `201 Created` means:</p>  a) Object deleted  b) Object created  c) Server error <p>3. The method for a full update of satellite data:</p>  a) PATCH  b) DELETE  c) PUT <p>4. What does the status `500 Internal Server Error` mean?</p>  a) Error in the client's request  b) Failure on the server  c) Successful execution Check <p>\ud83d\ude80 Chapter summary: HTTP methods are your commands for space missions, and status codes are reports on their execution. Remember:</p> <p><code>GET</code> = \"Give me data\", <code>POST</code> = \"Create new\", <code>PUT</code> = \"Update all\", <code>DELETE</code> = \"Destroy\" <code>2xx</code> = Success, <code>4xx</code> = Your error, <code>5xx</code> = Server problem</p> <p>Get ready for launch! In the next chapter, we will decipher \"telegrams\" from the server - the JSON format.</p> <p>\ud83d\udccc Practice: Use the SpaceX API to send <code>GET /launches/latest</code> and study the response codes!</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/3/","title":"Chapter 1.3: JSON Format","text":"<p>Study time: 35 minutes</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/3/#1-json-the-language-of-space-communication","title":"1. JSON: The Language of Space Communication","text":"<p>Imagine that a space probe and the MCC speak different languages. JSON (JavaScript Object Notation) is a universal data language that is understandable to both humans and machines. Like the international language of astronauts!</p> <p>Main properties:</p> <ul> <li>\ud83e\udeb6 Lightweight: fast transmission even with a weak signal</li> <li>\ud83d\udc40 Human-readable: the structure is visible to the naked eye</li> <li>\ud83d\udd04 Universal: supported by all programming languages</li> </ul> <p>\ud83d\udca1 Space analogy:</p> <p>JSON is like a digital telegram with data about stars. Instead of Morse code, there are clear <code>{key: value}</code> structures.</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/3/#2-anatomy-of-a-json-message","title":"2. Anatomy of a JSON message","text":"<p>JSON consists of two types of structures:</p> <p>A. Objects (Spaceships) <pre><code>{\n  \"name\": \"Voyager-1\",\n  \"launch_year\": 1977,\n  \"is_active\": true,\n  \"position\": [-19.1, 42.7, 0.3]\n}\n</code></pre></p> <p>B. Arrays (Star clusters) <pre><code>[\n  {\"name\": \"Sirius\", \"magnitude\": -1.46},\n  {\"name\": \"Canopus\", \"magnitude\": -0.74},\n  {\"name\": \"Arcturus\", \"magnitude\": -0.05}\n]\n</code></pre></p> <p>\u26a1 Syntax rules:</p> <ul> <li>Keys in double quotes \" \"</li> <li>Values: strings, numbers, boolean (<code>true</code>/<code>false</code>), <code>null</code></li> <li>Data is separated by commas</li> <li>Curly braces <code>{}</code> for objects, square brackets <code>[]</code> for arrays</li> </ul>"},{"location":"en/Chapter%201%20-%20API%20Basics/3/#3-json-vs-xml-the-battle-of-formats","title":"3. JSON vs XML: The Battle of Formats","text":"Parameter JSON (Modern satellite) XML (Old telescope) Readability High (direct access to fields) Low (tags <code>&lt;planet&gt;...&lt;/planet&gt;</code>) Size Compact Bulky (+30% to size) Processing Fast Slow Example <code>{\"planet\": \"Mars\"}</code> <code>&lt;planet&gt;Mars&lt;/planet&gt;</code> <p>\ud83d\udd2d Why did JSON win in space?</p> <p>The NASA, SpaceX, and ESA APIs use JSON - it's ideal for data transmission!</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/3/#4-working-with-json-in-code","title":"4. Working with JSON in code","text":"<p>Python example (getting data about the Moon): <pre><code>import requests\nimport json\n\n# We use a real API, for example, to get data about the Solar System\n# from The Solar System OpenData API\ntry:\n    response = requests.get(\"https://api.le-systeme-solaire.net/rest/bodies/terre\")\n    response.raise_for_status() # Check for HTTP errors (4xx, 5xx)\n\n    planet_data = response.json()\n\n    print(f\"Name: {planet_data['englishName']}\")\n    print(f\"Satellites: {[moon['moon'] for moon in planet_data['moons']]}\")\n\n    # Convert a Python dictionary to a JSON string for saving\n    planet_json_str = json.dumps(planet_data, indent=2, ensure_ascii=False) # ensure_ascii=False for Cyrillic\n    print(\"\\n--- Formatted JSON ---\")\n    print(planet_json_str)\n\nexcept requests.exceptions.RequestException as e:\n    print(f\"Request error: {e}\")\n</code></pre></p> <p>JavaScript example (processing telescope data): <pre><code>const Data = `{ \n  \"id\": \"terre\",\n  \"name\": \"La Terre\",\n  \"englishName\": \"Earth\",\n  \"isPlanet\": true,\n  \"moons\": [\n    {\n      \"moon\": \"La Lune\",\n      \"rel\": \"https://api.le-systeme-solaire.net/rest/bodies/lune\"\n    }\n  ],\n  \"semimajorAxis\": 149598023,\n  \"perihelion\": 147095000,\n  \"aphelion\": 152100000,\n  \"eccentricity\": 0.0167,\n  \"inclination\": 0,\n  \"mass\": {\n    \"massValue\": 5.97237,\n    \"massExponent\": 24\n  },\n  \"vol\": {\n    \"volValue\": 1.08321,\n    \"volExponent\": 12\n  },\n  \"density\": 5.5136,\n  \"gravity\": 9.8,\n  \"escape\": 11190,\n  \"meanRadius\": 6371.0084,\n  \"equaRadius\": 6378.1366,\n  \"polarRadius\": 6356.8,\n  \"flattening\": 0.00335,\n  \"dimension\": \"\",\n  \"sideralOrbit\": 365.256,\n  \"sideralRotation\": 23.9345,\n  \"aroundPlanet\": null,\n  \"discoveredBy\": \"\",\n  \"discoveryDate\": \"\",\n  \"alternativeName\": \"\",\n  \"axialTilt\": 23.4393,\n  \"avgTemp\": 288,\n  \"mainAnomaly\": 358.617,\n  \"argPeriapsis\": 85.901,\n  \"longAscNode\": 18.272,\n  \"bodyType\": \"Planet\"\n}`;\n\nconst dataObj = JSON.parse(Data);\nconsole.log(dataObj.target);\n</code></pre></p>"},{"location":"en/Chapter%201%20-%20API%20Basics/3/#5-json-validation-checking-the-signal","title":"5. JSON Validation: Checking the \"Signal\"","text":"<p>Before using the data, make sure the JSON:</p> <ol> <li> <p>Has the correct structure (check the brackets!)</p> </li> <li> <p>Contains the expected fields</p> </li> <li> <p>Has no syntax errors</p> </li> </ol> <p>Tools: - JSONLint (like a space debris detector for JSON) - Built-in language parsers (will throw an error for an incorrect format)</p> <p>\u26a0\ufe0f Example of an error:</p> <p><code>{\"planet\": \"Mars\"</code> \u2192 No closing bracket!</p> <p>Solution: Always use <code>json.loads()</code> in Python or <code>JSON.parse()</code> in JS for validation.</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/3/#quiz-for-reinforcement","title":"Quiz for reinforcement","text":"<p>1. JSON stands for...</p>  a) Java Space Object Notation  b) JavaScript Object Notation  c) Jupiter's Satellite Orbital Network <p>2. How is an object denoted in JSON:</p>  a) ()  b) {}  c) [] <p>3. What is NOT a valid value in JSON?</p>  a) \"name\": \"Saturn\"  b) \"radius_km\": 58232  c) \"has_rings\": undefined <p>4. Why is JSON better than XML for space APIs?</p>  a) Smaller size and high speed  b) Support for alien encodings  c) Ability to store video <p>5. How to convert a JSON string to a Python object?</p>  a) json.parse()  b) json.to_object()  c) json.loads() Check <p>\ud83d\ude80 Chapter summary:</p> <p>JSON is the \"space Esperanto\" of the API world. Knowing its structure, you can:</p> <ul> <li> <p>\ud83d\udce1 Receive data from telescopes and probes</p> </li> <li> <p>\ud83d\udd27 Convert information between systems</p> </li> <li> <p>\ud83d\udef0\ufe0f Save scientific data in files</p> </li> </ul> <p>Get ready for docking! In the next chapter, we will study the REST API architecture - the control system of your server's \"space station\".</p> <p>\ud83d\udccc Practice: Go to NASA Open APIs, find the Asteroids NeoWs API, and study the JSON structure in the response!</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/4/","title":"Chapter 1.4: REST API Structure","text":"<p>Study time: 45 minutes</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/4/#1-rest-api-the-architecture-of-a-space-station","title":"1. REST API: The Architecture of a Space Station","text":"<p>Imagine a space station where each module has:</p> <ul> <li> <p>A standard docking port (a unified interface)</p> </li> <li> <p>Clear specialization (living quarters, laboratory, storage)</p> </li> <li> <p>A coordinate system (precise location)</p> </li> </ul> <p>A REST (Representational State Transfer) API works on the same principles:</p> <ul> <li> <p>A unified interface for all resources</p> </li> <li> <p>Clear separation of components</p> </li> <li> <p>Addressing via URI (space coordinates)</p> </li> </ul> <p>\ud83d\udca1 Key idea:</p> <p>Each resource (planets, rockets, astronauts) has a unique URL and interacts through HTTP methods.</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/4/#2-the-6-principles-of-rest-in-a-space-analogy","title":"2. The 6 Principles of REST in a Space Analogy","text":"REST Principle Analogy on the ISS Meaning for the API Unified Interface Standard docking ports The same rules for all requests Stateless Each command is self-sufficient The server does not store client state Caching Local supplies of provisions Saving frequent responses Client-Server Clear separation: MCC \u2194 Station Independent development of components Layered System Relay satellites Proxies, load balancers Code on Demand Loading software for experiments (Optional) Transferring scripts"},{"location":"en/Chapter%201%20-%20API%20Basics/4/#3-resources-and-uris-space-coordinates","title":"3. Resources and URIs: Space Coordinates","text":"<p>Each object in the API is a resource with a unique address: <pre><code>https://api.spacexdata.com/v4/    \u2190 Base URL\n          rockets/            \u2190 Collection of rockets\n          rockets/5e9d0d95eda69973a809d1ec \u2190 A specific rocket (by ID)\n</code></pre></p> <p>Examples of space resources:</p> <ul> <li><code>GET /stars</code> \u2192 List of stars</li> <li><code>GET /stars/sirius</code> \u2192 Data about Sirius</li> <li><code>POST /satellites</code> \u2192 Launch a new satellite</li> <li><code>PUT /missions/artemis</code> \u2192 Update a mission</li> </ul> <p>URI hierarchy diagram: <pre><code>[Base URL]\n\u251c\u2500\u2500 /planets          \u2192 Collection of planets\n\u2502   \u251c\u2500\u2500 /mars         \u2192 \"Mars\" resource\n\u2502   \u2514\u2500\u2500 /venus        \u2192 \"Venus\" resource\n\u2514\u2500\u2500 /launches         \u2192 Collection of launches\n    \u251c\u2500\u2500 /upcoming     \u2192 Sub-collection\n    \u2514\u2500\u2500 /latest       \u2192 Resource\n</code></pre></p>"},{"location":"en/Chapter%201%20-%20API%20Basics/4/#4-crud-operations-via-http-methods","title":"4. CRUD Operations via HTTP Methods","text":"Operation HTTP Method Example (Space Station) Server Response Create <code>POST</code> Send a new module <code>201 Created</code> Read <code>GET</code> Request data about a module <code>200 OK</code> Update <code>PUT</code> Reconfigure a module <code>200 OK</code> Delete <code>DELETE</code> Undock an old module <code>204 No Content</code> <p>\u26a1 Code Example (Adding a satellite): <pre><code>import requests\n\n# We use a test service that simulates the creation of a resource\nnew_post = {\n    \"title\": \"New Telescope Launch\",\n    \"body\": \"Hubble-2 is ready for deployment.\",\n    \"userId\": 1\n}\n\n# Conditional API key for demonstrating headers\nheaders = {\n    \"Authorization\": \"Bearer YOUR_DEMO_KEY\",\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n}\n\nresponse = requests.post(\n    \"https://jsonplaceholder.typicode.com/posts\",\n    json=new_post,\n    headers=headers\n)\n\nif response.status_code == 201:\n    print(\"\u2705 Post about the new satellite created successfully!\")\n    print(\"Server response:\")\n    print(response.json())\nelse:\n    print(f\"\u274c Error! Status: {response.status_code}\")\n</code></pre></p>"},{"location":"en/Chapter%201%20-%20API%20Basics/4/#5-api-versioning-the-evolution-of-the-station","title":"5. API Versioning: The Evolution of the Station","text":"<p>Just as the ISS is updated (Zarya module \u2192 Nauka), APIs change versions:</p> <ul> <li>In the URL: <code>https://api.spacex.com/v4/rockets</code></li> <li>In the headers: <code>Accept: application/vnd.spacex-v5+json</code></li> </ul> <p>Why it's important:</p> <ul> <li>v1: Basic functionality</li> <li>v2: New fields added</li> <li>v3: Response structure changed</li> </ul> <p>\u26a0\ufe0f Tip: Always specify the version in requests, otherwise the \"docking\" may fail!</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/4/#6-hypermedia-hateoas-navigation-in-space","title":"6. Hypermedia (HATEOAS): Navigation in Space","text":"<p>The API response contains links to related resources - like a map of the station: <pre><code>{\n  \"id\": \"iss\",\n  \"name\": \"International Space Station\",\n  \"crew\": 7,\n  \"_links\": {\n    \"self\": { \"href\": \"/stations/iss\" },\n    \"modules\": { \"href\": \"/stations/iss/modules\" },\n    \"schedule\": { \"href\": \"/stations/iss/schedule\" }\n  }\n}\n</code></pre></p>"},{"location":"en/Chapter%201%20-%20API%20Basics/4/#quiz-for-reinforcement","title":"Quiz for reinforcement","text":"<p>1. REST stands for:</p>  a) Rocket Engine System Transfer  b) Representational State Transfer  c) Remote Space Technology <p>2. The \"Stateless\" principle means:</p>  a) The server stores the history of requests  b) Each request is self-sufficient  c) Data is transmitted only via SSL <p>3. The URI for getting data about the Falcon Heavy rocket:</p>  a) POST /rockets/falcon-heavy  b) GET /falcon-heavy  c) GET /rockets/falcon-heavy <p>4. The method for a full update of a resource:</p>  a) PATCH  b) POST  c) PUT <p>5. HATEOAS in an API is:</p>  a) A system of links to related resources  b) An encryption protocol  c) A query language Check <p>\ud83d\ude80 Chapter summary:</p> <p>A REST API is a standardized \"space station architecture\" for web services. Remember:</p> <ul> <li>Resources = Objects (rockets, planets)</li> <li>URI = Object coordinates</li> <li>HTTP methods = Control commands</li> <li>Versions = Station upgrades</li> </ul> <p>Final preparation! In the next chapter, we will launch a \"test probe\" - we will learn how to test an API using Postman.</p> <p>\ud83d\udccc Practice: Study the structure of the SpaceX API and try to execute:</p> <p><code>GET https://api.spacexdata.com/v4/launches/latest</code> \u2014 pay attention to the URI and the JSON structure!</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/5/","title":"Chapter 1.5: Testing an API with Postman","text":"<p>Study time: 50 minutes</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/5/#1-why-test-an-api-pre-launch-check","title":"1. Why Test an API? Pre-launch Check","text":"<p>Imagine: before launching a rocket, engineers conduct test system activations. Skip the check, and the mission could fail!</p> <p>API testing is your control test:</p> <ul> <li> <p>\u2705 Check the functionality of the \"docking ports\"</p> </li> <li> <p>\ud83d\udee1\ufe0f Detect vulnerabilities before live use</p> </li> <li> <p>\ud83d\udcca Ensure that data is transmitted without distortion</p> </li> </ul> <p>\ud83d\udca1 Space analogy: Postman is like a test console at the MCC for simulating all scenarios: \"What if we request data about a non-existent planet? Can the server handle 1000 requests/sec?\"</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/5/#2-postman-the-mission-control-center-for-apis","title":"2. Postman: The \"Mission Control Center\" for APIs","text":"<p>Features:</p> <ul> <li> <p>\ud83d\udce1 Sending any HTTP requests (GET, POST, PUT, DELETE)</p> </li> <li> <p>\ud83d\udd0d Analyzing responses (status codes, headers, JSON body)</p> </li> <li> <p>\ud83e\uddea Writing automated tests (JavaScript)</p> </li> <li> <p>\ud83c\udf10 Working with environment variables (test vs. production)</p> </li> </ul> <p>\ud83d\udc49 Download Postman</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/5/#3-first-launch-testing-the-planets-api","title":"3. First Launch: Testing the Planets API","text":"<p>Step 1: Create a request</p> <ol> <li> <p>Open Postman \u2192 New \u2192 Request</p> </li> <li> <p>Enter the URL: <code>https://api.spacexdata.com/v4/rockets</code></p> </li> <li> <p>Select the method: GET</p> </li> </ol> <p>Step 2: Send the \"signal\" <pre><code>[MCC] -- GET /planets --&gt; [SpaceX Server]\n</code></pre></p> <p>Step 3: Analyze the telemetry: - Status: <code>200 OK</code> - Response body (JSON): a list of rockets with parameters <pre><code>[\n  {\n    \"name\": \"Falcon 1\",\n    \"type\": \"rocket\",\n    \"active\": false,\n    \"stages\": 2,\n    \"id\": \"5e9d0d95eda69955f709d1eb\"\n  },\n  {\n    \"name\": \"Falcon 9\",\n    \"type\": \"rocket\",\n    \"active\": true,\n    \"id\": \"5e9d0d95eda69973a809d1ec\"\n  }\n]\n</code></pre></p>"},{"location":"en/Chapter%201%20-%20API%20Basics/5/#4-diagram-postman-components","title":"4. Diagram: Postman Components","text":"<pre><code>[Workspace]\n\u251c\u2500\u2500 \"Params\" tab (Query parameters)\n\u251c\u2500\u2500 \"Headers\" tab (Headers)\n\u251c\u2500\u2500 \"Body\" tab (Request body for POST/PUT)\n\u251c\u2500\u2500 \"Tests\" tab (Scripts for checks)\n\u2514\u2500\u2500 Response panel (Status, Time, Size, Body)\n</code></pre>"},{"location":"en/Chapter%201%20-%20API%20Basics/5/#5-creating-a-complex-scenario-mission-launch","title":"5. Creating a Complex Scenario: Mission Launch","text":"<p>Test: Adding a new planet to the catalog</p> <ol> <li> <p>Method: POST</p> </li> <li> <p>URL: <code>https://jsonplaceholder.typicode.com/posts</code> (example)</p> </li> <li> <p>In Headers:    <pre><code> { \"Content-Type\": \"application/json\" }\n</code></pre></p> </li> <li>In Body (raw \u2192 JSON):    <pre><code>{\n \"title\": \"New Exoplanet Found\",\n \"body\": \"Proxima Centauri b shows signs of a stable atmosphere.\",\n \"userId\": 1\n }\n</code></pre></li> </ol> <p>Automated check in Tests: <pre><code>// Status check\npm.test(\"Post created successfully\", () =&gt; {\n    pm.response.to.have.status(201);\n});\n\n// Checking the structure and data of the response\npm.test(\"Response contains the new post data\", () =&gt; {\n    const response = pm.response.json();\n    pm.expect(response).to.have.property(\"id\"); // Check that the server has assigned an ID\n    pm.expect(response.title).to.eql(\"New Exoplanet Found\");\n});\n</code></pre></p>"},{"location":"en/Chapter%201%20-%20API%20Basics/5/#6-environment-variables-earth-vs-mars","title":"6. Environment Variables: Earth vs. Mars","text":"<p>How to test on different servers (test/production)?</p> <ol> <li>Create environments:</li> <li><code>Local</code> \u2192 <code>http://localhost:3000</code></li> <li> <p><code>Production</code> \u2192 <code>https://api.nasa.gov</code></p> </li> <li> <p>Use variables in requests:    <pre><code>{{base_url}}/planets  # Will substitute the current URL\n</code></pre></p> </li> </ol> <p>\u26a0\ufe0f Important! Never test <code>DELETE</code> on a production server!</p>"},{"location":"en/Chapter%201%20-%20API%20Basics/5/#7-collections-a-library-of-space-missions","title":"7. Collections: A Library of Space Missions","text":"<p>Group requests: <pre><code>    \ud83d\udcc2 \"NASA\" Collection\n    \u251c\u2500\u2500 GET Planets\n    \u251c\u2500\u2500 POST New Planet\n    \u2514\u2500\u2500 DELETE Planet (test mode)\n</code></pre> Advantages:</p> <ul> <li>\ud83d\ude80 Run all tests with one button</li> <li>\ud83d\udce4 Export/import configurations</li> <li>\ud83d\udc68\u200d\ud83d\ude80 Team collaboration</li> </ul>"},{"location":"en/Chapter%201%20-%20API%20Basics/5/#8-automation-regular-satellite-checks","title":"8. Automation: Regular Satellite Checks","text":"<p>Set up API monitoring via Postman:</p> <ol> <li> <p>Schedule \u2192 Every 2 hours</p> </li> <li> <p>Tests:    <pre><code>pm.test(\"Satellite online\", () =&gt; {\n  pm.response.to.have.status(200);\n  pm.expect(pm.response.json().signal).above(50); // Signal &gt;50%\n});\n</code></pre></p> </li> <li> <p>Notifications to Slack/email on failure</p> </li> </ol>"},{"location":"en/Chapter%201%20-%20API%20Basics/5/#quiz-for-reinforcement","title":"Quiz for reinforcement","text":"<p>1. Postman is used for:</p>  a) Sending mail  b) API testing  c) Creating databases <p>2. What status to expect when an object is created successfully?</p>  a) 200 OK  b) 201 Created  c) 404 Not Found <p>3. Where to write automated tests in Postman?</p>  a) \"Body\" tab  b) \"Tests\" tab  c) \"Cookies\" tab <p>4. Environment variables are needed for:</p>  a) Switching between test and production servers  b) Storing passwords in plain text  c) Generating random data <p>5. What do regular monitoring checks verify?</p>  a) API stability  b) Internet speed  c) Documentation relevance Check <p>\ud83d\ude80 Chapter summary: Postman is your universal \"control panel\" for API testing. With it you will: - Check the operation of \"onboard systems\" before launch - Create a library of test scenarios - Automate the monitoring of space services</p> <p>\ud83d\udccc Practical task:</p> <ol> <li>Install Postman</li> <li>Create a request to the SpaceX API: <code>GET https://api.spacexdata.com/v4/launches/latest</code></li> <li>Write a test that checks that:</li> <li>The response status is <code>200</code></li> <li>The <code>name</code> field contains the word \"Falcon\"</li> <li>The response time is &lt; 500 ms</li> </ol> <p>Congratulations on completing Chapter 1!</p> <p>You have mastered the basics of working with APIs. In the following chapters, we will build our own \"spaceship\" - a web application that uses space APIs!</p> <p>\ud83c\udf0c Additional resources:</p> <ul> <li>SpaceX API Documentation</li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/","title":"Chapter 2.1: Preparing the Laravel Environment","text":""},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/#study-time-1-2-hours","title":"Study time: 1-2 hours","text":""},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/#1-why-do-you-need-a-local-environment","title":"1. Why do you need a local environment?","text":"<p>Imagine you are building a space probe. Before launching it into space, you test all systems on Earth. A local environment is your \"control laboratory\" for code:</p> <ul> <li>Safe experiments without affecting the production server</li> <li>Fast deployment of dependencies</li> <li>Easy switching between software versions</li> </ul> <p>\ud83d\udca1 Space analogy: Herd = Mobile launch complex Docker = Space station simulator XAMPP = Stationary test stand</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/#2-installing-herd","title":"2. Installing Herd","text":"<p>Herd is a modern tool for managing a PHP environment (similar to Laravel Valet).</p> <p>Installation steps:</p> <ol> <li>Download the installer: herd.laravel.com</li> <li>Run <code>Herd Installer.exe</code> \u2192 Next \u2192 Install</li> <li>After installation:<ul> <li>Open Herd from the Start menu. The application icon will appear in the system tray (next to the clock).</li> <li>Click on the Herd icon: make sure that Nginx and the required version of PHP (e.g., 8.3) are running (marked with a green dot).</li> <li>Go to Herd Paths and add the folder where your projects will be stored (e.g., C:\\Users\\YourUser\\Code). Herd will automatically create a nice domain like <code>folder-name.test</code> for each subdirectory in this folder.</li> </ul> </li> </ol> <p>\u26a0\ufe0f Important! During installation: - Allow network access (if requested by the firewall) - Check the path in PATH: <code>C:\\Program Files\\Herd\\bin</code></p> <p>Checking the work:</p> <ol> <li>Click on the Herd icon in the system tray.</li> <li>Make sure that the Nginx and PHP services are active (green indicators).</li> <li>In your projects folder (e.g., C:\\Users\\YourUser\\Code), create a <code>test</code> folder, and inside it, an <code>index.php</code> file with the content <code>&lt;?php phpinfo(); ?&gt;</code>.</li> <li>In Herd, via the <code>sites</code> tab, specify the path to the <code>test</code> folder and click \"Add site\".</li> <li>Open http://test.test in your browser. You should see a page with PHP information.</li> </ol>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/#3-alternative-methods-briefly","title":"3. Alternative methods (briefly)","text":"Tool For whom Pros Cons Laravel Sail (Docker) For all levels Complete isolation, environment reproducibility, official Laravel support Requires Docker installation, consumes more resources XAMPP Beginners All-in-One installer Cumbersome, harder to manage software versions, clutters the system Laragon Windows developers Fast, easy to switch versions, automatic host configuration Requires manual web server restart when adding a new project <p>Example with Docker (Laravel Sail): <pre><code># After installing Docker\n./vendor/bin/sail up\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/#4-installing-php-and-composer","title":"4. Installing PHP and Composer","text":"<p>If you are not using Herd:</p> <ol> <li>PHP:<ul> <li>Download PHP 8.3 for Windows</li> <li>Unpack to <code>C:\\PHP</code></li> <li>Add to PATH:  <pre><code># It is recommended to run in PowerShell as an administrator\n[Environment]::SetEnvironmentVariable(\"Path\", \"$env:Path;C:\\PHP\", \"User\")\n</code></pre></li> </ul> </li> <li>Composer:<ul> <li>Run Composer-Setup.exe</li> <li>Check:  <pre><code>php -v\ncomposer --version\n</code></pre></li> </ul> </li> </ol>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/#5-installing-postgresql","title":"5. Installing PostgreSQL","text":"<p>For working with databases:</p> <ol> <li>Download PostgreSQL 15</li> <li>Run the installer:</li> <li>Password for the superuser: <code>admin</code> (or your own)</li> <li>Port: <code>5432</code> (standard)</li> <li>After installation:</li> <li>Open pgAdmin 4 (graphical client) <p>You can use any other client to work with the database, for example, DBeaver, DataGrip, or even the command line. I prefer DBeaver - but it's a matter of taste</p> </li> <li>Create a database for the project: <code>space_api</code></li> </ol>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/#6-installing-laravel","title":"6. Installing Laravel","text":"<ol> <li> <p>Via Composer: <pre><code>composer create-project laravel/laravel space-api\ncd space-api\n</code></pre></p> </li> <li> <p>Initialize Git (optional): <pre><code>git init\ngit add .\ngit commit -m \"Start of the space project\"\n</code></pre></p> </li> <li> <p>Starting and checking the server:</p> <p>If you are using Herd: Make sure your <code>space-api</code> project is in the folder you added to Herd. Open in your browser: http://space-api.test You should see the Laravel start page. The server is already running thanks to Herd!</p> </li> </ol> <p>If you are NOT using Herd (manual installation): <pre><code>php artisan serve\n</code></pre> Open in your browser: http://localhost:8000 \u2192 The Laravel start page should appear!</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/#when-creating-a-project-in-herd","title":"When creating a project in Herd:","text":"<p>Just follow the on-screen instructions. For convenience, the project name will be <code>space-api</code>. Any starter kit will do, but I prefer React.</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/#be-sure-to-turn-on-phpunit-we-will-need-it-later","title":"Be sure to turn on phpunit - we will need it later","text":""},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/#7-project-setup","title":"7. Project setup","text":"<p>Important files:</p> <ul> <li><code>.env</code> \u2014 environment settings (keys, databases)</li> <li><code>config/database.php</code> \u2014 DBMS configuration</li> <li><code>composer.json</code> \u2014 PHP dependencies</li> </ul> <p>Connecting the database to the project:</p> <p>Add to <code>.env</code>:</p> <pre><code>DB_CONNECTION=pgsql\nDB_HOST=127.0.0.1\nDB_PORT=5432\nDB_DATABASE=space_api\nDB_USERNAME=postgres # Login for postgres\nDB_PASSWORD=admin # Password for postgres\n</code></pre> <p>First Artisan commands: <pre><code>php artisan key:generate  # Generate application key\nphp artisan migrate:fresh # Database migration (When switching to postgres)\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/#quiz-to-consolidate","title":"Quiz to consolidate","text":"<p>1. Herd is...</p>  a) A tool for managing a PHP environment  b) A code editor  c) An operating system <p>2. What tool does Laravel use to manage PHP dependencies?</p>  a) npm  b) Composer  c) Artisan <p>3. The standard port for PostgreSQL is:</p>  a) 3306  b) 5432  c) 8000 <p>4. The command to create a Laravel project via Composer is:</p>  a) composer create-laravel  b) laravel new  c) composer create-project laravel/laravel <p>5. The file with environment settings is?</p>  a) .env  b) config.php  c) settings.ini Check"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/1/#chapter-summary","title":"\ud83d\ude80 Chapter summary","text":"<p>You have deployed a \"launch pad\" for the space API! Now you have:</p> <ul> <li>\ud83d\udee0\ufe0f A local environment (Herd or manual installation) with PHP and Nginx</li> <li>\ud83d\udc18 An installed PostgreSQL database server</li> <li>\ud83d\ude80 A <code>space-api</code> Laravel project</li> <li>\ud83d\udd0c A configured database connection</li> </ul> <p>\ud83d\udccc Check:</p> <ul> <li>If you are using Herd: Make sure the site opens at <code>http://space-api.test</code>.</li> <li>If you are not using Herd: Make sure the <code>php artisan serve</code> command works and the site opens at <code>http://localhost:8000</code>.</li> <li>In any case, check that the created <code>space_api</code> database is visible in <code>pgAdmin 4</code>.</li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/2/","title":"Chapter 2.2: Creating the Planet Model","text":"<p>Time to learn: 45 minutes</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/2/#1-the-model-in-laravel-a-blueprint-for-a-celestial-object","title":"1. The Model in Laravel: A Blueprint for a Celestial Object","text":"<p>In the MVC (Model-View-Controller) architecture, the model is:</p> <ul> <li>\ud83d\udce6 A container for data (planet parameters)</li> <li>\ud83d\udd0c An interface for working with the database</li> <li>\ud83d\udee1\ufe0f The center of the application's business logic</li> </ul> <p>\ud83d\udca1 Space Analogy: The <code>Planet</code> model = A planet's blueprint in the Mission Control Center's computer. With it, you can:</p> <ul> <li>Create a new planet in the catalog (<code>INSERT</code>)</li> <li>Get data about Mars (<code>SELECT</code>)</li> <li>Update information about the atmosphere (<code>UPDATE</code>)</li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/2/#2-creating-a-model-and-migration","title":"2. Creating a Model and Migration","text":"<p>Laravel uses the Artisan CLI\u2014your project's \"control panel.\"</p> <p>Step 1: Generating the model with a migration <pre><code>php artisan make:model Planet -m\n</code></pre></p> <p>What was created: <pre><code>app/\n  \u2514\u2500\u2500 Models/\n      \u2514\u2500\u2500 Planet.php    \u2190 Model\ndatabase/\n  \u2514\u2500\u2500 migrations/\n      \u2514\u2500\u2500 2025_08_04_000000_create_planets_table.php  \u2190 Migration\n</code></pre></p> <p>Artisan Flags:</p> <ul> <li><code>-m</code> \u2192 Create a migration</li> <li><code>-c</code> \u2192 Create a controller</li> <li><code>-r</code> \u2192 Resource controller</li> </ul> <p>\ud83d\udca1 Pro Tip: These flags can be combined for maximum efficiency. The command <code>php artisan make:model Planet -mcr</code> will create a model, a migration, and a resource controller to manage that model all at once. This saves a lot of time.</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/2/#3-configuring-the-planet-model","title":"3. Configuring the Planet Model","text":"<p>Open <code>app/Models/Planet.php</code>: <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Planet extends Model\n{\n    // Table name (default: 'planets')\n    // Laravel automatically assumes the table name is the plural, snake_case version of the model name (Planet -&gt; planets).\n    // Therefore, this property isn't strictly necessary here, but it's useful for clarity.\n    protected $table = 'planets';\n\n    // The attributes that are mass assignable.\n    protected $fillable = [\n        'name',\n        'description',\n        'size_km',\n        'solar_system',\n        'image_url'\n    ];\n\n    // The attributes that should be cast.\n    protected $casts = [\n        'size_km' =&gt; 'integer'\n    ];\n}\n</code></pre></p> <p>Property Explanation:</p> Property Meaning Example Data <code>$table</code> Table name in the DB <code>planets</code> <code>$fillable</code> Fields for mass assignment <code>name</code>, <code>size_km</code> <code>$casts</code> Automatic type casting <code>size_km: integer</code>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/2/#4-designing-the-planets-table","title":"4. Designing the Planets Table","text":"<p>Before editing the migration, let's define the \"planet\" structure:</p> Field Data Type Description Example Value <code>id</code> BIGINT (PK) Unique ID 1 <code>name</code> VARCHAR(255) Planet's name \"Mars\" <code>description</code> TEXT Description \"The Red Planet...\" <code>size_km</code> INTEGER Diameter in km 6779 <code>solar_system</code> VARCHAR(100) Solar system \"Solar System\" <code>image_url</code> VARCHAR(2048) Photo URL (can be null) \"https://...\" <code>created_at</code> TIMESTAMP Creation date 2025-08-04 12:00:00 <code>updated_at</code> TIMESTAMP Update date 2025-08-05 09:30:00"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/2/#5-editing-the-migration","title":"5. Editing the Migration","text":"<p>Open the migration file in <code>database/migrations/..._create_planets_table.php</code>:</p> <pre><code>&lt;?php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreatePlanetsTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('planets', function (Blueprint $table) {\n            $table-&gt;id(); // BIGINT auto-increment\n\n            $table-&gt;string('name')-&gt;unique();\n            $table-&gt;text('description');\n            $table-&gt;integer('size_km');\n            $table-&gt;string('solar_system', 100);\n            $table-&gt;string('image_url', 2048)-&gt;nullable();\n\n            $table-&gt;timestamps(); // created_at + updated_at\n        });\n    }\n\n    public function down()\n    {\n        Schema::dropIfExists('planets');\n    }\n}\n</code></pre> <p>Key Points:</p> <ul> <li><code>-&gt;unique()</code> \u2192 Ensures names are unique</li> <li><code>-&gt;nullable()</code> \u2192 The field can be empty</li> <li><code>timestamps()</code> \u2192 Automatic date management</li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/2/#6-running-the-migration-preview","title":"6. Running the Migration (Preview)","text":"<p>Although we'll run this in Chapter 2.3, let's see what it looks like: <pre><code>php artisan migrate\n</code></pre></p> <p>Expected Output: <pre><code>Migrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (32.15ms)\n</code></pre></p> <p>Checking in pgAdmin 4:</p> <ol> <li>Open the <code>space_api</code> database \u2192 Schemas \u2192 Tables</li> <li>The <code>planets</code> table should appear with your fields</li> </ol>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/2/#7-alternative-approach-code-generators","title":"7. Alternative Approach: Code Generators","text":"<p>To speed up development, you can use packages:</p> <ul> <li>Laravel Blueprint - creates models/migrations from a YAML definition</li> <li>InfyOm Laravel Generator - a generator based on a DB schema</li> </ul> <p>Blueprint Example: <pre><code>models:\n  Planet:\n    name: string:255\n    description: text\n    size_km: integer\n    solar_system: string:100\n    image_url: string:2048? # The '?' character means the field is nullable\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/2/#review-quiz","title":"Review Quiz","text":"<p>1. The Artisan command to create a model and its associated migration is:</p>  a) php artisan make:model Planet -m  b) php artisan create:model Planet  c) php artisan model:new Planet --m <p>2. The `$fillable` property in a model is used for:</p>  a) Protection against mass assignment  b) Automatic data encryption  c) Describing foreign keys <p>3. `nullable()` in a migration means:</p>  a) The field is required  b) The field can be empty  c) The field will be deleted <p>4. The field type for a long planet description is:</p>  a) string  b) text  c) varchar <p>5. The `timestamps()` method creates:</p>  a) Only created_at  b) created_at and updated_at  c) id, created_at, updated_at Check <p>\ud83d\ude80 Chapter Summary: You've created a \"digital twin\" of a planet! Your project now has:</p> <ul> <li>\ud83e\ude90 A <code>Planet</code> model with business logic</li> <li>\ud83d\udcca A migration for the <code>planets</code> table in PostgreSQL</li> <li>\ud83d\udee0\ufe0f Configured model properties (<code>fillable</code>, <code>casts</code>)</li> </ul> <p>Get the database ready! In the next chapter, we will run the migration and populate the universe with its first planets.</p> <p>\ud83d\udccc Checkpoint:</p> <p>Make sure the <code>Planet.php</code> and <code>..._create_planets_table.php</code> files are created in the correct directories.</p> <p>\u26a0\ufe0f If Artisan gives an error:</p> <ul> <li>Check that you are in the project folder</li> <li>Make sure dependencies are installed (<code>composer install</code>)</li> <li>For Windows: add PHP and Composer to your PATH</li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/3/","title":"Chapter 2.3: Database Migrations","text":"<p>Time to learn: 50 minutes</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/3/#1-migrations-building-the-space-station","title":"1. Migrations: Building the Space Station","text":"<p>Migrations in Laravel are a version control system for your database.</p> <p>Imagine that you:</p> <ol> <li>\ud83c\udfd7\ufe0f Create a blueprint for the station (the <code>create_planets_table</code> migration)</li> <li>\ud83d\ude80 Deploy the modules (run the migrations)</li> <li>\ud83d\udd27 Upgrade the structure (new migrations)</li> <li>\u23ea Can roll back to a previous version (rollback)</li> </ol> <p>\ud83d\udca1 Important: Migrations allow a team to work in a coordinated way\u2014like engineers on different continents building the ISS!</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/3/#2-running-migrations","title":"2. Running Migrations","text":"<p>After creating the migration in Chapter 2.2, execute: <pre><code>php artisan migrate\n</code></pre></p> <p>Output in the terminal: <pre><code>Migration table created successfully.\nMigrating: 2014_10_12_000000_create_users_table\nMigrated:  2014_10_12_000000_create_users_table (25.12ms)\nMigrating: 2014_10_12_100000_create_password_reset_tokens_table\nMigrated:  2014_10_12_100000_create_password_reset_tokens_table (18.07ms)\nMigrating: 2019_08_19_000000_create_failed_jobs_table\nMigrated:  2019_08_19_000000_create_failed_jobs_table (21.33ms)\nMigrating: 2019_12_14_000001_create_personal_access_tokens_table\nMigrated:  2019_12_14_000001_create_personal_access_tokens_table (30.45ms)\nMigrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (15.67ms)  # Your table!\n</code></pre></p> <p>Checking in pgAdmin 4:</p> <ol> <li>Open the <code>space_api</code> database \u2192 Schemas \u2192 Tables</li> <li>Make sure the following have appeared: - <code>planets</code> - <code>users</code> - <code>password_reset_tokens</code></li> </ol>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/3/#3-rolling-back-migrations-emergency-return","title":"3. Rolling Back Migrations: Emergency Return","text":"<p>If you need to correct the structure: <pre><code>php artisan migrate:rollback  # Roll back the last batch of migrations\n</code></pre> <pre><code>php artisan migrate:reset    # Completely roll back all migrations\n</code></pre></p> <ul> <li><code>php artisan migrate:fresh</code> \u2014 the most useful command in development! It drops all tables and re-runs all migrations.</li> <li><code>php artisan migrate:fresh --seed</code> \u2014 does the same as <code>fresh</code>, but also runs seeders immediately after migrating. This is the command for a complete \"rebuild\" of the database from scratch.</li> </ul> <p>Usage Scenario: <pre><code># Step 1: Realized there's an error in the migration. Completely rebuild the database.\nphp artisan migrate:fresh\n# Step 2: Edit the migration file\n# Step 3: Rebuild the database again with the corrected migration\nphp artisan migrate:fresh\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/3/#4-adding-new-fields-upgrading-the-station","title":"4. Adding New Fields: Upgrading the Station","text":"<p>Example: Let's add an <code>is_habitable</code> field.</p> <p>Step 1: Create a new migration <pre><code>php artisan make:migration add_is_habitable_to_planets_table\n</code></pre></p> <p>Step 2: Edit the file <code>database/migrations/..._add_is_habitable_to_planets_table.php</code> <pre><code>&lt;?php\npublic function up()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;boolean('is_habitable')\n              -&gt;default(false);\n    });\n}\n\npublic function down()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;dropColumn('is_habitable');\n    });\n}\n</code></pre></p> <p>Step 3: Run the update <pre><code>php artisan migrate\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/3/#5-seeding-the-database-the-first-planets","title":"5. Seeding the Database: The First Planets","text":"<p>We create a Seeder\u2014a script for generating test data.</p> <p>Step 1: Generate the seeder <pre><code>php artisan make:seeder PlanetSeeder\n</code></pre></p> <p>Step 2: Edit <code>database/seeders/PlanetSeeder.php</code> <pre><code>&lt;?php\nuse App\\Models\\Planet; // Import the Planet model - you'll get an error without it!\n\n\nclass PlanetSeeder extends Seeder\n{\n    public function run()\n    {\n        Planet::create([\n            'name' =&gt; 'Earth',\n            'description' =&gt; 'A blue planet with diverse life',\n            'size_km' =&gt; 12742,\n            'solar_system' =&gt; 'Solar System',\n            'image_url' =&gt; 'https://example.com/earth.jpg',\n            'is_habitable' =&gt; true\n        ]);\n\n        Planet::create([\n            'name' =&gt; 'Mars',\n            'description' =&gt; 'The red planet, a target for future colonization',\n            'size_km' =&gt; 6779,\n            'solar_system' =&gt; 'Solar System',\n            'is_habitable' =&gt; false\n        ]);\n    }\n}\n</code></pre></p> <p>Step 3: Register the seeder in <code>database/seeders/DatabaseSeeder.php</code> <pre><code>&lt;?php\npublic function run()\n{\n    $this-&gt;call([\n        PlanetSeeder::class\n    ]);\n}\n</code></pre></p> <p>Step 4: Run the seeder <pre><code>php artisan db:seed\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/3/#6-working-with-postgresql-specifics","title":"6. Working with PostgreSQL: Specifics","text":"<p>Data Type Peculiarities:</p> Feature PostgreSQL MySQL Laravel Comment Boolean Type <code>boolean</code> (true <code>true</code>/<code>false</code>) <code>tinyint(1)</code> (stores <code>0</code>/<code>1</code>) <code>$table-&gt;boolean('...')</code> works for both JSON <code>jsonb</code> (binary, indexable) <code>json</code> (text-based) <code>$table-&gt;jsonb('...')</code> - very powerful in PG Arrays <code>text[]</code>, <code>integer[]</code> (native arrays) No (emulated via JSON or strings) <code>$table-&gt;array('...')</code> (PG exclusive) Column Order Cannot be controlled (<code>after()</code> doesn't work) Can be controlled (<code>after()</code>) Laravel abstracts this, but you need to know the limitation <p>Example of creating an index: <pre><code>// In a migration\n$table-&gt;index('solar_system');\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/3/#7-verifying-data-in-psql","title":"7. Verifying Data in psql","text":"<p>You can use any graphical client and select <code>space_api</code> to view it.</p> <p>If using the console: <pre><code>psql -U postgres -d space_api\n# The terminal may ask for the password you set during the PostgreSQL installation.\n</code></pre> <pre><code>SELECT * FROM planets;\n</code></pre></p> <p>In either case, the output should be as follows:</p> id name description size_km solar_system image_url is_habitable 1 Earth A blue planet with diverse life 12742 Solar System ... true 2 Mars The red planet, a target for future colonization 6779 Solar System null false"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/3/#review-quiz","title":"Review Quiz","text":"<p>1. The command to run migrations is:</p>  a) php artisan migrate:run  b) php artisan migrate  c) php artisan db:migrate <p>2. How do you roll back the last migration?</p>  a) migrate:undo  b) migrate:rollback  c) migrate:reset <p>3. Seeders are used for:</p>  a) Deleting tables  b) Populating the DB with test data  c) Creating models <p>4. The method for adding a column to an existing table is:</p>  a) Schema::addColumn()  b) Schema::table()  c) Schema::modify() <p>5. Where are seeders registered?</p>  a) DatabaseSeeder.php  b) .env  c) config/database.php Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have mastered \"building cosmic infrastructure\":</p> <ul> <li>\u2705 Created and ran migrations</li> <li>\ud83d\udd27 Upgraded the table structure</li> <li>\ud83c\udf0d Populated the DB with the first planets</li> <li>\u2699\ufe0f Learned to work with PostgreSQL</li> </ul> <p>Your universe has gained its first worlds! Now you can move on to creating API interfaces to manage the planets.</p> <p>\ud83d\udccc Checkpoint:</p> <ol> <li>Run <code>php artisan tinker</code></li> <li>Execute <code>App\\Models\\Planet::all()</code></li> <li>Make sure you see Earth and Mars</li> </ol>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/4/","title":"Chapter 2.4: The PlanetController API Controller","text":"<p>Time to learn: 1 hour</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/4/#1-the-controller-mission-control-for-celestial-objects","title":"1. The Controller: Mission Control for Celestial Objects","text":"<p>In the MVC architecture, the controller is the intermediary between models and requests:</p> <ul> <li>\ud83d\udce1 It receives HTTP requests (GET, POST, PUT, DELETE)</li> <li>\ud83d\udd0d It retrieves data from the database via models</li> <li>\ud83d\udce6 It formats JSON responses for the API</li> </ul> <p>\ud83d\udca1 Space Analogy: <code>PlanetController</code> = The mission's MCC (Mission Control Center):</p> <ul> <li>It receives requests from Earth (<code>GET /planets</code>)</li> <li>It sends commands to the \"probes\" (models)</li> <li>It returns telemetry in JSON format</li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/4/#2-creating-a-resource-controller","title":"2. Creating a Resource Controller","text":"<p>A resource controller automatically includes methods for CRUD operations.</p> <p>Step 1: Generate the controller <pre><code>php artisan make:controller PlanetController --api --model=Planet\n</code></pre></p> <p>What will be created in <code>app/Http/Controllers/PlanetController.php</code>: <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Planet;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Validation\\Rule; // Don't forget to add this import\n\nclass PlanetController extends Controller\n{\n    // Display a listing of the planets.\n    public function index(Request $request) {}\n\n    // Store a newly created planet in storage.\n    public function store(Request $request) {}\n\n    // Display the specified planet.\n    public function show(Planet $planet) {}\n\n    // Update the specified planet in storage.\n    public function update(Request $request, Planet $planet) {}\n\n    // Remove the specified planet from storage.\n    public function destroy(Planet $planet) {}\n}\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/4/#3-implementing-the-api-methods","title":"3. Implementing the API Methods","text":"<p>A. <code>index()</code> - Get a list of planets <pre><code>&lt;?php\npublic function index(Request $request)\n{\n    // Get planets with pagination, 15 per page\n    $planets = Planet::paginate($request-&gt;get('per_page', 15));\n    return response()-&gt;json($planets); // Automatically 200 OK\n}\n</code></pre></p> <p>B. <code>store()</code> - Create a new planet <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    $planet = Planet::create($data);\n    return response()-&gt;json($planet, 201); // 201 Created\n}\n</code></pre></p> <p>C. <code>show()</code> - View a single planet <pre><code>&lt;?php\npublic function show(Planet $planet)\n{\n    return response()-&gt;json($planet); // Automatic 200 OK\n}\n</code></pre></p> <p>D. <code>update()</code> - Update a planet <pre><code>&lt;?php\npublic function update(Request $request, Planet $planet)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; [\n            'string',\n            'max:255',\n            Rule::unique('planets')-&gt;ignore($planet-&gt;id),\n        ],\n        'description' =&gt; 'sometimes|string', // 'sometimes' - validate only if the field is present\n        'size_km' =&gt; 'sometimes|integer|min:100',\n        'solar_system' =&gt; 'sometimes|string|max:100',\n        'image_url' =&gt; 'sometimes|nullable|url',\n        'is_habitable' =&gt; 'sometimes|boolean'\n    ]);\n\n    $planet-&gt;update($data);\n    return response()-&gt;json($planet); // 200 OK\n}\n</code></pre></p> <p>E. <code>destroy()</code> - Delete a planet <pre><code>&lt;?php\npublic function destroy(Planet $planet)\n{\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204); // 204 No Content\n}\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/4/#4-route-model-binding","title":"4. Route Model Binding","text":"<p>Laravel automatically injects the planet object based on the ID: <pre><code>// In the route: GET /planets/{planet}\n// In the method: show(Planet $planet)\n</code></pre></p> <ul> <li>If the planet is not found \u2192 automatic 404</li> <li>No need for manual <code>findOrFail()</code> queries</li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/4/#5-formatting-responses","title":"5. Formatting Responses","text":"<p>Example of an improved response for <code>index()</code>: <pre><code>&lt;?php\npublic function index()\n{\n    return response()-&gt;json([\n        'success' =&gt; true,\n        'data' =&gt; Planet::all(),\n        'message' =&gt; 'Planets successfully retrieved'\n    ]);\n}\n</code></pre></p> <p>Response for a 404 error (automatic): <pre><code>{\n    \"message\": \"No query results for model [App\\\\Models\\\\Planet] 123\",\n    \"exception\": \"Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\NotFoundHttpException\"\n}\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/4/#review-quiz","title":"Review Quiz","text":"<p>1. The flag for creating an API controller is:</p>  a) --api  b) --resource  c) --model <p>2. What status should be returned upon successful creation?</p>  a) 200 OK  b) 201 Created  c) 204 No Content <p>3. Route Model Binding allows you to:</p>  a) Automatically fetch an object by its ID  b) Generate HTML forms  c) Cache requests <p>4. When deleting a planet, we return:</p>  a) JSON with the planet's data  b) null with a 204 status code  c) An empty string <p>5. `$request-&gt;validate()` is used for:</p>  a) Validating input data  b) Encrypting requests  c) Caching responses Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have created the \"control panel\" for the planetary system! Your controller can now:</p> <ul> <li>\ud83c\udf0c Show a list of planets (<code>index</code>)</li> <li>\ud83e\ude90 Create new worlds (<code>store</code>)</li> <li>\ud83d\udd2d Detail a planet's data (<code>show</code>)</li> <li>\ud83d\udee0\ufe0f Update information (<code>update</code>)</li> <li>\ud83d\udca5 Destroy planets (<code>destroy</code>)</li> </ul> <p>All that's left is to define the routes! In the next chapter, we will connect the controller to the API routes.</p> <p>\ud83d\udccc Checkpoint:</p> <p>Make sure you have <code>PlanetController.php</code> in <code>app/Http/Controllers</code> with 5 methods.</p> <p>\u26a0\ufe0f If you have errors:</p> <ul> <li>Check the model name: <code>use App\\Models\\Planet;</code></li> <li>Check the imports</li> <li>For PostgreSQL: make sure <code>Planet::all()</code> returns data</li> <li>If you have problems with Tinker: run <code>composer dump-autoload</code></li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/5/","title":"Chapter 2.5: API Routes","text":"<p>Time to learn: 45 minutes</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/5/#1-what-is-a-route-a-simple-explanation","title":"1. What is a Route? A Simple Explanation","text":"<p>Imagine your controller (<code>PlanetController</code>) is a large office building, and each of its methods (<code>index</code>, <code>store</code>, <code>show</code>) is a separate department doing its job.</p> <p>A Route is the directory sign at the building's entrance. It says:</p> <ul> <li>\"If someone arrives at the <code>/planets</code> address with a GET method \u2014 send them to the <code>index</code> department (show all).\"</li> <li>\"If someone arrives at the <code>/planets</code> address with a POST method carrying a package (data) \u2014 send them to the <code>store</code> department (create new).\"</li> </ul> <p>Without routes, no request from the outside world would find the right department in your code. The main file for these \"address signs\" in an API is <code>routes/api.php</code>.</p> <p>In Laravel 11+, there is no \"API address book\" by default. We created it ourselves by running the <code>php artisan install:api</code> command. Now we have the <code>routes/api.php</code> file\u2014this is the main control center for all our API's routes.</p> <p>The key difference between <code>api.php</code> and <code>web.php</code>:</p> <ul> <li><code>/api</code> prefix: Laravel automatically adds <code>/api</code> to all URLs from this file. The <code>/planets</code> route becomes <code>/api/planets</code>.</li> <li>\"Stateless\": There are no sessions or cookies here like in a regular web application. Each request is independent and must contain all the information needed for authentication (usually an API token in the headers).</li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/5/#2-the-beginners-path-creating-a-route-manually","title":"2. The Beginner's Path: Creating a Route Manually","text":"<p>Let's create a single route by hand to understand the principle. Our goal is to make the <code>/api/planets</code> URL show a list of all planets.</p> <p>Open <code>routes/api.php</code> and write:</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController; // Specify where our controller is\n\n//                    (1)           (2)                     (3)\nRoute::get(      '/planets',    [PlanetController::class, 'index']     );\n//   ^               ^                       ^\n// (HTTP Method)   (URL Address)          (Which controller and method to call)\n</code></pre> <p>Let's break down this line:</p> <ol> <li><code>Route::get(...)</code> \u2014 We are saying: \"This route only works for GET requests.\"</li> <li><code>'/planets'</code> \u2014 This is the URL that Laravel will listen for. With the <code>/api</code> prefix, the full address will be <code>http://space-api.test/api/planets</code>.</li> <li><code>[PlanetController::class, 'index']</code> \u2014 This is the \"destination.\" We are saying: \"When the request comes in, find the <code>PlanetController</code> class and call the <code>index()</code> method within it.\"</li> </ol> <p>Now everything is connected! Request -&gt; Route -&gt; Controller -&gt; Method.</p> <p>What if we need to get a single planet by its ID? For example, <code>/api/planets/5</code>.</p> <pre><code>// Route to get a specific planet\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n</code></pre> <p>Here, <code>{planet}</code> is a \"wildcard\" or variable. Laravel understands that anything can be in its place (an ID, a slug). It then passes this value to the <code>show(Planet $planet)</code> method. This \"magic,\" where Laravel finds the planet by its ID automatically, is called Route Model Binding.</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/5/#3-the-masters-path-apiresourceone-line-to-rule-them-all","title":"3. The Master's Path: <code>apiResource</code>\u2014One Line to Rule Them All","text":"<p>Creating each route manually (for <code>index</code>, <code>show</code>, <code>store</code>, <code>update</code>, <code>destroy</code>) is tedious. The developers of Laravel understand this, so they created a powerful helper: <code>apiResource</code>.</p> <p>Delete everything we wrote and replace it with a single line:</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController;\n\nRoute::apiResource('planets', PlanetController::class);\n</code></pre> <p>What does this one line do under the hood? It automatically creates a whole set of routes for the standard CRUD operations that we have already implemented in the controller.</p> Method URL Dispatches to Method Purpose GET <code>/api/planets</code> <code>index()</code> Get a list of all planets POST <code>/api/planets</code> <code>store()</code> Create a new planet GET <code>/api/planets/{planet}</code> <code>show()</code> Show one specific planet PUT/PATCH <code>/api/planets/{planet}</code> <code>update()</code> Update an existing planet DELETE <code>/api/planets/{planet}</code> <code>destroy()</code> Delete a planet <p>You can see for yourself. Run this command in your terminal:</p> <pre><code>php artisan route:list --path=api\n</code></pre> <p>You will see a table with all the created routes. <code>apiResource</code> is your best friend for saving time when creating standard APIs.</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/5/#4-special-missions-and-route-order","title":"4. Special Missions and Route Order","text":"<p>What if we need a custom route that isn't in <code>apiResource</code>? For example, to get a random planet at <code>/api/planets/random</code>.</p> <p>Let's add it. But there is a critically important trap here that 9 out of 10 beginners fall into.</p> <p>Incorrect Order (DOES NOT WORK!): <pre><code>Route::apiResource('planets', PlanetController::class);\nRoute::get('/planets/random', [PlanetController::class, 'random']); // &lt;-- WILL NOT WORK\n</code></pre> Why? Laravel reads routes from top to bottom. It will see <code>Route::apiResource</code>, which created the <code>GET /planets/{planet}</code> route. When you request <code>/planets/random</code>, Laravel will think that \"random\" is the ID of a planet, try to find a planet with the ID \"random\" in the database, and you will get an error.</p> <p>Correct Order (WORKS!): <pre><code>&lt;?php\nuse App\\Http\\Controllers\\PlanetController;\nuse Illuminate\\Support\\Facades\\Route;\n\n// 1. Declare SPECIFIC routes first\nRoute::get('/planets/random', [PlanetController::class, 'random']);\n\n// 2. Then, declare GENERAL routes with variables\nRoute::apiResource('planets', PlanetController::class);\n</code></pre></p> <p>The Rule: Always declare more specific routes (like <code>/random</code>) before more general and wildcard routes (like <code>/{planet}</code>).</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/5/#important","title":"\u26a0\ufe0f Important!","text":"<p>To test the <code>api/planets/random</code> route, you need to add a new handler in <code>PlanetController</code>:</p> <pre><code>&lt;?php\npublic function random(Request $request)\n{\n   $planet = Planet::inRandomOrder()-&gt;first();\n   return response()-&gt;json($planet);\n}\n</code></pre>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/5/#5-grouping-bringing-order","title":"5. Grouping: Bringing Order","text":"<p>When you have many routes, you can and should group them.</p> <p>A. API Versioning To avoid breaking old applications that use your API in the future, it is common practice to add a version to the URL, for example, <code>/api/v1/...</code>.</p> <pre><code>&lt;?php\nRoute::prefix('v1')-&gt;group(function () {\n    // All routes within this group will get the /v1 prefix\n    // Final URL: /api/v1/planets\n    Route::get('/planets/random', [PlanetController::class, 'random']);\n    Route::apiResource('planets', PlanetController::class);\n});\n</code></pre> <p>B. Protecting Routes (Middleware) Imagine that anyone can view planets, but only authenticated users can create, update, and delete them.</p> <pre><code>&lt;?php\n// Public routes, accessible to everyone\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// Group of routes requiring a \"pass\" (authentication)\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n});\n</code></pre> <p>Here, <code>middleware('auth:sanctum')</code> is like a security guard who checks the \"pass\" of everyone trying to access the routes within the group.</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/5/#6-testing-with-postman","title":"6. Testing with Postman","text":"<p>Now that all the routes are laid out, it's time to test them.</p> <ol> <li>If you are using Herd: Your site is already running at an address like <code>http://space-api.test</code>.</li> <li>If not: Start the local server with the command <code>php artisan serve</code>. The address will be <code>http://localhost:8000</code>.</li> </ol> <p>Open Postman and send the requests:</p> <ul> <li><code>GET http://space-api.test/api/planets</code></li> <li><code>GET http://space-api.test/api/planets/random</code></li> <li><code>POST http://space-api.test/api/planets</code> (don't forget to add a JSON request body in the <code>Body</code> -&gt; <code>raw</code> -&gt; <code>JSON</code> tab).</li> </ul> <p>Example POST request: <pre><code>{\n    \"name\": \"Kepler-186f\",\n    \"description\": \"The first Earth-sized planet in the habitable zone\",\n    \"size_km\": 15000,\n    \"solar_system\": \"Kepler-186\",\n    \"is_habitable\": true\n}\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/5/#7-common-routing-errors","title":"7. Common Routing Errors","text":"<ol> <li>404 Not Found <ul> <li>Incorrect URL (<code>/api/planet</code> instead of <code>/api/planets</code>)</li> <li>Forgot to run <code>php artisan serve</code></li> </ul> </li> <li>405 Method Not Allowed <ul> <li>Incorrect HTTP method (e.g., GET instead of POST)</li> </ul> </li> <li>Missing Controller <ul> <li>Typo in the controller name (<code>PlanetControler</code>)</li> </ul> </li> <li>Route Name Collision <ul> <li>Duplicate route names</li> </ul> </li> </ol>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/5/#review-quiz","title":"Review Quiz","text":"<p>1. The file for API routes in Laravel is:</p>  a) routes/web.php  b) routes/api.php  c) routes/console.php <p>2. The automatic prefix for API routes is:</p>  a) /admin  b) /api  c) /v1 <p>3. The method to create 5 CRUD routes is:</p>  a) Route::api()  b) Route::resource()  c) Route::apiResource() <p>4. `Route::prefix('v1')` is used for:</p>  a) Authentication  b) API Versioning  c) Caching <p>5. To view all routes:</p>  a) php artisan route:list  b) php artisan list:routes  c) php routes Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have built the \"hyperspace routes\" for the space API! Now:</p> <ul> <li>\ud83d\uddfa\ufe0f All endpoints are accessible via <code>/api/...</code></li> <li>\ud83d\udd17 Resource routes are connected to the controller</li> <li>\ud83d\udee1\ufe0f Custom routes for special operations have been added</li> <li>\u2705 The routes have been tested with Postman</li> </ul> <p>The universe is open for requests! Next, we will add protection against \"space debris\"\u2014data validation.</p> <p>\ud83d\udccc Checkpoint:</p> <ol> <li>Run <code>php artisan route:list</code></li> <li>Make sure you see 5+ routes for planets</li> <li>Test <code>GET /api/planets</code> in your browser/Postman</li> </ol> <p>\u26a0\ufe0f If you get a 404 error:</p> <ul> <li>Check for <code>Route::apiResource</code> in <code>routes/api.php</code></li> <li>Make sure the server is running (<code>php artisan serve</code>)</li> <li>For Windows: allow port 8000 in the firewall</li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/6/","title":"Chapter 2.6: Data Validation","text":"<p>Time to learn: 50 minutes</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/6/#1-validation-a-cosmic-scale-shield","title":"1. Validation: A Cosmic-Scale Shield","text":"<p>Validation is the process of checking incoming data against a set of rules. Without it:</p> <ul> <li>\ud83d\ude80 Incorrect data could \"destroy\" your database</li> <li>\ud83c\udf0c Attackers could inject malicious code</li> <li>\ud83e\ude90 Users would receive confusing errors</li> </ul> <p>\ud83d\udca1 Space Analogy: Validation = The space station's defense system:</p> <ul> <li>It checks the \"cargo\" (data) before docking</li> <li>It rejects dangerous objects</li> <li>It filters out space debris</li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/6/#2-where-to-validate-in-a-laravel-api","title":"2. Where to Validate in a Laravel API","text":"<p>The main approaches are:</p> <ol> <li>In the Controller (quick, but clutters the code)</li> <li>Form Request (recommended, clean architecture)</li> </ol>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/6/#3-validation-in-the-controller","title":"3. Validation in the Controller","text":"<p>We use the <code>validate()</code> method of the Request object: <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $validated = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    // ... create the planet\n}\n</code></pre></p> <p>Popular Validation Rules:</p> Rule Description Example <code>required</code> The field is mandatory <code>'name' =&gt; 'required'</code> <code>string</code> Must be a string value <code>'description' =&gt; 'string'</code> <code>integer</code> Must be an integer <code>'size_km' =&gt; 'integer'</code> <code>min:value</code> Minimum value/length <code>'size_km' =&gt; 'min:100'</code> <code>max:value</code> Maximum value/length <code>'name' =&gt; 'max:255'</code> <code>unique:table,column</code> Must be unique in the table <code>'name' =&gt; 'unique:planets'</code> <code>url</code> Must be a valid URL <code>'image_url' =&gt; 'url'</code> <code>boolean</code> true/false/1/0 <code>'is_habitable' =&gt; 'boolean'</code>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/6/#4-custom-error-messages","title":"4. Custom Error Messages","text":"<p>Change the default error messages: <pre><code>&lt;?php\n$validated = $request-&gt;validate(\n    [\n        'name' =&gt; 'required|unique:planets',\n        'size_km' =&gt; 'min:1000'\n    ],\n    [\n        'name.required' =&gt; 'The planet name is required!',\n        'name.unique' =&gt; 'A planet with this name already exists in the catalog',\n        'size_km.min' =&gt; 'The planet diameter cannot be less than 1000 km'\n    ]\n);\n</code></pre></p> <p>Example response on error (automatically 422 Unprocessable Entity): <pre><code>{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"name\": [\"A planet with this name already exists in the catalog\"],\n        \"size_km\": [\"The planet diameter cannot be less than 1000 km\"]\n    }\n}\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/6/#5-creating-a-form-request","title":"5. Creating a Form Request","text":"<p>For complex validation, we create a dedicated class:</p> <p>Step 1: Generation <pre><code>php artisan make:request StorePlanetRequest\n</code></pre></p> <p>Step 2: Edit <code>app/Http/Requests/StorePlanetRequest.php</code> <pre><code>&lt;?php\npublic function authorize()\n{\n    return true; // Usually true for APIs\n}\n\npublic function rules()\n{\n    return [\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ];\n}\n\npublic function messages()\n{\n    return [\n        'name.unique' =&gt; 'A planet with this name already exists!',\n        'size_km.min' =&gt; 'The diameter cannot be less than 100 km'\n    ];\n}\n</code></pre></p> <p>Step 3: Use it in the controller <pre><code>&lt;?php\nuse App\\Http\\Requests\\StorePlanetRequest;\n\npublic function store(StorePlanetRequest $request)\n{\n    // The data is already validated!\n    $validated = $request-&gt;validated();\n    $planet = Planet::create($validated);\n    return response()-&gt;json($planet, 201);\n}\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/6/#6-custom-validation-rules","title":"6. Custom Validation Rules","text":"<p>Let's create a rule to check for the \"reasonableness\" of a planet's name. Standard Laravel rules can't check if a name is \"forbidden,\" so we'll write our own logic.</p> <p>Step 1: Generate the Rule</p> <p>Laravel provides an Artisan command to create a rule class boilerplate. Let's run it in the terminal:</p> <pre><code>php artisan make:rule ValidPlanetName\n</code></pre> <p>Step 2: Edit <code>app/Rules/ValidPlanetName.php</code></p> <p>Open the created file. Its structure is simple and clear. Our task is to implement the logic inside the <code>validate</code> method.</p> <pre><code>&lt;?php\n\nnamespace App\\Rules;\n\nuse Closure;\nuse Illuminate\\Contracts\\Validation\\ValidationRule;\n\nclass ValidPlanetName implements ValidationRule\n{\n    /**\n     * Run the validation rule.\n     *\n     * @param  \\Closure(string): \\Illuminate\\Translation\\PotentiallyTranslatedString  $fail\n     */\n    public function validate(string $attribute, mixed $value, Closure $fail): void\n    {\n        // Our \"blacklist\" of names\n        $forbidden = ['Earth 2.0', 'Nibiru', 'Planet X'];\n\n        // Check if the input value is in our list,\n        // ignoring case.\n        if (in_array(strtolower($value), array_map('strtolower', $forbidden))) {\n            // If the check fails, call the $fail function\n            // with the error message the user will see.\n            $fail('This planet name is forbidden!');\n        }\n    }\n}\n</code></pre> <p>Step 3: Use it in the Form Request</p> <p>Now our custom rule is ready to use. We can include it in any Form Request by simply creating a new instance of our class.</p> <p>Let's open <code>app/Http/Requests/StorePlanetRequest.php</code> and add <code>new ValidPlanetName</code> to the rules array for the <code>name</code> field.</p> <p><pre><code>&lt;?php\n// app/Http/Requests/StorePlanetRequest.php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Rules\\ValidPlanetName; // &lt;-- Don't forget to import the class\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass StorePlanetRequest extends FormRequest\n{\n    // ... (authorize method)\n\n    public function rules(): array\n    {\n        return [\n            'name' =&gt; [\n                'required',\n                'string',\n                'max:255',\n                'unique:planets',\n                new ValidPlanetName, // &lt;-- Here is our custom rule\n            ],\n            'description' =&gt; 'required|string',\n            'size_km' =&gt; 'required|integer|min:100|max:500000',\n            'solar_system' =&gt; 'required|string|max:100',\n            'image_url' =&gt; 'nullable|url|max:2048',\n            'is_habitable' =&gt; 'required|boolean'\n        ];\n    }\n\n    // ... (messages method)\n}\n</code></pre> Done. Now when creating a planet, Laravel will sequentially apply all rules to the <code>name</code> field and, upon reaching <code>new ValidPlanetName</code>, will execute our custom logic.</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/6/#7-validation-for-updates","title":"7. Validation for Updates","text":"<p>Specifics for updating data:</p> <p>When updating a record, validation rules often differ. The main feature is the uniqueness check, which must ignore the current record being updated.</p> <p>Step 1: Create a separate Form Request for updates <pre><code>php artisan make:request UpdatePlanetRequest\n</code></pre> Step 2: Edit <code>app/Http/Requests/UpdatePlanetRequest.php</code> <pre><code>&lt;?php\nuse Illuminate\\Validation\\Rule;\n\npublic function authorize(): bool\n{\n    return true;\n}\npublic function rules(): array\n{\n    $planet = $this-&gt;route('planet'); // Get the model from the route\n\n     return [\n         'name' =&gt; [\n             'sometimes', // Validate only if the field is present in the request\n             'required',\n             'string',\n             'max:255',\n             Rule::unique('planets')-&gt;ignore($planet-&gt;id),\n         ],\n         'description'  =&gt; 'sometimes|required|string',\n         'size_km'      =&gt; 'sometimes|required|integer|min:100|max:500000',\n         // ... other fields with 'sometimes'\n     ];\n }\n</code></pre> Step 3: Use it in the controller <pre><code>&lt;?php\n use App\\Http\\Requests\\UpdatePlanetRequest;\n\n public function update(UpdatePlanetRequest $request, Planet $planet)\n {\n     $validated = $request-&gt;validated();\n     $planet-&gt;update($validated);\n     return response()-&gt;json($planet);\n }\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/6/#8-testing-validation-in-postman","title":"8. Testing Validation in Postman","text":"<p>Scenario 1: Name Uniqueness Error <pre><code>POST /api/planets\n{\n    \"name\": \"Mars\",\n    \"description\": \"The red planet, a target for future colonization\",\n    \"size_km\": 6779,\n    \"solar_system\": \"Solar System\",\n    \"is_habitable\": false\n}\n</code></pre> Expected Response: <pre><code>{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"name\": [\"A planet with this name already exists!\"]\n    }\n}\n</code></pre></p> <p>Scenario 2: Incorrect Diameter <pre><code>{\n    \"name\": \"Pea Planet\",\n    \"size_km\": 50 // &lt; min:100\n}\n</code></pre> Expected Response: <pre><code>\"errors\": {\n    \"size_km\": [\"The diameter cannot be less than 100 km\"]\n}\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/6/#review-quiz","title":"Review Quiz","text":"<p>1. The HTTP status for validation errors is:</p>  a) 400 Bad Request  b) 422 Unprocessable Entity  c) 500 Internal Server Error <p>2. The rule for checking uniqueness is:</p>  a) unique:table  b) distinct  c) only:table <p>3. Where is the best place to put complex validation rules?</p>  a) In the controller  b) In the model  c) In a Form Request <p>4. The `authorize()` method in a Form Request should return:</p>  a) false  b) true  c) null <p>5. The `sometimes` rule means:</p>  a) The field is required  b) The field is validated only if present  c) The field is ignored Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have installed a powerful defense system for your cosmic API:</p> <ul> <li>\ud83d\udee1\ufe0f Basic and custom validation rules</li> <li>\ud83d\udcdd Readable error messages</li> <li>\ud83e\udde9 Form Requests for complex scenarios</li> <li>\u2699\ufe0f Unique rules for updating data</li> </ul> <p>Your universe is now protected! Next, we will learn how to handle \"cosmic accidents\" - server errors.</p> <p>\ud83d\udccc Checkpoint:</p> <ol> <li>Create a Form Request for updating planets</li> <li>Add a custom rule to validate the name</li> <li>Test the errors using Postman</li> </ol> <p>\u26a0\ufe0f If validation doesn't work:</p> <ul> <li>Check the Form Request injection in the controller method</li> <li>Make sure <code>authorize()</code> returns true</li> <li>For uniqueness on update, use <code>Rule::unique</code></li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/7/","title":"Chapter 2.7: Error Handling","text":"<p>Time to learn: 40 minutes</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/7/#1-why-are-default-errors-bad","title":"1. Why Are Default Errors Bad?","text":"<p>If an error occurs in your Laravel application (for example, a record is not found in the database) and you haven't handled it, the user will see a huge HTML page with debug information or an uninformative \"Server Error\" message.</p> <p>For an API, this is a disaster. Your frontend application expects to receive JSON, not HTML. Our task is to catch any error and turn it into a structured JSON response.</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/7/#2-the-central-error-dispatcher-bootstrapappphp","title":"2. The Central Error Dispatcher: <code>bootstrap/app.php</code>","text":"<p>In older versions of Laravel, there was a cumbersome <code>App\\Exceptions\\Handler.php</code> file. In Laravel 11/12, everything has become much simpler and more elegant. The error handling control center is now located directly in your application's configuration file \u2014 <code>bootstrap/app.php</code>.</p> <p>Open <code>bootstrap/app.php</code>. At the very bottom, you will see the <code>.withExceptions(...)</code> block. This is our \"central dispatcher.\"</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    -&gt;withRouting(\n        web: __DIR__.'/../routes/web.php',\n        api: __DIR__.'/../routes/api.php',\n        commands: __DIR__.'/../routes/console.php',\n        health: '/up',\n    )\n    -&gt;withMiddleware(function (Middleware $middleware) {\n        // ...\n    })\n    -&gt;withExceptions(function (Exceptions $exceptions) {\n        // &lt;-- THIS IS WHERE WE WILL WORK\n    })-&gt;create();\n</code></pre>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/7/#3-handling-the-most-common-error-not-found-404","title":"3. Handling the Most Common Error: \"Not Found\" (404)","text":"<p>The most common error in an API is when a user requests a resource that does not exist (e.g., <code>GET /api/planets/999</code>). In this case, Laravel generates a <code>ModelNotFoundException</code> or <code>NotFoundHttpException</code>. Let's catch them.</p> <p>Add the following code inside <code>.withExceptions(...)</code>:</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // Catch the exception when a model is not found in the database\n    $exceptions-&gt;render(function (ModelNotFoundException $e, Request $request) {\n        // Check that the request is for our API\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; 'The requested resource was not found in our galaxy.'\n            ], 404);\n        }\n    });\n\n    // Catch the exception when the route itself is not found\n    $exceptions-&gt;render(function (NotFoundHttpException $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; 'This cosmic route does not exist.'\n            ], 404);\n        }\n    });\n\n})-&gt;create();\n</code></pre> What did we do?</p> <ol> <li><code>$exceptions-&gt;render(...)</code> \u2014 We register a \"handler.\" It says: \"If an exception of type <code>ModelNotFoundException</code> occurs, execute this code.\"</li> <li><code>if ($request-&gt;is('api/*'))</code> \u2014 This is an important check. It ensures that our nice JSON response is only sent for API requests, without affecting regular web pages.</li> <li><code>return response()-&gt;json(...)</code> \u2014 We create and return a standardized JSON response with a 404 code.</li> </ol> <p>Now, if you request a non-existent planet, you will get a neat JSON response instead of an ugly HTML page.</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/7/#4-custom-exceptions-creating-your-own-alarm-signals","title":"4. Custom Exceptions: Creating Your Own \"Alarm Signals\"","text":"<p>Sometimes, standard exceptions are not enough. Imagine we have a business rule: \"you cannot delete the planet 'Earth'\". If someone tries to do this, we must return a meaningful error.</p> <p>Step 1: Create our own exception class Run in the terminal: <pre><code>php artisan make:exception CannotDeleteEarthException\n</code></pre></p> <p>Step 2: Use it in the controller Open <code>PlanetController.php</code> and modify the <code>destroy</code> method:</p> <p><pre><code>&lt;?php\n// app/Http/Controllers/PlanetController.php\nuse App\\Exceptions\\CannotDeleteEarthException; // &lt;-- Import our exception\nuse App\\Models\\Planet;\n\npublic function destroy(Planet $planet)\n{\n    // Our new business rule\n    if (strtolower($planet-&gt;name) === 'earth') {\n        throw new CannotDeleteEarthException('Deleting planet Earth is forbidden by the Galactic Code.');\n    }\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre> Now, if someone tries to execute <code>DELETE /api/planets/1</code> (where 1 is the ID of Earth), our code will throw a <code>CannotDeleteEarthException</code>.</p> <p>Step 3: Teach Laravel to handle our \"alarm\" gracefully Let's go back to <code>bootstrap/app.php</code> and add a new handler for our exception.</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // Our new handler\n    $exceptions-&gt;render(function (CannotDeleteEarthException $e, Request $request) {\n        return response()-&gt;json([\n            'message' =&gt; 'Operation forbidden.',\n            'details' =&gt; $e-&gt;getMessage() // Get the message we passed in the throw\n        ], 403); // 403 Forbidden\n    });\n\n    // ... (other handlers for 404)\n\n})-&gt;create();\n</code></pre> Done! We have created our own named exception, which makes the controller code cleaner, and taught Laravel to turn it into a beautiful, meaningful JSON response with the correct HTTP status.</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/7/#5-handling-all-other-failures-500-internal-server-error","title":"5. Handling All Other Failures (500 Internal Server Error)","text":"<p>What about all other, unforeseen errors? For example, if the database connection is lost or there is a syntax error in the code. For this, we can register a \"universal\" handler for the most general type of error \u2014 <code>Throwable</code>.</p> <p>Important: This handler must be the last one so that it does not catch the more specific exceptions we defined above.</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // ... (handlers for CannotDeleteEarthException and 404)\n\n    // UNIVERSAL HANDLER (at the very end)\n    $exceptions-&gt;render(function (Throwable $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            // In debug mode, you can show the real error message\n            $message = config('app.debug')\n                ? 'An error occurred: ' . $e-&gt;getMessage()\n                : 'An unexpected error occurred on board. Engineers have been dispatched.';\n\n            return response()-&gt;json(['message' =&gt; $message], 500);\n        }\n    });\n\n})-&gt;create();\n</code></pre> <p>Now any \"unknown\" exception will be neatly caught and turned into a JSON response with a 500 code, without breaking your API or showing the user unnecessary information.</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/7/#6-error-logging-the-spaceships-black-box","title":"6. Error Logging: The Spaceship's Black Box","text":"<p>Logging settings in <code>config/logging.php</code>: <pre><code>&lt;?php\n'channels' =&gt; [\n    'space_api' =&gt; [\n        'driver' =&gt; 'daily',\n        'path' =&gt; storage_path('logs/space_api.log'),\n        'level' =&gt; 'error',\n        'days' =&gt; 14,\n    ],\n],\n</code></pre></p> <p>Adding a log entry: <pre><code>&lt;?php\ntry {\n    // Code with risk of error\n} catch (Exception $e) {\n    Log::channel('space_api')-&gt;error('Error accessing planets', [\n        'exception' =&gt; $e,\n        'request' =&gt; request()-&gt;all(),\n        'user_id' =&gt; auth()-&gt;id()\n    ]);\n    throw $e;\n}\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/7/#review-quiz","title":"Review Quiz","text":"<p>1. The HTTP status for \"Planet not found\" is:</p>  a) 400  b) 404  c) 500 <p>2. In modern Laravel, where is global error handling configured?</p>  a) bootstrap/app.php  b) App/Exceptions/Handler.php  c) App/Http/Controllers/ErrorController.php <p>3. The command to create a custom exception is:</p>  a) php artisan make:exception  b) php artisan exception:create  c) php artisan generate:exception <p>4. To create a separate log channel for API errors, you should:</p>  a) Configure it in config/logging.php  b) Set a parameter in .env  c) Specify it in the controller <p>5. The main advantage of creating custom exceptions is:</p>  a) Improved performance  b) Creating semantically clear errors for specific business scenarios  c) Automatic addition to .env Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have equipped your API with a reliable rescue system:</p> <ul> <li>\ud83d\udedf Global interception of standard errors</li> <li>\ud83e\ude90 Custom exceptions with clear codes</li> <li>\ud83d\udcdd A unified JSON format for all errors</li> <li>\ud83d\udd0d Logging with incident details</li> </ul> <p>The spaceship is ready for emergencies! In the final chapter of this section, we will test all the systems.</p> <p>\ud83d\udccc Checkpoint:</p> <ol> <li>Create a custom exception like <code>PlanetNotFoundException</code></li> <li>Add handling for 404 errors in the <code>.withExceptions</code> closure</li> <li>Test a request to a non-existent planet</li> </ol> <p>\u26a0\ufe0f If errors are not being caught:</p> <ul> <li>Make sure <code>is('api/*')</code> matches your routes</li> <li>Check the order of your handlers within <code>withExceptions</code></li> <li>For custom exceptions, make sure you are using <code>throw new</code></li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/8/","title":"Chapter 2.8: API Testing","text":"<p>Time to learn: 1 hour</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/8/#1-why-are-tests-necessary","title":"1. Why Are Tests Necessary?","text":"<p>Imagine you've built a spaceship. Before sending it to Mars, you would conduct thousands of checks on Earth. Tests in programming are the same thing. They:</p> <ul> <li>Give Confidence: You can change your code, and if the tests pass, it means you haven't broken anything.</li> <li>Save Time: Instead of manually \"clicking through\" everything in Postman after every change, you run one command, and it checks everything for you in seconds.</li> <li>Serve as Documentation: Good tests show how your API is supposed to work.</li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/8/#2-setting-up-the-test-laboratory","title":"2. Setting Up the Test \"Laboratory\"","text":"<p>Laravel makes setting up tests incredibly simple. By default, it uses a separate configuration so as not to affect your main database.</p> <p>Database for Tests: By default, Laravel uses an in-memory database (<code>:memory:</code>). This is the fastest way because nothing needs to be written to disk. The database is created before the tests run and destroyed after they finish. We don't even need to configure anything for this!</p> <p>Creating a Test File: Let's create a special file for tests related to planets.</p> <pre><code>php artisan make:test PlanetApiTest\n</code></pre> <p>This command will create the file <code>tests/Feature/PlanetApiTest.php</code>. The word <code>Feature</code> means we will be testing functionality as a whole (e.g., \"can a user create a planet?\"), not a single small class.</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/8/#3-anatomy-of-a-test-arrange-act-assert","title":"3. Anatomy of a Test: Arrange, Act, Assert","text":"<p>Open <code>tests/Feature/PlanetApiTest.php</code>. Inside, we will write our first test. A good test always consists of three parts (Arrange, Act, Assert).</p> <p><pre><code>&lt;?php\n\nnamespace Tests\\Feature;\n\nuse App\\Models\\Planet; // Don't forget to import the model\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase; // A crucial tool!\nuse Tests\\TestCase;\n\nclass PlanetApiTest extends TestCase\n{\n    // This trait \"magically\" clears and recreates\n    // our test database before each test.\n    // This ensures that tests do not affect each other.\n    use RefreshDatabase;\n\n    /**\n     * Test: the endpoint for getting a list of planets works correctly.\n     * Test names should be meaningful!\n     */\n    public function test_can_get_all_planets(): void\n    {\n        // 1. ARRANGE\n        // Create 3 fake planets in our test database\n        // using the factory we created earlier.\n        Planet::factory()-&gt;count(3)-&gt;create();\n\n        // 2. ACT\n        // Simulate a real GET request to our API.\n        $response = $this-&gt;getJson('/api/planets');\n\n        // 3. ASSERT\n        // Check that everything went as expected.\n        $response-&gt;assertStatus(200); // Expect the server to respond with \"200 OK\"\n        $response-&gt;assertJsonCount(3, 'data'); // Expect exactly 3 planets in the response data\n    }\n}\n</code></pre> Key Points:</p> <ul> <li><code>use RefreshDatabase</code>: This trait is your best friend. It ensures that each test starts with a \"clean slate,\" with an empty database.</li> <li><code>Planet::factory()</code>: Factories are ideal for creating test data.</li> <li><code>$this-&gt;getJson()</code>: This is a special Laravel method for sending API requests within tests.</li> <li><code>assert...()</code>: These are \"assertions\" or \"checks.\" If even one of them fails, the test will fail.</li> </ul>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/8/#4-testing-basic-operations-crud","title":"4. Testing Basic Operations (CRUD)","text":"<p>Let's write tests for creating, updating, and deleting planets.</p> <p>A. Test for creating a planet (POST)</p> <pre><code>&lt;?php\npublic function test_can_create_a_planet(): void\n{\n    // 1. Arrange: prepare the data for the new planet\n    $planetData = [\n        'name' =&gt; 'Kepler-186f',\n        'description' =&gt; 'The first Earth-sized exoplanet in a habitable zone.',\n        'size_km' =&gt; 14000,\n        'solar_system' =&gt; 'Kepler-186',\n        'is_habitable' =&gt; true\n    ];\n\n    // 2. Act: send a POST request with the data\n    $response = $this-&gt;postJson('/api/planets', $planetData);\n\n    // 3. Assert\n    $response-&gt;assertStatus(201); // Expect a \"201 Created\" status\n    $response-&gt;assertJsonFragment(['name' =&gt; 'Kepler-186f']); // Check that the response contains the created name\n\n    // The most important check: did the data actually get into the database?\n    $this-&gt;assertDatabaseHas('planets', [\n        'name' =&gt; 'Kepler-186f'\n    ]);\n}\n</code></pre> <p>B. Test for deleting a planet (DELETE) <pre><code>&lt;?php\npublic function test_can_delete_a_planet(): void\n{\n    // 1. Arrange: create a planet to be deleted\n    $planet = Planet::factory()-&gt;create();\n\n    // 2. Act: send a DELETE request\n    $response = $this-&gt;deleteJson(\"/api/planets/{$planet-&gt;id}\");\n\n    // 3. Assert\n    $response-&gt;assertStatus(204); // Expect \"204 No Content\" - successful deletion\n\n    // Check that the record has actually disappeared from the database\n    $this-&gt;assertDatabaseMissing('planets', [\n        'id' =&gt; $planet-&gt;id\n    ]);\n}\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/8/#5-testing-bad-scenarios","title":"5. Testing \"Bad\" Scenarios","text":"<p>Testing success cases is good. But testing for errors is even more important!</p> <p>A. Test for a validation error <pre><code>&lt;?php\npublic function test_creation_fails_with_invalid_data(): void\n{\n    // 2. Act: send deliberately incorrect data\n    $response = $this-&gt;postJson('/api/planets', ['name' =&gt; '']); // Empty name\n\n    // 3. Assert\n    $response-&gt;assertStatus(422); // Expect \"422 Unprocessable Entity\"\n    $response-&gt;assertJsonValidationErrors('name'); // Expect the error to be specifically in the 'name' field\n}\n</code></pre></p> <p>B. Test for \"not found\" (404) <pre><code>&lt;?php\npublic function test_returns_404_for_non_existent_planet(): void\n{\n    // 2. Act: request a planet with a non-existent ID\n    $response = $this-&gt;getJson('/api/planets/99999');\n\n    // 3. Assert\n    $response-&gt;assertStatus(404); // Expect \"404 Not Found\"\n}\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/8/#6-running-tests","title":"6. Running Tests","text":"<p>Now that the tests are written, running them is very simple. Execute in the terminal:</p> <pre><code>php artisan test\n</code></pre> <p>Laravel will find all your tests and run them one by one. If everything is successful, you will see green output. If a test fails, you will see red output with a detailed error description, allowing you to fix it quickly.</p> <p>To run only one specific file: <pre><code>php artisan test tests/Feature/PlanetApiTest.php\n</code></pre></p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/8/#7-code-coverage","title":"7. Code Coverage","text":"<p>Step 1: Install Xdebug</p> <p>To collect code coverage information, the PHP extension Xdebug is required.</p> <p>Submit your <code>php -i</code> output to the wizard and follow the instructions.</p> <p>Step 2: Configure <code>phpunit.xml</code> <pre><code>&lt;phpunit ... &gt;\n    &lt;coverage&gt;\n        &lt;include&gt;\n            &lt;directory suffix=\".php\"&gt;./app&lt;/directory&gt;\n        &lt;/include&gt;\n    &lt;/coverage&gt;\n&lt;/phpunit&gt;\n</code></pre></p> <p>Step 3: Run with a report <pre><code>php artisan test --coverage-html=coverage\n</code></pre> Report: Open <code>coverage/index.html</code> in your browser.</p>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/8/#8-integration-with-postman","title":"8. Integration with Postman","text":"<p>Automation via Newman:</p> <ol> <li>Export your Postman collection to <code>tests/Postman/SpaceApi.postman_collection.json</code></li> <li>Install Newman: <pre><code>npm install -g newman\n</code></pre></li> <li>Add a script to <code>composer.json</code>: <pre><code>\"scripts\": {\n    \"test:postman\": \"newman run tests/Postman/SpaceApi.postman_collection.json\"\n}\n</code></pre></li> <li>Run: <pre><code>composer test:postman\n</code></pre></li> </ol>"},{"location":"en/Chapter%202%20-%20Creating%20an%20API%20on%20Laravel/8/#review-quiz","title":"Review Quiz","text":"<p>1. The command to create a test class is:</p>  a) php artisan make:test  b) php artisan generate:test  c) php artisan test:create <p>2. The `RefreshDatabase` trait is used for:</p>  a) Clearing the DB after tests  b) Seeding the DB with test data  c) Creating the DB structure <p>3. The method for checking a JSON structure is:</p>  a) assertJsonFormat()  b) assertJsonStructure()  c) assertJsonSchema() <p>4. Factories in Laravel are needed for:</p>  a) Generating test data  b) Creating migrations  c) Handling errors <p>5. The tool for running Postman collections from the CLI is:</p>  a) Newman  b) Postman CLI  c) Artisan Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have conducted a full cycle of pre-flight checks! Now your API skills include:</p> <ul> <li>\u2705 Setting up a test environment effortlessly.</li> <li>\ud83d\udee1\ufe0f Writing tests using the \"Arrange-Act-Assert\" principle.</li> <li>\ud83d\udcca Testing both success scenarios (CRUD) and errors (validation, 404).</li> <li>\ud83d\udd01 Running tests with a single command and being confident in your code.</li> </ul> <p>The spaceship is ready for launch! You have completed the section on creating an API in Laravel.</p> <p>\ud83d\udccc Final Check:</p> <ol> <li>Run <code>php artisan test</code></li> <li>Make sure all tests pass (green light!)</li> <li>Check the coverage report</li> </ol> <p>\u26a0\ufe0f If tests are failing:</p> <ul> <li>Check the API's functionality via Postman</li> <li>Ensure the test database is configured</li> <li>Use <code>dd($response-&gt;content())</code> for debugging</li> </ul> <p>Congratulations on completing Chapter 2! You have not just created an API, you have built a reliable and tested \"spaceship,\" ready for further missions.</p> <p>\ud83c\udf0c Next Steps:</p> <ol> <li>Setting up authentication (Sanctum)</li> <li>Documenting the API with Swagger</li> <li>Deploying to a server (Forge, VPS)</li> <li>Writing a frontend in Vue/React</li> </ol> <p>Good luck with your space mission! In the next chapter, we will look at writing an API from scratch \ud83d\ude80</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/1/","title":"Chapter 3.1: Installing FastAPI and Setting Up the Environment","text":"<p>Time to learn: 45 minutes</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/1/#1-what-is-fastapi-a-hyperdrive-for-apis","title":"1. What is FastAPI? A Hyperdrive for APIs","text":"<p>If Flask is a nimble reconnaissance probe and Django is a massive carrier ship, then FastAPI is a superluminal fighter jet.</p> <p>FastAPI is a modern, high-performance web framework for creating APIs with Python 3.7+. Its main advantages are:</p> <ul> <li>Speed: One of the fastest Python frameworks, comparable to NodeJS and Go.</li> <li>Simplicity: Minimalist and intuitive syntax.</li> <li>Auto-documentation: Automatically creates interactive documentation for your API.</li> <li>Typing: Uses standard Python type hints for validation, autocompletion, and documentation.</li> </ul> <p>\ud83d\udca1 Space Analogy:</p> <p>FastAPI is like a \"hyperdrive\" for your API ship. It is based on two technologies:</p> <ul> <li>Starlette (the fighter's chassis) \u2014 provides asynchronicity and top-tier performance.</li> <li>Pydantic (the onboard computer) \u2014 handles data validation and settings.</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/1/#2-preparing-the-launchpad-virtual-environment","title":"2. Preparing the Launchpad: Virtual Environment","text":"<p>Before we build our fighter jet, we need to create a sterile assembly laboratory. In Python, this is done using virtual environments.</p> <p>Why is this necessary? To prevent the dependencies of our project (engines, navigation systems) from conflicting with other projects on your computer.</p> <p>Step 1: Create a virtual environment Open a terminal in your project folder (e.g., <code>C:\\Projects\\FastAPI_Fleet</code>) and run:</p> <p><pre><code>python -m venv venv\n</code></pre> This command will create a <code>venv</code> folder with an isolated version of Python.</p> <p>Step 2: Activate the lab's \"force field\"</p> <ul> <li>Windows (PowerShell):</li> </ul> <p><pre><code>.\\venv\\Scripts\\Activate.ps1\n</code></pre> (If you get an error, you may need to allow script execution: <code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process</code>)</p> <ul> <li>Windows (CMD):</li> </ul> <pre><code>.\\venv\\Scripts\\activate.bat\n</code></pre> <ul> <li>macOS / Linux:</li> </ul> <p><pre><code>source venv/bin/activate\n</code></pre> After activation, <code>(venv)</code> will appear at the beginning of your terminal prompt. This means you are inside your lab!</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/1/#3-installing-the-engine-fastapi-and-uvicorn","title":"3. Installing the Engine: FastAPI and Uvicorn","text":"<p>Now let's install two key components:</p> <ul> <li>fastapi: The framework itself.</li> <li>uvicorn: A lightning-fast ASGI server that will \"run\" our engine.</li> </ul> <p>Execute in the activated environment: <pre><code>pip install \"fastapi[all]\"\n</code></pre></p> <p>\ud83d\udca1 Why <code>[all]</code>? This will install <code>fastapi</code>, <code>uvicorn</code>, and other useful packages (e.g., for WebSocket support and Jinja2) that will be useful in future missions.</p> <p>Check the installation: <pre><code>pip freeze\n</code></pre> You should see <code>fastapi</code>, <code>pydantic</code>, <code>starlette</code>, <code>uvicorn</code>, and other packages in the list.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/1/#4-first-contact-the-mainpy-file","title":"4. First Contact: The <code>main.py</code> File","text":"<p>Create a <code>main.py</code> file in the root of your project \u2014 this will be the central control panel of our API.</p> <p>Add the following code to <code>main.py</code>: <pre><code>from fastapi import FastAPI\n\n# Create an instance of our API \"spaceship\"\napp = FastAPI()\n\n# Define the first \"docking port\" (endpoint)\n# This is the root URL: /\n@app.get(\"/\")\ndef read_root():\n    \"\"\"\n    This is the Mission Control message that everyone sees\n    when they connect to the main gateway.\n    \"\"\"\n    return {\"message\": \"Welcome to the Space Fleet Command Center!\"}\n</code></pre> - <code>@app.get(\"/\")</code>: This is a decorator that tells FastAPI that the <code>read_root</code> function should handle <code>GET</code> requests to the root URL (<code>/</code>).</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/1/#5-ignition-starting-the-server","title":"5. Ignition! Starting the Server","text":"<p>It's time to start our hyperdrive! In the terminal (with <code>venv</code> active), run: <pre><code>uvicorn main:app --reload\n</code></pre> Command breakdown:</p> <ul> <li><code>uvicorn</code>: We are starting the Uvicorn server.</li> <li><code>main</code>: The <code>main.py</code> file (without the <code>.py</code>).</li> <li><code>app</code>: The <code>app = FastAPI()</code> object created inside <code>main.py</code>.</li> <li><code>--reload</code>: \"Autopilot\". The server will automatically restart every time you change the code.</li> </ul> <p>Expected output in the terminal: <pre><code>INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [12345]\nINFO:     Started server process [12346]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n</code></pre></p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/1/#6-communicating-with-mission-control","title":"6. Communicating with Mission Control","text":"<p>Your API is now online and listening on port <code>8000</code>!</p> <p>Step 1: Check in the browser</p> <p>Open <code>http://127.0.0.1:8000</code> in your browser. You should see: <pre><code>{\n  \"message\": \"Welcome to the Space Fleet Command Center!\"\n}\n</code></pre></p> <p>Step 2: A glimpse into the future (auto-documentation)</p> <p>FastAPI has already created two gifts for you. Open these URLs:</p> <ul> <li><code>http://127.0.0.1:8000/docs</code>: Interactive Swagger UI documentation.</li> <li><code>http://127.0.0.1:8000/redoc</code>: Alternative ReDoc documentation.</li> </ul> <p>You will see your first endpoint, which you can test directly from the browser!</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/1/#review-quiz","title":"Review Quiz","text":"<p>1. FastAPI is known for its...</p>  a) Slow but reliable performance  b) High performance and speed  c) Integration only with Microsoft databases <p>2. Why do you need a virtual environment (`venv`)?</p>  a) To speed up Python  b) To isolate project dependencies  c) To automatically write tests <p>3. Which server is used to run FastAPI in this lesson?</p>  a) Apache  b) Gunicorn  c) Uvicorn <p>4. The command `uvicorn main:app --reload` means:</p>  a) Run the `app.py` file with the `main` object  b) Run the `app` object from the `main.py` file and restart on changes  c) Reboot the computer and start the application <p>5. What does the `@app.get(\"/\")` decorator do in FastAPI?</p>  a) Gets data from the `app.py` file  b) Sends a GET request to an external server  c) Binds a function to a GET request on the root URL Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have successfully assembled and launched the \"hyperdrive\" of your new API! You now have:</p> <ul> <li>\ud83d\udee0\ufe0f An isolated development environment (<code>venv</code>)</li> <li>\ud83d\ude80 FastAPI and the Uvicorn server installed</li> <li>\ud83d\udef0\ufe0f A running API with a single endpoint</li> <li>\ud83d\udcca Automatically generated documentation</li> </ul> <p>All systems are go! In the next chapter, we will create our first full-fledged endpoint that will return a list of spacecraft.</p> <p>\ud83d\udccc Checkpoint:</p> <ul> <li>The <code>(venv)</code> environment is active in the terminal</li> <li>The <code>uvicorn</code> server is running without errors</li> <li>The address <code>http://127.0.0.1:8000/docs</code> opens in the browser</li> </ul> <p>\u26a0\ufe0f If you have errors:</p> <ul> <li><code>command not found</code>: Make sure you have activated the virtual environment.</li> <li><code>Port ... is already in use</code>: Another program is using port 8000. Stop it or run uvicorn on a different port: <code>uvicorn main:app --reload --port 8001</code>.</li> <li>Errors activating <code>venv</code> in PowerShell: Check the script execution policy.</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/2/","title":"Chapter 3.2: Creating Your First API Endpoint","text":"<p>Time to learn: 30 minutes</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/2/#1-endpoint-a-docking-port-for-data","title":"1. Endpoint: A Docking Port for Data","text":"<p>Imagine our API is a space station. An Endpoint is a specific docking port designed for a certain type of ship.</p> <ul> <li>Port <code>No. 1</code> \u2014 for cargo ships (data about planets).</li> <li>Port <code>No. 2</code> \u2014 for research probes (data about missions).</li> <li>Port <code>No. 3</code> \u2014 for passenger shuttles (data about astronauts).</li> </ul> <p>Each endpoint is a unique URL that is responsible for a specific operation with a specific resource.</p> <p>\ud83d\udca1 Space Analogy: <code>GET /spaceships</code> is the command \"Mission Control \u2192 Station: Report the list of all docked ships.\" This endpoint returns a collection of resources.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/2/#2-creating-the-space-fleet","title":"2. Creating the \"Space Fleet\"","text":"<p>Since we don't have a database yet, let's create a \"simulation\"\u2014a simple list of spacecraft in the form of a Python dictionary.</p> <p>Open <code>main.py</code> and add this code before the <code>app</code> definition: <pre><code># main.py\n\n# Step 1: Create a database simulation\ndb_spaceships = {\n    1: {\n        \"name\": \"Voyager-1\",\n        \"type\": \"Probe\",\n        \"launch_year\": 1977,\n        \"status\": \"Active\"\n    },\n    2: {\n        \"name\": \"Hubble Space Telescope\",\n        \"type\": \"Telescope\",\n        \"launch_year\": 1990,\n        \"status\": \"Active\"\n    },\n    3: {\n        \"name\": \"ISS\",\n        \"type\": \"Station\",\n        \"launch_year\": 1998,\n        \"status\": \"In Orbit\"\n    }\n}\n\n# ... app = FastAPI() code goes here\n</code></pre> This is our \"registry of spacecraft\" that we will be working with.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/2/#3-first-endpoint-the-list-of-ships","title":"3. First Endpoint: The List of Ships","text":"<p>Now let's create an endpoint that will return our entire fleet.</p> <p>Add this code to <code>main.py</code> after the <code>@app.get(\"/\")</code> block: <pre><code># main.py\n\n# ... code with db_spaceships, FastAPI, app, and read_root() ...\n\n@app.get(\"/spaceships\")\ndef get_spaceships():\n    \"\"\"\n    Returns a list of all spacecraft in the registry.\n    \"\"\"\n    return db_spaceships\n</code></pre></p> <ul> <li><code>@app.get(\"/spaceships\")</code>: We have created a new route. Now, <code>GET</code> requests to the <code>/spaceships</code> URL will be handled by the <code>get_spaceships</code> function.</li> <li><code>return db_spaceships</code>: FastAPI will automatically convert the Python dictionary into a valid JSON response.</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/2/#4-checking-the-new-docking-port","title":"4. Checking the New Docking Port","text":"<p>If your <code>uvicorn</code> server is still running with the <code>--reload</code> flag, it has already reloaded and is ready to go. If not, start it again: <pre><code>uvicorn main:app --reload\n</code></pre></p> <p>Step 1: Check in the browser</p> <p>Open <code>http://127.0.0.1:8000/spaceships</code> in your browser. You should see the full list of your ships in JSON format: <pre><code>{\n  \"1\": {\n    \"name\": \"Voyager-1\",\n    \"type\": \"Probe\",\n    \"launch_year\": 1977,\n    \"status\": \"Active\"\n  },\n  \"2\": {\n    \"name\": \"Hubble Space Telescope\",\n    \"type\": \"Telescope\",\n    \"launch_year\": 1990,\n    \"status\": \"Active\"\n  },\n  \"3\": {\n    \"name\": \"ISS\",\n    \"type\": \"Station\",\n    \"launch_year\": 1998,\n    \"status\": \"In Orbit\"\n  }\n}\n</code></pre></p> <p>Step 2: Check in the auto-documentation</p> <p>Navigate to <code>http://127.0.0.1:8000/docs</code>. You will see that a new section for the <code>GET /spaceships</code> endpoint has appeared in the documentation. You can click \"Try it out\" and \"Execute\" to test it right from there!</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/2/#5-endpoint-with-a-parameter-data-on-a-specific-ship","title":"5. Endpoint with a Parameter: Data on a Specific Ship","text":"<p>What if we only need data about \"Voyager-1\"? For this, we will create an endpoint with a path parameter.</p> <p>Add this code to <code>main.py</code>: <pre><code># main.py\n\n# ... rest of the code ...\n\n@app.get(\"/spaceships/{ship_id}\")\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    Returns data about a specific spacecraft by its ID.\n    \"\"\"\n    return db_spaceships.get(ship_id)\n</code></pre></p> <ul> <li><code>\"/spaceships/{ship_id}\"</code>: The curly braces <code>{}</code> tell FastAPI that <code>ship_id</code> is a variable that will be passed from the URL.</li> <li><code>ship_id: int</code>: This is a type hint. FastAPI will automatically check that the passed ID is an integer. If someone requests <code>/spaceships/voyager</code>, FastAPI will return a <code>422 Unprocessable Entity</code> validation error. This is magic!</li> </ul> <p>Check:</p> <p>Open <code>http://127.0.0.1:8000/spaceships/2</code>. You should get the data only for the Hubble telescope. And if you open <code>http://127.0.0.1:8000/spaceships/99</code> \u2014 you will get <code>null</code>, as no such ship exists.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/2/#review-quiz","title":"Review Quiz","text":"<p>1. An endpoint in an API is...</p>  a) The end of the Universe  b) A unique URL for a specific operation with a resource  c) The name of a database <p>2. What does the `@app.get(\"/users\")` decorator do?</p>  a) Creates a new user  b) Binds a function to a GET request on `/users`  c) Gets a list of all decorators <p>3. What does the notation `\"/items/{item_id}\"` in a path mean?</p>  a) That you need to look for a folder named `{item_id}`  b) That `item_id` is a parameter that will be taken from the URL  c) It is a comment that will be ignored <p>4. Why is the type hint `ship_id: int` needed in the function?</p>  a) To make Python run faster  b) So that FastAPI automatically validates that the ID is a number  c) To make the variable visible outside the function <p>5. If you request `/spaceships/abc` and FastAPI expects an `int`, what will happen?</p>  a) The server will crash with a 500 error  b) FastAPI will return a 422 error  c) FastAPI will try to convert \"abc\" to a number Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have successfully created two \"docking ports\" on your API space station:</p> <ul> <li>\ud83d\udef0\ufe0f One to get a list of all ships (<code>/spaceships</code>)</li> <li>\ud83d\udd2d A second to get data about a specific craft (<code>/spaceships/{ship_id}</code>)</li> </ul> <p>You have also seen the power of FastAPI's automatic type validation, which protects your API from invalid requests.</p> <p>The navigation system is configured! In the next chapter, we will create \"blueprints\" for our spacecraft using Pydantic to make our API even smarter and more reliable.</p> <p>\ud83d\udccc Checkpoint:</p> <ul> <li>The <code>uvicorn</code> server is running.</li> <li>The URL <code>http://127.0.0.1:8000/spaceships</code> returns a JSON with the list of ships.</li> <li>The URL <code>http://127.0.0.1:8000/spaceships/1</code> returns the data for \"Voyager-1\".</li> <li>The URL <code>http://127.0.0.1:8000/docs</code> shows two new endpoints.</li> </ul> <p>\u26a0\ufe0f If you have errors:</p> <ul> <li>404 Not Found: Check that the URL is spelled correctly in the browser and in the <code>@app.get(...)</code> decorator.</li> <li>Code Error: Carefully check the syntax, especially indentation in Python and commas in the dictionary.</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/3/","title":"Chapter 3.3: Data Models with Pydantic","text":"<p>Time to learn: 50 minutes</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/3/#1-pydantic-the-digital-blueprint-of-a-spaceship","title":"1. Pydantic: The \"Digital Blueprint\" of a Spaceship","text":"<p>Imagine you are building a spaceship. You can't just weld pieces of metal together randomly. You need a detailed blueprint that defines:</p> <ul> <li>The ship's name (type: <code>string</code>, max length: 50 characters)</li> <li>The launch year (type: <code>integer</code>)</li> <li>Whether it has a hyperdrive (type: <code>yes/no</code>)</li> </ul> <p>Pydantic is a library that allows you to create such \"digital blueprints\" for your data in Python. In FastAPI, it performs three key functions:</p> <ol> <li>Structure Declaration: Clearly describes the fields your data consists of.</li> <li>Data Validation: Automatically checks if incoming data conforms to the blueprint.</li> <li>Documentation: FastAPI uses these blueprints to create detailed and interactive documentation.</li> </ol> <p>\ud83d\udca1 Space Analogy: A Pydantic model is the technical passport of an object. Any \"cargo\" (data) arriving at the station must match the specifications in the passport. If not, the onboard computer (Pydantic) will reject it.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/3/#2-creating-the-first-blueprint-the-spaceship-model","title":"2. Creating the First Blueprint: The <code>Spaceship</code> Model","text":"<p>Let's create a model that will describe our spacecraft.</p> <p>Step 1: Import <code>BaseModel</code> from Pydantic Pydantic is already installed with <code>fastapi[all]</code>. We just need to import the base class for our models.</p> <p>Add this to the top of <code>main.py</code>, next to the other imports: <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n</code></pre></p> <p>Step 2: Describe the <code>Spaceship</code> model Create a class that inherits from <code>BaseModel</code>. Inside the class, define the fields and their types using standard Python type hints.</p> <p>Add this code to <code>main.py</code> (you can place it after the imports): <pre><code>class Spaceship(BaseModel):\n    \"\"\"\n    The technical passport (model) of a spaceship.\n    \"\"\"\n    name: str\n    type: str\n    launch_year: int\n    status: str\n</code></pre> That's it! You have just created a \"blueprint.\" Pydantic now knows that any object of type <code>Spaceship</code> must have four fields with the specified types.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/3/#3-applying-the-model-improving-our-endpoints","title":"3. Applying the Model: Improving Our Endpoints","text":"<p>Now let's use our new model to make the API \"smarter.\"</p> <p>A. Model as a Response (Response Model) We can tell FastAPI that our endpoint should return data that conforms to the <code>Spaceship</code> model. This ensures that the response will always have the correct structure.</p> <p>Modify the <code>/spaceships/{ship_id}</code> endpoint as follows: <pre><code># main.py\n\n# ... code with db_spaceships and the Spaceship model ...\n\n# Use `response_model` to specify the \"blueprint\" for the response\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    Returns data about a ship, conforming to the Spaceship model.\n    \"\"\"\n    ship = db_spaceships.get(ship_id)\n    return ship\n</code></pre> - <code>response_model=Spaceship</code>: We are telling FastAPI: \"The response of this function must conform to the <code>Spaceship</code> structure. Filter out any extra fields and make sure the types are correct.\"</p> <p>What does this give us?</p> <ul> <li>Data Filtering: If <code>db_spaceships</code> had extra fields (e.g., <code>\"secret_code\"</code>), they would not be included in the final JSON.</li> <li>Structure Guarantee: The API client can be sure that it will always receive a response in the expected format.</li> <li>Documentation: The <code>/docs</code> page will now show a precise example of the response (Example Value).</li> </ul> <p>B. Models for Collections What about the <code>/spaceships</code> endpoint, which returns a list of ships? For this, we need to use <code>List</code> from the <code>typing</code> module.</p> <p>Modify the imports and the <code>/spaceships</code> endpoint: <pre><code># main.py at the top\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom typing import List  # &lt;-- Import List\n\n# ... code ...\n\n# Specify that the response is a list (List) of objects of type Spaceship\n@app.get(\"/spaceships\", response_model=List[Spaceship])\ndef get_spaceships():\n    \"\"\"\n    Returns a list of ships. Each item in the list\n    is validated against the Spaceship model.\n    \"\"\"\n    # Pydantic cannot work with a dictionary whose keys are IDs.\n    # We convert our dictionary to a simple list.\n    return list(db_spaceships.values())\n</code></pre></p> <ul> <li><code>response_model=List[Spaceship]</code>: We are specifying that the response will be a list where each element is an object conforming to the <code>Spaceship</code> model.</li> <li><code>return list(db_spaceships.values())</code>: An important change! Pydantic expects an iterable object (a list), not a dictionary where the keys are IDs. We convert the values of our \"DB simulator\" into a list.</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/3/#4-checking-the-improved-api","title":"4. Checking the Improved API","text":"<p>Make sure the <code>uvicorn</code> server is running with <code>--reload</code>.</p> <ol> <li>Check <code>http://127.0.0.1:8000/spaceships</code>: The response is now a JSON array, not an object. This is a more correct and standard structure for collections.     <pre><code>[\n  { \"name\": \"Voyager-1\", \"type\": \"Probe\", ... },\n  { \"name\": \"Hubble Space Telescope\", ... }\n]\n</code></pre></li> <li>Check <code>http://127.0.0.1:8000/spaceships/1</code>: The response has not changed, but it is now guaranteed to conform to the model.</li> <li>Take a look at <code>/docs</code>: In the \"Schemas\" section at the bottom of the page, your <code>Spaceship</code> model has appeared. And the example responses for the endpoints now display a beautiful, structured data schema.</li> </ol>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/3/#5-advanced-validation-the-onboard-computer-in-action","title":"5. Advanced Validation: The \"Onboard Computer\" in Action","text":"<p>Pydantic can do much more than just check types.</p> <p>Let's add validation to our <code>Spaceship</code> model: <pre><code>from pydantic import BaseModel, Field\n\nclass Spaceship(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50, description=\"The name of the ship\")\n    type: str\n    launch_year: int = Field(..., gt=1950, description=\"Launch year must be after 1950\")\n    status: str\n</code></pre></p> <ul> <li><code>Field(...)</code>: Used to add additional validation rules.</li> <li><code>...</code> (Ellipsis): Means that the field is required.</li> <li><code>min_length</code>, <code>max_length</code>: Constraints for a string.</li> <li><code>gt</code>: \"Greater Than\".</li> </ul> <p>Although we are not yet creating new ships (that will be in the next chapter), these rules will already be reflected in the documentation and will work when we implement <code>POST</code> requests.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/3/#review-quiz","title":"Review Quiz","text":"<p>1. Pydantic in FastAPI is used for...</p>  a) Sending emails  b) Declaration, validation, and documentation of data models  c) Directly connecting to databases <p>2. To create a data model, you need to inherit a class from...</p>  a) `FastAPI`  b) `pydantic.Field`  c) `pydantic.BaseModel` <p>3. The `response_model` parameter in the `@app.get` decorator is needed to...</p>  a) Set the model for the incoming request  b) Specify the structure that the API response must conform to  c) Speed up the server response <p>4. How do you specify that an endpoint returns a *list* of objects of type `Item`?</p>  a) `response_model=Item[]`  b) `response_model=List[Item]` (after importing `List` from `typing`)  c) `response_model=(Item)` <p>5. `Field(..., gt=0)` in a Pydantic model means that the field is...</p>  a) Optional and must be equal to 0  b) Required and must be greater than 0  c) Optional and has a type of `float` Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have designed the \"digital blueprints\" for your API's data. Now it not only works, but it works predictably and reliably.</p> <ul> <li>\ud83d\udcdd A <code>Spaceship</code> model has been created using Pydantic.</li> <li>\ud83d\udee1\ufe0f The API now validates and filters outgoing data using <code>response_model</code>.</li> <li>\ud83d\udcca The documentation has become much more informative, showing exact data schemas.</li> </ul> <p>The blueprints are ready and approved! In the next chapter, we will move from reading data to creating it\u2014implementing full CRUD operations for our fleet.</p> <p>\ud83d\udccc Checkpoint:</p> <ul> <li>Make sure the <code>Spaceship</code> model schema has appeared in <code>/docs</code>.</li> <li>Check that the <code>/spaceships</code> endpoint now returns a JSON array (<code>[...]</code>) and not an object (<code>{...}</code>).</li> <li>Make sure there are no syntax errors in the code after adding the models.</li> </ul> <p>\u26a0\ufe0f If you have errors:</p> <ul> <li><code>NameError: name 'BaseModel' is not defined</code>: Check that you have imported <code>BaseModel</code> from <code>pydantic</code>.</li> <li><code>NameError: name 'List' is not defined</code>: Check that you have imported <code>List</code> from <code>typing</code>.</li> <li>The response for <code>/spaceships</code> is empty (<code>[]</code>): Make sure you have changed <code>return db_spaceships</code> to <code>return list(db_spaceships.values())</code>.</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/4/","title":"Chapter 3.4: CRUD Operations for Spacecraft","text":"<p>Time to learn: 1 hour</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/4/#1-crud-the-full-lifecycle-of-space-mission-management","title":"1. CRUD: The Full Lifecycle of Space Mission Management","text":"<p>So far, we have only been reading data (<code>Read</code>). But a real Mission Control Center must be able to do everything:</p> <ul> <li>Create: Launch a new satellite into orbit.</li> <li>Read: Request the status of an existing spacecraft.</li> <li>Update: Adjust an orbit or update software.</li> <li>Delete: De-orbit an old satellite.</li> </ul> <p>These four operations\u2014CRUD\u2014form the basis of most APIs. In this chapter, we will implement the full cycle for managing our fleet.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/4/#2-create-launching-a-new-ship-post","title":"2. Create: Launching a New Ship (POST)","text":"<p>To create a new spacecraft, we will use the <code>POST</code> method. The data for the new ship will be sent in the request body in JSON format.</p> <p>Step 1: Create a new Pydantic model for incoming data Why a new model? Because when creating a ship, we don't know its <code>id</code>\u2014it must be assigned by the server. We also need to update our main <code>Spaceship</code> model to include the <code>id</code> for responses.</p> <p>Update your models in <code>main.py</code>: <pre><code># main.py\nfrom pydantic import BaseModel, Field\n\n# This is our main model, now including an ID.\n# It will be used for RESPONSE data.\nclass Spaceship(BaseModel):\n    id: int\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n\n# This model is for INCOMING data when creating a ship.\n# It has no ID.\nclass SpaceshipCreate(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n</code></pre></p> <p>Step 2: Implement the <code>POST /spaceships</code> endpoint <pre><code># main.py\nimport random # Add this import at the top of the file\nfrom fastapi import FastAPI, HTTPException, Response, status # Update this import\n\n# ... other code ...\n\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=status.HTTP_201_CREATED)\ndef create_spaceship(ship: SpaceshipCreate):\n    \"\"\"\n    Adds a new spacecraft to the registry.\n    \"\"\"\n    # Generate a new unique ID for the ship\n    new_id = max(db_spaceships.keys() or [0]) + 1\n\n    # Create a spaceship object conforming to the full Spaceship model\n    # by combining the generated ID with the incoming data.\n    new_ship_data = ship.dict()\n    new_ship_data[\"id\"] = new_id\n    new_ship = Spaceship(**new_ship_data)\n\n    # Save to our \"database\"\n    db_spaceships[new_id] = new_ship.dict()\n\n    return new_ship\n</code></pre> Breakdown:</p> <ul> <li><code>@app.post(...)</code>: We use the decorator for <code>POST</code> requests.</li> <li><code>status_code=201</code>: We specify that on successful creation, the status <code>201 Created</code> should be returned.</li> <li><code>ship: SpaceshipCreate</code>: This is the magic! FastAPI will automatically take the request body (JSON), validate it against the <code>SpaceshipCreate</code> model, and pass it into the function as a <code>ship</code> object.</li> <li><code>new_id = ...</code>: Simple logic to generate a new ID.</li> <li><code>**ship.dict()</code>: We \"unpack\" the data from the received <code>ship</code> model.</li> <li><code>response_model=Spaceship</code>: The response will conform to the full model, including the <code>id</code>.</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/4/#3-update-course-correction-put","title":"3. Update: Course Correction (PUT)","text":"<p>The <code>PUT</code> method is used for a full update of an existing resource.</p> <p>Implement the <code>PUT /spaceships/{ship_id}</code> endpoint: <pre><code># main.py\n\n# ... other code ...\n\n@app.put(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef update_spaceship(ship_id: int, ship_update: SpaceshipCreate):\n    \"\"\"\n    Completely updates the data for a spacecraft.\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"Spacecraft not found\")\n\n    updated_ship_data = ship_update.dict()\n    updated_ship_data[\"id\"] = ship_id\n    updated_ship = Spaceship(**updated_ship_data)\n    db_spaceships[ship_id] = updated_ship.dict()\n\n    return updated_ship\n</code></pre></p> <ul> <li><code>ship_update: SpaceshipCreate</code>: We again use our model to validate the incoming data.</li> <li><code>HTTPException</code>: If a ship with the given <code>id</code> is not found, we \"raise\" a standard FastAPI exception, which will be converted into a nice JSON response with a <code>404</code> code.</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/4/#4-delete-de-orbiting-delete","title":"4. Delete: De-orbiting (DELETE)","text":"<p>The <code>DELETE</code> method is used to remove a resource. Typically, such an endpoint does not return a response body.</p> <p>Implement the <code>DELETE /spaceships/{ship_id}</code> endpoint: <pre><code># main.py\n\n# ... other code ...\n\n@app.delete(\"/spaceships/{ship_id}\", status_code=status.HTTP_204_NO_CONTENT)\ndef delete_spaceship(ship_id: int):\n    \"\"\"\n    Removes a spacecraft from the registry.\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"Spacecraft not found\")\n\n    del db_spaceships[ship_id]\n\n    # Return an empty response with a 204 status\n    return Response(status_code=status.HTTP_204_NO_CONTENT)\n</code></pre></p> <ul> <li><code>status_code=status.HTTP_204_NO_CONTENT</code>: We explicitly specify the <code>204 No Content</code> status.</li> <li><code>del db_spaceships[ship_id]</code>: We delete the entry from our dictionary.</li> <li><code>return Response(...)</code>: We return an empty response, as the client does not need data about the deleted object.</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/4/#5-testing-the-full-cycle-in-docs","title":"5. Testing the Full Cycle in <code>/docs</code>","text":"<p>Your <code>uvicorn</code> should have reloaded.</p> <ol> <li>Open <code>http://127.0.0.1:8000/docs</code>. You now have a full set of CRUD operations!</li> <li>POST: Expand the <code>POST /spaceships</code> endpoint, click \"Try it out,\" fill in the JSON body (e.g., create the \"James Webb Telescope\"), and click \"Execute.\" You should get a <code>201</code> response with the new telescope's data.</li> <li>GET: Now execute <code>GET /spaceships</code>. Your new telescope should appear in the list.</li> <li>PUT: Use the new telescope's ID to update its data via <code>PUT /spaceships/{ship_id}</code>. For example, change its status.</li> <li>DELETE: Use the same ID to delete the telescope via <code>DELETE /spaceships/{ship_id}</code>. You should receive an empty response with a <code>204</code> status.</li> <li>Check: Execute <code>GET /spaceships</code> again to ensure the telescope has been removed from the list.</li> </ol>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/4/#review-quiz","title":"Review Quiz","text":"<p>1. Which HTTP method is used to create a new resource?</p>  a) GET  b) PUT  c) POST <p>2. The standard success status code for a `DELETE` operation is:</p>  a) 200 OK  b) 204 No Content  c) 404 Not Found <p>3. How does FastAPI get data from a POST request body?</p>  a) Via the `$_POST` global variable  b) Automatically, if a Pydantic model is specified as a function argument  c) You have to manually read the `request.body` stream <p>4. `raise HTTPException(status_code=404)` is used to:</p>  a) Generate a fatal server error (500)  b) Return a proper HTTP error response to the client  c) Log the error to a file <p>5. Why did we create a separate `SpaceshipCreate` model for creating a resource (`POST`)?</p>  a) Because the object being created does not have an `id` yet  b) Because FastAPI requires different model names for each endpoint  c) To speed up validation Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have implemented the full CRUD cycle and transformed your API from a simple \"information board\" into a full-fledged Fleet Command Center!</p> <ul> <li>\u2705 Create: <code>POST /spaceships</code> to launch new craft.</li> <li>\u2705 Read: <code>GET /spaceships</code> and <code>GET /spaceships/{id}</code> to retrieve data.</li> <li>\u2705 Update: <code>PUT /spaceships/{id}</code> to update missions.</li> <li>\u2705 Delete: <code>DELETE /spaceships/{id}</code> to decommission craft.</li> </ul> <p>Your fleet is under complete control! In the next chapter, we will see how FastAPI has automatically created a detailed \"operating manual\" for us\u2014the interactive Swagger documentation.</p> <p>\ud83d\udccc Checkpoint:</p> <ul> <li>All 5 endpoints (<code>GET</code> (2), <code>POST</code>, <code>PUT</code>, <code>DELETE</code>) are visible and working in <code>/docs</code>.</li> <li>You can successfully create, read, update, and delete a resource.</li> <li>Requesting a non-existent ID returns a <code>404</code> error.</li> </ul> <p>\u26a0\ufe0f If you have errors:</p> <ul> <li><code>NameError</code>: Check that you have imported <code>HTTPException</code>, <code>Response</code>, and <code>status</code>.</li> <li><code>KeyError</code>: You are likely trying to access an ID that has already been deleted.</li> <li>Incorrect <code>PUT</code> or <code>POST</code> behavior: Make sure you are using the correct Pydantic model in the function argument (<code>SpaceshipCreate</code>).</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/5/","title":"Chapter 3.5: Automatic Swagger Documentation","text":"<p>Time to learn: 30 minutes</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/5/#1-api-documentation-the-space-stations-operating-manual","title":"1. API Documentation: The Space Station's Operating Manual","text":"<p>Imagine you are a new astronaut arriving at the ISS. How do you know which switch does what and how to operate the robotic arm? You need a detailed and up-to-date manual.</p> <p>API documentation is the same kind of manual for developers. It explains:</p> <ul> <li>Which \"docking ports\" (endpoints) are available.</li> <li>Which \"commands\" (HTTP methods) can be sent.</li> <li>What \"cargo\" (data) needs to be transmitted.</li> <li>What \"telemetry\" (responses) to expect.</li> </ul> <p>The problem is that writing documentation manually is long, boring, and it almost always becomes outdated.</p> <p>\ud83d\udca1 Space Analogy:</p> <p>Manual documentation is like paper blueprints that sit in an archive and are not updated after the station is upgraded. FastAPI's automatic documentation is an interactive display in Mission Control that updates in real-time after every change on the station.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/5/#2-the-magic-of-fastapi-how-does-it-work","title":"2. The Magic of FastAPI: How Does It Work?","text":"<p>FastAPI does all the \"dirty work\" for you, based on your own code. It scans:</p> <ol> <li>Routes: All decorators like <code>@app.get</code>, <code>@app.post</code>, etc.</li> <li>Parameters: Path parameters (<code>ship_id: int</code>) and query parameters.</li> <li>Pydantic Models: Your \"blueprints\" (<code>Spaceship</code>, <code>SpaceshipCreate</code>).</li> <li>Docstrings: The descriptions you write in triple quotes.</li> </ol> <p>Based on this data, FastAPI generates a schema according to the OpenAPI standard (formerly known as Swagger) and then displays it through two beautiful interfaces.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/5/#3-exploring-the-mission-control-display-swagger-ui","title":"3. Exploring the \"Mission Control Display\": Swagger UI","text":"<p>Swagger UI is an interactive interface that allows you not only to read the documentation but also to test the API directly from the browser.</p> <p>Open <code>http://127.0.0.1:8000/docs</code></p> <p>You will see:</p> <ul> <li>List of Endpoints: Grouped by tags (by default, by the resource name) and colored according to the HTTP methods.</li> <li>Descriptions: The text from your docstrings (<code>\"\"\"...\"\"\"</code>) is displayed as endpoint descriptions.</li> <li>Parameters: Shows which parameters (like <code>ship_id</code>) the endpoint expects, their type, and whether they are required.</li> <li>Request Body: For <code>POST</code> and <code>PUT</code>, it shows a JSON schema generated from your Pydantic model (<code>SpaceshipCreate</code>).</li> <li>Responses: Shows possible status codes and response schemas based on the <code>response_model</code>.</li> <li>\"Try it out\" Button: Allows you to fill in the parameters and send a real request to your server.</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/5/#4-improving-the-documentation-tags-and-descriptions","title":"4. Improving the Documentation: Tags and Descriptions","text":"<p>Let's make our documentation even more professional.</p> <p>Step 1: Add metadata to the <code>FastAPI</code> instance You can pass general information about your API when creating the <code>app</code>.</p> <p>Modify the <code>app = FastAPI()</code> line in <code>main.py</code>: <pre><code># main.py\n\napp = FastAPI(\n    title=\"Fleet Management API\",\n    description=\"API for managing a fleet of spacecraft.\",\n    version=\"1.0.0\",\n)\n</code></pre> Now, a title and description will appear at the top of your documentation.</p> <p>Step 2: Group endpoints using tags You can add tags to each endpoint to group them logically.</p> <p>Add the <code>tags</code> parameter to the decorators: <pre><code># GET /spaceships\n@app.get(\"/spaceships\", response_model=List[Spaceship], tags=[\"Spacecraft\"])\n# ...\n\n# GET /spaceships/{ship_id}\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"Spacecraft\"])\n# ...\n\n# POST /spaceships\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201, tags=[\"Spacecraft\"])\n# ...\n\n# and so on for PUT and DELETE\n</code></pre> Now all your CRUD operations will be neatly grouped under the \"Spacecraft\" heading.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/5/#5-the-alternative-view-redoc","title":"5. The Alternative View: ReDoc","text":"<p>FastAPI provides another documentation interface out of the box \u2014 ReDoc. It is less interactive, but often considered more readable and is excellent for static documentation.</p> <p>Open <code>http://127.0.0.1:8000/redoc</code></p> <p>You will see a three-column layout with navigation, endpoint descriptions, and data schemas. This is a great way to provide documentation to your \"clients\" (for example, the frontend team).</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/5/#review-quiz","title":"Review Quiz","text":"<p>1. FastAPI generates documentation based on...</p>  a) Separate `.html` files that you have to create manually  b) Your Python code: routes, Pydantic models, and docstrings  c) Comments that start with `#` <p>2. What standard is the basis for FastAPI's auto-documentation?</p>  a) GraphQL  b) XML-RPC  c) OpenAPI (Swagger) <p>3. At what URL is the interactive Swagger UI documentation available by default?</p>  a) `/admin`  b) `/docs`  c) `/api/help` <p>4. The `tags` parameter in the `@app.get` decorator is used for:</p>  a) Adding meta tags to HTML  b) Grouping endpoints in the documentation  c) Marking an endpoint as deprecated <p>5. ReDoc is...</p>  a) A tool for editing code in the browser  b) An alternative, more static interface for API documentation  c) A system for detecting \"red\" (non-working) code Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have seen one of FastAPI's most powerful \"superpowers\"\u2014creating documentation without any effort.</p> <ul> <li>\ud83d\udcd6 Your API now has two types of up-to-date documentation: Swagger UI and ReDoc.</li> <li>\ud83d\udd2c The documentation is interactive and allows you to test the API on the fly.</li> <li>\ud83c\udff7\ufe0f You have learned to improve it with metadata and tags.</li> </ul> <p>The operating manual is ready and always up-to-date! In the final chapter of this section, we will learn how to handle \"cosmic anomalies\"\u2014errors and invalid data.</p> <p>\ud83d\udccc Checkpoint:</p> <ul> <li>Make sure that the title, description, and tagged endpoints are displayed at <code>http://127.0.0.1:8000/docs</code>.</li> <li>Check that your <code>Spaceship</code> model is visible in the \"Schemas\" section.</li> <li>Open <code>http://127.0.0.1:8000/redoc</code> and appreciate the alternative view.</li> </ul> <p>\u26a0\ufe0f If changes are not displayed:</p> <ul> <li>Make sure you have saved the <code>main.py</code> file.</li> <li>Check that the <code>uvicorn</code> server is running with the <code>--reload</code> flag and has restarted successfully.</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/6/","title":"Chapter 3.6: Error Handling and Validation","text":"<p>Time to learn: 50 minutes</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/6/#1-error-handling-the-spaceships-emergency-shields","title":"1. Error Handling: The Spaceship's \"Emergency Shields\"","text":"<p>Even on the most advanced ship, unforeseen situations can occur:</p> <ul> <li>Incorrect command from Mission Control: The client sent invalid data.</li> <li>Loss of communication with a module: The resource was not found in the database.</li> <li>Reactor failure: An internal server error.</li> </ul> <p>Proper error handling is a system of \"emergency shields.\" It prevents the ship from falling apart and instead sends a clear signal to Mission Control about what went wrong.</p> <p>\ud83d\udca1 Space Analogy:</p> <p>Instead of just sending a \"FAILURE!\" signal to Mission Control, a good onboard computer would send a structured report: <pre><code>{\n  \"error_code\": \"ENGINE_OVERHEAT\",\n  \"message\": \"Engine #2 temperature has exceeded normal levels\",\n  \"suggested_action\": \"Activate cooling system\"\n}\n</code></pre> This allows engineers on Earth to quickly understand the problem and take action.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/6/#2-pydantic-validation-the-built-in-onboard-computer","title":"2. Pydantic Validation: The Built-in \"Onboard Computer\"","text":"<p>We have already encountered the magic of Pydantic. If you try to create a ship with an incorrect data type (e.g., <code>launch_year</code> as a string), FastAPI will automatically return a <code>422 Unprocessable Entity</code> error with a detailed description of which field failed validation and why.</p> <p>Example request to <code>POST /spaceships</code>: <pre><code>{\n  \"name\": \"X-Wing\",\n  \"type\": \"Fighter\",\n  \"launch_year\": \"a long time ago\",  // &lt;-- Invalid type!\n  \"status\": \"In service\"\n}\n</code></pre></p> <p>Automatic response from FastAPI: <pre><code>{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"body\",\n        \"launch_year\"\n      ],\n      \"msg\": \"value is not a valid integer\",\n      \"type\": \"type_error.integer\"\n    }\n  ]\n}\n</code></pre> This is incredibly powerful! You don't need to write code to check types\u2014FastAPI and Pydantic do it for you.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/6/#3-handling-resource-not-found-the-httpexception","title":"3. Handling \"Resource Not Found\": The <code>HTTPException</code>","text":"<p>We have already used this in our CRUD operations. <code>HTTPException</code> is the standard FastAPI way to interrupt the execution of a request and immediately return an error response to the client.</p> <p>Let's recall the code from <code>GET /spaceships/{ship_id}</code>: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # Make sure HTTPException is imported\n\n# ...\n\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"Spacecraft\"])\ndef get_spaceship(ship_id: int):\n    ship = db_spaceships.get(ship_id)\n    if not ship:\n        # If the ship is not found, \"raise\" a 404 exception\n        raise HTTPException(status_code=404, detail=f\"Spacecraft with ID {ship_id} not found\")\n    return ship\n</code></pre></p> <ul> <li><code>raise HTTPException(...)</code>: This call stops the function's execution.</li> <li><code>status_code=404</code>: Sets the HTTP status of the response.</li> <li><code>detail</code>: The message that will be sent to the client in the JSON response body.</li> </ul>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/6/#4-custom-validators-special-checks-before-launch","title":"4. Custom Validators: \"Special Checks\" Before Launch","text":"<p>What if we want to add our own, more complex business logic? For example, to prohibit launching ships named \"Death Star.\"</p> <p>For this, Pydantic has a powerful tool: validators.</p> <p>Step 1: Add a validator to the <code>SpaceshipCreate</code> model <pre><code># main.py\nfrom pydantic import BaseModel, Field, validator\n\nclass SpaceshipCreate(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n\n    @validator('name')\n    def name_must_not_be_forbidden(cls, v):\n        \"\"\"Checks that the ship's name is not on the forbidden list.\"\"\"\n        if 'Death Star' in v:\n            raise ValueError('Names like \"Death Star\" are forbidden by Imperial decree!')\n        return v.title() # Also, capitalize the name\n</code></pre></p> <ul> <li><code>@validator('name')</code>: A decorator that \"binds\" this function to the <code>name</code> field.</li> <li><code>cls, v</code>: The method receives the class itself (<code>cls</code>) and the field's value (<code>v</code>).</li> <li><code>raise ValueError(...)</code>: If the check fails, we raise a standard Python exception. FastAPI will catch it and turn it into a nice <code>422</code> error.</li> <li><code>return v.title()</code>: If everything is fine, we must return the value. We can even modify it on the fly (for example, standardize its format).</li> </ul> <p>Step 2: Test it Restart <code>uvicorn</code> and try to create a ship with the forbidden name via <code>/docs</code>. You will get a <code>422</code> error with your custom message!</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/6/#5-global-error-handling-the-stations-emergency-protocol","title":"5. Global Error Handling: The Station's \"Emergency Protocol\"","text":"<p>Sometimes you need to catch unexpected errors (like a connection failure to a real database) and return a single, standardized response format.</p> <p>For this, the <code>@app.exception_handler</code> decorator is used.</p> <p>Example: Catching all <code>ValueError</code> exceptions <pre><code># main.py\nfrom fastapi import FastAPI, Request\nfrom fastapi.responses import JSONResponse\n\n# ...\n\n@app.exception_handler(ValueError)\nasync def value_error_exception_handler(request: Request, exc: ValueError):\n    \"\"\"\n    A global handler for all ValueError exceptions\n    to return a standardized JSON.\n    \"\"\"\n    return JSONResponse(\n        status_code=400,\n        content={\"message\": f\"Invalid data provided: {str(exc)}\"},\n    )\n</code></pre></p> <ul> <li><code>@app.exception_handler(ValueError)</code>: Tells FastAPI that this function should handle all <code>ValueError</code> exceptions that were not caught earlier.</li> <li><code>async def ...</code>: Exception handlers should be asynchronous (<code>async</code>).</li> <li><code>JSONResponse</code>: Allows you to fully control the response body and status.</li> </ul> <p>Now, when our custom validator is triggered, the response will have the more user-friendly format that we defined.</p>"},{"location":"en/Chapter%203%20-%20API%20in%20Python%20FastAPI/6/#review-quiz","title":"Review Quiz","text":"<p>1. If a client sends data of the wrong type (a string instead of a number), FastAPI will automatically return the status...</p>  a) 500 Internal Server Error  b) 404 Not Found  c) 422 Unprocessable Entity <p>2. `raise HTTPException(status_code=404)` is used to...</p>  a) Shut down the entire server  b) Interrupt the request and return a 404 error to the client  c) Log the error but continue execution <p>3. The `@validator('field_name')` decorator in Pydantic is for:</p>  a) Creating custom validation logic for a specific field  b) Specifying that a field is required  c) Encrypting the field's value <p>4. What must a Pydantic validator function do if the data is valid?</p>  a) Return nothing (None)  b) It must return the value (possibly modified)  c) Return `True` <p>5. `@app.exception_handler()` allows you to...</p>  a) Create new types of exceptions  b) Catch exceptions globally and define a custom response for them  c) Ignore all errors and always return a 200 status Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have installed a powerful defense system and emergency protocols on your API ship. It can now:</p> <ul> <li>\ud83d\udee1\ufe0f Automatically repel \"invalid data\" attacks using Pydantic.</li> <li>\ud83d\udea8 Properly report missing resources (<code>404 Not Found</code>) via <code>HTTPException</code>.</li> <li>\u2699\ufe0f Perform \"special checks\" with custom validators.</li> <li>\ud83e\uddef Globally catch unexpected failures and provide standardized responses.</li> </ul> <p>Your \"hyperdrive\" is not only fast, but also incredibly reliable!</p> <p>\ud83d\udccc Checkpoint:</p> <ul> <li>Try to create a ship named \"Death Star\" and ensure you get a <code>400</code> error with your custom message (from the global handler).</li> <li>Try to request <code>GET /spaceships/999</code> and ensure you get a <code>404</code> error.</li> <li>Try to send a <code>POST</code> request with <code>launch_year</code> as a string and ensure you get a <code>422</code> error.</li> </ul> <p>\u26a0\ufe0f If you have errors:</p> <ul> <li>Make sure all necessary modules (<code>HTTPException</code>, <code>validator</code>, <code>Request</code>, <code>JSONResponse</code>) are imported.</li> <li>Check that the <code>@validator</code> and <code>@app.exception_handler</code> decorators are written without typos.</li> </ul> <p>Congratulations on completing Chapter 3! You have built, launched, and secured a powerful, well-documented API from scratch using FastAPI. You are ready to take on real space missions</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/1/","title":"Chapter 4.1: Fetch API Basics","text":"<p>Study time: 45 minutes</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/1/#1-fetch-api-the-main-antenna-of-mission-control","title":"1. Fetch API: The \"Main Antenna\" of Mission Control","text":"<p>Imagine that your Mission Control Center has a huge radio antenna for communicating with spacecraft. You can tune it to the right frequency, send a command, and wait for a response.</p> <p>Fetch API is the same kind of \"built-in antenna\" in modern browsers. It is a standard JavaScript interface for making HTTP requests to servers. It allows you to:</p> <ul> <li>\ud83d\udce1 Send \"commands\" (GET, POST, PUT, DELETE) to our API.</li> <li>\ud83d\udef0\ufe0f Receive \"telemetry\" (JSON data) from the server.</li> <li>\u2699\ufe0f Work asynchronously, without \"freezing\" the user interface while waiting for a response.</li> </ul> <p>\ud83d\udca1 Space analogy:</p> <p><code>fetch()</code> is the command \"Antenna, establish communication!\". You pass it:</p> <ul> <li>Target coordinates (the URL of our API).</li> <li>Command type (method: GET, POST).</li> <li>Command content (request body, headers).</li> </ul> <p>In return, you don't get the data itself, but a Promise that the data will arrive.</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/1/#2-asynchrony-communication-at-the-speed-of-light","title":"2. Asynchrony: Communication at the speed of light","text":"<p>Communicating with a distant spacecraft takes time. You can't just stop all work at Mission Control and wait for a response. You send a command and continue working, and when the response arrives, the system will notify you.</p> <p>This is asynchrony. JavaScript does not block the execution of the rest of the code while waiting for a response from the server. To manage this process, the Fetch API uses Promises.</p> <p>A Promise is a \"receipt\" that you have sent a request. It has three states:</p> <ul> <li><code>pending</code>: The signal is still on its way.</li> <li><code>fulfilled</code>: The response was received successfully!</li> <li><code>rejected</code>: An error occurred (e.g., no connection).</li> </ul>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/1/#3-first-request-lets-find-out-where-the-iss-is","title":"3. First request: Let's find out where the ISS is","text":"<p>Let's send our first request using <code>fetch</code>. We will use a simple HTML file and <code>&lt;script&gt;</code> tags.</p> <p>Step 1: Create <code>index.html</code> Create an <code>index.html</code> file in a new folder (e.g., <code>frontend_fleet_control</code>). <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Mission Control - Fetch API&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;ISS Communication Status&lt;/h1&gt;\n    &lt;div id=\"iss-status\"&gt;Waiting for data...&lt;/div&gt;\n\n    &lt;script&gt;\n        // Our JavaScript code will be here\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Step 2: Write the code with <code>fetch</code> Inside the <code>&lt;script&gt;</code> tag, let's add our first <code>fetch</code> request to the public Open Notify API. <pre><code>// index.html -&gt; &lt;script&gt;\n\nconst issApiUrl = 'http://api.open-notify.org/iss-now.json';\nconst statusDiv = document.getElementById('iss-status');\n\nconsole.log('Sending request to get ISS coordinates...');\n\nfetch(issApiUrl)\n    .then(response =&gt; {\n        // The first .then() handles the HTTP response itself\n        console.log('Received response from server!', response);\n        // Convert the response body to JSON, this is also an asynchronous operation\n        return response.json();\n    })\n    .then(data =&gt; {\n        // The second .then() gets the already parsed JSON data\n        console.log('Data successfully converted to JSON!', data);\n        const position = data.iss_position;\n        statusDiv.innerHTML = `The ISS is currently here:\n                               &lt;strong&gt;Latitude:&lt;/strong&gt; ${position.latitude},\n                               &lt;strong&gt;Longitude:&lt;/strong&gt; ${position.longitude}`;\n    })\n    .catch(error =&gt; {\n        // .catch() will trigger if a network error occurs\n        console.error('Error communicating with the ISS!', error);\n        statusDiv.textContent = 'Could not retrieve data. Check your connection.';\n    });\n</code></pre></p> <ul> <li><code>fetch(url)</code>: Sends a GET request. Returns a promise.</li> <li><code>.then(callback)</code>: Executes when the promise is successfully resolved (<code>fulfilled</code>). The first <code>.then</code> receives a <code>Response</code> object.</li> <li><code>response.json()</code>: A method that reads the response body and parses it as JSON. It also returns a promise!</li> <li><code>.catch(callback)</code>: Executes if the promise is rejected, for example, due to a network error.</li> </ul> <p>Step 3: Open in browser Just open the <code>index.html</code> file in your browser. You should see \"Waiting for data...\" change to the current coordinates of the ISS. Open the developer console (F12) to see the logs.</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/1/#4-what-if-handling-server-errors","title":"4. \"What if...\": Handling server errors","text":"<p>What if we request a non-existent URL? <code>fetch('http://api.open-notify.org/non-existent-endpoint')</code></p> <p><code>fetch</code> is designed so that <code>.catch()</code> will only trigger on network errors (no internet, DNS not found). But responses with codes <code>404</code> or <code>500</code> are a successfully received response for <code>fetch</code>! It just contains an error code.</p> <p>The correct way to check: <pre><code>fetch('http://api.open-notify.org/non-existent-endpoint')\n    .then(response =&gt; {\n        // Check the .ok property, which is true for statuses 200-299\n        if (!response.ok) {\n            // If the response is not \"OK\", create our own error to go to .catch()\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n    })\n    .then(data =&gt; {\n        console.log(data);\n    })\n    .catch(error =&gt; {\n        console.error('An error occurred while executing the request:', error);\n    });\n</code></pre></p> <ul> <li><code>response.ok</code>: This is your main indicator of success.</li> <li><code>throw new Error()</code>: We manually \"fail\" the promise chain to get to the <code>.catch</code> block.</li> </ul>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/1/#quiz-to-consolidate","title":"Quiz to consolidate","text":"<p>1. Fetch API is...</p>  a) An external library that needs to be downloaded  b) A browser-inbuilt interface for HTTP requests  c) A programming language for networking <p>2. What does the `fetch(url)` call return?</p>  a) JSON data immediately  b) A `Promise` object  c) An HTML page <p>3. The `.then()` method in a promise chain is called when...</p>  a) A network error occurs  b) The request is successfully completed  c) The user closes the tab <p>4. The `response.json()` method is needed to...</p>  a) Convert the response body into a JavaScript object  b) Check if the response is valid JSON  c) Send data to the server in JSON format <p>5. How to correctly check that the server did not return an error (e.g., 404)?</p>  a) Check the `response.ok` property  b) See if the `.catch()` block is triggered  c) Check that `response.status` is equal to \"OK\" Check <p>\ud83d\ude80 Chapter summary:</p> <p>You have configured the \"main antenna\" of your Mission Control and learned how to send requests and receive responses.</p> <ul> <li>\ud83d\udce1 You have mastered the basic syntax of <code>fetch()</code>.</li> <li>\ud83d\udef0\ufe0f You understand what Promises are and how to work with <code>.then()</code> and <code>.catch()</code>.</li> <li>\u2699\ufe0f You have learned how to correctly handle server responses by checking <code>response.ok</code>.</li> </ul> <p>Communication established! In the next chapter, we will connect our Mission Control to the space fleet API that we created with FastAPI, and learn how to get and display a list of our ships.</p> <p>\ud83d\udccc Check:</p> <ul> <li>Make sure your <code>index.html</code> file correctly displays the ISS coordinates.</li> <li>Try to intentionally break the URL and see what error is displayed in the developer console.</li> </ul> <p>\u26a0\ufe0f If the code doesn't work:</p> <ul> <li>CORS Error: If you are trying to make a request to your local FastAPI API (e.g., <code>http://127.0.0.1:8000</code>) from a file opened as <code>file:///...</code>, the browser will block the request due to the CORS security policy. We will solve this problem in the next chapter. For now, we are using public APIs that allow this.</li> <li>HTTP/HTTPS: <code>http://api.open-notify.org</code> works over HTTP. Some browsers may warn about this. If you are working from an HTTPS site, requests to HTTP resources may be blocked.</li> </ul>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/2/","title":"Chapter 4.2: Sending GET Requests","text":"<p>Study time: 45 minutes</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/2/#1-get-requesting-telemetry-from-the-space-fleet","title":"1. GET: Requesting Telemetry from the Space Fleet","text":"<p>A GET request is the primary command for retrieving data. In our Mission Control, this is equivalent to the request: \"Fleet Command, report status!\"</p> <p>We will use <code>fetch</code> to send two types of GET requests to our FastAPI server:</p> <ol> <li>Get the entire collection: \"Show me my entire fleet.\"</li> <li>Get a single resource: \"Give me detailed information about the ship with ID 2.\"</li> </ol> <p>\ud83d\udca1 Space Analogy:</p> <p><code>GET /spaceships</code> is a broadcast request to the entire fleet asking for their call signs.</p> <p><code>GET /spaceships/3</code> is a targeted request to a specific ship (like the ISS) asking for full data on its systems.</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/2/#2-the-cors-problem-interplanetary-interference","title":"2. The CORS Problem: \"Interplanetary Interference\"","text":"<p>Before we send a request, we need to solve one important problem. By default, for security reasons, browsers prohibit a web page (our Mission Control) loaded from one \"origin\" (<code>file:///...</code> or <code>http://localhost:5500</code>) from making requests to an API on another \"origin\" (<code>http://127.0.0.1:8000</code>).</p> <p>This policy is called CORS (Cross-Origin Resource Sharing).</p> <p>To allow our frontend to communicate with the backend, we need to configure the FastAPI server to tell the browser: \"It's okay, I trust requests from this address.\"</p> <p>Step 1: Install <code>python-multipart</code> This is necessary for the middleware to work correctly. <pre><code>pip install python-multipart\n</code></pre></p> <p>Step 2: Configure CORS in <code>main.py</code> Open your <code>main.py</code> file from the FastAPI project and add the following code: <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware  # &lt;-- Import the middleware\n\n# ... your other code (models, db_spaceships) ...\n\napp = FastAPI(\n    title=\"Fleet Management API\",\n    # ...\n)\n\n# --- CORS CONFIGURATION ---\n# Specify which \"origins\" can send requests\norigins = [\n    \"http://localhost\",\n    \"http://localhost:8080\",\n    \"http://127.0.0.1:5500\",  # Address for Live Server in VS Code\n    \"null\"  # For requests from local file:///\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # Allow the specified origins\n    allow_credentials=True,\n    allow_methods=[\"*\"],  # Allow all methods (GET, POST, etc.)\n    allow_headers=[\"*\"],  # Allow all headers\n)\n\n# --- YOUR ENDPOINTS BELOW ---\n@app.get(\"/\")\n# ...\n</code></pre> Now our API server is ready to accept requests from the frontend. Restart <code>uvicorn</code> for the changes to take effect!</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/2/#3-getting-the-list-of-all-ships","title":"3. Getting the List of All Ships","text":"<p>Let's create an interface to display our fleet.</p> <p>Step 1: Update <code>index.html</code> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Mission Control - Fleet Management&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: sans-serif; }\n        .ship-list { list-style: none; padding: 0; }\n        .ship-list li { border: 1px solid #ccc; margin-bottom: 10px; padding: 15px; border-radius: 5px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Space Fleet Control Panel&lt;/h1&gt;\n\n    &lt;button id=\"load-fleet-btn\"&gt;Request Fleet Data&lt;/button&gt;\n\n    &lt;h2&gt;List of Crafts:&lt;/h2&gt;\n    &lt;ul id=\"fleet-list\" class=\"ship-list\"&gt;\n        &lt;li&gt;Awaiting command...&lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt; &lt;!-- Include external script --&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Step 2: Create <code>app.js</code> Next to <code>index.html</code>, create a file <code>app.js</code>. We will move all the logic into it. <pre><code>// app.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // URL of our FastAPI server\n\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetList = document.getElementById('fleet-list');\n\n// Function to load and display the fleet\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;Loading telemetry...&lt;/li&gt;';\n\n        // Send a GET request to /spaceships\n        const response = await fetch(`${API_BASE_URL}/spaceships`);\n\n        if (!response.ok) {\n            throw new Error(`Network error: ${response.status}`);\n        }\n\n        const ships = await response.json(); // Get the array of ships\n\n        // Clear the list and display the data\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;No crafts found in the registry.&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            const listItem = document.createElement('li');\n            listItem.innerHTML = `\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                Type: ${ship.type}&lt;br&gt;\n                Launch Year: ${ship.launch_year}&lt;br&gt;\n                Status: ${ship.status}\n            `;\n            fleetList.appendChild(listItem);\n        });\n\n    } catch (error) {\n        console.error('Failed to load fleet data:', error);\n        fleetList.innerHTML = `&lt;li&gt;Error: ${error.message}&lt;/li&gt;`;\n    }\n}\n\n// Add event listener to the button\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\n</code></pre></p> <ul> <li>async/await: We used a new, more convenient syntax for working with promises. We will discuss it in detail in Chapter 4.5. For now, just know that <code>await</code> \"waits\" for the promise to complete without blocking the page.</li> <li><code>try...catch</code>: An excellent way to handle errors in <code>async</code> functions.</li> </ul> <p>Step 3: Testing Open <code>index.html</code> in your browser (preferably with the Live Server extension in VS Code, which will run it at <code>http://127.0.0.1:5500</code>). Click the \"Request Fleet Data\" button. The list of your ships from FastAPI should appear on the page!</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/2/#4-getting-data-for-a-single-ship","title":"4. Getting Data for a Single Ship","text":"<p>Now let's add a form to request information by a specific ID.</p> <p>Step 1: Add the form to <code>index.html</code> <pre><code>&lt;!-- index.html, after the list --&gt;\n&lt;hr&gt;\n&lt;h2&gt;Request by ID&lt;/h2&gt;\n&lt;form id=\"ship-form\"&gt;\n    &lt;input type=\"number\" id=\"ship-id-input\" placeholder=\"Enter craft ID\" required&gt;\n    &lt;button type=\"submit\"&gt;Find Craft&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"ship-details\" class=\"ship-list\"&gt;&lt;/div&gt;\n</code></pre></p> <p>Step 2: Add logic to <code>app.js</code> <pre><code>// app.js, at the end of the file\n\nconst shipForm = document.getElementById('ship-form');\nconst shipIdInput = document.getElementById('ship-id-input');\nconst shipDetails = document.getElementById('ship-details');\n\nasync function fetchShipById(event) {\n    event.preventDefault(); // Prevent the page from reloading\n    const shipId = shipIdInput.value;\n\n    if (!shipId) {\n        alert('Please enter an ID.');\n        return;\n    }\n\n    try {\n        shipDetails.innerHTML = '&lt;li&gt;Searching for craft...&lt;/li&gt;';\n\n        // Send a GET request to /spaceships/{id}\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`);\n\n        if (response.status === 404) {\n             throw new Error('Craft with this ID not found in the registry.');\n        }\n        if (!response.ok) {\n            throw new Error(`Network error: ${response.status}`);\n        }\n\n        const ship = await response.json();\n\n        shipDetails.innerHTML = `\n            &lt;li&gt;\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                Type: ${ship.type}&lt;br&gt;\n                Launch Year: ${ship.launch_year}&lt;br&gt;\n                Status: ${ship.status}\n            &lt;/li&gt;\n        `;\n    } catch (error) {\n        console.error(`Error searching for craft ${shipId}:`, error);\n        shipDetails.innerHTML = `&lt;li&gt;Error: ${error.message}&lt;/li&gt;`;\n    }\n}\n\nshipForm.addEventListener('submit', fetchShipById);\n</code></pre></p> <ul> <li>We added separate handling for the <code>404</code> status to give the user a more understandable error message.</li> </ul> <p>Step 3: Testing Refresh the page, enter the ID of an existing ship (e.g., 1), and click \"Find Craft\". You should see its data. Try entering a non-existent ID (e.g., 99) \u2014 you will see an error message.</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/2/#quiz-to-reinforce","title":"Quiz to Reinforce","text":"<p>1. The browser's CORS policy is for...</p>  a) Speeding up page loads  b) Protecting against malicious cross-site requests  c) Compressing JSON data <p>2. To allow a frontend on `localhost:5500` to access FastAPI, you need to...</p>  a) Configure `CORSMiddleware` in FastAPI  b) Change browser settings  c) Do nothing, it works by default <p>3. To get data for a specific resource with ID=5, the request URL will look like:</p>  a) `/resources?id=5`  b) `/resources/5`  c) `/get/resources/5` <p>4. The `await` keyword in JavaScript can only be used inside a function declared with...</p>  a) `function`  b) `promise`  c) `async` <p>5. `event.preventDefault()` in a form submission handler is needed to...</p>  a) Prevent the browser's default behavior (reloading the page)  b) Stop the script execution  c) Cancel the request submission Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have successfully set up a communication channel between \"Earth\" and \"space\" and learned how to request telemetry!</p> <ul> <li>\ud83d\udee1\ufe0f You solved the \"interplanetary interference\" problem by configuring CORS on your FastAPI server.</li> <li>\ud83d\udef0\ufe0f Implemented a function to retrieve and display the entire list of spacecraft.</li> <li>\ud83d\udd2d Created an interface to request data about a specific craft by its ID.</li> </ul> <p>Mission Control is receiving data! In the next chapter, we will move on to active operations: sending commands to create, update, and delete our spacecraft.</p> <p>\ud83d\udccc Verification:</p> <ul> <li>Make sure your FastAPI server is running with <code>CORSMiddleware</code> configured.</li> <li>Check that clicking the \"Request Data\" button displays the list of ships on the page.</li> <li>Ensure that the search by ID form correctly finds existing crafts and reports an error for non-existing ones.</li> </ul> <p>\u26a0\ufe0f If there are errors:</p> <ul> <li>CORS error in the browser console: Either you didn't restart <code>uvicorn</code> after adding <code>CORSMiddleware</code>, or your frontend's address (e.g., <code>http://127.0.0.1:5500</code>) is not added to the <code>origins</code> list.</li> <li>Failed to fetch: Check that your FastAPI server is running and accessible at the address specified in <code>API_BASE_URL</code>.</li> </ul>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/3/","title":"Chapter 4.3: Sending POST/PUT/DELETE Requests","text":"<p>Study time: 1 hour</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/3/#1-active-commands-from-launch-to-decommission","title":"1. Active Commands: From Launch to Decommission","text":"<p>So far, our Mission Control has only requested information (<code>GET</code>). Now we will learn to send active commands:</p> <ul> <li>POST: \"Launch a new satellite into orbit!\"</li> <li>PUT: \"Perform a full systems upgrade on the ISS!\"</li> <li>DELETE: \"De-orbit the old <code>Debris-123</code> craft!\"</li> </ul> <p>To do this, we will use <code>fetch</code>, but with additional parameters that describe our command.</p> <p>\ud83d\udca1 Space Analogy:</p> <p>If <code>GET</code> is passive listening to the radio waves, then <code>POST</code>, <code>PUT</code>, and <code>DELETE</code> are active command transmissions. For this, we need to specify not only the \"frequency\" (URL) but also the command content (request body) and the communication protocol (headers).</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/3/#2-sending-a-post-request-launching-a-new-ship","title":"2. Sending a POST Request: Launching a New Ship","text":"<p>To create a new resource, we send a <code>POST</code> request. The most important thing here is to pass the body of the request with the data of the new object.</p> <p>Step 1: Add the creation form to <code>index.html</code> Let's place it after the \"Request by ID\" block. <pre><code>&lt;!-- index.html --&gt;\n&lt;hr&gt;\n&lt;h2&gt;Launch a New Craft&lt;/h2&gt;\n&lt;form id=\"create-ship-form\"&gt;\n    &lt;input type=\"text\" id=\"create-name\" placeholder=\"Name\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-type\" placeholder=\"Type\" required&gt;&lt;br&gt;\n    &lt;input type=\"number\" id=\"create-year\" placeholder=\"Launch Year\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-status\" placeholder=\"Status\" required&gt;&lt;br&gt;\n    &lt;button type=\"submit\"&gt;Launch&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"create-status-message\"&gt;&lt;/div&gt;\n</code></pre></p> <p>Step 2: Add the logic to <code>app.js</code> <pre><code>// app.js, at the end of the file\n\nconst createShipForm = document.getElementById('create-ship-form');\nconst createStatusMessage = document.getElementById('create-status-message');\n\nasync function createShip(event) {\n    event.preventDefault();\n\n    // 1. Collect data from the form into an object\n    const shipData = {\n        name: document.getElementById('create-name').value,\n        type: document.getElementById('create-type').value,\n        launch_year: parseInt(document.getElementById('create-year').value),\n        status: document.getElementById('create-status').value\n    };\n\n    try {\n        createStatusMessage.textContent = 'Sending launch command...';\n\n        // 2. Send the fetch request with parameters\n        const response = await fetch(`${API_BASE_URL}/spaceships`, {\n            method: 'POST', // Specify the method\n            headers: {\n                'Content-Type': 'application/json' // Tell the server we are sending JSON\n            },\n            body: JSON.stringify(shipData) // Convert the JavaScript object to a JSON string\n        });\n\n        if (!response.ok) {\n            // If the server returned an error, try to read its body\n            const errorData = await response.json();\n            throw new Error(errorData.detail || `Server error: ${response.status}`);\n        }\n\n        const newShip = await response.json();\n        createStatusMessage.textContent = `\ud83d\ude80 Successful launch! Craft assigned ID: ${newShip.id}`;\n\n        createShipForm.reset(); // Clear the form\n        fetchAndDisplayFleet(); // Refresh the fleet list\n\n    } catch (error) {\n        console.error('Error launching craft:', error);\n        createStatusMessage.textContent = `\ud83d\udd34 Error: ${error.message}`;\n    }\n}\n\ncreateShipForm.addEventListener('submit', createShip);\n</code></pre> Key points of <code>fetch</code> for POST:</p> <ul> <li><code>method: 'POST'</code>: It is mandatory to specify the HTTP method.</li> <li><code>headers: { 'Content-Type': 'application/json' }</code>: A critically important header. It tells our FastAPI server that the request body contains JSON and needs to be parsed.</li> <li><code>body: JSON.stringify(shipData)</code>: We cannot send a JavaScript object directly. It needs to be serialized (converted) into a JSON string.</li> </ul>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/3/#3-sending-a-delete-request-decommissioning-a-craft","title":"3. Sending a DELETE Request: Decommissioning a Craft","text":"<p>A delete request is simpler \u2014 it usually doesn't need a body, just the URL with the object's ID.</p> <p>Step 1: Add a \"Delete\" button to our ship list Let's modify the <code>fetchAndDisplayFleet</code> function in <code>app.js</code> to add a delete button for each item. <pre><code>// app.js, inside the fetchAndDisplayFleet function\n\n// ...\nships.forEach(ship =&gt; {\n    const listItem = document.createElement('li');\n    // Add a button with a data-attribute storing the ID\n    listItem.innerHTML = `\n        &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n        Type: ${ship.type} | Year: ${ship.launch_year} | Status: ${ship.status}&lt;br&gt;\n        &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;Decommission&lt;/button&gt;\n    `;\n    fleetList.appendChild(listItem);\n});\n// ...\n</code></pre></p> <p>Step 2: Add a handler for all \"Delete\" buttons We use event delegation \u2014 one handler for the entire list. <pre><code>// app.js, at the end of the file\n\nasync function deleteShip(shipId) {\n    if (!confirm(`Are you sure you want to decommission the craft with ID ${shipId}? This action is irreversible.`)) {\n        return;\n    }\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`, {\n            method: 'DELETE' // Specify the method\n        });\n\n        if (!response.ok) {\n            throw new Error(`Failed to decommission craft. Status: ${response.status}`);\n        }\n\n        alert(`Craft with ID ${shipId} successfully decommissioned.`);\n        fetchAndDisplayFleet(); // Refresh the list\n\n    } catch (error) {\n        console.error('Error during decommissioning:', error);\n        alert(`Error: ${error.message}`);\n    }\n}\n\n// Event delegation: listen for clicks on the entire list\nfleetList.addEventListener('click', (event) =&gt; {\n    // Check if the click was on a button with the class 'delete-btn'\n    if (event.target.classList.contains('delete-btn')) {\n        const shipId = event.target.dataset.shipId; // Get the ID from the data-attribute\n        deleteShip(shipId);\n    }\n});\n</code></pre></p> <p>Step 3: Add id to the Spaceship model</p> <p>Add the id to the models and the database in the <code>main.py</code> file</p> <pre><code>class Spaceship(BaseModel):\n    id: int\n    # Rest of the model code...\n\ndb_spaceships = {\n    1: {\n        \"id\": 1,\n        # Data for item 1\n    },\n    2: {\n        \"id\": 2,\n        # Data for item 2\n    },\n    3: {\n        \"id\": 3,\n        # Data for item 3\n    }\n}\n</code></pre> <ul> <li><code>method: 'DELETE'</code>: Specify the method. Body and headers are not needed here.</li> <li><code>confirm()</code>: A simple built-in confirmation dialog to avoid accidentally deleting something important.</li> </ul>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/3/#4-sending-a-put-request-independent-task","title":"4. Sending a PUT Request (Independent Task)","text":"<p>Implementing a <code>PUT</code> request for an update is very similar to <code>POST</code>.</p> <p>Your mission, should you choose to accept it:</p> <ol> <li>Add an \"Edit\" button next to the \"Delete\" button for each ship.</li> <li>When \"Edit\" is clicked, populate a form (you can use the same one as for creation) with the current data of the ship.</li> <li>Change the text of the \"Launch\" button to \"Update\".</li> <li>When the form is submitted, send a <code>PUT</code> request to <code>/spaceships/{id}</code> with the full body of the object.</li> <li>After a successful update \u2014 refresh the fleet list.</li> </ol> <p>Hint: You will need <code>fetch</code> with <code>method: 'PUT'</code>, <code>Content-Type</code> headers, and a <code>body</code> with <code>JSON.stringify()</code>, just like in the <code>POST</code> request.</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/3/#quiz-to-reinforce","title":"Quiz to Reinforce","text":"<p>1. Which `fetch` parameter is used to pass data in the request body?</p>  a) `data`  b) `body`  c) `payload` <p>2. The `'Content-Type': 'application/json'` header tells the server that...</p>  a) The client expects to receive a response in JSON format  b) The client is sending data in the request body in JSON format  c) The connection must be encrypted <p>3. What does the `JSON.stringify(obj)` function in JavaScript do?</p>  a) Converts a JSON string into an object  b) Checks the validity of an object  c) Converts a JavaScript object into a JSON string <p>4. To send a `DELETE` request using `fetch`, you must specify:</p>  a) An empty `body`  b) `method: 'DELETE'`  c) An `Authorization` header <p>5. Event delegation in JavaScript is when...</p>  a) We attach a single handler to a parent element instead of many to child elements  b) We delegate the right to execute a function to another script  c) An event occurs with a delay Check <p>\ud83d\ude80 Chapter Summary:</p> <p>Your Mission Control now has a full set of commands to manage the fleet!</p> <ul> <li>\u2705 You have learned to send <code>POST</code> requests with a body and headers to create new resources.</li> <li>\u2705 You have implemented <code>DELETE</code> requests to decommission obsolete craft.</li> <li>\u2705 You have received an assignment to implement a <code>PUT</code> request, reinforcing your knowledge.</li> </ul> <p>Full control established! But what if the connection is lost or the server reports an error? In the next chapter, we will create a centralized error handling system on the frontend.</p> <p>\ud83d\udccc Verification:</p> <ul> <li>Make sure the form for creating a new ship works and that the list on the page is updated after successful creation.</li> <li>Check that the \"Decommission\" button works, asks for confirmation, and removes the ship from the list.</li> <li>Try to create a ship with invalid data (e.g., with a very short name) and look at the error that your FastAPI server returns.</li> </ul> <p>\u26a0\ufe0f If there are errors:</p> <ul> <li><code>422</code> error from the server: Most likely, the data you are sending is not passing Pydantic validation. Check the browser console \u2014 <code>errorData.detail</code> will show which field has the problem.</li> <li><code>415 Unsupported Media Type</code> error: You forgot to add the <code>'Content-Type': 'application/json'</code> header.</li> <li>Delete buttons don't work: Check that event delegation is working correctly and that you are correctly getting the <code>shipId</code> from <code>data-ship-id</code>.</li> </ul>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/4/","title":"Chapter 4.4: Error Handling","text":"<p>Study time: 45 minutes</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/4/#1-error-handling-mission-control-emergency-protocols","title":"1. Error Handling: Mission Control Emergency Protocols","text":"<p>In space, anything can go wrong: a solar flare can interrupt communication, a ship's onboard computer can malfunction, and a command from Earth can contain incorrect coordinates.</p> <p>Error handling on the frontend is your Mission Control's emergency protocols. They must:</p> <ul> <li>\ud83d\udea8 Prevent the entire interface from \"exploding\" due to a single failed command.</li> <li>\ud83d\udce1 Clearly inform the operator (user) what exactly went wrong.</li> <li>\ud83d\udd27 Suggest possible next steps.</li> </ul> <p>\ud83d\udca1 Space Analogy:</p> <p>If a <code>500 Internal Server Error</code> signal comes from a ship, the Mission Control display should not show \"Critical JavaScript error on line 57\". Instead, it should be: \"\ud83d\udea8 Onboard malfunction! Engineers have been notified. Please try the command again later.\"</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/4/#2-types-of-space-anomalies","title":"2. Types of \"Space Anomalies\"","text":"<p>On the frontend, we encounter three main types of errors when working with an API:</p> <ol> <li>Network Errors: The connection to the server is not established. The antenna is not working, the cable is cut. <code>fetch</code> will fall into the <code>.catch()</code> block.</li> <li>Client Errors (4xx): The command from Earth was incorrect. Invalid ID, validation error. The server responds, but with a <code>4xx</code> status.</li> <li>Server Errors (5xx): A failure on the ship itself. A problem in the API code. The server responds, but with a <code>500+</code> status.</li> </ol> <p>We have already started handling them using <code>try...catch</code> and checking <code>response.ok</code>. Now let's do it centrally.</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/4/#3-centralized-handler-function","title":"3. Centralized Handler Function","text":"<p>Repeating the same <code>try...catch</code> code in every function is bad practice. Let's create a universal \"wrapper\" for our <code>fetch</code> requests.</p> <p>Step 1: Create <code>api.js</code> Create a new file <code>api.js</code> next to <code>app.js</code>. We will move all the API interaction logic into it. <pre><code>// api.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\n/**\n * Universal function for making API requests.\n * Handles errors and returns JSON.\n * @param {string} endpoint - The API endpoint, e.g., '/spaceships'\n * @param {object} options - Options for fetch (method, headers, body)\n */\nasync function apiRequest(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n\n    try {\n        const response = await fetch(url, options);\n\n        // If the response is not JSON at all, throw an error immediately\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n            // Exception for a successful DELETE request, which has no body\n            if (response.status === 204) return null;\n\n            throw new TypeError(`Received a non-JSON response from the server: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n\n        if (!response.ok) {\n            // If the server returned JSON with an error (e.g., detail from FastAPI)\n            const errorMessage = data.detail || `HTTP error! Status: ${response.status}`;\n            throw new Error(errorMessage);\n        }\n\n        return data;\n\n    } catch (error) {\n        console.error(`API request error to ${endpoint}:`, error);\n        // \"Re-throw\" the error so it can be caught in the UI\n        throw error;\n    }\n}\n</code></pre></p> <p>Step 2: Include <code>api.js</code> in <code>index.html</code> It is important to include it BEFORE <code>app.js</code>, as <code>app.js</code> will use its functions. <pre><code>&lt;!-- index.html --&gt;\n&lt;body&gt;\n    &lt;!-- ... --&gt;\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</code></pre></p> <p>Step 3: Refactor <code>app.js</code> Now let's rewrite our functions using the new <code>apiRequest</code>. <pre><code>// app.js\n\n// const API_BASE_URL = ...; // This line can be removed, it is now in api.js\n\n// ...\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;Loading telemetry...&lt;/li&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- Use our wrapper!\n\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;No crafts found in the registry.&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; { /* ... rest of the display code ... */ });\n    } catch (error) {\n        fleetList.innerHTML = `&lt;li&gt;\ud83d\udd34 Error loading fleet: ${error.message}&lt;/li&gt;`;\n    }\n}\n\nasync function createShip(event) {\n    event.preventDefault();\n    const shipData = { /* ... collecting data from the form ... */ };\n\n    try {\n        createStatusMessage.textContent = 'Sending launch command...';\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(shipData)\n        };\n        const newShip = await apiRequest('/spaceships', options); // &lt;-- Use our wrapper!\n\n        createStatusMessage.textContent = `\ud83d\ude80 Successful launch! Craft assigned ID: ${newShip.id}`;\n        createShipForm.reset();\n        fetchAndDisplayFleet();\n    } catch (error) {\n        createStatusMessage.textContent = `\ud83d\udd34 Error: ${error.message}`;\n    }\n}\n\n// Rewrite the other functions (fetchShipById, deleteShip) similarly!\n</code></pre> Now all the logic for handling network errors, checking <code>response.ok</code>, and parsing JSON is in one place, and the code in <code>app.js</code> has become much cleaner and more readable.</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/4/#4-displaying-errors-to-the-user","title":"4. Displaying Errors to the User","text":"<p>A good interface should not just write an error to the console, but show it to the user in an understandable way.</p> <p>Example: Improving <code>createShip</code> Our code already does this: <code>createStatusMessage.textContent = ...</code>. But we can do even better by creating a universal function for displaying notifications.</p> <p>Add to <code>app.js</code>: <pre><code>// app.js\nfunction showNotification(message, isError = false) {\n    const notificationArea = document.getElementById('create-status-message'); // or another element\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? 'red' : 'green';\n}\n\n// Use in createShip:\nasync function createShip(event) {\n    // ...\n    try {\n        // ...\n        const newShip = await apiRequest('/spaceships', options);\n        showNotification(`\ud83d\ude80 Successful launch! ID: ${newShip.id}`);\n        // ...\n    } catch (error) {\n        showNotification(`\ud83d\udd34 Error: ${error.message}`, true);\n    }\n}\n</code></pre> Now we have a single mechanism for showing both success messages and errors.</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/4/#quiz-to-reinforce","title":"Quiz to Reinforce","text":"<p>1. The `.catch()` block in a `fetch` promise will trigger if...</p>  a) The server returns a 404 Not Found error  b) A network error occurs (e.g., no internet)  c) The server returns a 500 Internal Server Error <p>2. Why is a centralized handler function for API requests needed?</p>  a) To avoid duplicating error handling code and make the UI logic cleaner  b) To send all requests simultaneously  c) It is a requirement of the Fetch API standard <p>3. `response.headers.get('content-type')` is used to...</p>  a) Set a header in the outgoing request  b) Check the content type in the received response from the server  c) Get all available content types <p>4. `throw new Error(...)` inside a `try...catch` or `.then()` is used to...</p>  a) Stop the execution of all JavaScript on the page  b) \"Fail\" the promise and pass control to the nearest `.catch()` block  c) Display a message in an `alert` <p>5. Why is it important to show errors to the user, and not just in the console?</p>  a) Because most users do not look at the console  b) To make the interface understandable and predictable  c) Both options are correct Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have strengthened your Mission Control by creating reliable emergency protocols.</p> <ul> <li>\ud83d\udee1\ufe0f You understand the difference between network, client, and server errors.</li> <li>\u2699\ufe0f You have created a centralized <code>apiRequest</code> function to handle all requests, avoiding code duplication.</li> <li>\ud83d\udce1 Your interface can now correctly inform the user about errors, making it more user-friendly and reliable.</li> </ul> <p>Emergency shields are up! But what is better: <code>.then()</code> chains or modern <code>async/await</code>? In the next chapter, we will look at both approaches and understand when to use which.</p> <p>\ud83d\udccc Verification:</p> <ul> <li>Check that your code in <code>app.js</code> has been successfully refactored and uses the new <code>apiRequest</code> function.</li> <li>Try stopping the FastAPI server and clicking the \"Request Data\" button. You should see a connection error on the page.</li> <li>Try to create a ship with invalid data. You should see the validation error message that came from FastAPI.</li> </ul> <p>\u26a0\ufe0f If there are errors:</p> <ul> <li><code>apiRequest is not defined</code>: Make sure you have included <code>api.js</code> in <code>index.html</code> before <code>app.js</code>.</li> <li>Check the browser console for other JavaScript syntax errors.</li> </ul>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/5/","title":"Chapter 4.5: Async/await vs Promise","text":"<p>Study time: 30 minutes</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/5/#1-asynchrony-two-ways-to-manage-space-communication","title":"1. Asynchrony: Two Ways to Manage \"Space Communication\"","text":"<p>Imagine Mission Control sends a command to Mars. The response will only arrive after several minutes. How do you organize work during this time?</p> <p>Method 1: \"Callback Protocol\" (Promise with <code>.then()</code>) You send a command and give an instruction: \"WHEN the response arrives, THEN execute this function.\" This is like a chain of events.</p> <p>Method 2: \"Standby Mode\" (Async/await) You say: \"I will AWAIT the response to this command, but I will not block the other control panels.\" You are essentially pausing the execution of this specific task, allowing the rest of Mission Control to continue working.</p> <p>Both methods solve the same problem \u2014 managing asynchronous operations. <code>async/await</code> is just a more modern and readable syntax that works \"on top\" of promises.</p> <p>\ud83d\udca1 Space Analogy:</p> <ul> <li>Promise with <code>.then()</code>: It's like writing on a sticky note: \"When the Mars rover sends a photo, pass it to the analysis department.\"</li> <li>Async/await: It's like telling an assistant: \"Wait for the photo from the Mars rover, and in the meantime, I'll do the calculations for the launch of a new rocket.\"</li> </ul>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/5/#2-promise-with-then-the-classic-command-chain","title":"2. Promise with <code>.then()</code>: The Classic Command Chain","text":"<p>This is the fundamental way of working with asynchrony in JavaScript, which we used in Chapter 4.1.</p> <p>Let's recall our first code: <pre><code>function getIssPositionWithPromises() {\n    console.log('Sending request via \"Promise\" protocol...');\n\n    fetch('http://api.open-notify.org/iss-now.json')\n        .then(response =&gt; {\n            // Stage 1: Response received\n            if (!response.ok) {\n                throw new Error(`HTTP error: ${response.status}`);\n            }\n            return response.json(); // Return a new promise\n        })\n        .then(data =&gt; {\n            // Stage 2: Data parsed\n            console.log('Data received via \"Promise\" protocol:', data.iss_position);\n        })\n        .catch(error =&gt; {\n            // Stage 3 (Error): Something went wrong at any stage\n            console.error('Communication failure via \"Promise\" protocol:', error);\n        });\n\n    console.log('...command sent, Mission Control continues to operate...');\n}\n</code></pre></p> <p>Pros:</p> <ul> <li>Clear chain of actions.</li> <li>Well-suited for simple sequential operations.</li> </ul> <p>Cons:</p> <ul> <li>\"Callback Hell\": With a large number of nested asynchronous operations, the code can turn into a \"pyramid\" of <code>.then()</code> clauses that is difficult to read.</li> <li>Error handling can be less intuitive.</li> </ul>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/5/#3-asyncawait-the-modern-synchronous-style","title":"3. Async/await: The Modern Synchronous Style","text":"<p><code>async/await</code> is \"syntactic sugar\" over promises that allows you to write asynchronous code as if it were synchronous.</p> <p>Rules of use:</p> <ol> <li>The <code>await</code> keyword can only be used inside a function marked as <code>async</code>.</li> <li><code>await</code> is placed before a call that returns a promise (e.g., <code>fetch()</code> or <code>response.json()</code>).</li> <li><code>await</code> \"pauses\" the execution of the <code>async</code> function until the promise is resolved, and returns its result.</li> </ol> <p>The same code, rewritten with <code>async/await</code>: <pre><code>async function getIssPositionWithAsyncAwait() {\n    console.log('Sending request via \"Async/await\" protocol...');\n\n    try {\n        // Stage 1: Wait for the server response\n        const response = await fetch('http://api.open-notify.org/iss-now.json');\n\n        if (!response.ok) {\n            throw new Error(`HTTP error: ${response.status}`);\n        }\n\n        // Stage 2: Wait for the response body to be converted to JSON\n        const data = await response.json();\n\n        console.log('Data received via \"Async/await\" protocol:', data.iss_position);\n    } catch (error) {\n        // Stage 3 (Error): Catch any error from the try block\n        console.error('Communication failure via \"Async/await\" protocol:', error);\n    }\n\n    console.log('...command sent, Mission Control continues to operate...');\n}\n</code></pre></p> <p>Pros:</p> <ul> <li>Readability: The code looks almost like regular synchronous code, making it easy to read from top to bottom.</li> <li>Error Handling: Uses the standard and familiar <code>try...catch</code> block.</li> <li>Debugging: Much easier to debug, as you can set breakpoints on each line with <code>await</code>.</li> </ul> <p>Cons:</p> <ul> <li>It's easy to forget <code>await</code> or <code>async</code>, which will lead to errors.</li> </ul>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/5/#4-when-to-use-which-protocol","title":"4. When to Use Which Protocol?","text":"Situation Recommended Approach Why? Most cases <code>async/await</code> The code is cleaner, easier to read and debug. It is the modern standard. Simple chain of 1-2 actions Promise with <code>.then()</code> Quite suitable, the code remains compact. Parallel execution of multiple requests <code>Promise.all()</code> This method allows you to run multiple promises simultaneously and wait for all of them to complete. <code>async/await</code> works great with it. <p>Example with <code>Promise.all()</code>: <pre><code>async function getParallelData() {\n    try {\n        // Start both requests at the same time\n        const [shipsResponse, launchesResponse] = await Promise.all([\n            fetch('https://api.spacexdata.com/v4/rockets'),\n            fetch('https://api.spacexdata.com/v4/launches/latest')\n        ]);\n\n        if (!shipsResponse.ok || !launchesResponse.ok) {\n            throw new Error('One of the requests failed!');\n        }\n\n        const rockets = await shipsResponse.json();\n        const latestLaunch = await launchesResponse.json();\n\n        console.log(`Total rockets in the fleet: ${rockets.length}`);\n        console.log(`Latest launch: ${latestLaunch.name}`);\n    } catch (error) {\n        console.error('Error getting parallel data:', error);\n    }\n}\n</code></pre></p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/5/#quiz-to-reinforce","title":"Quiz to Reinforce","text":"<p>1. `async/await` is...</p>  a) A replacement for promises that works differently  b) More convenient syntax for working with promises  c) A way to make JavaScript synchronous <p>2. What keyword is mandatory for a function that uses `await` inside it?</p>  a) `promise`  b) `function`  c) `async` <p>3. The main advantage of `async/await` over `.then()` is:</p>  a) Faster execution speed  b) Better code readability and convenient error handling with `try...catch`  c) Works in older browsers without polyfills <p>4. What happens if you forget `await` before `fetch()` inside an `async` function?</p>  a) The code will execute without errors, but the variable will contain a promise, not the result  b) JavaScript will throw a syntax error  c) The page will \"freeze\" while waiting for a response <p>5. `Promise.all()` is used for:</p>  a) Executing promises strictly in order  b) Running multiple promises in parallel and waiting for all of them  c) Selecting the fastest of several promises Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have studied two syntaxes for managing asynchronous operations and understood why <code>async/await</code> is preferred in most modern projects.</p> <ul> <li>\ud83d\udd17 You have refreshed your knowledge of Promise with <code>.then()</code>.</li> <li>\ud83d\udee0\ufe0f You have a deep understanding of how <code>async/await</code> works and its advantages.</li> <li>\u26a1 You have learned about <code>Promise.all</code> for executing parallel requests.</li> </ul> <p>Communication protocols studied! In the final chapter of this section, we will bring all our knowledge together and complete our \"Mission Control Center\" by creating a full-fledged interface for all CRUD operations.</p> <p>\ud83d\udccc Practice:</p> <ul> <li>Rewrite all the functions in your <code>app.js</code> that still use <code>.then()</code> to the <code>async/await</code> syntax.</li> <li>Try adding another request to <code>Promise.all()</code> (e.g., to <code>https://api.spacexdata.com/v4/starlink</code>) and display the data.</li> </ul> <p>\u26a0\ufe0f If there are errors:</p> <ul> <li><code>await is only valid in async functions</code>: Make sure the function where you are using <code>await</code> is marked as <code>async</code>.</li> <li>The variable contains <code>[object Promise]</code>: You forgot to put <code>await</code> before the function that returns a promise.</li> </ul>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/6/","title":"Chapter 4.6: Creating a Simple Interface for the API","text":"<p>Study time: 1 hour 15 minutes</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/6/#1-final-assembly-launching-the-mission-control-center","title":"1. Final Assembly: Launching the \"Mission Control Center\"","text":"<p>We have studied all the systems separately: configured the \"antenna\" (<code>Fetch</code>), learned to send \"commands\" (<code>GET</code>, <code>POST</code>, <code>DELETE</code>), and developed \"emergency protocols\" (error handling).</p> <p>It's time to bring all the components together and launch our Mission Control \u2014 a full-fledged, interactive interface for managing the space fleet.</p> <p>Our goal:</p> <ul> <li>Create a single, clean, and understandable interface.</li> <li>Implement the full CRUD cycle: creating, displaying, updating, and deleting ships.</li> <li>Add visual feedback for the user (loading, success, error).</li> </ul> <p>\ud83d\udca1 Space Analogy:</p> <p>We are moving from individual test consoles to the main screen of Mission Control. It must have all the necessary buttons and indicators so that a single operator can manage the entire fleet without switching between dozens of different systems.</p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/6/#2-interface-design-the-dashboard","title":"2. Interface Design: The \"Dashboard\"","text":"<p>We will need more structured HTML. We will use \"cards\" to display the ships and a modal window for editing them.</p> <p>Updating <code>index.html</code>: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;MCC v2.0 - Fleet Management&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt; &lt;!-- Include styles --&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Space Fleet Control Panel&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        &lt;section id=\"fleet-controls\"&gt;\n            &lt;button id=\"load-fleet-btn\"&gt;Refresh Fleet List&lt;/button&gt;\n            &lt;button id=\"show-create-form-btn\"&gt;Launch New Craft&lt;/button&gt;\n        &lt;/section&gt;\n\n        &lt;section id=\"fleet-display\"&gt;\n            &lt;h2&gt;Current Fleet Composition&lt;/h2&gt;\n            &lt;div id=\"fleet-list\" class=\"cards-container\"&gt;\n                &lt;!-- Ship cards will be here --&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n\n    &lt;!-- Modal for creating/editing (initially hidden) --&gt;\n    &lt;div id=\"modal\" class=\"modal-overlay\" style=\"display: none;\"&gt;\n        &lt;div class=\"modal-content\"&gt;\n            &lt;h2 id=\"modal-title\"&gt;Launch New Craft&lt;/h2&gt;\n            &lt;form id=\"ship-form\"&gt;\n                &lt;input type=\"hidden\" id=\"ship-id\"&gt;\n                &lt;input type=\"text\" id=\"ship-name\" placeholder=\"Name\" required&gt;\n                &lt;input type=\"text\" id=\"ship-type\" placeholder=\"Type\" required&gt;\n                &lt;input type=\"number\" id=\"ship-year\" placeholder=\"Launch Year\" required&gt;\n                &lt;input type=\"text\" id=\"ship-status\" placeholder=\"Status\" required&gt;\n                &lt;div class=\"modal-actions\"&gt;\n                    &lt;button type=\"submit\" id=\"save-btn\"&gt;Save&lt;/button&gt;\n                    &lt;button type=\"button\" id=\"cancel-btn\"&gt;Cancel&lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/form&gt;\n            &lt;div id=\"notification-area\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/6/#3-adding-a-cosmic-design-stylecss","title":"3. Adding a \"Cosmic\" Design: <code>style.css</code>","text":"<p>Create a <code>style.css</code> file to make our Mission Control look decent. <pre><code>/* style.css */\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background-color: #1a1a2e;\n    color: #e0e0e0;\n    margin: 0;\n    padding: 20px;\n}\nheader { text-align: center; margin-bottom: 20px; }\nbutton {\n    background-color: #4a4e69;\n    color: white;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\nbutton:hover { background-color: #6a6e94; }\n.cards-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 20px;\n}\n.card {\n    background-color: #2a2a4e;\n    border: 1px solid #4a4e69;\n    border-radius: 8px;\n    padding: 15px;\n}\n.card h3 { margin-top: 0; color: #9394a5; }\n.card-actions { margin-top: 15px; }\n\n/* Styles for the modal window */\n.modal-overlay {\n    position: fixed;\n    top: 0; left: 0;\n    width: 100%; height: 100%;\n    background-color: rgba(0,0,0,0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.modal-content {\n    background: #1a1a2e;\n    padding: 20px;\n    border-radius: 8px;\n    border: 1px solid #4a4e69;\n    width: 90%;\n    max-width: 500px;\n}\n#ship-form input {\n    width: calc(100% - 20px);\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 4px;\n    border: 1px solid #4a4e69;\n    background-color: #2a2a4e;\n    color: white;\n}\n.modal-actions { text-align: right; }\n</code></pre></p>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/6/#4-complete-logic-overhaul-appjs","title":"4. Complete Logic Overhaul: <code>app.js</code>","text":"<p>Now we will write the final version of <code>app.js</code>, combining all our knowledge.</p> <pre><code>// app.js\n\n// --- DOM Elements ---\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetListContainer = document.getElementById('fleet-list');\nconst modal = document.getElementById('modal');\nconst modalTitle = document.getElementById('modal-title');\nconst shipForm = document.getElementById('ship-form');\nconst saveBtn = document.getElementById('save-btn');\nconst cancelBtn = document.getElementById('cancel-btn');\nconst showCreateFormBtn = document.getElementById('show-create-form-btn');\nconst notificationArea = document.getElementById('notification-area');\n\n// --- UI Functions ---\n\nfunction showNotification(message, isError = false) {\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? '#ff6b6b' : '#6bff6b';\n}\n\nfunction openModalForCreate() {\n    shipForm.reset();\n    document.getElementById('ship-id').value = '';\n    modalTitle.textContent = 'Launch New Craft';\n    modal.style.display = 'flex';\n}\n\nfunction openModalForEdit(ship) {\n    shipForm.reset();\n    document.getElementById('ship-id').value = ship.id;\n    document.getElementById('ship-name').value = ship.name;\n    document.getElementById('ship-type').value = ship.type;\n    document.getElementById('ship-year').value = ship.launch_year;\n    document.getElementById('ship-status').value = ship.status;\n    modalTitle.textContent = `Editing: ${ship.name}`;\n    modal.style.display = 'flex';\n}\n\nfunction closeModal() {\n    modal.style.display = 'none';\n    notificationArea.textContent = '';\n}\n\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;Type: ${ship.type}&lt;/p&gt;\n        &lt;p&gt;Launch Year: ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;Status: ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;Edit&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;Decommission&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n\n// --- API and Display Logic ---\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;Loading telemetry...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships');\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;No crafts in the registry.&lt;/p&gt;';\n            return;\n        }\n        ships.forEach(ship =&gt; {\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;Error loading fleet: ${error.message}&lt;/p&gt;`;\n    }\n}\n\nasync function handleSaveShip(event) {\n    event.preventDefault();\n    const shipId = document.getElementById('ship-id').value;\n    const shipData = {\n        name: document.getElementById('ship-name').value,\n        type: document.getElementById('ship-type').value,\n        launch_year: parseInt(document.getElementById('ship-year').value),\n        status: document.getElementById('ship-status').value\n    };\n\n    try {\n        let response;\n        if (shipId) {\n            // Update (PUT)\n            response = await apiRequest(`/spaceships/${shipId}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`Craft \"${response.name}\" successfully updated!`);\n        } else {\n            // Create (POST)\n            response = await apiRequest('/spaceships', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`Craft \"${response.name}\" successfully launched! ID: ${response.id}`);\n        }\n\n        setTimeout(() =&gt; {\n            closeModal();\n            fetchAndDisplayFleet();\n        }, 1500);\n\n    } catch (error) {\n        showNotification(error.message, true);\n    }\n}\n\nasync function handleDeleteShip(shipId) {\n    if (!confirm(`Are you sure you want to decommission the craft with ID ${shipId}?`)) return;\n\n    try {\n        await apiRequest(`/spaceships/${shipId}`, { method: 'DELETE' });\n        alert('Craft successfully decommissioned.');\n        fetchAndDisplayFleet();\n    } catch (error) {\n        alert(`Error during decommissioning: ${error.message}`);\n    }\n}\n\n// --- Event Handlers ---\n\ndocument.addEventListener('DOMContentLoaded', fetchAndDisplayFleet);\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\nshowCreateFormBtn.addEventListener('click', openModalForCreate);\ncancelBtn.addEventListener('click', closeModal);\nshipForm.addEventListener('submit', handleSaveShip);\n\nfleetListContainer.addEventListener('click', async (event) =&gt; {\n    const target = event.target;\n    if (target.classList.contains('delete-btn')) {\n        handleDeleteShip(target.dataset.shipId);\n    }\n    if (target.classList.contains('edit-btn')) {\n        try {\n            const ship = await apiRequest(`/spaceships/${target.dataset.shipId}`);\n            openModalForEdit(ship);\n        } catch (error) {\n            alert(`Failed to load data for editing: ${error.message}`);\n        }\n    }\n});\n</code></pre>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/6/#5-final-tests","title":"5. Final Tests","text":"<ol> <li>Start the FastAPI server: <code>uvicorn main:app --reload</code></li> <li>Open <code>index.html</code> in your browser (via Live Server).</li> <li>Check the full cycle:<ul> <li>The list of ships should load automatically.</li> <li>Click \"Launch New Craft\", fill out the form, and save. Make sure the new ship appears in the list.</li> <li>Click \"Edit\" on any ship, change the data, and save. Make sure the information is updated.</li> <li>Click \"Decommission\" on any ship, confirm the action. Make sure it disappears from the list.</li> <li>Check all error scenarios (invalid data, server shutdown).</li> </ul> </li> </ol>"},{"location":"en/Chapter%204%20-%20Working%20with%20the%20Frontend%20API/6/#quiz-to-reinforce","title":"Quiz to Reinforce","text":"<p>1. A modal window in a web interface is...</p>  a) A new tag in HTML6  b) A pop-up dialog that blocks the rest of the interface  c) A window for displaying console errors <p>2. The `DOMContentLoaded` event occurs when...</p>  a) All images and styles are fully loaded  b) The browser has built the DOM tree from the HTML, but resources may still be loading  c) A page load error has occurred <p>3. Why do we use a single form for both creating and editing in the final version?</p>  a) To avoid duplicating HTML code and simplify the logic  b) Because the browser does not allow more than one form per page  c) It is a requirement of FastAPI <p>4. `data-ship-id=\"${ship.id}\"` is an example of...</p>  a) A CSS class  b) A JavaScript variable  c) A custom data-attribute for storing data in HTML <p>5. Code refactoring (e.g., moving logic to `api.js`) is needed to...</p>  a) Complicate the code to protect against copying  b) Improve the readability, maintainability, and reusability of the code  c) Reduce the size of the final file Check <p>\ud83d\ude80 Chapter Summary</p> <p>You have successfully completed the construction and launch of your \"Mission Control Center\".</p> <ul> <li>\ud83d\udda5\ufe0f You have created a structured and styled HTML/CSS interface.</li> <li>\u2699\ufe0f You have written clean, modular JavaScript code that implements the full CRUD cycle.</li> <li>\ud83d\udef0\ufe0f Your frontend can now fully manage the backend created with FastAPI.</li> </ul> <p>Congratulations on successfully completing Chapter 4! You have come all the way from sending a simple <code>fetch</code> request to creating a full-fledged web application that interacts with your own API.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/1/","title":"Chapter 5.1: Blade Templates in Laravel","text":"<p>Study time: 40 minutes</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/1/#1-what-is-blade-your-smart-blueprint","title":"1. What is Blade? Your \"Smart\" Blueprint","text":"<p>Until now, we have worked with two extremes: a pure <code>index.html</code> and a pure JSON response from the API. But how do we create full-fledged web pages that dynamically display data from our backend?</p> <p>Blade is Laravel's built-in templating engine. It allows us to write regular HTML, but with \"superpowers\":</p> <ul> <li>Insert variables and execute PHP code with an elegant syntax.</li> <li>Create reusable page \"layouts\" (headers, footers).</li> <li>Use loops and conditions directly in the HTML code.</li> <li>Automatically protect against XSS attacks.</li> </ul> <p>\ud83d\udca1 Space Analogy:</p> <p>Imagine that HTML is a simple blueprint of a spaceship. Blade is an advanced CAD system. You don't just draw lines, you add \"smart\" objects. You say, \"Here will be the crew list,\" and Blade automatically requests the data and fills it in. \"Here will be the main screen,\" and Blade inserts the standard interface.</p> <p>All Blade files have the <code>.blade.php</code> extension and are stored in the <code>resources/views/</code> folder.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/1/#2-basic-syntax-displaying-data","title":"2. Basic Syntax: Displaying Data","text":"<p>The simplest thing Blade does is output data.</p> <p>The <code>{{ }}</code> Syntax</p> <p>These double curly braces are a command for Blade to \"take a variable and safely output its contents.\"</p> <p>Example:</p> <ol> <li> <p>Route in <code>routes/web.php</code>: <pre><code>&lt;?php\nRoute::get('/mission-briefing', function () {\n    $mission = 'Explore the Kepler-186 system';\n    return view('briefing', ['mission_name' =&gt; $mission]);\n});\n</code></pre></p> <ul> <li><code>view('briefing', ...)</code> tells Laravel to find the <code>resources/views/briefing.blade.php</code> file.</li> <li><code>['mission_name' =&gt; $mission]</code> is an array of data that we \"pass\" to our view.</li> </ul> </li> <li> <p>View in <code>resources/views/briefing.blade.php</code>: <pre><code>&lt;h1&gt;Mission Control Briefing&lt;/h1&gt;\n&lt;p&gt;Current task: {{ $mission_name }}&lt;/p&gt;\n</code></pre></p> </li> </ol> <p>Result in the browser at <code>/mission-briefing</code>: <pre><code>&lt;h1&gt;Mission Control Briefing&lt;/h1&gt;\n&lt;p&gt;Current task: Explore the Kepler-186 system&lt;/p&gt;\n</code></pre></p> <p>\ud83d\udee1\ufe0f Important to know: Blade automatically escapes all data within <code>{{ }}</code>. This means that if a variable contains HTML tags or a malicious script, they will be output as plain text, not executed. This is a built-in protection against XSS attacks.</p> <p>To output unescaped HTML (do this with caution!), use the <code>{!! $variable !!}</code> syntax.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/1/#3-directives-adding-logic-to-html","title":"3. Directives: Adding Logic to HTML","text":"<p>Blade directives start with the <code>@</code> symbol. They allow you to use loops, conditions, and much more.</p> <p>Conditions (<code>@if</code>, <code>@else</code>): <pre><code>@if($planet-&gt;is_habitable)\n    &lt;p style=\"color: green;\"&gt;The planet is habitable!&lt;/p&gt;\n@else\n    &lt;p style=\"color: red;\"&gt;A spacesuit is required. The atmosphere is hostile.&lt;/p&gt;\n@endif\n</code></pre></p> <p>Loops (<code>@foreach</code>, <code>@forelse</code>):</p> <p><code>@forelse</code> is a very convenient directive that combines a loop and a check for emptiness. <pre><code>&lt;h2&gt;List of planets in the system:&lt;/h2&gt;\n&lt;ul&gt;\n    @forelse($planets as $planet)\n        &lt;li&gt;\n            {{ $loop-&gt;iteration }}. {{ $planet-&gt;name }}\n            &lt;!-- $loop is a special variable available in the loop --&gt;\n        &lt;/li&gt;\n    @empty\n        &lt;li&gt;No planets have been detected in this system.&lt;/li&gt;\n    @endforelse\n&lt;/ul&gt;\n</code></pre></p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/1/#4-layouts-and-sections-dont-repeat-yourself-dry","title":"4. Layouts and Sections: Don't Repeat Yourself (DRY)","text":"<p>The most powerful feature of Blade is the creation of reusable layouts. You don't need to copy the site header and footer to every page.</p> <p>Step 1: Create a master layout</p> <p>Create a file <code>resources/views/layouts/app.blade.php</code>: <pre><code>&lt;?php\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;title&gt;Mission Control - @yield('title')&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"{{ asset('css/style.css') }}\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Galactic Fleet Command Center&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        @yield('content') &lt;!-- The unique content of the page will be here --&gt;\n    &lt;/main&gt;\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command. All rights reserved.&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> -   <code>@yield('title')</code> and <code>@yield('content')</code> are \"slots\" or \"placeholders\".</p> <p>Step 2: Create a child view that uses the layout</p> <p>Create a file <code>resources/views/planets/index.blade.php</code>: <pre><code>&lt;?php\n@extends('layouts.app') {{-- Inherit our master layout --}}\n\n@section('title', 'List of Planets') {{-- Fill the 'title' section --}}\n\n@section('content') {{-- Fill the main 'content' section --}}\n    &lt;h2&gt;Registered Planets&lt;/h2&gt;\n    &lt;p&gt;This is a list of all worlds known to us.&lt;/p&gt;\n    {{-- Your @forelse loop for displaying planets can be here --}}\n@endsection\n</code></pre></p> <p>Now, when Laravel renders <code>planets.index</code>, it will first take <code>layouts.app</code>, and then insert the content from the <code>@section</code> sections into it.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/1/#quiz-to-reinforce","title":"Quiz to Reinforce","text":"<p>1. What extension do Blade template files have?</p>  a) .html  b) .blade.php  c) .php.blade <p>2. How do you safely output the `$name` variable in Blade?</p>  a)   b) {{ $name }}  c) [[$name]] <p>3. Which directive is used to inherit a master layout?</p>  a) @include('layouts.app')  b) @layout('layouts.app')  c) @extends('layouts.app') <p>4. What does the `@yield('content')` directive do?</p>  a) Defines a placeholder (a place to insert content)  b) Inserts the content of the `content.blade.php` file  c) Ends a content section <p>5. Which directive is ideal for looping through an array that might be empty?</p>  a) @foreach  b) @while  c) @forelse Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have learned the basics of Blade \u2014 a powerful tool for creating dynamic web pages. You can now:</p> <ul> <li>Output data with automatic XSS protection.</li> <li>Use directives to add logic (<code>@if</code>, <code>@forelse</code>).</li> <li>Create reusable layouts using <code>@extends</code> and <code>@yield</code>.</li> </ul> <p>We have prepared the \"blueprints\" for our ship's control panels. In the next chapter, we will create specific \"panels\" (views) for our API and display real data on them.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/2/","title":"Chapter 5.2: Creating Simple Views for the API","text":"<p>Study time: 45 minutes</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/2/#1-task-visualize-the-data","title":"1. Task: Visualize the Data","text":"<p>Our API in Chapter 2 can return data in JSON format. This is great for machines, but people prefer to see information on beautifully designed web pages. Our goal is to create two such pages:</p> <ol> <li>A list of all planets (<code>/planets</code>)</li> <li>A page for a single planet (<code>/planets/{id}</code>)</li> </ol> <p>To do this, we will use the \"Route \u2192 Controller \u2192 View\" combination.</p> <p>\ud83d\udca1 Space Analogy:</p> <p>Imagine that the JSON from the API is raw telemetry data, just a stream of numbers. Our task today is to create two screens in Mission Control (two \"views\"):</p> <ul> <li>General screen: shows the status of all objects in the system (list of planets).</li> <li>Detailed screen: when you click on an object, it displays all the information about it (single planet page).</li> </ul>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/2/#2-step-1-creating-a-controller-for-web-pages","title":"2. Step 1: Creating a Controller for Web Pages","text":"<p>For the sake of clean architecture, you should not mix the logic of the API and the logic of web pages in one controller. Let's create a new controller specifically for displaying our Blade views.</p> <p>Execute in the terminal: <pre><code>php artisan make:controller Web/PlanetPageController\n</code></pre> We are creating it in the <code>Web</code> subdirectory to separate it from the API controllers.</p> <p>Open the created file <code>app/Http/Controllers/Web/PlanetPageController.php</code>.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/2/#3-step-2-page-with-a-list-of-all-planets","title":"3. Step 2: Page with a List of All Planets","text":"<p>1. Create a method in the controller: In <code>PlanetPageController</code>, add an <code>index</code> method that will get all the planets from the database and pass them to the view. <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers\\Web;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Planet; // Don't forget to import the model\n\nclass PlanetPageController extends Controller\n{\n    /**\n     * Shows a page with a list of all planets.\n     */\n    public function index()\n    {\n        // 1. Get all planets from the DB\n        $planets = Planet::all();\n\n        // 2. Return the view and pass the data to it\n        return view('planets.index', ['planets' =&gt; $planets]);\n    }\n}\n</code></pre></p> <p>2. Create a Blade view: Create a file <code>resources/views/planets/index.blade.php</code>. We will use the layout created in the last chapter.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Planets&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n        }\n        .container {\n            max-width: 960px;\n            margin: 0 auto;\n        }\n        h2 {\n            color: #1a202c;\n        }\n        hr {\n            border: none;\n            border-top: 1px solid #e2e8f0;\n            margin: 1.5em 0;\n        }\n        .planet-list {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n            gap: 1.5em;\n        }\n        .planet-card {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 1.5em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n            transition: transform 0.2s;\n        }\n        .planet-card:hover {\n            transform: translateY(-5px);\n        }\n        .planet-card h3 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-card p {\n            margin-bottom: 0.5em;\n            color: #4a5568;\n        }\n        .planet-card a {\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .planet-card a:hover {\n            text-decoration: underline;\n        }\n        .no-planets {\n            color: #718096;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h2&gt;List of All Known Planets&lt;/h2&gt;\n        &lt;hr&gt;\n        &lt;div class=\"planet-list\"&gt;\n            @forelse($planets as $planet)\n                &lt;div class=\"planet-card\"&gt;\n                    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n                    &lt;p&gt;Solar System: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n                    &lt;p&gt;Diameter: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n                    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;Learn more &amp;rarr;&lt;/a&gt;\n                &lt;/div&gt;\n            @empty\n                &lt;p class=\"no-planets\"&gt;There are no planets in the database. Please run the seeders.&lt;/p&gt;\n            @endforelse\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li><code>number_format(...)</code> is a regular PHP function for nicely formatting numbers. It can be used directly in Blade.</li> </ul> <p>3. Create a route in <code>routes/web.php</code>: <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// ...\n\nRoute::get('/planets', [PlanetPageController::class, 'index']);\n</code></pre> Now, if you go to <code>/planets</code> in your browser, you will see a page with a list of planets!</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/2/#4-step-3-single-planet-page","title":"4. Step 3: Single Planet Page","text":"<p>1. Create a method in the controller:</p> <p>In <code>PlanetPageController</code>, add a <code>show</code> method. Thanks to Route Model Binding, Laravel will automatically find the planet by ID and pass it to the method.</p> <pre><code>&lt;?php\n// Inside the PlanetPageController class\n/**\n * Shows the page of a single specific planet.\n */\npublic function show(Planet $planet)\n{\n    // Laravel has already found the planet for us.\n    // If it is not found, it will automatically return a 404 error.\n\n    return view('planets.show', ['planet' =&gt; $planet]);\n}\n</code></pre> <p>2. Create a Blade view:</p> <p>Create a file <code>resources/views/planets/show.blade.php</code>.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;{{ $planet-&gt;name }}&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n        }\n        .container {\n            max-width: 600px;\n            width: 100%;\n        }\n        .planet-detail {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 2em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n        }\n        .planet-detail h1 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-detail p {\n            margin-bottom: 1em;\n            color: #4a5568;\n            font-size: 1.1em;\n        }\n        .back-link {\n            display: inline-block;\n            margin-top: 1.5em;\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .back-link:hover {\n            text-decoration: underline;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"planet-detail\"&gt;\n            @if($planet-&gt;image_url)\n                &lt;img src=\"{{ $planet-&gt;image_url }}\" alt=\"Image of {{ $planet-&gt;name }}\" style=\"max-width: 100%; height: auto; border-radius: 0.5em; margin-bottom: 1em;\"&gt;\n            @endif\n            &lt;h1&gt;{{ $planet-&gt;name }}&lt;/h1&gt;\n            @if($planet-&gt;description)\n                &lt;p&gt;{{ $planet-&gt;description }}&lt;/p&gt;\n            @endif\n            &lt;p&gt;&lt;strong&gt;Solar System:&lt;/strong&gt; {{ $planet-&gt;solar_system }}&lt;/p&gt;\n            &lt;p&gt;&lt;strong&gt;Diameter:&lt;/strong&gt; {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n            &lt;a href=\"/planets\" class=\"back-link\"&gt;&amp;larr; Back to the list of planets&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>3. Create a route in <code>routes/web.php</code>: <pre><code>// Add this route after the route for /planets\nRoute::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n</code></pre> -   The name of the parameter <code>{planet}</code> must match the name of the variable in the controller method (<code>show(Planet $planet)</code>) for Route Model Binding to work correctly.</p> <p>Now, by clicking on the \"Learn more\" link on the list page, you will be taken to the detailed page of a specific planet.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/2/#quiz-to-reinforce","title":"Quiz to Reinforce","text":"<p>1. What is the best practice for separating API and web page logic?</p>  a) Use one controller for everything  b) Create separate controllers (e.g., in a `Web` and `Api` folder)  c) Put all the logic in the routes file <p>2. What does `return view('planets.index', ['planets' =&gt; $planets]);` do?</p>  a) Returns a JSON array with planet data  b) Renders the `resources/views/planets/index.blade.php` file and passes the `$planets` variable to it  c) Redirects to the /planets/index URL <p>3. What is Route Model Binding in the context of `show(Planet $planet)`?</p>  a) Laravel manually binds the route to the model in the config  b) Laravel automatically finds a `Planet` record in the DB by the parameter from the URL (`{planet}`)  c) Laravel creates a new planet if it is not found <p>4. How can you format a date from the `created_at` field in Blade?</p>  a) {{ $planet-&gt;created_at-&gt;format('Y-m-d') }}  b) {{ format_date($planet-&gt;created_at) }}  c) This can only be done in the controller <p>5. If the route is specified as `/posts/{post}`, what should the method signature in the controller look like for Route Model Binding to work?</p>  a) public function show(Post $post)  b) public function show(Post $p)  c) public function show($post) Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have successfully created a \"showcase\" for your API using the Laravel MVC architecture. You now have:</p> <ul> <li>A separate controller for web page logic.</li> <li>A dynamic page with a list of all planets, receiving data from the DB.</li> <li>A detailed page for each planet using Route Model Binding.</li> <li>Two web routes in <code>routes/web.php</code> to access these pages.</li> </ul> <p>You have turned raw data into understandable and useful information for the user. In the next chapter, we will add interactivity by embedding JavaScript in our Blade views to interact with the API without reloading the page.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/3/","title":"Chapter 5.3: Embedding JavaScript in Laravel Views","text":"<p>Study time: 50 minutes</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/3/#1-two-approaches-to-javascript-on-the-web","title":"1. Two Approaches to JavaScript on the Web","text":"<p>So far, we have been working with Server-Side Rendering (SSR) \u2014 the server (Laravel) generated the finished HTML (via Blade) and sent it to the browser. This is great for SEO and fast initial loading.</p> <p>Now we will add Client-Side Interactions \u2014 the browser, having already loaded the page, will execute JavaScript code to:</p> <ul> <li>Send requests to our API without reloading the page.</li> <li>Dynamically update parts of the page (e.g., adding a new planet to the list).</li> <li>Display notifications and modal windows.</li> </ul> <p>\ud83d\udca1 Space Analogy:</p> <p>Imagine that SSR is receiving a complete map of a star system, printed at Mission Control (the server). You see all the objects at the time of printing.</p> <p>Client-Side JS is your personal tablet (the browser) that communicates with satellites (the API) in real time and updates the position of objects on your map, without requesting a new paper map from Mission Control.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/3/#2-where-to-store-and-how-to-include-js-code","title":"2. Where to Store and How to Include JS Code","text":"<p>As we have already found out, all public assets (CSS, JS, images) should be located in the <code>public</code> folder.</p> <p>The correct structure:</p> <ol> <li>Source files: All your main JS code should be in <code>public/js/</code>. For example, <code>public/js/planets.js</code>.</li> <li>Inclusion in Blade: Use the <code>asset()</code> helper to generate the correct URL.</li> </ol> <p>Example of inclusion in the <code>layouts/app.blade.php</code> layout: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    {{-- ... --}}\n&lt;/head&gt;\n&lt;body&gt;\n    {{-- ... header and main ... --}}\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command.&lt;/p&gt;\n    &lt;/footer&gt;\n\n    {{-- It is better to include scripts at the end of the body to speed up page rendering --}}\n    &lt;script src=\"{{ asset('js/planets.js') }}\"&gt;&lt;/script&gt;\n    @stack('scripts') {{-- Create a \"slot\" for scripts of a specific page --}}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <ul> <li><code>@stack('scripts')</code> is a powerful Blade directive. It allows child views to \"push\" their own JS code into this place. This is useful when one page needs a unique script, and another does not.</li> </ul>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/3/#3-example-delete-button-with-confirmation","title":"3. Example: \"Delete\" Button with Confirmation","text":"<p>Let's add a \"Delete\" button for each planet on the planet list page (<code>planets/index.blade.php</code>) that will work via JavaScript and the Fetch API.</p> <p>Step 1: Add the button to <code>resources/views/planets/index.blade.php</code></p> <p>Modify the planet card by adding a button with data-attributes: <pre><code>{{-- ... inside the @forelse loop ... --}}\n&lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n    &lt;p&gt;Solar System: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n    &lt;p&gt;Diameter: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;Learn more &amp;rarr;&lt;/a&gt;\n    &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"/api/planets/{{ $planet-&gt;id }}\"&gt;\n        Decommission\n    &lt;/button&gt;\n&lt;/div&gt;\n&lt;!-- ... Before the closing body tag ... --&gt;\n&lt;script src=\"{{ asset('js/planets.js') }}\" defer&gt;&lt;/script&gt;\n</code></pre></p> <ul> <li><code>id=\"planet-card-{{ $planet-&gt;id }}\"</code> is a unique ID for the entire card so that we can remove it from the DOM.</li> <li><code>data-id</code> and <code>data-url</code> are a convenient way to pass data from PHP (Blade) to JavaScript.</li> </ul> <p>Step 2: Write the JavaScript logic</p> <p>Create a file <code>public/js/planets.js</code> and add the following code to it: <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    // Find all \"Delete\" buttons\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            const planetId = event.target.dataset.id;\n            const apiUrl = event.target.dataset.url;\n\n            if (!confirm(`Are you sure you want to decommission the planet with ID ${planetId}? This action is irreversible.`)) {\n                return; // The user clicked \"Cancel\"\n            }\n\n            try {\n                // Send a DELETE request to our API\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        // We will add a CSRF token here later\n                    }\n                });\n\n                if (response.status === 204) { // 204 No Content - successful deletion\n                    // Remove the planet card from the page\n                    const cardToRemove = document.getElementById(`planet-card-${planetId}`);\n                    if (cardToRemove) {\n                        cardToRemove.remove();\n                    }\n                    alert('Planet successfully decommissioned.');\n                } else {\n                    // If the API returned an error\n                    const errorData = await response.json();\n                    alert(`Error: ${errorData.message || 'Failed to delete the planet.'}`);\n                }\n            } catch (error) {\n                console.error('Error sending the request:', error);\n                alert('A network error occurred. Please try again.');\n            }\n        });\n    });\n});\n</code></pre></p> <p>Now, if you refresh the <code>/planets</code> page, you will see \"Decommission\" buttons, and clicking them will trigger our JavaScript code!</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/3/#4-passing-data-from-blade-to-javascript","title":"4. Passing Data from Blade to JavaScript","text":"<p>Sometimes you need to pass not just a string to JS, but a whole array or object.</p> <p>The wrong way (vulnerable): <pre><code>let planets = {{ $planets }}; // This will lead to a syntax error and is insecure\n</code></pre></p> <p>The right way (via JSON): Use the <code>@json</code> directive. It safely converts a PHP array/object into a valid JSON object.</p> <p>Example in <code>planets/index.blade.php</code>: <pre><code>@extends('layouts.app')\n{{-- ... --}}\n@section('content')\n    {{-- ... --}}\n@endsection\n\n@push('scripts') {{-- \"Push\" our script into the @stack('scripts') slot in the layout --}}\n&lt;script&gt;\n    // Laravel safely converts the $planets collection into a JSON array\n    const planetsData = @json($planets);\n\n    // Now we can work with this array in JS\n    console.log('Planet data passed from Blade:', planetsData);\n    alert(`Loaded ${planetsData.length} planets!`);\n&lt;/script&gt;\n@endpush\n</code></pre></p> <ul> <li><code>@push('scripts')</code> places the content inside <code>@stack('scripts')</code> in <code>layouts/app.blade.php</code>. This allows you to add scripts only to the pages where they are really needed.</li> </ul>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/3/#quiz-to-reinforce","title":"Quiz to Reinforce","text":"<p>1. Where in a Laravel project should public JS and CSS files be stored?</p>  a) resources/js  b) storage/app/public  c) public/ <p>2. Which Blade helper is used to correctly generate URLs to assets (JS, CSS)?</p>  a) url()  b) asset()  c) public_path() <p>3. What does the `@push('scripts')` / `@stack('scripts')` pair of directives do?</p>  a) Allows a child view to add its JS code to a specific place in the parent layout  b) Combines all JS files into one  c) Sends JS code to the server <p>4. How do you safely pass a PHP array `$data` to JavaScript from Blade?</p>  a) let jsData = {{ $data }};  b) let jsData = '@php echo json_encode($data); @endphp';  c) let jsData = @json($data); <p>5. Why is it recommended to include JS scripts at the end of the body tag?</p>  a) So that they do not block the rendering of the main HTML content of the page  b) It is a requirement of the HTML5 standard  c) This way the scripts execute faster Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have learned to breathe life into static Blade pages by adding client-side logic. Key skills:</p> <ul> <li>Proper organization and inclusion of JS files in a Laravel project.</li> <li>Using <code>data-*</code> attributes to pass data from HTML to JS.</li> <li>Dynamic interaction with the API using Fetch without reloading the page.</li> <li>Safely passing PHP variables to JavaScript using the <code>@json</code> directive.</li> <li>Organizing scripts using <code>@push</code> and <code>@stack</code>.</li> </ul> <p>Your \"control panels\" have become interactive. However, our modifying requests (POST, PUT, DELETE) are currently vulnerable. In the next chapter, we will add a crucial security mechanism \u2014 CSRF tokens.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/4/","title":"Chapter 5.4: Working with CSRF Tokens","text":"<p>Study time: 30 minutes</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/4/#1-what-is-a-csrf-attack-hijacking-your-ship","title":"1. What is a CSRF Attack? \"Hijacking\" Your Ship","text":"<p>Imagine you are logged into the control panel of your space fleet (<code>space-api.test</code>). In the next tab, you open a harmless website with cats (<code>evil-cats.com</code>). This site has a hidden form that automatically sends a request to your site at <code>POST /api/planets/1/delete</code>.</p> <p>Since you are already authenticated on <code>space-api.test</code>, your browser will kindly attach all your cookies to this request. The Laravel server will see a valid session and think that you yourself decided to decommission the planet. The planet will be deleted without your knowledge.</p> <p>This is CSRF (Cross-Site Request Forgery) \u2014 an attack in which an attacker forces the browser of an authenticated user to perform an unwanted action on a trusted site.</p> <p>\ud83d\udca1 Space Analogy:</p> <p>You are the captain of a ship, and you have a key card (session/cookie). An attacker cannot steal your card. But he can trick you into applying it to a resource decommissioning terminal while you are distracted. A CSRF token is like a PIN code that you need to enter along with the card. The attacker does not know the PIN code, and his attack fails.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/4/#2-how-laravel-protects-against-csrf","title":"2. How Laravel Protects Against CSRF?","text":"<p>By default, Laravel protects all \"unsafe\" web requests (POST, PUT, PATCH, DELETE) with a CSRF token.</p> <ol> <li>When generating a page, Laravel creates a unique, random token for the user's session.</li> <li>This token is embedded in HTML forms.</li> <li>When the form is submitted, the token is sent along with the request.</li> <li>On the server, the <code>VerifyCsrfToken</code> middleware compares the token from the request with the token stored in the session.</li> <li>If the tokens do not match, Laravel aborts the request with a 419 error (Session Expired/Page Expired).</li> </ol> <p>Important: API routes in <code>routes/api.php</code> are not protected by CSRF, as they assume a different authentication mechanism (e.g., Sanctum tokens), rather than cookie-based sessions. Our current problem concerns the web routes and pages that we create in <code>routes/web.php</code>.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/4/#3-using-a-csrf-token-in-html-forms","title":"3. Using a CSRF Token in HTML Forms","text":"<p>This is the simplest scenario. Laravel provides a special Blade directive for this.</p> <p>Example: Form for creating a planet Let's create a simple form in the file <code>resources/views/planets/create.blade.php</code>:</p> <pre><code>&lt;h2&gt;Form for launching a new planet&lt;/h2&gt;\n&lt;form action=\"/planets\" method=\"POST\"&gt;\n    @csrf {{-- Here it is, the magic! --}}\n\n    &lt;label for=\"name\"&gt;Name:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;\n\n    &lt;label for=\"solar_system\"&gt;Solar System:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"solar_system\" name=\"solar_system\" required&gt;\n\n    {{-- ... other fields ... --}}\n\n    &lt;button type=\"submit\"&gt;Launch&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>The <code>@csrf</code> directive will automatically generate a hidden field in the form: <pre><code>&lt;input type=\"hidden\" name=\"_token\" value=\"j2aK3dLf4gH5...unique_token...\"&gt;\n</code></pre></p> <p>This is enough to protect standard HTML forms.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/4/#4-using-a-csrf-token-in-ajaxfetch-requests","title":"4. Using a CSRF Token in AJAX/Fetch Requests","text":"<p>In the previous chapter, we sent a <code>DELETE</code> request using JavaScript. Now Laravel will block it with a 419 error. We need to add a CSRF token to the headers of our Fetch request.</p> <p>Step 1: Make the token available to JavaScript</p> <p>Add a meta tag with the token to the <code>&lt;head&gt;</code> of your master layout <code>resources/views/app.blade.php</code>. This is standard practice in Laravel.</p> <pre><code>&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n\n    {{-- Add the CSRF token to a meta tag --}}\n    &lt;meta name=\"csrf-token\" content=\"{{ csrf_token() }}\"&gt;\n\n    {{-- ... --}}\n&lt;/head&gt;\n</code></pre> <p>The <code>csrf_token()</code> function returns the current token.</p> <p>Step 2: Modify the JavaScript to send the token</p> <p>Now in our <code>public/js/planets.js</code>, we can read this token and add it to the headers of all \"unsafe\" requests.</p> <pre><code>// ... in the file public/js/planets.js ...\n\ndocument.addEventListener('DOMContentLoaded', () =&gt; {\n    // Get the token from the meta tag\n    const csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            // ... confirmation logic ...\n\n            try {\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        'X-CSRF-TOKEN': csrfToken // &lt;-- Add the token to the headers!\n                    }\n                });\n\n                // ... rest of the response handling logic ...\n            } catch (error) {\n                // ...\n            }\n        });\n    });\n});\n</code></pre> <ul> <li>The header name <code>X-CSRF-TOKEN</code> is the standard that Laravel checks by default.</li> </ul> <p>Now our AJAX requests are also protected. Try deleting a planet again \u2014 this time the request will be successful.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/4/#quiz-to-reinforce","title":"Quiz to Reinforce","text":"<p>1. What attack does a CSRF token prevent?</p>  a) SQL Injection  b) Cross-Site Scripting (XSS)  c) Cross-Site Request Forgery (CSRF) <p>2. Which Blade directive adds a hidden field with a CSRF token to a form?</p>  a) @token  b) @csrf  c) @form_token <p>3. What happens if you send a POST request without a CSRF token to a web route?</p>  a) 500 (Internal Server Error)  b) 403 (Forbidden)  c) 419 (Page Expired / Session Expired) <p>4. What is the standard HTTP header used to send a CSRF token in AJAX requests?</p>  a) Authorization  b) X-CSRF-TOKEN  c) Content-Type <p>5. Why don't API routes (`routes/api.php`) use CSRF protection by default?</p>  a) Because they are intended for stateless authentication  b) It's a bug in Laravel, they need to be enabled manually  c) Because API requests cannot be forged Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have installed an \"identification friend or foe\" system on your spaceship, protecting it from CSRF attacks. You have learned to:</p> <ul> <li>Understand the nature and danger of CSRF attacks.</li> <li>Protect standard HTML forms with the <code>@csrf</code> directive.</li> <li>Pass the CSRF token to JavaScript via a meta tag.</li> <li>Include the token in the headers of AJAX/Fetch requests for their successful execution.</li> </ul> <p>Your web interfaces are now not only interactive, but also secure. In the next chapter, we will finish creating our web interface by looking at how to properly organize routing for web pages.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/5/","title":"Chapter 5.5: Routing for Web Pages","text":"<p>Study time: 40 minutes</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/5/#1-routeswebphp-vs-routesapiphp-two-different-control-panels","title":"1. <code>routes/web.php</code> vs <code>routes/api.php</code>: Two Different Control Panels","text":"<p>It is important to reinforce the fundamental difference once again:</p> Characteristic <code>routes/web.php</code> (Web Panel) <code>routes/api.php</code> (API Panel) Main Task Displaying HTML pages, handling forms Providing data in JSON format for other applications State Stateful \u2014 uses sessions and cookies Stateless \u2014 each request is independent Default Middleware <code>web</code> (includes sessions, CSRF protection, cookie encryption) <code>api</code> (includes \"throttling\" \u2014 request rate limiting) URL Prefix None (the root of your site) <code>/api/</code> (configured in <code>RouteServiceProvider</code>) Authentication Usually via sessions (Login/Password) Usually via tokens (Sanctum, Passport) <p>We are working with <code>routes/web.php</code> to build an interface for a live person.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/5/#2-resource-routes-for-the-web","title":"2. Resource Routes for the Web","text":"<p>Similar to <code>Route::apiResource</code>, there is <code>Route::resource</code> for the web. It creates routes for the full CRUD cycle, including pages for displaying creation and editing forms.</p> <p>Let's create a full set of routes for managing our planets through the web interface.</p> <p>Step 1: Create a route in <code>routes/web.php</code></p> <p>Comment out or delete the old routes for <code>/planets</code> and replace them with a single line:</p> <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// Route::get('/planets', [PlanetPageController::class, 'index']);\n// Route::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n\nRoute::resource('planets', PlanetPageController::class);\n</code></pre> <p>Step 2: See what was created Execute the command <code>php artisan route:list --except-vendor</code> in the terminal:</p> <pre><code>+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| Method | URI       | Name                   | Action           | Middleware                                      |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| GET|HEAD | planets                | planets.index          | ...\\PlanetPageController@index                    | web        |\n| POST   | planets                | planets.store          | ...\\PlanetPageController@store                    | web        |\n| GET|HEAD | planets/create         | planets.create         | ...\\PlanetPageController@create                   | web        |\n| GET|HEAD | planets/{planet}       | planets.show           | ...\\PlanetPageController@show                     | web        |\n| PUT|PATCH | planets/{planet}       | planets.update         | ...\\PlanetPageController@update                   | web        |\n| DELETE | planets/{planet}       | planets.destroy        | ...\\PlanetPageController@destroy                  | web        |\n| GET|HEAD | planets/{planet}/edit  | planets.edit           | ...\\PlanetPageController@edit                     | web        |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n</code></pre> <p><code>Route::resource</code> created 7 routes for us, including:</p> <ul> <li><code>planets.create</code> (GET <code>/planets/create</code>): page with a creation form.</li> <li><code>planets.store</code> (POST <code>/planets</code>): processing this form.</li> <li><code>planets.edit</code> (GET <code>/planets/{planet}/edit</code>): page with an editing form.</li> <li><code>planets.update</code> (PUT/PATCH <code>/planets/{planet}</code>): processing the editing form.</li> <li><code>planets.destroy</code> (DELETE <code>/planets/{planet}</code>): deleting a resource.</li> </ul>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/5/#3-named-routes-convenient-space-coordinates","title":"3. Named Routes: Convenient \"Space Coordinates\"","text":"<p>Pay attention to the <code>Name</code> column. Laravel has automatically assigned a unique name to each route (e.g., <code>planets.index</code>). Using names instead of hard-coded URLs is a best practice.</p> <p>Why? If you decide to change the URL from <code>/planets</code> to <code>/worlds</code>, you won't have to search and change all the links in your templates. You just change it in one place \u2014 in the routes file, and the names remain the same.</p> <p>Example of use in Blade:</p> <p>We used to write this:</p> <pre><code>&lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;Learn more &amp;rarr;&lt;/a&gt;\n</code></pre> <p>Now we will write this, using the <code>route()</code> helper: <pre><code>&lt;a href=\"{{ route('planets.show', ['planet' =&gt; $planet-&gt;id]) }}\"&gt;Learn more &amp;rarr;&lt;/a&gt;\n</code></pre></p> <ul> <li><code>route('planets.show', ...)</code> \u2014 generates a URL for the route named <code>planets.show</code>.</li> <li><code>['planet' =&gt; $planet-&gt;id]</code> \u2014 passes the necessary parameters to the URL. Laravel will substitute the ID into <code>{planet}</code> itself. You can even pass the entire model: <code>['planet' =&gt; $planet]</code>.</li> </ul>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/5/#4-implementing-the-missing-methods-in-the-controller","title":"4. Implementing the Missing Methods in the Controller","text":"<p><code>Route::resource</code> created the routes, but we need to create the corresponding methods in <code>PlanetPageController</code> ourselves.</p> <p>Open <code>app/Http/Controllers/Web/PlanetPageController.php</code> and add them.</p> <pre><code>&lt;?php\nuse Illuminate\\Http\\Request; // &lt;-- Add\n\nclass PlanetPageController extends Controller\n{\n    // We already have index() and show()\n\n    /**\n     * Shows the form for creating a new planet.\n     */\n    public function create()\n    {\n        return view('planets.create'); // Just return the view with the form\n    }\n\n    /**\n     * Stores a new planet in the database.\n     */\n    public function store(Request $request)\n    {\n        // Validate the data from the form\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets',\n            'solar_system' =&gt; 'required|string|max:100',\n            // ... other rules\n        ]);\n\n        Planet::create($validated);\n\n        // Redirect the user to the list page with a success message\n        return redirect()-&gt;route('planets.index')-&gt;with('success', 'Planet successfully created!');\n    }\n\n    /**\n     * Shows the form for editing a planet.\n     */\n    public function edit(Planet $planet)\n    {\n        return view('planets.edit', ['planet' =&gt; $planet]);\n    }\n\n    /**\n     * Updates the planet's data in the database.\n     */\n    public function update(Request $request, Planet $planet)\n    {\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets,name,' . $planet-&gt;id,\n            'solar_system' =&gt; 'required|string|max:100',\n        ]);\n\n        $planet-&gt;update($validated);\n\n        return redirect()-&gt;route('planets.show', $planet)-&gt;with('success', 'Planet data updated!');\n    }\n\n    /**\n     * Deletes a planet.\n     */\n    public function destroy(Planet $planet)\n    {\n        $planet-&gt;delete();\n\n        return redirect()-&gt;route('planets.index')-&gt;with('success', 'Planet decommissioned.');\n    }\n}\n</code></pre> <ul> <li><code>redirect()-&gt;route(...)</code> \u2014 redirects the user to another named route.</li> <li><code>-&gt;with('success', '...')</code> \u2014 adds a \"flash message\" to the session, which will be available on the next page exactly once. We can display it in our Blade template.</li> </ul>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/5/#5-grouping-routes","title":"5. Grouping Routes","text":"<p>If you have many routes with common characteristics (e.g., they are all for the admin panel and should have the <code>/admin</code> prefix and special middleware), you can group them.</p> <pre><code>&lt;?php\nRoute::middleware(['auth', 'admin'])-&gt;prefix('admin')-&gt;name('admin.')-&gt;group(function () {\n    // All routes within this group will have:\n    // 1. 'auth' and 'admin' middleware\n    // 2. The '/admin' URL prefix (e.g., /admin/planets)\n    // 3. The 'admin.' name prefix (e.g., admin.planets.index)\n\n    Route::resource('planets', PlanetPageController::class);\n    // Route::get('/dashboard', ...)-&gt;name('dashboard'); // -&gt; admin.dashboard\n});\n</code></pre>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/5/#quiz-to-reinforce","title":"Quiz to Reinforce","text":"<p>1. Which command in `routes/web.php` will create a full set of CRUD routes for a web interface?</p>  a) Route::crud('planets', Controller::class)  b) Route::apiResource('planets', Controller::class)  c) Route::resource('planets', Controller::class) <p>2. What is the main advantage of using named routes?</p>  a) They work faster than direct URLs  b) They allow you to easily change URLs in the routes file without breaking links in templates  c) They are automatically CSRF protected <p>3. Which route will be generated for the `create()` method in `Route::resource('articles', ...)`?</p>  a) GET `/articles/new`  b) GET `/articles/create`  c) POST `/articles/create` <p>4. What does the code `redirect()-&gt;route('home')-&gt;with('status', 'OK')` do?</p>  a) Returns JSON with 'status' =&gt; 'OK' to the `/home` URL  b) Redirects to the named route `home` and adds a one-time 'status' message to the session  c) Displays the `home.blade.php` view with the `$status` variable <p>5. What is `Route::prefix('dashboard')` used for?</p>  a) To add a prefix to all URLs within a group  b) To add a prefix to all route names within a group  c) To apply the `dashboard` middleware Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have mastered a structured and professional approach to organizing web routes in Laravel. You can now:</p> <ul> <li>Distinguish between <code>web</code> and <code>api</code> routes and their purposes.</li> <li>Use <code>Route::resource</code> to quickly generate standard CRUD routes.</li> <li>Apply named routes to create flexible and maintainable code.</li> <li>Create full CRUD operations in a controller with validation and redirects.</li> <li>Group routes to apply common rules.</li> </ul> <p>The navigation system of your \"ship\" is now fault-tolerant and ready for expansion. In the final chapter of this section, we will combine all the knowledge we have gained and display the planet data, obtained via Fetch, on our Blade page.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/6/","title":"Chapter 5.6: Displaying Data via Blade + Fetch","text":"<p>Study Time: 50 minutes</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/6/#1-hybrid-approach-the-best-of-both-worlds","title":"1. Hybrid Approach: The Best of Both Worlds","text":"<p>We can build a page in two ways:</p> <ol> <li>Full Server-Side Rendering (SSR): Laravel generates the entire HTML, including the list of planets. For any update (deletion, addition), the page reloads completely.</li> <li>Full Client-Side Rendering (CSR): Laravel serves an empty HTML \"shell,\" and JavaScript requests all data from the API and renders it on the client. (This is the Single Page Application - SPA - approach).</li> </ol> <p>Our choice is a hybrid approach:</p> <ul> <li>Initial Load (SSR): Laravel immediately serves the page with the list of planets already rendered. This is fast and good for SEO. The user sees the content instantly.</li> <li>Subsequent Actions (CSR): JavaScript intercepts user actions (button clicks) and interacts with the API, updating only the necessary parts of the page without a full reload.</li> </ul> <p>\ud83d\udca1 Space Analogy:</p> <p>When you enter the bridge, you are immediately given the main navigation map, printed at Mission Control (SSR). It's already in your hands; no need to wait. But then you activate \"live mode\" on your tablet (CSR), and it starts receiving real-time updates from satellites, redrawing objects on your map.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/6/#2-step-1-preparing-the-page","title":"2. Step 1: Preparing the Page","text":"<p>We will work with our planet list page <code>resources/views/planets/index.blade.php</code>. It already knows how to display data passed from the controller. Now we will add controls to it that will work via JS.</p> <p>Add an \"Update List\" button and a container for notifications: <pre><code>    &lt;div class=\"controls\"&gt;\n        &lt;h2&gt;List of all known planets&lt;/h2&gt;\n        &lt;button id=\"refresh-btn\"&gt;Update via API&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div id=\"notification-area\" class=\"notification\"&gt;&lt;/div&gt;\n    &lt;hr&gt;\n    {{-- This div will be our container for dynamic updates --}}\n    &lt;div id=\"planet-list-container\" class=\"planet-list\"&gt;\n        {{-- Include the \"child\" view that renders the initial list --}}\n        @include('planets.partials.list', ['planets' =&gt; $planets])\n    &lt;/div&gt;\n</code></pre></p> <p>Note the <code>@include('planets.partials.list', ...)</code>. We have moved the list display logic into a separate, reusable file.</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/6/#step-2-creating-a-reusable-partial-view","title":"Step 2: Creating a Reusable \"Partial\" View","text":"<p>Extracting repetitive parts into separate files is good practice.</p> <p>Create the file <code>resources/views/planets/partials/list.blade.php</code>:</p> <pre><code>@forelse($planets as $planet)\n    &lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n        &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n        &lt;p&gt;Solar System: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n        &lt;p&gt;Diameter: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n        &lt;a href=\"{{ route('planets.show', $planet) }}\"&gt;Learn more &amp;rarr;&lt;/a&gt;\n        &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"{{ route('api.planets.destroy', $planet) }}\"&gt;\n            Decommission\n        &lt;/button&gt;\n    &lt;/div&gt;\n@empty\n    &lt;p&gt;There are no planets in the database.&lt;/p&gt;\n@endforelse\n</code></pre> <ul> <li>Important: Note that the URL for the delete button is now generated for the API route: <code>route('api.planets.destroy', $planet)</code>. To do this, make sure you have a named resource in <code>routes/api.php</code>: <code>Route::apiResource('planets', ...)-&gt;name('api.planets');</code></li> </ul>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/6/#step-3-writing-javascript-for-dynamic-updates","title":"Step 3: Writing JavaScript for Dynamic Updates","text":"<p>Now for the interesting part. Let's create a JavaScript that will request a fresh list of planets from the API at the click of a button and redraw it.</p> <p>Create the file <code>public/js/planet-manager.js</code> and include it in <code>layouts/app.blade.php</code>.</p> <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    const refreshBtn = document.getElementById('refresh-btn');\n    const planetListContainer = document.getElementById('planet-list-container');\n    const notificationArea = document.getElementById('notification-area');\n\n    // Function to show notifications\n    function showNotification(message, isError = false) {\n        notificationArea.textContent = message;\n        notificationArea.className = isError ? 'notification error' : 'notification success';\n        setTimeout(() =&gt; {\n            notificationArea.textContent = '';\n            notificationArea.className = 'notification';\n        }, 3000);\n    }\n\n    // Function to render a single planet card HTML\n    function createPlanetCardHtml(planet) {\n        // IMPORTANT: We generate the same HTML as in our partial view\n        return `\n            &lt;div class=\"planet-card\" id=\"planet-card-${planet.id}\"&gt;\n                &lt;h3&gt;${planet.name}&lt;/h3&gt;\n                &lt;p&gt;Solar System: ${planet.solar_system}&lt;/p&gt;\n                &lt;p&gt;Diameter: ${new Intl.NumberFormat().format(planet.size_km)} km&lt;/p&gt;\n                &lt;a href=\"/planets/${planet.id}\"&gt;Learn more &amp;rarr;&lt;/a&gt;\n                &lt;button class=\"delete-btn\" data-id=\"${planet.id}\" data-url=\"/api/planets/${planet.id}\"&gt;\n                    Decommission (JS)\n                &lt;/button&gt;\n            &lt;/div&gt;\n        `;\n    }\n\n    // Function to fetch and redraw the list of planets\n    async function fetchAndRenderPlanets() {\n        showNotification('Requesting fresh data from orbital satellites...');\n        try {\n            const response = await fetch('/api/planets', {\n                headers: { 'Accept': 'application/json' }\n            });\n\n            if (!response.ok) {\n                throw new Error('Network error when receiving data.');\n            }\n\n            const planets = await response.json(); // Laravel will return { data: [...] } by default for a paginated resource\n\n            planetListContainer.innerHTML = ''; // Clear the old list\n\n            if (planets.data.length === 0) {\n                planetListContainer.innerHTML = '&lt;p&gt;There are no planets in the database.&lt;/p&gt;';\n            } else {\n                planets.data.forEach(planet =&gt; {\n                    const cardHtml = createPlanetCardHtml(planet);\n                    planetListContainer.innerHTML += cardHtml;\n                });\n            }\n            showNotification('Data updated successfully!', false);\n        } catch (error) {\n            console.error('Error updating planet list:', error);\n            showNotification(error.message, true);\n        }\n    }\n\n    // Add an event listener to the button\n    if (refreshBtn) {\n        refreshBtn.addEventListener('click', fetchAndRenderPlanets);\n    }\n\n    // You can move the deletion logic from the previous chapter here,\n    // so that all the JS is in one place.\n});\n</code></pre>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/6/#3-final-check","title":"3. Final Check","text":"<ol> <li>Start the server (<code>php artisan serve</code> or make sure Herd is running).</li> <li>Recreate the database, if necessary: <code>php artisan migrate:fresh --seed</code>.</li> <li>Open the <code>/planets</code> page in your browser.<ul> <li>You should immediately see a list of planets generated by the server.</li> </ul> </li> <li>Click the \"Update via API\" button.<ul> <li>You will see a loading notification.</li> <li>The list should disappear for a moment and reappear, but this time it will be generated by JavaScript based on data received from the API.</li> </ul> </li> </ol> <p>You have successfully implemented a hybrid model!</p>"},{"location":"en/Chapter%205%20-%20Integrating%20the%20frontend%20with%20Laravel/6/#reinforcement-quiz","title":"Reinforcement Quiz","text":"<p>1. What is a hybrid rendering approach (SSR + CSR)?</p>  a) First, an empty page is rendered, then JS loads all the content  b) The server returns a completely finished page, and it never changes on the client  c) The server returns a finished page for a fast initial load, and subsequent updates occur on the client via JS <p>2. What is the main advantage of initial server-side rendering (SSR)?</p>  a) Reducing the load on the server  b) Fast initial content rendering for the user and good SEO indexing  c) Simplifying JavaScript code <p>3. Why is `@include('planets.partials.list')` used in the example?</p>  a) It is a Blade requirement for loops  b) To reuse code and separate the list display logic  c) For asynchronous loading of a part of the page <p>4. In the JavaScript code, we duplicate the HTML structure of the card. What could be a more advanced way to avoid this?</p>  a) Requesting not JSON from the API, but already rendered HTML for a single card  b) Using JavaScript templating engines (like Mustache, Handlebars) or frameworks (Vue, React)  c) Both options are correct <p>5. Why is it important that the API (`/api/planets`) and the JavaScript code (`createPlanetCardHtml`) generate consistent data/HTML?</p>  a) Otherwise, the user will see a \"jump\" or change in the interface when updating via the API  b) This is required by the Fetch API specification  c) Otherwise, Laravel will return a 500 error Check <p>\ud83d\ude80 Congratulations on completing Chapter 5!</p> <p>You have come a long way from the basics of Blade to creating interactive hybrid pages. You have learned to:</p> <ul> <li>Create and use Blade templates and layouts.</li> <li>Organize web routes and controllers for CRUD operations.</li> <li>Protect web forms and AJAX requests with CSRF tokens.</li> <li>Integrate JavaScript for dynamic interaction with the API without reloading the page.</li> </ul> <p>Your Mission Control Center is fully functional, secure, and interactive. You are ready for the next big stage \u2014 comparing this approach with other frameworks and learning best practices for production.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/1/","title":"Chapter 6.1: Connecting FastAPI to the Frontend","text":"<p>Study Time: 30 minutes</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/1/#1-return-to-the-hyperdrive-comparing-protocols","title":"1. Return to the \"Hyperdrive\": Comparing Protocols","text":"<p>In the last chapter, we docked our Mission Control Center (frontend) with the \"ISS\" (Laravel API). Now we will return to our superluminal fighter (FastAPI) and perform the same operation.</p> <p>The goal of this chapter is not just to repeat the steps, but to compare the two approaches. It's as if the same Dragon spacecraft first docked with the ISS, and then with the Chinese Tiangong station. The docking node is the same (REST), but there may be nuances in procedures and port locations.</p> <p>\ud83d\udca1 Space Analogy:</p> <p>The process is the same: fly up, align, dock. But for the \"ISS\" it was necessary to use the <code>/api/planets</code> port, and for \"Tiangong\" \u2014 the <code>/spaceships</code> port. Our operator at Mission Control must know these details for the mission to be successful.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/1/#2-preparing-the-fighter-fastapi-for-docking","title":"2. Preparing the \"Fighter\" (FastAPI) for Docking","text":"<p>We already did this in Chapter 4.2, but let's make sure everything is in place.</p> <p>Step 1: Start the FastAPI Server</p> <ol> <li>Stop the Laravel server if it is running (to avoid port conflicts).</li> <li>Open a terminal in your FastAPI project folder.</li> <li> <p>Activate the virtual environment:</p> <ul> <li>Windows: <code>.\\venv\\Scripts\\Activate.ps1</code></li> <li>macOS / Linux: <code>source venv/bin/activate</code></li> </ul> </li> <li> <p>Start the server:     <pre><code>uvicorn main:app --reload\n</code></pre>     The server will be available at <code>http://127.0.0.1:8000</code>.</p> </li> </ol> <p>Step 2: Check CORS Settings in <code>main.py</code></p> <p>Make sure your FastAPI project has the <code>CORSMiddleware</code> configured that we added earlier. It should allow requests from your frontend address. <pre><code># main.py\nfrom fastapi.middleware.cors import CORSMiddleware\n\n# ...\n\norigins = [\n    \"http://127.0.0.1:5500\", # Live Server address\n    \"null\", # For file:///\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n# ...\n</code></pre> If everything is in place, your FastAPI server is fully ready.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/1/#3-reconfiguring-the-mission-control-antenna-back-to-fastapi","title":"3. Reconfiguring the Mission Control \"Antenna\" Back to FastAPI","text":"<p>Now for the interesting part \u2014 the minimal changes that need to be made to our JavaScript to get it working with FastAPI again.</p> <p>Step 1: Change the Base URL</p> <p>Open <code>api.js</code> and revert <code>API_BASE_URL</code> to its original value. <pre><code>// api.js\n\n// Specify the URL of our FastAPI API\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // &lt;-- Without /api!\n\n// ... rest of the apiRequest code ...\n</code></pre></p> <p>Step 2: Adapting to the FastAPI Response Structure</p> <p>Recall that our <code>GET /spaceships</code> in FastAPI returns a simple array, not an object with pagination. This means we need to revert the <code>fetchAndDisplayFleet</code> code to its original form.</p> <p>Change the <code>fetchAndDisplayFleet</code> function in <code>app.js</code>: <pre><code>// app.js\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;Loading telemetry from FastAPI...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- Request to /spaceships\n\n        // In FastAPI we have a simple array, so the .data key is not needed!\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;There are no vehicles in the registry.&lt;/p&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            // Return our original function for creating cards\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;Error loading fleet: ${error.message}&lt;/p&gt;`;\n    }\n}\n\n// Original function for creating ship cards\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;Type: ${ship.type}&lt;/p&gt;\n        &lt;p&gt;Launch Year: ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;Status: ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;Edit&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;Decommission&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n</code></pre></p> <p>Step 3: Checking CRUD Operations</p> <p>Since our Pydantic models in FastAPI and the fields in the HTML form match (<code>name</code>, <code>type</code>, <code>launch_year</code>, <code>status</code>), the <code>handleSaveShip</code> and <code>handleDeleteShip</code> functions should work without changes, as they are already aimed at the <code>/spaceships</code> endpoint.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/1/#4-comparison-summary-what-does-this-mean-for-a-frontend-developer","title":"4. Comparison Summary: What Does This Mean for a Frontend Developer?","text":"<ul> <li>Universality of REST: You have clearly seen that for the frontend it does not matter what the backend is written in (PHP/Laravel or Python/FastAPI), as long as it follows the principles of REST.</li> <li>Importance of Documentation: The main differences were in the endpoint URLs and the structure of JSON responses. This is exactly what should be described in the API documentation. Without it, the frontend developer will be working \"blind\".</li> <li>Frontend Flexibility: Your JavaScript code should be flexible enough to easily adapt to different data formats (for example, checking if there is a <code>data</code> key, or if it is just an array).</li> </ul> <p>Conclusion: The skill of working with a REST API is a universal key that opens the door to interacting with any modern backend.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/1/#reinforcement-quiz","title":"Reinforcement Quiz","text":"<p>1. The main difference in the URL between our Laravel API and FastAPI API was in...</p>  a) Using different ports  b) The presence of the `/api` prefix in Laravel  c) Using HTTPS in FastAPI <p>2. What was the main change in the JS code required when switching from a paginated Laravel response to a simple FastAPI array?</p>  a) Stop accessing `responseData.data` and use `responseData` directly  b) Use a different `fetch` method  c) Change the `Content-Type` in the headers <p>3. This experiment proves that for a frontend developer...</p>  a) It is important to know both PHP and Python  b) It is important to understand the principles of REST and be able to read API documentation  c) Laravel and FastAPI are absolutely identical <p>4. CORS configuration is the task of...</p>  a) The frontend developer  b) The system administrator  c) The backend developer <p>5. If FastAPI used pagination like in Laravel, what would we have to do on the frontend?</p>  a) Nothing, the code would have worked by itself  b) Change the logic again to extract the array from the `data` key (or similar)  c) Switch from `fetch` to the Axios library Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have successfully switched the \"communication protocols\" of your Mission Control and in practice compared working with two different backend systems.</p> <ul> <li>\u2705 You have reinforced the skill of configuring <code>API_BASE_URL</code> to switch between servers.</li> <li>\u2705 You understand how important the response structure is (<code>data</code> vs a simple array) and how to adapt the frontend to it.</li> <li>\u2705 You have realized that a good frontend developer must be prepared to work with any RESTful API by carefully studying its documentation.</li> </ul> <p>Universal docking skill acquired! Now that we know how to set up basic communication, it's time to talk about more complex protocols \u2014 CORS, authentication, and security.</p> <p>\ud83d\udccc Check:</p> <ul> <li>Make sure your FastAPI server is running.</li> <li>Make sure you have reverted <code>API_BASE_URL</code> and the response handling logic in <code>app.js</code> to the FastAPI version.</li> <li>Check that your frontend is again correctly performing all CRUD operations with the FastAPI backend.</li> </ul> <p>\u26a0\ufe0f If errors:</p> <ul> <li>CORS error: Make sure the FastAPI server is running with the correct CORS settings.</li> <li><code>Cannot read properties of undefined (reading 'length')</code> error: You may have forgotten to remove the access to <code>.data</code> from <code>responseData</code>.</li> <li>404 Not Found: Check <code>API_BASE_URL</code> \u2014 FastAPI does not have an <code>/api</code> prefix.</li> </ul>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/2/","title":"Chapter 6.2: CORS Settings","text":"<p>Study Time: 30 minutes</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/2/#1-cors-what-it-is-and-why-its-needed","title":"1. CORS: What It Is and Why It's Needed","text":"<p>As we've learned, CORS (Cross-Origin Resource Sharing) is a browser security policy. It prevents a malicious site <code>evil-site.com</code> from making requests to <code>your-bank.com</code> on your behalf (using your cookies) and stealing data.</p> <p>How it works:</p> <ol> <li>Frontend (browser) from domain <code>A</code> wants to get data from domain <code>B</code>.</li> <li>The browser sends a special \"preflight\" request to domain <code>B</code> with the <code>OPTIONS</code> method, asking: \"Hey, domain <code>B</code>, can I, domain <code>A</code>, make a <code>GET</code> request to you?\"</li> <li>Backend (server on domain <code>B</code>) must respond with special HTTP headers, for example: <code>Access-Control-Allow-Origin: A</code>.</li> <li>If the server's response allows the request, the browser sends the main <code>GET</code> request. If not, it blocks it and issues a CORS error.</li> </ol> <p>\ud83d\udca1 Space Analogy:</p> <p>Before teleporting the captain to a foreign station (sending a <code>POST</code> request), the ship (browser) sends a drone (<code>OPTIONS</code> request) with the question: \"Station, do you accept teleportation from the starship 'Enterprise'?\". The station (API) replies: \"Yes, reception from 'Enterprise' is authorized\" (<code>Access-Control-Allow-Origin</code> header). Only then does teleportation begin.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/2/#2-configuring-cors-in-laravel-modern-approach-for-laravel-11","title":"2. Configuring CORS in Laravel (Modern Approach for Laravel 11+)","text":"<p>In Laravel 11+, CORS configuration has become much simpler and does not require publishing the <code>config/cors.php</code> file if you need basic settings. Everything is managed through the <code>.env</code> file and <code>bootstrap/app.php</code>.</p> <p>Step 1: Configuration via Environment Variables</p> <p>Open your <code>.env</code> file. Laravel provides variables by default to manage CORS for the API.</p> <pre><code># .env\n\n# ... other variables\n\n# Specify the paths for which CORS will be active.\n# 'api/*' is the standard value for all API routes.\nCORS_PATHS=api/*\n\n# Specify the allowed origins (domains).\n# For development, specify the address of your frontend.\n# You can list them separated by commas, without spaces.\nCORS_ALLOWED_ORIGINS=http://localhost:5500,http://127.0.0.1:5500\n\n# Other settings (usually can be left as default)\nCORS_ALLOWED_METHODS=*\nCORS_ALLOWED_HEADERS=*\nCORS_EXPOSED_HEADERS=\nCORS_MAX_AGE=0\nCORS_SUPPORTS_CREDENTIALS=false\n</code></pre> <p>Key variables:</p> <ul> <li><code>CORS_ALLOWED_ORIGINS</code>: The most important variable. Here you list the domains from which requests are allowed. <code>*</code> allows everyone, but this is</li> </ul> <p>extremely insecure for production.</p> <ul> <li><code>CORS_PATHS</code>: The paths to which these rules apply. <code>api/*</code> means everything that starts with <code>/api/</code>.</li> </ul> <p>After changing <code>.env</code>, you do not need to restart the server if you are using <code>php artisan serve</code>. The changes will be picked up automatically.</p> <p>Step 2 (Optional): Advanced Configuration in <code>bootstrap/app.php</code></p> <p>If you need more complex logic (for example, allowing subdomains with patterns), you will still have to publish the configuration file and configure the middleware. But for 95% of cases, the <code>.env</code> file is sufficient.</p> <p>The <code>php artisan install:api</code> command automatically configures the basic CORS middleware for API routes in the <code>bootstrap/app.php</code> file. It looks like this:</p> <pre><code>// bootstrap/app.php\n-&gt;withMiddleware(function (Middleware $middleware) {\n    // This line will already be added by the install:api command\n    // It enables CORS handling for all API routes\n    $middleware-&gt;api(base_path('routes/api.php'));\n})\n</code></pre> <p>Inside <code>-&gt;api()</code>, Laravel already uses the <code>HandleCors</code> middleware, which reads the settings from your <code>.env</code>. Everything is simple and out of the box.</p> <p>\u26a0\ufe0f Important! Do not use <code>CORS_ALLOWED_ORIGINS='*'</code> on a production server if your API is not completely public. This opens up a potential vulnerability. Always list the specific domains of your frontend.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/2/#3-configuring-cors-in-fastapi","title":"3. Configuring CORS in FastAPI","text":"<p>FastAPI uses the concept of Middleware to handle cross-cutting concerns like CORS.</p> <p>Step 1: Open the main file of your application</p> <p>This is the file where you create an instance of FastAPI (usually <code>main.py</code>).</p> <p>Step 2: Add <code>CORSMiddleware</code></p> <p>FastAPI provides a ready-made middleware for configuring CORS.</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware # 1. Import the middleware\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"API for managing planets in the galaxy\",\n    version=\"1.0.0\"\n)\n\n# 2. List of allowed origins\norigins = [\n    \"http://localhost:5500\",\n    \"http://127.0.0.1:5500\",\n    # In production, this will be the domain of your frontend\n    # \"https://my-awesome-app.com\",\n]\n\n# 3. Add the middleware to the application\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # Allow the specified origins\n    allow_credentials=True, # Allow cookies (will be needed for authentication)\n    allow_methods=[\"*\"],    # Allow all methods (GET, POST, etc.)\n    allow_headers=[\"*\"],    # Allow all headers\n)\n\n# ... your routers and the rest of the code here\n</code></pre> <p>Step 3: Restart the Uvicorn Server The Uvicorn server usually reloads automatically when the code changes. If not, restart it manually. Now your FastAPI server will correctly respond to <code>OPTIONS</code> requests from the frontend.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/2/#reinforcement-quiz","title":"Reinforcement Quiz","text":"<p>1. The request that the browser sends before the main one to check CORS is called:</p>  a) CHECK request  b) Preflight request  c) Handshake request <p>2. In modern Laravel (11+), basic CORS settings are mainly set in:</p>  a) The bootstrap/app.php file  b) The .env file  c) The routes/api.php file <p>3. In FastAPI, to configure CORS, you use:</p>  a) The @app.cors() decorator  b) The built-in Security class  c) Middleware <p>4. Which CORS_ALLOWED_ORIGINS value is the most secure for production?</p>  a) CORS_ALLOWED_ORIGINS='*'  b) CORS_ALLOWED_ORIGINS=http://my-frontend.com,https://my-frontend.com`  c) Do not set this variable Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have become a \"diplomat of interstellar communications\"! Your APIs can now securely interact with external applications using modern and correct approaches.</p> <ul> <li>\u2705 Understood the mechanism of CORS and preflight requests.</li> <li>\ud83d\udd27 Configured CORS for Laravel 11+ through the <code>.env</code> file.</li> <li>\u2699\ufe0f Configured CORS for FastAPI using <code>CORSMiddleware</code>.</li> <li>\ud83d\udef0\ufe0f Successfully established communication between the frontend and backend.</li> </ul> <p>The communication bridge is built and secured. Now you can think about how to let only \"authorized personnel\" cross this bridge.</p> <p>\ud83d\udccc Check:</p> <ul> <li>The main success criterion is the absence of CORS errors in the browser console when requesting data from the frontend.</li> <li>In the \"Network\" tab of the developer tools, you can see two requests to your API: the first with the <code>OPTIONS</code> method (status 200/204) and the second with the <code>GET</code> method (status 200). This is a clear demonstration of how CORS works.</li> </ul>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/3/","title":"Chapter 6.3: Basic Authentication","text":"<p>Study Time: 1 hour</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/3/#1-api-authentication-pass-to-mission-control","title":"1. API Authentication: Pass to Mission Control","text":"<p>Authentication is the process of verifying a user's identity. Unlike sites with sessions and cookies, stateless APIs typically use tokens.</p> <p>The process looks like this:</p> <ol> <li>The user sends their login and password to a special endpoint (e.g., <code>/login</code>).</li> <li>The server checks them. If everything is correct, it generates a unique, encrypted token (a long string) and sends it back.</li> <li>With each subsequent request to protected resources (e.g., <code>POST /planets</code>), the user must attach this token in the <code>Authorization</code> header.</li> <li>The server checks the token for validity and, if it is correct, executes the request.</li> </ol> <p>\ud83d\udca1 Space Analogy:</p> <ul> <li>Login/password = Your biometric scan to get a pass.</li> <li>Token = An electronic pass (ID card) that you receive at the entrance to Mission Control.</li> <li><code>Authorization: Bearer &lt;token&gt;</code> header = You apply your pass to the reader at each secure door.</li> <li>Protected endpoints (POST, PUT, DELETE) = Doors to the server room or to the launch control console.</li> </ul>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/3/#2-authentication-in-laravel-sanctum","title":"2. Authentication in Laravel: Sanctum","text":"<p>Laravel offers an elegant solution for API authentication \u2014 Laravel Sanctum. It is ideal for SPAs (single-page applications), mobile applications, and simple token-based APIs.</p> <p>Step 1: Installing and Configuring Sanctum</p> <p>Sanctum is already installed in a standard Laravel application, but let's check the configuration.</p> <ol> <li>Publish the configuration (if you haven't already): <pre><code>php artisan vendor:publish --provider=\"Laravel\\Sanctum\\SanctumServiceProvider\"\n</code></pre></li> <li>Run the migrations (will create the <code>personal_access_tokens</code> table): <pre><code>php artisan migrate\n</code></pre></li> <li>Add the trait to the <code>User</code> model:     Open <code>app/Models/User.php</code> and make sure it uses the <code>HasApiTokens</code> trait.     <pre><code>// app/Models/User.php\nuse Laravel\\Sanctum\\HasApiTokens;\n\nclass User extends Authenticatable\n{\n    use HasApiTokens, HasFactory, Notifiable;\n    // ...\n}\n</code></pre></li> </ol> <p>Step 2: Creating an Endpoint for Issuing Tokens We need a route where the user will send their login/password.</p> <p>Add to <code>routes/api.php</code>: <pre><code>// routes/api.php\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Models\\User;\nuse Illuminate\\Validation\\ValidationException;\n\nRoute::post('/login', function (Request $request) {\n    $request-&gt;validate([\n        'email' =&gt; 'required|email',\n        'password' =&gt; 'required',\n    ]);\n\n    $user = User::where('email', $request-&gt;email)-&gt;first();\n\n    if (! $user || ! Hash::check($request-&gt;password, $user-&gt;password)) {\n        throw ValidationException::withMessages([\n            'email' =&gt; ['The credentials do not match.'],\n        ]);\n    }\n\n    // Return the token\n    return response()-&gt;json([\n        'token' =&gt; $user-&gt;createToken('api-token')-&gt;plainTextToken\n    ]);\n});\n</code></pre></p> <p>For testing, you can create a user via a seeder or Tinker.</p> <p>Step 3: Protecting Routes Now let's protect our CRUD operations. Let's change <code>routes/api.php</code>:</p> <pre><code>// routes/api.php\nuse App\\Http\\Controllers\\PlanetController;\n\n// Public route for viewing planets\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// Group of protected routes\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n\n    // Route for logging out (deleting the token)\n    Route::post('/logout', function (Request $request) {\n        $request-&gt;user()-&gt;currentAccessToken()-&gt;delete();\n        return response()-&gt;json(['message' =&gt; 'You have been successfully logged out'], 200);\n    });\n});\n</code></pre> <p>The <code>auth:sanctum</code> middleware will check for a valid token in the <code>Authorization</code> header.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/3/#3-authentication-in-fastapi-oauth2-and-jwt","title":"3. Authentication in FastAPI: OAuth2 and JWT","text":"<p>FastAPI does not have a built-in authentication system, but it has powerful tools for implementing it. The de facto standard is OAuth2 with JWT tokens.</p> <p>Step 1: Install Dependencies <pre><code>pip install \"python-jose[cryptography]\" \"passlib[bcrypt]\" \"python-multipart\"\n</code></pre></p> <ul> <li><code>python-jose</code>: for creating and verifying JWT tokens.</li> <li><code>passlib</code>: for hashing and verifying passwords.</li> <li><code>python-multipart</code>: for processing data from forms (<code>username</code> and <code>password</code>).</li> </ul> <p>Step 2: Create a Security Module (<code>security.py</code>) It is good practice to put all authentication logic in a separate file.</p> <p>Create the <code>security.py</code> file:</p> <pre><code># security.py\nfrom fastapi import Depends, HTTPException, status\nfrom fastapi.security import OAuth2PasswordBearer\nfrom jose import JWTError, jwt\nfrom passlib.context import CryptContext\nfrom datetime import datetime, timedelta, timezone\n\n# --- Settings ---\nSECRET_KEY = \"your-super-secret-key-that-is-long-and-random\" # \u26a0\ufe0f Replace with your own key!\nALGORITHM = \"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES = 30\n\n# --- Utilities ---\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/api/v1/login\")\n\n# --- Functions ---\ndef verify_password(plain_password, hashed_password):\n    return pwd_context.verify(plain_password, hashed_password)\n\ndef get_password_hash(password):\n    return pwd_context.hash(password)\n\ndef create_access_token(data: dict):\n    to_encode = data.copy()\n    expire = datetime.now(timezone.utc) + timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    to_encode.update({\"exp\": expire})\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n    return encoded_jwt\n\n# --- Dependency function for token verification ---\ndef get_current_user(token: str = Depends(oauth2_scheme)):\n    credentials_exception = HTTPException(\n        status_code=status.HTTP_401_UNAUTHORIZED,\n        detail=\"Could not validate credentials\",\n        headers={\"WWW-Authenticate\": \"Bearer\"},\n    )\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\n        username: str = payload.get(\"sub\")\n        if username is None:\n            raise credentials_exception\n    except JWTError:\n        raise credentials_exception\n    # Here you can return the user from the DB, for now just return the name\n    return {\"username\": username}\n</code></pre> <p>Step 3: Integration into <code>main.py</code> Now let's connect this to our application.</p> <ol> <li> <p>Create the <code>/login</code> endpoint: <pre><code># main.py\nfrom fastapi.security import OAuth2PasswordRequestForm\nfrom fastapi import Depends, APIRouter\nfrom . import security # Import our module\n\n# ... your FastAPI code ...\nrouter = APIRouter(prefix=\"/api/v1\")\n\n@router.post(\"/login\")\ndef login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):\n    # Here should be user verification in the DB\n    # For example, we have one test user\n    is_user_valid = (form_data.username == \"testuser\" and\n                     security.verify_password(\"testpass\", security.get_password_hash(\"testpass\")))\n\n    if not is_user_valid:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"Incorrect username or password\",\n        )\n    access_token = security.create_access_token(data={\"sub\": form_data.username})\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\n\n# ...\napp.include_router(router)\n</code></pre></p> </li> <li> <p>Protect the endpoints:</p> <p>Use our <code>get_current_user</code> dependency. <pre><code># main.py or in your planet router\n\n@router.post(\"/planets\", status_code=status.HTTP_201_CREATED)\ndef create_planet(\n    planet: PlanetCreate,\n    current_user: dict = Depends(security.get_current_user) # &lt;-- Protection!\n):\n    # Planet creation logic...\n    print(f\"User {current_user['username']} is creating a planet.\")\n    # ...\n    return new_planet\n\n# Protect PUT and DELETE in the same way\n</code></pre></p> </li> </ol>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/3/#4-using-tokens-on-the-frontend","title":"4. Using Tokens on the Frontend","text":"<p>Our frontend must now first obtain a token, save it (for example, in <code>localStorage</code>), and attach it to every protected request.</p> <p>Example in JavaScript (<code>fetch</code>): <pre><code>// 1. Log in\nasync function login(email, password) {\n    const response = await fetch('http://localhost:8001/api/login', { // Laravel API address\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({email, password})\n    });\n    const data = await response.json();\n\n    if (data.token) {\n        localStorage.setItem('api_token', data.token); // Save the token\n    }\n}\n\n// 2. Make a protected request\nasync function createPlanet(planetData) {\n    const token = localStorage.getItem('api_token');\n\n    const response = await fetch('http://localhost:8001/api/planets', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` // &lt;--- Attach the token!\n        },\n        body: JSON.stringify(planetData)\n    });\n    // ...\n}\n</code></pre></p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/3/#reinforcement-quiz","title":"Reinforcement Quiz","text":"<p>1. Stateless APIs most often use for authentication:</p>  a) Sessions and cookies  b) Tokens (e.g., JWT)  c) IP addresses <p>2. In Laravel, to protect routes with tokens, the middleware used is:</p>  a) auth:api  b) auth:sanctum  c) verified <p>3. In FastAPI, to get data from a login form, the dependency used is:</p>  a) Body()  b) Form()  c) OAuth2PasswordRequestForm = Depends() <p>4. How is a token passed from the client to the server in a protected request?</p>  a) In the URL parameter `?token=...`  b) In the request body  c) In the HTTP header `Authorization: Bearer ` Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have installed an \"access control system\" on your APIs. Now not just anyone can make changes to your \"galactic database\".</p> <ul> <li>\u2705 Understood the principle of token-based authentication.</li> <li>\ud83d\udd10 Implemented token issuance and route protection in Laravel Sanctum.</li> <li>\u2699\ufe0f Configured authentication based on OAuth2 and JWT in FastAPI.</li> <li>\ud83d\udef0\ufe0f Learned how the frontend should save and use a token.</li> </ul> <p>Your APIs have become not only functional, but also secure. However, for other developers to be able to use them, they need \"operating instructions\".</p> <p>\ud83d\udccc Check:</p> <ul> <li>Try making a <code>POST</code> request to <code>/api/planets</code> (in Laravel) or <code>/api/v1/planets</code> (in FastAPI) without a token using Postman or Insomnia. You should get a <code>401 Unauthorized</code> error.</li> <li>Make a request to <code>/login</code>, get a token, add it to the <code>Authorization</code> header, and repeat the <code>POST</code> request. It should execute successfully.</li> </ul>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/4/","title":"Chapter 6.4: Documenting the API","text":"<p>Study Time: 30 minutes</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/4/#1-why-is-api-documentation-necessary","title":"1. Why is API Documentation Necessary?","text":"<p>Imagine being given the control panel of a complex spaceship with not a single label on the buttons. You would press them at random, risking launching the catapult instead of turning on the lights. API documentation is those very labels and instructions.</p> <p>Good documentation:</p> <ul> <li>Saves time: Developers don't have to guess what endpoints exist, what parameters they accept, and what they return.</li> <li>Reduces errors: A clear description of data formats and error codes helps to avoid incorrect use of the API.</li> <li>Simplifies integration: The frontend team can work in parallel with the backend team, relying on the documentation as a contract.</li> <li>Is your legacy: Six months from now, you will thank yourself when you return to the project.</li> </ul> <p>\ud83d\udca1 Space Analogy:</p> <ul> <li>API = A complex control system for a space station.</li> <li>API Documentation = A manual for astronauts. It describes:</li> <li>What command (<code>endpoint</code>) to send to open the airlock.</li> <li>What parameters (<code>request body</code>) to pass to configure the life support system.</li> <li>What signals (<code>API responses</code>) to expect in return.</li> </ul>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/4/#2-documentation-in-fastapi-automatic-magic","title":"2. Documentation in FastAPI: Automatic Magic","text":"<p>FastAPI makes documentation incredibly simple. It automatically generates interactive documentation based on your code, using the OpenAPI and Swagger UI standards.</p> <p>Step 1: Add Metadata to Your Application</p> <p>In <code>main.py</code>, you can add descriptions that will appear in the documentation.</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel, Field\n\n# ... (FastAPI code)\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"\"\"\nAPI for exploring the galaxy. \ud83d\ude80\n\nYou will be able to:\n* **View planets**.\n* **Add new worlds** (requires authentication).\n    \"\"\",\n    version=\"1.0.0\",\n    contact={\n        \"name\": \"Chief Engineer of Mission Control\",\n        \"url\": \"https://example.com/contact\",\n        \"email\": \"engineer@example.com\",\n    },\n)\n</code></pre> <p>Step 2: Describe Your Models and Endpoints</p> <p>The more detail you describe your Pydantic models and endpoint parameters, the better the documentation will be.</p> <pre><code># In the file with Pydantic models or in main.py\n\nclass PlanetBase(BaseModel):\n    name: str = Field(..., example=\"Earth\", description=\"The name of the planet\")\n    description: str = Field(..., example=\"A blue planet with diverse life\", description=\"A brief description\")\n    # ...\n\nclass Planet(PlanetBase):\n    id: int\n    is_habitable: bool\n\n    class Config:\n        orm_mode = True # or from_attributes = True in Pydantic v2\n\n# In the routes file\n@router.get(\n    \"/planets\",\n    response_model=list[Planet],\n    summary=\"Get a list of all planets\",\n    description=\"Returns a list of all known planets with pagination (in the future).\"\n)\ndef get_planets():\n    # ...\n\n@router.post(\n    \"/planets\",\n    # ...\n    summary=\"Create a new planet\",\n    responses={\n        401: {\"description\": \"User is not authorized\"},\n        422: {\"description\": \"Data validation error\"}\n    }\n)\ndef create_planet(planet: PlanetCreate, ...):\n    # ...\n</code></pre> <ul> <li><code>Field(..., example=\"...\")</code>: Adds examples to the documentation.</li> <li><code>summary</code>: A brief description of the endpoint.</li> <li><code>description</code>: A detailed description.</li> <li><code>responses</code>: A description of possible response codes, other than successful ones.</li> </ul> <p>Step 3: Open the Documentation in Your Browser</p> <p>Start your FastAPI server and open two magic URLs:</p> <ol> <li><code>http://127.0.0.1:8000/docs</code> \u2014 will open the interactive Swagger UI documentation. Here you can not only read, but also test your endpoints directly from the browser!</li> <li><code>http://127.0.0.1:8000/redoc</code> \u2014 will open an alternative view of the ReDoc documentation. It is less interactive, but often more readable.</li> </ol>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/4/#3-documentation-in-laravel-using-third-party-packages","title":"3. Documentation in Laravel: Using Third-Party Packages","text":"<p>Unlike FastAPI, Laravel does not generate documentation \"out of the box\". However, there are excellent packages that do this by analyzing your code. The most popular is Scribe.</p> <p>Step 1: Install Scribe <pre><code>composer require --dev \"knuckleswtf/scribe\"\n</code></pre> <pre><code>php artisan vendor:publish --tag=scribe-config\nphp artisan scribe:generate\n</code></pre></p> <p>Step 2: Describe Endpoints with DocBlocks</p> <p>Scribe reads PHP DocBlocks (comments of the form <code>/** ... */</code>) above your controller methods.</p> <p>Open <code>app/Http/Controllers/PlanetController.php</code>:</p> <pre><code>// app/Http/Controllers/PlanetController.php\n\n/**\n * @group Planets\n * API for managing planets\n */\nclass PlanetController extends Controller\n{\n    /**\n     * Get a list of planets\n     *\n     * Returns a paginated list of all planets in the galaxy.\n     *\n     * @unauthenticated\n     */\n    public function index()\n    {\n        // ...\n    }\n\n    /**\n     * Create a new planet\n     *\n     * @authenticated\n     *\n     * @bodyParam name string required The name of the planet. Example: Kepler-186f\n     * @bodyParam description string required A description of the planet.\n     * @bodyParam size_km integer required The diameter in kilometers. Example: 14000\n     * @bodyParam is_habitable boolean Whether the planet is habitable. Example: true\n     *\n     * @response 201 {\n     *  \"id\": 4,\n     *  \"name\": \"Kepler-186f\",\n     *  \"description\": \"The first confirmed Earth-sized planet in the habitable zone of another star.\",\n     *  \"size_km\": 14000,\n     *  \"is_habitable\": true,\n     *  \"created_at\": \"2023-10-27T12:00:00.000000Z\",\n     *  \"updated_at\": \"2023-10-27T12:00:00.000000Z\"\n     * }\n     */\n    public function store(Request $request)\n    {\n        // ...\n    }\n    // ... and so on for other methods\n}\n</code></pre> <p>Key Scribe tags:</p> <ul> <li><code>@group</code>: Groups endpoints.</li> <li><code>@unauthenticated</code> / <code>@authenticated</code>: Indicates whether a token is required.</li> <li><code>@bodyParam</code>: Describes a parameter in the request body.</li> <li><code>@response</code>: An example of a successful response.</li> </ul> <p>Step 3: Generate and View the Documentation</p> <p>Each time you make changes to the DocBlocks, run the command:</p> <p><pre><code>php artisan scribe:generate\n</code></pre> Scribe will create a static HTML page with your documentation. Open it at: <code>http://your-app-url/docs</code>.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/4/#reinforcement-quiz","title":"Reinforcement Quiz","text":"<p>1. FastAPI generates documentation based on the standard:</p>  a) GraphQL  b) OpenAPI (Swagger)  c) WSDL <p>2. Which URL opens Swagger UI in FastAPI by default?</p>  a) /api/docs  b) /swagger  c) /docs <p>3. A popular package for generating documentation in Laravel is:</p>  a) Telescope  b) Scribe  c) Horizon <p>4. In Scribe, the tag used to describe request body parameters is:</p>  a) @param  b) @bodyParam  c) @request Check <p>\ud83d\ude80 Chapter Summary:</p> <p>You have created professional documentation, turning your APIs from \"black boxes\" into understandable and convenient tools.</p> <ul> <li>\u2705 Understood the critical importance of API documentation.</li> <li>\ud83e\ude84 Learned to use automatic documentation generation in FastAPI.</li> <li>\u2699\ufe0f Mastered the basics of the Scribe package for documenting APIs in Laravel.</li> <li>\ud83d\udef0\ufe0f Became convinced that good documentation is the best assistant for any developer.</li> </ul> <p>Your APIs are now not only working and secure, but also fully ready for use by other team members. The last, but most important step remains \u2014 the final security check.</p> <p>\ud83d\udccc Check:</p> <ul> <li>For FastAPI: open <code>/docs</code> in your browser and try to execute a <code>GET</code> request to the list of planets directly from the Swagger UI interface.</li> <li>For Laravel: execute <code>php artisan scribe:generate</code> and open <code>/docs</code>. Make sure the endpoints are grouped and that the <code>store</code> method has a description of the parameters.</li> </ul>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/5/","title":"Chapter 6.5: API Security Basics","text":"<p>Study Time: 45 minutes</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/5/#1-api-security-multi-level-station-defense","title":"1. API Security: Multi-Level Station Defense","text":"<p>Imagine your space station (API) is in a hostile sector of space. A single force field (authentication) is not enough. You need a comprehensive defense system:</p> <ul> <li>Shields (HTTPS): Encryption of all traffic.</li> <li>Anomaly Sensors (Rate Limiting): Protection against too frequent requests.</li> <li>Internal Bulkheads (Authorization): Separation of access rights.</li> <li>Cargo Inspection (Validation): Do not trust any incoming data.</li> <li>Secret Safe (Environment Variables): Secure storage of keys.</li> </ul> <p>Let's configure each of these levels.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/5/#2-shields-always-use-https","title":"2. Shields: Always Use HTTPS","text":"<p>What is it? HTTPS (HyperText Transfer Protocol Secure) is a version of the HTTP protocol that encrypts all data between the client and the server. Without it, anyone who \"listens\" to the network (for example, on public Wi-Fi) can intercept logins, passwords, and tokens.</p> <p>How to implement it?</p> <ul> <li>On production \u2014 mandatory. When deploying your API to a real server (Heroku, DigitalOcean, etc.), configure the web server (Nginx, Apache) to work with an SSL certificate. Services like Let's Encrypt provide free certificates.</li> <li>In local development, this is less critical, but tools like Laravel Herd or mkcert make it easy to set up local HTTPS.</li> </ul> <p>\ud83d\udca1 Rule #1 in API security: No HTTPS \u2014 no security.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/5/#3-anomaly-sensors-rate-limiting","title":"3. Anomaly Sensors: Rate Limiting","text":"<p>What is it? Protection against Brute-force attacks (when an attacker tries to guess a password by sending thousands of requests per second) and against DoS attacks (when the server is \"flooded\" with requests to make it stop responding). Rate Limiting limits the number of requests that a single user (or IP address) can make in a certain period of time.</p> <p>How to implement it?</p> <ul> <li> <p>In Laravel: The middleware for limiting is already built in!   Open <code>app/Http/Kernel.php</code> and look at the <code>middlewareGroups['api']</code> key. It already has <code>'throttle:api'</code>. The settings for this limitation are in <code>app/Providers/RouteServiceProvider.php</code> in the <code>configureRateLimiting()</code> method.   <pre><code>// app/Providers/RouteServiceProvider.php\nprotected function configureRateLimiting()\n{\n    RateLimiter::for('api', function (Request $request) {\n        return Limit::perMinute(60)-&gt;by($request-&gt;user()?-&gt;id ?: $request-&gt;ip());\n    });\n}\n</code></pre>   This means: 60 requests per minute per user (if authorized) or per IP address.</p> </li> <li> <p>In FastAPI: A third-party package is used, for example, <code>slowapi</code>.</p> </li> <li> <p>Installation: <code>pip install slowapi</code></p> </li> <li>Integration into <code>main.py</code>:       <pre><code># main.py\nfrom slowapi import Limiter, _rate_limit_exceeded_handler\nfrom slowapi.util import get_remote_address\nfrom slowapi.errors import RateLimitExceeded\n\nlimiter = Limiter(key_func=get_remote_address)\napp = FastAPI(...)\n\n# Connect the error handler and the limiter itself\napp.state.limiter = limiter\napp.add_exception_handler(RateLimitExceeded, _rate_limit_exceeded_handler)\n\n# Apply to a specific endpoint\n@router.get(\"/planets\")\n@limiter.limit(\"5/minute\") # 5 requests per minute\ndef get_planets(request: Request):\n    # ...\n</code></pre></li> </ul>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/5/#4-internal-bulkheads-authorization-not-to-be-confused-with-authentication","title":"4. Internal Bulkheads: Authorization (not to be confused with authentication!)","text":"<p>What is it?</p> <ul> <li>Authentication answers the question \"Who are you?\".</li> <li>Authorization answers the question \"What are you allowed to do?\".</li> </ul> <p>For example, a regular user can view planets, but only a user with the \"administrator\" role can delete them.</p> <p>How to implement it?</p> <ul> <li> <p>In Laravel: Policies or Gates are used.</p> </li> <li> <p>Create a policy: <code>php artisan make:policy PlanetPolicy --model=Planet</code></p> </li> <li>Describe the rules in <code>app/Policies/PlanetPolicy.php</code>:       <pre><code>class PlanetPolicy\n{\n    // Allow deletion only for users with the 'admin' role\n    public function delete(User $user, Planet $planet): bool\n    {\n        return $user-&gt;role === 'admin';\n    }\n}\n</code></pre></li> <li> <p>Apply the policy in the <code>PlanetController.php</code> controller:       <pre><code>public function destroy(Planet $planet)\n{\n    // Check if the current user has the right to delete\n    $this-&gt;authorize('delete', $planet);\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre></p> </li> <li> <p>In FastAPI: Authorization logic is usually written manually inside the endpoints, using user information obtained from the token.</p> </li> </ul> <pre><code># (assuming the token has a 'roles' field)\ndef get_current_active_user(token: str = Depends(oauth2_scheme)):\n    # ... decode the token and get the user with roles from the DB\n    # user = get_user_from_db(username)\n    return user # return the user object\n\n@router.delete(\"/planets/{planet_id}\")\ndef delete_planet(\n    planet_id: int,\n    current_user: User = Depends(get_current_active_user)\n):\n    if \"admin\" not in current_user.roles:\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail=\"Insufficient permissions to perform this operation\",\n        )\n    # ... deletion logic ...\n</code></pre>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/5/#5-cargo-inspection-and-the-secret-safe-validation-and-environment-variables","title":"5. Cargo Inspection and the Secret Safe: Validation and Environment Variables","text":"<p>We have already implemented these two points, but it is important to emphasize their role in security.</p> <ul> <li> <p>Never trust incoming data (Validation):</p> </li> <li> <p>We used <code>$request-&gt;validate()</code> in Laravel and Pydantic models in FastAPI. This protects us from SQL injections (when using Eloquent/SQLAlchemy) and incorrect data that can break the application. Always validate everything that comes from the outside!</p> </li> <li> <p>Store secrets in <code>.env</code> (Environment Variables):</p> </li> <li> <p>Database keys, secret keys for JWT (<code>SECRET_KEY</code>), third-party service keys \u2014 all of this should never get into the version control system (Git). This is what <code>.env</code> files, which are added to <code>.gitignore</code>, are for.</p> </li> </ul>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/5/#reinforcement-quiz","title":"Reinforcement Quiz","text":"<p>1. To protect against data interception on public networks, you should use:</p>  a) Rate Limiting  b) HTTPS  c) CORS <p>2. Rate Limiting primarily protects against:</p>  a) SQL injections  b) Brute-force and DoS attacks  c) Cross-site scripting (XSS) <p>3. The question \"What is this user allowed to do?\" is solved by:</p>  a) Authentication  b) Authorization  c) Validation <p>4. Secret API keys and database passwords should be stored:</p>  a) Directly in the code for convenience  b) In a public repository on GitHub  c) In a `.env` file that is excluded from Git Check <p>\ud83d\ude80 Course Completion Congratulations, Commander! You have successfully completed all missions.</p> <p>You have gone from a beginner who had only heard about APIs to an engineer capable of independently designing, developing, documenting, securing, and testing a full-fledged web service on two of the most popular technologies in their ecosystems.</p> <p>You have mastered the universal language of REST, learned Laravel and FastAPI, and built a \"Mission Control Center\" for them in pure JavaScript.</p> <p>This is a huge achievement. The world of API development is now open to you. Continue to explore, learn, and build amazing things.</p>"},{"location":"en/Chapter%206%20-%20Integration%20and%20Best%20Practices/5/#end-of-communication","title":"End of communication. \ud83d\ude80\u2604 Support the Mission","text":"<p>Creating this tutorial is a long and complex flight that requires a lot of time and energy. If the material was useful to you, you can help refuel our expedition's fuel tanks. Each support is another orbit towards new useful materials.</p> <p></p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/1/","title":"Cap\u00edtulo 1.1: \u00bfQu\u00e9 es una API y por qu\u00e9 se necesita?","text":"<p>Tiempo de estudio: 30 minutos</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/1/#1-introduccion-la-api-como-nodo-de-acoplamiento-espacial","title":"1. Introducci\u00f3n: La API como \"nodo de acoplamiento espacial\"","text":"<p>Imagine que usted es el comandante de una nave espacial. Para conectar su nave a la ISS, necesita un nodo de acoplamiento est\u00e1ndar. Sin \u00e9l, es imposible acoplarse, incluso si la nave y la estaci\u00f3n encajan perfectamente.</p> <p>Una API (Application Programming Interface) es un \"nodo de acoplamiento\" similar para programas. - Es un conjunto de reglas que permite a diferentes aplicaciones intercambiar datos y trabajar juntas. - Ejemplo: cuando una aplicaci\u00f3n m\u00f3vil muestra el pron\u00f3stico del tiempo, utiliza la API de un servicio meteorol\u00f3gico.</p> <p>\ud83d\udca1 Analog\u00eda del espacio: Una API es como el protocolo de comunicaci\u00f3n entre la Tierra y un rover marciano. El rover recibe comandos en un formato que entiende (por ejemplo, \"tomar foto del cr\u00e1ter\"), realiza la tarea y env\u00eda los datos de vuelta.</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/1/#2-por-que-se-necesitan-las-api","title":"2. \u00bfPor qu\u00e9 se necesitan las API?","text":"<ol> <li> <p>Simplificaci\u00f3n del desarrollo    En lugar de crear todo desde cero, utiliza una API ya hecha, como la SpaceX API.    <pre><code># Ejemplo: Obtener datos sobre los lanzamientos de SpaceX\nimport requests\nresponse = requests.get(\"https://api.spacexdata.com/v3/missions\")\nprint(response.json()[0])  # Imprimir datos\n</code></pre></p> </li> <li> <p>Automatizaci\u00f3n de procesos    Las API permiten a los robots sonda transmitir datos autom\u00e1ticamente a la Tierra sin intervenci\u00f3n manual.</p> </li> <li> <p>Integraci\u00f3n de sistemas    Como el acoplamiento de m\u00f3dulos de la ISS: \u00a1las API conectan su aplicaci\u00f3n con sistemas de pago, bases de datos o incluso telescopios!</p> </li> <li> <p>Acceso a datos \u00fanicos    Por ejemplo, la API de SpaceX proporciona datos reales sobre lanzamientos de cohetes.</p> </li> </ol>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/1/#3-como-funciona-una-api","title":"3. \u00bfC\u00f3mo funciona una API?","text":"<ul> <li>El Cliente (su programa) env\u00eda una solicitud HTTP al servidor.</li> <li>El Servidor (por ejemplo, la NASA) procesa la solicitud y devuelve una respuesta en formato JSON.</li> <li>Los datos son \"tesoros c\u00f3smicos\": coordenadas de la ISS, fotos de galaxias, una lista de exoplanetas.</li> </ul> <p>\u26a1 Ejemplo de solicitud a la API \"Open Notify\" (ISS): <pre><code>curl \"http://api.open-notify.org/iss-now.json\"\n</code></pre> Respuesta: <pre><code>{\n  \"message\": \"success\",\n  \"timestamp\": 1725431234,\n  \"iss_position\": {\n    \"latitude\": \"51.1234\",\n    \"longitude\": \"-120.5678\"\n  }\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/1/#4-tipos-de-api-resumen-breve","title":"4. Tipos de API (Resumen breve)","text":"Tipo Ejemplo del espacio D\u00f3nde se utiliza REST Comunicaci\u00f3n est\u00e1ndar \"Centro de control \u2194 sat\u00e9lite\" Servicios web (90% de los casos) GraphQL \"Consulta personalizada\" (por ejemplo, \"dame solo el tama\u00f1o y la masa del planeta\") Sistemas complejos SOAP Como cifrado de radio en misiones antiguas Aplicaciones corporativas <p>En este tutorial nos centraremos en las API REST, el formato m\u00e1s popular.</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/1/#5-ejemplos-de-api-espaciales","title":"5. Ejemplos de API espaciales","text":"<ol> <li>API Abierta de la NASA: Datos de asteroides, fotos del telescopio Hubble.</li> <li>API de SpaceX: Informaci\u00f3n sobre lanzamientos, cohetes, naves Dragon.</li> <li>Open Notify: Posici\u00f3n actual de la ISS, n\u00famero de personas en el espacio.</li> </ol>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/1/#cuestionario-interactivo","title":"Cuestionario Interactivo","text":"<p>1. Una API es...</p>  a) Inteligencia Artificial  b) Un conjunto de reglas para la interacci\u00f3n de programas  c) Un lenguaje de programaci\u00f3n <p>2. \u00bfPor qu\u00e9 usar una API en lugar de escribir su propio c\u00f3digo?</p>  a) Para ahorrar tiempo  b) Para acceder a datos \u00fanicos  c) Ambas opciones <p>3. \u00bfQu\u00e9 formato de datos suele devolver una API?</p>  a) XML  b) JSON  c) TXT Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Una API es la base para trabajar con datos de fuentes externas. As\u00ed como un astronauta no puede trabajar sin comunicaci\u00f3n con el Control de Misi\u00f3n, un desarrollador no puede construir una aplicaci\u00f3n compleja sin una API. \u00a1En el pr\u00f3ximo cap\u00edtulo, aprenderemos c\u00f3mo enviar \"comandos\" al servidor usando m\u00e9todos HTTP!</p> <p>\ud83d\udccc Consejo: \u00a1Intente realizar una solicitud a la API de Open Notify y descubra d\u00f3nde est\u00e1 la ISS ahora mismo! (Esto se puede hacer incluso con una consola simple)</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/2/","title":"Cap\u00edtulo 1.2: M\u00e9todos HTTP y c\u00f3digos de estado","text":"<p>Tiempo de estudio: 40 minutos</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/2/#1-http-el-lenguaje-de-comunicacion-en-el-espacio","title":"1. HTTP: El lenguaje de comunicaci\u00f3n en el espacio","text":"<p>Imagina que eres el Centro de Control de Misiones (CCM), y el servidor API es una nave espacial. HTTP (HyperText Transfer Protocol) es la radiocomunicaci\u00f3n entre vosotros.</p> <p>Cada mensaje contiene:</p> <ul> <li> <p>M\u00e9todo \u2192 Qu\u00e9 hacer (por ejemplo, \"enviar sonda\")</p> </li> <li> <p>C\u00f3digo de estado \u2192 Resultado de la operaci\u00f3n (\"\u00a1sonda lanzada con \u00e9xito!\")</p> </li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial: <code>GET /stars</code> = \"CCM \u2192 Nave: \u00a1Informa las coordenadas de las estrellas!\" <code>200 OK</code> = \"Nave \u2192 CCM: \u00a1Coordenadas transmitidas!\"</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/2/#2-metodos-http-principales","title":"2. M\u00e9todos HTTP principales","text":"<p>Cada m\u00e9todo es como un tipo de comando para una misi\u00f3n espacial:</p> M\u00e9todo An\u00e1logo en el espacio Ejemplo de solicitud Descripci\u00f3n GET Solicitud de datos (telescopio) <code>GET /planets</code> Obtener lista de planetas POST Env\u00edo de nuevo objeto (lanzamiento de cohete) <code>POST /satellites</code> Crear nuevo sat\u00e9lite PUT Actualizaci\u00f3n completa de objeto (correcci\u00f3n de \u00f3rbita) <code>PUT /satellites/iss</code> Actualizar datos de la ISS DELETE Destrucci\u00f3n de objeto (salida de \u00f3rbita) <code>DELETE /debris/123</code> Eliminar basura espacial <p>\u26a1 Ejemplo de c\u00f3digo (Python): <pre><code>import requests\n\n# GET: Obtener datos sobre el cohete Falcon 9\n# Usamos un endpoint real de la API de SpaceX\nresponse = requests.get(\"https://api.spacexdata.com/v4/rockets/5e9d0d95eda69973a809d1ec\")\nprint(response.status_code, response.json()['name']) # 200 Falcon 9\n\n# POST: Crear una nueva publicaci\u00f3n en una API de prueba\n# Usamos el servicio sandbox jsonplaceholder\nnew_post = {\"title\": \"Misi\u00f3n Artemis\", \"body\": \"Listo para el lanzamiento\", \"userId\": 1}\nresponse = requests.post(\"https://jsonplaceholder.typicode.com/posts\", json=new_post)\nprint(response.status_code, response.json()['id'])  # 201 101 (o otro ID)\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/2/#3-codigos-de-estado-importantes","title":"3. C\u00f3digos de estado importantes","text":"<p>La respuesta del servidor es como una se\u00f1al de la nave espacial:</p> Grupo C\u00f3digo An\u00e1logo en el espacio Descripci\u00f3n <code>2xx</code> 200 \u2705 \"\u00a1Tarea completada!\" \u00c9xito 201 \ud83d\ude80 \"\u00a1Cohete lanzado!\" Objeto creado <code>3xx</code> 301 \ud83c\udf0d \"CCM reubicado a nueva direcci\u00f3n\" Redirecci\u00f3n <code>4xx</code> 400 \u274c \"\u00a1Coordenadas incorrectas en la solicitud!\" Error del cliente 404 \ud83e\ude90 \"\u00a1Planeta no encontrado!\" Recurso no encontrado <code>5xx</code> 500 \ud83d\udd25 \"\u00a1Fallo en el sistema de propulsi\u00f3n!\" Error del servidor"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/2/#4-practica-manejo-de-codigos-de-estado","title":"4. Pr\u00e1ctica: Manejo de c\u00f3digos de estado","text":"<p>\u00a1Siempre verifica la respuesta de la API! Ejemplo de manejo de errores: <pre><code>import requests\n\ndef get_post_data(post_id):\n    \"\"\"Funci\u00f3n para obtener datos de una publicaci\u00f3n con manejo de c\u00f3digos de estado.\"\"\"\n    try:\n        response = requests.get(f\"https://jsonplaceholder.typicode.com/posts/{post_id}\")\n\n        # Verificamos el c\u00f3digo de estado de la respuesta\n        if response.status_code == 200:\n            print(f\"\u2705 \u00a1Datos para la publicaci\u00f3n {post_id} obtenidos con \u00e9xito!\")\n            return response.json()\n        elif response.status_code == 404:\n            print(f\"\u26a0\ufe0f \u00a1Recurso para la publicaci\u00f3n {post_id} no encontrado!\")\n            return None\n        else:\n            # Manejo de otros errores de cliente (4xx) o de servidor (5xx)\n            print(f\"\ud83d\udea8 \u00a1Ocurri\u00f3 un error! C\u00f3digo de estado: {response.status_code}\")\n            return None\n\n    except requests.exceptions.RequestException as e:\n        # Manejo de errores de conexi\u00f3n (por ejemplo, sin internet)\n        print(f\"\ud83d\udd25 Error de conexi\u00f3n: {e}\")\n        return None\n\n# --- Probando nuestra funci\u00f3n ---\nprint(\"--- Buscando publicaci\u00f3n existente ---\")\nget_post_data(1)\n\nprint(\"\\n--- Buscando publicaci\u00f3n inexistente ---\")\nget_post_data(9999) # Esta publicaci\u00f3n no existe, esperamos 404\n</code></pre></p> <p>\ud83d\udd2d Ejemplo de una API real (SpaceX): Solicitud: <code>GET https://api.spacexdata.com/v4/ships/OCISLY</code> Respuesta: <code>200 OK</code> + datos de la nave Solicitud: <code>GET https://api.spacexdata.com/v4/ships/UNICORN</code> Respuesta: <code>404 Not Found</code></p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/2/#cuestionario-de-consolidacion","title":"Cuestionario de consolidaci\u00f3n","text":"<p>1. \u00bfQu\u00e9 m\u00e9todo usar para obtener datos sobre las estrellas?</p>  a) POST  b) PUT  c) GET <p>2. El estado `201 Created` significa:</p>  a) Objeto eliminado  b) Objeto creado  c) Error del servidor <p>3. M\u00e9todo para la actualizaci\u00f3n completa de los datos de un sat\u00e9lite:</p>  a) PATCH  b) DELETE  c) PUT <p>4. \u00bfQu\u00e9 significa el estado `500 Internal Server Error`?</p>  a) Error en la solicitud del cliente  b) Fallo en el servidor  c) Ejecuci\u00f3n exitosa Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo: Los m\u00e9todos HTTP son vuestros comandos para misiones espaciales, y los c\u00f3digos de estado son los informes de su ejecuci\u00f3n. Recordad:</p> <p><code>GET</code> = \"Dame datos\", <code>POST</code> = \"Crea nuevo\", <code>PUT</code> = \"Actualiza todo\", <code>DELETE</code> = \"Destruye\" <code>2xx</code> = \u00c9xito, <code>4xx</code> = Tu error, <code>5xx</code> = Problema del servidor</p> <p>\u00a1Preparados para el lanzamiento! En el pr\u00f3ximo cap\u00edtulo descifraremos los \"telegramas\" del servidor: el formato JSON.</p> <p>\ud83d\udccc Pr\u00e1ctica: \u00a1Usad la API de SpaceX para enviar <code>GET /launches/latest</code> y estudiar los c\u00f3digos de respuesta!</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/3/","title":"Cap\u00edtulo 1.3: Formato JSON","text":"<p>Tiempo de estudio: 35 minutos</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/3/#1-json-el-lenguaje-de-la-comunicacion-espacial","title":"1. JSON: El lenguaje de la comunicaci\u00f3n espacial","text":"<p>Imagine que una sonda espacial y el Centro de Control de la Misi\u00f3n (MCC) hablan diferentes idiomas. JSON (JavaScript Object Notation) es un lenguaje de datos universal, comprensible tanto para humanos como para m\u00e1quinas. \u00a1Como el idioma internacional de los astronautas!</p> <p>Propiedades principales:</p> <ul> <li>\ud83e\udeb6 Ligero: transmisi\u00f3n r\u00e1pida incluso con se\u00f1al d\u00e9bil</li> <li>\ud83d\udc40 Legible por humanos: la estructura es visible a simple vista</li> <li>\ud83d\udd04 Universal: compatible con todos los lenguajes de programaci\u00f3n</li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>JSON es como un telegrama digital con datos sobre las estrellas. En lugar de c\u00f3digo Morse, estructuras claras <code>{clave: valor}</code>.</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/3/#2-anatomia-de-un-mensaje-json","title":"2. Anatom\u00eda de un mensaje JSON","text":"<p>JSON se compone de dos tipos de estructuras:</p> <p>A. Objetos (Naves espaciales) <pre><code>{\n  \"name\": \"Voyager-1\",\n  \"launch_year\": 1977,\n  \"is_active\": true,\n  \"position\": [-19.1, 42.7, 0.3]\n}\n</code></pre></p> <p>B. Arrays (C\u00famulos estelares) <pre><code>[\n  {\"name\": \"Sirius\", \"magnitude\": -1.46},\n  {\"name\": \"Canopus\", \"magnitude\": -0.74},\n  {\"name\": \"Arcturus\", \"magnitude\": -0.05}\n]\n</code></pre></p> <p>\u26a1 Reglas de sintaxis:</p> <ul> <li>Claves entre comillas <code>\" \"</code></li> <li>Valores: cadenas de texto, n\u00fameros, booleanos (<code>true</code>/<code>false</code>), <code>null</code></li> <li>Datos separados por comas</li> <li>Llaves <code>{}</code> para objetos, corchetes <code>[]</code> para arrays</li> </ul>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/3/#3-json-vs-xml-batalla-de-formatos","title":"3. JSON vs XML: Batalla de formatos","text":"Par\u00e1metro JSON (Sat\u00e9lite moderno) XML (Telescopio antiguo) Legibilidad Alta (acceso directo a campos) Baja (etiquetas <code>&lt;planet&gt;...&lt;/planet&gt;</code>) Tama\u00f1o Compacto Voluminoso (+30% al tama\u00f1o) Procesamiento R\u00e1pido Lento Ejemplo <code>{\"planet\": \"Mars\"}</code> <code>&lt;planet&gt;Mars&lt;/planet&gt;</code> <p>\ud83d\udd2d \u00bfPor qu\u00e9 JSON gan\u00f3 en el espacio?</p> <p>Las APIs de la NASA, SpaceX y la ESA usan JSON, \u00a1es ideal para la transmisi\u00f3n de datos!</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/3/#4-trabajo-con-json-en-codigo","title":"4. Trabajo con JSON en c\u00f3digo","text":"<p>Ejemplo Python (obtener datos de la Luna): <pre><code>import requests\nimport json\n\n# Usamos una API real, por ejemplo, para obtener datos del Sistema Solar\n# \u043e\u0442 The Solar System OpenData API\ntry:\n    response = requests.get(\"https://api.le-systeme-solaire.net/rest/bodies/terre\")\n    response.raise_for_status() # Comprueba errores HTTP (4xx, 5xx)\n\n    planet_data = response.json()\n\n    print(f\"Nombre: {planet_data['englishName']}\")\n    print(f\"Sat\u00e9lites: {[moon['moon'] for moon in planet_data['moons']]}\")\n\n    # Conversi\u00f3n de un diccionario Python a una cadena JSON para guardar\n    planet_json_str = json.dumps(planet_data, indent=2, ensure_ascii=False) # ensure_ascii=False para cir\u00edlico\n    print(\"\\n--- JSON Formateado ---\")\n    print(planet_json_str)\n\nexcept requests.exceptions.RequestException as e:\n    print(f\"Error de solicitud: {e}\")\n</code></pre></p> <p>Ejemplo JavaScript (procesamiento de datos del telescopio): <pre><code>const Data = `{\n  \"id\": \"terre\",\n  \"name\": \"La Terre\",\n  \"englishName\": \"Earth\",\n  \"isPlanet\": true,\n  \"moons\": [\n    {\n      \"moon\": \"La Lune\",\n      \"rel\": \"https://api.le-systeme-solaire.net/rest/bodies/lune\"\n    }\n  ],\n  \"semimajorAxis\": 149598023,\n  \"perihelion\": 147095000,\n  \"aphelion\": 152100000,\n  \"eccentricity\": 0.0167,\n  \"inclination\": 0,\n  \"mass\": {\n    \"massValue\": 5.97237,\n    \"massExponent\": 24\n  },\n  \"vol\": {\n    \"volValue\": 1.08321,\n    \"volExponent\": 12\n  },\n  \"density\": 5.5136,\n  \"gravity\": 9.8,\n  \"escape\": 11190,\n  \"meanRadius\": 6371.0084,\n  \"equaRadius\": 6378.1366,\n  \"polarRadius\": 6356.8,\n  \"flattening\": 0.00335,\n  \"dimension\": \"\",\n  \"sideralOrbit\": 365.256,\n  \"sideralRotation\": 23.9345,\n  \"aroundPlanet\": null,\n  \"discoveredBy\": \"\",\n  \"discoveryDate\": \"\",\n  \"alternativeName\": \"\",\n  \"axialTilt\": 23.4393,\n  \"avgTemp\": 288,\n  \"mainAnomaly\": 358.617,\n  \"argPeriapsis\": 85.901,\n  \"longAscNode\": 18.272,\n  \"bodyType\": \"Planet\"\n}`;\n\nconst dataObj = JSON.parse(Data);\nconsole.log(dataObj.target);\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/3/#5-validacion-json-comprobacion-de-la-senal","title":"5. Validaci\u00f3n JSON: Comprobaci\u00f3n de la \"se\u00f1al\"","text":"<p>Antes de usar los datos, aseg\u00farese de que el JSON:</p> <ol> <li> <p>Tenga la estructura correcta (\u00a1verifique los corchetes/llaves!)</p> </li> <li> <p>Contenga los campos esperados</p> </li> <li> <p>No tenga errores de sintaxis</p> </li> </ol> <p>Herramientas: - JSONLint (como un detector de basura espacial para JSON) - Analizadores sint\u00e1cticos de lenguaje integrados (lanzar\u00e1n un error si el formato es incorrecto)</p> <p>\u26a0\ufe0f Ejemplo de error:</p> <p><code>{\"planet\": \"Mars\"</code> \u2192 \u00a1Falta la llave de cierre!</p> <p>Soluci\u00f3n: Siempre use <code>json.loads()</code> en Python o <code>JSON.parse()</code> en JS para verificar.</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/3/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. JSON significa...</p>  a) Java Space Object Notation  b) JavaScript Object Notation  c) Jupiter's Satellite Orbital Network <p>2. \u00bfC\u00f3mo se denota un objeto en JSON:</p>  a) ()  b) {}  c) [] <p>3. \u00bfQu\u00e9 NO es un valor v\u00e1lido en JSON?</p>  a) \"name\": \"Saturn\"  b) \"radius_km\": 58232  c) \"has_rings\": undefined <p>4. \u00bfPor qu\u00e9 JSON es mejor que XML para las APIs espaciales?</p>  a) Menor tama\u00f1o y alta velocidad  b) Compatibilidad con codificaciones extraterrestres  c) Capacidad para almacenar video <p>5. \u00bfC\u00f3mo se convierte una cadena JSON en un objeto Python?</p>  a) json.parse()  b) json.to_object()  c) json.loads() Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>JSON es el \"esperanto espacial\" del mundo de las APIs. Conociendo su estructura, podr\u00e1s:</p> <ul> <li> <p>\ud83d\udce1 Recibir datos de telescopios y sondas</p> </li> <li> <p>\ud83d\udd27 Convertir informaci\u00f3n entre sistemas</p> </li> <li> <p>\ud83d\udef0\ufe0f Guardar datos cient\u00edficos en archivos</p> </li> </ul> <p>\u00a1Prep\u00e1rense para el acoplamiento! En el pr\u00f3ximo cap\u00edtulo, exploraremos la arquitectura REST API, el sistema de control de la \"estaci\u00f3n espacial\" de tu servidor.</p> <p>\ud83d\udccc Pr\u00e1ctica: \u00a1Visite NASA Open APIs, encuentre la API de asteroides (Asteroids NeoWs) y estudie la estructura JSON en la respuesta!</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/4/","title":"Cap\u00edtulo 1.4: Estructura de la API REST","text":"<p>Tiempo de estudio: 45 minutos</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/4/#1-api-rest-arquitectura-de-una-estacion-espacial","title":"1. API REST: Arquitectura de una estaci\u00f3n espacial","text":"<p>Imagina una estaci\u00f3n espacial donde cada m\u00f3dulo tiene:</p> <ul> <li> <p>Puerto de acoplamiento est\u00e1ndar (interfaz \u00fanica)</p> </li> <li> <p>Especializaci\u00f3n clara (m\u00f3dulo de vivienda, laboratorio, almac\u00e9n)</p> </li> <li> <p>Sistema de coordenadas (ubicaci\u00f3n precisa)</p> </li> </ul> <p>La API REST (Representational State Transfer) funciona bajo los mismos principios:</p> <ul> <li> <p>Interfaz \u00fanica para todos los recursos</p> </li> <li> <p>Separaci\u00f3n clara de componentes</p> </li> <li> <p>Direccionamiento a trav\u00e9s de URI (coordenadas espaciales)</p> </li> </ul> <p>\ud83d\udca1 Idea clave:</p> <p>Cada recurso (planetas, cohetes, astronautas) tiene una URL \u00fanica e interact\u00faa a trav\u00e9s de m\u00e9todos HTTP.</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/4/#2-6-principios-rest-en-la-analogia-espacial","title":"2. 6 principios REST en la analog\u00eda espacial","text":"Principio REST An\u00e1logo en la ISS Significado para la API Interfaz uniforme Nodos de acoplamiento est\u00e1ndar Mismas reglas para todas las solicitudes Sin estado Cada comando es autosuficiente El servidor no almacena el estado del cliente Almacenamiento en cach\u00e9 Reservas locales de provisiones Almacenamiento de respuestas frecuentes Cliente-servidor Clara separaci\u00f3n: Centro de Control \u2194 Estaci\u00f3n Desarrollo independiente de componentes Sistema en capas Sat\u00e9lites repetidores Proxies, equilibradores de carga C\u00f3digo bajo demanda Descarga de software para experimentos (Opcional) Transferencia de scripts"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/4/#3-recursos-y-uri-coordenadas-espaciales","title":"3. Recursos y URI: Coordenadas espaciales","text":"<p>Cada objeto en la API es un recurso con una direcci\u00f3n \u00fanica: <pre><code>https://api.spacexdata.com/v4/    \u2190 URL base\n          rockets/            \u2190 Colecci\u00f3n de cohetes\n          rockets/5e9d0d95eda69973a809d1ec \u2190 Cohete espec\u00edfico (por ID)\n</code></pre></p> <p>Ejemplos de recursos espaciales:</p> <ul> <li><code>GET /stars</code> \u2192 Lista de estrellas</li> <li><code>GET /stars/sirius</code> \u2192 Datos sobre Sirio</li> <li><code>POST /satellites</code> \u2192 Lanzar un nuevo sat\u00e9lite</li> <li><code>PUT /missions/artemis</code> \u2192 Actualizar misi\u00f3n</li> </ul> <p>Esquema de jerarqu\u00eda URI: <pre><code>[URL base]\n\u251c\u2500\u2500 /planets          \u2192 Colecci\u00f3n de planetas\n\u2502   \u251c\u2500\u2500 /mars         \u2192 Recurso \"Marte\"\n\u2502   \u2514\u2500\u2500 /venus        \u2192 Recurso \"Venus\"\n\u2514\u2500\u2500 /launches         \u2192 Colecci\u00f3n de lanzamientos\n    \u251c\u2500\u2500 /upcoming     \u2192 Subcolecci\u00f3n\n    \u2514\u2500\u2500 /latest       \u2192 Recurso\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/4/#4-operaciones-crud-a-traves-de-metodos-http","title":"4. Operaciones CRUD a trav\u00e9s de m\u00e9todos HTTP","text":"Operaci\u00f3n M\u00e9todo HTTP Ejemplo (Estaci\u00f3n espacial) Respuesta del servidor Crear <code>POST</code> Enviar nuevo m\u00f3dulo <code>201 Created</code> Leer <code>GET</code> Solicitar datos sobre un m\u00f3dulo <code>200 OK</code> Actualizar <code>PUT</code> Reconfigurar m\u00f3dulo <code>200 OK</code> Eliminar <code>DELETE</code> Desacoplar m\u00f3dulo antiguo <code>204 No Content</code> <p>\u26a1 Ejemplo de c\u00f3digo (Adici\u00f3n de un sat\u00e9lite): <pre><code>import requests\n\n# Usamos un servicio de prueba que simula la creaci\u00f3n de un recurso\nnew_post = {\n    \"title\": \"New Telescope Launch\",\n    \"body\": \"Hubble-2 is ready for deployment.\",\n    \"userId\": 1\n}\n\n# Clave API condicional para demostrar los encabezados\nheaders = {\n    \"Authorization\": \"Bearer YOUR_DEMO_KEY\",\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n}\n\nresponse = requests.post(\n    \"https://jsonplaceholder.typicode.com/posts\",\n    json=new_post,\n    headers=headers\n)\n\nif response.status_code == 201:\n    print(\"\u2705 \u00a1Publicaci\u00f3n sobre el nuevo sat\u00e9lite creada con \u00e9xito!\")\n    print(\"Respuesta del servidor:\")\n    print(response.json())\nelse:\n    print(f\"\u274c \u00a1Error! Estado: {response.status_code}\")\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/4/#5-versionado-de-api-evolucion-de-la-estacion","title":"5. Versionado de API: Evoluci\u00f3n de la estaci\u00f3n","text":"<p>As\u00ed como la ISS se actualiza (M\u00f3dulo \"Zarya\" \u2192 \"Nauka\"), la API cambia de versi\u00f3n:</p> <ul> <li>En la URL: <code>https://api.spacex.com/v4/rockets</code></li> <li>En los encabezados: <code>Accept: application/vnd.spacex-v5+json</code></li> </ul> <p>Por qu\u00e9 es importante:</p> <ul> <li>v1: Funcionalidad b\u00e1sica</li> <li>v2: Campos nuevos a\u00f1adidos</li> <li>v3: Estructura de respuestas modificada</li> </ul> <p>\u26a0\ufe0f Consejo: \u00a1Siempre especifica la versi\u00f3n en las solicitudes, de lo contrario el \"acoplamiento\" podr\u00eda fallar!</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/4/#6-hipermedia-hateoas-navegacion-en-el-espacio","title":"6. Hipermedia (HATEOAS): Navegaci\u00f3n en el espacio","text":"<p>La respuesta de la API contiene enlaces a recursos relacionados, como un mapa de la estaci\u00f3n: <pre><code>{\n  \"id\": \"iss\",\n  \"name\": \"Estaci\u00f3n Espacial Internacional\",\n  \"crew\": 7,\n  \"_links\": {\n    \"self\": { \"href\": \"/stations/iss\" },\n    \"modules\": { \"href\": \"/stations/iss/modules\" },\n    \"schedule\": { \"href\": \"/stations/iss/schedule\" }\n  }\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/4/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. REST se expande como:</p>  a) Rocket Engine System Transfer  b) Representational State Transfer  c) Remote Space Technology <p>2. El principio \"Stateless\" significa:</p>  a) El servidor almacena el historial de solicitudes  b) Cada solicitud es autosuficiente  c) Los datos se transmiten solo a trav\u00e9s de SSL <p>3. URI para obtener datos sobre el cohete Falcon Heavy:</p>  a) POST /rockets/falcon-heavy  b) GET /falcon-heavy  c) GET /rockets/falcon-heavy <p>4. M\u00e9todo para la actualizaci\u00f3n completa de un recurso:</p>  a) PATCH  b) POST  c) PUT <p>5. HATEOAS en una API es:</p>  a) Un sistema de enlaces a recursos relacionados  b) Un protocolo de cifrado  c) Un lenguaje de consulta Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>La API REST es una \"arquitectura de estaci\u00f3n espacial\" estandarizada para servicios web. Recuerda:</p> <ul> <li>Recursos = Objetos (cohetes, planetas)</li> <li>URI = Coordenadas de los objetos</li> <li>M\u00e9todos HTTP = Comandos de control</li> <li>Versiones = Modernizaciones de la estaci\u00f3n</li> </ul> <p>\u00a1Final de la preparaci\u00f3n! En el pr\u00f3ximo cap\u00edtulo, lanzaremos una \"sonda de prueba\" \u2014 aprenderemos a probar API a trav\u00e9s de Postman.</p> <p>\ud83d\udccc Pr\u00e1ctica: Explora la estructura de la API de SpaceX e intenta ejecutar:</p> <p><code>GET https://api.spacexdata.com/v4/launches/latest</code> \u2014 \u00a1observa el URI y la estructura JSON!</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/5/","title":"Cap\u00edtulo 1.5: Pruebas de API a trav\u00e9s de Postman","text":"<p>Tiempo de estudio: 50 minutos</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/5/#1-por-que-probamos-las-api-verificacion-previa-al-lanzamiento","title":"1. \u00bfPor qu\u00e9 probamos las API? Verificaci\u00f3n previa al lanzamiento","text":"<p>Imagine: antes del lanzamiento de un cohete, los ingenieros realizan pruebas de encendido de sistemas. Si se omite una verificaci\u00f3n, \u00a1la misi\u00f3n podr\u00eda fallar!</p> <p>Las pruebas de API son sus pruebas de control:</p> <ul> <li> <p>\u2705 Verificar la operatividad de los \"nodos de acoplamiento\"</p> </li> <li> <p>\ud83d\udee1\ufe0f Detectar vulnerabilidades antes de su uso en combate</p> </li> <li> <p>\ud83d\udcca Asegurarse de que los datos se transmitan sin distorsiones</p> </li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial: Postman es como una consola de pruebas del Centro de Control de Misiones (CCM) para simular todos los escenarios: \"\u00bfQu\u00e9 pasa si se solicitan datos de un planeta inexistente? \u00bfSoportar\u00e1 el servidor 1000 solicitudes/seg?\"</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/5/#2-postman-centro-de-control-de-vuelo-para-api","title":"2. Postman: \"Centro de Control de Vuelo\" para API","text":"<p>Capacidades:</p> <ul> <li> <p>\ud83d\udce1 Env\u00edo de cualquier solicitud HTTP (GET, POST, PUT, DELETE)</p> </li> <li> <p>\ud83d\udd0d An\u00e1lisis de respuestas (c\u00f3digos de estado, encabezados, cuerpo JSON)</p> </li> <li> <p>\ud83e\uddea Escritura de pruebas automatizadas (JavaScript)</p> </li> <li> <p>\ud83c\udf10 Trabajo con variables de entorno (pruebas vs producci\u00f3n)</p> </li> </ul> <p>\ud83d\udc49 Descargar Postman</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/5/#3-primer-lanzamiento-probando-la-api-de-planetas","title":"3. Primer lanzamiento: Probando la API de planetas","text":"<p>Paso 1: Crear una solicitud</p> <ol> <li> <p>Abrir Postman \u2192 New \u2192 Request</p> </li> <li> <p>Introducir URL: <code>https://api.spacexdata.com/v4/rockets</code></p> </li> <li> <p>Seleccionar m\u00e9todo: GET</p> </li> </ol> <p>Paso 2: Enviar la \"se\u00f1al\" <pre><code>[CCM] -- GET /planets --&gt; [Servidor SpaceX]\n</code></pre></p> <p>Paso 3: Analizar la telemetr\u00eda: - Estado: <code>200 OK</code> - Cuerpo de la respuesta (JSON): lista de cohetes con par\u00e1metros <pre><code>[\n  {\n    \"name\": \"Falcon 1\",\n    \"type\": \"rocket\",\n    \"active\": false,\n    \"stages\": 2,\n    \"id\": \"5e9d0d95eda69955f709d1eb\"\n  },\n  {\n    \"name\": \"Falcon 9\",\n    \"type\": \"rocket\",\n    \"active\": true,\n    \"id\": \"5e9d0d95eda69973a809d1ec\"\n  }\n]\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/5/#4-esquema-componentes-de-postman","title":"4. Esquema: Componentes de Postman","text":"<pre><code>[Espacio de trabajo]\n\u251c\u2500\u2500 Pesta\u00f1a \"Params\" (Par\u00e1metros de consulta)\n\u251c\u2500\u2500 Pesta\u00f1a \"Headers\" (Encabezados)\n\u251c\u2500\u2500 Pesta\u00f1a \"Body\" (Cuerpo de la solicitud para POST/PUT)\n\u251c\u2500\u2500 Pesta\u00f1a \"Tests\" (Scripts para verificaciones)\n\u2514\u2500\u2500 Panel de respuesta (Estado, Tiempo, Tama\u00f1o, Cuerpo)\n</code></pre>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/5/#5-creando-un-escenario-complejo-lanzamiento-de-una-mision","title":"5. Creando un escenario complejo: Lanzamiento de una misi\u00f3n","text":"<p>Prueba: A\u00f1adir un nuevo planeta al cat\u00e1logo</p> <ol> <li> <p>M\u00e9todo: POST</p> </li> <li> <p>URL: <code>https://jsonplaceholder.typicode.com/posts</code> (ejemplo)</p> </li> <li> <p>En Encabezados:    <pre><code> { \"Content-Type\": \"application/json\" }\n</code></pre></p> </li> <li>En Cuerpo (raw \u2192 JSON):    <pre><code>{\n \"title\": \"New Exoplanet Found\",\n \"body\": \"Proxima Centauri b shows signs of a stable atmosphere.\",\n \"userId\": 1\n }\n</code></pre></li> </ol> <p>Verificaci\u00f3n autom\u00e1tica en Tests: <pre><code>// Verificaci\u00f3n de estado\npm.test(\"Post created successfully\", () =&gt; {\n    pm.response.to.have.status(201);\n});\n\n// Verificaci\u00f3n de estructura y datos de la respuesta\npm.test(\"Response contains the new post data\", () =&gt; {\n    const response = pm.response.json();\n    pm.expect(response).to.have.property(\"id\"); // Verificamos que el servidor asign\u00f3 un ID\n    pm.expect(response.title).to.eql(\"New Exoplanet Found\");\n});\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/5/#6-variables-de-entorno-tierra-vs-marte","title":"6. Variables de entorno: Tierra vs Marte","text":"<p>\u00bfC\u00f3mo probar en diferentes servidores (de prueba/producci\u00f3n)?</p> <ol> <li>Crear entornos:</li> <li><code>Local</code> \u2192 <code>http://localhost:3000</code></li> <li> <p><code>Production</code> \u2192 <code>https://api.nasa.gov</code></p> </li> <li> <p>En las solicitudes, usar variables:    <pre><code>{{base_url}}/planets  # Sustituir\u00e1 la URL actual\n</code></pre></p> </li> </ol> <p>\u26a0\ufe0f \u00a1Importante! \u00a1Nunca pruebe <code>DELETE</code> en un servidor de producci\u00f3n!</p>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/5/#7-colecciones-biblioteca-de-misiones-espaciales","title":"7. Colecciones: Biblioteca de misiones espaciales","text":"<p>Agrupar solicitudes: <pre><code>    \ud83d\udcc2 Colecci\u00f3n \"NASA\"\n    \u251c\u2500\u2500 GET Planetas\n    \u251c\u2500\u2500 POST Nuevo planeta\n    \u2514\u2500\u2500 DELETE Planeta (modo de prueba)\n</code></pre> Ventajas:</p> <ul> <li>\ud83d\ude80 Ejecutar todas las pruebas con un solo bot\u00f3n</li> <li>\ud83d\udce4 Exportar/importar configuraciones</li> <li>\ud83d\udc68\u200d\ud83d\ude80 Trabajo colaborativo en equipo</li> </ul>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/5/#8-automatizacion-verificaciones-regulares-de-satelites","title":"8. Automatizaci\u00f3n: Verificaciones regulares de sat\u00e9lites","text":"<p>Configurar la monitorizaci\u00f3n de API a trav\u00e9s de Postman:</p> <ol> <li> <p>Schedule \u2192 Cada 2 horas</p> </li> <li> <p>Pruebas:    <pre><code>pm.test(\"Sat\u00e9lite en l\u00ednea\", () =&gt; {\n  pm.response.to.have.status(200);\n  pm.expect(pm.response.json().signal).above(50); // Se\u00f1al &gt;50%\n});\n</code></pre></p> </li> <li> <p>Notificaciones en Slack/email en caso de fallo</p> </li> </ol>"},{"location":"es/Cap%C3%ADtulo%201%20Fundamentos%20de%20la%20API/5/#cuestionario-para-consolidar","title":"Cuestionario para consolidar","text":"<p>1. Postman se utiliza para:</p>  a) Enviar correo  b) Probar API  c) Crear bases de datos <p>2. \u00bfQu\u00e9 estado esperar al crear un objeto con \u00e9xito?</p>  a) 200 OK  b) 201 Created  c) 404 Not Found <p>3. \u00bfD\u00f3nde escribir pruebas automatizadas en Postman?</p>  a) Pesta\u00f1a \"Body\"  b) Pesta\u00f1a \"Tests\"  c) Pesta\u00f1a \"Cookies\" <p>4. Las variables de entorno son necesarias para:</p>  a) Alternar entre el servidor de prueba y el de producci\u00f3n  b) Almacenar contrase\u00f1as en texto claro  c) Generar datos aleatorios <p>5. \u00bfQu\u00e9 verifican las monitorizaciones regulares?</p>  a) La estabilidad del funcionamiento de la API  b) La velocidad de internet  c) La actualidad de la documentaci\u00f3n Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo: Postman es su \"consola de control\" universal para probar API. Con \u00e9l, usted: - Verificar\u00e1 el funcionamiento de los \"sistemas a bordo\" antes del lanzamiento - Crear\u00e1 una biblioteca de escenarios de prueba - Automatizar\u00e1 la monitorizaci\u00f3n de servicios espaciales</p> <p>\ud83d\udccc Ejercicio pr\u00e1ctico:</p> <ol> <li>Instale Postman</li> <li>Cree una solicitud a la API de SpaceX: <code>GET https://api.spacexdata.com/v4/launches/latest</code></li> <li>Escriba una prueba que verifique que:</li> <li>El estado de la respuesta es <code>200</code></li> <li>El campo <code>name</code> contiene la palabra \"Falcon\"</li> <li>El tiempo de respuesta es &lt; 500 ms</li> </ol> <p>\u00a1Felicidades por completar el Cap\u00edtulo 1!</p> <p>Ha dominado los fundamentos del trabajo con API. \u00a1En los pr\u00f3ximos cap\u00edtulos construiremos nuestra propia \"nave espacial\" \u2013 una aplicaci\u00f3n web que utiliza API espaciales!</p> <p>\ud83c\udf0c Recursos adicionales:</p> <ul> <li>SpaceX API Documentation</li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/","title":"Cap\u00edtulo 2.1: Preparaci\u00f3n del entorno de Laravel","text":""},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/#tiempo-de-estudio-1-2-horas","title":"Tiempo de estudio: 1-2 horas","text":""},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/#1-por-que-se-necesita-un-entorno-local","title":"1. \u00bfPor qu\u00e9 se necesita un entorno local?","text":"<p>Imagine que est\u00e1 construyendo una sonda espacial. Antes de lanzarla al espacio, prueba todos los sistemas en la Tierra. Un entorno local es su \"laboratorio de control\" para el c\u00f3digo:</p> <ul> <li>Experimentos seguros sin afectar al servidor de producci\u00f3n</li> <li>Despliegue r\u00e1pido de dependencias</li> <li>F\u00e1cil cambio entre versiones de software</li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial: Herd = Complejo de lanzamiento m\u00f3vil Docker = Simulador de estaci\u00f3n espacial XAMPP = Banco de pruebas estacionario</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/#2-instalacion-de-herd","title":"2. Instalaci\u00f3n de Herd","text":"<p>Herd \u2014 una herramienta moderna para la gesti\u00f3n del entorno PHP (an\u00e1logo a Laravel Valet).</p> <p>Pasos de instalaci\u00f3n:</p> <ol> <li>Descargue el instalador: herd.laravel.com</li> <li>Ejecute <code>Herd Installer.exe</code> \u2192 Siguiente \u2192 Instalar</li> <li>Despu\u00e9s de la instalaci\u00f3n:<ul> <li>Abra Herd desde el men\u00fa Inicio. El icono de la aplicaci\u00f3n aparecer\u00e1 en la bandeja del sistema (junto al reloj).</li> <li>Haga clic en el icono de Herd: aseg\u00farese de que Nginx y la versi\u00f3n de PHP necesaria (por ejemplo, 8.3) est\u00e9n en ejecuci\u00f3n (marcados con un punto verde).</li> <li>Vaya a Herd Paths y a\u00f1ada la carpeta donde se almacenar\u00e1n sus proyectos (por ejemplo, C:\\Users\\SuUsuario\\Code). Herd crear\u00e1 autom\u00e1ticamente un dominio atractivo para cada subdirectorio en esta carpeta, del tipo nombre-de-carpeta.test.</li> </ul> </li> </ol> <p>\u26a0\ufe0f \u00a1Importante! Durante la instalaci\u00f3n: - Permita el acceso a la red (si el firewall lo solicita) - Verifique la ruta en PATH: <code>C:\\Program Files\\Herd\\bin</code></p> <p>Verificaci\u00f3n de funcionamiento:</p> <ol> <li>Haga clic en el icono de Herd en la bandeja del sistema.</li> <li>Aseg\u00farese de que los servicios Nginx y PHP est\u00e9n activos (indicadores verdes).</li> <li>Cree en su carpeta de proyectos (por ejemplo, C:\\Users\\SuUsuario\\Code) una carpeta llamada test, y dentro de ella un archivo index.php con el contenido <code>&lt;?php phpinfo(); ?&gt;</code>.</li> <li>En Herd, a trav\u00e9s de la pesta\u00f1a de sitios, especifique la ruta a la carpeta test y haga clic en \"Add site\".</li> <li>Abra en el navegador la direcci\u00f3n http://test.test. Deber\u00eda ver una p\u00e1gina con informaci\u00f3n sobre PHP.</li> </ol>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/#3-metodos-alternativos-brevemente","title":"3. M\u00e9todos alternativos (brevemente)","text":"Herramienta Para qui\u00e9n Pros Contras Laravel Sail (Docker) Para todos los niveles Aislamiento completo, repetibilidad del entorno, soporte oficial de Laravel Requiere instalaci\u00f3n de Docker, consume m\u00e1s recursos XAMPP Principiantes Todo en un instalador (All-in-One) Voluminoso, m\u00e1s dif\u00edcil de gestionar versiones de software, ensucia el sistema Laragon Desarrolladores de Windows R\u00e1pido, f\u00e1cil de cambiar versiones, configuraci\u00f3n autom\u00e1tica de hosts Requiere reinicio manual del servidor web al a\u00f1adir un nuevo proyecto <p>Ejemplo con Docker (Laravel Sail): <pre><code># Despu\u00e9s de instalar Docker\n./vendor/bin/sail up\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/#4-instalacion-de-php-y-composer","title":"4. Instalaci\u00f3n de PHP y Composer","text":"<p>Si no usa Herd:</p> <ol> <li>PHP:<ul> <li>Descargue PHP 8.3 para Windows</li> <li>Descomprima en <code>C:\\PHP</code></li> <li>A\u00f1ada a PATH:  <pre><code># Se recomienda ejecutar en PowerShell como administrador\n[Environment]::SetEnvironmentVariable(\"Path\", \"$env:Path;C:\\PHP\", \"User\")\n</code></pre></li> </ul> </li> <li>Composer:<ul> <li>Ejecute Composer-Setup.exe</li> <li>Verificaci\u00f3n:  <pre><code>php -v\ncomposer --version\n</code></pre></li> </ul> </li> </ol>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/#5-instalacion-de-postgresql","title":"5. Instalaci\u00f3n de PostgreSQL","text":"<p>Para trabajar con bases de datos:</p> <ol> <li>Descargue PostgreSQL 15</li> <li>Ejecute el instalador:</li> <li>Contrase\u00f1a para el superusuario: <code>admin</code> (o la suya)</li> <li>Puerto: <code>5432</code> (est\u00e1ndar)</li> <li>Despu\u00e9s de la instalaci\u00f3n:</li> <li>Abra pgAdmin 4 (cliente gr\u00e1fico) <p>Puede utilizar cualquier otro cliente para trabajar con la base de datos, por ejemplo, DBeaver, DataGrip o incluso la l\u00ednea de comandos. Yo prefiero DBeaver - pero es cuesti\u00f3n de gustos</p> </li> <li>Cree una base de datos para el proyecto: <code>space_api</code></li> </ol>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/#6-instalacion-de-laravel","title":"6. Instalaci\u00f3n de Laravel","text":"<ol> <li> <p>A trav\u00e9s de Composer: <pre><code>composer create-project laravel/laravel space-api\ncd space-api\n</code></pre></p> </li> <li> <p>Inicializaci\u00f3n de Git (opcional): <pre><code>git init\ngit add .\ngit commit -m \"Inicio del proyecto espacial\"\n</code></pre></p> </li> <li> <p>Inicio y verificaci\u00f3n del servidor:</p> <p>Si utiliza Herd: Aseg\u00farese de que su proyecto space-api se encuentre en la carpeta que a\u00f1adi\u00f3 a Herd. Abra en el navegador la direcci\u00f3n: http://space-api.test Deber\u00eda ver la p\u00e1gina de inicio de Laravel. \u00a1El servidor ya est\u00e1 funcionando gracias a Herd!</p> </li> </ol> <p>Si NO utiliza Herd (instalaci\u00f3n manual): <pre><code>php artisan serve\n</code></pre> Abra en el navegador: http://localhost:8000 \u2192 \u00a1Deber\u00eda aparecer la p\u00e1gina de inicio de Laravel!</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/#al-crear-un-proyecto-en-herd","title":"Al crear un proyecto en Herd:","text":"<p>Simplemente siga las instrucciones en pantalla. Para mayor comodidad, el nombre del proyecto ser\u00e1 <code>space-api</code>. El kit de inicio puede ser cualquiera, pero yo prefiero React.</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/#asegurese-de-incluir-phpunit-nos-sera-util-mas-adelante","title":"Aseg\u00farese de incluir phpunit - nos ser\u00e1 \u00fatil m\u00e1s adelante","text":""},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/#7-configuracion-del-proyecto","title":"7. Configuraci\u00f3n del proyecto","text":"<p>Archivos importantes:</p> <ul> <li><code>.env</code> \u2014 configuraci\u00f3n del entorno (claves, bases de datos)</li> <li><code>config/database.php</code> \u2014 configuraci\u00f3n de la SGBD</li> <li><code>composer.json</code> \u2014 dependencias de PHP</li> </ul> <p>Conexi\u00f3n de la BD al proyecto:</p> <p>A\u00f1ada a <code>.env</code>:</p> <pre><code>DB_CONNECTION=pgsql\nDB_HOST=127.0.0.1\nDB_PORT=5432\nDB_DATABASE=space_api\nDB_USERNAME=postgres # Usuario para postgres\nDB_PASSWORD=admin # Contrase\u00f1a para postgres\n</code></pre> <p>Primeros comandos Artisan: <pre><code>php artisan key:generate  # Generaci\u00f3n de la clave de la aplicaci\u00f3n\nphp artisan migrate:fresh # Migraci\u00f3n de la base de datos (al cambiar a postgres)\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. Herd es...</p>  a) Una herramienta para gestionar el entorno PHP  b) Un editor de c\u00f3digo  c) Un sistema operativo <p>2. \u00bfQu\u00e9 herramienta utiliza Laravel para gestionar las dependencias de PHP?</p>  a) npm  b) Composer  c) Artisan <p>3. Puerto est\u00e1ndar para PostgreSQL:</p>  a) 3306  b) 5432  c) 8000 <p>4. Comando para crear un proyecto Laravel a trav\u00e9s de Composer:</p>  a) composer create-laravel  b) laravel new  c) composer create-project laravel/laravel <p>5. \u00bfArchivo con la configuraci\u00f3n del entorno?</p>  a) .env  b) config.php  c) settings.ini Verificar"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/1/#conclusion-del-capitulo","title":"\ud83d\ude80 Conclusi\u00f3n del Cap\u00edtulo","text":"<p>\u00a1Ha desplegado la \"plataforma de lanzamiento\" para la API espacial! Ahora tiene:</p> <ul> <li>\ud83d\udee0\ufe0f Entorno local (Herd o instalaci\u00f3n manual) con PHP y Nginx</li> <li>\ud83d\udc18 Servidor de base de datos PostgreSQL instalado</li> <li>\ud83d\ude80 Proyecto Laravel <code>space-api</code></li> <li>\ud83d\udd0c Conexi\u00f3n a la base de datos configurada</li> </ul> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>Si usa Herd: Aseg\u00farese de que el sitio web se abra en la direcci\u00f3n <code>http://space-api.test</code>.</li> <li>Si no usa Herd: Aseg\u00farese de que el comando <code>php artisan serve</code> funcione y que el sitio web se abra en la direcci\u00f3n <code>http://localhost:8000</code>.</li> <li>En cualquier caso, compruebe que la base de datos <code>space_api</code> creada sea visible en <code>pgAdmin 4</code>.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/2/","title":"Cap\u00edtulo 2.2: Creaci\u00f3n del modelo Planet","text":"<p>Tiempo de estudio: 45 minutos</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/2/#1-el-modelo-en-laravel-planos-de-un-objeto-espacial","title":"1. El modelo en Laravel: Planos de un objeto espacial","text":"<p>En la arquitectura MVC (Modelo-Vista-Controlador), el modelo es:</p> <ul> <li>\ud83d\udce6 Contenedor de datos (par\u00e1metros de planetas)</li> <li>\ud83d\udd0c Interfaz de trabajo con la base de datos</li> <li>\ud83d\udee1\ufe0f Centro de la l\u00f3gica de negocio de la aplicaci\u00f3n</li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial: El modelo <code>Planet</code> = Planos de un planeta en el ordenador del Centro de Control de Misi\u00f3n. Con \u00e9l se puede:</p> <ul> <li>Crear un nuevo planeta en el cat\u00e1logo (<code>INSERT</code>)</li> <li>Obtener datos sobre Marte (<code>SELECT</code>)</li> <li>Actualizar informaci\u00f3n sobre la atm\u00f3sfera (<code>UPDATE</code>)</li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/2/#2-creacion-del-modelo-y-la-migracion","title":"2. Creaci\u00f3n del modelo y la migraci\u00f3n","text":"<p>Laravel utiliza Artisan CLI \u2014 su \"panel de control\" del proyecto.</p> <p>Paso 1: Generaci\u00f3n del modelo con migraci\u00f3n <pre><code>php artisan make:model Planet -m\n</code></pre></p> <p>Lo que se cre\u00f3: <pre><code>app/\n  \u2514\u2500\u2500 Models/\n      \u2514\u2500\u2500 Planet.php    \u2190 Modelo\ndatabase/\n  \u2514\u2500\u2500 migrations/\n      \u2514\u2500\u2500 2025_08_04_000000_create_planets_table.php  \u2190 Migraci\u00f3n\n</code></pre></p> <p>Banderas de Artisan:</p> <ul> <li><code>-m</code> \u2192 Crear migraci\u00f3n</li> <li><code>-c</code> \u2192 Crear controlador</li> <li><code>-r</code> \u2192 Controlador de recursos</li> </ul> <p>\ud83d\udca1 Consejo profesional: Estas banderas se pueden combinar para una m\u00e1xima eficiencia. El comando <code>php artisan make:model Planet -mcr</code> crear\u00e1 inmediatamente el modelo, la migraci\u00f3n y el controlador de recursos para gestionar este modelo. Esto ahorra mucho tiempo.</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/2/#3-configuracion-del-modelo-planet","title":"3. Configuraci\u00f3n del modelo Planet","text":"<p>Abra <code>app/Models/Planet.php</code>: <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Planet extends Model\n{\n    // Nombre de la tabla (por defecto: 'planets')\n    // Laravel asume autom\u00e1ticamente que el nombre de la tabla es la forma plural del nombre del modelo en snake_case (Planet -&gt; planets).\n     //Por lo tanto, esta propiedad no es obligatoria aqu\u00ed, pero es \u00fatil para mayor claridad.\n    protected $table = 'planets';\n\n    // Campos permitidos para asignaci\u00f3n masiva\n    protected $fillable = [\n        'name',\n        'description',\n        'size_km',\n        'solar_system',\n        'image_url'\n    ];\n\n    // Tipos de datos para conversi\u00f3n autom\u00e1tica\n    protected $casts = [\n        'size_km' =&gt; 'integer'\n    ];\n}\n</code></pre></p> <p>Explicaci\u00f3n de las propiedades:</p> Propiedad Valor Ejemplo de datos <code>$table</code> Nombre de la tabla en la BD <code>planets</code> <code>$fillable</code> Campos para asignaci\u00f3n masiva <code>name</code>, <code>size_km</code> <code>$casts</code> Conversi\u00f3n autom\u00e1tica de tipos <code>size_km: integer</code>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/2/#4-diseno-de-la-tabla-de-planetas","title":"4. Dise\u00f1o de la tabla de planetas","text":"<p>Antes de editar la migraci\u00f3n, definamos la estructura del \"planeta\":</p> Campo Tipo de datos Descripci\u00f3n Valor de ejemplo <code>id</code> BIGINT (PK) ID \u00fanico 1 <code>name</code> VARCHAR(255) Nombre del planeta \"Marte\" <code>description</code> TEXT Descripci\u00f3n \"Planeta rojo...\" <code>size_km</code> INTEGER Di\u00e1metro en km 6779 <code>solar_system</code> VARCHAR(100) Sistema Solar \"Sistema Solar\" <code>image_url</code> VARCHAR(2048) URL de la foto (puede ser nulo) \"https://...\" <code>created_at</code> TIMESTAMP Fecha de creaci\u00f3n 2025-08-04 12:00:00 <code>updated_at</code> TIMESTAMP Fecha de actualizaci\u00f3n 2025-08-05 09:30:00"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/2/#5-edicion-de-la-migracion","title":"5. Edici\u00f3n de la migraci\u00f3n","text":"<p>Abra el archivo de migraci\u00f3n en <code>database/migrations/..._create_planets_table.php</code>:</p> <pre><code>&lt;?php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreatePlanetsTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('planets', function (Blueprint $table) {\n            $table-&gt;id(); // BIGINT autoincremental\n\n            $table-&gt;string('name')-&gt;unique();\n            $table-&gt;text('description');\n            $table-&gt;integer('size_km');\n            $table-&gt;string('solar_system', 100);\n            $table-&gt;string('image_url', 2048)-&gt;nullable();\n\n            $table-&gt;timestamps(); // created_at + updated_at\n        });\n    }\n\n    public function down()\n    {\n        Schema::dropIfExists('planets');\n    }\n}\n</code></pre> <p>Puntos clave:</p> <ul> <li><code>-&gt;unique()</code> \u2192 Garantiza la unicidad de los nombres</li> <li><code>-&gt;nullable()</code> \u2192 El campo puede estar vac\u00edo</li> <li><code>timestamps()</code> \u2192 Gesti\u00f3n autom\u00e1tica de fechas</li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/2/#6-ejecucion-de-la-migracion-preliminar","title":"6. Ejecuci\u00f3n de la migraci\u00f3n (preliminar)","text":"<p>Aunque la ejecuci\u00f3n se realizar\u00e1 en el cap\u00edtulo 2.3, veamos c\u00f3mo se ver\u00e1: <pre><code>php artisan migrate\n</code></pre></p> <p>Salida esperada: <pre><code>Migrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (32.15ms)\n</code></pre></p> <p>Verificaci\u00f3n en pgAdmin 4:</p> <ol> <li>Abra la base de datos <code>space_api</code> \u2192 Schemas \u2192 Tables</li> <li>Deber\u00eda aparecer la tabla <code>planets</code> con sus campos</li> </ol>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/2/#7-enfoque-alternativo-generadores-de-codigo","title":"7. Enfoque alternativo: Generadores de c\u00f3digo","text":"<p>Para acelerar el desarrollo se pueden utilizar paquetes:</p> <ul> <li>Laravel Blueprint - crea modelos/migraciones a partir de una descripci\u00f3n YAML</li> <li>InfyOm Laravel Generator - generador basado en el esquema de la BD</li> </ul> <p>Ejemplo de Blueprint: <pre><code>models:\n  Planet:\n    name: string:255\n    description: text\n    size_km: integer\n    solar_system: string:100\n    image_url: string:2048? # El signo '?' indica que el campo puede ser nulo\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/2/#cuestionario-para-consolidacion","title":"Cuestionario para consolidaci\u00f3n","text":"<p>1. Comando Artisan para crear un modelo y su migraci\u00f3n asociada:</p>  a) php artisan make:model Planet -m  b) php artisan create:model Planet  c) php artisan model:new Planet --m <p>2. La propiedad `$fillable` en el modelo es necesaria para</p>  a) Proteger contra la asignaci\u00f3n masiva  b) Cifrado autom\u00e1tico de datos  c) Descripci\u00f3n de claves for\u00e1neas <p>3. `nullable()` en la migraci\u00f3n significa:</p>  a) El campo es obligatorio  b) El campo puede estar vac\u00edo  c) El campo ser\u00e1 eliminado <p>4. Tipo de campo para una descripci\u00f3n larga del planeta:</p>  a) string  b) text  c) varchar <p>5. El m\u00e9todo `timestamps()` crea:</p>  a) Solo created_at  b) created_at y updated_at  c) id, created_at, updated_at Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo: \u00a1Has creado un \"gemelo digital\" del planeta! Ahora tu proyecto tiene:</p> <ul> <li>\ud83e\ude90 Modelo <code>Planet</code> con l\u00f3gica de negocio</li> <li>\ud83d\udcca Migraci\u00f3n para la tabla <code>planets</code> en PostgreSQL</li> <li>\ud83d\udee0\ufe0f Propiedades del modelo configuradas (<code>fillable</code>, <code>casts</code>)</li> </ul> <p>\u00a1Prepara la base de datos! En el siguiente cap\u00edtulo ejecutaremos la migraci\u00f3n y poblaremos el universo con los primeros planetas.</p> <p>\ud83d\udccc Comprobaci\u00f3n:</p> <p>Aseg\u00farate de que los archivos <code>Planet.php</code> y <code>..._create_planets_table.php</code> hayan sido creados en los directorios correctos.</p> <p>\u26a0\ufe0f Si Artisan da errores:</p> <ul> <li>Verifica que est\u00e9s en la carpeta del proyecto</li> <li>Aseg\u00farate de que las dependencias est\u00e9n instaladas (<code>composer install</code>)</li> <li>Para Windows: a\u00f1ade PHP y Composer al PATH</li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/3/","title":"Cap\u00edtulo 2.3: Migraciones de la base de datos","text":"<p>Tiempo de estudio: 50 minutos</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/3/#1-migraciones-construccion-de-una-estacion-espacial","title":"1. Migraciones: Construcci\u00f3n de una estaci\u00f3n espacial","text":"<p>Las migraciones en Laravel son un sistema de control de versiones para tu base de datos.</p> <p>Imagina que est\u00e1s:</p> <ol> <li>\ud83c\udfd7\ufe0f Creando el plano de una estaci\u00f3n (migraci\u00f3n <code>create_planets_table</code>)</li> <li>\ud83d\ude80 Desplegando m\u00f3dulos (ejecuci\u00f3n de migraciones)</li> <li>\ud83d\udd27 Modernizando la estructura (nuevas migraciones)</li> <li>\u23ea Puedes revertir a una versi\u00f3n anterior (rollback)</li> </ol> <p>\ud83d\udca1 Importante: Las migraciones permiten que el equipo trabaje de forma coordinada, \u00a1como ingenieros en diferentes continentes construyendo la ISS!</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/3/#2-ejecucion-de-migraciones","title":"2. Ejecuci\u00f3n de migraciones","text":"<p>Despu\u00e9s de crear la migraci\u00f3n en el cap\u00edtulo 2.2, ejecuta: <pre><code>php artisan migrate\n</code></pre></p> <p>Salida en la terminal: <pre><code>Migration table created successfully.\nMigrating: 2014_10_12_000000_create_users_table\nMigrated:  2014_10_12_000000_create_users_table (25.12ms)\nMigrating: 2014_10_12_100000_create_password_reset_tokens_table\nMigrated:  2014_10_12_100000_create_password_reset_tokens_table (18.07ms)\nMigrating: 2019_08_19_000000_create_failed_jobs_table\nMigrated:  2019_08_19_000000_create_failed_jobs_table (21.33ms)\nMigrating: 2019_12_14_000001_create_personal_access_tokens_table\nMigrated:  2019_12_14_000001_create_personal_access_tokens_table (30.45ms)\nMigrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (15.67ms)  # \u00a1Tu tabla!\n</code></pre></p> <p>Verificaci\u00f3n en pgAdmin 4:</p> <ol> <li>Abre la base de datos <code>space_api</code> \u2192 Schemas \u2192 Tables</li> <li>Aseg\u00farate de que aparezcan:   - <code>planets</code>   - <code>users</code>   - <code>password_reset_tokens</code></li> </ol>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/3/#3-revertir-migraciones-retorno-de-emergencia","title":"3. Revertir migraciones: Retorno de emergencia","text":"<p>Si necesitas corregir la estructura: <pre><code>php artisan migrate:rollback  # Revertir el \u00faltimo lote de migraciones\n</code></pre> <pre><code>php artisan migrate:reset    # Reversi\u00f3n completa de todas las migraciones\n</code></pre></p> <ul> <li><code>php artisan migrate:fresh</code> \u2014 \u00a1el comando m\u00e1s \u00fatil en desarrollo! Elimina todas las tablas y vuelve a ejecutar todas las migraciones.</li> <li><code>php artisan migrate:fresh --seed</code> \u2014 hace lo mismo que <code>fresh</code>, pero despu\u00e9s de las migraciones, ejecuta inmediatamente los seeders. Este es un comando para la \"recreaci\u00f3n\" completa de la base de datos desde cero.</li> </ul> <p>Escenario de uso: <pre><code># Paso 1: Nos dimos cuenta de que hay un error en la migraci\u00f3n. Recreamos completamente la base de datos.\nphp artisan migrate:fresh\n# Paso 2: Editamos la migraci\u00f3n\n# Paso 3: Volvemos a crear la base de datos con la migraci\u00f3n ya corregida.\nphp artisan migrate:fresh\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/3/#4-adicion-de-nuevos-campos-modernizacion-de-la-estacion","title":"4. Adici\u00f3n de nuevos campos: Modernizaci\u00f3n de la estaci\u00f3n","text":"<p>Ejemplo: A\u00f1adiremos el campo <code>is_habitable</code> (\u00bfes habitable el planeta?).</p> <p>Paso 1: Creamos una nueva migraci\u00f3n <pre><code>php artisan make:migration add_is_habitable_to_planets_table\n</code></pre></p> <p>Paso 2: Editamos el archivo <code>database/migrations/..._add_is_habitable_to_planets_table.php</code> <pre><code>&lt;?php\npublic function up()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;boolean('is_habitable')\n              -&gt;default(false);\n    });\n}\n\npublic function down()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;dropColumn('is_habitable');\n    });\n}\n</code></pre></p> <p>Paso 3: Ejecutamos la actualizaci\u00f3n <pre><code>php artisan migrate\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/3/#5-rellenar-la-base-de-datos-los-primeros-planetas","title":"5. Rellenar la base de datos: Los primeros planetas","text":"<p>Creamos un seeder \u2014 un script para generar datos de prueba.</p> <p>Paso 1: Generaci\u00f3n del seeder <pre><code>php artisan make:seeder PlanetSeeder\n</code></pre></p> <p>Paso 2: Editamos <code>database/seeders/PlanetSeeder.php</code> <pre><code>&lt;?php\nuse App\\Models\\Planet; // \u00a1Importamos el modelo de planeta - Sin esto, obtendr\u00e1s un error!\n\n\nclass PlanetSeeder extends Seeder\n{\n    public function run()\n    {\n        Planet::create([\n            'name' =&gt; 'Tierra',\n            'description' =&gt; 'Planeta azul con vida diversa',\n            'size_km' =&gt; 12742,\n            'solar_system' =&gt; 'Sistema Solar',\n            'image_url' =&gt; 'https://example.com/earth.jpg',\n            'is_habitable' =&gt; true\n        ]);\n\n        Planet::create([\n            'name' =&gt; 'Marte',\n            'description' =&gt; 'Planeta rojo, objetivo de futuras colonizaciones',\n            'size_km' =&gt; 6779,\n            'solar_system' =&gt; 'Sistema Solar',\n            'is_habitable' =&gt; false\n        ]);\n    }\n}\n</code></pre></p> <p>Paso 3: Registramos el seeder en <code>database/seeders/DatabaseSeeder.php</code> <pre><code>&lt;?php\npublic function run()\n{\n    $this-&gt;call([\n        PlanetSeeder::class\n    ]);\n}\n</code></pre></p> <p>Paso 4: Ejecuci\u00f3n del relleno <pre><code>php artisan db:seed\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/3/#6-trabajar-con-postgresql-especificidades","title":"6. Trabajar con PostgreSQL: Especificidades","text":"<p>Caracter\u00edsticas del tipo de datos:</p> Caracter\u00edstica PostgreSQL MySQL Comentario de Laravel Tipo l\u00f3gico <code>boolean</code> (verdadero <code>true</code>/<code>false</code>) <code>tinyint(1)</code> (almacena <code>0</code>/<code>1</code>) <code>$table-&gt;boolean('...')</code> funciona para ambos JSON <code>jsonb</code> (binario, indexable) <code>json</code> (de texto) <code>$table-&gt;jsonb('...')</code> - muy potente en PG Arrays <code>text[]</code>, <code>integer[]</code> (arrays nativos) No (emulado a trav\u00e9s de JSON o cadenas) <code>$table-&gt;array('...')</code> (exclusivo para PG) Orden de columnas No se puede controlar (<code>after()</code> no funciona) Se puede controlar (<code>after()</code>) Laravel lo abstrae, pero es necesario conocer la limitaci\u00f3n <p>Ejemplo de creaci\u00f3n de \u00edndice: <pre><code>// En la migraci\u00f3n\n$table-&gt;index('solar_system');\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/3/#7-verificacion-de-datos-en-psql","title":"7. Verificaci\u00f3n de datos en psql","text":"<p>Puedes usar cualquier cliente gr\u00e1fico y seleccionar <code>space_api</code> para visualizar los datos.</p> <p>Al usar la consola: <pre><code>psql -U postgres -d space_api\n# La terminal puede solicitar la contrase\u00f1a que configuraste al instalar PostgreSQL.\n</code></pre> <pre><code>SELECT * FROM planets;\n</code></pre></p> <p>En cualquier caso, la salida deber\u00eda ser la siguiente:</p> id name description size_km solar_system image_url is_habitable 1 Tierra Planeta azul con vida diversa 12742 Sistema Solar ... true 2 Marte Planeta rojo, objetivo de colonizaciones 6779 Sistema Solar null false"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/3/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. Comando para ejecutar migraciones:</p>  a) php artisan migrate:run  b) php artisan migrate  c) php artisan db:migrate <p>2. \u00bfC\u00f3mo revertir la \u00faltima migraci\u00f3n?</p>  a) migrate:undo  b) migrate:rollback  c) migrate:reset <p>3. Los seeders se utilizan para:</p>  a) Eliminar tablas  b) Rellenar la BD con datos de prueba  c) Crear modelos <p>4. M\u00e9todo para a\u00f1adir una columna a una tabla existente:</p>  a) Schema::addColumn()  b) Schema::table()  c) Schema::modify() <p>5. \u00bfD\u00f3nde se registran los seeders?</p>  a) DatabaseSeeder.php  b) .env  c) config/database.php Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has dominado la \"construcci\u00f3n de infraestructura espacial\":</p> <ul> <li>\u2705 Creaste y lanzaste migraciones</li> <li>\ud83d\udd27 Modernizaste la estructura de la tabla</li> <li>\ud83c\udf0d Llenaste la BD con los primeros planetas</li> <li>\u2699\ufe0f Aprendiste a trabajar con PostgreSQL</li> </ul> <p>\u00a1Tu universo ha adquirido sus primeros mundos! Ahora puedes pasar a la creaci\u00f3n de interfaces API para la gesti\u00f3n de planetas.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ol> <li>Ejecuta <code>php artisan tinker</code></li> <li>Ejecuta <code>App\\Models\\Planet::all()</code></li> <li>Aseg\u00farate de ver la Tierra y Marte</li> </ol>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/4/","title":"Cap\u00edtulo 2.4: Controlador API PlanetController","text":"<p>Tiempo de estudio: 1 hora</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/4/#1-controlador-centro-de-control-de-objetos-espaciales","title":"1. Controlador: Centro de control de objetos espaciales","text":"<p>En la arquitectura MVC, el controlador es un intermediario entre los modelos y las solicitudes:</p> <ul> <li>\ud83d\udce1 Recibe solicitudes HTTP (GET, POST, PUT, DELETE)</li> <li>\ud83d\udd0d Extrae datos de la base de datos a trav\u00e9s de los modelos</li> <li>\ud83d\udce6 Genera respuestas JSON para la API</li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial: <code>PlanetController</code> = Centro de Control de Misi\u00f3n:</p> <ul> <li>Recibe solicitudes de la Tierra (<code>GET /planets</code>)</li> <li>Env\u00eda comandos a las \"sondas\" (modelos)</li> <li>Devuelve la telemetr\u00eda en formato JSON</li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/4/#2-creacion-de-un-controlador-de-recursos","title":"2. Creaci\u00f3n de un controlador de recursos","text":"<p>Un controlador de recursos incluye autom\u00e1ticamente m\u00e9todos para operaciones CRUD.</p> <p>Paso 1: Generaci\u00f3n del controlador <pre><code>php artisan make:controller PlanetController --api --model=Planet\n</code></pre></p> <p>Lo que se crear\u00e1 en <code>app/Http/Controllers/PlanetController.php</code>: <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Planet;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Validation\\Rule; // No olvides a\u00f1adir esta importaci\u00f3n\n\nclass PlanetController extends Controller\n{\n    // Mostrar lista de planetas\n    public function index(Request $request) {}\n\n    // Crear una nueva planeta\n    public function store(Request $request) {}\n\n    // Mostrar una planeta espec\u00edfica\n    public function show(Planet $planet) {}\n\n    // Actualizar planeta\n    public function update(Request $request, Planet $planet) {}\n\n    // Eliminar planeta\n    public function destroy(Planet $planet) {}\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/4/#3-implementacion-de-los-metodos-de-la-api","title":"3. Implementaci\u00f3n de los m\u00e9todos de la API","text":"<p>A. <code>index()</code> - Obtener lista de planetas <pre><code>&lt;?php\npublic function index(Request $request)\n{\n    // Obtenemos las planetas con paginaci\u00f3n, 15 por p\u00e1gina\n    $planets = Planet::paginate($request-&gt;get('per_page', 15));\n    return response()-&gt;json($planets); // Autom\u00e1ticamente 200 OK\n}\n</code></pre></p> <p>B. <code>store()</code> - Crear una nueva planeta <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    $planet = Planet::create($data);\n    return response()-&gt;json($planet, 201); // 201 Creado\n}\n</code></pre></p> <p>C. <code>show()</code> - Ver una planeta <pre><code>&lt;?php\npublic function show(Planet $planet)\n{\n    return response()-&gt;json($planet); // Autom\u00e1ticamente 200 OK\n}\n</code></pre></p> <p>D. <code>update()</code> - Actualizar planeta <pre><code>&lt;?php\npublic function update(Request $request, Planet $planet)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; [\n            'string',\n            'max:255',\n            Rule::unique('planets')-&gt;ignore($planet-&gt;id),\n        ],\n        'description' =&gt; 'sometimes|string', // 'sometimes' - validar solo si el campo est\u00e1 presente\n        'size_km' =&gt; 'sometimes|integer|min:100',\n        'solar_system' =&gt; 'sometimes|string|max:100',\n        'image_url' =&gt; 'sometimes|nullable|url',\n        'is_habitable' =&gt; 'sometimes|boolean'\n    ]);\n\n    $planet-&gt;update($data);\n    return response()-&gt;json($planet); // 200 OK\n}\n</code></pre></p> <p>E. <code>destroy()</code> - Eliminar planeta <pre><code>&lt;?php\npublic function destroy(Planet $planet)\n{\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204); // 204 Sin Contenido\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/4/#4-enlace-de-modelo-de-ruta-route-model-binding","title":"4. Enlace de Modelo de Ruta (Route Model Binding)","text":"<p>Laravel sustituye autom\u00e1ticamente el objeto del planeta por ID: <pre><code>// En la ruta: GET /planets/{planet}\n// En el m\u00e9todo: show(Planet $planet)\n</code></pre></p> <ul> <li>Si no se encuentra el planeta \u2192 autom\u00e1ticamente 404</li> <li>No hay necesidad de consultas manuales <code>findOrFail()</code></li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/4/#5-formato-de-las-respuestas","title":"5. Formato de las respuestas","text":"<p>Ejemplo de respuesta mejorada para <code>index()</code>: <pre><code>&lt;?php\npublic function index()\n{\n    return response()-&gt;json([\n        'success' =&gt; true,\n        'data' =&gt; Planet::all(),\n        'message' =&gt; 'Planetas obtenidos exitosamente'\n    ]);\n}\n</code></pre></p> <p>Respuesta en caso de error 404 (autom\u00e1ticamente): <pre><code>{\n    \"message\": \"No query results for model [App\\\\Models\\\\Planet] 123\",\n    \"exception\": \"Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\NotFoundHttpException\"\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/4/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. Bandera para crear un controlador API:</p>  a) --api  b) --resource  c) --model <p>2. \u00bfQu\u00e9 estado devolver al crear exitosamente?</p>  a) 200 OK  b) 201 Created  c) 204 No Content <p>3. El Enlace de Modelo de Ruta (Route Model Binding) permite:</p>  a) Obtener autom\u00e1ticamente el objeto por ID  b) Generar formularios HTML  c) Almacenar en cach\u00e9 las solicitudes <p>4. Al eliminar un planeta, devolvemos:</p>  a) JSON con los datos del planeta  b) null con el c\u00f3digo 204  c) Una cadena vac\u00eda <p>5. $request-&gt;validate() se usa para:</p>  a) Validar los datos de entrada  b) Cifrar las solicitudes  c) Almacenar en cach\u00e9 las respuestas Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>\u00a1Has creado el \"panel de control\" del sistema planetario! Ahora tu controlador puede:</p> <ul> <li>\ud83c\udf0c Mostrar una lista de planetas (<code>index</code>)</li> <li>\ud83e\ude90 Crear nuevos mundos (<code>store</code>)</li> <li>\ud83d\udd2d Detallar los datos de un planeta (<code>show</code>)</li> <li>\ud83d\udee0\ufe0f Actualizar la informaci\u00f3n (<code>update</code>)</li> <li>\ud83d\udca5 Destruir planetas (<code>destroy</code>)</li> </ul> <p>\u00a1Solo falta trazar las rutas! En el siguiente cap\u00edtulo conectaremos el controlador a las rutas de la API.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <p>Aseg\u00farate de que en <code>app/Http/Controllers</code> exista <code>PlanetController.php</code> con 5 m\u00e9todos.</p> <p>\u26a0\ufe0f Si hay errores:</p> <ul> <li>Verifica el nombre del modelo: <code>use App\\Models\\Planet;</code></li> <li>Verifica las importaciones</li> <li>Para PostgreSQL: aseg\u00farate de que <code>Planet::all()</code> devuelva datos</li> <li>Si hay problemas con Tinker: ejecuta <code>composer dump-autoload</code></li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/5/","title":"Cap\u00edtulo 2.5: Rutas API","text":"<p>Tiempo de estudio: 45 minutos</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/5/#1-que-es-una-ruta-explicacion-sencilla","title":"1. \u00bfQu\u00e9 es una ruta? Explicaci\u00f3n sencilla","text":"<p>Imagina que tu controlador (<code>PlanetController</code>) es un gran centro de oficinas, y cada uno de sus m\u00e9todos (<code>index</code>, <code>store</code>, <code>show</code>) es un departamento separado que realiza su trabajo.</p> <p>Una Ruta (Route) es una placa de direcci\u00f3n en la entrada del edificio. Dice:</p> <ul> <li>\"Si alguien lleg\u00f3 a la direcci\u00f3n <code>/planets</code> con el m\u00e9todo GET \u2014 env\u00edelo al departamento <code>index</code> (mostrar todo)\".</li> <li>\"Si alguien lleg\u00f3 a la direcci\u00f3n <code>/planets</code> con el m\u00e9todo POST con un paquete (datos) \u2014 env\u00edelo al departamento <code>store</code> (crear uno nuevo)\".</li> </ul> <p>Sin rutas, ninguna solicitud del mundo exterior encontrar\u00e1 el departamento que necesita en tu c\u00f3digo. El archivo principal para estas \"placas de direcci\u00f3n\" en la API es <code>routes/api.php</code>.</p> <p>En Laravel 11+, por defecto no hay una \"libreta de direcciones API\". La creamos nosotros mismos ejecutando el comando <code>php artisan install:api</code>. Ahora tenemos el archivo <code>routes/api.php</code>, que es el centro de control principal para todas las rutas de nuestra API.</p> <p>Diferencia clave entre <code>api.php</code> y <code>web.php</code>:</p> <ul> <li>Prefijo <code>/api</code>: Laravel a\u00f1ade autom\u00e1ticamente <code>/api</code> a todas las URLs de este archivo. La ruta <code>/planets</code> se convierte en <code>/api/planets</code>.</li> <li>\"Sin estado\" (Stateless): Aqu\u00ed no hay sesiones ni cookies, como en la web normal. Cada solicitud es independiente y debe contener toda la informaci\u00f3n para la autenticaci\u00f3n (normalmente, un token de API en los encabezados).</li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/5/#2-el-camino-del-novato-creacion-manual-de-una-ruta","title":"2. El camino del novato: Creaci\u00f3n manual de una ruta","text":"<p>Vamos a crear una \u00fanica ruta manualmente para entender el principio. Nuestro objetivo es hacer que la URL <code>/api/planets</code> muestre una lista de todos los planetas.</p> <p>Abre <code>routes/api.php</code> y escribe:</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController; // Indicamos d\u00f3nde est\u00e1 nuestro controlador\n\n//                    (1)           (2)                     (3)\nRoute::get(      '/planets',    [PlanetController::class, 'index']     );\n//   ^               ^                       ^\n// (M\u00e9todo HTTP)   (URL)             (Qu\u00e9 controlador y m\u00e9todo llamar)\n</code></pre> <p>Analicemos esta l\u00ednea por partes:</p> <ol> <li><code>Route::get(...)</code> \u2014 decimos: \"Esta ruta solo funciona para solicitudes GET\".</li> <li><code>'/planets'</code> \u2014 es la URL que Laravel escuchar\u00e1. Con el prefijo <code>/api</code>, la direcci\u00f3n completa ser\u00e1 <code>http://space-api.test/api/planets</code>.</li> <li><code>[PlanetController::class, 'index']</code> \u2014 es el \"punto de destino\". Decimos: \"Cuando llegue la solicitud, encuentra la clase <code>PlanetController</code> y llama a su m\u00e9todo <code>index()</code>\".</li> </ol> <p>\u00a1Ahora todo est\u00e1 conectado! Solicitud -&gt; Ruta -&gt; Controlador -&gt; M\u00e9todo.</p> <p>\u00bfY si necesitamos obtener un planeta por su ID? Por ejemplo, <code>/api/planets/5</code>.</p> <pre><code>// Ruta para obtener un planeta espec\u00edfico\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n</code></pre> <p>Aqu\u00ed <code>{planet}</code> es una \"plantilla\" o variable. Laravel entiende que en este lugar puede haber cualquier cosa (ID, slug). Luego, pasa este valor al m\u00e9todo <code>show(Planet $planet)</code>. Esta \"magia\", cuando Laravel encuentra el planeta por ID autom\u00e1ticamente, se llama Route Model Binding.</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/5/#3-el-camino-del-maestro-apiresource-una-linea-para-gobernarlos-a-todos","title":"3. El camino del maestro: <code>apiResource</code> \u2014 una l\u00ednea para gobernarlos a todos","text":"<p>Crear cada ruta manualmente (para <code>index</code>, <code>show</code>, <code>store</code>, <code>update</code>, <code>destroy</code>) es tedioso. Los desarrolladores de Laravel lo entienden, por eso crearon un asistente potente \u2014 <code>apiResource</code>.</p> <p>Elimina todo lo que escribimos y reempl\u00e1zalo con una sola l\u00ednea:</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController;\n\nRoute::apiResource('planets', PlanetController::class);\n</code></pre> <p>\u00bfQu\u00e9 hace esta sola l\u00ednea bajo el cap\u00f3? Crea autom\u00e1ticamente un conjunto completo de rutas para las operaciones CRUD est\u00e1ndar que ya implementamos en el controlador.</p> M\u00e9todo URL Se dirige al m\u00e9todo Prop\u00f3sito GET <code>/api/planets</code> <code>index()</code> Obtener una lista de todos los planetas POST <code>/api/planets</code> <code>store()</code> Crear un nuevo planeta GET <code>/api/planets/{planet}</code> <code>show()</code> Mostrar un planeta espec\u00edfico PUT/PATCH <code>/api/planets/{planet}</code> <code>update()</code> Actualizar un planeta existente DELETE <code>/api/planets/{planet}</code> <code>destroy()</code> Eliminar un planeta <p>Puedes Verificarlo t\u00fa mismo. Ejecuta el siguiente comando en la terminal:</p> <pre><code>php artisan route:list --path=api\n</code></pre> <p>Ver\u00e1s una tabla con todas las rutas creadas. <code>apiResource</code> es tu mejor amigo para ahorrar tiempo al crear APIs est\u00e1ndar.</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/5/#4-misiones-especiales-y-orden-de-las-rutas","title":"4. Misiones especiales y orden de las rutas","text":"<p>\u00bfQu\u00e9 pasa si necesitamos una ruta no est\u00e1ndar, que no est\u00e1 en <code>apiResource</code>? Por ejemplo, obtener un planeta aleatorio en la direcci\u00f3n <code>/api/planets/random</code>.</p> <p>Vamos a a\u00f1adirla. Pero aqu\u00ed hay una trampa mortal en la que caen 9 de cada 10 novatos.</p> <p>Orden incorrecto (\u00a1NO FUNCIONA!): <pre><code>Route::apiResource('planets', PlanetController::class);\nRoute::get('/planets/random', [PlanetController::class, 'random']); // &lt;-- NO FUNCIONAR\u00c1\n</code></pre> \u00bfPor qu\u00e9? Laravel lee las rutas de arriba a abajo. Ver\u00e1 <code>Route::apiResource</code>, que cre\u00f3 la ruta <code>GET /planets/{planet}</code>. Cuando solicites <code>/planets/random</code>, Laravel pensar\u00e1 que \"random\" es el ID de un planeta e intentar\u00e1 encontrar en la base de datos un planeta con el ID \"random\", y obtendr\u00e1s un error.</p> <p>Orden correcto (\u00a1FUNCIONA!): <pre><code>&lt;?php\nuse App\\Http\\Controllers\\PlanetController;\nuse Illuminate\\Support\\Facades\\Route;\n\n// 1. Primero declaramos las rutas ESPEC\u00cdFICAS\nRoute::get('/planets/random', [PlanetController::class, 'random']);\n\n// 2. Y solo despu\u00e9s declaramos las rutas GENERALES con variables\nRoute::apiResource('planets', PlanetController::class);\n</code></pre></p> <p>Regla: Declara siempre las rutas m\u00e1s espec\u00edficas (como <code>/random</code>) antes de las rutas m\u00e1s generales y con plantillas (como <code>/{planet}</code>).</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/5/#importante","title":"\u26a0\ufe0f \u00a1Importante!","text":"<p>Para probar la ruta <code>api/planets/random</code>, debes a\u00f1adir un nuevo manejador en <code>PlanetController</code>:</p> <pre><code>&lt;?php\npublic function random(Request $request)\n{\n   $planet = Planet::inRandomOrder()-&gt;first();\n   return response()-&gt;json($planet);\n}\n</code></pre>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/5/#5-agrupacion-poniendo-orden","title":"5. Agrupaci\u00f3n: Poniendo orden","text":"<p>Cuando hay muchas rutas, se pueden y se deben agrupar.</p> <p>A. Versionado de la API Para no romper las aplicaciones antiguas que usan tu API en el futuro, es costumbre a\u00f1adir una versi\u00f3n en la URL, por ejemplo <code>/api/v1/...</code>.</p> <pre><code>&lt;?php\nRoute::prefix('v1')-&gt;group(function () {\n    // Todas las rutas dentro de este grupo obtendr\u00e1n el prefijo /v1\n    // URL final: /api/v1/planets\n    Route::get('/planets/random', [PlanetController::class, 'random']);\n    Route::apiResource('planets', PlanetController::class);\n});\n</code></pre> <p>B. Protecci\u00f3n de rutas (Middleware) Imagina que cualquiera puede ver los planetas, pero solo los usuarios autorizados pueden crearlos, actualizarlos y eliminarlos.</p> <pre><code>&lt;?php\n// Rutas p\u00fablicas, accesibles para todos\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// Grupo de rutas que requieren un \"pase\" (autenticaci\u00f3n)\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n});\n</code></pre> <p>Aqu\u00ed <code>middleware('auth:sanctum')</code> es como un guardia de seguridad que comprueba el \"pase\" de cualquiera que intente acceder a las rutas dentro del grupo.</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/5/#6-pruebas-con-postman","title":"6. Pruebas con Postman","text":"<p>Ahora que todas las rutas est\u00e1n establecidas, es hora de probarlas.</p> <ol> <li>Si usas Herd: Tu sitio ya est\u00e1 funcionando en una direcci\u00f3n como <code>http://space-api.test</code>.</li> <li>Si no: Inicia el servidor local con el comando <code>php artisan serve</code>. La direcci\u00f3n ser\u00e1 <code>http://localhost:8000</code>.</li> </ol> <p>Abre Postman y env\u00eda las solicitudes:</p> <ul> <li><code>GET http://space-api.test/api/planets</code></li> <li><code>GET http://space-api.test/api/planets/random</code></li> <li><code>POST http://space-api.test/api/planets</code> (no olvides a\u00f1adir el cuerpo de la solicitud JSON en la pesta\u00f1a <code>Body</code> -&gt; <code>raw</code> -&gt; <code>JSON</code>).</li> </ul> <p>Ejemplo de solicitud POST: <pre><code>{\n    \"name\": \"Kepler-186f\",\n    \"description\": \"Primera planeta de tama\u00f1o terrestre en la zona habitable\",\n    \"size_km\": 15000,\n    \"solar_system\": \"Kepler-186\",\n    \"is_habitable\": true\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/5/#8-errores-comunes-de-enrutamiento","title":"8. Errores comunes de enrutamiento","text":"<ol> <li>404 Not Found <ul> <li>URL incorrecta (<code>/api/planet</code> en lugar de <code>/api/planets</code>)</li> <li>Olvidaste <code>php artisan serve</code></li> </ul> </li> <li>405 Method Not Allowed <ul> <li>M\u00e9todo HTTP incorrecto (por ejemplo, GET en lugar de POST)</li> </ul> </li> <li>Missing Controller <ul> <li>Error tipogr\u00e1fico en el nombre del controlador (<code>PlanetControler</code>)</li> </ul> </li> <li>Route Name Collision <ul> <li>Nombres de ruta duplicados</li> </ul> </li> </ol>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/5/#cuestionario-de-refuerzo","title":"Cuestionario de refuerzo","text":"<p>1. Archivo para rutas API en Laravel:</p>  a) routes/web.php  b) routes/api.php  c) routes/console.php <p>2. Prefijo autom\u00e1tico para rutas API:</p>  a) /admin  b) /api  c) /v1 <p>3. M\u00e9todo para crear 5 rutas CRUD:</p>  a) Route::api()  b) Route::resource()  c) Route::apiResource() <p>4. Route::prefix('v1') se usa para:</p>  a) Autenticaci\u00f3n  b) Versionamiento de API  c) Cach\u00e9 <p>5. Ver todas las rutas:</p>  a) php artisan route:list  b) php artisan list:routes  c) php routes Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>\u00a1Has construido las \"rutas hiperespaciales\" para la API espacial! Ahora:</p> <ul> <li>\ud83d\uddfa\ufe0f Todos los endpoints est\u00e1n disponibles en <code>/api/...</code></li> <li>\ud83d\udd17 Las rutas de recursos est\u00e1n conectadas al controlador</li> <li>\ud83d\udee1\ufe0f Se han a\u00f1adido rutas personalizadas para operaciones especiales</li> <li>\u2705 Las rutas se han probado con Postman</li> </ul> <p>\u00a1El universo est\u00e1 abierto a solicitudes! A continuaci\u00f3n, a\u00f1adiremos protecci\u00f3n contra la \"basura espacial\": la validaci\u00f3n de datos.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ol> <li>Ejecuta <code>php artisan route:list</code></li> <li>Aseg\u00farate de ver 5+ rutas para planets</li> <li>Verifica el funcionamiento de GET /api/planets en el navegador/Postman</li> </ol> <p>\u26a0\ufe0f Si error 404:</p> <ul> <li>Verifica la presencia de <code>Route::apiResource</code> en <code>routes/api.php</code></li> <li>Aseg\u00farate de que el servidor est\u00e9 en ejecuci\u00f3n (<code>php artisan serve</code>)</li> <li>Para Windows: permite el puerto 8000 en el firewall</li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/6/","title":"Cap\u00edtulo 2.6: Validaci\u00f3n de Datos","text":"<p>Tiempo de estudio: 50 minutos</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/6/#1-validacion-un-escudo-de-escala-cosmica","title":"1. Validaci\u00f3n: Un escudo de escala c\u00f3smica","text":"<p>La validaci\u00f3n es la verificaci\u00f3n de los datos entrantes para asegurar que cumplen con ciertas reglas. Sin ella:</p> <ul> <li>\ud83d\ude80 Datos incorrectos pueden \"destruir\" tu base de datos</li> <li>\ud83c\udf0c Los atacantes pueden inyectar c\u00f3digo malicioso</li> <li>\ud83e\ude90 Los usuarios recibir\u00e1n errores incomprensibles</li> </ul> <p>\ud83d\udca1 Analog\u00eda c\u00f3smica: Validaci\u00f3n = Sistema de defensa de una estaci\u00f3n espacial:</p> <ul> <li>Verifica la \"carga\" (datos) antes del acoplamiento</li> <li>Rechaza objetos peligrosos</li> <li>Filtra la basura espacial</li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/6/#2-donde-validar-en-la-api-de-laravel","title":"2. D\u00f3nde validar en la API de Laravel","text":"<p>Enfoques principales:</p> <ol> <li>En el controlador (r\u00e1pido, pero desordena el c\u00f3digo)</li> <li>Form Request (recomendado, arquitectura limpia)</li> </ol>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/6/#3-validacion-en-el-controlador","title":"3. Validaci\u00f3n en el controlador","text":"<p>Usamos el m\u00e9todo <code>validate()</code> del objeto Request: <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $validated = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    // ... creaci\u00f3n de planeta\n}\n</code></pre></p> <p>Reglas de validaci\u00f3n populares:</p> Regla Descripci\u00f3n Ejemplo <code>required</code> Campo obligatorio <code>'name' =&gt; 'required'</code> <code>string</code> Valor de cadena <code>'description' =&gt; 'string'</code> <code>integer</code> N\u00famero entero <code>'size_km' =&gt; 'integer'</code> <code>min:value</code> Valor/longitud m\u00ednima <code>'size_km' =&gt; 'min:100'</code> <code>max:value</code> Valor/longitud m\u00e1xima <code>'name' =&gt; 'max:255'</code> <code>unique:table,column</code> \u00danico en la tabla <code>'name' =&gt; 'unique:planets'</code> <code>url</code> URL correcta <code>'image_url' =&gt; 'url'</code> <code>boolean</code> true/false/1/0 <code>'is_habitable' =&gt; 'boolean'</code>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/6/#4-mensajes-de-error-personalizados","title":"4. Mensajes de error personalizados","text":"<p>Cambiamos los textos de error est\u00e1ndar: <pre><code>&lt;?php\n$validated = $request-&gt;validate(\n    [\n        'name' =&gt; 'required|unique:planets',\n        'size_km' =&gt; 'min:1000'\n    ],\n    [\n        'name.required' =&gt; '\u00a1El nombre del planeta es obligatorio!',\n        'name.unique' =&gt; 'Ya existe un planeta con ese nombre en el cat\u00e1logo',\n        'size_km.min' =&gt; 'El di\u00e1metro del planeta no puede ser inferior a 1000 km'\n    ]\n);\n</code></pre></p> <p>Ejemplo de respuesta en caso de error (autom\u00e1ticamente 422 Unprocessable Entity): <pre><code>{\n    \"message\": \"Los datos proporcionados no son v\u00e1lidos.\",\n    \"errors\": {\n        \"name\": [\"Ya existe un planeta con ese nombre en el cat\u00e1logo\"],\n        \"size_km\": [\"El di\u00e1metro del planeta no puede ser inferior a 1000 km\"]\n    }\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/6/#5-creacion-de-un-form-request","title":"5. Creaci\u00f3n de un Form Request","text":"<p>Para una validaci\u00f3n compleja, creamos una clase separada:</p> <p>Paso 1: Generaci\u00f3n <pre><code>php artisan make:request StorePlanetRequest\n</code></pre></p> <p>Paso 2: Editamos <code>app/Http/Requests/StorePlanetRequest.php</code> <pre><code>&lt;?php\npublic function authorize()\n{\n    return true; // Para API, normalmente true\n}\n\npublic function rules()\n{\n    return [\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ];\n}\n\npublic function messages()\n{\n    return [\n        'name.unique' =&gt; '\u00a1Ya existe un planeta con este nombre!',\n        'size_km.min' =&gt; 'El di\u00e1metro no puede ser inferior a 100 km'\n    ];\n}\n</code></pre></p> <p>Paso 3: Usamos en el controlador <pre><code>&lt;?php\nuse App\\Http\\Requests\\StorePlanetRequest;\n\npublic function store(StorePlanetRequest $request)\n{\n    // \u00a1Los datos ya han sido validados!\n    $validated = $request-&gt;validated();\n    $planet = Planet::create($validated);\n    return response()-&gt;json($planet, 201);\n}\n</code></pre></p> <p>Entendido. La tarea es adaptar el cap\u00edtulo para que est\u00e9 en plena conformidad con Laravel 10/11/12, eliminando toda menci\u00f3n de conceptos y flags obsoletos, en particular <code>--invokable</code>, y dejando solo el c\u00f3digo actual. Sin tocar nada m\u00e1s.</p> <p>Aceptado. Aqu\u00ed est\u00e1 la versi\u00f3n corregida de la secci\u00f3n 6, que refleja con precisi\u00f3n la realidad de las versiones modernas del framework.</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/6/#6-reglas-de-validacion-personalizadas","title":"6. Reglas de Validaci\u00f3n Personalizadas","text":"<p>Crearemos una regla para verificar la \"sensatez\" del nombre de un planeta. Las reglas est\u00e1ndar de Laravel no pueden verificar si un nombre est\u00e1 \"prohibido\", as\u00ed que escribiremos nuestra propia l\u00f3gica.</p> <p>Paso 1: Generaci\u00f3n de la regla</p> <p>Laravel proporciona un comando Artisan para crear un \"esqueleto\" de la clase de la regla. Lo ejecutaremos en la terminal:</p> <pre><code>php artisan make:rule ValidPlanetName\n</code></pre> <p>Paso 2: Editamos <code>app/Rules/ValidPlanetName.php</code></p> <p>Abre el archivo creado. Su estructura es simple y clara. Nuestra tarea es implementar la l\u00f3gica dentro del m\u00e9todo <code>validate</code>.</p> <pre><code>&lt;?php\n\nnamespace App\\Rules;\n\nuse Closure;\nuse Illuminate\\Contracts\\Validation\\ValidationRule;\n\nclass ValidPlanetName implements ValidationRule\n{\n    /**\n     * Ejecuta la regla de validaci\u00f3n.\n     *\n     * @param  \\Closure(string): \\Illuminate\\Translation\\PotentiallyTranslatedString  $fail\n     */\n    public function validate(string $attribute, mixed $value, Closure $fail): void\n    {\n        // Nuestra \"lista negra\" de nombres\n        $forbidden = ['\u0417\u0435\u043c\u043b\u044f 2.0', '\u041d\u0438\u0431\u0438\u0440\u0443', '\u041f\u043b\u0430\u043d\u0435\u0442\u0430 X'];\n\n        // Verificamos si el valor introducido est\u00e1 en nuestra lista,\n        // ignorando may\u00fasculas/min\u00fasculas.\n        if (in_array(strtolower($value), array_map('strtolower', $forbidden))) {\n            // Si la validaci\u00f3n falla, llamamos a la funci\u00f3n $fail\n            // con el texto del error que ver\u00e1 el usuario.\n            $fail('\u00a1Este nombre de planeta est\u00e1 prohibido!');\n        }\n    }\n}\n</code></pre> <p>Paso 3: Usamos en el Form Request</p> <p>Ahora nuestra regla personalizada est\u00e1 lista para ser usada. Podemos incluirla en cualquier Form Request, simplemente creando una nueva instancia de nuestra clase.</p> <p>Abrimos <code>app/Http/Requests/StorePlanetRequest.php</code> y a\u00f1adimos <code>new ValidPlanetName</code> al array de reglas para el campo <code>name</code>.</p> <p><pre><code>&lt;?php\n// app/Http/Requests/StorePlanetRequest.php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Rules\\ValidPlanetName; // &lt;-- No olvides importar la clase\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass StorePlanetRequest extends FormRequest\n{\n    // ... (m\u00e9todo authorize)\n\n    public function rules(): array\n    {\n        return [\n            'name' =&gt; [\n                'sometimes',\n                'string',\n                'max:255',\n                'unique:planets',\n                new ValidPlanetName, // &lt;-- Aqu\u00ed est\u00e1 nuestra regla personalizada\n            ],\n            'description' =&gt; 'sometimes|string',\n            'size_km' =&gt; 'sometimes|integer|min:100|max:500000',\n            'solar_system' =&gt; 'sometimes|string|max:100',\n            'image_url' =&gt; 'nullable|url|max:2048',\n            'is_habitable' =&gt; 'sometimes|boolean'\n        ];\n    }\n\n    // ... (m\u00e9todo messages)\n}\n</code></pre> Listo. Ahora, al crear un planeta, Laravel aplicar\u00e1 secuencialmente todas las reglas al campo <code>name</code> y, al llegar a <code>new ValidPlanetName</code>, ejecutar\u00e1 nuestra l\u00f3gica personalizada.</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/6/#7-validacion-para-actualizacion-update","title":"7. Validaci\u00f3n para actualizaci\u00f3n (Update)","text":"<p>Particularidades al actualizar datos:</p> <p>Al actualizar un registro, las reglas de validaci\u00f3n suelen ser diferentes. La caracter\u00edstica principal es la verificaci\u00f3n de unicidad, que debe ignorar el registro que se est\u00e1 actualizando.</p> <p>Paso 1: Creamos un Form Request separado para la actualizaci\u00f3n <pre><code>php artisan make:request UpdatePlanetRequest\n</code></pre> Paso 2: Editamos <code>app/Http/Requests/UpdatePlanetRequest.php</code> <pre><code>&lt;?php\nuse Illuminate\\Validation\\Rule;\n\npublic function authorize(): bool\n{\n    return true;\n}\npublic function rules(): array\n{\n    $planet = $this-&gt;route('planet'); // Obtenemos el modelo de la ruta\n\n     return [\n         'name' =&gt; [\n             'sometimes', // Validar solo si el campo est\u00e1 presente en la solicitud\n             'required',\n             'string',\n             'max:255',\n             Rule::unique('planets')-&gt;ignore($planetId),\n         ],\n         'description'  =&gt; 'sometimes|required|string',\n         'size_km'      =&gt; 'sometimes|required|integer|min:100|max:500000',\n         // ... otros campos con 'sometimes'\n     ];\n }\n</code></pre> Paso 3: Usamos en el controlador <pre><code>&lt;?php\n use App\\Http\\Requests\\UpdatePlanetRequest;\n\n public function update(UpdatePlanetRequest $request, Planet $planet)\n {\n     $validated = $request-&gt;validated();\n     $planet-&gt;update($validated);\n     return response()-&gt;json($planet);\n }\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/6/#8-pruebas-de-validacion-en-postman","title":"8. Pruebas de validaci\u00f3n en Postman","text":"<p>Escenario 1: Error de unicidad del nombre <pre><code>POST /api/planets\n{\n    \"name\": \"\u041c\u0430\u0440\u0441\",\n    \"description\": \"Planeta rojo, objetivo de futuras colonizaciones\",\n    \"size_km\": 6779,\n    \"solar_system\": \"Solar System\",\n    \"is_habitable\": false\n}\n</code></pre> Respuesta esperada: <pre><code>{\n    \"message\": \"Los datos proporcionados no son v\u00e1lidos.\",\n    \"errors\": {\n        \"name\": [\"\u00a1Ya existe un planeta con este nombre!\"]\n    }\n}\n</code></pre></p> <p>Escenario 2: Di\u00e1metro incorrecto <pre><code>{\n    \"name\": \"Planeta Guisante\",\n    \"size_km\": 50 // &lt; min:100\n}\n</code></pre> Respuesta esperada: <pre><code>\"errors\": {\n    \"size_km\": [\"El di\u00e1metro no puede ser inferior a 100 km\"]\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/6/#cuestionario-para-consolidar","title":"Cuestionario para consolidar","text":"<p>1. Estado HTTP en errores de validaci\u00f3n:</p>  a) 400 Bad Request  b) 422 Unprocessable Entity  c) 500 Internal Server Error <p>2. Regla para verificar la unicidad:</p>  a) unique:table  b) distinct  c) only:table <p>3. \u00bfD\u00f3nde es mejor ubicar reglas de validaci\u00f3n complejas?</p>  a) En el controlador  b) En el modelo  c) En el Form Request <p>4. El m\u00e9todo `authorize()` en Form Request debe devolver:</p>  a) false  b) true  c) null <p>5. La regla sometimes significa:</p>  a) El campo es obligatorio  b) El campo se valida solo si est\u00e1 presente  c) El campo se ignora Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has establecido un potente sistema de protecci\u00f3n para tu API espacial:</p> <ul> <li>\ud83d\udee1\ufe0f Reglas de validaci\u00f3n b\u00e1sicas y personalizadas</li> <li>\ud83d\udcdd Mensajes de error legibles</li> <li>\ud83e\udde9 Form Request para escenarios complejos</li> <li>\u2699\ufe0f Reglas \u00fanicas para la actualizaci\u00f3n de datos</li> </ul> <p>\u00a1Tu universo ahora est\u00e1 protegido! A continuaci\u00f3n, aprenderemos a manejar \"accidentes espaciales\": los errores del servidor.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ol> <li>Crea un Form Request para la actualizaci\u00f3n de planetas</li> <li>A\u00f1ade una regla personalizada para la verificaci\u00f3n del nombre</li> <li>Prueba los errores a trav\u00e9s de Postman</li> </ol> <p>\u26a0\ufe0f Si la validaci\u00f3n no funciona:</p> <ul> <li>Verifica la conexi\u00f3n del Form Request en el controlador</li> <li>Aseg\u00farate de que <code>authorize()</code> devuelva true</li> <li>Para la unicidad al actualizar, usa <code>Rule::unique</code></li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/7/","title":"Cap\u00edtulo 2.7: Gesti\u00f3n de Errores","text":"<p>Tiempo de estudio: 40 minutos</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/7/#1-por-que-los-errores-estandar-son-malos","title":"1. \u00bfPor qu\u00e9 los errores est\u00e1ndar son malos?","text":"<p>Si ocurre un error en su aplicaci\u00f3n Laravel (por ejemplo, no se encuentra un registro en la base de datos) y no lo maneja de ninguna manera, el usuario ver\u00e1 una enorme p\u00e1gina HTML con informaci\u00f3n de depuraci\u00f3n o un mensaje poco informativo de \"Error del Servidor\".</p> <p>Para una API, esto es una cat\u00e1strofe. Su aplicaci\u00f3n frontend espera recibir JSON, no HTML. Nuestra tarea es interceptar cualquier error y convertirlo en una respuesta JSON estructurada.</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/7/#2-el-despachador-central-de-errores-bootstrapappphp","title":"2. El despachador central de errores: <code>bootstrap/app.php</code>","text":"<p>En las versiones antiguas de Laravel, hab\u00eda un archivo voluminoso <code>App\\Exceptions\\Handler.php</code>. En Laravel 11/12, todo es mucho m\u00e1s simple y elegante. El centro de gesti\u00f3n de errores ahora se encuentra directamente en el archivo de configuraci\u00f3n de su aplicaci\u00f3n: <code>bootstrap/app.php</code>.</p> <p>Abra <code>bootstrap/app.php</code>. Al final, ver\u00e1 el bloque <code>.withExceptions(...)</code>. Este es nuestro \"despachador central\".</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    -&gt;withRouting(\n        web: __DIR__.'/../routes/web.php',\n        api: __DIR__.'/../routes/api.php',\n        commands: __DIR__.'/../routes/console.php',\n        health: '/up',\n    )\n    -&gt;withMiddleware(function (Middleware $middleware) {\n        // ...\n    })\n    -&gt;withExceptions(function (Exceptions $exceptions) {\n        // &lt;-- AQU\u00cd ES DONDE TRABAJAREMOS\n    })-&gt;create();\n</code></pre>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/7/#3-manejando-el-error-mas-comun-no-encontrado-404","title":"3. Manejando el error m\u00e1s com\u00fan: \"No encontrado\" (404)","text":"<p>El error m\u00e1s com\u00fan en una API es cuando el usuario solicita un recurso que no existe (por ejemplo, <code>GET /api/planets/999</code>). Laravel en este caso genera una excepci\u00f3n <code>ModelNotFoundException</code> o <code>NotFoundHttpException</code>. Vamos a interceptarlas.</p> <p>Agregue el siguiente c\u00f3digo dentro de <code>.withExceptions(...)</code>:</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // Interceptamos la excepci\u00f3n cuando el modelo no se encuentra en la base de datos\n    $exceptions-&gt;render(function (ModelNotFoundException $e, Request $request) {\n        // Verificamos que la solicitud provenga espec\u00edficamente de nuestra API\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; 'El recurso solicitado no se encuentra en nuestra galaxia.'\n            ], 404);\n        }\n    });\n\n    // Interceptamos la excepci\u00f3n cuando la ruta misma no se encuentra\n    $exceptions-&gt;render(function (NotFoundHttpException $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; 'Esta ruta c\u00f3smica no existe.'\n            ], 404);\n        }\n    });\n\n})-&gt;create();\n</code></pre> \u00bfQu\u00e9 hicimos?</p> <ol> <li><code>$exceptions-&gt;render(...)</code> \u2014 Registramos un \"manejador\". Dice: \"Si ocurre una excepci\u00f3n de tipo <code>ModelNotFoundException</code>, ejecuta este c\u00f3digo\".</li> <li><code>if ($request-&gt;is('api/*'))</code> \u2014 Esta es una verificaci\u00f3n importante. Garantiza que nuestra bonita respuesta JSON solo se enviar\u00e1 para solicitudes de API, sin afectar las p\u00e1ginas web normales.</li> <li><code>return response()-&gt;json(...)</code> \u2014 Creamos y devolvemos una respuesta JSON estandarizada con el c\u00f3digo 404.</li> </ol> <p>Ahora, si solicita un planeta inexistente, en lugar de una p\u00e1gina HTML fea, recibir\u00e1 un JSON ordenado.</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/7/#4-excepciones-personalizadas-creando-nuestras-propias-senales-de-alarma","title":"4. Excepciones personalizadas: Creando nuestras propias \"se\u00f1ales de alarma\"","text":"<p>A veces, las excepciones est\u00e1ndar no son suficientes. Imaginemos que tenemos una regla de negocio: \"no se puede eliminar el planeta 'Tierra'\". Si alguien intenta hacerlo, debemos devolver un error significativo.</p> <p>Paso 1: Creamos nuestra propia clase de excepci\u00f3n Ejecutamos en la terminal: <pre><code>php artisan make:exception CannotDeleteEarthException\n</code></pre></p> <p>Paso 2: La usamos en el controlador Abrimos <code>PlanetController.php</code> y modificamos el m\u00e9todo <code>destroy</code>:</p> <p><pre><code>&lt;?php\n// app/Http/Controllers/PlanetController.php\nuse App\\Exceptions\\CannotDeleteEarthException; // &lt;-- Importamos nuestra excepci\u00f3n\nuse App\\Models\\Planet;\n\npublic function destroy(Planet $planet)\n{\n    // Nuestra nueva regla de negocio\n    if (strtolower($planet-&gt;name) === '\u0437\u0435\u043c\u043b\u044f') {\n        throw new CannotDeleteEarthException('La eliminaci\u00f3n del planeta Tierra est\u00e1 prohibida por el C\u00f3digo Gal\u00e1ctico.');\n    }\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre> Ahora, si alguien intenta ejecutar <code>DELETE /api/planets/1</code> (donde 1 es el ID de la Tierra), nuestro c\u00f3digo lanzar\u00e1 una excepci\u00f3n <code>CannotDeleteEarthException</code>.</p> <p>Paso 3: Ense\u00f1amos a Laravel a manejar bellamente nuestra \"alarma\" Volvamos a <code>bootstrap/app.php</code> y agreguemos un nuevo manejador para nuestra excepci\u00f3n.</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // Nuestro nuevo manejador\n    $exceptions-&gt;render(function (CannotDeleteEarthException $e, Request $request) {\n        return response()-&gt;json([\n            'message' =&gt; 'Operaci\u00f3n prohibida.',\n            'details' =&gt; $e-&gt;getMessage() // Obtenemos el mensaje que pasamos en throw\n        ], 403); // 403 Forbidden - \"Acceso denegado\"\n    });\n\n    // ... (otros manejadores para 404)\n\n})-&gt;create();\n</code></pre> \u00a1Listo! Creamos nuestra propia excepci\u00f3n con nombre, que hace que el c\u00f3digo del controlador sea m\u00e1s limpio, y ense\u00f1amos a Laravel a convertirla en una respuesta JSON hermosa y significativa con el estado HTTP correcto.</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/7/#5-gestion-de-todos-los-demas-fallos-500-internal-server-error","title":"5. Gesti\u00f3n de todos los dem\u00e1s fallos (500 Internal Server Error)","text":"<p>\u00bfQu\u00e9 hacer con todos los dem\u00e1s errores inesperados? Por ejemplo, si la base de datos se cae o hay un error de sintaxis en el c\u00f3digo. Para esto, podemos registrar un manejador \"universal\" para el tipo de error m\u00e1s general: <code>Throwable</code>.</p> <p>Importante: Este manejador debe ser el \u00faltimo para no interceptar excepciones m\u00e1s espec\u00edficas que definimos anteriormente.</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // ... (manejadores para CannotDeleteEarthException y 404)\n\n    // MANEJADOR UNIVERSAL (al final de todo)\n    $exceptions-&gt;render(function (Throwable $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            // En modo de depuraci\u00f3n, se puede mostrar el mensaje de error real\n            $message = config('app.debug')\n                ? 'Ha ocurrido un error: ' . $e-&gt;getMessage()\n                : 'Ha ocurrido un error inesperado a bordo. Los ingenieros ya han sido llamados.';\n\n            return response()-&gt;json(['message' =&gt; $message], 500);\n        }\n    });\n\n})-&gt;create();\n</code></pre> <p>Ahora, cualquier excepci\u00f3n \"desconocida\" ser\u00e1 interceptada cuidadosamente y convertida en JSON con el c\u00f3digo 500, sin romper su API ni mostrar informaci\u00f3n innecesaria al usuario.</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/7/#6-registro-de-errores-la-caja-negra-de-la-nave-espacial","title":"6. Registro de errores: La caja negra de la nave espacial","text":"<p>Configuraci\u00f3n de registro en <code>config/logging.php</code>: <pre><code>&lt;?php\n'channels' =&gt; [\n    'space_api' =&gt; [\n        'driver' =&gt; 'daily',\n        'path' =&gt; storage_path('logs/space_api.log'),\n        'level' =&gt; 'error',\n        'days' =&gt; 14,\n    ],\n],\n</code></pre></p> <p>A\u00f1adir un registro al log: <pre><code>&lt;?php\ntry {\n    // C\u00f3digo con riesgo de error\n} catch (Exception $e) {\n    Log::channel('space_api')-&gt;error('Error de acceso a los planetas', [\n        'exception' =&gt; $e,\n        'request' =&gt; request()-&gt;all(),\n        'user_id' =&gt; auth()-&gt;id()\n    ]);\n    throw $e;\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/7/#quiz-de-afianzamiento","title":"Quiz de afianzamiento","text":"<p>1. Estado HTTP para \"Planeta no encontrado\":</p>  a) 400  b) 404  c) 500 <p>2. Clase para el manejo global de errores:</p>  a) Handler.php  b) ErrorController.php  c) Middleware/Error.php <p>3. M\u00e9todo para crear una excepci\u00f3n personalizada:</p>  a) php artisan make:exception  b) php artisan exception:create  c) php artisan generate:exception <p>4. Canal para el registro separado de errores de API:</p>  a) Configuraci\u00f3n en config/logging.php  b) Par\u00e1metro en .env  c) Indicaci\u00f3n en el controlador <p>5. Principal ventaja de crear excepciones personalizadas:</p>  a) Aumento del rendimiento  b) Creaci\u00f3n de errores sem\u00e1nticamente comprensibles para escenarios de negocio espec\u00edficos  c) Adici\u00f3n autom\u00e1tica a .env Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has equipado tu API con un robusto sistema de rescate:</p> <ul> <li>\ud83d\udedf Intercepci\u00f3n global de errores est\u00e1ndar</li> <li>\ud83e\ude90 Excepciones personalizadas con c\u00f3digos comprensibles</li> <li>\ud83d\udcdd Formato JSON unificado para todos los errores</li> <li>\ud83d\udd0d Registro con detalles del incidente</li> <li>\ud83d\udce1 Integraci\u00f3n con sistemas de monitoreo</li> </ul> <p>\u00a1La nave espacial est\u00e1 lista para emergencias! En el cap\u00edtulo final de la secci\u00f3n, probaremos todos los sistemas.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ol> <li>Crea la excepci\u00f3n <code>PlanetNotFoundException</code></li> <li>Agrega el manejo de errores 404 en <code>-&gt;withExceptions</code></li> <li>Prueba la solicitud a un planeta inexistente</li> </ol> <p>\u26a0\ufe0f Si los errores no se interceptan:</p> <ul> <li>Aseg\u00farate de que <code>is('api/*')</code> coincide con tus rutas</li> <li>Verifica el orden de los manejadores en <code>register()</code></li> <li>Para excepciones personalizadas, usa <code>throw new</code></li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/8/","title":"Cap\u00edtulo 2.8: Pruebas de API","text":"<p>Tiempo de estudio: 1 hora</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/8/#1-por-que-son-necesarias-las-pruebas","title":"1. \u00bfPor qu\u00e9 son necesarias las pruebas?","text":"<p>Imagine que construy\u00f3 una nave espacial. Antes de enviarla a Marte, realiza miles de verificaciones en la Tierra. Las pruebas en programaci\u00f3n son lo mismo. Ellas:</p> <ul> <li>Dan confianza: Puede cambiar el c\u00f3digo y, si las pruebas pasan, significa que no ha roto nada.</li> <li>Ahorran tiempo: En lugar de \"hacer clic\" manualmente en todo en Postman despu\u00e9s de cada cambio, ejecuta un solo comando y este verifica todo por usted en segundos.</li> <li>Sirven como documentaci\u00f3n: Las buenas pruebas muestran c\u00f3mo debe funcionar su API.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/8/#2-configuracion-del-laboratorio-de-pruebas","title":"2. Configuraci\u00f3n del \"Laboratorio\" de pruebas","text":"<p>Laravel hace que la configuraci\u00f3n de pruebas sea incre\u00edblemente sencilla. Por defecto, utiliza una configuraci\u00f3n separada para no afectar su base de datos principal.</p> <p>Base de datos para pruebas: Por defecto, Laravel utiliza una base de datos en memoria (<code>:memory:</code>). Este es el m\u00e9todo m\u00e1s r\u00e1pido, ya que no es necesario escribir nada en el disco. La base de datos se crea antes de las pruebas y se destruye despu\u00e9s de ellas. \u00a1Ni siquiera necesitamos configurar nada para esto!</p> <p>Creaci\u00f3n de archivo de prueba: Creemos un archivo especial para las pruebas relacionadas con los planetas.</p> <pre><code>php artisan make:test PlanetApiTest\n</code></pre> <p>Este comando crear\u00e1 el archivo <code>tests/Feature/PlanetApiTest.php</code>. La palabra <code>Feature</code> significa que probaremos la funcionalidad en general (por ejemplo, \"\u00bfpuede el usuario crear un planeta?\"), y no una peque\u00f1a clase individual.</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/8/#3-anatomia-de-un-test-preparacion-accion-verificacion","title":"3. Anatom\u00eda de un test: Preparaci\u00f3n, Acci\u00f3n, Verificaci\u00f3n","text":"<p>Abra <code>tests/Feature/PlanetApiTest.php</code>. Dentro escribiremos nuestra primera prueba. Una buena prueba siempre consta de tres partes (Arrange, Act, Assert).</p> <p><pre><code>&lt;?php\n\nnamespace Tests\\Feature;\n\nuse App\\Models\\Planet; // \u00a1No olvide importar el modelo!\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase; // \u00a1Herramienta esencial!\nuse Tests\\TestCase;\n\nclass PlanetApiTest extends TestCase\n{\n    // Este trait \"m\u00e1gicamente\" limpia y recrea\n    // nuestra base de datos de prueba antes de cada test.\n    // Esto garantiza que los tests no se afecten entre s\u00ed.\n    use RefreshDatabase;\n\n    /**\n     * Test: el endpoint para obtener la lista de planetas funciona correctamente.\n     * \u00a1Los nombres de los tests deben ser significativos!\n     */\n    public function test_can_get_all_planets(): void\n    {\n        // 1. PREPARACI\u00d3N (Arrange)\n        // Creamos 3 planetas falsos en nuestra base de datos de prueba\n        // usando la factor\u00eda que creamos anteriormente.\n        Planet::factory()-&gt;count(3)-&gt;create();\n\n        // 2. ACCI\u00d3N (Act)\n        // Simulamos una solicitud GET real a nuestra API.\n        $response = $this-&gt;getJson('/api/planets');\n\n        // 3. VERIFICACI\u00d3N (Assert)\n        // Verificamos que todo sali\u00f3 como se esperaba.\n        $response-&gt;assertStatus(200); // Esperamos que el servidor haya respondido \"200 OK\"\n        $response-&gt;assertJsonCount(3); // Esperamos que haya exactamente 3 planetas en la respuesta\n    }\n}\n</code></pre> Puntos clave:</p> <ul> <li><code>use RefreshDatabase</code>: Este trait es su mejor amigo. Garantiza que cada test comience con una \"pizarra limpia\", con una base de datos vac\u00eda.</li> <li><code>Planet::factory()</code>: Las factor\u00edas son ideales para crear datos de prueba.</li> <li><code>$this-&gt;getJson()</code>: Este es un m\u00e9todo especial de Laravel para enviar solicitudes API dentro de los tests.</li> <li><code>assert...()</code>: Estas son \"afirmaciones\" o \"verificaciones\". Si al menos una de ellas no se cumple, el test fallar\u00e1.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/8/#4-pruebas-de-operaciones-basicas-crud","title":"4. Pruebas de operaciones b\u00e1sicas (CRUD)","text":"<p>Escribamos tests para la creaci\u00f3n, actualizaci\u00f3n y eliminaci\u00f3n de planetas.</p> <p>A. Test de creaci\u00f3n de un planeta (POST)</p> <pre><code>&lt;?php\npublic function test_can_create_a_planet(): void\n{\n    // 1. Preparaci\u00f3n: preparamos los datos para el nuevo planeta\n    $planetData = [\n        'name' =&gt; 'Kepler-186f',\n        'description' =&gt; 'La primera exoplaneta del tama\u00f1o de la Tierra en la zona habitable.',\n        'size_km' =&gt; 14000,\n        'solar_system' =&gt; 'Kepler-186'\n    ];\n\n    // 2. Acci\u00f3n: enviamos una solicitud POST con los datos\n    $response = $this-&gt;postJson('/api/planets', $planetData);\n\n    // 3. Verificaci\u00f3n\n    $response-&gt;assertStatus(201); // Esperamos el estado \"201 Created\"\n    $response-&gt;assertJsonFragment(['name' =&gt; 'Kepler-186f']); // Verificamos que el nombre creado est\u00e9 en la respuesta\n\n    // La verificaci\u00f3n m\u00e1s importante: \u00bfrealmente los datos llegaron a la base de datos?\n    $this-&gt;assertDatabaseHas('planets', [\n        'name' =&gt; 'Kepler-186f'\n    ]);\n}\n</code></pre> <p>B. Test de eliminaci\u00f3n de un planeta (DELETE) <pre><code>&lt;?php\npublic function test_can_delete_a_planet(): void\n{\n    // 1. Preparaci\u00f3n: creamos el planeta que vamos a eliminar\n    $planet = Planet::factory()-&gt;create();\n\n    // 2. Acci\u00f3n: enviamos una solicitud DELETE\n    $response = $this-&gt;deleteJson(\"/api/planets/{$planet-&gt;id}\");\n\n    // 3. Verificaci\u00f3n\n    $response-&gt;assertStatus(204); // Esperamos \"204 No Content\" - eliminaci\u00f3n exitosa\n\n    // Verificamos que el registro realmente haya desaparecido de la base de datos\n    $this-&gt;assertDatabaseMissing('planets', [\n        'id' =&gt; $planet-&gt;id\n    ]);\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/8/#5-pruebas-de-escenarios-malos","title":"5. Pruebas de escenarios \"malos\"","text":"<p>Probar casos exitosos es bueno. \u00a1Pero es a\u00fan m\u00e1s importante probar los errores!</p> <p>A. Test de error de validaci\u00f3n <pre><code>&lt;?php\npublic function test_creation_fails_with_invalid_data(): void\n{\n    // 2. Acci\u00f3n: enviamos datos intencionadamente incorrectos\n    $response = $this-&gt;postJson('/api/planets', ['name' =&gt; '']); // Nombre vac\u00edo\n\n    // 3. Verificaci\u00f3n\n    $response-&gt;assertStatus(422); // Esperamos \"422 Unprocessable Entity\"\n    $response-&gt;assertJsonValidationErrors('name'); // Esperamos que el error est\u00e9 espec\u00edficamente en el campo 'name'\n}\n</code></pre></p> <p>B. Test de \"no encontrado\" (404) <pre><code>&lt;?php\npublic function test_returns_404_for_non_existent_planet(): void\n{\n    // 2. Acci\u00f3n: solicitamos un planeta con un ID inexistente\n    $response = $this-&gt;getJson('/api/planets/99999');\n\n    // 3. Verificaci\u00f3n\n    $response-&gt;assertStatus(404); // Esperamos \"404 Not Found\"\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/8/#6-ejecucion-de-tests","title":"6. Ejecuci\u00f3n de tests","text":"<p>Ahora que los tests est\u00e1n escritos, ejecutarlos es muy sencillo. Ejecute en la terminal:</p> <pre><code>php artisan test\n</code></pre> <p>Laravel encontrar\u00e1 todos sus tests y los ejecutar\u00e1 uno por uno. Si todo sale bien, ver\u00e1 una salida verde. Si alg\u00fan test falla, ver\u00e1 una salida roja con una descripci\u00f3n detallada del error, lo que le permitir\u00e1 corregirlo r\u00e1pidamente.</p> <p>Para ejecutar solo un archivo espec\u00edfico: <pre><code>php artisan test tests/Feature/PlanetApiTest.php\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/8/#8-cobertura-de-codigo-code-coverage","title":"8. Cobertura de c\u00f3digo (Code Coverage)","text":"<p>Paso 1: Instalaci\u00f3n de Xdebug</p> <p>Para recopilar informaci\u00f3n sobre la cobertura del c\u00f3digo se requiere la extensi\u00f3n de PHP \u2014 Xdebug.</p> <p>Env\u00ede su <code>php -i</code> al wizard y siga las instrucciones.</p> <p>Paso 2: Configuraci\u00f3n de <code>phpunit.xml</code> <pre><code>&lt;phpunit ... &gt;\n    &lt;coverage processUncoveredFiles=\"true\"&gt;\n        &lt;include&gt;\n            &lt;directory suffix=\".php\"&gt;./app&lt;/directory&gt;\n        &lt;/include&gt;\n    &lt;/coverage&gt;\n&lt;/phpunit&gt;\n</code></pre></p> <p>Paso 3: Ejecuci\u00f3n con informe <pre><code>php artisan test --coverage-html=coverage\n</code></pre> Informe: Abra <code>coverage/index.html</code> en el navegador</p>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/8/#9-integracion-con-postman","title":"9. Integraci\u00f3n con Postman","text":"<p>Automatizaci\u00f3n a trav\u00e9s de Newman:</p> <ol> <li>Exporte la colecci\u00f3n de Postman a <code>tests/Postman/SpaceApi.postman_collection.json</code></li> <li>Instale Newman: <pre><code>npm install -g newman\n</code></pre></li> <li>Agregue el script a <code>composer.json</code>: <pre><code>\"scripts\": {\n    \"test:postman\": \"newman run tests/Postman/SpaceApi.postman_collection.json\"\n}\n</code></pre></li> <li>Ejecuci\u00f3n: <pre><code>composer test:postman\n</code></pre></li> </ol>"},{"location":"es/Cap%C3%ADtulo%202%20-%20Creaci%C3%B3n%20de%20una%20API%20en%20Laravel/8/#cuestionario-para-afianzar","title":"Cuestionario para afianzar","text":"<p>1. Comando para crear una clase de prueba:</p>  a) php artisan make:test  b) php artisan generate:test  c) php artisan test:create <p>2. El trait RefreshDatabase se utiliza para:</p>  a) Limpiar la BD despu\u00e9s de las pruebas  b) Rellenar la BD con datos de prueba  c) Crear la estructura de la BD <p>3. M\u00e9todo para verificar la estructura JSON:</p>  a) assertJsonFormat()  b) assertJsonStructure()  c) assertJsonSchema() <p>4. Las f\u00e1bricas en Laravel son necesarias para:</p>  a) Generaci\u00f3n de datos de prueba  b) Creaci\u00f3n de migraciones  c) Manejo de errores <p>5. Herramienta para ejecutar colecciones de Postman desde la CLI:</p>  a) Newman  b) Postman CLI  c) Artisan Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>\u00a1Has completado el ciclo completo de pruebas previas al vuelo! Ahora tu API:</p> <ul> <li>\u2705 Configurar el entorno de prueba sin esfuerzo adicional</li> <li>\ud83d\udee1\ufe0f Escribir pruebas siguiendo el principio \"Preparaci\u00f3n-Acci\u00f3n-Verificaci\u00f3n\".</li> <li>\ud83d\udcca Probar tanto escenarios exitosos (CRUD) como errores (validaci\u00f3n, 404).</li> <li>\ud83d\udd01 Ejecutar pruebas con un solo comando y tener confianza en tu c\u00f3digo.</li> </ul> <p>\u00a1La nave espacial est\u00e1 lista para el lanzamiento! Has completado la secci\u00f3n sobre la creaci\u00f3n de API en Laravel.</p> <p>\ud83d\udccc Verificaci\u00f3n final:</p> <ol> <li>Ejecuta <code>php artisan test</code></li> <li>Aseg\u00farate de que todas las pruebas pasen (\u00a1luz verde!)</li> <li>Revisa el informe de cobertura</li> </ol> <p>\u26a0\ufe0f Si las pruebas fallan:</p> <ul> <li>Verifica el funcionamiento de la API a trav\u00e9s de Postman</li> <li>Aseg\u00farate de que la base de datos de prueba est\u00e9 configurada</li> <li>Usa <code>dd($response-&gt;content())</code> para depurar</li> </ul> <p>\u00a1Felicidades por completar el Cap\u00edtulo 2! No solo has creado una API, has creado una \"nave espacial\" fiable y probada, lista para futuras misiones.</p> <p>\ud83c\udf0c Pr\u00f3ximos pasos:</p> <ol> <li>Configuraci\u00f3n de autenticaci\u00f3n (Sanctum)</li> <li>Documentaci\u00f3n de la API con Swagger</li> <li>Despliegue en el servidor (Forge, VPS)</li> <li>Escritura del frontend en Vue/React</li> </ol> <p>\u00a1\u00c9xito en el lanzamiento de tu misi\u00f3n espacial! En el pr\u00f3ximo cap\u00edtulo, veremos la creaci\u00f3n de una API desde cero \ud83d\ude80</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/1/","title":"Cap\u00edtulo 3.1: Instalaci\u00f3n de FastAPI y configuraci\u00f3n del entorno","text":"<p>Tiempo de estudio: 45 minutos</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/1/#1-que-es-fastapi-el-hiperpropulsor-para-tu-api","title":"1. \u00bfQu\u00e9 es FastAPI? El hiperpropulsor para tu API","text":"<p>Si Flask es una sonda de reconocimiento \u00e1gil y Django es un enorme portaaviones, entonces FastAPI es un caza estelar superluminal.</p> <p>FastAPI es un framework web moderno y de alto rendimiento para construir APIs en Python 3.7+. Sus principales ventajas son:</p> <ul> <li>Velocidad: Uno de los frameworks de Python m\u00e1s r\u00e1pidos, comparable con NodeJS y Go.</li> <li>Sencillez: Sintaxis minimalista e intuitiva.</li> <li>Auto-documentaci\u00f3n: Genera autom\u00e1ticamente documentaci\u00f3n interactiva para tu API.</li> <li>Tipado: Utiliza las sugerencias de tipo est\u00e1ndar de Python para validaci\u00f3n, autocompletado y documentaci\u00f3n.</li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>FastAPI es como el \"hiperpropulsor\" para tu nave-API. Se basa en dos tecnolog\u00edas:</p> <ul> <li>Starlette (el chasis del caza) \u2014 proporciona asincron\u00eda y el m\u00e1s alto rendimiento.</li> <li>Pydantic (el ordenador de a bordo) \u2014 se encarga de la validaci\u00f3n de datos y la configuraci\u00f3n.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/1/#2-preparacion-de-la-plataforma-de-lanzamiento-entorno-virtual","title":"2. Preparaci\u00f3n de la plataforma de lanzamiento: Entorno virtual","text":"<p>Antes de construir nuestro caza, necesitamos crear un laboratorio de ensamblaje est\u00e9ril. En Python, para esto se utilizan los entornos virtuales.</p> <p>\u00bfPor qu\u00e9 es necesario? Para que las dependencias de nuestro proyecto (motores, sistemas de navegaci\u00f3n) no entren en conflicto con otros proyectos en tu ordenador.</p> <p>Paso 1: Creamos el entorno virtual Abre la terminal en la carpeta de tu proyecto (por ejemplo, <code>C:\\Projects\\FastAPI_Fleet</code>) y ejecuta:</p> <p><pre><code>python -m venv venv\n</code></pre> Este comando crear\u00e1 una carpeta <code>venv</code> con una versi\u00f3n aislada de Python.</p> <p>Paso 2: Activamos el \"campo de fuerza\" del laboratorio</p> <ul> <li>Windows (PowerShell):</li> </ul> <p><pre><code>.\\venv\\Scripts\\Activate.ps1\n</code></pre> (Si aparece un error, es posible que necesites permitir la ejecuci\u00f3n de scripts: <code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process</code>)</p> <ul> <li>Windows (CMD):</li> </ul> <pre><code>.\\venv\\Scripts\\activate.bat\n</code></pre> <ul> <li>macOS / Linux:</li> </ul> <p><pre><code>source venv/bin/activate\n</code></pre> Despu\u00e9s de la activaci\u00f3n, <code>(venv)</code> aparecer\u00e1 al principio de la l\u00ednea de la terminal. \u00a1Esto significa que est\u00e1s dentro de tu laboratorio!</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/1/#3-instalacion-del-motor-fastapi-y-uvicorn","title":"3. Instalaci\u00f3n del motor: FastAPI y Uvicorn","text":"<p>Ahora instalaremos dos componentes clave:</p> <ul> <li>fastapi: El framework en s\u00ed.</li> <li>uvicorn: Un servidor ASGI ultrarr\u00e1pido que \"ejecutar\u00e1\" nuestro motor.</li> </ul> <p>Ejecuta en el entorno activado: <pre><code>pip install \"fastapi[all]\"\n</code></pre></p> <p>\ud83d\udca1 \u00bfPor qu\u00e9 <code>[all]</code>? Esto instalar\u00e1 <code>fastapi</code>, <code>uvicorn</code> y otros paquetes \u00fatiles (por ejemplo, para soporte de websockets y Jinja2), que ser\u00e1n \u00fatiles en futuras misiones.</p> <p>Verificaci\u00f3n de la instalaci\u00f3n: <pre><code>pip freeze\n</code></pre> Deber\u00edas ver <code>fastapi</code>, <code>pydantic</code>, <code>starlette</code>, <code>uvicorn</code> y otros paquetes en la lista.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/1/#4-primer-contacto-archivo-mainpy","title":"4. Primer contacto: Archivo <code>main.py</code>","text":"<p>Crea el archivo <code>main.py</code> en la ra\u00edz del proyecto \u2014 este ser\u00e1 el panel de control central de nuestra API.</p> <p>A\u00f1ade el siguiente c\u00f3digo a <code>main.py</code>: <pre><code>from fastapi import FastAPI\n\n# Creamos una instancia de nuestra \"nave espacial\" API\napp = FastAPI()\n\n# Definimos el primer \"punto de acoplamiento\" (endpoint)\n# Esta es la URL ra\u00edz: /\n@app.get(\"/\")\ndef read_root():\n    \"\"\"\n    Este es el mensaje del Centro de Control de Misiones (CCM)\n    que ven todos los que se conectan a la puerta principal.\n    \"\"\"\n    return {\"message\": \"\u00a1Bienvenido al Centro de Control de la Flota Espacial!\"}\n</code></pre> - <code>@app.get(\"/\")</code>: Este es un decorador que le dice a FastAPI que la funci\u00f3n <code>read_root</code> debe manejar las solicitudes <code>GET</code> en la URL ra\u00edz (<code>/</code>).</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/1/#5-ignicion-inicio-del-servidor","title":"5. \u00a1Ignici\u00f3n! Inicio del servidor","text":"<p>\u00a1Ha llegado el momento de arrancar nuestro hiperpropulsor! En la terminal (con <code>venv</code> activo) ejecuta: <pre><code>uvicorn main:app --reload\n</code></pre> Desglose del comando:</p> <ul> <li><code>uvicorn</code>: Iniciamos el servidor Uvicorn.</li> <li><code>main</code>: El archivo <code>main.py</code> (sin <code>.py</code>).</li> <li><code>app</code>: El objeto <code>app = FastAPI()</code>, creado dentro de <code>main.py</code>.</li> <li><code>--reload</code>: \"Piloto autom\u00e1tico\". El servidor se reiniciar\u00e1 autom\u00e1ticamente con cada cambio en el c\u00f3digo.</li> </ul> <p>Salida esperada en la terminal: <pre><code>INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [12345]\nINFO:     Started server process [12346]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/1/#6-prueba-de-comunicacion-con-el-ccm","title":"6. Prueba de comunicaci\u00f3n con el CCM","text":"<p>\u00a1Tu API ya est\u00e1 en l\u00ednea y escuchando en el puerto <code>8000</code>!</p> <p>Paso 1: Verificaci\u00f3n en el navegador</p> <p>Abre en tu navegador la direcci\u00f3n <code>http://127.0.0.1:8000</code>. Deber\u00edas ver: <pre><code>{\n  \"message\": \"\u00a1Bienvenido al Centro de Control de la Flota Espacial!\"\n}\n</code></pre></p> <p>Paso 2: Un vistazo al futuro (auto-documentaci\u00f3n)</p> <p>FastAPI ya ha creado dos regalos para ti. Abre estas URL:</p> <ul> <li><code>http://127.0.0.1:8000/docs</code>: Documentaci\u00f3n interactiva Swagger UI.</li> <li><code>http://127.0.0.1:8000/redoc</code>: Documentaci\u00f3n alternativa ReDoc.</li> </ul> <p>\u00a1Ver\u00e1s tu primer endpoint, que puedes probar directamente desde el navegador!</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/1/#cuestionario-para-afianzar-conocimientos","title":"Cuestionario para afianzar conocimientos","text":"<p>1. FastAPI es conocido por su...</p>  a) Trabajo lento pero fiable  b) Alto rendimiento y velocidad  c) Integraci\u00f3n solo con bases de datos Microsoft <p>2. \u00bfPara qu\u00e9 se necesita un entorno virtual (`venv`)?</p>  a) Para acelerar el funcionamiento de Python  b) Para aislar las dependencias del proyecto  c) Para la escritura autom\u00e1tica de pruebas <p>3. \u00bfQu\u00e9 servidor se utiliza para ejecutar FastAPI en esta lecci\u00f3n?</p>  a) Apache  b) Gunicorn  c) Uvicorn <p>4. El comando `uvicorn main:app --reload` significa:</p>  a) Ejecutar el archivo `app.py` con el objeto `main`  b) Ejecutar el objeto `app` en el archivo `main.py` y reiniciar con los cambios  c) Reiniciar el ordenador y ejecutar la aplicaci\u00f3n <p>5. \u00bfQu\u00e9 hace el decorador `@app.get(\"/\")` en FastAPI?</p>  a) Obtiene datos del archivo `app.py`  b) Env\u00eda una solicitud GET a un servidor externo  c) Vincula la funci\u00f3n a una solicitud GET en la URL ra\u00edz Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>\u00a1Has ensamblado y lanzado con \u00e9xito el \"hiperpropulsor\" de tu nueva API! Ahora tienes: - \ud83d\udee0\ufe0f Entorno de desarrollo aislado (<code>venv</code>) - \ud83d\ude80 FastAPI y servidor Uvicorn instalados - \ud83d\udef0\ufe0f API funcionando con un solo endpoint - \ud83d\udcca Documentaci\u00f3n generada autom\u00e1ticamente</p> <p>\u00a1Todos los sistemas en orden! En el siguiente cap\u00edtulo, crearemos nuestro primer endpoint completo que devolver\u00e1 una lista de naves espaciales.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>El entorno <code>(venv)</code> est\u00e1 activo en el terminal</li> <li>El servidor <code>uvicorn</code> se ha iniciado sin errores</li> <li>La direcci\u00f3n <code>http://127.0.0.1:8000/docs</code> se abre en el navegador</li> </ul> <p>\u26a0\ufe0f Si hay errores:</p> <ul> <li><code>command not found</code>: Aseg\u00farate de haber activado el entorno virtual.</li> <li><code>Port ... is already in use</code>: Otro programa est\u00e1 usando el puerto 8000. Det\u00e9nlo o inicia uvicorn en otro puerto: <code>uvicorn main:app --reload --port 8001</code>.</li> <li>Errores al activar <code>venv</code> en PowerShell: Verifica la pol\u00edtica de ejecuci\u00f3n de scripts.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/2/","title":"Cap\u00edtulo 3.2: Creaci\u00f3n del primer endpoint de API","text":"<p>Tiempo de estudio: 30 minutos</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/2/#1-endpoint-puerto-de-acoplamiento-para-datos","title":"1. Endpoint: Puerto de acoplamiento para datos","text":"<p>Imagine que nuestra API es una estaci\u00f3n espacial. Un Endpoint (punto final) es un puerto de acoplamiento espec\u00edfico, dise\u00f1ado para un tipo particular de naves.</p> <ul> <li>Puerto <code>\u21161</code> \u2014 para naves de carga (datos sobre planetas).</li> <li>Puerto <code>\u21162</code> \u2014 para sondas de investigaci\u00f3n (datos sobre misiones).</li> <li>Puerto <code>\u21163</code> \u2014 para transbordadores de pasajeros (datos sobre astronautas).</li> </ul> <p>Cada endpoint es una URL \u00fanica que se encarga de una operaci\u00f3n espec\u00edfica con un recurso particular.</p> <p>\ud83d\udca1 Analog\u00eda espacial: <code>GET /spaceships</code> \u2014 es el comando \"Control de Misi\u00f3n \u2192 Estaci\u00f3n: Informe la lista de todas las naves acopladas\". Este endpoint devuelve una colecci\u00f3n de recursos.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/2/#2-creacion-de-una-flota-espacial","title":"2. Creaci\u00f3n de una \"flota espacial\"","text":"<p>Como todav\u00eda no tenemos una base de datos, crearemos una \"simulaci\u00f3n\": una lista simple de naves espaciales en forma de diccionario de Python.</p> <p>Abra <code>main.py</code> y a\u00f1ada este c\u00f3digo antes de la definici\u00f3n de <code>app</code>: <pre><code># main.py\n\n# Paso 1: Creamos una simulaci\u00f3n de base de datos\ndb_spaceships = {\n    1: {\n        \"name\": \"Voyager-1\",\n        \"type\": \"Sonda\",\n        \"launch_year\": 1977,\n        \"status\": \"Activo\"\n    },\n    2: {\n        \"name\": \"Hubble Space Telescope\",\n        \"type\": \"Telescopio\",\n        \"launch_year\": 1990,\n        \"status\": \"Activo\"\n    },\n    3: {\n        \"name\": \"ISS\",\n        \"type\": \"Estaci\u00f3n\",\n        \"launch_year\": 1998,\n        \"status\": \"En \u00f3rbita\"\n    }\n}\n\n# ... aqu\u00ed el c\u00f3digo app = FastAPI()\n</code></pre> Este es nuestro \"registro de naves espaciales\" con el que trabajaremos.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/2/#3-primer-endpoint-lista-de-naves","title":"3. Primer endpoint: Lista de naves","text":"<p>Ahora crearemos un endpoint que devolver\u00e1 toda nuestra flota.</p> <p>A\u00f1ada este c\u00f3digo en <code>main.py</code> despu\u00e9s de <code>@app.get(\"/\")</code>: <pre><code># main.py\n\n# ... c\u00f3digo con db_spaceships, FastAPI, app y read_root() ...\n\n@app.get(\"/spaceships\")\ndef get_spaceships():\n    \"\"\"\n    Devuelve una lista de todas las naves espaciales en el registro.\n    \"\"\"\n    return db_spaceships\n</code></pre></p> <ul> <li><code>@app.get(\"/spaceships\")</code>: Hemos creado una nueva ruta. Ahora las solicitudes <code>GET</code> a la URL <code>/spaceships</code> ser\u00e1n manejadas por la funci\u00f3n <code>get_spaceships</code>.</li> <li><code>return db_spaceships</code>: FastAPI convertir\u00e1 autom\u00e1ticamente el diccionario de Python en una respuesta JSON correcta.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/2/#4-verificacion-del-funcionamiento-del-nuevo-puerto-de-acoplamiento","title":"4. Verificaci\u00f3n del funcionamiento del nuevo puerto de acoplamiento","text":"<p>Si su servidor <code>uvicorn</code> todav\u00eda est\u00e1 en ejecuci\u00f3n con la bandera <code>--reload</code>, ya se habr\u00e1 recargado y estar\u00e1 listo para funcionar. Si no, ejec\u00fatelo de nuevo: <pre><code>uvicorn main:app --reload\n</code></pre></p> <p>Paso 1: Verificaci\u00f3n en el navegador</p> <p>Abra en el navegador la direcci\u00f3n <code>http://127.0.0.1:8000/spaceships</code>. Deber\u00eda ver la lista completa de sus naves en formato JSON: <pre><code>{\n  \"1\": {\n    \"name\": \"Voyager-1\",\n    \"type\": \"Sonda\",\n    \"launch_year\": 1977,\n    \"status\": \"Activo\"\n  },\n  \"2\": {\n    \"name\": \"Hubble Space Telescope\",\n    \"type\": \"Telescopio\",\n    \"launch_year\": 1990,\n    \"status\": \"Activo\"\n  },\n  \"3\": {\n    \"name\": \"ISS\",\n    \"type\": \"Estaci\u00f3n\",\n    \"launch_year\": 1998,\n    \"status\": \"En \u00f3rbita\"\n  }\n}\n</code></pre></p> <p>Paso 2: Verificaci\u00f3n en la autodocumentaci\u00f3n</p> <p>Vaya a <code>http://127.0.0.1:8000/docs</code>. Ver\u00e1 que en la documentaci\u00f3n ha aparecido una nueva secci\u00f3n para el endpoint <code>GET /spaceships</code>. \u00a1Puede hacer clic en \"Try it out\" y \"Execute\" para probarlo directamente desde all\u00ed!</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/2/#5-endpoint-con-parametro-datos-sobre-una-nave-especifica","title":"5. Endpoint con par\u00e1metro: Datos sobre una nave espec\u00edfica","text":"<p>\u00bfQu\u00e9 pasa si solo necesitamos datos sobre el \"Voyager-1\"? Para ello, crearemos un endpoint con un par\u00e1metro de ruta (path parameter).</p> <p>A\u00f1ada este c\u00f3digo en <code>main.py</code>: <pre><code># main.py\n\n# ... resto del c\u00f3digo ...\n\n@app.get(\"/spaceships/{ship_id}\")\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    Devuelve datos sobre una nave espacial espec\u00edfica por su ID.\n    \"\"\"\n    return db_spaceships.get(ship_id)\n</code></pre></p> <ul> <li><code>\"/spaceships/{ship_id}\"</code>: Los corchetes <code>{}</code> le dicen a FastAPI que <code>ship_id</code> es una variable que se pasar\u00e1 desde la URL.</li> <li><code>ship_id: int</code>: Esto es una pista de tipo (type hint). FastAPI verificar\u00e1 autom\u00e1ticamente que el ID pasado es un n\u00famero entero. Si alguien solicita <code>/spaceships/voyager</code>, FastAPI devolver\u00e1 un error de validaci\u00f3n <code>422 Unprocessable Entity</code>. \u00a1Esto es magia!</li> </ul> <p>Verificaci\u00f3n:</p> <p>Abra <code>http://127.0.0.1:8000/spaceships/2</code>. Deber\u00eda obtener datos solo sobre el telescopio \"Hubble\". Y si abre <code>http://127.0.0.1:8000/spaceships/99</code> \u2014 obtendr\u00e1 <code>null</code>, ya que esa nave no existe.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/2/#cuestionario-para-consolidar","title":"Cuestionario para consolidar","text":"<p>1. Un endpoint en una API es...</p>  a) Un punto final del Universo  b) Una URL \u00fanica para una operaci\u00f3n espec\u00edfica con un recurso  c) El nombre de la base de datos <p>2. \u00bfQu\u00e9 hace el decorador `@app.get(\"/users\")`?</p>  a) Crea un nuevo usuario  b) Vincula una funci\u00f3n a una solicitud GET a `/users`  c) Obtiene una lista de todos los decoradores <p>3. \u00bfQu\u00e9 significa la entrada `\"/items/{item_id}\"` en la ruta?</p>  a) Que se debe buscar una carpeta con el nombre `{item_id}`  b) Que `item_id` es un par\u00e1metro que se tomar\u00e1 de la URL  c) Es un comentario que ser\u00e1 ignorado <p>4. \u00bfPor qu\u00e9 se necesita la pista de tipo `ship_id: int` en la funci\u00f3n?</p>  a) Para que Python funcione m\u00e1s r\u00e1pido  b) Para que FastAPI valide autom\u00e1ticamente que el ID es un n\u00famero  c) Para que la variable sea visible fuera de la funci\u00f3n <p>5. Si solicita `/spaceships/abc` y FastAPI espera un `int`, \u00bfqu\u00e9 suceder\u00e1?</p>  a) El servidor \"caer\u00e1\" con un error 500  b) FastAPI devolver\u00e1 un error 422  c) FastAPI intentar\u00e1 convertir \"abc\" en un n\u00famero Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Ha creado con \u00e9xito dos \"puertos de acoplamiento\" en su estaci\u00f3n espacial API:</p> <ul> <li>\ud83d\udef0\ufe0f Uno para obtener la lista de todas las naves (<code>/spaceships</code>)</li> <li>\ud83d\udd2d Otro para obtener datos sobre una nave espec\u00edfica (<code>/spaceships/{ship_id}</code>)</li> </ul> <p>Tambi\u00e9n ha visto el poder de la validaci\u00f3n autom\u00e1tica de tipos de FastAPI, que protege su API de solicitudes incorrectas.</p> <p>\u00a1El sistema de navegaci\u00f3n est\u00e1 configurado! En el pr\u00f3ximo cap\u00edtulo, crearemos \"planos\" para nuestras naves espaciales usando Pydantic, para hacer nuestra API a\u00fan m\u00e1s inteligente y robusta.</p> <p>\ud83d\udccc Verificaci\u00f3n: - El servidor <code>uvicorn</code> est\u00e1 iniciado y funcionando. - La URL <code>http://127.0.0.1:8000/spaceships</code> devuelve un JSON con la lista de naves espaciales. - La URL <code>http://127.0.0.1:8000/spaceships/1</code> devuelve datos sobre el \"Voyager-1\". - La URL <code>http://127.0.0.1:8000/docs</code> muestra dos nuevos endpoints.</p> <p>\u26a0\ufe0f Si hay errores:</p> <ul> <li>404 Not Found: Compruebe que la URL est\u00e1 escrita correctamente en el navegador y en el decorador <code>@app.get(...)</code>.</li> <li>Error en el c\u00f3digo: Revise cuidadosamente la sintaxis, especialmente las indentaciones en Python y las comas en el diccionario.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/3/","title":"Cap\u00edtulo 3.3: Modelos de datos con Pydantic","text":"<p>Tiempo de estudio: 50 minutos</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/3/#1-pydantic-el-plano-digital-de-una-nave-espacial","title":"1. Pydantic: El \"plano digital\" de una nave espacial","text":"<p>Imagina que est\u00e1s construyendo una nave espacial. No puedes simplemente soldar piezas de metal al azar. Necesitas un plano detallado que defina:</p> <ul> <li>Nombre de la nave (tipo: <code>cadena</code>, longitud m\u00e1x.: 50 caracteres)</li> <li>A\u00f1o de lanzamiento (tipo: <code>entero</code>)</li> <li>Presencia de hiperpropulsor (tipo: <code>s\u00ed/no</code>)</li> </ul> <p>Pydantic es una librer\u00eda que permite crear estos \"planos digitales\" para tus datos en Python. En FastAPI, cumple tres funciones clave:</p> <ol> <li>Declaraci\u00f3n de estructura: Describe claramente de qu\u00e9 campos se componen tus datos.</li> <li>Validaci\u00f3n de datos: Verifica autom\u00e1ticamente si los datos entrantes cumplen con el plano.</li> <li>Documentaci\u00f3n: FastAPI utiliza estos planos para generar una documentaci\u00f3n detallada e interactiva.</li> </ol> <p>\ud83d\udca1 Analog\u00eda espacial: Un modelo Pydantic es el pasaporte t\u00e9cnico de un objeto. Cualquier \"carga\" (datos) que llegue a la estaci\u00f3n debe cumplir con las especificaciones del pasaporte. Si no, el ordenador de a bordo (Pydantic) la rechazar\u00e1.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/3/#2-creacion-del-primer-plano-modelo-spaceship","title":"2. Creaci\u00f3n del primer plano: Modelo <code>Spaceship</code>","text":"<p>Vamos a crear un modelo que describa nuestra nave espacial.</p> <p>Paso 1: Importamos <code>BaseModel</code> de Pydantic Pydantic ya est\u00e1 instalado junto con <code>fastapi[all]</code>. Solo necesitamos importar la clase base para nuestros modelos.</p> <p>A\u00f1ade esto a <code>main.py</code> en la parte superior, junto a otras importaciones: <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n</code></pre></p> <p>Paso 2: Describimos el modelo <code>Spaceship</code> Crea una clase que herede de <code>BaseModel</code>. Dentro de la clase, define los campos y sus tipos, usando las anotaciones de tipo est\u00e1ndar de Python.</p> <p>A\u00f1ade este c\u00f3digo a <code>main.py</code> (puedes hacerlo despu\u00e9s de las importaciones): <pre><code>class Spaceship(BaseModel):\n    \"\"\"\n    Pasaporte t\u00e9cnico (modelo) de una nave espacial.\n    \"\"\"\n    name: str\n    type: str\n    launch_year: int\n    status: str\n</code></pre> \u00a1Eso es todo! Acabas de crear un \"plano\". Pydantic ahora sabe que cualquier objeto de tipo <code>Spaceship</code> debe tener cuatro campos con los tipos especificados.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/3/#3-aplicacion-del-modelo-mejorando-nuestros-endpoints","title":"3. Aplicaci\u00f3n del modelo: Mejorando nuestros endpoints","text":"<p>Ahora, usemos nuestro nuevo modelo para hacer que la API sea \"m\u00e1s inteligente\".</p> <p>A. Modelo como respuesta (Response Model) Podemos indicar a FastAPI que nuestro endpoint debe devolver datos que se ajusten al modelo <code>Spaceship</code>. Esto garantiza que la respuesta siempre tendr\u00e1 la estructura correcta.</p> <p>Modifica el endpoint <code>/spaceships/{ship_id}</code> de la siguiente manera: <pre><code># main.py\n\n# ... c\u00f3digo con db_spaceships y el modelo Spaceship ...\n\n# Usamos `response_model` para especificar el \"plano\" de la respuesta\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    Devuelve datos sobre una nave, correspondientes al modelo Spaceship.\n    \"\"\"\n    ship = db_spaceships.get(ship_id)\n    return ship\n</code></pre> - <code>response_model=Spaceship</code>: Le decimos a FastAPI: \"La respuesta de esta funci\u00f3n debe ajustarse a la estructura <code>Spaceship</code>. Filtra cualquier campo extra y aseg\u00farate de que los tipos sean correctos\".</p> <p>\u00bfQu\u00e9 proporciona esto?</p> <ul> <li>Filtrado de datos: Si en <code>db_spaceships</code> hubiera campos extra (por ejemplo, <code>\"secret_code\"</code>), no se incluir\u00edan en el JSON final.</li> <li>Garant\u00eda de estructura: El cliente de la API puede estar seguro de que siempre recibir\u00e1 la respuesta en el formato esperado.</li> <li>Documentaci\u00f3n: En <code>/docs</code> ahora se mostrar\u00e1 un ejemplo de respuesta preciso (Example Value).</li> </ul> <p>B. Modelos para colecciones \u00bfY qu\u00e9 pasa con el endpoint <code>/spaceships</code>, que devuelve una lista de naves? Para ello, necesitamos usar <code>list</code> del m\u00f3dulo <code>typing</code>.</p> <p>Modifica las importaciones y el endpoint <code>/spaceships</code>: <pre><code># main.py en la parte superior\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom typing import List  # &lt;-- Importamos List\n\n# ... c\u00f3digo ...\n\n# Indicamos que la respuesta es una lista (List) de objetos de tipo Spaceship\n@app.get(\"/spaceships\", response_model=List[Spaceship])\ndef get_spaceships():\n    \"\"\"\n    Devuelve una lista de naves. Cada elemento de la lista se valida\n    seg\u00fan el modelo Spaceship.\n    \"\"\"\n    # Pydantic no puede trabajar con un diccionario cuyas claves son IDs.\n    # Convertimos nuestro diccionario en una lista simple.\n    return list(db_spaceships.values())\n</code></pre></p> <ul> <li><code>response_model=List[Spaceship]</code>: Indicamos que la respuesta ser\u00e1 una lista, donde cada elemento es un objeto que corresponde al modelo <code>Spaceship</code>.</li> <li><code>return list(db_spaceships.values())</code>: \u00a1Cambio importante! Pydantic espera un objeto iterable (una lista), no un diccionario donde las claves son IDs. Convertimos los valores de nuestro \"simulador de BD\" en una lista.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/3/#4-verificacion-de-la-api-mejorada","title":"4. Verificaci\u00f3n de la API mejorada","text":"<p>Aseg\u00farate de que el servidor <code>uvicorn</code> est\u00e9 ejecut\u00e1ndose con <code>--reload</code>.</p> <ol> <li>Verifica <code>http://127.0.0.1:8000/spaceships</code>: Ahora la respuesta es un array JSON, no un objeto. Esta es una estructura m\u00e1s correcta y est\u00e1ndar para colecciones.     <pre><code>[\n  { \"name\": \"Voyager-1\", \"type\": \"\u0417\u043e\u043d\u0434\", ... },\n  { \"name\": \"Hubble Space Telescope\", ... }\n]\n</code></pre></li> <li>Verifica <code>http://127.0.0.1:8000/spaceships/1</code>: La respuesta no ha cambiado, pero ahora est\u00e1 garantizado que cumple con el modelo.</li> <li>Echa un vistazo a <code>/docs</code>: En la secci\u00f3n \"Schemas\" al final de la p\u00e1gina, aparecer\u00e1 tu modelo <code>Spaceship</code>. Y en los ejemplos de respuesta para los endpoints, ahora se mostrar\u00e1 un esquema de datos hermoso y estructurado.</li> </ol>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/3/#5-validacion-avanzada-el-ordenador-de-a-bordo-en-accion","title":"5. Validaci\u00f3n avanzada: El \"ordenador de a bordo\" en acci\u00f3n","text":"<p>Pydantic puede hacer mucho m\u00e1s que simplemente verificar tipos.</p> <p>A\u00f1adamos validaci\u00f3n a nuestro modelo <code>Spaceship</code>: <pre><code>from pydantic import BaseModel, Field\n\nclass Spaceship(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50, description=\"Nombre de la nave\")\n    type: str\n    launch_year: int = Field(..., gt=1950, description=\"El a\u00f1o de lanzamiento debe ser posterior a 1950\")\n    status: str\n</code></pre></p> <ul> <li><code>Field(...)</code>: Se utiliza para a\u00f1adir reglas de validaci\u00f3n adicionales.</li> <li><code>...</code> (Ellipsis): Significa que el campo es obligatorio.</li> <li><code>min_length</code>, <code>max_length</code>: Restricciones para cadenas de texto.</li> <li><code>gt</code>: \"Greater Than\" (mayor que).</li> </ul> <p>Aunque a\u00fan no estamos creando nuevas naves (esto ser\u00e1 en el pr\u00f3ximo cap\u00edtulo), estas reglas ya se reflejar\u00e1n en la documentaci\u00f3n y se activar\u00e1n cuando implementemos las peticiones <code>POST</code>.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/3/#cuestionario-de-refuerzo","title":"Cuestionario de refuerzo","text":"<p>1. Pydantic en FastAPI se utiliza para...</p>  a) Enviar mensajes de correo electr\u00f3nico  b) Declaraci\u00f3n, validaci\u00f3n y documentaci\u00f3n de modelos de datos  c) Conexi\u00f3n directa a bases de datos <p>2. Para crear un modelo de datos, es necesario heredar la clase de...</p>  a) `FastAPI`  b) `pydantic.Field`  c) `pydantic.BaseModel` <p>3. El par\u00e1metro `response_model` en el decorador `@app.get` es necesario para...</p>  a) Establecer el modelo para la solicitud entrante  b) Indicar a qu\u00e9 estructura debe corresponder la respuesta de la API  c) Acelerar la respuesta del servidor <p>4. \u00bfC\u00f3mo indicar que un endpoint devuelve una *lista* de objetos de tipo `Item`?</p>  a) `response_model=Item[]`  b) `response_model=List[Item]` (importando `List` de `typing`)  c) `response_model=(Item)` <p>5. `Field(..., gt=0)` en un modelo Pydantic significa que el campo...</p>  a) Es opcional y debe ser igual a 0  b) Es obligatorio y debe ser mayor que 0  c) Es opcional y tiene tipo `float` Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has dise\u00f1ado los \"planos digitales\" para los datos de tu API. Ahora no solo funciona, sino que funciona de manera predecible y fiable.</p> <ul> <li>\ud83d\udcdd Modelo <code>Spaceship</code> creado usando Pydantic.</li> <li>\ud83d\udee1\ufe0f La API ahora valida y filtra los datos salientes usando <code>response_model</code>.</li> <li>\ud83d\udcca La documentaci\u00f3n es mucho m\u00e1s informativa, mostrando esquemas de datos precisos.</li> </ul> <p>\u00a1Los planos est\u00e1n listos y aprobados! En el siguiente cap\u00edtulo pasaremos de leer datos a crearlos \u2014 implementaremos operaciones CRUD completas para nuestra flota.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>Aseg\u00farate de que el esquema del modelo <code>Spaceship</code> haya aparecido en <code>/docs</code>.</li> <li>Verifica que el endpoint <code>/spaceships</code> ahora devuelva un array JSON (<code>[...]</code>) y no un objeto (<code>{...}</code>).</li> <li>Aseg\u00farate de que no haya errores de sintaxis en el c\u00f3digo despu\u00e9s de a\u00f1adir los modelos.</li> </ul> <p>\u26a0\ufe0f Si hay errores:</p> <ul> <li><code>NameError: name 'BaseModel' is not defined</code>: Aseg\u00farate de haber importado <code>BaseModel</code> de <code>pydantic</code>.</li> <li><code>NameError: name 'List' is not defined</code>: Aseg\u00farate de haber importado <code>List</code> de <code>typing</code>.</li> <li>La respuesta a <code>/spaceships</code> est\u00e1 vac\u00eda (<code>[]</code>): Aseg\u00farate de haber cambiado <code>return db_spaceships</code> a <code>return list(db_spaceships.values())</code>.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/4/","title":"Cap\u00edtulo 3.4: Operaciones CRUD para naves espaciales","text":"<p>Tiempo de estudio: 1 hora</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/4/#1-crud-ciclo-completo-de-gestion-de-misiones-espaciales","title":"1. CRUD: Ciclo completo de gesti\u00f3n de misiones espaciales","text":"<p>Hasta ahora, solo hemos le\u00eddo datos (<code>Read</code>). Pero un verdadero Centro de Control de Misiones debe ser capaz de todo:</p> <ul> <li>Create (Crear): Lanzar un nuevo sat\u00e9lite a \u00f3rbita.</li> <li>Read (Leer): Solicitar el estado de una nave existente.</li> <li>Update (Actualizar): Corregir la \u00f3rbita o actualizar el software.</li> <li>Delete (Eliminar): Retirar un sat\u00e9lite antiguo de \u00f3rbita.</li> </ul> <p>Estas cuatro operaciones \u2014 CRUD \u2014 constituyen la base de la mayor\u00eda de las API. En este cap\u00edtulo, implementaremos el ciclo completo para gestionar nuestra flota.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/4/#2-create-lanzamiento-de-una-nueva-nave-post","title":"2. Create: Lanzamiento de una nueva nave (POST)","text":"<p>Para crear una nueva nave espacial, utilizaremos el m\u00e9todo <code>POST</code>. Los datos para la nueva nave se enviar\u00e1n en el cuerpo de la solicitud en formato JSON.</p> <p>Paso 1: Creamos un nuevo modelo Pydantic para los datos entrantes \u00bfPor qu\u00e9 se necesita un nuevo modelo? Porque al crear una nave, no conocemos su <code>id</code> \u2014 este debe ser asignado por el servidor.</p> <p>A\u00f1ada este modelo a <code>main.py</code>: <pre><code># main.py\nfrom pydantic import BaseModel, Field\n\nclass SpaceshipCreate(BaseModel):\n    \"\"\"Modelo para crear una nueva nave (sin ID).\"\"\"\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n</code></pre> Este modelo es casi id\u00e9ntico a <code>Spaceship</code>, pero se utilizar\u00e1 para la validaci\u00f3n de datos entrantes.</p> <p>Paso 2: Implementamos el endpoint <code>POST /spaceships</code> <pre><code># main.py\nimport random # A\u00f1ada esta importaci\u00f3n al principio del archivo\n\n# ... resto del c\u00f3digo ...\n\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201)\ndef create_spaceship(ship: SpaceshipCreate):\n    \"\"\"\n    A\u00f1ade una nueva nave espacial al registro.\n    \"\"\"\n    # Generamos un nuevo ID \u00fanico para la nave\n    new_id = max(db_spaceships.keys() or [0]) + 1\n\n    # Creamos un objeto de nave que corresponde al modelo completo Spaceship\n    new_ship = Spaceship(id=new_id, **ship.dict())\n\n    # Guardamos en nuestra \"base de datos\"\n    db_spaceships[new_id] = new_ship.dict()\n\n    return new_ship\n</code></pre> Desglose:</p> <ul> <li><code>@app.post(...)</code>: Usamos el decorador para solicitudes <code>POST</code>.</li> <li><code>status_code=201</code>: Indicamos que, en caso de creaci\u00f3n exitosa, se debe devolver el estado <code>201 Created</code>.</li> <li><code>ship: SpaceshipCreate</code>: \u00a1Aqu\u00ed est\u00e1 la magia! FastAPI tomar\u00e1 autom\u00e1ticamente el cuerpo de la solicitud (JSON), lo validar\u00e1 seg\u00fan el modelo <code>SpaceshipCreate</code> y lo pasar\u00e1 a la funci\u00f3n como un objeto <code>ship</code>.</li> <li><code>new_id = ...</code>: L\u00f3gica simple para generar un nuevo ID.</li> <li><code>**ship.dict()</code>: \"Desempaquetamos\" los datos del modelo <code>ship</code> recibido en nuestro modelo completo.</li> <li><code>response_model=Spaceship</code>: La respuesta corresponder\u00e1 al modelo completo, incluyendo el <code>id</code>.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/4/#3-update-correccion-de-rumbo-put","title":"3. Update: Correcci\u00f3n de rumbo (PUT)","text":"<p>Para la actualizaci\u00f3n completa de un recurso existente, se utiliza el m\u00e9todo <code>PUT</code>.</p> <p>Implementamos el endpoint <code>PUT /spaceships/{ship_id}</code>: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # Actualice la importaci\u00f3n\n\n# ... resto del c\u00f3digo ...\n\n@app.put(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef update_spaceship(ship_id: int, ship_update: SpaceshipCreate):\n    \"\"\"\n    Actualiza completamente los datos de una nave espacial.\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"Nave espacial no encontrada\")\n\n    updated_ship = Spaceship(id=ship_id, **ship_update.dict())\n    db_spaceships[ship_id] = updated_ship.dict()\n\n    return updated_ship\n</code></pre></p> <ul> <li><code>ship_update: SpaceshipCreate</code>: Volvemos a usar nuestro modelo para la validaci\u00f3n de los datos entrantes.</li> <li><code>HTTPException</code>: Si no se encuentra una nave con ese <code>id</code>, \"lanzamos\" una excepci\u00f3n est\u00e1ndar de FastAPI que se convertir\u00e1 en una bonita respuesta JSON con el c\u00f3digo <code>404</code>.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/4/#4-delete-salida-de-orbita-delete","title":"4. Delete: Salida de \u00f3rbita (DELETE)","text":"<p>Para eliminar un recurso, se utiliza el m\u00e9todo <code>DELETE</code>. Normalmente, este tipo de endpoint no devuelve un cuerpo de respuesta.</p> <p>Implementamos el endpoint <code>DELETE /spaceships/{ship_id}</code>: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException, Response, status # Actualice la importaci\u00f3n\n\n# ... resto del c\u00f3digo ...\n\n@app.delete(\"/spaceships/{ship_id}\", status_code=status.HTTP_204_NO_CONTENT)\ndef delete_spaceship(ship_id: int):\n    \"\"\"\n    Elimina una nave espacial del registro.\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"Nave espacial no encontrada\")\n\n    del db_spaceships[ship_id]\n\n    # Devolvemos una respuesta vac\u00eda con el estado 204\n    return Response(status_code=status.HTTP_204_NO_CONTENT)\n</code></pre></p> <ul> <li><code>status_code=status.HTTP_204_NO_CONTENT</code>: Indicamos expl\u00edcitamente el estado <code>204 No Content</code>.</li> <li><code>del db_spaceships[ship_id]</code>: Eliminamos la entrada de nuestro diccionario.</li> <li><code>return Response(...)</code>: Devolvemos una respuesta vac\u00eda, ya que el cliente no necesita datos sobre el objeto eliminado.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/4/#5-pruebas-del-ciclo-completo-en-docs","title":"5. Pruebas del ciclo completo en <code>/docs</code>","text":"<p>Su <code>uvicorn</code> deber\u00eda haberse recargado.</p> <ol> <li>Abra <code>http://127.0.0.1:8000/docs</code>. \u00a1Ahora tiene un conjunto completo de operaciones CRUD!</li> <li>POST: Expanda el endpoint <code>POST /spaceships</code>, haga clic en \"Try it out\", rellene el cuerpo JSON (por ejemplo, cree \"James Webb Telescope\") y haga clic en \"Execute\". Deber\u00eda recibir una respuesta <code>201</code> con los datos del nuevo telescopio.</li> <li>GET: Ahora ejecute <code>GET /spaceships</code>. Su nuevo telescopio deber\u00eda aparecer en la lista.</li> <li>PUT: Use el ID del nuevo telescopio para actualizar sus datos a trav\u00e9s de <code>PUT /spaceships/{ship_id}</code>. Por ejemplo, cambie su estado.</li> <li>DELETE: Use el mismo ID para eliminar el telescopio a trav\u00e9s de <code>DELETE /spaceships/{ship_id}</code>. Deber\u00eda recibir una respuesta vac\u00eda con el estado <code>204</code>.</li> <li>Verificaci\u00f3n: Ejecute <code>GET /spaceships</code> de nuevo para asegurarse de que el telescopio ha sido eliminado de la lista.</li> </ol>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/4/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. \u00bfQu\u00e9 m\u00e9todo HTTP se utiliza para crear un nuevo recurso?</p>  a) GET  b) PUT  c) POST <p>2. C\u00f3digo de estado est\u00e1ndar de \u00e9xito para la operaci\u00f3n `DELETE`:</p>  a) 200 OK  b) 204 No Content  c) 404 Not Found <p>3. \u00bfC\u00f3mo obtiene FastAPI los datos del cuerpo de una solicitud POST?</p>  a) A trav\u00e9s de la variable global `$_POST`  b) Autom\u00e1ticamente, si se especifica un modelo Pydantic en el argumento de la funci\u00f3n  c) Se debe leer manualmente el flujo `request.body` <p>4. `raise HTTPException(status_code=404)` se utiliza para:</p>  a) Generar un error fatal del servidor (500)  b) Devolver una respuesta HTTP correcta con un error al cliente  c) Registrar el error en un archivo <p>5. \u00bfPor qu\u00e9 creamos un modelo `SpaceshipCreate` separado para la creaci\u00f3n de recursos (`POST`)?</p>  a) Porque el objeto que se crea a\u00fan no tiene `id`  b) Porque FastAPI requiere nombres de modelos diferentes para cada endpoint  c) Para acelerar la validaci\u00f3n Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>\u00a1Has implementado un ciclo CRUD completo y has transformado tu API de un simple \"tablero informativo\" en un completo Centro de Control de Flota!</p> <ul> <li>\u2705 Create: <code>POST /spaceships</code> para lanzar nuevas naves.</li> <li>\u2705 Read: <code>GET /spaceships</code> y <code>GET /spaceships/{id}</code> para obtener datos.</li> <li>\u2705 Update: <code>PUT /spaceships/{id}</code> para actualizar misiones.</li> <li>\u2705 Delete: <code>DELETE /spaceships/{id}</code> para dar de baja naves.</li> </ul> <p>\u00a1Tu flota bajo control total! En el siguiente cap\u00edtulo veremos c\u00f3mo FastAPI cre\u00f3 autom\u00e1ticamente para nosotros una detallada \"gu\u00eda de operaci\u00f3n\": la documentaci\u00f3n interactiva de Swagger.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>Todos los 5 endpoints (<code>GET</code> (2), <code>POST</code>, <code>PUT</code>, <code>DELETE</code>) son visibles y funcionan en <code>/docs</code>.</li> <li>Puedes crear, leer, actualizar y eliminar un recurso con \u00e9xito.</li> <li>Al solicitar un ID inexistente, se devuelve un error <code>404</code>.</li> </ul> <p>\u26a0\ufe0f Si hay errores:</p> <ul> <li><code>NameError</code>: Verifica que has importado <code>HTTPException</code>, <code>Response</code>, <code>status</code>.</li> <li><code>KeyError</code>: Probablemente est\u00e1s intentando acceder a un ID que ya ha sido eliminado.</li> <li>Funcionamiento incorrecto de <code>PUT</code> o <code>POST</code>: Aseg\u00farate de que est\u00e1s utilizando el modelo Pydantic correcto en el argumento de la funci\u00f3n (<code>SpaceshipCreate</code>). ```</li> </ul>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/5/","title":"Cap\u00edtulo 3.5: Documentaci\u00f3n autom\u00e1tica de Swagger","text":"<p>Tiempo de estudio: 30 minutos</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/5/#1-documentacion-de-la-api-manual-de-operaciones-de-una-estacion-espacial","title":"1. Documentaci\u00f3n de la API: Manual de operaciones de una estaci\u00f3n espacial","text":"<p>Imagina que eres un astronauta nuevo llegando a la ISS. \u00bfC\u00f3mo sabr\u00edas qu\u00e9 interruptor controla qu\u00e9 y c\u00f3mo manejar el brazo rob\u00f3tico? Necesitar\u00edas instrucciones detalladas y actualizadas.</p> <p>La documentaci\u00f3n de la API es un manual similar para los desarrolladores. Explica:</p> <ul> <li>Qu\u00e9 \"puertos de acoplamiento\" (endpoints) est\u00e1n disponibles.</li> <li>Qu\u00e9 \"comandos\" (m\u00e9todos HTTP) se pueden enviar.</li> <li>Qu\u00e9 \"carga\" (datos) se necesita transmitir.</li> <li>Qu\u00e9 \"telemetr\u00eda\" (respuestas) esperar.</li> </ul> <p>El problema es que escribir la documentaci\u00f3n manualmente es largo, aburrido y casi siempre se vuelve obsoleta.</p> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>La documentaci\u00f3n manual son planos de papel que est\u00e1n en un archivo y no se actualizan despu\u00e9s de la modernizaci\u00f3n de la estaci\u00f3n. La documentaci\u00f3n autom\u00e1tica de FastAPI es un display interactivo en el Centro de Control de Misi\u00f3n que se actualiza en tiempo real despu\u00e9s de cada cambio en la estaci\u00f3n.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/5/#2-la-magia-de-fastapi-como-funciona","title":"2. La Magia de FastAPI: \u00bfC\u00f3mo funciona?","text":"<p>FastAPI hace todo el \"trabajo sucio\" por ti, bas\u00e1ndose en tu propio c\u00f3digo. Escanea:</p> <ol> <li>Rutas: Todos los decoradores <code>@app.get</code>, <code>@app.post</code>, etc.</li> <li>Par\u00e1metros: Par\u00e1metros de ruta (<code>ship_id: int</code>) y de consulta.</li> <li>Modelos Pydantic: Tus \"planos\" (<code>Spaceship</code>, <code>SpaceshipCreate</code>).</li> <li>Cadenas de documentaci\u00f3n (docstrings): Descripciones que escribes entre comillas triples.</li> </ol> <p>Bas\u00e1ndose en estos datos, FastAPI genera un esquema seg\u00fan el est\u00e1ndar OpenAPI (anteriormente conocido como Swagger), y luego lo muestra a trav\u00e9s de dos hermosas interfaces.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/5/#3-explorando-el-display-del-centro-de-control-de-mision-swagger-ui","title":"3. Explorando el \"display del Centro de Control de Misi\u00f3n\": Swagger UI","text":"<p>Swagger UI es una interfaz interactiva que permite no solo leer la documentaci\u00f3n, sino tambi\u00e9n probar la API directamente desde el navegador.</p> <p>Abra <code>http://127.0.0.1:8000/docs</code></p> <p>Ver\u00e1:</p> <ul> <li>Lista de endpoints: Agrupados por etiquetas (por defecto, por nombre de recurso) y coloreados seg\u00fan los m\u00e9todos HTTP.</li> <li>Descripciones: Los textos de sus docstrings (<code>\"\"\"...\"\"\"</code>) se muestran como descripciones de los endpoints.</li> <li>Par\u00e1metros: Muestra qu\u00e9 par\u00e1metros (como <code>ship_id</code>) espera el endpoint, su tipo y si son obligatorios.</li> <li>Cuerpo de la solicitud (Request Body): Para <code>POST</code> y <code>PUT</code> muestra el esquema JSON generado a partir de su modelo Pydantic (<code>SpaceshipCreate</code>).</li> <li>Respuestas (Responses): Muestra los posibles c\u00f3digos de estado y esquemas de respuesta, basados en <code>response_model</code>.</li> <li>Bot\u00f3n \"Try it out\": Permite rellenar los par\u00e1metros y enviar una solicitud real a su servidor.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/5/#4-mejorando-la-documentacion-etiquetas-y-descripciones","title":"4. Mejorando la documentaci\u00f3n: Etiquetas y descripciones","text":"<p>Hagamos nuestra documentaci\u00f3n a\u00fan m\u00e1s profesional.</p> <p>Paso 1: A\u00f1adiendo metadatos en <code>FastAPI</code> Al crear <code>app</code>, puede pasar informaci\u00f3n general sobre su API.</p> <p>Cambie la l\u00ednea <code>app = FastAPI()</code> en <code>main.py</code>: <pre><code># main.py\n\napp = FastAPI(\n    title=\"API de Gesti\u00f3n de Flota\",\n    description=\"API para la gesti\u00f3n de flotas de naves espaciales.\",\n    version=\"1.0.0\",\n)\n</code></pre> Ahora aparecer\u00e1n el t\u00edtulo y la descripci\u00f3n en la parte superior de su documentaci\u00f3n.</p> <p>Paso 2: Agrupando endpoints con etiquetas Puede a\u00f1adir etiquetas a cada endpoint para agruparlos por significado.</p> <p>A\u00f1ada el par\u00e1metro <code>tags</code> en los decoradores: <pre><code># GET /spaceships\n@app.get(\"/spaceships\", response_model=List[Spaceship], tags=[\"Naves espaciales\"])\n# ...\n\n# GET /spaceships/{ship_id}\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"Naves espaciales\"])\n# ...\n\n# POST /spaceships\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201, tags=[\"Naves espaciales\"])\n# ...\n\n# y as\u00ed sucesivamente para PUT y DELETE\n</code></pre> Ahora todas sus operaciones CRUD estar\u00e1n agrupadas ordenadamente bajo el encabezado \"Naves espaciales\".</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/5/#5-vista-alternativa-redoc","title":"5. Vista alternativa: ReDoc","text":"<p>FastAPI proporciona otra interfaz para la documentaci\u00f3n \"de forma nativa\" \u2014 ReDoc. Es menos interactiva, pero a menudo se considera m\u00e1s legible y es ideal para documentaci\u00f3n est\u00e1tica.</p> <p>Abra <code>http://127.0.0.1:8000/redoc</code></p> <p>Ver\u00e1 un dise\u00f1o de tres columnas con navegaci\u00f3n, descripciones de endpoints y esquemas de datos. Es una excelente manera de proporcionar documentaci\u00f3n a sus \"clientes\" (por ejemplo, al equipo de frontend).</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/5/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. FastAPI genera la documentaci\u00f3n bas\u00e1ndose en...</p>  a) Archivos `.html` separados que deben crearse manualmente  b) Su c\u00f3digo Python: rutas, modelos Pydantic y docstrings  c) Comentarios que comienzan con `#` <p>2. \u00bfQu\u00e9 est\u00e1ndar subyace a la autodocumentaci\u00f3n de FastAPI?</p>  a) GraphQL  b) XML-RPC  c) OpenAPI (Swagger) <p>3. \u00bfEn qu\u00e9 URL est\u00e1 disponible por defecto la documentaci\u00f3n interactiva de Swagger UI?</p>  a) `/admin`  b) `/docs`  c) `/api/help` <p>4. El par\u00e1metro `tags` en el decorador `@app.get` se utiliza para:</p>  a) A\u00f1adir metaetiquetas a HTML  b) Agrupar endpoints en la documentaci\u00f3n  c) Marcar un endpoint como obsoleto <p>5. ReDoc es...</p>  a) Una herramienta para editar c\u00f3digo en el navegador  b) Una interfaz alternativa y m\u00e1s est\u00e1tica para la documentaci\u00f3n de la API  c) Un sistema para detectar c\u00f3digo \"rojo\" (no funcional) Verificar <p>\ud83d\ude80 Conclusi\u00f3n del cap\u00edtulo:</p> <p>Ha visto una de las \"superpoderes\" m\u00e1s potentes de FastAPI: la creaci\u00f3n de documentaci\u00f3n sin ning\u00fan esfuerzo.</p> <ul> <li>\ud83d\udcd6 Su API ahora tiene dos tipos de documentaci\u00f3n actualizada: Swagger UI y ReDoc.</li> <li>\ud83d\udd2c La documentaci\u00f3n es interactiva y permite probar la API al vuelo.</li> <li>\ud83c\udff7\ufe0f Aprendi\u00f3 a mejorarla con metadatos y etiquetas.</li> </ul> <p>\u00a1El manual de operaciones est\u00e1 listo y siempre actualizado! En el cap\u00edtulo final de esta secci\u00f3n, aprenderemos a manejar las \"anomal\u00edas espaciales\": errores y datos incorrectos.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>Aseg\u00farese de que en la direcci\u00f3n <code>http://127.0.0.1:8000/docs</code> se muestren el t\u00edtulo, la descripci\u00f3n y los endpoints agrupados por etiquetas.</li> <li>Verifique que su modelo <code>Spaceship</code> sea visible en la secci\u00f3n \"Schemas\".</li> <li>Abra <code>http://127.0.0.1:8000/redoc</code> y eval\u00fae la vista alternativa.</li> </ul> <p>\u26a0\ufe0f Si los cambios no aparecen: - Aseg\u00farese de haber guardado el archivo <code>main.py</code>. - Compruebe que el servidor <code>uvicorn</code> est\u00e1 ejecut\u00e1ndose con el flag <code>--reload</code> y se ha recargado exitosamente.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/6/","title":"Cap\u00edtulo 3.6: Manejo de errores y validaci\u00f3n","text":"<p>Tiempo de estudio: 50 minutos</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/6/#1-manejo-de-errores-los-escudos-de-emergencia-de-una-nave-espacial","title":"1. Manejo de errores: Los \"escudos de emergencia\" de una nave espacial","text":"<p>Incluso en la nave m\u00e1s perfecta, pueden ocurrir situaciones imprevistas:</p> <ul> <li>Comando incorrecto del Centro de Control: El cliente envi\u00f3 datos incorrectos.</li> <li>P\u00e9rdida de conexi\u00f3n con el m\u00f3dulo: Recurso no encontrado en la base de datos.</li> <li>Fallo en el reactor: Error interno del servidor.</li> </ul> <p>El manejo adecuado de errores es un sistema de \"escudos de emergencia\". Evita que la nave se desintegre y, en su lugar, env\u00eda una se\u00f1al clara al Centro de Control sobre lo que sali\u00f3 mal.</p> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>En lugar de simplemente transmitir una se\u00f1al de \"\u00a1ACCIDENTE!\" al Centro de Control, una buena computadora de a bordo enviar\u00e1 un informe estructurado: <pre><code>{\n  \"error_code\": \"ENGINE_OVERHEAT\",\n  \"message\": \"La temperatura del motor #2 super\u00f3 la norma\",\n  \"suggested_action\": \"Activar el sistema de enfriamiento\"\n}\n</code></pre> Esto permite a los ingenieros en la Tierra comprender r\u00e1pidamente el problema y tomar medidas.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/6/#2-validacion-pydantic-la-computadora-de-a-bordo-integrada","title":"2. Validaci\u00f3n Pydantic: La \"computadora de a bordo\" integrada","text":"<p>Ya nos hemos encontrado con la magia de Pydantic. Si intentas crear una nave con un tipo de datos incorrecto (por ejemplo, <code>launch_year</code> como cadena de texto), FastAPI devolver\u00e1 autom\u00e1ticamente un error <code>422 Unprocessable Entity</code> con una descripci\u00f3n detallada de qu\u00e9 campo y por qu\u00e9 no pas\u00f3 la validaci\u00f3n.</p> <p>Ejemplo de solicitud a <code>POST /spaceships</code>: <pre><code>{\n  \"name\": \"X-Wing\",\n  \"type\": \"Caza\",\n  \"launch_year\": \"hace mucho tiempo\",  // &lt;-- \u00a1Tipo incorrecto!\n  \"status\": \"En servicio\"\n}\n</code></pre></p> <p>Respuesta autom\u00e1tica de FastAPI: <pre><code>{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"body\",\n        \"launch_year\"\n      ],\n      \"msg\": \"el valor no es un entero v\u00e1lido\",\n      \"type\": \"type_error.integer\"\n    }\n  ]\n}\n</code></pre> \u00a1Esto es incre\u00edblemente potente! No necesitas escribir c\u00f3digo para verificar tipos: FastAPI y Pydantic lo hacen por ti.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/6/#3-manejo-de-recurso-no-encontrado-excepcion-httpexception","title":"3. Manejo de \"Recurso no encontrado\": Excepci\u00f3n <code>HTTPException</code>","text":"<p>Ya hemos utilizado esto en las operaciones CRUD. <code>HTTPException</code> es la forma est\u00e1ndar de FastAPI de interrumpir la ejecuci\u00f3n de una solicitud y devolver inmediatamente una respuesta de error al cliente.</p> <p>Recordemos el c\u00f3digo de <code>GET /spaceships/{ship_id}</code>: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # Aseg\u00farate de que HTTPException est\u00e9 importado\n\n# ...\n\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"Naves espaciales\"])\ndef get_spaceship(ship_id: int):\n    ship = db_spaceships.get(ship_id)\n    if not ship:\n        # Si la nave no se encuentra, \"lanzamos\" una excepci\u00f3n 404\n        raise HTTPException(status_code=404, detail=f\"Nave espacial con ID {ship_id} no encontrada\")\n    return ship\n</code></pre></p> <ul> <li><code>raise HTTPException(...)</code>: Esta llamada detiene la ejecuci\u00f3n de la funci\u00f3n.</li> <li><code>status_code=404</code>: Establece el estado HTTP de la respuesta.</li> <li><code>detail</code>: Mensaje que se enviar\u00e1 al cliente en el cuerpo de la respuesta JSON.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/6/#4-validadores-personalizados-verificaciones-especiales-antes-del-lanzamiento","title":"4. Validadores personalizados: \"Verificaciones especiales\" antes del lanzamiento","text":"<p>\u00bfQu\u00e9 pasa si queremos a\u00f1adir nuestra propia l\u00f3gica de negocio m\u00e1s compleja? Por ejemplo, prohibir el lanzamiento de naves con el nombre \"Estrella de la Muerte\".</p> <p>Para ello, Pydantic cuenta con una poderosa herramienta: los validadores.</p> <p>Paso 1: A\u00f1adir un validador al modelo <code>SpaceshipCreate</code> <pre><code># main.py\nfrom pydantic import BaseModel, Field, validator\n\nclass SpaceshipCreate(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n\n    @validator('name')\n    def name_must_not_be_forbidden(cls, v):\n        \"\"\"Verifica que el nombre de la nave no est\u00e9 en la lista de nombres prohibidos.\"\"\"\n        if 'Death Star' in v:\n            raise ValueError('\u00a1Nombres como \"Estrella de la Muerte\" est\u00e1n prohibidos por decreto imperial!')\n        return v.title() # De paso, ponemos la primera letra del nombre en may\u00fascula\n</code></pre></p> <ul> <li><code>@validator('name')</code>: Un decorador que \"vincula\" esta funci\u00f3n al campo <code>name</code>.</li> <li><code>cls, v</code>: El m\u00e9todo recibe la clase misma (<code>cls</code>) y el valor del campo (<code>v</code>).</li> <li><code>raise ValueError(...)</code>: Si la validaci\u00f3n falla, lanzamos una excepci\u00f3n est\u00e1ndar de Python. FastAPI la interceptar\u00e1 y la convertir\u00e1 en un bonito error <code>422</code>.</li> <li><code>return v.title()</code>: Si todo est\u00e1 bien, debemos devolver el valor obligatoriamente. Incluso podemos modificarlo sobre la marcha (por ejemplo, convertirlo a un formato est\u00e1ndar).</li> </ul> <p>Paso 2: Probar Reinicia <code>uvicorn</code> e intenta crear una nave con un nombre prohibido a trav\u00e9s de <code>/docs</code>. \u00a1Recibir\u00e1s un error <code>422</code> con tu mensaje personalizado!</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/6/#5-manejo-global-de-errores-el-protocolo-de-emergencia-de-la-estacion","title":"5. Manejo global de errores: El \"protocolo de emergencia\" de la estaci\u00f3n","text":"<p>A veces es necesario interceptar errores inesperados (por ejemplo, un fallo de conexi\u00f3n a una base de datos real) y devolver un formato de respuesta \u00fanico y estandarizado.</p> <p>Para ello se utiliza el decorador <code>@app.exception_handler</code>.</p> <p>Ejemplo: Interceptaci\u00f3n de todos los errores <code>ValueError</code> <pre><code># main.py\nfrom fastapi import FastAPI, Request\nfrom fastapi.responses import JSONResponse\n\n# ...\n\n@app.exception_handler(ValueError)\nasync def value_error_exception_handler(request: Request, exc: ValueError):\n    \"\"\"\n    Manejador global para todos los errores ValueError,\n    para devolver un JSON estandarizado.\n    \"\"\"\n    return JSONResponse(\n        status_code=400,\n        content={\"message\": f\"Error en los datos: {str(exc)}\"},\n    )\n</code></pre></p> <ul> <li><code>@app.exception_handler(ValueError)</code>: Le dice a FastAPI que esta funci\u00f3n debe manejar todos los <code>ValueError</code> que no hayan sido interceptados previamente.</li> <li><code>async def ...</code>: Los manejadores de excepciones deben ser as\u00edncronos (<code>async</code>).</li> <li><code>JSONResponse</code>: Permite un control total sobre el cuerpo y el estado de la respuesta.</li> </ul> <p>Ahora, cuando nuestro validador personalizado se active, la respuesta tendr\u00e1 un formato m\u00e1s amigable que el que hemos definido.</p>"},{"location":"es/Cap%C3%ADtulo%203%20-%20API%20en%20Python%20FastAPI/6/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. Si el cliente env\u00eda datos de un tipo incorrecto (una cadena en lugar de un n\u00famero), FastAPI devolver\u00e1 autom\u00e1ticamente el estado...</p>  a) 500 Internal Server Error  b) 404 Not Found  c) 422 Unprocessable Entity <p>2. `raise HTTPException(status_code=404)` se utiliza para...</p>  a) Terminar el funcionamiento de todo el servidor  b) Interrumpir la ejecuci\u00f3n de la solicitud y devolver un error 404 al cliente  c) Registrar el error, pero continuar la ejecuci\u00f3n <p>3. El decorador `@validator('field_name')` en Pydantic es necesario para:</p>  a) Crear l\u00f3gica de validaci\u00f3n personalizada para un campo espec\u00edfico  b) Indicar que un campo es obligatorio  c) Cifrar el valor de un campo <p>4. \u00bfQu\u00e9 debe hacer una funci\u00f3n validadora en Pydantic si los datos son correctos?</p>  a) No devolver nada (None)  b) Devolver obligatoriamente un valor (posiblemente modificado)  c) Devolver `True` <p>5. `@app.exception_handler()` permite...</p>  a) Crear nuevos tipos de excepciones  b) Interceptar excepciones globalmente y definir una respuesta personalizada para ellas  c) Ignorar todos los errores y siempre devolver un estado 200 Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Ha instalado en su nave API un potente sistema de seguridad y protocolos de emergencia. Ahora puede:</p> <ul> <li>\ud83d\udee1\ufe0f Repeler autom\u00e1ticamente los ataques de \"datos incorrectos\" utilizando Pydantic.</li> <li>\ud83d\udea8 Informar correctamente sobre la ausencia de recursos (<code>404 Not Found</code>) a trav\u00e9s de <code>HTTPException</code>.</li> <li>\u2699\ufe0f Realizar \"validaciones especiales\" utilizando validadores personalizados.</li> <li>\ud83e\uddef Interceptar globalmente fallos inesperados y proporcionar respuestas estandarizadas.</li> </ul> <p>\u00a1Su \"hiperimpulsor\" no solo es r\u00e1pido, sino tambi\u00e9n incre\u00edblemente fiable!</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>Intente crear una nave con el nombre \"Death Star\" y aseg\u00farese de recibir un error <code>400</code> con su mensaje personalizado.</li> <li>Intente solicitar <code>GET /spaceships/999</code> y aseg\u00farese de recibir un error <code>404</code>.</li> <li>Intente enviar una solicitud <code>POST</code> con <code>launch_year</code> como una cadena de texto y aseg\u00farese de recibir un error <code>422</code>.</li> </ul> <p>\u26a0\ufe0f Si hay errores:</p> <ul> <li>Aseg\u00farese de que todos los m\u00f3dulos necesarios (<code>HTTPException</code>, <code>validator</code>, <code>Request</code>, <code>JSONResponse</code>) est\u00e9n importados.</li> <li>Verifique que los decoradores <code>@validator</code> y <code>@app.exception_handler</code> est\u00e9n escritos sin errores tipogr\u00e1ficos.</li> </ul> <p>\u00a1Enhorabuena por completar el Cap\u00edtulo 3! Ha construido y lanzado desde cero una API potente, documentada y protegida con FastAPI. Est\u00e1 listo para emprender aut\u00e9nticas misiones espaciales.</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/1/","title":"Cap\u00edtulo 4.1: Fundamentos de la API Fetch","text":"<p>Tiempo de estudio: 45 minutos</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/1/#1-api-fetch-la-antena-principal-del-centro-de-control-de-misiones","title":"1. API Fetch: La \"Antena Principal\" del Centro de Control de Misiones","text":"<p>Imagina que en tu Centro de Control de Misiones tienes una enorme antena de radio para comunicarte con las naves espaciales. Puedes ajustarla a la frecuencia correcta, enviar un comando y esperar una respuesta.</p> <p>La API Fetch es una \"antena incorporada\" similar en los navegadores modernos. Es una interfaz est\u00e1ndar de JavaScript para realizar solicitudes HTTP a los servidores. Permite:</p> <ul> <li>\ud83d\udce1 Enviar \"comandos\" (GET, POST, PUT, DELETE) a nuestra API.</li> <li>\ud83d\udef0\ufe0f Recibir \"telemetr\u00eda\" (datos JSON) del servidor.</li> <li>\u2699\ufe0f Trabajar de forma as\u00edncrona, sin \"congelar\" la interfaz de usuario mientras se espera una respuesta.</li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p><code>fetch()</code> es el comando \"\u00a1Antena, establecer comunicaci\u00f3n!\". Le pasas:</p> <ul> <li>Coordenadas del objetivo (URL de nuestra API).</li> <li>Tipo de comando (m\u00e9todo: GET, POST).</li> <li>Contenido del comando (cuerpo de la solicitud, cabeceras).</li> </ul> <p>En respuesta, no recibes los datos directamente, sino una promesa (Promise) de que los datos llegar\u00e1n.</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/1/#2-asincronia-comunicacion-a-velocidades-de-la-luz","title":"2. Asincron\u00eda: Comunicaci\u00f3n a velocidades de la luz","text":"<p>La comunicaci\u00f3n con una nave espacial lejana lleva tiempo. No puedes simplemente detener todo el trabajo del Centro de Control de Misiones y esperar a que llegue una respuesta. Env\u00edas un comando y contin\u00faas trabajando, y cuando la respuesta llega, el sistema te notifica.</p> <p>Esto es la asincron\u00eda. JavaScript no bloquea la ejecuci\u00f3n del resto del c\u00f3digo mientras espera una respuesta del servidor. Para gestionar este proceso, la API Fetch utiliza Promesas (Promises).</p> <p>Una Promesa (Promise) es un \"recibo\" de que has enviado una solicitud. Tiene tres estados:</p> <ul> <li><code>pending</code> (pendiente): La se\u00f1al a\u00fan est\u00e1 en camino.</li> <li><code>fulfilled</code> (cumplida): \u00a1Respuesta recibida con \u00e9xito!</li> <li><code>rejected</code> (rechazada): Ocurri\u00f3 un error (por ejemplo, sin conexi\u00f3n).</li> </ul>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/1/#3-primera-solicitud-averiguar-donde-esta-la-iss","title":"3. Primera solicitud: Averiguar d\u00f3nde est\u00e1 la ISS","text":"<p>Vamos a enviar nuestra primera solicitud usando <code>fetch</code>. Utilizaremos un simple archivo HTML y etiquetas <code>&lt;script&gt;</code>.</p> <p>Paso 1: Crear <code>index.html</code> Crea un archivo <code>index.html</code> en una nueva carpeta (por ejemplo, <code>frontend_fleet_control</code>). <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Centro de Control de Misiones - Fetch API&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Estado de la comunicaci\u00f3n con la ISS&lt;/h1&gt;\n    &lt;div id=\"iss-status\"&gt;Esperando datos...&lt;/div&gt;\n\n    &lt;script&gt;\n        // Nuestro c\u00f3digo JavaScript ir\u00e1 aqu\u00ed\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Paso 2: Escribir c\u00f3digo con <code>fetch</code> Dentro de la etiqueta <code>&lt;script&gt;</code>, a\u00f1adiremos nuestra primera solicitud <code>fetch</code> a la API p\u00fablica de Open Notify. <pre><code>// index.html -&gt; &lt;script&gt;\n\nconst issApiUrl = 'http://api.open-notify.org/iss-now.json';\nconst statusDiv = document.getElementById('iss-status');\n\nconsole.log('Enviando solicitud para obtener las coordenadas de la ISS...');\n\nfetch(issApiUrl)\n    .then(response =&gt; {\n        // El primer .then() maneja la propia respuesta HTTP\n        console.log('\u00a1Respuesta recibida del servidor!', response);\n        // Convertimos el cuerpo de la respuesta a JSON, esto tambi\u00e9n es una operaci\u00f3n as\u00edncrona\n        return response.json();\n    })\n    .then(data =&gt; {\n        // El segundo .then() recibe los datos JSON ya parseados\n        console.log('\u00a1Datos convertidos a JSON con \u00e9xito!', data);\n        const position = data.iss_position;\n        statusDiv.innerHTML = `La ISS se encuentra actualmente aqu\u00ed:\n                               &lt;strong&gt;Latitud:&lt;/strong&gt; ${position.latitude},\n                               &lt;strong&gt;Longitud:&lt;/strong&gt; ${position.longitude}`;\n    })\n    .catch(error =&gt; {\n        // .catch() se activar\u00e1 si ocurre un error de red\n        console.error('\u00a1Error de comunicaci\u00f3n con la ISS!', error);\n        statusDiv.textContent = 'No se pudieron obtener los datos. Comprueba tu conexi\u00f3n.';\n    });\n</code></pre></p> <ul> <li><code>fetch(url)</code>: Env\u00eda una solicitud GET. Devuelve una promesa.</li> <li><code>.then(callback)</code>: Se ejecuta cuando la promesa se resuelve (<code>fulfilled</code>) con \u00e9xito. El primer <code>.then</code> recibe un objeto <code>Response</code>.</li> <li><code>response.json()</code>: M\u00e9todo que lee el cuerpo de la respuesta y lo parsea como JSON. \u00a1Tambi\u00e9n devuelve una promesa!</li> <li><code>.catch(callback)</code>: Se ejecuta si la promesa es rechazada (<code>rejected</code>), por ejemplo, debido a un error de red.</li> </ul> <p>Paso 3: Abrir en el navegador Simplemente abre el archivo <code>index.html</code> en tu navegador. Deber\u00edas ver c\u00f3mo \"Esperando datos...\" cambia a las coordenadas actuales de la ISS. Abre la consola del desarrollador (F12) para ver los logs.</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/1/#4-que-pasa-si-manejo-de-errores-del-servidor","title":"4. \"\u00bfQu\u00e9 pasa si...\": Manejo de errores del servidor","text":"<p>\u00bfQu\u00e9 pasa si solicitamos una URL inexistente? <code>fetch('http://api.open-notify.org/non-existent-endpoint')</code></p> <p>Fetch est\u00e1 dise\u00f1ado de tal manera que <code>.catch()</code> solo se activar\u00e1 en caso de errores de red (sin internet, DNS no encontrado). Sin embargo, las respuestas con c\u00f3digos <code>404</code> o <code>500</code> para <code>fetch</code> son una respuesta recibida con \u00e9xito! Simplemente contiene un c\u00f3digo de error.</p> <p>La forma correcta de verificar: <pre><code>fetch('http://api.open-notify.org/non-existent-endpoint')\n    .then(response =&gt; {\n        // Verificamos la propiedad .ok, que es true para estados 200-299\n        if (!response.ok) {\n            // Si la respuesta no es \"OK\", creamos nuestro propio error para pasar a .catch()\n            throw new Error(`\u00a1Error HTTP! Estado: ${response.status}`);\n        }\n        return response.json();\n    })\n    .then(data =&gt; {\n        console.log(data);\n    })\n    .catch(error =&gt; {\n        console.error('Ocurri\u00f3 un error al ejecutar la solicitud:', error);\n    });\n</code></pre></p> <ul> <li><code>response.ok</code>: Este es tu principal indicador de \u00e9xito.</li> <li><code>throw new Error()</code>: Fallamos manualmente la cadena de promesas para entrar en el bloque <code>.catch</code>.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/1/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. La API Fetch es...</p>  a) Una librer\u00eda externa que hay que descargar  b) Una interfaz integrada en el navegador para solicitudes HTTP  c) Un lenguaje de programaci\u00f3n para trabajar con la red <p>2. \u00bfQu\u00e9 devuelve la llamada `fetch(url)`?</p>  a) Datos JSON directamente  b) Un objeto `Promise` (promesa)  c) Una p\u00e1gina HTML <p>3. El m\u00e9todo `.then()` en una cadena de promesas se llama cuando...</p>  a) Ocurre un error de red  b) La solicitud se ha completado con \u00e9xito  c) El usuario cierra la pesta\u00f1a <p>4. El m\u00e9todo `response.json()` es necesario para...</p>  a) Convertir el cuerpo de la respuesta en un objeto JavaScript  b) Verificar si la respuesta es un JSON v\u00e1lido  c) Enviar datos al servidor en formato JSON <p>5. \u00bfC\u00f3mo verificar correctamente que el servidor no devolvi\u00f3 un error (por ejemplo, 404)?</p>  a) Verificar la propiedad `response.ok`  b) Ver si el bloque `.catch()` se activa  c) Verificar que `response.status` sea igual a \"OK\" Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Ha configurado la \"antena principal\" de su MCC y ha aprendido a enviar solicitudes y recibir respuestas.</p> <ul> <li>\ud83d\udce1 Ha dominado la sintaxis b\u00e1sica de <code>fetch()</code>.</li> <li>\ud83d\udef0\ufe0f Ha entendido qu\u00e9 son las Promesas (Promises) y c\u00f3mo trabajar con <code>.then()</code> y <code>.catch()</code>.</li> <li>\u2699\ufe0f Ha aprendido a procesar correctamente las respuestas del servidor, verificando <code>response.ok</code>.</li> </ul> <p>\u00a1Conexi\u00f3n establecida! En el pr\u00f3ximo cap\u00edtulo, conectaremos nuestro MCC a la API de la flota espacial que hemos creado con FastAPI, y aprenderemos a obtener y mostrar la lista de nuestras naves.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>Aseg\u00farese de que su archivo <code>index.html</code> muestre correctamente las coordenadas de la ISS.</li> <li>Intente romper intencionalmente la URL y observe en la consola del desarrollador qu\u00e9 error se muestra.</li> </ul> <p>\u26a0\ufe0f Si el c\u00f3digo no funciona:</p> <ul> <li>Error CORS: Si intenta hacer una solicitud a su API local de FastAPI (por ejemplo, <code>http://127.0.0.1:8000</code>) desde un archivo abierto como <code>file:///...</code>, el navegador bloquear\u00e1 la solicitud debido a la pol\u00edtica de seguridad CORS. Resolveremos este problema en el pr\u00f3ximo cap\u00edtulo. Por ahora, estamos usando APIs p\u00fablicas que lo permiten.</li> <li>HTTP/HTTPS: <code>http://api.open-notify.org</code> funciona con HTTP. Algunos navegadores pueden advertirlo. Si est\u00e1 trabajando desde un sitio HTTPS, las solicitudes a recursos HTTP pueden ser bloqueadas.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/2/","title":"Cap\u00edtulo 4.2: Env\u00edo de solicitudes GET","text":"<p>Tiempo de estudio: 45 minutos</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/2/#1-get-solicitud-de-telemetria-de-la-flota-espacial","title":"1. GET: Solicitud de telemetr\u00eda de la flota espacial","text":"<p>Una solicitud GET es el comando principal para obtener datos. En nuestro MCC (Centro de Control de Misiones), esto es equivalente a la solicitud: \"\u00a1Centro de Gesti\u00f3n de Flotas, informen la situaci\u00f3n!\"</p> <p>Usaremos <code>fetch</code> para enviar dos tipos de solicitudes GET a nuestro servidor FastAPI:</p> <ol> <li>Obtener la colecci\u00f3n completa: \"Mu\u00e9strame toda mi flota\".</li> <li>Obtener un solo recurso: \"Dame informaci\u00f3n detallada sobre la nave con ID 2\".</li> </ol> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p><code>GET /spaceships</code> es una solicitud de difusi\u00f3n a toda la flota pidiendo que informen sus distintivos de llamada.</p> <p><code>GET /spaceships/3</code> es una solicitud dirigida a una nave espec\u00edfica (ISS) pidiendo que transmita datos completos sobre sus sistemas.</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/2/#2-problema-de-cors-interferencia-interplanetaria","title":"2. Problema de CORS: \"Interferencia interplanetaria\"","text":"<p>Antes de enviar la solicitud, debemos resolver un problema importante. Por defecto, por razones de seguridad, los navegadores impiden que una p\u00e1gina web (nuestro MCC), cargada desde un \"dominio\" (<code>file:///...</code> o <code>http://localhost:5500</code>), realice solicitudes a una API en otro \"dominio\" (<code>http://127.0.0.1:8000</code>).</p> <p>Esta pol\u00edtica se llama CORS (Cross-Origin Resource Sharing).</p> <p>Para permitir que nuestro frontend se comunique con el backend, debemos configurar el servidor FastAPI para que le diga al navegador: \"Est\u00e1 bien, conf\u00edo en las solicitudes de esta direcci\u00f3n\".</p> <p>Paso 1: Instalar <code>python-multipart</code> Esto es necesario para que el middleware funcione correctamente. <pre><code>pip install python-multipart\n</code></pre></p> <p>Paso 2: Configurar CORS en <code>main.py</code> Abre tu archivo <code>main.py</code> del proyecto FastAPI y a\u00f1ade el siguiente c\u00f3digo: <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware  # &lt;-- Importamos el middleware\n\n# ... tu c\u00f3digo restante (modelos, db_spaceships) ...\n\napp = FastAPI(\n    title=\"Fleet Management API\",\n    # ...\n)\n\n# --- CONFIGURACI\u00d3N CORS ---\n# Especificamos qu\u00e9 \"dominios\" (origins) pueden enviar solicitudes\norigins = [\n    \"http://localhost\",\n    \"http://localhost:8080\",\n    \"http://127.0.0.1:5500\",  # Direcci\u00f3n para Live Server en VS Code\n    \"null\"  # Para solicitudes desde archivos locales file:///\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # Permitimos los origins especificados\n    allow_credentials=True,\n    allow_methods=[\"*\"],  # Permitimos todos los m\u00e9todos (GET, POST, etc.)\n    allow_headers=[\"*\"],  # Permitimos todos los encabezados\n)\n\n# --- TUS ENDPOINTS ABAJO ---\n@app.get(\"/\")\n# ...\n</code></pre> Ahora nuestro servidor API est\u00e1 listo para aceptar solicitudes del frontend. \u00a1Reinicia <code>uvicorn</code> para que los cambios surtan efecto!</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/2/#3-obtener-la-lista-de-todas-las-naves","title":"3. Obtener la lista de todas las naves","text":"<p>Crearemos una interfaz para mostrar nuestra flota.</p> <p>Paso 1: Actualizar <code>index.html</code> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;MCC - Gesti\u00f3n de Flotas&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: sans-serif; }\n        .ship-list { list-style: none; padding: 0; }\n        .ship-list li { border: 1px solid #ccc; margin-bottom: 10px; padding: 15px; border-radius: 5px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Panel de control de la flota espacial&lt;/h1&gt;\n\n    &lt;button id=\"load-fleet-btn\"&gt;Solicitar datos de la flota&lt;/button&gt;\n\n    &lt;h2&gt;Lista de naves:&lt;/h2&gt;\n    &lt;ul id=\"fleet-list\" class=\"ship-list\"&gt;\n        &lt;li&gt;Esperando comando...&lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt; &lt;!-- Conectando script externo --&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Paso 2: Crear <code>app.js</code> Junto a <code>index.html</code>, crea el archivo <code>app.js</code>. En \u00e9l, trasladaremos toda la l\u00f3gica. <pre><code>// app.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // URL de nuestro servidor FastAPI\n\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetList = document.getElementById('fleet-list');\n\n// Funci\u00f3n para cargar y mostrar la flota\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;Cargando telemetr\u00eda...&lt;/li&gt;';\n\n        // Enviamos una solicitud GET a /spaceships\n        const response = await fetch(`${API_BASE_URL}/spaceships`);\n\n        if (!response.ok) {\n            throw new Error(`Error de red: ${response.status}`);\n        }\n\n        const ships = await response.json(); // Obtenemos un array de naves\n\n        // Limpiamos la lista y mostramos los datos\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;No hay ninguna nave en el registro.&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            const listItem = document.createElement('li');\n            listItem.innerHTML = `\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                Tipo: ${ship.type}&lt;br&gt;\n                A\u00f1o de lanzamiento: ${ship.launch_year}&lt;br&gt;\n                Estado: ${ship.status}\n            `;\n            fleetList.appendChild(listItem);\n        });\n\n    } catch (error) {\n        console.error('No se pudieron cargar los datos de la flota:', error);\n        fleetList.innerHTML = `&lt;li&gt;Error: ${error.message}&lt;/li&gt;`;\n    }\n}\n\n// A\u00f1adimos el manejador de eventos al bot\u00f3n\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\n</code></pre></p> <ul> <li>async/await: Hemos utilizado una sintaxis nueva y m\u00e1s conveniente para trabajar con promesas. La analizaremos en detalle en el Cap\u00edtulo 4.5. Por ahora, simplemente sepan que <code>await</code> \"espera\" la ejecuci\u00f3n de una promesa sin bloquear la p\u00e1gina.</li> <li><code>try...catch</code>: Una excelente manera de manejar errores en funciones <code>async</code>.</li> </ul> <p>Paso 3: Probar Abre <code>index.html</code> en tu navegador (preferiblemente a trav\u00e9s de la extensi\u00f3n Live Server en VS Code, que lo ejecutar\u00e1 en <code>http://127.0.0.1:5500</code>). Haz clic en el bot\u00f3n \"Solicitar datos de la flota\". \u00a1La lista de tus naves de FastAPI deber\u00eda aparecer en la p\u00e1gina!</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/2/#4-obtener-los-datos-de-una-sola-nave","title":"4. Obtener los datos de una sola nave","text":"<p>Ahora a\u00f1adiremos un formulario para solicitar informaci\u00f3n por ID espec\u00edfico.</p> <p>Paso 1: A\u00f1adir formulario en <code>index.html</code> <pre><code>&lt;!-- index.html, despu\u00e9s de la lista --&gt;\n&lt;hr&gt;\n&lt;h2&gt;Solicitud por ID&lt;/h2&gt;\n&lt;form id=\"ship-form\"&gt;\n    &lt;input type=\"number\" id=\"ship-id-input\" placeholder=\"Introduce el ID de la nave\" required&gt;\n    &lt;button type=\"submit\"&gt;Buscar nave&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"ship-details\" class=\"ship-list\"&gt;&lt;/div&gt;\n</code></pre></p> <p>Paso 2: A\u00f1adir l\u00f3gica en <code>app.js</code> <pre><code>// app.js, al final del archivo\n\nconst shipForm = document.getElementById('ship-form');\nconst shipIdInput = document.getElementById('ship-id-input');\nconst shipDetails = document.getElementById('ship-details');\n\nasync function fetchShipById(event) {\n    event.preventDefault(); // Prevenimos la recarga de la p\u00e1gina\n    const shipId = shipIdInput.value;\n\n    if (!shipId) {\n        alert('Por favor, introduce un ID.');\n        return;\n    }\n\n    try {\n        shipDetails.innerHTML = '&lt;li&gt;Buscando nave...&lt;/li&gt;';\n\n        // Enviamos una solicitud GET a /spaceships/{id}\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`);\n\n        if (response.status === 404) {\n             throw new Error('Nave con ese ID no encontrada en el registro.');\n        }\n        if (!response.ok) {\n            throw new Error(`Error de red: ${response.status}`);\n        }\n\n        const ship = await response.json();\n\n        shipDetails.innerHTML = `\n            &lt;li&gt;\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                Tipo: ${ship.type}&lt;br&gt;\n                A\u00f1o de lanzamiento: ${ship.launch_year}&lt;br&gt;\n                Estado: ${ship.status}\n            &lt;/li&gt;\n        `;\n    } catch (error) {\n        console.error(`Error al buscar la nave ${shipId}:`, error);\n        shipDetails.innerHTML = `&lt;li&gt;Error: ${error.message}&lt;/li&gt;`;\n    }\n}\n\nshipForm.addEventListener('submit', fetchShipById);\n</code></pre></p> <ul> <li>Hemos a\u00f1adido un manejo separado para el estado <code>404</code> para proporcionar al usuario un mensaje de error m\u00e1s claro.</li> </ul> <p>Paso 3: Probar Actualiza la p\u00e1gina, introduce el ID de una nave existente (por ejemplo, 1) y haz clic en \"Buscar nave\". Deber\u00edas ver sus datos. Intenta introducir un ID inexistente (por ejemplo, 99) \u2014 ver\u00e1s un mensaje de error.</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/2/#cuestionario-para-consolidar","title":"Cuestionario para consolidar","text":"<p>1. La pol\u00edtica CORS en el navegador es necesaria para...</p>  a) Acelerar la carga de p\u00e1ginas  b) Proteger contra solicitudes intersitio maliciosas  c) Comprimir datos JSON <p>2. Para permitir que el frontend en `localhost:5500` acceda a FastAPI, es necesario...</p>  a) Configurar `CORSMiddleware` en FastAPI  b) Cambiar la configuraci\u00f3n del navegador  c) No es necesario hacer nada, funciona por defecto <p>3. Para obtener datos sobre un recurso espec\u00edfico con ID=5, la URL de la solicitud se ver\u00e1 as\u00ed:</p>  a) `/resources?id=5`  b) `/resources/5`  c) `/get/resources/5` <p>4. La palabra clave `await` en JavaScript solo se puede usar dentro de una funci\u00f3n declarada con...</p>  a) `function`  b) `promise`  c) `async` <p>5. `event.preventDefault()` en el manejador de env\u00edo de formularios es necesario para...</p>  a) Prevenir el comportamiento predeterminado del navegador (recarga de la p\u00e1gina)  b) Detener la ejecuci\u00f3n del script  c) Cancelar el env\u00edo de la solicitud Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>\u00a1Has configurado con \u00e9xito un canal de comunicaci\u00f3n entre \"Tierra\" y \"espacio\" y has aprendido a solicitar telemetr\u00eda!</p> <ul> <li>\ud83d\udee1\ufe0f Has resuelto el problema de la \"interferencia interplanetaria\" configurando CORS en tu servidor FastAPI.</li> <li>\ud83d\udef0\ufe0f Has implementado una funci\u00f3n para obtener y mostrar la lista completa de naves espaciales.</li> <li>\ud83d\udd2d Has creado una interfaz para solicitar datos sobre un aparato espec\u00edfico por su ID.</li> </ul> <p>\u00a1El Centro de Control de la Misi\u00f3n recibe datos! En el pr\u00f3ximo cap\u00edtulo, pasaremos a la acci\u00f3n: enviaremos comandos para crear, actualizar y eliminar nuestras naves espaciales.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>Aseg\u00farate de que tu servidor FastAPI est\u00e9 en ejecuci\u00f3n con <code>CORSMiddleware</code> configurado.</li> <li>Verifica que al hacer clic en el bot\u00f3n \"Solicitar datos\" en la p\u00e1gina aparezca la lista de naves.</li> <li>Aseg\u00farate de que el formulario de b\u00fasqueda por ID encuentre correctamente las naves existentes e informe un error para las que no existen.</li> </ul> <p>\u26a0\ufe0f Si hay errores:</p> <ul> <li>CORS error en la consola del navegador: O no has reiniciado <code>uvicorn</code> despu\u00e9s de a\u00f1adir <code>CORSMiddleware</code>, o la direcci\u00f3n de tu frontend (por ejemplo, <code>http://127.0.0.1:5500</code>) no est\u00e1 a\u00f1adida a la lista de <code>origins</code>.</li> <li>Failed to fetch: Verifica que tu servidor FastAPI est\u00e9 en ejecuci\u00f3n y accesible en la direcci\u00f3n indicada en <code>API_BASE_URL</code>.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/3/","title":"Cap\u00edtulo 4.3: Env\u00edo de solicitudes POST/PUT/DELETE","text":"<p>Tiempo de estudio: 1 hora</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/3/#1-comandos-activos-del-lanzamiento-al-desguace","title":"1. Comandos activos: Del lanzamiento al desguace","text":"<p>Hasta ahora, nuestro Centro de Control de Misi\u00f3n solo solicitaba informaci\u00f3n (<code>GET</code>). Ahora aprenderemos a enviar comandos activos:</p> <ul> <li>POST: \"\u00a1Lanzar un nuevo sat\u00e9lite a \u00f3rbita!\"</li> <li>PUT: \"\u00a1Realizar una modernizaci\u00f3n completa de los sistemas en la EEI!\"</li> <li>DELETE: \"\u00a1Retirar de \u00f3rbita la antigua nave <code>Debris-123</code>!\"</li> </ul> <p>Para ello, utilizaremos <code>fetch</code>, pero con par\u00e1metros adicionales que describen nuestro comando.</p> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>Si <code>GET</code> es una escucha pasiva del \u00e9ter radiof\u00f3nico, entonces <code>POST</code>, <code>PUT</code> y <code>DELETE</code> son transmisiones de comandos activas. Para ello, no solo necesitamos especificar la \"frecuencia\" (URL), sino tambi\u00e9n el contenido del comando (cuerpo de la solicitud) y el protocolo de comunicaci\u00f3n (encabezados).</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/3/#2-envio-de-solicitud-post-lanzamiento-de-una-nueva-nave","title":"2. Env\u00edo de solicitud POST: Lanzamiento de una nueva nave","text":"<p>Para crear un nuevo recurso, enviamos una solicitud <code>POST</code>. Lo m\u00e1s importante aqu\u00ed es pasar el cuerpo (body) de la solicitud con los datos del nuevo objeto.</p> <p>Paso 1: A\u00f1adimos el formulario de creaci\u00f3n en <code>index.html</code> Lo colocaremos despu\u00e9s del bloque \"Solicitud por ID\". <pre><code>&lt;!-- index.html --&gt;\n&lt;hr&gt;\n&lt;h2&gt;Lanzar una nueva nave&lt;/h2&gt;\n&lt;form id=\"create-ship-form\"&gt;\n    &lt;input type=\"text\" id=\"create-name\" placeholder=\"Nombre\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-type\" placeholder=\"Tipo\" required&gt;&lt;br&gt;\n    &lt;input type=\"number\" id=\"create-year\" placeholder=\"A\u00f1o de lanzamiento\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-status\" placeholder=\"Estado\" required&gt;&lt;br&gt;\n    &lt;button type=\"submit\"&gt;Lanzar&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"create-status-message\"&gt;&lt;/div&gt;\n</code></pre></p> <p>Paso 2: A\u00f1adimos la l\u00f3gica en <code>app.js</code> <pre><code>// app.js, al final del archivo\n\nconst createShipForm = document.getElementById('create-ship-form');\nconst createStatusMessage = document.getElementById('create-status-message');\n\nasync function createShip(event) {\n    event.preventDefault();\n\n    // 1. Recopilamos los datos del formulario en un objeto\n    const shipData = {\n        name: document.getElementById('create-name').value,\n        type: document.getElementById('create-type').value,\n        launch_year: parseInt(document.getElementById('create-year').value),\n        status: document.getElementById('create-status').value\n    };\n\n    try {\n        createStatusMessage.textContent = 'Enviando comando de lanzamiento...';\n\n        // 2. Enviamos la solicitud fetch con par\u00e1metros\n        const response = await fetch(`${API_BASE_URL}/spaceships`, {\n            method: 'POST', // Indicamos el m\u00e9todo\n            headers: {\n                'Content-Type': 'application/json' // Le decimos al servidor que enviamos JSON\n            },\n            body: JSON.stringify(shipData) // Convertimos el objeto JavaScript en una cadena JSON\n        });\n\n        if (!response.ok) {\n            // Si el servidor devolvi\u00f3 un error, intentamos leer su cuerpo\n            const errorData = await response.json();\n            throw new Error(errorData.detail || `Error del servidor: ${response.status}`);\n        }\n\n        const newShip = await response.json();\n        createStatusMessage.textContent = `\ud83d\ude80 \u00a1Lanzamiento exitoso! La nave ha recibido el ID: ${newShip.id}`;\n\n        createShipForm.reset(); // Limpiamos el formulario\n        fetchAndDisplayFleet(); // Actualizamos la lista general de la flota\n\n    } catch (error) {\n        console.error('Error al lanzar la nave:', error);\n        createStatusMessage.textContent = `\ud83d\udd34 Error: ${error.message}`;\n    }\n}\n\ncreateShipForm.addEventListener('submit', createShip);\n</code></pre> Puntos clave de <code>fetch</code> para POST:</p> <ul> <li><code>method: 'POST'</code>: Es obligatorio especificar el m\u00e9todo HTTP.</li> <li><code>headers: { 'Content-Type': 'application/json' }</code>: Un encabezado cr\u00edticamente importante. Le informa a nuestro servidor FastAPI que el cuerpo de la solicitud contiene JSON y que debe ser parseado.</li> <li><code>body: JSON.stringify(shipData)</code>: No podemos enviar un objeto JavaScript directamente. Necesita ser serializado (convertido) a una cadena JSON.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/3/#3-envio-de-solicitud-delete-desguace-de-una-nave","title":"3. Env\u00edo de solicitud DELETE: Desguace de una nave","text":"<p>La solicitud de eliminaci\u00f3n es m\u00e1s sencilla: generalmente no necesita un cuerpo, solo la URL con el ID del objeto.</p> <p>Paso 1: A\u00f1adimos un bot\u00f3n \"Eliminar\" a nuestra lista de naves Modificaremos la funci\u00f3n <code>fetchAndDisplayFleet</code> en <code>app.js</code> para que a\u00f1ada un bot\u00f3n de eliminaci\u00f3n a cada elemento. <pre><code>// app.js, dentro de la funci\u00f3n fetchAndDisplayFleet\n\n// ...\nships.forEach(ship =&gt; {\n    const listItem = document.createElement('li');\n    // A\u00f1adimos un bot\u00f3n con un atributo data que almacena el ID\n    listItem.innerHTML = `\n        &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n        Tipo: ${ship.type} | A\u00f1o: ${ship.launch_year} | Estado: ${ship.status}&lt;br&gt;\n        &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;Desguazar nave&lt;/button&gt;\n    `;\n    fleetList.appendChild(listItem);\n});\n// ...\n</code></pre></p> <p>Paso 2: A\u00f1adimos un controlador para todos los botones \"Eliminar\" Usamos delegaci\u00f3n de eventos: un solo controlador para toda la lista. <pre><code>// app.js, al final del archivo\n\nasync function deleteShip(shipId) {\n    if (!confirm(`\u00bfEst\u00e1s seguro de que quieres desguazar la nave con ID ${shipId}? Esta acci\u00f3n es irreversible.`)) {\n        return;\n    }\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`, {\n            method: 'DELETE' // Indicamos el m\u00e9todo\n        });\n\n        if (!response.ok) {\n            throw new Error(`No se pudo desguazar la nave. Estado: ${response.status}`);\n        }\n\n        alert(`Nave con ID ${shipId} desguazada con \u00e9xito.`);\n        fetchAndDisplayFleet(); // Actualizamos la lista\n\n    } catch (error) {\n        console.error('Error al desguazar:', error);\n        alert(`Error: ${error.message}`);\n    }\n}\n\n// Delegaci\u00f3n de eventos: escuchamos clics en toda la lista\nfleetList.addEventListener('click', (event) =&gt; {\n    // Verificamos si el clic fue en un bot\u00f3n con la clase 'delete-btn'\n    if (event.target.classList.contains('delete-btn')) {\n        const shipId = event.target.dataset.shipId; // Obtenemos el ID del atributo data\n        deleteShip(shipId);\n    }\n});\n</code></pre></p> <p>Paso 3: A\u00f1adimos id al modelo Spaceship</p> <p>A\u00f1adimos id en el modelo y la base de datos en el archivo <code>main.py</code></p> <pre><code>class Spaceship(BaseModel):\n    id: int\n    # El resto del c\u00f3digo del modelo...\n\ndb_spaceships = {\n    1: {\n        \"id\": 1,\n        # Datos del elemento 1\n    },\n    2: {\n        \"id\": 2,\n        # Datos del elemento 2\n    },\n    3: {\n        \"id\": 3,\n        # Datos del elemento 3\n    }\n}\n</code></pre> <ul> <li><code>method: 'DELETE'</code>: Indicamos el m\u00e9todo. El cuerpo y los encabezados no son necesarios aqu\u00ed.</li> <li><code>confirm()</code>: Una sencilla ventana de confirmaci\u00f3n integrada para evitar eliminar algo importante por error.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/3/#4-envio-de-solicitud-put-tarea-independiente","title":"4. Env\u00edo de solicitud PUT (Tarea independiente)","text":"<p>La implementaci\u00f3n de una solicitud <code>PUT</code> para actualizaci\u00f3n es muy similar a <code>POST</code>.</p> <p>Tu misi\u00f3n, si decides aceptarla:</p> <ol> <li>A\u00f1adir un bot\u00f3n \"Modificar\" junto al bot\u00f3n \"Eliminar\" para cada nave.</li> <li>Al hacer clic en \"Modificar\", rellenar el formulario (se puede usar el mismo que para crear) con los datos actuales de la nave.</li> <li>Cambiar el texto del bot\u00f3n \"Lanzar\" a \"Actualizar\".</li> <li>Al enviar el formulario, enviar una solicitud <code>PUT</code> a <code>/spaceships/{id}</code> con el cuerpo completo del objeto.</li> <li>Despu\u00e9s de una actualizaci\u00f3n exitosa, actualizar la lista de la flota.</li> </ol> <p>Sugerencia: Necesitar\u00e1s <code>fetch</code> con <code>method: 'PUT'</code>, encabezados <code>Content-Type</code> y <code>body</code> con <code>JSON.stringify()</code>, exactamente igual que en la solicitud <code>POST</code>.</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/3/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. \u00bfQu\u00e9 par\u00e1metro de `fetch` se utiliza para pasar datos en el cuerpo de la solicitud?</p>  a) `data`  b) `body`  c) `payload` <p>2. El encabezado `'Content-Type': 'application/json'` le indica al servidor que...</p>  a) El cliente espera recibir una respuesta en formato JSON  b) El cliente env\u00eda datos en el cuerpo de la solicitud en formato JSON  c) La conexi\u00f3n debe estar cifrada <p>3. \u00bfQu\u00e9 hace la funci\u00f3n `JSON.stringify(obj)` en JavaScript?</p>  a) Convierte una cadena JSON en un objeto  b) Valida la validez del objeto  c) Convierte un objeto JavaScript en una cadena JSON <p>4. Para enviar una solicitud `DELETE` usando `fetch` es obligatorio especificar:</p>  a) Un cuerpo `body` vac\u00edo  b) `method: 'DELETE'`  c) El encabezado `Authorization` <p>5. La delegaci\u00f3n de eventos en JavaScript es cuando...</p>  a) Adjuntamos un \u00fanico controlador al elemento padre en lugar de m\u00faltiples a los elementos hijos  b) Transferimos el derecho de ejecutar una funci\u00f3n a otro script  c) El evento ocurre con un retraso Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>\u00a1Su Centro de Control de Misi\u00f3n ahora tiene un conjunto completo de comandos para gestionar la flota!</p> <ul> <li>\u2705 Ha aprendido a enviar solicitudes <code>POST</code> con cuerpo y encabezados para crear nuevos recursos.</li> <li>\u2705 Ha implementado solicitudes <code>DELETE</code> para dar de baja equipos obsoletos.</li> <li>\u2705 Se le ha asignado la tarea de implementar una solicitud <code>PUT</code>, consolidando sus conocimientos.</li> </ul> <p>\u00a1Control total establecido! Pero, \u00bfqu\u00e9 hacer si la comunicaci\u00f3n se interrumpe o el servidor informa un error? En el pr\u00f3ximo cap\u00edtulo, crearemos un sistema centralizado de manejo de errores en el frontend.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>Aseg\u00farese de que el formulario de creaci\u00f3n de nuevas naves funcione y que la lista en la p\u00e1gina se actualice despu\u00e9s de una creaci\u00f3n exitosa.</li> <li>Verifique que el bot\u00f3n \"Dar de baja equipo\" funcione, solicite confirmaci\u00f3n y elimine la nave de la lista.</li> <li>Intente crear una nave con datos no v\u00e1lidos (por ejemplo, con un nombre muy corto) y observe el error que devolver\u00e1 su servidor FastAPI.</li> </ul> <p>\u26a0\ufe0f Si hay errores:</p> <ul> <li>Error <code>422</code> del servidor: Lo m\u00e1s probable es que los datos que est\u00e1 enviando no pasen la validaci\u00f3n de Pydantic. Verifique la consola del navegador \u2014 <code>errorData.detail</code> mostrar\u00e1 en qu\u00e9 campo est\u00e1 el problema.</li> <li>Error <code>415 Unsupported Media Type</code>: Olvid\u00f3 a\u00f1adir el encabezado <code>'Content-Type': 'application/json'</code>.</li> <li>Los botones de eliminaci\u00f3n no funcionan: Verifique si la delegaci\u00f3n de eventos funciona correctamente y si est\u00e1 obteniendo <code>shipId</code> de <code>data-ship-id</code> correctamente.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/4/","title":"Cap\u00edtulo 4.4: Gesti\u00f3n de errores","text":"<p>Tiempo de estudio: 45 minutos</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/4/#1-gestion-de-errores-protocolos-de-emergencia-del-centro-de-control-de-misiones-ccm","title":"1. Gesti\u00f3n de errores: Protocolos de emergencia del Centro de Control de Misiones (CCM)","text":"<p>En el espacio, no todo puede salir seg\u00fan lo planeado: una llamarada solar puede interrumpir las comunicaciones, el ordenador de a bordo de la nave puede fallar y un comando desde la Tierra puede contener coordenadas incorrectas.</p> <p>La gesti\u00f3n de errores en el frontend son los protocolos de emergencia de su CCM. Deben:</p> <ul> <li>\ud83d\udea8 Evitar que toda la interfaz \"explote\" debido a un solo comando fallido.</li> <li>\ud83d\udce1 Comunicar claramente al operador (usuario) qu\u00e9 sali\u00f3 mal.</li> <li>\ud83d\udd27 Sugerir posibles acciones futuras.</li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>Si la nave env\u00eda una se\u00f1al <code>500 Internal Server Error</code>, en la pantalla del CCM no deber\u00eda aparecer \"Error cr\u00edtico de JavaScript en la l\u00ednea 57\". En su lugar, deber\u00eda ser: \"\ud83d\udea8 \u00a1Fallo a bordo de la nave! Los ingenieros ya han sido notificados. Intente repetir el comando m\u00e1s tarde.\"</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/4/#2-tipos-de-anomalias-cosmicas","title":"2. Tipos de \"anomal\u00edas c\u00f3smicas\"","text":"<p>En el frontend, nos encontramos con tres tipos principales de errores al trabajar con la API:</p> <ol> <li>Errores de red: La conexi\u00f3n con el servidor no se ha establecido. La antena no funciona, el cable est\u00e1 cortado. <code>fetch</code> \"caer\u00e1\" en el bloque <code>.catch()</code>.</li> <li>Errores del cliente (4xx): El comando desde la Tierra era incorrecto. ID inv\u00e1lido, error de validaci\u00f3n. El servidor responde, pero con un estado <code>4xx</code>.</li> <li>Errores del servidor (5xx): Fallo en la propia nave. Problema en el c\u00f3digo de la API. El servidor responde, pero con un estado <code>500+</code>.</li> </ol> <p>Ya hemos empezado a gestionarlos con <code>try...catch</code> y la comprobaci\u00f3n de <code>response.ok</code>. Ahora, hag\u00e1moslo de forma centralizada.</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/4/#3-funcion-manejadora-centralizada","title":"3. Funci\u00f3n manejadora centralizada","text":"<p>Repetir el mismo c\u00f3digo <code>try...catch</code> en cada funci\u00f3n es una mala pr\u00e1ctica. Crearemos un \"envoltorio\" universal para nuestras peticiones <code>fetch</code>.</p> <p>Paso 1: Creamos <code>api.js</code> Cree un nuevo archivo <code>api.js</code> junto a <code>app.js</code>. En \u00e9l, trasladaremos toda la l\u00f3gica de interacci\u00f3n con la API. <pre><code>// api.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\n/**\n * Funci\u00f3n universal para realizar peticiones a la API.\n * Gestiona errores y devuelve JSON.\n * @param {string} endpoint - Punto final de la API, por ejemplo, '/spaceships'\n * @param {object} options - Par\u00e1metros para fetch (method, headers, body)\n */\nasync function apiRequest(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n\n    try {\n        const response = await fetch(url, options);\n\n        // Si la respuesta no es JSON en absoluto, lanzamos un error inmediatamente\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n            // Excepci\u00f3n para una petici\u00f3n DELETE exitosa que no tiene cuerpo\n            if (response.status === 204) return null;\n\n            throw new TypeError(`Respuesta no-JSON recibida del servidor: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n\n        if (!response.ok) {\n            // Si el servidor devolvi\u00f3 un JSON con un error (por ejemplo, detalle de FastAPI)\n            const errorMessage = data.detail || `\u00a1Error HTTP! Estado: ${response.status}`;\n            throw new Error(errorMessage);\n        }\n\n        return data;\n\n    } catch (error) {\n        console.error(`Error en la petici\u00f3n API a ${endpoint}:`, error);\n        // \"Relanzamos\" el error para que pueda ser capturado en la UI\n        throw error;\n    }\n}\n</code></pre></p> <p>Paso 2: Conectamos <code>api.js</code> en <code>index.html</code> Es importante conectarlo ANTES de <code>app.js</code>, ya que <code>app.js</code> utilizar\u00e1 sus funciones. <pre><code>&lt;!-- index.html --&gt;\n&lt;body&gt;\n    &lt;!-- ... --&gt;\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</code></pre></p> <p>Paso 3: Refactorizamos <code>app.js</code> Ahora reescribiremos nuestras funciones usando el nuevo <code>apiRequest</code>. <pre><code>// app.js\n\n// const API_BASE_URL = ...; // Esta l\u00ednea puede eliminarse, ahora est\u00e1 en api.js\n\n// ...\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;Cargando telemetr\u00eda...&lt;/li&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- \u00a1Usamos nuestro envoltorio!\n\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;No hay ninguna nave en el registro.&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; { /* ... el resto del c\u00f3digo de visualizaci\u00f3n ... */ });\n    } catch (error) {\n        fleetList.innerHTML = `&lt;li&gt;\ud83d\udd34 Error al cargar la flota: ${error.message}&lt;/li&gt;`;\n    }\n}\n\nasync function createShip(event) {\n    event.preventDefault();\n    const shipData = { /* ... recolecci\u00f3n de datos del formulario ... */ };\n\n    try {\n        createStatusMessage.textContent = 'Enviando comando de lanzamiento...';\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(shipData)\n        };\n        const newShip = await apiRequest('/spaceships', options); // &lt;-- \u00a1Usamos nuestro envoltorio!\n\n        createStatusMessage.textContent = `\ud83d\ude80 \u00a1Lanzamiento exitoso! ID asignado a la nave: ${newShip.id}`;\n        createShipForm.reset();\n        fetchAndDisplayFleet();\n    } catch (error) {\n        createStatusMessage.textContent = `\ud83d\udd34 Error: ${error.message}`;\n    }\n}\n\n// \u00a1Reescriba el resto de las funciones (fetchShipById, deleteShip) de manera an\u00e1loga!\n</code></pre> Ahora toda la l\u00f3gica para gestionar errores de red, verificar <code>response.ok</code> y parsear JSON se encuentra en un solo lugar, y el c\u00f3digo en <code>app.js</code> se ha vuelto mucho m\u00e1s limpio y legible.</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/4/#4-mostrar-errores-al-usuario","title":"4. Mostrar errores al usuario","text":"<p>Una buena interfaz no solo debe escribir el error en la consola, sino mostrarlo al usuario de forma comprensible.</p> <p>Ejemplo: Mejora de <code>createShip</code> Nuestro c\u00f3digo ya lo hace: <code>createStatusMessage.textContent = ...</code>. Pero podemos mejorarlo a\u00fan m\u00e1s creando una funci\u00f3n universal para mostrar notificaciones.</p> <p>A\u00f1adimos a <code>app.js</code>: <pre><code>// app.js\nfunction showNotification(message, isError = false) {\n    const notificationArea = document.getElementById('create-status-message'); // o otro elemento\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? 'red' : 'green';\n}\n\n// Usar en createShip:\nasync function createShip(event) {\n    // ...\n    try {\n        // ...\n        const newShip = await apiRequest('/spaceships', options);\n        showNotification(`\ud83d\ude80 \u00a1Lanzamiento exitoso! ID: ${newShip.id}`);\n        // ...\n    } catch (error) {\n        showNotification(`\ud83d\udd34 Error: ${error.message}`, true);\n    }\n}\n</code></pre> Ahora tenemos un mecanismo unificado para mostrar tanto mensajes de \u00e9xito como errores.</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/4/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. El bloque `.catch()` en la promesa `fetch` se activar\u00e1 si...</p>  a) El servidor devuelve un error 404 Not Found  b) Ocurre un error de red (por ejemplo, no hay internet)  c) El servidor devuelve un error 500 Internal Server Error <p>2. \u00bfPor qu\u00e9 es necesaria una funci\u00f3n manejadora centralizada para las peticiones de la API?</p>  a) Para evitar la duplicaci\u00f3n de c\u00f3digo de gesti\u00f3n de errores y hacer la l\u00f3gica de la UI m\u00e1s limpia  b) Para que todas las peticiones se env\u00eden simult\u00e1neamente  c) Es un requisito del est\u00e1ndar Fetch API <p>3. `response.headers.get('content-type')` se usa para...</p>  a) Establecer un encabezado en la petici\u00f3n saliente  b) Verificar el tipo de contenido en la respuesta recibida del servidor  c) Obtener todos los tipos de contenido disponibles <p>4. `throw new Error(...)` dentro de `try...catch` o `.then()` se usa para...</p>  a) Detener la ejecuci\u00f3n de todo JavaScript en la p\u00e1gina  b) \"Fallar\" la promesa y pasar el control al bloque `.catch()` m\u00e1s cercano  c) Mostrar un mensaje en `alert` <p>5. \u00bfPor qu\u00e9 es importante mostrar los errores al usuario y no solo en la consola?</p>  a) Porque la mayor\u00eda de los usuarios no miran la consola  b) Para que la interfaz sea comprensible y predecible  c) Ambas opciones son correctas Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Usted ha fortalecido su MCC (Centro de Control de Misi\u00f3n) creando protocolos de emergencia fiables.</p> <ul> <li>\ud83d\udee1\ufe0f Usted comprende la diferencia entre errores de red, de cliente y de servidor.</li> <li>\u2699\ufe0f Usted ha creado una funci\u00f3n <code>apiRequest</code> centralizada para manejar todas las solicitudes, evitando la duplicaci\u00f3n de c\u00f3digo.</li> <li>\ud83d\udce1 Su interfaz ahora es capaz de informar correctamente al usuario sobre los errores, haci\u00e9ndola m\u00e1s amigable y confiable.</li> </ul> <p>\u00a1Escudos de emergencia levantados! Pero, \u00bfqu\u00e9 es mejor: las cadenas <code>.then()</code> o el moderno <code>async/await</code>? En el pr\u00f3ximo cap\u00edtulo, analizaremos ambos enfoques y entenderemos cu\u00e1ndo usar cada uno.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>Verifique que su c\u00f3digo en <code>app.js</code> haya sido refactorizado con \u00e9xito y utilice la nueva funci\u00f3n <code>apiRequest</code>.</li> <li>Intente detener el servidor FastAPI y haga clic en el bot\u00f3n \"Solicitar datos\". Deber\u00eda ver un error de conexi\u00f3n en la p\u00e1gina.</li> <li>Intente crear una nave con datos inv\u00e1lidos. Deber\u00eda ver un mensaje de error de validaci\u00f3n que proviene de FastAPI.</li> </ul> <p>\u26a0\ufe0f Si hay errores:</p> <ul> <li><code>apiRequest is not defined</code>: Aseg\u00farese de haber conectado <code>api.js</code> en <code>index.html</code> antes de <code>app.js</code>.</li> <li>Verifique la consola del navegador en busca de otros errores de sintaxis en JavaScript.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/5/","title":"Cap\u00edtulo 4.5: Async/await vs Promise","text":"<p>Tiempo de estudio: 30 minutos</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/5/#1-asincronia-dos-formas-de-gestionar-la-comunicacion-espacial","title":"1. Asincron\u00eda: Dos formas de gestionar la \"comunicaci\u00f3n espacial\"","text":"<p>Imagina que el Centro de Control de Misiones (MCC) env\u00eda una orden a Marte. La respuesta tardar\u00e1 varios minutos en llegar. \u00bfC\u00f3mo organizar el trabajo durante ese tiempo?</p> <p>M\u00e9todo 1: \"Protocolo de devoluci\u00f3n de llamada\" (Promise con <code>.then()</code>) Env\u00edas una orden y das una instrucci\u00f3n: \"CUANDO llegue la respuesta, ENTONCES ejecuta esta funci\u00f3n\". Esto se asemeja a una cadena de eventos.</p> <p>M\u00e9todo 2: \"Modo de espera\" (Async/await) Dices: \"Esperar\u00e9 la respuesta a esta orden, pero no bloquear\u00e9 otros paneles de control\". Es como si pausaras la ejecuci\u00f3n de esta tarea espec\u00edfica, permitiendo que el resto del MCC siga funcionando.</p> <p>Ambos m\u00e9todos resuelven la misma tarea: gestionar operaciones as\u00edncronas. <code>async/await</code> es simplemente una sintaxis m\u00e1s moderna y legible que funciona \"sobre\" las promesas.</p> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <ul> <li>Promise con <code>.then()</code>: Es como escribir en un post-it: \"Cuando el rover de Marte env\u00ede una foto, p\u00e1sala al departamento de an\u00e1lisis\".</li> <li>Async/await: Es como decirle a un asistente: \"Espera la foto del rover de Marte, mientras yo me ocupo de los c\u00e1lculos para el lanzamiento de un nuevo cohete\".</li> </ul>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/5/#2-promise-con-then-cadena-de-comandos-clasica","title":"2. Promise con <code>.then()</code>: Cadena de comandos cl\u00e1sica","text":"<p>Esta es la forma fundamental de trabajar con la asincron\u00eda en JavaScript, que utilizamos en el cap\u00edtulo 4.1.</p> <p>Recordemos nuestro primer c\u00f3digo: <pre><code>function getIssPositionWithPromises() {\n    console.log('Enviando solicitud mediante el protocolo \"Promise\"...');\n\n    fetch('http://api.open-notify.org/iss-now.json')\n        .then(response =&gt; {\n            // Etapa 1: Respuesta recibida\n            if (!response.ok) {\n                throw new Error(`Error HTTP: ${response.status}`);\n            }\n            return response.json(); // Devolvemos una nueva promesa\n        })\n        .then(data =&gt; {\n            // Etapa 2: Datos parseados\n            console.log('Datos recibidos mediante el protocolo \"Promise\":', data.iss_position);\n        })\n        .catch(error =&gt; {\n            // Etapa 3 (Error): Algo sali\u00f3 mal en alguna de las etapas\n            console.error('Fallo de comunicaci\u00f3n mediante el protocolo \"Promise\":', error);\n        });\n\n    console.log('...comando enviado, el MCC sigue trabajando...');\n}\n</code></pre></p> <p>Ventajas:</p> <ul> <li>Cadena de acciones expl\u00edcita.</li> <li>Adecuado para operaciones secuenciales simples.</li> </ul> <p>Desventajas:</p> <ul> <li>\"Infierno de las devoluciones de llamada\" (Callback Hell): Con un gran n\u00famero de operaciones as\u00edncronas anidadas, el c\u00f3digo puede convertirse en una \"escalera\" de <code>.then()</code> dif\u00edcil de leer.</li> <li>El manejo de errores puede ser menos intuitivo.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/5/#3-asyncawait-estilo-sincrono-moderno","title":"3. Async/await: Estilo s\u00edncrono moderno","text":"<p><code>async/await</code> es \"az\u00facar sint\u00e1ctico\" sobre las promesas, que permite escribir c\u00f3digo as\u00edncrono como si fuera s\u00edncrono.</p> <p>Reglas de uso:</p> <ol> <li>La palabra clave <code>await</code> solo se puede usar dentro de una funci\u00f3n marcada como <code>async</code>.</li> <li><code>await</code> se coloca antes de una llamada que devuelve una promesa (por ejemplo, <code>fetch()</code> o <code>response.json()</code>).</li> <li><code>await</code> \"pausa\" la ejecuci\u00f3n de la funci\u00f3n <code>async</code> hasta que la promesa se resuelva y devuelve su resultado.</li> </ol> <p>El mismo c\u00f3digo, reescrito con <code>async/await</code>: <pre><code>async function getIssPositionWithAsyncAwait() {\n    console.log('Enviando solicitud mediante el protocolo \"Async/await\"...');\n\n    try {\n        // Etapa 1: Esperamos la respuesta del servidor\n        const response = await fetch('http://api.open-notify.org/iss-now.json');\n\n        if (!response.ok) {\n            throw new Error(`Error HTTP: ${response.status}`);\n        }\n\n        // Etapa 2: Esperamos a que el cuerpo de la respuesta se convierta a JSON\n        const data = await response.json();\n\n        console.log('Datos recibidos mediante el protocolo \"Async/await\":', data.iss_position);\n    } catch (error) {\n        // Etapa 3 (Error): Capturamos cualquier error del bloque try\n        console.error('Fallo de comunicaci\u00f3n mediante el protocolo \"Async/await\":', error);\n    }\n\n    console.log('...comando enviado, el MCC sigue trabajando...');\n}\n</code></pre></p> <p>Ventajas:</p> <ul> <li>Legibilidad: El c\u00f3digo se ve casi como c\u00f3digo s\u00edncrono normal, es f\u00e1cil de leer de arriba abajo.</li> <li>Manejo de errores: Se utiliza el bloque <code>try...catch</code> est\u00e1ndar y familiar.</li> <li>Depuraci\u00f3n: Es mucho m\u00e1s f\u00e1cil de depurar, ya que se pueden establecer puntos de interrupci\u00f3n (breakpoints) en cada l\u00ednea con <code>await</code>.</li> </ul> <p>Desventajas:</p> <ul> <li>Es f\u00e1cil olvidar <code>await</code> o <code>async</code>, lo que provocar\u00e1 errores.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/5/#4-cuando-usar-que-protocolo","title":"4. \u00bfCu\u00e1ndo usar qu\u00e9 protocolo?","text":"Situaci\u00f3n Enfoque recomendado \u00bfPor qu\u00e9? La mayor\u00eda de los casos <code>async/await</code> El c\u00f3digo es m\u00e1s limpio, m\u00e1s f\u00e1cil de leer y depurar. Es el est\u00e1ndar moderno. Cadena simple de 1-2 acciones Promise con <code>.then()</code> Funciona bien, el c\u00f3digo sigue siendo compacto. Ejecuci\u00f3n paralela de m\u00faltiples solicitudes <code>Promise.all()</code> Este m\u00e9todo permite ejecutar varias promesas simult\u00e1neamente y esperar a que todas se completen. <code>async/await</code> se combina perfectamente con \u00e9l. <p>Ejemplo con <code>Promise.all()</code>: <pre><code>async function getParallelData() {\n    try {\n        // Iniciamos ambas solicitudes simult\u00e1neamente\n        const [shipsResponse, launchesResponse] = await Promise.all([\n            fetch('https://api.spacexdata.com/v4/rockets'),\n            fetch('https://api.spacexdata.com/v4/launches/latest')\n        ]);\n\n        if (!shipsResponse.ok || !launchesResponse.ok) {\n            throw new Error('\u00a1Una de las solicitudes fall\u00f3!');\n        }\n\n        const rockets = await shipsResponse.json();\n        const latestLaunch = await launchesResponse.json();\n\n        console.log(`Total de cohetes en la flota: ${rockets.length}`);\n        console.log(`\u00daltimo lanzamiento: ${latestLaunch.name}`);\n    } catch (error) {\n        console.error('Error al obtener datos paralelos:', error);\n    }\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/5/#cuestionario-de-refuerzo","title":"Cuestionario de refuerzo","text":"<p>1. `async/await` es...</p>  a) Un reemplazo para las promesas que funciona de manera diferente  b) Una sintaxis m\u00e1s conveniente para trabajar con promesas  c) Una forma de hacer que JavaScript sea s\u00edncrono <p>2. \u00bfQu\u00e9 palabra clave es obligatoria para una funci\u00f3n dentro de la cual se utiliza `await`?</p>  a) `promise`  b) `function`  c) `async` <p>3. La principal ventaja de `async/await` sobre `.then()`:</p>  a) Mayor velocidad de ejecuci\u00f3n  b) Mejor legibilidad del c\u00f3digo y manejo conveniente de errores a trav\u00e9s de `try...catch`  c) Funciona en navegadores antiguos sin polyfills <p>4. \u00bfQu\u00e9 ocurrir\u00e1 si se olvida `await` antes de `fetch()` dentro de una funci\u00f3n `async`?</p>  a) El c\u00f3digo se ejecutar\u00e1 sin errores, pero la variable contendr\u00e1 una promesa en lugar del resultado  b) JavaScript emitir\u00e1 un error de sintaxis  c) La p\u00e1gina se \"colgar\u00e1\" esperando una respuesta <p>5. `Promise.all()` se utiliza para:</p>  a) Ejecutar promesas estrictamente en orden  b) Iniciar varias promesas en paralelo y esperar a que todas se completen  c) Elegir la m\u00e1s r\u00e1pida de varias promesas Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has aprendido dos sintaxis para gestionar operaciones as\u00edncronas y entendido por qu\u00e9 <code>async/await</code> es la preferida en la mayor\u00eda de los proyectos modernos.</p> <ul> <li>\ud83d\udd17 Has refrescado tus conocimientos sobre Promise con <code>.then()</code>.</li> <li>\ud83d\udee0\ufe0f Has comprendido en profundidad c\u00f3mo funciona <code>async/await</code> y sus ventajas.</li> <li>\u26a1 Has aprendido sobre <code>Promise.all</code> para ejecutar peticiones paralelas.</li> </ul> <p>\u00a1Protocolos de comunicaci\u00f3n aprendidos! En el cap\u00edtulo final de esta secci\u00f3n, uniremos todos nuestros conocimientos y construiremos nuestro \"Centro de Control de Vuelo\", creando una interfaz completa para todas las operaciones CRUD.</p> <p>\ud83d\udccc Pr\u00e1ctica:</p> <ul> <li>Reescribe todas las funciones en tu <code>app.js</code> que a\u00fan utilizan <code>.then()</code> al sintaxis <code>async/await</code>.</li> <li>Intenta a\u00f1adir otra petici\u00f3n en <code>Promise.all()</code> (por ejemplo, a <code>https://api.spacexdata.com/v4/starlink</code>) y muestra los datos.</li> </ul> <p>\u26a0\ufe0f Si hay errores:</p> <ul> <li><code>await is only valid in async functions</code>: Aseg\u00farate de que la funci\u00f3n donde utilizas <code>await</code> est\u00e9 marcada como <code>async</code>.</li> <li>La variable contiene <code>[object Promise]</code>: Has olvidado poner <code>await</code> delante de la funci\u00f3n que devuelve una promesa. ```</li> </ul>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/6/","title":"Cap\u00edtulo 4.6: Creaci\u00f3n de una interfaz sencilla para la API","text":"<p>Tiempo de estudio: 1 hora 15 minutos</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/6/#1-ensamblaje-final-lanzamiento-del-centro-de-control-de-misiones","title":"1. Ensamblaje final: Lanzamiento del \"Centro de Control de Misiones\"","text":"<p>Hemos estudiado todos los sistemas por separado: configuramos la \"antena\" (<code>Fetch</code>), aprendimos a enviar \"comandos\" (<code>GET</code>, <code>POST</code>, <code>DELETE</code>), desarrollamos \"protocolos de emergencia\" (manejo de errores).</p> <p>Ha llegado el momento de unir todos los componentes y lanzar nuestro MCC (Centro de Control de Misiones) \u2014 una interfaz completa e interactiva para la gesti\u00f3n de la flota espacial.</p> <p>Nuestro objetivo:</p> <ul> <li>Crear una interfaz \u00fanica, limpia y comprensible.</li> <li>Implementar un ciclo CRUD completo: creaci\u00f3n, visualizaci\u00f3n, actualizaci\u00f3n y eliminaci\u00f3n de naves.</li> <li>A\u00f1adir retroalimentaci\u00f3n visual para el usuario (carga, \u00e9xito, error).</li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>Pasamos de consolas de prueba individuales a la pantalla principal del MCC. En ella deben estar todos los botones e indicadores necesarios para que un solo operador pueda gestionar toda la flota sin tener que cambiar entre docenas de sistemas diferentes.</p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/6/#2-diseno-de-la-interfaz-tablero-de-instrumentos","title":"2. Dise\u00f1o de la interfaz: \"Tablero de Instrumentos\"","text":"<p>Necesitaremos un HTML m\u00e1s estructurado. Utilizaremos \"tarjetas\" para mostrar las naves y una ventana modal para editarlas.</p> <p>Actualizamos <code>index.html</code>: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;MCC v2.0 - Gesti\u00f3n de Flota&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt; &lt;!-- Conectamos los estilos --&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Panel de control de la flota espacial&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        &lt;section id=\"fleet-controls\"&gt;\n            &lt;button id=\"load-fleet-btn\"&gt;Actualizar lista de flota&lt;/button&gt;\n            &lt;button id=\"show-create-form-btn\"&gt;Lanzar nueva nave&lt;/button&gt;\n        &lt;/section&gt;\n\n        &lt;section id=\"fleet-display\"&gt;\n            &lt;h2&gt;Composici\u00f3n actual de la flota&lt;/h2&gt;\n            &lt;div id=\"fleet-list\" class=\"cards-container\"&gt;\n                &lt;!-- Las tarjetas de las naves ir\u00e1n aqu\u00ed --&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n\n    &lt;!-- Ventana modal para crear/editar (inicialmente oculta) --&gt;\n    &lt;div id=\"modal\" class=\"modal-overlay\" style=\"display: none;\"&gt;\n        &lt;div class=\"modal-content\"&gt;\n            &lt;h2 id=\"modal-title\"&gt;Lanzamiento de nueva nave&lt;/h2&gt;\n            &lt;form id=\"ship-form\"&gt;\n                &lt;input type=\"hidden\" id=\"ship-id\"&gt;\n                &lt;input type=\"text\" id=\"ship-name\" placeholder=\"Nombre\" required&gt;\n                &lt;input type=\"text\" id=\"ship-type\" placeholder=\"Tipo\" required&gt;\n                &lt;input type=\"number\" id=\"ship-year\" placeholder=\"A\u00f1o de lanzamiento\" required&gt;\n                &lt;input type=\"text\" id=\"ship-status\" placeholder=\"Estado\" required&gt;\n                &lt;div class=\"modal-actions\"&gt;\n                    &lt;button type=\"submit\" id=\"save-btn\"&gt;Guardar&lt;/button&gt;\n                    &lt;button type=\"button\" id=\"cancel-btn\"&gt;Cancelar&lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/form&gt;\n            &lt;div id=\"notification-area\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/6/#3-anadimos-un-diseno-espacial-stylecss","title":"3. A\u00f1adimos un dise\u00f1o \"espacial\": <code>style.css</code>","text":"<p>Cree el archivo <code>style.css</code> para que nuestro MCC tenga una apariencia digna. <pre><code>/* style.css */\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background-color: #1a1a2e;\n    color: #e0e0e0;\n    margin: 0;\n    padding: 20px;\n}\nheader { text-align: center; margin-bottom: 20px; }\nbutton {\n    background-color: #4a4e69;\n    color: white;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\nbutton:hover { background-color: #6a6e94; }\n.cards-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 20px;\n}\n.card {\n    background-color: #2a2a4e;\n    border: 1px solid #4a4e69;\n    border-radius: 8px;\n    padding: 15px;\n}\n.card h3 { margin-top: 0; color: #9394a5; }\n.card-actions { margin-top: 15px; }\n\n/* Estilos para la ventana modal */\n.modal-overlay {\n    position: fixed;\n    top: 0; left: 0;\n    width: 100%; height: 100%;\n    background-color: rgba(0,0,0,0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.modal-content {\n    background: #1a1a2e;\n    padding: 20px;\n    border-radius: 8px;\n    border: 1px solid #4a4e69;\n    width: 90%;\n    max-width: 500px;\n}\n#ship-form input {\n    width: calc(100% - 20px);\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 4px;\n    border: 1px solid #4a4e69;\n    background-color: #2a2a4e;\n    color: white;\n}\n.modal-actions { text-align: right; }\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/6/#4-reensamblaje-completo-de-la-logica-appjs","title":"4. Reensamblaje completo de la l\u00f3gica: <code>app.js</code>","text":"<p>Ahora escribiremos la versi\u00f3n final de <code>app.js</code>, uniendo todos nuestros conocimientos. <pre><code>// app.js\n\n// --- Elementos DOM ---\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetListContainer = document.getElementById('fleet-list');\nconst modal = document.getElementById('modal');\nconst modalTitle = document.getElementById('modal-title');\nconst shipForm = document.getElementById('ship-form');\nconst saveBtn = document.getElementById('save-btn');\nconst cancelBtn = document.getElementById('cancel-btn');\nconst showCreateFormBtn = document.getElementById('show-create-form-btn');\nconst notificationArea = document.getElementById('notification-area');\n\n// --- Funciones para la UI ---\n\nfunction showNotification(message, isError = false) {\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? '#ff6b6b' : '#6bff6b';\n}\n\nfunction openModalForCreate() {\n    shipForm.reset();\n    document.getElementById('ship-id').value = '';\n    modalTitle.textContent = 'Lanzar nueva nave';\n    modal.style.display = 'flex';\n}\n\nfunction openModalForEdit(ship) {\n    shipForm.reset();\n    document.getElementById('ship-id').value = ship.id;\n    document.getElementById('ship-name').value = ship.name;\n    document.getElementById('ship-type').value = ship.type;\n    document.getElementById('ship-year').value = ship.launch_year;\n    document.getElementById('ship-status').value = ship.status;\n    modalTitle.textContent = `Edici\u00f3n: ${ship.name}`;\n    modal.style.display = 'flex';\n}\n\nfunction closeModal() {\n    modal.style.display = 'none';\n    notificationArea.textContent = '';\n}\n\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;Tipo: ${ship.type}&lt;/p&gt;\n        &lt;p&gt;A\u00f1o de lanzamiento: ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;Estado: ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;Editar&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;Dar de baja&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n\n// --- L\u00f3gica de la API y visualizaci\u00f3n ---\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;Cargando telemetr\u00eda...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships');\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;No hay naves en el registro.&lt;/p&gt;';\n            return;\n        }\n        ships.forEach(ship =&gt; {\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;Error al cargar la flota: ${error.message}&lt;/p&gt;`;\n    }\n}\n\nasync function handleSaveShip(event) {\n    event.preventDefault();\n    const shipId = document.getElementById('ship-id').value;\n    const shipData = {\n        name: document.getElementById('ship-name').value,\n        type: document.getElementById('ship-type').value,\n        launch_year: parseInt(document.getElementById('ship-year').value),\n        status: document.getElementById('ship-status').value\n    };\n\n    try {\n        let response;\n        if (shipId) {\n            // Actualizaci\u00f3n (PUT)\n            response = await apiRequest(`/spaceships/${shipId}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`\u00a1Nave \"${response.name}\" actualizada con \u00e9xito!`);\n        } else {\n            // Creaci\u00f3n (POST)\n            response = await apiRequest('/spaceships', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`\u00a1Nave \"${response.name}\" lanzada con \u00e9xito! ID: ${response.id}`);\n        }\n\n        setTimeout(() =&gt; {\n            closeModal();\n            fetchAndDisplayFleet();\n        }, 1500);\n\n    } catch (error) {\n        showNotification(error.message, true);\n    }\n}\n\nasync function handleDeleteShip(shipId) {\n    if (!confirm(`\u00bfEst\u00e1 seguro de que desea dar de baja la nave con ID ${shipId}?`)) return;\n\n    try {\n        await apiRequest(`/spaceships/${shipId}`, { method: 'DELETE' });\n        alert('Nave dada de baja con \u00e9xito.');\n        fetchAndDisplayFleet();\n    } catch (error) {\n        alert(`Error al dar de baja: ${error.message}`);\n    }\n}\n\n// --- Manejadores de eventos ---\n\ndocument.addEventListener('DOMContentLoaded', fetchAndDisplayFleet);\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\nshowCreateFormBtn.addEventListener('click', openModalForCreate);\ncancelBtn.addEventListener('click', closeModal);\nshipForm.addEventListener('submit', handleSaveShip);\n\nfleetListContainer.addEventListener('click', async (event) =&gt; {\n    const target = event.target;\n    if (target.classList.contains('delete-btn')) {\n        handleDeleteShip(target.dataset.shipId);\n    }\n    if (target.classList.contains('edit-btn')) {\n        try {\n            const ship = await apiRequest(`/spaceships/${target.dataset.shipId}`);\n            openModalForEdit(ship);\n        } catch (error) {\n            alert(`No se pudieron cargar los datos para edici\u00f3n: ${error.message}`);\n        }\n    }\n});\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/6/#5-pruebas-finales","title":"5. Pruebas finales","text":"<ol> <li>Inicie el servidor FastAPI: <code>uvicorn main:app --reload</code></li> <li>Abra <code>index.html</code> en el navegador (a trav\u00e9s de Live Server).</li> <li>Verifique el ciclo completo:<ul> <li>La lista de naves deber\u00eda cargarse autom\u00e1ticamente.</li> <li>Haga clic en \"Lanzar nueva nave\", complete el formulario y guarde. Aseg\u00farese de que la nueva nave aparezca en la lista.</li> <li>Haga clic en \"Editar\" en cualquier nave, cambie los datos y guarde. Aseg\u00farese de que la informaci\u00f3n se haya actualizado.</li> <li>Haga clic en \"Dar de baja\" en cualquier nave, confirme la acci\u00f3n. Aseg\u00farese de que desaparezca de la lista.</li> <li>Verifique todos los escenarios de error (datos incorrectos, servidor detenido).</li> </ul> </li> </ol>"},{"location":"es/Cap%C3%ADtulo%204%20Trabajar%20con%20la%20API%20en%20el%20front-end/6/#cuestionario-de-consolidacion","title":"Cuestionario de consolidaci\u00f3n","text":"<p>1. Una ventana modal en una interfaz web es...</p>  a) Una nueva etiqueta en HTML6  b) Un di\u00e1logo emergente que bloquea el resto de la interfaz  c) Una ventana para mostrar errores de consola <p>2. El evento `DOMContentLoaded` ocurre cuando...</p>  a) Todas las im\u00e1genes y estilos se han cargado completamente  b) El navegador ha construido el \u00e1rbol DOM a partir del HTML, pero los recursos a\u00fan pueden estar carg\u00e1ndose  c) Se ha producido un error al cargar la p\u00e1gina <p>3. \u00bfPor qu\u00e9 en la versi\u00f3n final usamos un \u00fanico formulario para crear y editar?</p>  a) Para evitar la duplicaci\u00f3n de c\u00f3digo HTML y simplificar la l\u00f3gica  b) Porque el navegador no permite tener m\u00e1s de un formulario en la p\u00e1gina  c) Es un requisito de FastAPI <p>4. `data-ship-id=\"${ship.id}\"` es un ejemplo de...</p>  a) Clase CSS  b) Variable de JavaScript  c) Atributo de datos personalizado para almacenar datos en HTML <p>5. La refactorizaci\u00f3n del c\u00f3digo (por ejemplo, mover la l\u00f3gica a `api.js`) es necesaria para...</p>  a) Complicar el c\u00f3digo para protegerlo de la copia  b) Mejorar la legibilidad, mantenibilidad y reutilizaci\u00f3n del c\u00f3digo  c) Reducir el tama\u00f1o del archivo final Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo</p> <p>Has completado con \u00e9xito la construcci\u00f3n y el lanzamiento de tu \"Centro de Control de Vuelo\".</p> <ul> <li>\ud83d\udda5\ufe0f Has creado una interfaz HTML/CSS estructurada y estilizada.</li> <li>\u2699\ufe0f Has escrito c\u00f3digo JavaScript limpio y modular, implementando un ciclo CRUD completo.</li> <li>\ud83d\udef0\ufe0f Tu frontend ahora puede gestionar completamente el backend creado con FastAPI.</li> </ul> <p>\u00a1Felicidades por completar con \u00e9xito el Cap\u00edtulo 4! Has recorrido el camino completo desde el env\u00edo de una simple solicitud <code>fetch</code> hasta la creaci\u00f3n de una aplicaci\u00f3n web completa que interact\u00faa con tu propia API.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/1/","title":"Cap\u00edtulo 5.1: Plantillas Blade en Laravel","text":"<p>Tiempo de estudio: 40 minutos</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/1/#1-que-es-blade-tu-diseno-inteligente","title":"1. \u00bfQu\u00e9 es Blade? Tu dise\u00f1o \"inteligente\"","text":"<p>Hasta ahora hemos trabajado con dos extremos: un <code>index.html</code> puro y una respuesta JSON pura de una API. Pero, \u00bfc\u00f3mo crear p\u00e1ginas web completas que muestren din\u00e1micamente los datos de nuestro backend?</p> <p>Blade es el motor de plantillas integrado en Laravel. Nos permite escribir HTML normal, pero con \"superpoderes\":</p> <ul> <li>Insertar variables y ejecutar c\u00f3digo PHP con una sintaxis elegante.</li> <li>Crear \"dise\u00f1os\" de p\u00e1gina reutilizables (cabeceras, pies de p\u00e1gina).</li> <li>Usar bucles y condiciones directamente en el c\u00f3digo HTML.</li> <li>Proteger autom\u00e1ticamente contra ataques XSS.</li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>Imagina que HTML es un plano simple de una nave espacial. Blade es un sistema CAD avanzado. No solo dibujas l\u00edneas, sino que a\u00f1ades objetos \"inteligentes\". Dices: \"Aqu\u00ed ir\u00e1 la lista de la tripulaci\u00f3n\", y Blade autom\u00e1ticamente solicita los datos y los rellena. \"Aqu\u00ed ir\u00e1 la pantalla principal\", y Blade inserta la interfaz est\u00e1ndar.</p> <p>Todos los archivos Blade tienen la extensi\u00f3n <code>.blade.php</code> y se almacenan en la carpeta <code>resources/views/</code>.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/1/#2-fundamentos-de-la-sintaxis-mostrar-datos","title":"2. Fundamentos de la sintaxis: Mostrar datos","text":"<p>Lo m\u00e1s simple que hace Blade es mostrar datos.</p> <p>Sintaxis <code>{{ }}</code></p> <p>Estas dobles llaves son el comando para Blade de \"tomar una variable y mostrar su contenido de forma segura\".</p> <p>Ejemplo:</p> <ol> <li> <p>Ruta en <code>routes/web.php</code>: <pre><code>&lt;?php\nRoute::get('/mission-briefing', function () {\n    $mission = 'Explorar el sistema Kepler-186';\n    return view('briefing', ['mission_name' =&gt; $mission]);\n});\n</code></pre></p> <ul> <li><code>view('briefing', ...)</code> le dice a Laravel que busque el archivo <code>resources/views/briefing.blade.php</code>.</li> <li><code>['mission_name' =&gt; $mission]</code> es un array de datos que \"pasamos\" a nuestra vista.</li> </ul> </li> <li> <p>Vista en <code>resources/views/briefing.blade.php</code>: <pre><code>&lt;h1&gt;Misi\u00f3n Centro de Control&lt;/h1&gt;\n&lt;p&gt;Tarea actual: {{ $mission_name }}&lt;/p&gt;\n</code></pre></p> </li> </ol> <p>Resultado en el navegador en la direcci\u00f3n <code>/mission-briefing</code>: <pre><code>&lt;h1&gt;Misi\u00f3n Centro de Control&lt;/h1&gt;\n&lt;p&gt;Tarea actual: Explorar el sistema Kepler-186&lt;/p&gt;\n</code></pre></p> <p>\ud83d\udee1\ufe0f Importante saber: Blade escapa autom\u00e1ticamente todos los datos dentro de <code>{{ }}</code>. Esto significa que si una variable contiene etiquetas HTML o un script malicioso, se mostrar\u00e1n como texto normal y no se ejecutar\u00e1n. Esta es una protecci\u00f3n incorporada contra ataques XSS.</p> <p>Para mostrar HTML sin escapar (\u00a1haga esto con precauci\u00f3n!) se utiliza la sintaxis <code>{!! $variable !!}</code>.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/1/#3-directivas-anadir-logica-en-html","title":"3. Directivas: A\u00f1adir l\u00f3gica en HTML","text":"<p>Las directivas Blade comienzan con el s\u00edmbolo <code>@</code>. Permiten usar bucles, condiciones y mucho m\u00e1s.</p> <p>Condiciones (<code>@if</code>, <code>@else</code>): <pre><code>@if($planet-&gt;is_habitable)\n    &lt;p style=\"color: green;\"&gt;\u00a1Planeta habitable!&lt;/p&gt;\n@else\n    &lt;p style=\"color: red;\"&gt;Se requiere traje espacial. La atm\u00f3sfera es hostil.&lt;/p&gt;\n@endif\n</code></pre></p> <p>Bucles (<code>@foreach</code>, <code>@forelse</code>):</p> <p><code>@forelse</code> es una directiva muy conveniente que combina un bucle y una comprobaci\u00f3n de vac\u00edo. <pre><code>&lt;h2&gt;Lista de planetas en el sistema:&lt;/h2&gt;\n&lt;ul&gt;\n    @forelse($planets as $planet)\n        &lt;li&gt;\n            {{ $loop-&gt;iteration }}. {{ $planet-&gt;name }}\n            &lt;!-- $loop - variable especial disponible en el bucle --&gt;\n        &lt;/li&gt;\n    @empty\n        &lt;li&gt;No se han detectado planetas en este sistema.&lt;/li&gt;\n    @endforelse\n&lt;/ul&gt;\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/1/#4-disenos-y-secciones-no-te-repitas-dry","title":"4. Dise\u00f1os y secciones: No te repitas (DRY)","text":"<p>La capacidad m\u00e1s potente de Blade es la creaci\u00f3n de dise\u00f1os (layouts) reutilizables. No necesitas copiar la cabecera y el pie de p\u00e1gina del sitio en cada p\u00e1gina.</p> <p>Paso 1: Creamos el dise\u00f1o maestro (<code>layout</code>)</p> <p>Crea el archivo <code>resources/views/layouts/app.blade.php</code>: <pre><code>&lt;?php\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;title&gt;Centro de Control - @yield('title')&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"{{ asset('css/style.css') }}\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Centro de Mando de la Flota Gal\u00e1ctica&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        @yield('content') &lt;!-- Aqu\u00ed ir\u00e1 el contenido \u00fanico de la p\u00e1gina --&gt;\n    &lt;/main&gt;\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command. Todos los derechos reservados.&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> -   <code>@yield('title')</code> y <code>@yield('content')</code> son \"slots\" o \"marcadores de posici\u00f3n\".</p> <p>Paso 2: Creamos una vista hija que utiliza el dise\u00f1o</p> <p>Crea el archivo <code>resources/views/planets/index.blade.php</code>: <pre><code>&lt;?php\n@extends('layouts.app') {{-- Heredamos nuestro dise\u00f1o maestro --}}\n\n@section('title', 'Lista de planetas') {{-- Rellenamos la secci\u00f3n 'title' --}}\n\n@section('content') {{-- Rellenamos la secci\u00f3n principal 'content' --}}\n    &lt;h2&gt;Planetas registrados&lt;/h2&gt;\n    &lt;p&gt;Esta es una lista de todos los mundos que conocemos.&lt;/p&gt;\n    {{-- Aqu\u00ed puede ir tu bucle @forelse para mostrar los planetas --}}\n@endsection\n</code></pre></p> <p>Ahora, cuando Laravel renderice <code>planets.index</code>, primero tomar\u00e1 <code>layouts.app</code> y luego insertar\u00e1 en \u00e9l el contenido de las secciones <code>@section</code>.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/1/#cuestionario-para-afianzar-conocimientos","title":"Cuestionario para afianzar conocimientos","text":"<p>1. \u00bfQu\u00e9 extensi\u00f3n tienen los archivos de plantilla Blade?</p>  a) .html  b) .blade.php  c) .php.blade <p>2. \u00bfC\u00f3mo mostrar de forma segura la variable `$name` en Blade?</p>  a)   b) {{ $name }}  c) [[$name]] <p>3. \u00bfQu\u00e9 directiva se utiliza para heredar un dise\u00f1o maestro?</p>  a) @include('layouts.app')  b) @layout('layouts.app')  c) @extends('layouts.app') <p>4. \u00bfQu\u00e9 hace la directiva `@yield('content')`?</p>  a) Define un placeholder (espacio para insertar contenido)  b) Inserta el contenido del archivo `content.blade.php`  c) Finaliza la secci\u00f3n de contenido <p>5. \u00bfQu\u00e9 directiva es ideal para un bucle sobre un array que podr\u00eda estar vac\u00edo?</p>  a) @foreach  b) @while  c) @forelse Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has aprendido los fundamentos de Blade, una potente herramienta para crear p\u00e1ginas web din\u00e1micas. Ahora sabes:</p> <ul> <li>Mostrar datos con protecci\u00f3n autom\u00e1tica contra XSS.</li> <li>Usar directivas para a\u00f1adir l\u00f3gica (<code>@if</code>, <code>@forelse</code>).</li> <li>Crear dise\u00f1os reutilizables con <code>@extends</code> y <code>@yield</code>. Hemos dise\u00f1ado los \"planos\" para los paneles de control de nuestra nave. En el siguiente cap\u00edtulo crearemos \"paneles\" (vistas) concretos para nuestra API y mostraremos datos reales en ellos.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/2/","title":"Cap\u00edtulo 5.2: Creaci\u00f3n de vistas sencillas para la API","text":"<p>Tiempo de estudio: 45 minutos</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/2/#1-tarea-visualizar-datos","title":"1. Tarea: Visualizar datos","text":"<p>Nuestra API en el Cap\u00edtulo 2 puede entregar datos en formato JSON. Esto es excelente para m\u00e1quinas, pero las personas prefieren ver la informaci\u00f3n en p\u00e1ginas web bellamente dise\u00f1adas. Nuestro objetivo es crear dos de esas p\u00e1ginas:</p> <ol> <li>Lista de todos los planetas (<code>/planets</code>)</li> <li>P\u00e1gina de un solo planeta (<code>/planets/{id}</code>)</li> </ol> <p>Para ello, utilizaremos la combinaci\u00f3n \"Ruta \u2192 Controlador \u2192 Vista\".</p> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>Imagine que el JSON de la API son datos de telemetr\u00eda sin procesar, simplemente un flujo de n\u00fameros. Nuestra tarea hoy es crear dos pantallas (dos \"vistas\") en el Centro de Control de la Misi\u00f3n:</p> <ul> <li>Pantalla general: muestra el estado de todos los objetos en el sistema (lista de planetas).</li> <li>Pantalla detallada: al hacer clic en un objeto, muestra toda la informaci\u00f3n sobre \u00e9l (p\u00e1gina de un solo planeta).</li> </ul>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/2/#2-paso-1-creacion-de-un-controlador-para-paginas-web","title":"2. Paso 1: Creaci\u00f3n de un controlador para p\u00e1ginas web","text":"<p>Para la limpieza de la arquitectura, no conviene mezclar la l\u00f3gica de la API y la l\u00f3gica de las p\u00e1ginas web en un solo controlador. Crearemos un nuevo controlador espec\u00edficamente para mostrar nuestras vistas Blade.</p> <p>Ejecute en la terminal: <pre><code>php artisan make:controller Web/PlanetPageController\n</code></pre> Lo creamos en la subcarpeta <code>Web</code> para separarlo de los controladores de API.</p> <p>Abra el archivo creado <code>app/Http/Controllers/Web/PlanetPageController.php</code>.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/2/#paso-2-pagina-con-la-lista-de-todos-los-planetas","title":"Paso 2: P\u00e1gina con la lista de todos los planetas","text":"<p>1. Crear un m\u00e9todo en el controlador: En <code>PlanetPageController</code>, a\u00f1ada el m\u00e9todo <code>index</code>, que obtendr\u00e1 todos los planetas de la base de datos y los pasar\u00e1 a la vista. <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers\\Web;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Planet; // No olvide importar el modelo\n\nclass PlanetPageController extends Controller\n{\n    /**\n     * Muestra la p\u00e1gina con la lista de todos los planetas.\n     */\n    public function index()\n    {\n        // 1. Obtenemos todos los planetas de la DB\n        $planets = Planet::all();\n\n        // 2. Devolvemos la vista y le pasamos los datos\n        return view('planets.index', ['planets' =&gt; $planets]);\n    }\n}\n</code></pre></p> <p>2. Crear una vista Blade: Cree el archivo <code>resources/views/planets/index.blade.php</code>. Usaremos el layout creado en el cap\u00edtulo anterior.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Planetas&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n        }\n        .container {\n            max-width: 960px;\n            margin: 0 auto;\n        }\n        h2 {\n            color: #1a202c;\n        }\n        hr {\n            border: none;\n            border-top: 1px solid #e2e8f0;\n            margin: 1.5em 0;\n        }\n        .planet-list {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n            gap: 1.5em;\n        }\n        .planet-card {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 1.5em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n            transition: transform 0.2s;\n        }\n        .planet-card:hover {\n            transform: translateY(-5px);\n        }\n        .planet-card h3 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-card p {\n            margin-bottom: 0.5em;\n            color: #4a5568;\n        }\n        .planet-card a {\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .planet-card a:hover {\n            text-decoration: underline;\n        }\n        .no-planets {\n            color: #718096;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h2&gt;Lista de todos los planetas conocidos&lt;/h2&gt;\n        &lt;hr&gt;\n        &lt;div class=\"planet-list\"&gt;\n            @forelse($planets as $planet)\n                &lt;div class=\"planet-card\"&gt;\n                    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n                    &lt;p&gt;Sistema solar: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n                    &lt;p&gt;Di\u00e1metro: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n                    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;Saber m\u00e1s &amp;rarr;&lt;/a&gt;\n                &lt;/div&gt;\n            @empty\n                &lt;p class=\"no-planets\"&gt;No hay planetas en la base de datos. Por favor, ejecute los seeders.&lt;/p&gt;\n            @endforelse\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li><code>number_format(...)</code> \u2014 es una funci\u00f3n PHP com\u00fan para formatear n\u00fameros de forma agradable. Se puede usar directamente en Blade.</li> </ul> <p>3. Crear una ruta en <code>routes/web.php</code>: <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// ...\n\nRoute::get('/planets', [PlanetPageController::class, 'index']);\n</code></pre> \u00a1Ahora, si navega a <code>/planets</code> en su navegador, ver\u00e1 la p\u00e1gina con la lista de planetas!</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/2/#4-paso-3-pagina-de-un-solo-planeta","title":"4. Paso 3: P\u00e1gina de un solo planeta","text":"<p>1. Crear un m\u00e9todo en el controlador:</p> <p>En <code>PlanetPageController</code>, a\u00f1adiremos el m\u00e9todo <code>show</code>. Gracias al Route Model Binding, Laravel encontrar\u00e1 autom\u00e1ticamente el planeta por ID y lo pasar\u00e1 al m\u00e9todo.</p> <pre><code>&lt;?php\n// Dentro de la clase PlanetPageController\n/**\n * Muestra la p\u00e1gina de un planeta espec\u00edfico.\n */\npublic function show(Planet $planet)\n{\n    // Laravel ya ha encontrado el planeta para nosotros.\n    // Si no se encuentra, devolver\u00e1 autom\u00e1ticamente un error 404.\n\n    return view('planets.show', ['planet' =&gt; $planet]);\n}\n</code></pre> <p>2. Crear una vista Blade:</p> <p>Cree el archivo <code>resources/views/planets/show.blade.php</code>.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;{{ $planet-&gt;name }}&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n        }\n        .container {\n            max-width: 600px;\n            width: 100%;\n        }\n        .planet-detail {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 2em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n        }\n        .planet-detail h1 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-detail p {\n            margin-bottom: 1em;\n            color: #4a5568;\n            font-size: 1.1em;\n        }\n        .back-link {\n            display: inline-block;\n            margin-top: 1.5em;\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .back-link:hover {\n            text-decoration: underline;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"planet-detail\"&gt;\n            @if($planet-&gt;image_url)\n                &lt;img src=\"{{ $planet-&gt;image_url }}\" alt=\"Imagen de {{ $planet-&gt;name }}\" style=\"max-width: 100%; height: auto; border-radius: 0.5em; margin-bottom: 1em;\"&gt;\n            @endif\n            &lt;h1&gt;{{ $planet-&gt;name }}&lt;/h1&gt;\n            @if($planet-&gt;description)\n                &lt;p&gt;{{ $planet-&gt;description }}&lt;/p&gt;\n            @endif\n            &lt;p&gt;&lt;strong&gt;Sistema solar:&lt;/strong&gt; {{ $planet-&gt;solar_system }}&lt;/p&gt;\n            &lt;p&gt;&lt;strong&gt;Di\u00e1metro:&lt;/strong&gt; {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n            &lt;a href=\"/planets\" class=\"back-link\"&gt;&amp;larr; Volver a la lista de planetas&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>3. Crear una ruta en <code>routes/web.php</code>: <pre><code>// \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u044d\u0442\u043e\u0442 \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u043f\u043e\u0441\u043b\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430 \u0434\u043b\u044f /planets\nRoute::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n</code></pre> -   El nombre del par\u00e1metro <code>{planet}</code> debe coincidir con el nombre de la variable en el m\u00e9todo del controlador (<code>show(Planet $planet)</code>) para que Route Model Binding funcione correctamente.</p> <p>Ahora, al hacer clic en el enlace \"Saber m\u00e1s\" en la p\u00e1gina de la lista, acceder\u00e1 a la p\u00e1gina de detalles de un planeta espec\u00edfico.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/2/#cuestionario-de-consolidacion","title":"Cuestionario de consolidaci\u00f3n","text":"<p>1. \u00bfCu\u00e1l es el mejor enfoque para separar la l\u00f3gica de la API y las p\u00e1ginas web?</p>  a) Usar un solo controlador para todo  b) Crear controladores separados (por ejemplo, en las carpetas `Web` y `Api`)  c) Poner toda la l\u00f3gica en el archivo de rutas <p>2. \u00bfQu\u00e9 hace return view('planets.index', ['planets' =&gt; $planets]);?</p>  a) Devuelve un array JSON con los datos de los planetas  b) Renderiza el archivo resources/views/planets/index.blade.php y le pasa la variable `$planets`  c) Redirige a la URL /planets/index <p>3. \u00bfQu\u00e9 es Route Model Binding en el contexto de `show(Planet $planet)`?</p>  a) Laravel vincula manualmente la ruta con el modelo en la configuraci\u00f3n  b) Laravel encuentra autom\u00e1ticamente un registro `Planet` en la DB usando el par\u00e1metro de la URL (`{planet}`)  c) Laravel crea un nuevo planeta si no se encuentra <p>4. \u00bfC\u00f3mo se puede formatear la fecha del campo `created_at` en Blade?</p>  a) {{ $planet-&gt;created_at-&gt;format('Y-m-d') }}  b) {{ format_date($planet-&gt;created_at) }}  c) Esto solo se puede hacer en el controlador <p>5. Si la ruta es `/posts/{post}`, \u00bfc\u00f3mo deber\u00eda ser la firma del m\u00e9todo en el controlador para que funcione el Route Model Binding?</p>  a) public function show(Post $post)  b) public function show(Post $p)  c) public function show($post) Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has creado con \u00e9xito un \"escaparate\" para tu API, utilizando la arquitectura Laravel MVC. Ahora tienes:</p> <ul> <li>Un controlador separado para la l\u00f3gica de las p\u00e1ginas web.</li> <li>Una p\u00e1gina din\u00e1mica con una lista de todos los planetas, que obtiene datos de la DB.</li> <li>Una p\u00e1gina de detalles para cada planeta, utilizando Route Model Binding.</li> <li>Dos rutas web en <code>routes/web.php</code> para acceder a estas p\u00e1ginas.</li> </ul> <p>Has transformado los datos brutos en informaci\u00f3n comprensible y \u00fatil para el usuario. En el siguiente cap\u00edtulo, a\u00f1adiremos interactividad, incrustando JavaScript en nuestras vistas Blade para interactuar con la API sin recargar la p\u00e1gina.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/3/","title":"Cap\u00edtulo 5.3: Incrustaci\u00f3n de JavaScript en Vistas de Laravel","text":"<p>Tiempo de estudio: 50 minutos</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/3/#1-dos-enfoques-de-javascript-en-la-web","title":"1. Dos enfoques de JavaScript en la web","text":"<p>Hasta ahora hemos trabajado con Server-Side Rendering (SSR) \u2014 el servidor (Laravel) generaba el HTML listo (a trav\u00e9s de Blade) y lo enviaba al navegador. Esto es excelente para el SEO y una carga inicial r\u00e1pida.</p> <p>Ahora a\u00f1adiremos Client-Side Interactions \u2014 el navegador, una vez cargada la p\u00e1gina, ejecutar\u00e1 c\u00f3digo JavaScript para:</p> <ul> <li>Enviar solicitudes a nuestra API sin recargar la p\u00e1gina.</li> <li>Actualizar din\u00e1micamente partes de la p\u00e1gina (por ejemplo, a\u00f1adir un nuevo planeta a la lista).</li> <li>Mostrar notificaciones y ventanas modales.</li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>Imagine que SSR es recibir un mapa completo de un sistema estelar, impreso en el Centro de Control de Misiones (servidor). Usted ve todos los objetos en el momento de la impresi\u00f3n.</p> <p>Client-Side JS es su tableta personal (navegador), que se comunica en tiempo real con los sat\u00e9lites (API) y actualiza la posici\u00f3n de los objetos en su mapa, sin solicitar un nuevo mapa de papel del Centro de Control de Misiones.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/3/#2-donde-almacenar-y-como-incluir-codigo-js","title":"2. D\u00f3nde almacenar y c\u00f3mo incluir c\u00f3digo JS","text":"<p>Como ya hemos descubierto, todos los recursos p\u00fablicos (CSS, JS, im\u00e1genes) deben ubicarse en la carpeta <code>public</code>.</p> <p>Estructura correcta:</p> <ol> <li>Archivos fuente: Todo su c\u00f3digo JS principal debe estar en <code>public/js/</code>. Por ejemplo, <code>public/js/planets.js</code>.</li> <li>Inclusi\u00f3n en Blade: Utilice el ayudante <code>asset()</code> para generar la URL correcta.</li> </ol> <p>Ejemplo de inclusi\u00f3n en la plantilla <code>layouts/app.blade.php</code>: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    {{-- ... --}}\n&lt;/head&gt;\n&lt;body&gt;\n    {{-- ... header y main ... --}}\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command.&lt;/p&gt;\n    &lt;/footer&gt;\n\n    {{-- Es mejor incluir los scripts al final del body para acelerar el renderizado de la p\u00e1gina --}}\n    &lt;script src=\"{{ asset('js/planets.js') }}\"&gt;&lt;/script&gt;\n    @stack('scripts') {{-- Creamos un \"slot\" para scripts de una p\u00e1gina espec\u00edfica --}}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <ul> <li><code>@stack('scripts')</code> \u2014 esta es una potente directiva de Blade. Permite a las vistas hijas \"empujar\" su propio c\u00f3digo JS a esta ubicaci\u00f3n. Esto es \u00fatil cuando una p\u00e1gina necesita un script \u00fanico, y otra no.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/3/#3-ejemplo-boton-eliminar-con-confirmacion","title":"3. Ejemplo: Bot\u00f3n \"Eliminar\" con confirmaci\u00f3n","text":"<p>Vamos a a\u00f1adir un bot\u00f3n \"Eliminar\" a la p\u00e1gina de la lista de planetas (<code>planets/index.blade.php</code>) para cada planeta, que funcionar\u00e1 a trav\u00e9s de JavaScript y la API Fetch.</p> <p>Paso 1: A\u00f1adir el bot\u00f3n en <code>resources/views/planets/index.blade.php</code></p> <p>Modifique la tarjeta del planeta, a\u00f1adiendo un bot\u00f3n con atributos de datos: <pre><code>{{-- ... dentro del bucle @forelse ... --}}\n&lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n    &lt;p&gt;Sistema solar: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n    &lt;p&gt;Di\u00e1metro: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;Saber m\u00e1s &amp;rarr;&lt;/a&gt;\n    &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"/api/planets/{{ $planet-&gt;id }}\"&gt;\n        Dar de baja\n    &lt;/button&gt;\n&lt;/div&gt;\n&lt;!-- ... Antes de la etiqueta de cierre del body ... --&gt;\n&lt;script src=\"{{ asset('js/planets.js') }}\" defer&gt;&lt;/script&gt;\n</code></pre></p> <ul> <li><code>id=\"planet-card-{{ $planet-&gt;id }}\"</code> \u2014 un ID \u00fanico para toda la tarjeta, para que podamos eliminarla del DOM.</li> <li><code>data-id</code> y <code>data-url</code> \u2014 una forma conveniente de pasar datos de PHP (Blade) a JavaScript.</li> </ul> <p>Paso 2: Escribir la l\u00f3gica JavaScript</p> <p>Cree el archivo <code>public/js/planets.js</code> y a\u00f1ada el siguiente c\u00f3digo: <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    // Encontrar todos los botones \"Eliminar\"\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            const planetId = event.target.dataset.id;\n            const apiUrl = event.target.dataset.url;\n\n            if (!confirm(`\u00bfEst\u00e1 seguro de que desea dar de baja el planeta con ID ${planetId}? Esta acci\u00f3n es irreversible.`)) {\n                return; // El usuario hizo clic en \"Cancelar\"\n            }\n\n            try {\n                // Enviar una solicitud DELETE a nuestra API\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        // M\u00e1s tarde a\u00f1adiremos el token CSRF aqu\u00ed\n                    }\n                });\n\n                if (response.status === 204) { // 204 No Content - eliminaci\u00f3n exitosa\n                    // Eliminar la tarjeta del planeta de la p\u00e1gina\n                    const cardToRemove = document.getElementById(`planet-card-${planetId}`);\n                    if (cardToRemove) {\n                        cardToRemove.remove();\n                    }\n                    alert('El planeta ha sido dado de baja exitosamente.');\n                } else {\n                    // Si la API devolvi\u00f3 un error\n                    const errorData = await response.json();\n                    alert(`Error: ${errorData.message || 'No se pudo eliminar el planeta.'}`);\n                }\n            } catch (error) {\n                console.error('Error al enviar la solicitud:', error);\n                alert('Ocurri\u00f3 un error de red. Int\u00e9ntelo de nuevo.');\n            }\n        });\n    });\n});\n</code></pre></p> <p>Ahora, si actualiza la p\u00e1gina <code>/planets</code>, aparecer\u00e1n los botones de \"Dar de baja\", y al hacer clic en ellos se activar\u00e1 nuestro c\u00f3digo JavaScript!</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/3/#4-pasar-datos-de-blade-a-javascript","title":"4. Pasar datos de Blade a JavaScript","text":"<p>A veces es necesario pasar a JS no solo una cadena, sino un array o un objeto completo.</p> <p>Forma incorrecta (vulnerable): <pre><code>let planets = {{ $planets }}; // Esto causar\u00e1 un error de sintaxis y es inseguro\n</code></pre></p> <p>Forma correcta (a trav\u00e9s de JSON): Utilice la directiva <code>@json</code>. Transforma de forma segura un array/objeto PHP en un objeto JSON v\u00e1lido.</p> <p>Ejemplo en <code>planets/index.blade.php</code>: <pre><code>@extends('layouts.app')\n{{-- ... --}}\n@section('content')\n    {{-- ... --}}\n@endsection\n\n@push('scripts') {{-- \"Empujamos\" nuestro script al slot @stack('scripts') en la plantilla --}}\n&lt;script&gt;\n    // Laravel convierte de forma segura la colecci\u00f3n $planets en un array JSON\n    const planetsData = @json($planets);\n\n    // Ahora podemos trabajar con este array en JS\n    console.log('Datos de los planetas, pasados desde Blade:', planetsData);\n    alert(`\u00a1Se han cargado ${planetsData.length} planetas!`);\n&lt;/script&gt;\n@endpush\n</code></pre></p> <ul> <li><code>@push('scripts')</code> coloca el contenido dentro de <code>@stack('scripts')</code> en <code>layouts/app.blade.php</code>. Esto permite a\u00f1adir scripts solo a las p\u00e1ginas donde realmente se necesitan.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/3/#cuestionario-de-refuerzo","title":"Cuestionario de refuerzo","text":"<p>1. \u00bfD\u00f3nde deben almacenarse los archivos JS y CSS p\u00fablicos en un proyecto Laravel?</p>  a) resources/js  b) storage/app/public  c) public/ <p>2. \u00bfQu\u00e9 ayudante de Blade se utiliza para generar correctamente la URL de los recursos (JS, CSS)?</p>  a) url()  b) asset()  c) public_path() <p>3. \u00bfQu\u00e9 hace el par de directivas `@push('scripts')` / `@stack('scripts')`?</p>  a) Permite que una vista hija a\u00f1ada su propio c\u00f3digo JS en un lugar espec\u00edfico de la plantilla padre  b) Combina todos los archivos JS en uno  c) Env\u00eda el c\u00f3digo JS al servidor <p>4. \u00bfC\u00f3mo se pasa de forma segura un array PHP `$data` a JavaScript desde Blade?</p>  a) let jsData = {{ $data }};  b) let jsData = '@php echo json_encode($data); @endphp';  c) let jsData = @json($data); <p>5. \u00bfPor qu\u00e9 se recomienda incluir los scripts JS al final de la etiqueta body?</p>  a) Para que no bloqueen el renderizado del contenido HTML principal de la p\u00e1gina  b) Es un requisito del est\u00e1ndar HTML5  c) As\u00ed los scripts se ejecutan m\u00e1s r\u00e1pido Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has aprendido a dar vida a las p\u00e1ginas est\u00e1ticas de Blade, a\u00f1adiendo l\u00f3gica del lado del cliente. Habilidades clave:</p> <ul> <li>Organizaci\u00f3n y conexi\u00f3n correctas de archivos JS en un proyecto Laravel.</li> <li>Uso de atributos <code>data-*</code> para pasar datos de HTML a JS.</li> <li>Interacci\u00f3n din\u00e1mica con la API usando Fetch sin recargar la p\u00e1gina.</li> <li>Paso seguro de variables PHP a JavaScript usando la directiva <code>@json</code>.</li> <li>Organizaci\u00f3n de scripts usando <code>@push</code> y <code>@stack</code>.</li> </ul> <p>Tus \"paneles de control\" se han vuelto interactivos. Sin embargo, nuestras solicitudes de modificaci\u00f3n (POST, PUT, DELETE) son actualmente vulnerables. En el pr\u00f3ximo cap\u00edtulo a\u00f1adiremos un mecanismo de protecci\u00f3n crucial: los tokens CSRF.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/4/","title":"Cap\u00edtulo 5.4: Trabajar con tokens CSRF","text":"<p>Tiempo de estudio: 30 minutos</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/4/#1-que-es-un-ataque-csrf-el-secuestro-de-tu-nave","title":"1. \u00bfQu\u00e9 es un ataque CSRF? El \"secuestro\" de tu nave","text":"<p>Imagina que has iniciado sesi\u00f3n en el panel de control de tu flota espacial (<code>space-api.test</code>). En una pesta\u00f1a adyacente, abres un sitio web inofensivo con gatitos (<code>evil-cats.com</code>). En este sitio web hay un formulario oculto que env\u00eda autom\u00e1ticamente una solicitud a tu sitio web a la direcci\u00f3n <code>POST /api/planets/1/delete</code>.</p> <p>Dado que ya est\u00e1s autenticado en <code>space-api.test</code>, tu navegador adjuntar\u00e1 amablemente todas tus cookies a esta solicitud. El servidor Laravel ver\u00e1 una sesi\u00f3n v\u00e1lida y pensar\u00e1 que fuiste t\u00fa quien decidi\u00f3 dar de baja el planeta. El planeta ser\u00e1 eliminado sin tu conocimiento.</p> <p>Esto es CSRF (Cross-Site Request Forgery) \u2014 un ataque en el que un atacante obliga al navegador de un usuario autenticado a realizar una acci\u00f3n no deseada en un sitio de confianza.</p> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>Eres el capit\u00e1n de una nave, y tienes una tarjeta de acceso (sesi\u00f3n/cookie). El atacante no puede robar tu tarjeta. Pero puede enga\u00f1arte para que la acerques a un terminal de desmantelamiento de recursos mientras est\u00e1s distra\u00eddo. El token CSRF es como un c\u00f3digo PIN que debes ingresar junto con la tarjeta. El atacante no sabe el c\u00f3digo PIN, y su ataque falla.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/4/#2-como-protege-laravel-contra-csrf","title":"2. \u00bfC\u00f3mo protege Laravel contra CSRF?","text":"<p>Laravel protege por defecto todas las solicitudes web \"inseguras\" (POST, PUT, PATCH, DELETE) utilizando un token CSRF.</p> <ol> <li>Al generar una p\u00e1gina, Laravel crea un token \u00fanico y aleatorio para la sesi\u00f3n del usuario.</li> <li>Este token se incrusta en los formularios HTML.</li> <li>Al enviar el formulario, el token se env\u00eda junto con la solicitud.</li> <li>En el servidor, el middleware <code>VerifyCsrfToken</code> compara el token de la solicitud con el token almacenado en la sesi\u00f3n.</li> <li>Si los tokens no coinciden, Laravel interrumpe la solicitud con un error 419 (Session Expired/Page Expired).</li> </ol> <p>Importante: Las rutas API en <code>routes/api.php</code> no est\u00e1n protegidas por CSRF, ya que asumen un mecanismo de autenticaci\u00f3n diferente (por ejemplo, tokens de Sanctum), y no sesiones basadas en cookies. Nuestro problema actual se refiere espec\u00edficamente a las rutas web y las p\u00e1ginas que creamos en <code>routes/web.php</code>.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/4/#3-uso-del-token-csrf-en-formularios-html","title":"3. Uso del token CSRF en formularios HTML","text":"<p>Este es el escenario m\u00e1s simple. Laravel proporciona una directiva Blade especial para esto.</p> <p>Ejemplo: Formulario para crear un planeta Creemos un formulario simple en el archivo <code>resources/views/planets/create.blade.php</code>:</p> <pre><code>&lt;h2&gt;Formulario de lanzamiento de nuevo planeta&lt;/h2&gt;\n&lt;form action=\"/planets\" method=\"POST\"&gt;\n    @csrf {{-- \u00a1Aqu\u00ed est\u00e1 la magia! --}}\n\n    &lt;label for=\"name\"&gt;Nombre:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;\n\n    &lt;label for=\"solar_system\"&gt;Sistema solar:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"solar_system\" name=\"solar_system\" required&gt;\n\n    {{-- ... otros campos ... --}}\n\n    &lt;button type=\"submit\"&gt;Lanzar&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>La directiva <code>@csrf</code> generar\u00e1 autom\u00e1ticamente un campo oculto en el formulario: <pre><code>&lt;input type=\"hidden\" name=\"_token\" value=\"j2aK3dLf4gH5...\u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439_\u0442\u043e\u043a\u0435\u043d...\"&gt;\n</code></pre></p> <p>Esto es suficiente para proteger formularios HTML est\u00e1ndar.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/4/#4-uso-del-token-csrf-en-solicitudes-ajaxfetch","title":"4. Uso del token CSRF en solicitudes AJAX/Fetch","text":"<p>En el cap\u00edtulo anterior, enviamos una solicitud <code>DELETE</code> usando JavaScript. Ahora Laravel la bloquear\u00e1 con un error 419. Necesitamos a\u00f1adir el token CSRF en los encabezados de nuestra solicitud Fetch.</p> <p>Paso 1: Hacer el token disponible para JavaScript</p> <p>A\u00f1ade la metaetiqueta con el token en el <code>&lt;head&gt;</code> de tu plantilla maestra <code>resources/views/app.blade.php</code>. Esta es una pr\u00e1ctica est\u00e1ndar en Laravel.</p> <pre><code>&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n\n    {{-- A\u00f1adimos el token CSRF en la metaetiqueta --}}\n    &lt;meta name=\"csrf-token\" content=\"{{ csrf_token() }}\"&gt;\n\n    {{-- ... --}}\n&lt;/head&gt;\n</code></pre> <p>La funci\u00f3n <code>csrf_token()</code> devuelve el token actual.</p> <p>Paso 2: Modificamos JavaScript para enviar el token</p> <p>Ahora, en nuestro <code>public/js/planets.js</code> podemos leer este token y a\u00f1adirlo a los encabezados de todas las solicitudes \"inseguras\".</p> <pre><code>// ... en el archivo public/js/planets.js ...\n\ndocument.addEventListener('DOMContentLoaded', () =&gt; {\n    // Obtenemos el token de la metaetiqueta\n    const csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            // ... l\u00f3gica de confirmaci\u00f3n ...\n\n            try {\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        'X-CSRF-TOKEN': csrfToken // &lt;-- \u00a1A\u00f1adimos el token en los encabezados!\n                    }\n                });\n\n                // ... el resto de la l\u00f3gica de procesamiento de la respuesta ...\n            } catch (error) {\n                // ...\n            }\n        });\n    });\n});\n</code></pre> <ul> <li>El nombre del encabezado <code>X-CSRF-TOKEN</code> es el est\u00e1ndar que Laravel verifica por defecto.</li> </ul> <p>Ahora nuestras solicitudes AJAX tambi\u00e9n est\u00e1n protegidas. Intenta eliminar el planeta de nuevo \u2014 esta vez la solicitud se ejecutar\u00e1 correctamente.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/4/#cuestionario-para-consolidar","title":"Cuestionario para consolidar","text":"<p>1. \u00bfQu\u00e9 tipo de ataque previene el token CSRF?</p>  a) Inyecciones SQL  b) Cross-site scripting  c) Falsificaci\u00f3n de petici\u00f3n en sitios cruzados <p>2. \u00bfQu\u00e9 directiva Blade a\u00f1ade un campo oculto con el token CSRF a un formulario?</p>  a) @token  b) @csrf  c) @form_token <p>3. \u00bfQu\u00e9 suceder\u00e1 si se env\u00eda una solicitud POST sin un token CSRF a una ruta web?</p>  a) Error 500 (Internal Server Error)  b) Error 403 (Forbidden)  c) Error 419 (Page Expired / Session Expired) <p>4. \u00bfQu\u00e9 encabezado HTTP est\u00e1ndar se utiliza para enviar el token CSRF en solicitudes AJAX?</p>  a) Authorization  b) X-CSRF-TOKEN  c) Content-Type <p>5. \u00bfPor qu\u00e9 las rutas API (`routes/api.php`) no utilizan la protecci\u00f3n CSRF por defecto?</p>  a) Porque est\u00e1n dise\u00f1adas para autenticaci\u00f3n sin estado  b) Es un error en Laravel, deben habilitarse manualmente  c) Porque las solicitudes API no pueden ser falsificadas Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has instalado un \"sistema de identificaci\u00f3n amigo-enemigo\" en tu nave espacial, protegi\u00e9ndola de ataques CSRF. Has aprendido a:</p> <ul> <li>Comprender la esencia y el peligro de los ataques CSRF.</li> <li>Proteger formularios HTML est\u00e1ndar con la directiva <code>@csrf</code>.</li> <li>Transferir el token CSRF a JavaScript a trav\u00e9s de una metaetiqueta.</li> <li>Incluir el token en las cabeceras de las solicitudes AJAX/Fetch para su ejecuci\u00f3n exitosa.</li> </ul> <p>Tus interfaces web ahora no solo son interactivas, sino tambi\u00e9n seguras. En el siguiente cap\u00edtulo, completaremos la creaci\u00f3n de nuestra interfaz web, viendo c\u00f3mo organizar correctamente el enrutamiento para las p\u00e1ginas web.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/5/","title":"Cap\u00edtulo 5.5: Enrutamiento para p\u00e1ginas web","text":"<p>Tiempo de estudio: 40 minutos</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/5/#1-routeswebphp-vs-routesapiphp-dos-paneles-de-control-diferentes","title":"1. <code>routes/web.php</code> vs <code>routes/api.php</code>: Dos paneles de control diferentes","text":"<p>Es importante consolidar una vez m\u00e1s la diferencia fundamental:</p> Caracter\u00edstica <code>routes/web.php</code> (Panel web) <code>routes/api.php</code> (Panel API) Tarea principal Visualizaci\u00f3n de p\u00e1ginas HTML, procesamiento de formularios Provisi\u00f3n de datos en formato JSON para otras aplicaciones Estado Stateful (con estado) \u2014 utiliza sesiones y cookies Stateless (sin estado) \u2014 cada solicitud es independiente Middleware predeterminado <code>web</code> (incluye sesiones, protecci\u00f3n CSRF, cifrado de cookies) <code>api</code> (incluye \"throttling\" \u2014 limitaci\u00f3n de la frecuencia de solicitudes) Prefijo de URL No (ra\u00edz de su sitio) <code>/api/</code> (configurable en <code>RouteServiceProvider</code>) Autenticaci\u00f3n Normalmente a trav\u00e9s de sesiones (Login/Contrase\u00f1a) Normalmente a trav\u00e9s de tokens (Sanctum, Passport) <p>Trabajamos con <code>routes/web.php</code> para construir una interfaz para un ser humano.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/5/#2-rutas-de-recursos-para-la-web","title":"2. Rutas de recursos para la web","text":"<p>Similar a <code>Route::apiResource</code>, para la web existe <code>Route::resource</code>. Crea rutas para el ciclo CRUD completo, incluyendo p\u00e1ginas para mostrar formularios de creaci\u00f3n y edici\u00f3n.</p> <p>Creemos un conjunto completo de rutas para gestionar nuestras planetas a trav\u00e9s de la interfaz web.</p> <p>Paso 1: Creamos la ruta en <code>routes/web.php</code></p> <p>Comente o elimine las rutas antiguas para <code>/planets</code> y reempl\u00e1celas con una sola l\u00ednea:</p> <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// Route::get('/planets', [PlanetPageController::class, 'index']);\n// Route::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n\nRoute::resource('planets', PlanetPageController::class);\n</code></pre> <p>Paso 2: Veamos qu\u00e9 se cre\u00f3 Ejecute en la terminal el comando <code>php artisan route:list --except-vendor</code>:</p> <pre><code>+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| Method | URI       | Name                   | Action           | Middleware                                      |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| GET|HEAD | planets                | planets.index          | ...\\PlanetPageController@index                    | web        |\n| POST   | planets                | planets.store          | ...\\PlanetPageController@store                    | web        |\n| GET|HEAD | planets/create         | planets.create         | ...\\PlanetPageController@create                   | web        |\n| GET|HEAD | planets/{planet}       | planets.show           | ...\\PlanetPageController@show                     | web        |\n| PUT|PATCH | planets/{planet}       | planets.update         | ...\\PlanetPageController@update                   | web        |\n| DELETE | planets/{planet}       | planets.destroy        | ...\\PlanetPageController@destroy                  | web        |\n| GET|HEAD | planets/{planet}/edit  | planets.edit           | ...\\PlanetPageController@edit                     | web        |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n</code></pre> <p><code>Route::resource</code> cre\u00f3 para nosotros 7 rutas, incluyendo:</p> <ul> <li><code>planets.create</code> (GET <code>/planets/create</code>): p\u00e1gina con el formulario de creaci\u00f3n.</li> <li><code>planets.store</code> (POST <code>/planets</code>): procesamiento de este formulario.</li> <li><code>planets.edit</code> (GET <code>/planets/{planet}/edit</code>): p\u00e1gina con el formulario de edici\u00f3n.</li> <li><code>planets.update</code> (PUT/PATCH <code>/planets/{planet}</code>): procesamiento del formulario de edici\u00f3n.</li> <li><code>planets.destroy</code> (DELETE <code>/planets/{planet}</code>): eliminaci\u00f3n del recurso.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/5/#3-rutas-con-nombre-convenientes-coordenadas-cosmicas","title":"3. Rutas con nombre: Convenientes \"coordenadas c\u00f3smicas\"","text":"<p>Preste atenci\u00f3n a la columna <code>Name</code>. Laravel asign\u00f3 autom\u00e1ticamente un nombre \u00fanico a cada ruta (por ejemplo, <code>planets.index</code>). Usar nombres en lugar de URL codificadas es una mejor pr\u00e1ctica.</p> <p>\u00bfPor qu\u00e9? Si decide cambiar la URL de <code>/planets</code> a <code>/worlds</code>, no tendr\u00e1 que buscar y cambiar todos los enlaces en sus plantillas. Simplemente lo cambia en un solo lugar \u2014 en el archivo de rutas, y los nombres permanecen iguales.</p> <p>Ejemplo de uso en Blade:</p> <p>Antes escrib\u00edamos as\u00ed:</p> <pre><code>&lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n</code></pre> <p>Ahora escribiremos as\u00ed, usando el helper <code>route()</code>: <pre><code>&lt;a href=\"{{ route('planets.show', ['planet' =&gt; $planet-&gt;id]) }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n</code></pre></p> <ul> <li><code>route('planets.show', ...)</code> \u2014 genera la URL para la ruta con el nombre <code>planets.show</code>.</li> <li><code>['planet' =&gt; $planet-&gt;id]</code> \u2014 pasa los par\u00e1metros necesarios a la URL. Laravel mismo sustituir\u00e1 el ID en <code>{planet}</code>. Incluso se puede pasar el modelo completo: <code>['planet' =&gt; $planet]</code>.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/5/#4-implementacion-de-los-metodos-faltantes-en-el-controlador","title":"4. Implementaci\u00f3n de los m\u00e9todos faltantes en el controlador","text":"<p><code>Route::resource</code> cre\u00f3 las rutas, pero necesitamos crear nosotros mismos los m\u00e9todos correspondientes en <code>PlanetPageController</code>.</p> <p>Abra <code>app/Http/Controllers/Web/PlanetPageController.php</code> y agregu\u00e9moslos.</p> <pre><code>&lt;?php\nuse Illuminate\\Http\\Request; // &lt;-- A\u00f1adir\n\nclass PlanetPageController extends Controller\n{\n    // Ya tenemos index() y show()\n\n    /**\n     * Muestra el formulario para crear un nuevo planeta.\n     */\n    public function create()\n    {\n        return view('planets.create'); // Simplemente retornamos la vista con el formulario\n    }\n\n    /**\n     * Guarda un nuevo planeta en la base de datos.\n     */\n    public function store(Request $request)\n    {\n        // Validaci\u00f3n de los datos del formulario\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets',\n            'solar_system' =&gt; 'required|string|max:100',\n            // ... otras reglas\n        ]);\n\n        Planet::create($validated);\n\n        // Redirigimos al usuario a la p\u00e1gina de la lista con un mensaje de \u00e9xito\n        return redirect()-&gt;route('planets.index')-&gt;with('success', '\u00a1Planeta creado exitosamente!');\n    }\n\n    /**\n     * Muestra el formulario para editar un planeta.\n     */\n    public function edit(Planet $planet)\n    {\n        return view('planets.edit', ['planet' =&gt; $planet]);\n    }\n\n    /**\n     * Actualiza los datos de un planeta en la base de datos.\n     */\n    public function update(Request $request, Planet $planet)\n    {\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets,name,' . $planet-&gt;id,\n            'solar_system' =&gt; 'required|string|max:100',\n        ]);\n\n        $planet-&gt;update($validated);\n\n        return redirect()-&gt;route('planets.show', $planet)-&gt;with('success', '\u00a1Datos del planeta actualizados!');\n    }\n\n    /**\n     * Elimina un planeta.\n     */\n    public function destroy(Planet $planet)\n    {\n        $planet-&gt;delete();\n\n        return redirect()-&gt;route('planets.index')-&gt;with('success', 'Planeta dado de baja.');\n    }\n}\n</code></pre> <ul> <li><code>redirect()-&gt;route(...)</code> \u2014 redirige al usuario a otra ruta con nombre.</li> <li><code>-&gt;with('success', '...')</code> \u2014 a\u00f1ade un \"mensaje flash\" a la sesi\u00f3n, que estar\u00e1 disponible en la siguiente p\u00e1gina exactamente una vez. Podemos mostrarlo en nuestra plantilla Blade.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/5/#5-agrupacion-de-rutas","title":"5. Agrupaci\u00f3n de rutas","text":"<p>Si tiene muchas rutas con caracter\u00edsticas comunes (por ejemplo, todas son para el panel de administraci\u00f3n y deben tener el prefijo <code>/admin</code> y un middleware especial), pueden agruparse.</p> <pre><code>&lt;?php\nRoute::middleware(['auth', 'admin'])-&gt;prefix('admin')-&gt;name('admin.')-&gt;group(function () {\n    // Todas las rutas dentro de este grupo tendr\u00e1n:\n    // 1. Middleware 'auth' y 'admin'\n    // 2. Prefijo de URL '/admin' (por ejemplo, /admin/planets)\n    // 3. Prefijo de nombre 'admin.' (por ejemplo, admin.planets.index)\n\n    Route::resource('planets', PlanetPageController::class);\n    // Route::get('/dashboard', ...)-&gt;name('dashboard'); // -&gt; admin.dashboard\n});\n</code></pre>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/5/#cuestionario-para-afianzar-conocimientos","title":"Cuestionario para afianzar conocimientos","text":"<p>1. \u00bfQu\u00e9 comando en `routes/web.php` crear\u00e1 un conjunto completo de rutas CRUD para la interfaz web?</p>  a) Route::crud('planets', Controller::class)  b) Route::apiResource('planets', Controller::class)  c) Route::resource('planets', Controller::class) <p>2. \u00bfCu\u00e1l es la principal ventaja de usar rutas nombradas?</p>  a) Funcionan m\u00e1s r\u00e1pido que las URL directas  b) Permiten cambiar f\u00e1cilmente las URL en el archivo de rutas sin romper los enlaces en las plantillas  c) Est\u00e1n autom\u00e1ticamente protegidos contra CSRF <p>3. \u00bfQu\u00e9 ruta se generar\u00e1 para el m\u00e9todo `create()` en `Route::resource('articles', ...)`?</p>  a) GET `/articles/new`  b) GET `/articles/create`  c) POST `/articles/create` <p>4. \u00bfQu\u00e9 hace el c\u00f3digo `redirect()-&gt;route('home')-&gt;with('status', 'OK')`?</p>  a) Devuelve JSON con 'status' =&gt; 'OK' a la URL `/home`  b) Redirige a la ruta nombrada `home` y a\u00f1ade un mensaje temporal 'status' a la sesi\u00f3n  c) Muestra la vista `home.blade.php` con la variable `$status` <p>5. \u00bfPara qu\u00e9 se usa `Route::prefix('dashboard')`?</p>  a) Para a\u00f1adir un prefijo a todas las URL dentro del grupo  b) Para a\u00f1adir un prefijo a todos los nombres de las rutas dentro del grupo  c) Para aplicar el middleware `dashboard` Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has dominado un enfoque estructurado y profesional para la organizaci\u00f3n de rutas web en Laravel. Ahora sabes c\u00f3mo:</p> <ul> <li>Distinguir las rutas <code>web</code> y <code>api</code> y su prop\u00f3sito.</li> <li>Usar <code>Route::resource</code> para generar r\u00e1pidamente rutas CRUD est\u00e1ndar.</li> <li>Aplicar rutas nombradas para crear c\u00f3digo flexible y mantenible.</li> <li>Crear operaciones CRUD completas en el controlador con validaci\u00f3n y redirecciones.</li> <li>Agrupar rutas para aplicar reglas comunes.</li> </ul> <p>El sistema de navegaci\u00f3n de su \"nave\" ahora es tolerante a fallos y est\u00e1 listo para expandirse. En el cap\u00edtulo final de esta secci\u00f3n, combinaremos todo el conocimiento adquirido y mostraremos los datos de los planetas, obtenidos a trav\u00e9s de Fetch, en nuestra p\u00e1gina Blade.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/6/","title":"Cap\u00edtulo 5.6: Visualizaci\u00f3n de Datos con Blade + Fetch","text":"<p>Tiempo de estudio: 50 minutos</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/6/#1-enfoque-hibrido-lo-mejor-de-dos-mundos","title":"1. Enfoque H\u00edbrido: Lo mejor de dos mundos","text":"<p>Podemos construir una p\u00e1gina de dos maneras:</p> <ol> <li>Renderizado Completo del Lado del Servidor (SSR): Laravel genera todo el HTML, incluyendo la lista de planetas. Para cualquier actualizaci\u00f3n (eliminaci\u00f3n, adici\u00f3n), la p\u00e1gina se recarga completamente.</li> <li>Renderizado Completo del Lado del Cliente (CSR): Laravel entrega un \"shell\" HTML vac\u00edo, y JavaScript solicita todos los datos a la API y los renderiza en el cliente. (Este es el enfoque de Aplicaci\u00f3n de P\u00e1gina \u00danica - SPA).</li> </ol> <p>Nuestra elecci\u00f3n es un enfoque h\u00edbrido:</p> <ul> <li>Primera carga (SSR): Laravel entrega inmediatamente la p\u00e1gina con la lista de planetas ya preparada. Esto es r\u00e1pido y bueno para el SEO. El usuario ve el contenido al instante.</li> <li>Acciones posteriores (CSR): JavaScript intercepta las acciones del usuario (clics en botones) e interact\u00faa con la API, actualizando solo las partes necesarias de la p\u00e1gina, sin una recarga completa.</li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>Al entrar en el puente, se te entrega inmediatamente el mapa de navegaci\u00f3n principal, impreso en el Centro de Control de Misi\u00f3n (SSR). Ya lo tienes en tus manos, no hay que esperar. Pero luego activas el \"modo en vivo\" en tu tableta (CSR), y esta comienza a recibir actualizaciones de los sat\u00e9lites en tiempo real, redibujando objetos en tu mapa.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/6/#2-paso-1-preparacion-de-la-pagina","title":"2. Paso 1: Preparaci\u00f3n de la p\u00e1gina","text":"<p>Trabajaremos con nuestra p\u00e1gina de lista de planetas <code>resources/views/planets/index.blade.php</code>. Ya es capaz de mostrar los datos pasados desde el controlador. Ahora le a\u00f1adiremos elementos de control que funcionar\u00e1n a trav\u00e9s de JS.</p> <p>A\u00f1adimos un bot\u00f3n \"Actualizar lista\" y un contenedor para notificaciones: <pre><code>    &lt;div class=\"controls\"&gt;\n        &lt;h2&gt;Lista de todos los planetas conocidos&lt;/h2&gt;\n        &lt;button id=\"refresh-btn\"&gt;Actualizar v\u00eda API&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div id=\"notification-area\" class=\"notification\"&gt;&lt;/div&gt;\n    &lt;hr&gt;\n    {{-- Este div ser\u00e1 nuestro contenedor para la actualizaci\u00f3n din\u00e1mica --}}\n    &lt;div id=\"planet-list-container\" class=\"planet-list\"&gt;\n        {{-- Incluimos la vista \"hija\" que renderiza la lista inicial --}}\n        @include('planets.partials.list', ['planets' =&gt; $planets])\n    &lt;/div&gt;\n</code></pre></p> <p>Presta atenci\u00f3n a <code>@include('planets.partials.list', ...)</code>. Hemos movido la l\u00f3gica de visualizaci\u00f3n de la lista a un archivo separado y reutilizable.</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/6/#paso-2-creacion-de-una-vista-parcial-partial-reutilizable","title":"Paso 2: Creaci\u00f3n de una vista \"parcial\" (Partial) reutilizable","text":"<p>Mover las partes repetidas a archivos separados es una buena pr\u00e1ctica.</p> <p>Crea el archivo <code>resources/views/planets/partials/list.blade.php</code>:</p> <pre><code>@forelse($planets as $planet)\n    &lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n        &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n        &lt;p&gt;Sistema solar: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n        &lt;p&gt;Di\u00e1metro: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n        &lt;a href=\"{{ route('planets.show', $planet) }}\"&gt;Saber m\u00e1s &amp;rarr;&lt;/a&gt;\n        &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"{{ route('api.planets.destroy', $planet) }}\"&gt;\n            Desmantelar\n        &lt;/button&gt;\n    &lt;/div&gt;\n@empty\n    &lt;p&gt;No hay ning\u00fan planeta en la base de datos.&lt;/p&gt;\n@endforelse\n</code></pre> <ul> <li>Importante: Ten en cuenta que la URL para el bot\u00f3n de eliminar ahora se genera para la ruta de la API: <code>route('api.planets.destroy', $planet)</code>. Para ello, aseg\u00farate de tener un recurso nombrado en <code>routes/api.php</code>: <code>Route::apiResource('planets', ...)-&gt;name('api.planets');</code></li> </ul>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/6/#paso-3-escritura-de-javascript-para-la-actualizacion-dinamica","title":"Paso 3: Escritura de JavaScript para la actualizaci\u00f3n din\u00e1mica","text":"<p>Ahora lo m\u00e1s interesante. Crearemos un JavaScript que, al presionar un bot\u00f3n, solicitar\u00e1 una lista fresca de planetas a la API y la volver\u00e1 a dibujar.</p> <p>Crea el archivo <code>public/js/planet-manager.js</code> y con\u00e9ctalo en <code>layouts/app.blade.php</code>.</p> <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    const refreshBtn = document.getElementById('refresh-btn');\n    const planetListContainer = document.getElementById('planet-list-container');\n    const notificationArea = document.getElementById('notification-area');\n\n    // Funci\u00f3n para mostrar notificaciones\n    function showNotification(message, isError = false) {\n        notificationArea.textContent = message;\n        notificationArea.className = isError ? 'notification error' : 'notification success';\n        setTimeout(() =&gt; {\n            notificationArea.textContent = '';\n            notificationArea.className = 'notification';\n        }, 3000);\n    }\n\n    // Funci\u00f3n para dibujar una sola tarjeta de planeta\n    function createPlanetCardHtml(planet) {\n        // IMPORTANTE: Generamos el mismo HTML que en nuestra vista parcial\n        return `\n            &lt;div class=\"planet-card\" id=\"planet-card-${planet.id}\"&gt;\n                &lt;h3&gt;${planet.name}&lt;/h3&gt;\n                &lt;p&gt;Sistema solar: ${planet.solar_system}&lt;/p&gt;\n                &lt;p&gt;Di\u00e1metro: ${new Intl.NumberFormat().format(planet.size_km)} km&lt;/p&gt;\n                &lt;a href=\"/planets/${planet.id}\"&gt;Saber m\u00e1s &amp;rarr;&lt;/a&gt;\n                &lt;button class=\"delete-btn\" data-id=\"${planet.id}\" data-url=\"/api/planets/${planet.id}\"&gt;\n                    Desmantelar (JS)\n                &lt;/button&gt;\n            &lt;/div&gt;\n        `;\n    }\n\n    // Funci\u00f3n para solicitar y volver a dibujar la lista de planetas\n    async function fetchAndRenderPlanets() {\n        showNotification('Solicitando datos frescos de los sat\u00e9lites orbitales...');\n        try {\n            const response = await fetch('/api/planets', {\n                headers: { 'Accept': 'application/json' }\n            });\n\n            if (!response.ok) {\n                throw new Error('Error de red al obtener los datos.');\n            }\n\n            const planets = await response.json(); // Laravel por defecto devolver\u00e1 { data: [...] } para un recurso paginado\n\n            planetListContainer.innerHTML = ''; // Limpiamos la lista antigua\n\n            if (planets.data.length === 0) {\n                planetListContainer.innerHTML = '&lt;p&gt;No hay ning\u00fan planeta en la base de datos.&lt;/p&gt;';\n            } else {\n                planets.data.forEach(planet =&gt; {\n                    const cardHtml = createPlanetCardHtml(planet);\n                    planetListContainer.innerHTML += cardHtml;\n                });\n            }\n            showNotification('\u00a1Datos actualizados con \u00e9xito!', false);\n        } catch (error) {\n            console.error('Error al actualizar la lista de planetas:', error);\n            showNotification(error.message, true);\n        }\n    }\n\n    // Adjuntamos el manejador al bot\u00f3n\n    if (refreshBtn) {\n        refreshBtn.addEventListener('click', fetchAndRenderPlanets);\n    }\n\n    // Aqu\u00ed se podr\u00eda mover la l\u00f3gica de eliminaci\u00f3n del cap\u00edtulo anterior,\n    // para que todo el JS est\u00e9 en un solo lugar.\n});\n</code></pre>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/6/#3-verificacion-final","title":"3. Verificaci\u00f3n Final","text":"<ol> <li>Inicia el servidor (<code>php artisan serve</code> o aseg\u00farate de que Herd est\u00e9 funcionando).</li> <li>Recrea la base de datos, si es necesario: <code>php artisan migrate:fresh --seed</code>.</li> <li>Abre la p\u00e1gina <code>/planets</code> en el navegador.<ul> <li>Deber\u00edas ver inmediatamente la lista de planetas generada por el servidor.</li> </ul> </li> <li>Haz clic en el bot\u00f3n \"Actualizar v\u00eda API\".<ul> <li>Ver\u00e1s una notificaci\u00f3n de carga.</li> <li>La lista deber\u00eda desaparecer por un momento y reaparecer, pero esta vez ser\u00e1 generada por JavaScript bas\u00e1ndose en los datos obtenidos de la API.</li> </ul> </li> </ol> <p>\u00a1Has implementado con \u00e9xito el modelo h\u00edbrido!</p>"},{"location":"es/Cap%C3%ADtulo%205%20-%20Integraci%C3%B3n%20del%20frontend%20con%20Laravel/6/#cuestionario-para-consolidar","title":"Cuestionario para consolidar","text":"<p>1. \u00bfQu\u00e9 es un enfoque de renderizado h\u00edbrido (SSR + CSR)?</p>  a) Primero se renderiza una p\u00e1gina vac\u00eda, luego JS carga todo el contenido  b) El servidor entrega una p\u00e1gina completamente lista, y esta nunca cambia en el cliente  c) El servidor entrega una p\u00e1gina lista para una carga inicial r\u00e1pida, y las actualizaciones posteriores ocurren en el cliente a trav\u00e9s de JS <p>2. \u00bfCu\u00e1l es la principal ventaja del renderizado inicial en el servidor (SSR)?</p>  a) Reducci\u00f3n de la carga en el servidor  b) Renderizado r\u00e1pido del contenido inicial para el usuario y buena indexaci\u00f3n SEO  c) Simplificaci\u00f3n del c\u00f3digo JavaScript <p>3. \u00bfPor qu\u00e9 se utiliza `@include('planets.partials.list')` en el ejemplo?</p>  a) Es un requisito de Blade para bucles  b) Para la reutilizaci\u00f3n de c\u00f3digo y la separaci\u00f3n de la l\u00f3gica de visualizaci\u00f3n de la lista  c) Para la carga as\u00edncrona de una parte de la p\u00e1gina <p>4. En el c\u00f3digo JavaScript, duplicamos la estructura HTML de la tarjeta. \u00bfCu\u00e1l podr\u00eda ser una forma m\u00e1s avanzada de evitar esto?</p>  a) Solicitar a la API no JSON, sino HTML ya renderizado para una sola tarjeta  b) Usar motor de plantillas JavaScript (como Mustache, Handlebars) o frameworks (Vue, React)  c) Ambas opciones son correctas <p>5. \u00bfPor qu\u00e9 es importante que la API (`/api/planets`) y el c\u00f3digo JavaScript (`createPlanetCardHtml`) generen datos/HTML consistentes?</p>  a) De lo contrario, el usuario ver\u00e1 un \"salto\" o cambio en la interfaz al actualizar a trav\u00e9s de la API  b) Esto es un requisito de la especificaci\u00f3n Fetch API  c) De lo contrario, Laravel devolver\u00e1 un error 500 Verificar <p>\ud83d\ude80 \u00a1Felicitaciones por completar el Cap\u00edtulo 5!</p> <p>Has recorrido un largo camino desde los fundamentos de Blade hasta la creaci\u00f3n de p\u00e1ginas h\u00edbridas interactivas. Has aprendido a:</p> <ul> <li>Crear y usar plantillas y dise\u00f1os de Blade.</li> <li>Organizar rutas web y controladores para operaciones CRUD.</li> <li>Proteger formularios web y solicitudes AJAX con tokens CSRF.</li> <li>Integrar JavaScript para la interacci\u00f3n din\u00e1mica con la API sin recargar la p\u00e1gina.</li> </ul> <p>Tu Centro de Control de Vuelo es completamente funcional, seguro e interactivo. Est\u00e1s listo para la siguiente gran etapa: comparar este enfoque con otros frameworks y aprender las mejores pr\u00e1cticas para producci\u00f3n.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/1/","title":"Cap\u00edtulo 6.1: Conectando FastAPI con el frontend","text":"<p>Tiempo de estudio: 30 minutos</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/1/#1-volviendo-al-hiperpropulsor-comparacion-de-protocolos","title":"1. Volviendo al \"hiperpropulsor\": Comparaci\u00f3n de protocolos","text":"<p>En el cap\u00edtulo anterior, acoplamos nuestro Centro de Control de Misiones (frontend) a la \"ISS\" (API de Laravel). Ahora, volveremos a nuestro caza supers\u00f3nico (FastAPI) y realizaremos la misma operaci\u00f3n.</p> <p>El objetivo de este cap\u00edtulo no es simplemente repetir acciones, sino comparar dos enfoques. Es como si la misma nave Dragon se acoplara primero a la ISS y luego a la estaci\u00f3n espacial china \"Tiangong\". El puerto de acoplamiento es el mismo (REST), pero puede haber matices en los procedimientos y la ubicaci\u00f3n de los puertos.</p> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>El proceso es el mismo: acercarse, alinearse, acoplarse. Pero para la \"ISS\" tuvimos que usar el puerto <code>/api/planets</code>, y para \"Tiangong\", el puerto <code>/spaceships</code>. Nuestro operador en el Centro de Control de Misiones debe conocer estos detalles para que la misi\u00f3n tenga \u00e9xito.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/1/#2-preparando-el-caza-fastapi-para-el-acoplamiento","title":"2. Preparando el \"caza\" (FastAPI) para el acoplamiento","text":"<p>Ya lo hicimos en el Cap\u00edtulo 4.2, pero asegur\u00e9monos de que todo est\u00e9 en su lugar.</p> <p>Paso 1: Iniciando el servidor FastAPI</p> <ol> <li>Detenga el servidor Laravel si est\u00e1 en ejecuci\u00f3n (para evitar conflictos de puertos).</li> <li>Abra una terminal en la carpeta de su proyecto FastAPI.</li> <li> <p>Active el entorno virtual:</p> <ul> <li>Windows: <code>.\\venv\\Scripts\\Activate.ps1</code></li> <li>macOS / Linux: <code>source venv/bin/activate</code></li> </ul> </li> <li> <p>Inicie el servidor:     <pre><code>uvicorn main:app --reload\n</code></pre>     El servidor estar\u00e1 disponible en la direcci\u00f3n <code>http://127.0.0.1:8000</code>.</p> </li> </ol> <p>Paso 2: Verificando la configuraci\u00f3n CORS en <code>main.py</code></p> <p>Aseg\u00farese de que su proyecto FastAPI tenga configurado el <code>CORSMiddleware</code> que agregamos anteriormente. Debe permitir solicitudes desde la direcci\u00f3n de su frontend. <pre><code># main.py\nfrom fastapi.middleware.cors import CORSMiddleware\n\n# ...\n\norigins = [\n    \"http://127.0.0.1:5500\", # Direcci\u00f3n de Live Server\n    \"null\", # Para file:///\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n# ...\n</code></pre> Si todo est\u00e1 en su lugar, su servidor FastAPI est\u00e1 completamente listo.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/1/#3-reconfigurando-la-antena-del-centro-de-control-de-misiones-de-vuelta-a-fastapi","title":"3. Reconfigurando la \"antena\" del Centro de Control de Misiones de vuelta a FastAPI","text":"<p>Ahora lo m\u00e1s interesante: los cambios m\u00ednimos que debemos hacer en nuestro JavaScript para que funcione de nuevo con FastAPI.</p> <p>Paso 1: Cambiando la URL base</p> <p>Abra <code>api.js</code> y restaure <code>API_BASE_URL</code> a su valor original. <pre><code>// api.js\n\n// Especificamos la URL de nuestra API FastAPI\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // &lt;-- \u00a1Sin /api!\n\n// ... el resto del c\u00f3digo de apiRequest ...\n</code></pre></p> <p>Paso 2: Adaptaci\u00f3n a la estructura de respuesta de FastAPI</p> <p>Recordemos que nuestro <code>GET /spaceships</code> en FastAPI devuelve un array simple, no un objeto con paginaci\u00f3n. Esto significa que necesitamos restaurar el c\u00f3digo de <code>fetchAndDisplayFleet</code> a su forma original.</p> <p>Modifique la funci\u00f3n <code>fetchAndDisplayFleet</code> en <code>app.js</code>: <pre><code>// app.js\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;Cargando telemetr\u00eda de FastAPI...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- Solicitud a /spaceships\n\n        // En FastAPI tenemos un array simple, \u00a1as\u00ed que la clave .data no es necesaria!\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;No hay naves en el registro.&lt;/p&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            // Restauramos nuestra funci\u00f3n original para crear tarjetas\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;Error al cargar la flota: ${error.message}&lt;/p&gt;`;\n    }\n}\n\n// Funci\u00f3n original para crear tarjetas de naves\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;Tipo: ${ship.type}&lt;/p&gt;\n        &lt;p&gt;A\u00f1o de lanzamiento: ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;Estado: ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;Editar&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;Dar de baja&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n</code></pre></p> <p>Paso 3: Verificando las operaciones CRUD</p> <p>Dado que nuestros modelos Pydantic en FastAPI y los campos del formulario HTML coinciden (<code>name</code>, <code>type</code>, <code>launch_year</code>, <code>status</code>), las funciones <code>handleSaveShip</code> y <code>handleDeleteShip</code> deber\u00edan funcionar sin cambios, ya que ya apuntan al endpoint <code>/spaceships</code>.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/1/#4-conclusiones-de-la-comparacion-que-significa-esto-para-un-desarrollador-frontend","title":"4. Conclusiones de la comparaci\u00f3n: \u00bfQu\u00e9 significa esto para un desarrollador frontend?","text":"<ul> <li>Universalidad de REST: Ha comprobado visualmente que para el frontend no importa en qu\u00e9 est\u00e9 escrito el backend (PHP/Laravel o Python/FastAPI), siempre que siga los principios de REST.</li> <li>Importancia de la documentaci\u00f3n: Las principales diferencias radicaron en las URLs de los endpoints y la estructura de las respuestas JSON. Esto es precisamente lo que debe describirse en la documentaci\u00f3n de la API. Sin ella, el desarrollador frontend trabajar\u00eda \"a ciegas\".</li> <li>Flexibilidad del frontend: Su c\u00f3digo JavaScript debe ser lo suficientemente flexible para adaptarse f\u00e1cilmente a diferentes formatos de datos (por ejemplo, verificar si hay una clave <code>data</code>, o si es simplemente un array).</li> </ul> <p>Conclusi\u00f3n: La habilidad de trabajar con una API REST es una clave universal que abre las puertas a la interacci\u00f3n con cualquier backend moderno.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/1/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. La principal diferencia en la URL entre nuestra API de Laravel y la API de FastAPI fue en...</p>  a) El uso de diferentes puertos  b) La presencia del prefijo `/api` en Laravel  c) El uso de HTTPS en FastAPI <p>2. \u00bfCu\u00e1l fue el principal cambio requerido en el c\u00f3digo JS al cambiar de la respuesta paginada de Laravel a un array simple de FastAPI?</p>  a) Dejar de acceder a `responseData.data` y usar `responseData` directamente  b) Usar un m\u00e9todo `fetch` diferente  c) Cambiar el `Content-Type` en los encabezados <p>3. Este experimento demuestra que para un desarrollador frontend...</p>  a) Es importante conocer tanto PHP como Python  b) Es importante entender los principios REST y saber leer la documentaci\u00f3n de la API  c) Laravel y FastAPI son absolutamente id\u00e9nticos <p>4. La configuraci\u00f3n de CORS es tarea de...</p>  a) El desarrollador frontend  b) El administrador de sistemas  c) El desarrollador backend <p>5. Si FastAPI utilizara paginaci\u00f3n, como en Laravel, \u00bfqu\u00e9 tendr\u00edamos que hacer en el frontend?</p>  a) Nada, el c\u00f3digo funcionar\u00eda por s\u00ed solo  b) Cambiar de nuevo la l\u00f3gica para extraer el array de la clave `data` (o similar)  c) Cambiar de `fetch` a la librer\u00eda Axios Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has cambiado con \u00e9xito los \"protocolos de comunicaci\u00f3n\" de tu Centro de Control de Misi\u00f3n y has comparado en la pr\u00e1ctica el trabajo con dos sistemas de backend diferentes.</p> <ul> <li>\u2705 Has consolidado la habilidad de configurar <code>API_BASE_URL</code> para cambiar entre servidores.</li> <li>\u2705 Has comprendido la importancia de la estructura de la respuesta (<code>data</code> vs un array simple) y c\u00f3mo adaptar el frontend a ella.</li> <li>\u2705 Te has dado cuenta de que un buen desarrollador frontend debe estar preparado para trabajar con cualquier API RESTful, estudiando cuidadosamente su documentaci\u00f3n.</li> </ul> <p>\u00a1Habilidad de acoplamiento universal adquirida! Ahora que sabemos configurar la conexi\u00f3n b\u00e1sica, es hora de hablar de protocolos m\u00e1s complejos: CORS, autenticaci\u00f3n y seguridad.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>Aseg\u00farate de que tu servidor FastAPI est\u00e1 en ejecuci\u00f3n.</li> <li>Aseg\u00farate de que has restaurado <code>API_BASE_URL</code> y la l\u00f3gica de manejo de respuestas en <code>app.js</code> a la variante para FastAPI.</li> <li>Verifica que tu frontend realiza de nuevo correctamente todas las operaciones CRUD con el backend de FastAPI.</li> </ul> <p>\u26a0\ufe0f Si hay errores:</p> <ul> <li>CORS error: Aseg\u00farate de que el servidor FastAPI est\u00e1 en ejecuci\u00f3n con la configuraci\u00f3n CORS correcta.</li> <li>Error <code>Cannot read properties of undefined (reading 'length')</code>: Es posible que hayas olvidado eliminar la referencia a <code>.data</code> de <code>responseData</code>.</li> <li>404 Not Found: Comprueba <code>API_BASE_URL</code> \u2014 FastAPI no tiene el prefijo <code>/api</code>.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/2/","title":"Cap\u00edtulo 6.2: Configuraci\u00f3n de CORS","text":"<p>Tiempo de estudio: 30 minutos</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/2/#1-cors-que-es-y-por-que-es-necesario","title":"1. CORS: \u00bfQu\u00e9 es y por qu\u00e9 es necesario?","text":"<p>Como hemos descubierto, CORS (Cross-Origin Resource Sharing) es una pol\u00edtica de seguridad del navegador. Previene la situaci\u00f3n en la que un sitio web malicioso <code>evil-site.com</code> en su nombre (usando sus cookies) realiza solicitudes a <code>your-bank.com</code> y roba datos.</p> <p>\u00bfC\u00f3mo funciona?</p> <ol> <li>Frontend (navegador) desde el dominio <code>A</code> quiere obtener datos del dominio <code>B</code>.</li> <li>El navegador env\u00eda al dominio <code>B</code> una solicitud \"preliminar\" especial (solicitud preflight) con el m\u00e9todo <code>OPTIONS</code>, preguntando: \"Oye, dominio <code>B</code>, \u00bfpuedo, el dominio <code>A</code>, hacerte una solicitud <code>GET</code>?\"</li> <li>Backend (servidor en el dominio <code>B</code>) debe responder con encabezados HTTP especiales, por ejemplo: <code>Access-Control-Allow-Origin: A</code>.</li> <li>Si la respuesta del servidor permite la solicitud, el navegador env\u00eda la solicitud <code>GET</code> principal. Si no, la bloquea y emite un error CORS.</li> </ol> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <p>Antes de teletransportar al capit\u00e1n a una estaci\u00f3n extranjera (enviar una solicitud <code>POST</code>), la nave (navegador) env\u00eda un dron (solicitud <code>OPTIONS</code>) con la pregunta: \"Estaci\u00f3n, \u00bfaceptan teletransportaci\u00f3n desde la nave 'Enterprise'?\". La estaci\u00f3n (API) responde: \"S\u00ed, la recepci\u00f3n desde la 'Enterprise' est\u00e1 permitida\" (encabezado <code>Access-Control-Allow-Origin</code>). Solo despu\u00e9s de eso comienza la teletransportaci\u00f3n.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/2/#2-configuracion-de-cors-en-laravel-enfoque-moderno-para-laravel-11","title":"2. Configuraci\u00f3n de CORS en Laravel (Enfoque moderno para Laravel 11+)","text":"<p>En Laravel 11+, la configuraci\u00f3n de CORS se ha vuelto mucho m\u00e1s sencilla y no requiere la publicaci\u00f3n del archivo <code>config/cors.php</code> si necesita configuraciones b\u00e1sicas. Todo se gestiona a trav\u00e9s de los archivos <code>.env</code> y <code>bootstrap/app.php</code>.</p> <p>Paso 1: Configuraci\u00f3n a trav\u00e9s de variables de entorno</p> <p>Abra su archivo <code>.env</code>. Laravel ya proporciona variables predeterminadas para gestionar CORS para las API.</p> <pre><code># .env\n\n# ... otras variables\n\n# Especifique las rutas para las cuales CORS estar\u00e1 activo.\n# 'api/*' - valor est\u00e1ndar para todas las rutas API.\nCORS_PATHS=api/*\n\n# Especifique los or\u00edgenes permitidos (dominios).\n# Para desarrollo, especifique la direcci\u00f3n de su frontend.\n# Se pueden enumerar separados por comas, sin espacios.\nCORS_ALLOWED_ORIGINS=http://localhost:5500,http://127.0.0.1:5500\n\n# Otras configuraciones (generalmente se pueden dejar por defecto)\nCORS_ALLOWED_METHODS=*\nCORS_ALLOWED_HEADERS=*\nCORS_EXPOSED_HEADERS=\nCORS_MAX_AGE=0\nCORS_SUPPORTS_CREDENTIALS=false\n</code></pre> <p>Variables clave:</p> <ul> <li><code>CORS_ALLOWED_ORIGINS</code>: La variable m\u00e1s importante. Aqu\u00ed enumera los dominios desde los cuales se permiten las solicitudes. <code>*</code> permite a todos, pero esto es</li> </ul> <p>extremadamente inseguro para producci\u00f3n.</p> <ul> <li><code>CORS_PATHS</code>: Rutas a las que se aplican estas reglas. <code>api/*</code> significa todo lo que comienza con <code>/api/</code>.</li> </ul> <p>Despu\u00e9s de cambiar <code>.env</code> no es necesario reiniciar el servidor si est\u00e1 usando <code>php artisan serve</code>. Los cambios se aplicar\u00e1n autom\u00e1ticamente.</p> <p>Paso 2 (Opcional): Configuraci\u00f3n avanzada en <code>bootstrap/app.php</code></p> <p>Si necesita una l\u00f3gica m\u00e1s compleja (por ejemplo, permitir subdominios usando patrones), a\u00fan tendr\u00e1 que publicar el archivo de configuraci\u00f3n y configurar el middleware. Pero para el 95% de los casos, el archivo <code>.env</code> es suficiente.</p> <p>El comando <code>php artisan install:api</code> configura autom\u00e1ticamente el middleware CORS b\u00e1sico para las rutas de la API en el archivo <code>bootstrap/app.php</code>. Se ve as\u00ed:</p> <pre><code>// bootstrap/app.php\n-&gt;withMiddleware(function (Middleware $middleware) {\n    // Esta l\u00ednea ya ser\u00e1 a\u00f1adida por el comando install:api\n    // Es la que habilita el procesamiento de CORS para todas las rutas API\n    $middleware-&gt;api(base_path('routes/api.php'));\n})\n</code></pre> <p>Dentro de <code>-&gt;api()</code>, Laravel ya usa el middleware <code>HandleCors</code>, que lee las configuraciones de su <code>.env</code>. Todo es simple y viene listo para usar.</p> <p>\u26a0\ufe0f \u00a1Importante! No use <code>CORS_ALLOWED_ORIGINS='*'</code> en un servidor de producci\u00f3n si su API no es completamente p\u00fablica. Esto abre una vulnerabilidad potencial. Siempre enumere los dominios espec\u00edficos de su frontend.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/2/#3-configuracion-de-cors-en-fastapi","title":"3. Configuraci\u00f3n de CORS en FastAPI","text":"<p>FastAPI utiliza el concepto de Middleware (software intermedio) para manejar tareas transversales como CORS.</p> <p>Paso 1: Abra el archivo principal de su aplicaci\u00f3n</p> <p>Este es el archivo donde crea la instancia de FastAPI (normalmente <code>main.py</code>).</p> <p>Paso 2: A\u00f1ada <code>CORSMiddleware</code></p> <p>FastAPI proporciona un middleware listo para usar para la configuraci\u00f3n de CORS.</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware # 1. Importamos el middleware\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"API para gesti\u00f3n de planetas en la galaxia\",\n    version=\"1.0.0\"\n)\n\n# 2. Lista de or\u00edgenes permitidos (origins)\norigins = [\n    \"http://localhost:5500\",\n    \"http://127.0.0.1:5500\",\n    # En producci\u00f3n, aqu\u00ed estar\u00e1 el dominio de su frontend\n    # \"https://my-awesome-app.com\",\n]\n\n# 3. A\u00f1adimos el middleware a la aplicaci\u00f3n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # Permitimos los or\u00edgenes especificados\n    allow_credentials=True, # Permitimos las cookies (ser\u00e1 necesario para la autenticaci\u00f3n)\n    allow_methods=[\"*\"],    # Permitimos todos los m\u00e9todos (GET, POST, etc.)\n    allow_headers=[\"*\"],    # Permitimos todos los encabezados\n)\n\n# ... aqu\u00ed sus routers y el resto del c\u00f3digo\n</code></pre> <p>Paso 3: Reinicie el servidor Uvicorn El servidor Uvicorn normalmente se recarga autom\u00e1ticamente al cambiar el c\u00f3digo. Si no, rein\u00edcielo manualmente. Ahora su servidor FastAPI responder\u00e1 correctamente a las solicitudes <code>OPTIONS</code> desde el frontend.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/2/#cuestionario-de-repaso","title":"Cuestionario de repaso","text":"<p>1. La solicitud que el navegador env\u00eda antes de la principal para verificar CORS se llama:</p>  a) CHECK request  b) Preflight request  c) Handshake request <p>2. En Laravel moderno (11+), las configuraciones b\u00e1sicas de CORS se establecen principalmente en:</p>  a) El archivo bootstrap/app.php  b) El archivo .env  c) El archivo routes/api.php <p>3. En FastAPI, para configurar CORS se utiliza:</p>  a) El decorador @app.cors()  b) La clase incorporada Security  c) El middleware <p>4. \u00bfQu\u00e9 valor de CORS_ALLOWED_ORIGINS es el m\u00e1s seguro para producci\u00f3n?</p>  a) CORS_ALLOWED_ORIGINS='*'  b) CORS_ALLOWED_ORIGINS=http://my-frontend.com,https://my-frontend.com  c) No establecer esta variable Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>\u00a1Se ha convertido en un \"diplom\u00e1tico de comunicaciones interestelares\"! Sus APIs ahora pueden interactuar de forma segura con aplicaciones externas, utilizando enfoques modernos y correctos. - \u2705 Entendimos el mecanismo de funcionamiento de CORS y las solicitudes preflight. - \ud83d\udd27 Configuramos CORS para Laravel 11+ a trav\u00e9s del archivo <code>.env</code>. - \u2699\ufe0f Configuramos CORS para FastAPI usando <code>CORSMiddleware</code>. - \ud83d\udef0\ufe0f Establecimos con \u00e9xito la conexi\u00f3n entre el frontend y el backend.</p> <p>El puente de comunicaci\u00f3n est\u00e1 construido y protegido. Ahora podemos pensar en c\u00f3mo permitir que solo \"personal autorizado\" utilice este puente.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>El criterio principal de \u00e9xito es la ausencia de errores CORS en la consola del navegador al solicitar datos desde el frontend.</li> <li>En la pesta\u00f1a \"Network\" (Red) de las herramientas del desarrollador, puede ver dos solicitudes a su API: la primera con el m\u00e9todo <code>OPTIONS</code> (estado 200/204) y la segunda con el m\u00e9todo <code>GET</code> (estado 200). Esta es una demostraci\u00f3n clara del funcionamiento de CORS.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/3/","title":"Cap\u00edtulo 6.3: Autenticaci\u00f3n B\u00e1sica","text":"<p>Tiempo de estudio: 1 hora</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/3/#1-autenticacion-api-el-pase-al-centro-de-control-de-mision","title":"1. Autenticaci\u00f3n API: El pase al Centro de Control de Misi\u00f3n","text":"<p>La autenticaci\u00f3n es el proceso de verificar la identidad del usuario. A diferencia de los sitios web con sesiones y cookies, las API sin estado (stateless) suelen utilizar tokens.</p> <p>El proceso es el siguiente:</p> <ol> <li>El usuario env\u00eda su nombre de usuario y contrase\u00f1a a un endpoint especial (por ejemplo, <code>/login</code>).</li> <li>El servidor los verifica. Si son correctos, genera un token \u00fanico y cifrado (una cadena larga) y lo env\u00eda de vuelta.</li> <li>Con cada solicitud posterior a recursos protegidos (por ejemplo, <code>POST /planets</code>), el usuario debe adjuntar este token en el encabezado <code>Authorization</code>.</li> <li>El servidor verifica la validez del token y, si es correcto, ejecuta la solicitud.</li> </ol> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <ul> <li>Nombre de usuario/contrase\u00f1a = Su escaneo biom\u00e9trico para obtener un pase.</li> <li>Token = El pase electr\u00f3nico (tarjeta de identificaci\u00f3n) que recibe al entrar al Centro de Control de Misi\u00f3n.</li> <li>Encabezado <code>Authorization: Bearer &lt;token&gt;</code> = Usted acerca su pase al lector en cada puerta protegida.</li> <li>Endpoints protegidos (POST, PUT, DELETE) = Puertas a la sala de servidores o al panel de control de lanzamiento.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/3/#2-autenticacion-en-laravel-sanctum","title":"2. Autenticaci\u00f3n en Laravel: Sanctum","text":"<p>Laravel ofrece una soluci\u00f3n elegante para la autenticaci\u00f3n API: Laravel Sanctum. Es ideal para SPA (aplicaciones de una sola p\u00e1gina), aplicaciones m\u00f3viles y API simples basadas en tokens.</p> <p>Paso 1: Instalaci\u00f3n y configuraci\u00f3n de Sanctum</p> <p>Sanctum ya est\u00e1 instalado en una aplicaci\u00f3n Laravel est\u00e1ndar, pero verificaremos la configuraci\u00f3n.</p> <ol> <li>Publicaci\u00f3n de la configuraci\u00f3n (si a\u00fan no lo ha hecho): <pre><code>php artisan vendor:publish --provider=\"Laravel\\Sanctum\\SanctumServiceProvider\"\n</code></pre></li> <li>Ejecuci\u00f3n de las migraciones (crear\u00e1 la tabla <code>personal_access_tokens</code>): <pre><code>php artisan migrate\n</code></pre></li> <li>Adici\u00f3n del trait al modelo <code>User</code>:     Abra <code>app/Models/User.php</code> y aseg\u00farese de que utiliza el trait <code>HasApiTokens</code>.     <pre><code>// app/Models/User.php\nuse Laravel\\Sanctum\\HasApiTokens;\n\nclass User extends Authenticatable\n{\n    use HasApiTokens, HasFactory, Notifiable;\n    // ...\n}\n</code></pre></li> </ol> <p>Paso 2: Creaci\u00f3n de un endpoint para emitir tokens Necesitamos una ruta donde el usuario enviar\u00e1 su nombre de usuario/contrase\u00f1a.</p> <p>A\u00f1ada a <code>routes/api.php</code>: <pre><code>// routes/api.php\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Models\\User;\nuse Illuminate\\Validation\\ValidationException;\n\nRoute::post('/login', function (Request $request) {\n    $request-&gt;validate([\n        'email' =&gt; 'required|email',\n        'password' =&gt; 'required',\n    ]);\n\n    $user = User::where('email', $request-&gt;email)-&gt;first();\n\n    if (! $user || ! Hash::check($request-&gt;password, $user-&gt;password)) {\n        throw ValidationException::withMessages([\n            'email' =&gt; ['Las credenciales son incorrectas.'],\n        ]);\n    }\n\n    // Devolvemos el token\n    return response()-&gt;json([\n        'token' =&gt; $user-&gt;createToken('api-token')-&gt;plainTextToken\n    ]);\n});\n</code></pre></p> <p>Para la prueba, puede crear un usuario a trav\u00e9s de un seeder o Tinker.</p> <p>Paso 3: Protecci\u00f3n de rutas Ahora protegeremos nuestras operaciones CRUD. Modificaremos <code>routes/api.php</code>:</p> <pre><code>// routes/api.php\nuse App\\Http\\Controllers\\PlanetController;\n\n// Ruta p\u00fablica para ver planetas\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// Grupo de rutas protegidas\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n\n    // Ruta para cerrar sesi\u00f3n (eliminar el token)\n    Route::post('/logout', function (Request $request) {\n        $request-&gt;user()-&gt;currentAccessToken()-&gt;delete();\n        return response()-&gt;json(['message' =&gt; 'Ha cerrado sesi\u00f3n correctamente'], 200);\n    });\n});\n</code></pre> <p>El middleware <code>auth:sanctum</code> verificar\u00e1 la presencia de un token v\u00e1lido en el encabezado <code>Authorization</code>.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/3/#3-autenticacion-en-fastapi-oauth2-y-jwt","title":"3. Autenticaci\u00f3n en FastAPI: OAuth2 y JWT","text":"<p>FastAPI no tiene un sistema de autenticaci\u00f3n incorporado, pero s\u00ed herramientas potentes para implementarlo. El est\u00e1ndar de facto es OAuth2 con tokens JWT.</p> <p>Paso 1: Instalaci\u00f3n de dependencias <pre><code>pip install \"python-jose[cryptography]\" \"passlib[bcrypt]\" \"python-multipart\"\n</code></pre></p> <ul> <li><code>python-jose</code>: para crear y verificar tokens JWT.</li> <li><code>passlib</code>: para hashear y verificar contrase\u00f1as.</li> <li><code>python-multipart</code>: para procesar datos de formularios (<code>username</code> y <code>password</code>).</li> </ul> <p>Paso 2: Creaci\u00f3n del m\u00f3dulo de seguridad (<code>security.py</code>) Es una buena pr\u00e1ctica mover toda la l\u00f3gica de autenticaci\u00f3n a un archivo separado.</p> <p>Cree el archivo <code>security.py</code>:</p> <pre><code># security.py\nfrom fastapi import Depends, HTTPException, status\nfrom fastapi.security import OAuth2PasswordBearer\nfrom jose import JWTError, jwt\nfrom passlib.context import CryptContext\nfrom datetime import datetime, timedelta, timezone\n\n# --- Configuraci\u00f3n ---\nSECRET_KEY = \"your-super-secret-key-that-is-long-and-random\" # \u26a0\ufe0f \u00a1Reemplace con su propia clave!\nALGORITHM = \"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES = 30\n\n# --- Utilidades ---\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/api/v1/login\")\n\n# --- Funciones ---\ndef verify_password(plain_password, hashed_password):\n    return pwd_context.verify(plain_password, hashed_password)\n\ndef get_password_hash(password):\n    return pwd_context.hash(password)\n\ndef create_access_token(data: dict):\n    to_encode = data.copy()\n    expire = datetime.now(timezone.utc) + timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    to_encode.update({\"exp\": expire})\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n    return encoded_jwt\n\n# --- Funci\u00f3n de dependencia para verificar el token ---\ndef get_current_user(token: str = Depends(oauth2_scheme)):\n    credentials_exception = HTTPException(\n        status_code=status.HTTP_401_UNAUTHORIZED,\n        detail=\"No se pudieron validar las credenciales\",\n        headers={\"WWW-Authenticate\": \"Bearer\"},\n    )\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\n        username: str = payload.get(\"sub\")\n        if username is None:\n            raise credentials_exception\n    except JWTError:\n        raise credentials_exception\n    # Aqu\u00ed se podr\u00eda devolver el usuario de la DB, por ahora solo devolvemos el nombre\n    return {\"username\": username}\n</code></pre> <p>Paso 3: Integraci\u00f3n en <code>main.py</code> Ahora lo conectaremos a nuestra aplicaci\u00f3n.</p> <ol> <li> <p>Crearemos el endpoint <code>/login</code>: <pre><code># main.py\nfrom fastapi.security import OAuth2PasswordRequestForm\nfrom fastapi import Depends, APIRouter\nfrom . import security # Importamos nuestro m\u00f3dulo\n\n# ... su c\u00f3digo FastAPI ...\nrouter = APIRouter(prefix=\"/api/v1\")\n\n@router.post(\"/login\")\ndef login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):\n    # Aqu\u00ed debe haber una verificaci\u00f3n del usuario en la DB\n    # Por ejemplo, tenemos un usuario de prueba\n    is_user_valid = (form_data.username == \"testuser\" and\n                     security.verify_password(\"testpass\", security.get_password_hash(\"testpass\")))\n\n    if not is_user_valid:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"Nombre de usuario o contrase\u00f1a incorrectos\",\n        )\n    access_token = security.create_access_token(data={\"sub\": form_data.username})\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\n\n# ...\napp.include_router(router)\n</code></pre></p> </li> <li> <p>Proteger endpoints:</p> <p>Usaremos nuestra dependencia <code>get_current_user</code>. <pre><code># main.py o en su router de planetas\n\n@router.post(\"/planets\", status_code=status.HTTP_201_CREATED)\ndef create_planet(\n    planet: PlanetCreate,\n    current_user: dict = Depends(security.get_current_user) # &lt;-- \u00a1Protecci\u00f3n!\n):\n    # L\u00f3gica para crear el planeta...\n    print(f\"El usuario {current_user['username']} crea un planeta.\")\n    # ...\n    return new_planet\n\n# Tambi\u00e9n protegemos PUT y DELETE\n</code></pre></p> </li> </ol>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/3/#4-uso-de-tokens-en-el-frontend","title":"4. Uso de tokens en el frontend","text":"<p>Nuestro frontend ahora debe primero obtener el token, guardarlo (por ejemplo, en <code>localStorage</code>) y adjuntarlo a cada solicitud protegida.</p> <p>Ejemplo en JavaScript (<code>fetch</code>): <pre><code>// 1. Iniciamos sesi\u00f3n\nasync function login(email, password) {\n    const response = await fetch('http://localhost:8001/api/login', { // Direcci\u00f3n de la API de Laravel\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({email, password})\n    });\n    const data = await response.json();\n\n    if (data.token) {\n        localStorage.setItem('api_token', data.token); // Guardamos el token\n    }\n}\n\n// 2. Realizamos una solicitud protegida\nasync function createPlanet(planetData) {\n    const token = localStorage.getItem('api_token');\n\n    const response = await fetch('http://localhost:8001/api/planets', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` // &lt;--- \u00a1Adjuntamos el token!\n        },\n        body: JSON.stringify(planetData)\n    });\n    // ...\n}\n</code></pre></p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/3/#cuestionario-de-consolidacion","title":"Cuestionario de consolidaci\u00f3n","text":"<p>margin-top: 20px;         padding: 15px;         border-radius: 5px;     } </p> <p>1. Las API sin estado m\u00e1s a menudo utilizan para la autenticaci\u00f3n:</p>  a) Sesiones y cookies  b) Tokens (por ejemplo, JWT)  c) Direcciones IP <p>2. En Laravel, para proteger rutas con tokens se utiliza el middleware:</p>  a) auth:api  b) auth:sanctum  c) verified <p>3. En FastAPI, para obtener datos del formulario de inicio de sesi\u00f3n se utiliza la dependencia:</p>  a) Body()  b) Form()  c) OAuth2PasswordRequestForm = Depends() <p>4. \u00bfC\u00f3mo se transmite el token del cliente al servidor en una solicitud protegida?</p>  a) En el par\u00e1metro URL `?token=...`  b) En el cuerpo de la solicitud  c) En el encabezado HTTP `Authorization: Bearer ` Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has instalado un \"sistema de control de acceso\" en tus API. Ahora no cualquiera puede realizar cambios en tu \"base de datos gal\u00e1ctica\".</p> <ul> <li>\u2705 Comprendido el principio de autenticaci\u00f3n basada en tokens.</li> <li>\ud83d\udd10 Implementada la emisi\u00f3n de tokens y la protecci\u00f3n de rutas en Laravel Sanctum.</li> <li>\u2699\ufe0f Configurada la autenticaci\u00f3n basada en OAuth2 y JWT en FastAPI.</li> <li>\ud83d\udef0\ufe0f Aprendido c\u00f3mo el frontend debe guardar y usar el token.</li> </ul> <p>Tus API no solo son funcionales, sino tambi\u00e9n seguras. Sin embargo, para que otros desarrolladores puedan utilizarlas, necesitan \"instrucciones de uso\".</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>Intenta hacer una solicitud <code>POST</code> a <code>/api/planets</code> (en Laravel) o <code>/api/v1/planets</code> (en FastAPI) sin un token usando Postman o Insomnia. Deber\u00edas recibir un error <code>401 Unauthorized</code>.</li> <li>Haz una solicitud a <code>/login</code>, obt\u00e9n un token, a\u00f1\u00e1delo al encabezado <code>Authorization</code> y repite la solicitud <code>POST</code>. Deber\u00eda ejecutarse con \u00e9xito.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/4/","title":"Cap\u00edtulo 6.4: Documentaci\u00f3n de API","text":"<p>Tiempo de estudio: 30 minutos</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/4/#1-por-que-es-necesaria-la-documentacion-de-api","title":"1. \u00bfPor qu\u00e9 es necesaria la documentaci\u00f3n de API?","text":"<p>Imagine que le dan un mando de control de una nave espacial compleja sin ninguna etiqueta en los botones. Los pulsar\u00eda al azar, arriesg\u00e1ndose a activar la catapulta en lugar de encender la luz. La documentaci\u00f3n de API son precisamente esas etiquetas e instrucciones.</p> <p>Una buena documentaci\u00f3n:</p> <ul> <li>Ahorra tiempo: Los desarrolladores no necesitan adivinar qu\u00e9 endpoints existen, qu\u00e9 par\u00e1metros aceptan y qu\u00e9 devuelven.</li> <li>Reduce errores: Una descripci\u00f3n clara de los formatos de datos y los c\u00f3digos de error ayuda a evitar el uso incorrecto de la API.</li> <li>Simplifica la integraci\u00f3n: El equipo de frontend puede trabajar en paralelo con el equipo de backend, bas\u00e1ndose en la documentaci\u00f3n como un contrato.</li> <li>Es su legado: Dentro de seis meses, se lo agradecer\u00e1 a usted mismo cuando regrese al proyecto.</li> </ul> <p>\ud83d\udca1 Analog\u00eda espacial:</p> <ul> <li>API = Sistema de control complejo de una estaci\u00f3n espacial.</li> <li>Documentaci\u00f3n de API = Manual para astronautas. Describe:</li> <li>Qu\u00e9 comando (<code>endpoint</code>) enviar para abrir la compuerta.</li> <li>Qu\u00e9 par\u00e1metros (<code>cuerpo de la solicitud</code>) pasar para configurar el sistema de soporte vital.</li> <li>Qu\u00e9 se\u00f1ales (<code>respuestas de API</code>) esperar a cambio.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/4/#2-documentacion-en-fastapi-magia-automatica","title":"2. Documentaci\u00f3n en FastAPI: Magia autom\u00e1tica","text":"<p>FastAPI hace que la documentaci\u00f3n sea incre\u00edblemente sencilla. Genera autom\u00e1ticamente documentaci\u00f3n interactiva basada en su c\u00f3digo, utilizando los est\u00e1ndares de OpenAPI y Swagger UI.</p> <p>Paso 1: Agregue metadatos a su aplicaci\u00f3n</p> <p>En <code>main.py</code> puede agregar descripciones que aparecer\u00e1n en la documentaci\u00f3n.</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel, Field\n\n# ... (c\u00f3digo FastAPI)\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"\"\"\nAPI para la exploraci\u00f3n de la galaxia. \ud83d\ude80\n\nPodr\u00e1:\n* **Ver planetas**.\n* **Agregar nuevos mundos** (se requiere autenticaci\u00f3n).\n    \"\"\",\n    version=\"1.0.0\",\n    contact={\n        \"name\": \"Ingeniero Jefe del Centro de Control de Misi\u00f3n\",\n        \"url\": \"https://example.com/contact\",\n        \"email\": \"engineer@example.com\",\n    },\n)\n</code></pre> <p>Paso 2: Describa sus modelos y endpoints</p> <p>Cuanto m\u00e1s detalladamente describa los modelos Pydantic y los par\u00e1metros de los endpoints, mejor ser\u00e1 la documentaci\u00f3n.</p> <pre><code># En el archivo de modelos Pydantic o en main.py\n\nclass PlanetBase(BaseModel):\n    name: str = Field(..., example=\"Tierra\", description=\"Nombre del planeta\")\n    description: str = Field(..., example=\"Un planeta azul con vida diversa\", description=\"Breve descripci\u00f3n\")\n    # ...\n\nclass Planet(PlanetBase):\n    id: int\n    is_habitable: bool\n\n    class Config:\n        orm_mode = True # o from_attributes = True en Pydantic v2\n\n# En el archivo de rutas\n@router.get(\n    \"/planets\",\n    response_model=list[Planet],\n    summary=\"Obtener la lista de todos los planetas\",\n    description=\"Devuelve una lista de todos los planetas conocidos con paginaci\u00f3n (en el futuro).\"\n)\ndef get_planets():\n    # ...\n\n@router.post(\n    \"/planets\",\n    # ...\n    summary=\"Crear un nuevo planeta\",\n    responses={\n        401: {\"description\": \"Usuario no autorizado\"},\n        422: {\"description\": \"Error de validaci\u00f3n de datos\"}\n    }\n)\ndef create_planet(planet: PlanetCreate, ...):\n    # ...\n</code></pre> <ul> <li><code>Field(..., example=\"...\")</code>: Agrega ejemplos a la documentaci\u00f3n.</li> <li><code>summary</code>: Descripci\u00f3n breve del endpoint.</li> <li><code>description</code>: Descripci\u00f3n detallada.</li> <li><code>responses</code>: Descripci\u00f3n de posibles c\u00f3digos de respuesta, adem\u00e1s del exitoso.</li> </ul> <p>Paso 3: Abra la documentaci\u00f3n en el navegador</p> <p>Inicie su servidor FastAPI y abra dos URL m\u00e1gicas:</p> <ol> <li><code>http://127.0.0.1:8000/docs</code> \u2014 abrir\u00e1 la documentaci\u00f3n interactiva de Swagger UI. \u00a1Aqu\u00ed no solo podr\u00e1 leer, sino tambi\u00e9n probar sus endpoints directamente desde el navegador!</li> <li><code>http://127.0.0.1:8000/redoc</code> \u2014 abrir\u00e1 una vista alternativa de la documentaci\u00f3n de ReDoc. Es menos interactiva, pero a menudo m\u00e1s legible.</li> </ol>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/4/#3-documentacion-en-laravel-uso-de-paquetes-de-terceros","title":"3. Documentaci\u00f3n en Laravel: Uso de paquetes de terceros","text":"<p>A diferencia de FastAPI, Laravel no genera documentaci\u00f3n \"de f\u00e1brica\". Sin embargo, existen excelentes paquetes que lo hacen, analizando su c\u00f3digo. El m\u00e1s popular es Scribe.</p> <p>Paso 1: Instalaci\u00f3n de Scribe <pre><code>composer require --dev \"knuckleswtf/scribe\"\n</code></pre> <pre><code>php artisan vendor:publish --tag=scribe-config\nphp artisan scribe:generate\n</code></pre></p> <p>Paso 2: Descripci\u00f3n de endpoints usando DocBlocks</p> <p>Scribe lee los PHP DocBlocks (comentarios como <code>/** ... */</code>) sobre los m\u00e9todos de su controlador.</p> <p>Abra <code>app/Http/Controllers/PlanetController.php</code>:</p> <pre><code>// app/Http/Controllers/PlanetController.php\n\n/**\n * @group Planetas\n * API para la gesti\u00f3n de planetas\n */\nclass PlanetController extends Controller\n{\n    /**\n     * Obtener lista de planetas\n     *\n     * Devuelve una lista paginada de todos los planetas en la galaxia.\n     *\n     * @unauthenticated\n     */\n    public function index()\n    {\n        // ...\n    }\n\n    /**\n     * Crear un nuevo planeta\n     *\n     * @authenticated\n     *\n     * @bodyParam name string required Nombre del planeta. Example: Kepler-186f\n     * @bodyParam description string required Descripci\u00f3n del planeta.\n     * @bodyParam size_km integer required Di\u00e1metro en kil\u00f3metros. Example: 14000\n     * @bodyParam is_habitable boolean \u00bfEs habitable el planeta? Example: true\n     *\n     * @response 201 {\n     *  \"id\": 4,\n     *  \"name\": \"Kepler-186f\",\n     *  \"description\": \"Primer planeta confirmado del tama\u00f1o de la Tierra en la zona habitable de otra estrella.\",\n     *  \"size_km\": 14000,\n     *  \"is_habitable\": true,\n     *  \"created_at\": \"2023-10-27T12:00:00.000000Z\",\n     *  \"updated_at\": \"2023-10-27T12:00:00.000000Z\"\n     * }\n     */\n    public function store(Request $request)\n    {\n        // ...\n    }\n    // ... y as\u00ed sucesivamente para otros m\u00e9todos\n}\n</code></pre> <p>Etiquetas clave de Scribe:</p> <ul> <li><code>@group</code>: Agrupa los endpoints.</li> <li><code>@unauthenticated</code> / <code>@authenticated</code>: Indica si se necesita un token.</li> <li><code>@bodyParam</code>: Describe un par\u00e1metro en el cuerpo de la solicitud.</li> <li><code>@response</code>: Ejemplo de una respuesta exitosa.</li> </ul> <p>Paso 3: Generaci\u00f3n y visualizaci\u00f3n de la documentaci\u00f3n</p> <p>Cada vez que realice cambios en los DocBlocks, ejecute el comando:</p> <p><pre><code>php artisan scribe:generate\n</code></pre> Scribe crear\u00e1 una p\u00e1gina HTML est\u00e1tica con su documentaci\u00f3n. \u00c1brala en: <code>http://your-app-url/docs</code>.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/4/#cuestionario-de-refuerzo","title":"Cuestionario de refuerzo","text":"<p>1. FastAPI genera documentaci\u00f3n basada en el est\u00e1ndar:</p>  a) GraphQL  b) OpenAPI (Swagger)  c) WSDL <p>2. \u00bfQu\u00e9 URL abre Swagger UI en FastAPI por defecto?</p>  a) /api/docs  b) /swagger  c) /docs <p>3. Paquete popular para generar documentaci\u00f3n en Laravel:</p>  a) Telescope  b) Scribe  c) Horizon <p>4. En Scribe, la etiqueta utilizada para describir los par\u00e1metros del cuerpo de la solicitud es:</p>  a) @param  b) @bodyParam  c) @request Verificar <p>\ud83d\ude80 Resumen del cap\u00edtulo:</p> <p>Has creado documentaci\u00f3n profesional, transformando tus APIs de \"cajas negras\" en herramientas comprensibles y f\u00e1ciles de usar.</p> <ul> <li>\u2705 Has comprendido la importancia cr\u00edtica de documentar APIs.</li> <li>\ud83e\ude84 Has aprendido a usar la generaci\u00f3n autom\u00e1tica de documentaci\u00f3n en FastAPI.</li> <li>\u2699\ufe0f Has dominado los fundamentos del paquete Scribe para documentar APIs en Laravel.</li> <li>\ud83d\udef0\ufe0f Te has asegurado de que una buena documentaci\u00f3n es el mejor asistente para cualquier desarrollador.</li> </ul> <p>Tus APIs no solo funcionan y est\u00e1n protegidas, sino que tambi\u00e9n est\u00e1n completamente listas para ser usadas por otros miembros del equipo. Queda un \u00faltimo paso, pero el m\u00e1s importante: la verificaci\u00f3n de seguridad final.</p> <p>\ud83d\udccc Verificaci\u00f3n:</p> <ul> <li>Para FastAPI: abre <code>/docs</code> en el navegador y prueba a ejecutar un <code>GET</code>-request a la lista de planetas directamente desde la interfaz de Swagger UI.</li> <li>Para Laravel: ejecuta <code>php artisan scribe:generate</code> y abre <code>/docs</code>. Aseg\u00farate de que los endpoints est\u00e9n agrupados y que el m\u00e9todo <code>store</code> tenga una descripci\u00f3n de los par\u00e1metros.</li> </ul>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/5/","title":"Cap\u00edtulo 6.5: Fundamentos de la seguridad de API","text":"<p>Tiempo de estudio: 45 minutos</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/5/#1-seguridad-api-defensa-multinivel-de-la-estacion","title":"1. Seguridad API: Defensa multinivel de la estaci\u00f3n","text":"<p>Imagine que su estaci\u00f3n espacial (API) se encuentra en un sector hostil del espacio. Un solo campo de fuerza (autenticaci\u00f3n) no es suficiente. Necesita un sistema de defensa integral:</p> <ul> <li>Escudos (HTTPS): Cifrado de todo el tr\u00e1fico.</li> <li>Sensores de anomal\u00edas (Rate Limiting): Protecci\u00f3n contra solicitudes demasiado frecuentes.</li> <li>Mamparos internos (Autorizaci\u00f3n): Separaci\u00f3n de derechos de acceso.</li> <li>Inspecci\u00f3n de cargas (Validaci\u00f3n): No confiar en ning\u00fan dato entrante.</li> <li>Caja fuerte secreta (Variables de entorno): Almacenamiento seguro de claves.</li> </ul> <p>Configuremos cada uno de estos niveles.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/5/#2-escudos-siempre-use-https","title":"2. Escudos: Siempre use HTTPS","text":"<p>\u00bfQu\u00e9 es esto? HTTPS (HyperText Transfer Protocol Secure) es una versi\u00f3n del protocolo HTTP que cifra todos los datos entre el cliente y el servidor. Sin \u00e9l, cualquiera que est\u00e9 \"escuchando\" la red (por ejemplo, en una red Wi-Fi p\u00fablica) puede interceptar inicios de sesi\u00f3n, contrase\u00f1as y tokens.</p> <p>\u00bfC\u00f3mo implementarlo?</p> <ul> <li>En producci\u00f3n \u2014 obligatorio. Al desplegar su API en un servidor real (Heroku, DigitalOcean, etc.), configure el servidor web (Nginx, Apache) para trabajar con un certificado SSL. Servicios como Let's Encrypt proporcionan certificados gratuitos.</li> <li>En el desarrollo local, es menos cr\u00edtico, pero herramientas como Laravel Herd o mkcert permiten configurar f\u00e1cilmente HTTPS local.</li> </ul> <p>\ud83d\udca1 Regla n.\u00ba 1 en seguridad de API: No hay HTTPS, no hay seguridad.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/5/#3-sensores-de-anomalias-limitacion-de-la-tasa-de-solicitudes-rate-limiting","title":"3. Sensores de anomal\u00edas: Limitaci\u00f3n de la tasa de solicitudes (Rate Limiting)","text":"<p>\u00bfQu\u00e9 es esto? Protecci\u00f3n contra ataques de fuerza bruta (cuando un atacante intenta adivinar una contrase\u00f1a enviando miles de solicitudes por segundo) y contra ataques DoS (cuando el servidor es \"bombardeado\" con solicitudes para que deje de responder). Rate Limiting limita el n\u00famero de solicitudes que un usuario (o direcci\u00f3n IP) puede realizar en un per\u00edodo de tiempo determinado.</p> <p>\u00bfC\u00f3mo implementarlo?</p> <ul> <li> <p>En Laravel: \u00a1El Middleware para la limitaci\u00f3n ya est\u00e1 integrado!   Abra <code>app/Http/Kernel.php</code> y busque la clave <code>middlewareGroups['api']</code>. Ya existe <code>'throttle:api'</code>. La configuraci\u00f3n de esta limitaci\u00f3n se encuentra en <code>app/Providers/RouteServiceProvider.php</code> en el m\u00e9todo <code>configureRateLimiting()</code>.   <pre><code>// app/Providers/RouteServiceProvider.php\nprotected function configureRateLimiting()\n{\n    RateLimiter::for('api', function (Request $request) {\n        return Limit::perMinute(60)-&gt;by($request-&gt;user()?-&gt;id ?: $request-&gt;ip());\n    });\n}\n</code></pre>   // Esto significa: 60 solicitudes por minuto por usuario (si est\u00e1 autenticado) o por direcci\u00f3n IP.</p> </li> <li> <p>En FastAPI: Se utiliza un paquete de terceros, por ejemplo, <code>slowapi</code>.</p> </li> <li> <p>Instalaci\u00f3n: <code>pip install slowapi</code></p> </li> <li>Integraci\u00f3n en <code>main.py</code>:       <pre><code># main.py\nfrom slowapi import Limiter, _rate_limit_exceeded_handler\nfrom slowapi.util import get_remote_address\nfrom slowapi.errors import RateLimitExceeded\n\nlimiter = Limiter(key_func=get_remote_address)\napp = FastAPI(...)\n\n# Conectamos el manejador de errores y el limitador.\napp.state.limiter = limiter\napp.add_exception_handler(RateLimitExceeded, _rate_limit_exceeded_handler)\n\n# Aplicamos a un endpoint espec\u00edfico.\n@router.get(\"/planets\")\n@limiter.limit(\"5/minute\") # 5 solicitudes por minuto\ndef get_planets(request: Request):\n    # ...\n</code></pre></li> </ul>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/5/#4-mamparos-internos-autorizacion-no-confundir-con-autenticacion","title":"4. Mamparos internos: Autorizaci\u00f3n (\u00a1no confundir con autenticaci\u00f3n!)","text":"<p>\u00bfQu\u00e9 es esto?</p> <ul> <li>Autenticaci\u00f3n responde a la pregunta \"\u00bfQui\u00e9n eres?\".</li> <li>Autorizaci\u00f3n responde a la pregunta \"\u00bfQu\u00e9 se te permite hacer?\".</li> </ul> <p>Por ejemplo, un usuario normal puede ver planetas, pero solo un usuario con el rol de \"administrador\" puede eliminarlos.</p> <p>\u00bfC\u00f3mo implementarlo?</p> <ul> <li> <p>En Laravel: Se utilizan Policies (Pol\u00edticas) o Gates (Compuertas).</p> </li> <li> <p>Creamos una pol\u00edtica: <code>php artisan make:policy PlanetPolicy --model=Planet</code></p> </li> <li>Describimos las reglas en <code>app/Policies/PlanetPolicy.php</code>:       <pre><code>class PlanetPolicy\n{\n    // Permitir la eliminaci\u00f3n solo a usuarios con el rol 'admin'\n    public function delete(User $user, Planet $planet): bool\n    {\n        return $user-&gt;role === 'admin';\n    }\n}\n</code></pre></li> <li> <p>Aplicamos la pol\u00edtica en el controlador <code>PlanetController.php</code>:       <pre><code>public function destroy(Planet $planet)\n{\n    // Verificamos si el usuario actual tiene derecho a eliminar\n    $this-&gt;authorize('delete', $planet);\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre></p> </li> <li> <p>En FastAPI: La l\u00f3gica de autorizaci\u00f3n generalmente se escribe manualmente dentro de los endpoints, utilizando la informaci\u00f3n del usuario obtenida del token.</p> </li> </ul> <pre><code># (asumimos que el token tiene un campo 'roles')\ndef get_current_active_user(token: str = Depends(oauth2_scheme)):\n    # ... decodificamos el token y obtenemos el usuario con roles de la BD\n    # user = get_user_from_db(username)\n    return user # devolvemos el objeto de usuario\n\n@router.delete(\"/planets/{planet_id}\")\ndef delete_planet(\n    planet_id: int,\n    current_user: User = Depends(get_current_active_user)\n):\n    if \"admin\" not in current_user.roles:\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail=\"Permisos insuficientes para realizar esta operaci\u00f3n\",\n        )\n    # ... l\u00f3gica de eliminaci\u00f3n ...\n</code></pre>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/5/#5-inspeccion-de-cargas-y-caja-fuerte-secreta-validacion-y-variables-de-entorno","title":"5. Inspecci\u00f3n de cargas y Caja fuerte secreta: Validaci\u00f3n y Variables de entorno","text":"<p>Estos dos puntos ya los hemos implementado, pero es importante recalcar su papel en la seguridad.</p> <ul> <li> <p>Nunca conf\u00ede en los datos entrantes (Validaci\u00f3n):</p> </li> <li> <p>Hemos utilizado <code>$request-&gt;validate()</code> en Laravel y modelos Pydantic en FastAPI. Esto nos protege de inyecciones SQL (al usar Eloquent/SQLAlchemy) y de datos incorrectos que pueden romper la aplicaci\u00f3n. \u00a1Siempre valide todo lo que viene del exterior!</p> </li> <li> <p>Guarde los secretos en <code>.env</code> (Variables de entorno):</p> </li> <li> <p>Las claves de las bases de datos, las claves secretas para JWT (<code>SECRET_KEY</code>), las claves de servicios de terceros \u2014 todo esto nunca debe ir al sistema de control de versiones (Git). Para ello existen los archivos <code>.env</code>, que se a\u00f1aden a <code>.gitignore</code>.</p> </li> </ul>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/5/#cuestionario-para-afianzar","title":"Cuestionario para afianzar","text":"<p>1. Para proteger contra la interceptaci\u00f3n de datos en redes p\u00fablicas se utiliza:</p>  a) Rate Limiting  b) HTTPS  c) CORS <p>2. La limitaci\u00f3n de la tasa de solicitudes (Rate Limiting) protege principalmente contra:</p>  a) Inyecciones SQL  b) Ataques de fuerza bruta y DoS  c) Scripting entre sitios (XSS) <p>3. La pregunta \"\u00bfQu\u00e9 se le permite hacer a este usuario?\" la resuelve:</p>  a) Autenticaci\u00f3n  b) Autorizaci\u00f3n  c) Validaci\u00f3n <p>4. Las claves secretas de API y las contrase\u00f1as de la base de datos deben almacenarse:</p>  a) Directamente en el c\u00f3digo para mayor comodidad  b) En un repositorio p\u00fablico en GitHub  c) En un archivo `.env` que est\u00e1 excluido de Git Verificar <p>\ud83d\ude80 Finalizaci\u00f3n del curso \u00a1Felicidades, comandante! Has completado todas las misiones con \u00e9xito.</p> <p>Has pasado de ser un novato que solo hab\u00eda o\u00eddo hablar de las API a un ingeniero capaz de dise\u00f1ar, desarrollar, documentar, proteger y probar de forma independiente un servicio web completo utilizando las dos tecnolog\u00edas m\u00e1s populares en sus respectivos ecosistemas.</p> <p>Has dominado el lenguaje universal REST, aprendido Laravel y FastAPI y construido un \"Centro de Control de Vuelo\" para ellos usando JavaScript puro.</p> <p>Este es un logro enorme. El mundo del desarrollo de API est\u00e1 ahora abierto para ti. Contin\u00faa explorando, aprendiendo y construyendo cosas asombrosas.</p>"},{"location":"es/Cap%C3%ADtulo%206%20Integraci%C3%B3n%20y%20mejores%20pr%C3%A1cticas/5/#fin-de-la-transmision","title":"Fin de la transmisi\u00f3n. \ud83d\ude80\u2604 Apoya la misi\u00f3n","text":"<p>La creaci\u00f3n de este tutorial es un viaje largo y complejo que requiere mucho tiempo y energ\u00eda. Si el material te ha sido \u00fatil, puedes ayudar a rellenar los tanques de combustible de nuestra expedici\u00f3n. Cada apoyo es otra \u00f3rbita hacia nuevos materiales \u00fatiles.</p> <p> ```</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/1/","title":"Chapitre 1.1 : Qu'est-ce qu'une API et pourquoi en a-t-on besoin ?","text":"<p>Temps d'\u00e9tude : 30 minutes</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/1/#1-introduction-lapi-comme-nud-damarrage-spatial","title":"1. Introduction : L'API comme \"n\u0153ud d'amarrage spatial\"","text":"<p>Imaginez que vous \u00eates le commandant d'un vaisseau spatial. Pour connecter votre vaisseau \u00e0 l'ISS, vous avez besoin d'un n\u0153ud d'amarrage standard. Sans lui, l'amarrage est impossible, m\u00eame si le vaisseau et la station sont parfaitement compatibles.</p> <p>Une API (Application Programming Interface) est un \"n\u0153ud d'amarrage\" similaire pour les programmes. - C'est un ensemble de r\u00e8gles qui permet \u00e0 diff\u00e9rentes applications d'\u00e9changer des donn\u00e9es et de travailler ensemble. - Exemple : lorsqu'une application mobile affiche la pr\u00e9vision m\u00e9t\u00e9orologique, elle utilise l'API d'un service m\u00e9t\u00e9o.</p> <p>\ud83d\udca1 Analogie spatiale : L'API est comme un protocole de communication entre la Terre et un rover martien. Le rover re\u00e7oit des commandes dans un format qu'il comprend (par exemple, \"prendre une photo du crat\u00e8re\"), ex\u00e9cute la t\u00e2che et renvoie les donn\u00e9es.</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/1/#2-pourquoi-les-api-sont-elles-necessaires","title":"2. Pourquoi les API sont-elles n\u00e9cessaires ?","text":"<ol> <li> <p>Simplification du d\u00e9veloppement    Au lieu de tout cr\u00e9er \u00e0 partir de z\u00e9ro, vous utilisez une API existante, comme l'API SpaceX.    <pre><code># Exemple : R\u00e9cup\u00e9ration des donn\u00e9es sur les lancements de SpaceX\nimport requests\nresponse = requests.get(\"https://api.spacexdata.com/v3/missions\")\nprint(response.json()[0])  # Affichage des donn\u00e9es\n</code></pre></p> </li> <li> <p>Automatisation des processus    L'API permet aux sondes robotiques de transmettre automatiquement des donn\u00e9es \u00e0 la Terre sans intervention manuelle.</p> </li> <li> <p>Int\u00e9gration de syst\u00e8mes    Comme l'amarrage des modules de l'ISS : une API connecte votre application aux syst\u00e8mes de paiement, aux bases de donn\u00e9es ou m\u00eame aux t\u00e9lescopes !</p> </li> <li> <p>Acc\u00e8s \u00e0 des donn\u00e9es uniques    Par exemple, l'API SpaceX fournit des donn\u00e9es r\u00e9elles sur les lancements de fus\u00e9es.</p> </li> </ol>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/1/#3-comment-fonctionne-une-api","title":"3. Comment fonctionne une API ?","text":"<ul> <li>Le Client (votre programme) envoie une requ\u00eate HTTP au serveur.</li> <li>Le Serveur (par exemple, la NASA) traite la requ\u00eate et renvoie une r\u00e9ponse au format JSON.</li> <li>Les donn\u00e9es sont des \"tr\u00e9sors cosmiques\" : coordonn\u00e9es de l'ISS, photos de galaxies, liste d'exoplan\u00e8tes.</li> </ul> <p>\u26a1 Exemple de requ\u00eate \u00e0 l'API \"Open Notify\" (ISS) : <pre><code>curl \"http://api.open-notify.org/iss-now.json\"\n</code></pre> R\u00e9ponse : <pre><code>{\n  \"message\": \"success\",\n  \"timestamp\": 1725431234,\n  \"iss_position\": {\n    \"latitude\": \"51.1234\",\n    \"longitude\": \"-120.5678\"\n  }\n}\n</code></pre></p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/1/#4-types-dapi-bref-apercu","title":"4. Types d'API (Bref aper\u00e7u)","text":"Type Exemple spatial O\u00f9 est utilis\u00e9e REST Communication standard \"Centre de Contr\u00f4le \u2194 satellite\" Services web (90% des cas) GraphQL \"Requ\u00eate personnalis\u00e9e\" (par exemple, \"donne-moi seulement la taille et la masse de la plan\u00e8te\") Syst\u00e8mes complexes SOAP Comme le chiffrement radio dans les anciennes missions Applications d'entreprise <p>Dans ce tutoriel, nous nous concentrerons sur l'API REST \u2014 le format le plus populaire.</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/1/#5-exemples-dapi-spatiales","title":"5. Exemples d'API spatiales","text":"<ol> <li>NASA Open API : Donn\u00e9es sur les ast\u00e9ro\u00efdes, photos du t\u00e9lescope Hubble.</li> <li>SpaceX API : Informations sur les lancements, les fus\u00e9es, les vaisseaux Dragon.</li> <li>Open Notify : Position actuelle de l'ISS, nombre de personnes dans l'espace.</li> </ol>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/1/#quiz-interactif","title":"Quiz interactif","text":"<p>1. Une API est...</p>  a) Une intelligence artificielle  b) Un ensemble de r\u00e8gles pour l'interaction des programmes  c) Un langage de programmation <p>2. Pourquoi utiliser une API au lieu d'\u00e9crire son propre code ?</p>  a) Pour gagner du temps  b) Pour acc\u00e9der \u00e0 des donn\u00e9es uniques  c) Les deux options <p>3. Quel format de donn\u00e9es une API retourne-t-elle le plus souvent ?</p>  a) XML  b) JSON  c) TXT V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Une API est la base du travail avec des donn\u00e9es provenant de sources externes. Tout comme un astronaute ne peut pas travailler sans communication avec le Centre de Contr\u00f4le, un d\u00e9veloppeur ne peut pas construire une application complexe sans API. Dans le prochain chapitre, nous apprendrons comment envoyer des \"commandes\" au serveur \u00e0 l'aide des m\u00e9thodes HTTP !</p> <p>\ud83d\udccc Astuce : Essayez d'effectuer une requ\u00eate \u00e0 l'API Open Notify pour savoir o\u00f9 se trouve l'ISS actuellement ! (Vous pouvez le faire m\u00eame avec une simple console)</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/2/","title":"Chapitre 1.2 : M\u00e9thodes HTTP et codes de statut","text":"<p>Temps d'\u00e9tude : 40 minutes</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/2/#1-http-le-langage-de-communication-dans-lespace","title":"1. HTTP : Le langage de communication dans l'espace","text":"<p>Imaginez que vous \u00eates le Centre de Contr\u00f4le de Mission (CCM), et le serveur API est le vaisseau spatial. HTTP (HyperText Transfer Protocol) est la communication radio entre vous.</p> <p>Chaque message contient :</p> <ul> <li> <p>M\u00e9thode \u2192 Ce qu'il faut faire (par exemple, \"envoyer une sonde\")</p> </li> <li> <p>Code de statut \u2192 R\u00e9sultat de l'op\u00e9ration (\"sonde lanc\u00e9e avec succ\u00e8s !\")</p> </li> </ul> <p>\ud83d\udca1 Analogie spatiale : <code>GET /stars</code> = \"CCM \u2192 Vaisseau : Donne les coordonn\u00e9es des \u00e9toiles !\" <code>200 OK</code> = \"Vaisseau \u2192 CCM : Coordonn\u00e9es transmises !\"</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/2/#2-methodes-http-principales","title":"2. M\u00e9thodes HTTP principales","text":"<p>Chaque m\u00e9thode est comme un type de commande pour une mission spatiale :</p> M\u00e9thode Analogie spatiale Exemple de requ\u00eate Description GET Demande de donn\u00e9es (t\u00e9lescope) <code>GET /planets</code> Obtenir la liste des plan\u00e8tes POST Envoi d'un nouvel objet (lancement de fus\u00e9e) <code>POST /satellites</code> Cr\u00e9er un nouveau satellite PUT Mise \u00e0 jour compl\u00e8te d'un objet (correction d'orbite) <code>PUT /satellites/iss</code> Mettre \u00e0 jour les donn\u00e9es de l'ISS DELETE Destruction d'un objet (d\u00e9sorbitation) <code>DELETE /debris/123</code> Supprimer les d\u00e9bris spatiaux <p>\u26a1 Exemple de code (Python) : <pre><code>import requests\n\n# GET : Obtenir les donn\u00e9es de la fus\u00e9e Falcon 9\n# Nous utilisons un endpoint r\u00e9el de l'API SpaceX\nresponse = requests.get(\"https://api.spacexdata.com/v4/rockets/5e9d0d95eda69973a809d1ec\")\nprint(response.status_code, response.json()['name']) # 200 Falcon 9\n\n# POST : Cr\u00e9er un nouveau post dans une API de test\n# Nous utilisons le service bac \u00e0 sable jsonplaceholder\nnew_post = {\"title\": \"Artemis Mission\", \"body\": \"Ready for launch\", \"userId\": 1}\nresponse = requests.post(\"https://jsonplaceholder.typicode.com/posts\", json=new_post)\nprint(response.status_code, response.json()['id'])  # 201 101 (ou autre ID)\n</code></pre></p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/2/#3-codes-de-statut-importants","title":"3. Codes de statut importants","text":"<p>La r\u00e9ponse du serveur est comme un signal d'un vaisseau spatial :</p> Groupe Code Analogie spatiale Description <code>2xx</code> 200 \u2705 \"Mission accomplie !\" Succ\u00e8s 201 \ud83d\ude80 \"Fus\u00e9e lanc\u00e9e !\" Objet cr\u00e9\u00e9 <code>3xx</code> 301 \ud83c\udf0d \"Le CCM a \u00e9t\u00e9 d\u00e9plac\u00e9 vers une nouvelle adresse\" Redirection <code>4xx</code> 400 \u274c \"Coordonn\u00e9es incorrectes dans la requ\u00eate !\" Erreur client 404 \ud83e\ude90 \"Plan\u00e8te introuvable !\" Ressource introuvable <code>5xx</code> 500 \ud83d\udd25 \"Panne du syst\u00e8me de propulsion !\" Erreur serveur"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/2/#4-pratique-gestion-des-codes-de-statut","title":"4. Pratique : Gestion des codes de statut","text":"<p>V\u00e9rifiez toujours la r\u00e9ponse de l'API ! Exemple de gestion des erreurs : <pre><code>import requests\n\ndef get_post_data(post_id):\n    \"\"\"Fonction pour obtenir les donn\u00e9es d'un post avec gestion des codes de statut.\"\"\"\n    try:\n        response = requests.get(f\"https://jsonplaceholder.typicode.com/posts/{post_id}\")\n\n        # V\u00e9rifie le code de statut de la r\u00e9ponse\n        if response.status_code == 200:\n            print(f\"\u2705 Donn\u00e9es pour le post {post_id} obtenues avec succ\u00e8s !\")\n            return response.json()\n        elif response.status_code == 404:\n            print(f\"\u26a0\ufe0f Ressource pour le post {post_id} introuvable !\")\n            return None\n        else:\n            # G\u00e8re les autres erreurs client (4xx) ou serveur (5xx)\n            print(f\"\ud83d\udea8 Une erreur est survenue ! Code de statut : {response.status_code}\")\n            return None\n\n    except requests.exceptions.RequestException as e:\n        # G\u00e8re les erreurs de connexion (par exemple, pas d'internet)\n        print(f\"\ud83d\udd25 Erreur de connexion : {e}\")\n        return None\n\n# --- Testons notre fonction ---\nprint(\"--- Recherche d'un post existant ---\")\nget_post_data(1)\n\nprint(\"\\n--- Recherche d'un post inexistant ---\")\nget_post_data(9999) # Ce post n'existe pas, nous attendons 404\n</code></pre></p> <p>\ud83d\udd2d Exemple d'une API r\u00e9elle (SpaceX) : Requ\u00eate : <code>GET https://api.spacexdata.com/v4/ships/OCISLY</code> R\u00e9ponse : <code>200 OK</code> + donn\u00e9es sur le vaisseau Requ\u00eate : <code>GET https://api.spacexdata.com/v4/ships/UNICORN</code> R\u00e9ponse : <code>404 Not Found</code></p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/2/#quiz-de-consolidation","title":"Quiz de consolidation","text":"<p>1. Quelle m\u00e9thode utiliser pour obtenir des donn\u00e9es sur les \u00e9toiles ?</p>  a) POST  b) PUT  c) GET <p>2. Le statut `201 Created` signifie :</p>  a) Objet supprim\u00e9  b) Objet cr\u00e9\u00e9  c) Erreur serveur <p>3. La m\u00e9thode pour une mise \u00e0 jour compl\u00e8te des donn\u00e9es d'un satellite :</p>  a) PATCH  b) DELETE  c) PUT <p>4. Que signifie le statut `500 Internal Server Error` ?</p>  a) Erreur dans la requ\u00eate du client  b) Panne du serveur  c) Ex\u00e9cution r\u00e9ussie V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre : Les m\u00e9thodes HTTP sont vos commandes pour les missions spatiales, et les codes de statut sont les rapports sur leur ex\u00e9cution. Rappelez-vous :</p> <p><code>GET</code> = \"Donne les donn\u00e9es\", <code>POST</code> = \"Cr\u00e9e un nouveau\", <code>PUT</code> = \"Mets tout \u00e0 jour\", <code>DELETE</code> = \"Supprime\" <code>2xx</code> = Succ\u00e8s, <code>4xx</code> = Ton erreur, <code>5xx</code> = Probl\u00e8me c\u00f4t\u00e9 serveur</p> <p>Pr\u00e9parez-vous au lancement ! Dans le prochain chapitre, nous d\u00e9chiffrerons les \"t\u00e9l\u00e9grammes\" du serveur : le format JSON.</p> <p>\ud83d\udccc Pratique : Utilisez l'API SpaceX pour envoyer un <code>GET /launches/latest</code> et \u00e9tudier les codes de r\u00e9ponse !</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/3/","title":"Chapitre 1.3 : Le format JSON","text":"<p>Temps d'\u00e9tude : 35 minutes</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/3/#1-json-le-langage-de-la-communication-spatiale","title":"1. JSON : Le langage de la communication spatiale","text":"<p>Imaginez qu'une sonde spatiale et le Centre de Contr\u00f4le de Mission parlent des langues diff\u00e9rentes. Le JSON (JavaScript Object Notation) est un langage de donn\u00e9es universel, compr\u00e9hensible par les humains et les machines. Comme la langue internationale des astronautes !</p> <p>Propri\u00e9t\u00e9s principales :</p> <ul> <li>\ud83e\udeb6 L\u00e9ger : transmission rapide m\u00eame avec un signal faible</li> <li>\ud83d\udc40 Lisible par l'homme : la structure est visible \u00e0 l'\u0153il nu</li> <li>\ud83d\udd04 Universel : pris en charge par tous les langages de programmation</li> </ul> <p>\ud83d\udca1 Analogie spatiale :</p> <p>Le JSON est comme un t\u00e9l\u00e9gramme num\u00e9rique avec des donn\u00e9es sur les \u00e9toiles. Au lieu du morse, des structures claires <code>{cl\u00e9: valeur}</code>.</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/3/#2-anatomie-dun-message-json","title":"2. Anatomie d'un message JSON","text":"<p>Le JSON est constitu\u00e9 de deux types de structures :</p> <p>A. Objets (Vaisseaux spatiaux) <pre><code>{\n  \"name\": \"Voyager-1\",\n  \"launch_year\": 1977,\n  \"is_active\": true,\n  \"position\": [-19.1, 42.7, 0.3]\n}\n</code></pre></p> <p>B. Tableaux (Amas stellaires) <pre><code>[\n  {\"name\": \"Sirius\", \"magnitude\": -1.46},\n  {\"name\": \"Canopus\", \"magnitude\": -0.74},\n  {\"name\": \"Arcturus\", \"magnitude\": -0.05}\n]\n</code></pre></p> <p>\u26a1 R\u00e8gles de syntaxe :</p> <ul> <li>Cl\u00e9s entre guillemets <code>\" \"</code></li> <li>Valeurs : cha\u00eenes de caract\u00e8res, nombres, bool\u00e9ens (<code>true</code>/<code>false</code>), <code>null</code></li> <li>Donn\u00e9es s\u00e9par\u00e9es par des virgules</li> <li>Accolades <code>{}</code> pour les objets, crochets <code>[]</code> pour les tableaux</li> </ul>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/3/#3-json-vs-xml-la-bataille-des-formats","title":"3. JSON vs XML : La bataille des formats","text":"Param\u00e8tre JSON (Satellite moderne) XML (Ancien t\u00e9lescope) Lisibilit\u00e9 \u00c9lev\u00e9e (acc\u00e8s direct aux champs) Faible (balises <code>&lt;planet&gt;...&lt;/planet&gt;</code>) Taille Compact Volumineux (+30% \u00e0 la taille) Traitement Rapide Lent Exemple <code>{\"planet\": \"Mars\"}</code> <code>&lt;planet&gt;Mars&lt;/planet&gt;</code> <p>\ud83d\udd2d Pourquoi le JSON a-t-il gagn\u00e9 dans l'espace ?</p> <p>Les API de la NASA, SpaceX et l'ESA utilisent le JSON \u2014 il est id\u00e9al pour le transfert de donn\u00e9es !</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/3/#4-travailler-avec-json-dans-le-code","title":"4. Travailler avec JSON dans le code","text":"<p>Exemple Python (r\u00e9cup\u00e9ration de donn\u00e9es sur la Lune) : <pre><code>import requests\nimport json\n\n# Nous utilisons une API r\u00e9elle, par exemple, pour obtenir des donn\u00e9es sur le syst\u00e8me solaire\n# de l'API OpenData du Syst\u00e8me Solaire\ntry:\n    response = requests.get(\"https://api.le-systeme-solaire.net/rest/bodies/terre\")\n    response.raise_for_status() # V\u00e9rifie les erreurs HTTP (4xx, 5xx)\n\n    planet_data = response.json()\n\n    print(f\"Nom : {planet_data['englishName']}\")\n    print(f\"Satellites : {[moon['moon'] for moon in planet_data['moons']]}\")\n\n    # Conversion du dictionnaire Python en cha\u00eene JSON pour l'enregistrement\n    planet_json_str = json.dumps(planet_data, indent=2, ensure_ascii=False) # ensure_ascii=False pour le cyrillique\n    print(\"\\n--- JSON Format\u00e9 ---\")\n    print(planet_json_str)\n\nexcept requests.exceptions.RequestException as e:\n    print(f\"Erreur de requ\u00eate : {e}\")\n</code></pre></p> <p>Exemple JavaScript (traitement des donn\u00e9es du t\u00e9lescope) : <pre><code>const Data = `{\n  \"id\": \"terre\",\n  \"name\": \"La Terre\",\n  \"englishName\": \"Earth\",\n  \"isPlanet\": true,\n  \"moons\": [\n    {\n      \"moon\": \"La Lune\",\n      \"rel\": \"https://api.le-systeme-solaire.net/rest/bodies/lune\"\n    }\n  ],\n  \"semimajorAxis\": 149598023,\n  \"perihelion\": 147095000,\n  \"aphelion\": 152100000,\n  \"eccentricity\": 0.0167,\n  \"inclination\": 0,\n  \"mass\": {\n    \"massValue\": 5.97237,\n    \"massExponent\": 24\n  },\n  \"vol\": {\n    \"volValue\": 1.08321,\n    \"volExponent\": 12\n  },\n  \"density\": 5.5136,\n  \"gravity\": 9.8,\n  \"escape\": 11190,\n  \"meanRadius\": 6371.0084,\n  \"equaRadius\": 6378.1366,\n  \"polarRadius\": 6356.8,\n  \"flattening\": 0.00335,\n  \"dimension\": \"\",\n  \"sideralOrbit\": 365.256,\n  \"sideralRotation\": 23.9345,\n  \"aroundPlanet\": null,\n  \"discoveredBy\": \"\",\n  \"discoveryDate\": \"\",\n  \"alternativeName\": \"\",\n  \"axialTilt\": 23.4393,\n  \"avgTemp\": 288,\n  \"mainAnomaly\": 358.617,\n  \"argPeriapsis\": 85.901,\n  \"longAscNode\": 18.272,\n  \"bodyType\": \"Planet\"\n}`;\n\nconst dataObj = JSON.parse(Data);\nconsole.log(dataObj.target);\n</code></pre></p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/3/#5-validation-json-verification-du-signal","title":"5. Validation JSON : V\u00e9rification du \"signal\"","text":"<p>Avant d'utiliser les donn\u00e9es, assurez-vous que le JSON :</p> <ol> <li> <p>A une structure correcte (v\u00e9rifiez les parenth\u00e8ses !)</p> </li> <li> <p>Contient les champs attendus</p> </li> <li> <p>N'a pas d'erreurs de syntaxe</p> </li> </ol> <p>Outils : - JSONLint (comme un d\u00e9tecteur de d\u00e9bris spatiaux pour le JSON) - Parseurs de langage int\u00e9gr\u00e9s (g\u00e9n\u00e9reront une erreur en cas de format incorrect)</p> <p>\u26a0\ufe0f Exemple d'erreur :</p> <p><code>{\"planet\": \"Mars\"</code> \u2192 Pas d'accolade fermante !</p> <p>Solution : Utilisez toujours <code>json.loads()</code> en Python ou <code>JSON.parse()</code> en JS pour la v\u00e9rification.</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/3/#quiz-pour-le-renforcement","title":"Quiz pour le renforcement","text":"<p>1. JSON signifie...</p>  a) Java Space Object Notation  b) JavaScript Object Notation  c) Jupiter's Satellite Orbital Network <p>2. Comment un objet est-il d\u00e9sign\u00e9 en JSON :</p>  a) ()  b) {}  c) [] <p>3. Qu'est-ce qui N'est PAS une valeur valide en JSON?</p>  a) \"name\": \"Saturn\"  b) \"radius_km\": 58232  c) \"has_rings\": undefined <p>4. Pourquoi JSON est-il meilleur que XML pour les API spatiales ?</p>  a) Taille r\u00e9duite et haute vitesse  b) Prise en charge des encodages extraterrestres  c) Possibilit\u00e9 de stocker des vid\u00e9os <p>5. Comment convertir une cha\u00eene JSON en objet Python?</p>  a) json.parse()  b) json.to_object()  c) json.loads() V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Le JSON est l'esp\u00e9ranto spatial du monde des API. En connaissant sa structure, vous pourrez :</p> <ul> <li> <p>\ud83d\udce1 Recevoir des donn\u00e9es de t\u00e9lescopes et de sondes</p> </li> <li> <p>\ud83d\udd27 Convertir des informations entre les syst\u00e8mes</p> </li> <li> <p>\ud83d\udef0\ufe0f Sauvegarder des donn\u00e9es scientifiques dans des fichiers</p> </li> </ul> <p>Pr\u00e9parez-vous \u00e0 l'amarrage ! Dans le prochain chapitre, nous explorerons l'architecture REST API \u2014 le syst\u00e8me de contr\u00f4le de la \"station spatiale\" de votre serveur.</p> <p>\ud83d\udccc Pratique : Rendez-vous sur NASA Open APIs, trouvez l'API des ast\u00e9ro\u00efdes (Asteroids NeoWs) et \u00e9tudiez la structure JSON de la r\u00e9ponse !</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/4/","title":"Chapitre 1.4 : Structure de l'API REST","text":"<p>Temps d'\u00e9tude : 45 minutes</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/4/#1-api-rest-architecture-dune-station-spatiale","title":"1. API REST : Architecture d'une station spatiale","text":"<p>Imaginez une station spatiale o\u00f9 chaque module dispose de :</p> <ul> <li> <p>Un port d'amarrage standard (interface unique)</p> </li> <li> <p>Une sp\u00e9cialisation claire (module d'habitation, laboratoire, stockage)</p> </li> <li> <p>Un syst\u00e8me de coordonn\u00e9es (emplacement pr\u00e9cis)</p> </li> </ul> <p>L'API REST (Representational State Transfer) fonctionne selon les m\u00eames principes :</p> <ul> <li> <p>Une interface unique pour toutes les ressources</p> </li> <li> <p>Une s\u00e9paration claire des composants</p> </li> <li> <p>Adressage via URI (coordonn\u00e9es spatiales)</p> </li> </ul> <p>\ud83d\udca1 Id\u00e9e cl\u00e9 :</p> <p>Chaque ressource (plan\u00e8tes, fus\u00e9es, astronautes) poss\u00e8de une URL unique et interagit via des m\u00e9thodes HTTP.</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/4/#2-les-6-principes-de-rest-par-analogie-spatiale","title":"2. Les 6 principes de REST par analogie spatiale","text":"Principe REST Analogie avec l'ISS Signification pour l'API Interface uniforme N\u0153uds d'amarrage standards R\u00e8gles identiques pour toutes les requ\u00eates Stateless Chaque commande est autonome Le serveur ne conserve pas l'\u00e9tat du client Mise en cache R\u00e9serves de provisions locales Conservation des r\u00e9ponses fr\u00e9quentes Client-serveur S\u00e9paration claire : Centre de contr\u00f4le \u2194 Station D\u00e9veloppement ind\u00e9pendant des composants Syst\u00e8me de couches Satellites relais Proxys, \u00e9quilibreurs de charge Code \u00e0 la demande T\u00e9l\u00e9chargement de logiciels pour les exp\u00e9riences (Optionnel) Transfert de scripts"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/4/#3-ressources-et-uri-coordonnees-spatiales","title":"3. Ressources et URI : Coordonn\u00e9es spatiales","text":"<p>Chaque objet dans l'API est une ressource avec une adresse unique : <pre><code>https://api.spacexdata.com/v4/    \u2190 URL de base\n          rockets/            \u2190 Collection de fus\u00e9es\n          rockets/5e9d0d95eda69973a809d1ec \u2190 Fus\u00e9e sp\u00e9cifique (par ID)\n</code></pre></p> <p>Exemples de ressources spatiales :</p> <ul> <li><code>GET /stars</code> \u2192 Liste des \u00e9toiles</li> <li><code>GET /stars/sirius</code> \u2192 Donn\u00e9es sur Sirius</li> <li><code>POST /satellites</code> \u2192 Lancer un nouveau satellite</li> <li><code>PUT /missions/artemis</code> \u2192 Mettre \u00e0 jour une mission</li> </ul> <p>Sch\u00e9ma d'arborescence URI : <pre><code>[URL de base]\n\u251c\u2500\u2500 /planets          \u2192 Collection de plan\u00e8tes\n\u2502   \u251c\u2500\u2500 /mars         \u2192 Ressource \"Mars\"\n\u2502   \u2514\u2500\u2500 /venus        \u2192 Ressource \"V\u00e9nus\"\n\u2514\u2500\u2500 /launches         \u2192 Collection de lancements\n    \u251c\u2500\u2500 /upcoming     \u2192 Sous-collection\n    \u2514\u2500\u2500 /latest       \u2192 Ressource\n</code></pre></p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/4/#4-operations-crud-via-les-methodes-http","title":"4. Op\u00e9rations CRUD via les m\u00e9thodes HTTP","text":"Op\u00e9ration M\u00e9thode HTTP Exemple (Station spatiale) R\u00e9ponse du serveur Create <code>POST</code> Envoyer un nouveau module <code>201 Created</code> Read <code>GET</code> Demander des donn\u00e9es sur un module <code>200 OK</code> Update <code>PUT</code> Reconfigurer un module <code>200 OK</code> Delete <code>DELETE</code> D\u00e9samarrer un ancien module <code>204 No Content</code> <p>\u26a1 Exemple de code (Ajout d'un satellite) : <pre><code>import requests\n\n# Nous utilisons un service de test qui simule la cr\u00e9ation d'une ressource\nnew_post = {\n    \"title\": \"Nouveau lancement de t\u00e9lescope\",\n    \"body\": \"Hubble-2 est pr\u00eat \u00e0 \u00eatre d\u00e9ploy\u00e9.\",\n    \"userId\": 1\n}\n\n# Cl\u00e9 API conditionnelle pour la d\u00e9monstration des en-t\u00eates\nheaders = {\n    \"Authorization\": \"Bearer YOUR_DEMO_KEY\",\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n}\n\nresponse = requests.post(\n    \"https://jsonplaceholder.typicode.com/posts\",\n    json=new_post,\n    headers=headers\n)\n\nif response.status_code == 201:\n    print(\"\u2705 Article sur le nouveau satellite cr\u00e9\u00e9 avec succ\u00e8s !\")\n    print(\"R\u00e9ponse du serveur :\")\n    print(response.json())\nelse:\n    print(f\"\u274c Erreur ! Statut : {response.status_code}\")\n</code></pre></p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/4/#5-versioning-de-lapi-evolution-de-la-station","title":"5. Versioning de l'API : \u00c9volution de la station","text":"<p>Comme l'ISS est mise \u00e0 jour (Module \"Zarya\" \u2192 \"Nauka\"), l'API change de versions :</p> <ul> <li>Dans l'URL : <code>https://api.spacex.com/v4/rockets</code></li> <li>Dans les en-t\u00eates : <code>Accept: application/vnd.spacex-v5+json</code></li> </ul> <p>Pourquoi c'est important :</p> <ul> <li>v1 : Fonctionnalit\u00e9 de base</li> <li>v2 : Nouveaux champs ajout\u00e9s</li> <li>v3 : Structure des r\u00e9ponses modifi\u00e9e</li> </ul> <p>\u26a0\ufe0f Conseil : Sp\u00e9cifiez toujours la version dans vos requ\u00eates, sinon \"l'amarrage\" pourrait \u00e9chouer !</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/4/#6-hypermedia-hateoas-navigation-dans-lespace","title":"6. Hypermedia (HATEOAS) : Navigation dans l'espace","text":"<p>La r\u00e9ponse de l'API contient des liens vers des ressources associ\u00e9es \u2014 comme une carte de la station : <pre><code>{\n  \"id\": \"iss\",\n  \"name\": \"Station Spatiale Internationale\",\n  \"crew\": 7,\n  \"_links\": {\n    \"self\": { \"href\": \"/stations/iss\" },\n    \"modules\": { \"href\": \"/stations/iss/modules\" },\n    \"schedule\": { \"href\": \"/stations/iss/schedule\" }\n  }\n}\n</code></pre></p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/4/#quiz-pour-consolidation","title":"Quiz pour consolidation","text":"<p>1. REST signifie :</p>  a) Rocket Engine System Transfer  b) Representational State Transfer  c) Remote Space Technology <p>2. Le principe \"Stateless\" signifie :</p>  a) Le serveur conserve l'historique des requ\u00eates  b) Chaque requ\u00eate est autonome  c) Les donn\u00e9es sont transf\u00e9r\u00e9es uniquement via SSL <p>3. URI pour obtenir des donn\u00e9es sur la fus\u00e9e Falcon Heavy :</p>  a) POST /rockets/falcon-heavy  b) GET /falcon-heavy  c) GET /rockets/falcon-heavy <p>4. M\u00e9thode pour la mise \u00e0 jour compl\u00e8te d'une ressource :</p>  a) PATCH  b) POST  c) PUT <p>5. HATEOAS dans une API est :</p>  a) Un syst\u00e8me de liens vers des ressources associ\u00e9es  b) Un protocole de chiffrement  c) Un langage de requ\u00eate V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>L'API REST est une \"architecture de station spatiale\" standardis\u00e9e pour les services web. Retenez :</p> <ul> <li>Ressources = Objets (fus\u00e9es, plan\u00e8tes)</li> <li>URI = Coordonn\u00e9es des objets</li> <li>M\u00e9thodes HTTP = Commandes de contr\u00f4le</li> <li>Versions = Modernisations de la station</li> </ul> <p>Fin de la pr\u00e9paration ! Dans le prochain chapitre, nous lancerons une \"sonde de test\" \u2014 nous apprendrons \u00e0 tester les API via Postman.</p> <p>\ud83d\udccc Pratique : \u00c9tudiez la structure de l'API SpaceX et essayez d'ex\u00e9cuter :</p> <p><code>GET https://api.spacexdata.com/v4/launches/latest</code> \u2014 faites attention \u00e0 l'URI et \u00e0 la structure JSON !</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/5/","title":"Chapitre 1.5 : Tester l'API avec Postman","text":"<p>Temps d'\u00e9tude : 50 minutes</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/5/#1-pourquoi-tester-lapi-verification-avant-le-lancement","title":"1. Pourquoi tester l'API ? V\u00e9rification avant le lancement","text":"<p>Imaginez : avant de lancer une fus\u00e9e, les ing\u00e9nieurs proc\u00e8dent \u00e0 des mises sous tension des syst\u00e8mes pour test. Oubliez la v\u00e9rification \u2014 et la mission pourrait \u00e9chouer !</p> <p>Le test d'API \u2014 c'est votre s\u00e9rie de tests de contr\u00f4le :</p> <ul> <li> <p>\u2705 V\u00e9rifier la fonctionnalit\u00e9 des \"points d'amarrage\"</p> </li> <li> <p>\ud83d\udee1\ufe0f D\u00e9tecter les vuln\u00e9rabilit\u00e9s avant l'utilisation op\u00e9rationnelle</p> </li> <li> <p>\ud83d\udcca S'assurer que les donn\u00e9es sont transmises sans distorsion</p> </li> </ul> <p>\ud83d\udca1 Analogie spatiale : Postman \u2014 comme une console de test du Centre de Contr\u00f4le de Mission (CCM) pour simuler tous les sc\u00e9narios : \"Que se passe-t-il si je demande des donn\u00e9es sur une plan\u00e8te inexistante ? Le serveur supportera-t-il 1000 requ\u00eates/seconde ?\"</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/5/#2-postman-centre-de-controle-des-missions-pour-les-api","title":"2. Postman : \"Centre de contr\u00f4le des missions\" pour les API","text":"<p>Fonctionnalit\u00e9s :</p> <ul> <li> <p>\ud83d\udce1 Envoi de toute requ\u00eate HTTP (GET, POST, PUT, DELETE)</p> </li> <li> <p>\ud83d\udd0d Analyse des r\u00e9ponses (codes de statut, en-t\u00eates, corps JSON)</p> </li> <li> <p>\ud83e\uddea \u00c9criture de tests automatis\u00e9s (JavaScript)</p> </li> <li> <p>\ud83c\udf10 Gestion des variables d'environnement (test vs production)</p> </li> </ul> <p>\ud83d\udc49 T\u00e9l\u00e9charger Postman</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/5/#3-premier-lancement-testons-lapi-des-planetes","title":"3. Premier lancement : Testons l'API des plan\u00e8tes","text":"<p>\u00c9tape 1 : Cr\u00e9er une requ\u00eate</p> <ol> <li> <p>Ouvrez Postman \u2192 New \u2192 Request</p> </li> <li> <p>Saisissez l'URL : <code>https://api.spacexdata.com/v4/rockets</code></p> </li> <li> <p>S\u00e9lectionnez la m\u00e9thode : GET</p> </li> </ol> <p>\u00c9tape 2 : Envoyer un \"signal\" <pre><code>[CCM] -- GET /planets --&gt; [Serveur SpaceX]\n</code></pre></p> <p>\u00c9tape 3 : Analyser la t\u00e9l\u00e9m\u00e9trie : - Statut : <code>200 OK</code> - Corps de la r\u00e9ponse (JSON) : liste des fus\u00e9es avec leurs param\u00e8tres <pre><code>[\n  {\n    \"name\": \"Falcon 1\",\n    \"type\": \"rocket\",\n    \"active\": false,\n    \"stages\": 2,\n    \"id\": \"5e9d0d95eda69955f709d1eb\"\n  },\n  {\n    \"name\": \"Falcon 9\",\n    \"type\": \"rocket\",\n    \"active\": true,\n    \"id\": \"5e9d0d95eda69973a809d1ec\"\n  }\n]\n</code></pre></p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/5/#4-schema-composants-de-postman","title":"4. Sch\u00e9ma : Composants de Postman","text":"<pre><code>[Espace de travail]\n\u251c\u2500\u2500 Onglet \"Params\" (Param\u00e8tres de requ\u00eate)\n\u251c\u2500\u2500 Onglet \"Headers\" (En-t\u00eates)\n\u251c\u2500\u2500 Onglet \"Body\" (Corps de la requ\u00eate pour POST/PUT)\n\u251c\u2500\u2500 Onglet \"Tests\" (Scripts de v\u00e9rification)\n\u2514\u2500\u2500 Panneau de r\u00e9ponse (Status, Time, Size, Body)\n</code></pre>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/5/#5-creer-un-scenario-complexe-lancement-de-mission","title":"5. Cr\u00e9er un sc\u00e9nario complexe : Lancement de mission","text":"<p>Test : Ajout d'une nouvelle plan\u00e8te au catalogue</p> <ol> <li> <p>M\u00e9thode : POST</p> </li> <li> <p>URL : <code>https://jsonplaceholder.typicode.com/posts</code> (exemple)</p> </li> <li> <p>Dans les Headers :    <pre><code> { \"Content-Type\": \"application/json\" }\n</code></pre></p> </li> <li>Dans le Body (raw \u2192 JSON) :    <pre><code>{\n \"title\": \"New Exoplanet Found\",\n \"body\": \"Proxima Centauri b shows signs of a stable atmosphere.\",\n \"userId\": 1\n }\n</code></pre></li> </ol> <p>V\u00e9rification automatis\u00e9e dans les Tests : <pre><code>// V\u00e9rification du statut\npm.test(\"Post created successfully\", () =&gt; {\n    pm.response.to.have.status(201);\n});\n\n// V\u00e9rification de la structure et des donn\u00e9es de la r\u00e9ponse\npm.test(\"Response contains the new post data\", () =&gt; {\n    const response = pm.response.json();\n    pm.expect(response).to.have.property(\"id\"); // On v\u00e9rifie que le serveur a attribu\u00e9 un ID\n    pm.expect(response.title).to.eql(\"New Exoplanet Found\");\n});\n</code></pre></p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/5/#6-variables-denvironnement-terre-vs-mars","title":"6. Variables d'environnement : Terre vs Mars","text":"<p>Comment tester sur diff\u00e9rents serveurs (test/production) ?</p> <ol> <li>Cr\u00e9ez des environnements :</li> <li><code>Local</code> \u2192 <code>http://localhost:3000</code></li> <li> <p><code>Production</code> \u2192 <code>https://api.nasa.gov</code></p> </li> <li> <p>Dans les requ\u00eates, utilisez des variables :    <pre><code>{{base_url}}/planets  # Substituera l'URL actuelle\n</code></pre></p> </li> </ol> <p>\u26a0\ufe0f Important ! Ne testez jamais <code>DELETE</code> sur un serveur de production !</p>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/5/#7-collections-bibliotheque-de-missions-spatiales","title":"7. Collections : Biblioth\u00e8que de missions spatiales","text":"<p>Regroupez les requ\u00eates : <pre><code>    \ud83d\udcc2 Collection \"NASA\"\n    \u251c\u2500\u2500 GET Plan\u00e8tes\n    \u251c\u2500\u2500 POST Nouvelle plan\u00e8te\n    \u2514\u2500\u2500 DELETE Plan\u00e8te (mode test)\n</code></pre> Avantages :</p> <ul> <li>\ud83d\ude80 Lancement de tous les tests en un seul clic</li> <li>\ud83d\udce4 Export/import de configurations</li> <li>\ud83d\udc68\u200d\ud83d\ude80 Travail d'\u00e9quipe collaboratif</li> </ul>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/5/#8-automatisation-verifications-regulieres-des-satellites","title":"8. Automatisation : V\u00e9rifications r\u00e9guli\u00e8res des satellites","text":"<p>Configurez le monitoring d'API via Postman :</p> <ol> <li> <p>Schedule \u2192 Toutes les 2 heures</p> </li> <li> <p>Tests :    <pre><code>pm.test(\"\u0421\u043f\u0443\u0442\u043d\u0438\u043a \u043e\u043d\u043b\u0430\u0439\u043d\", () =&gt; {\n  pm.response.to.have.status(200);\n  pm.expect(pm.response.json().signal).above(50); // Signal &gt;50%\n});\n</code></pre></p> </li> <li> <p>Notifications dans Slack/par e-mail en cas d'\u00e9chec</p> </li> </ol>"},{"location":"fr/Chapitre%201%20-%20Principes%20fondamentaux%20de%20l%27API/5/#quiz-de-revision","title":"Quiz de r\u00e9vision","text":"<p>1. Postman est utilis\u00e9 pour :</p>  a) Envoyer des e-mails  b) Tester des API  c) Cr\u00e9er des bases de donn\u00e9es <p>2. Quel statut attendre lors de la cr\u00e9ation r\u00e9ussie d'un objet ?</p>  a) 200 OK  b) 201 Created  c) 404 Not Found <p>3. O\u00f9 \u00e9crire les tests automatis\u00e9s dans Postman ?</p>  a) Onglet \"Body\"  b) Onglet \"Tests\"  c) Onglet \"Cookies\" <p>4. Les variables d'environnement sont n\u00e9cessaires pour :</p>  a) Basculer entre les serveurs de test et de production  b) Stocker les mots de passe en clair  c) G\u00e9n\u00e9rer des donn\u00e9es al\u00e9atoires <p>5. Que v\u00e9rifient les monitorings r\u00e9guliers ?</p>  a) La stabilit\u00e9 du fonctionnement de l'API  b) La vitesse d'Internet  c) L'actualit\u00e9 de la documentation V\u00e9rifier <p>\ud83d\ude80 Bilan du chapitre : Postman \u2014 votre \"tableau de bord\" universel pour tester les API. Avec lui, vous : - V\u00e9rifierez le fonctionnement des \"syst\u00e8mes de bord\" avant le lancement - Cr\u00e9erez une biblioth\u00e8que de sc\u00e9narios de test - Automatiserez la surveillance des services spatiaux</p> <p>\ud83d\udccc Exercice pratique :</p> <ol> <li>Installez Postman</li> <li>Cr\u00e9ez une requ\u00eate vers l'API SpaceX : <code>GET https://api.spacexdata.com/v4/launches/latest</code></li> <li>\u00c9crivez un test v\u00e9rifiant que :</li> <li>Le statut de la r\u00e9ponse est <code>200</code></li> <li>Le champ <code>name</code> contient le mot \"Falcon\"</li> <li>Le temps de r\u00e9ponse est &lt; 500 ms</li> </ol> <p>F\u00e9licitations pour avoir termin\u00e9 le Chapitre 1 !</p> <p>Vous avez ma\u00eetris\u00e9 les bases de l'utilisation des API. Dans les prochains chapitres, nous construirons notre propre \"vaisseau spatial\" \u2014 une application web utilisant les API spatiales !</p> <p>\ud83c\udf0c Ressources suppl\u00e9mentaires :</p> <ul> <li>Documentation de l'API SpaceX</li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/","title":"Chapitre 2.1 : Pr\u00e9paration de l'environnement Laravel","text":""},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/#temps-detude-1-2-heures","title":"Temps d'\u00e9tude : 1-2 heures","text":""},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/#1-pourquoi-un-environnement-local-est-il-necessaire","title":"1. Pourquoi un environnement local est-il n\u00e9cessaire ?","text":"<p>Imaginez que vous construisez une sonde spatiale. Avant de la lancer dans l'espace, vous testez tous les syst\u00e8mes sur Terre. L'environnement local est votre \"laboratoire de contr\u00f4le\" pour le code :</p> <ul> <li>Exp\u00e9riences s\u00e9curis\u00e9es sans impact sur le serveur de production</li> <li>D\u00e9ploiement rapide des d\u00e9pendances</li> <li>Basculement facile entre les versions logicielles</li> </ul> <p>\ud83d\udca1 Analogie spatiale : Herd = Complexe de lancement mobile Docker = Simulateur de station spatiale XAMPP = Banc d'essai stationnaire</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/#2-installation-de-herd","title":"2. Installation de Herd","text":"<p>Herd \u2014 un outil moderne pour g\u00e9rer l'environnement PHP (analogue \u00e0 Laravel Valet).</p> <p>\u00c9tapes d'installation :</p> <ol> <li>T\u00e9l\u00e9chargez l'installateur : herd.laravel.com</li> <li>Ex\u00e9cutez <code>Herd Installer.exe</code> \u2192 Suivant \u2192 Installer</li> <li>Apr\u00e8s l'installation :<ul> <li>Ouvrez Herd depuis le menu D\u00e9marrer. L'ic\u00f4ne de l'application appara\u00eetra dans la barre d'\u00e9tat syst\u00e8me (\u00e0 c\u00f4t\u00e9 de l'horloge).</li> <li>Cliquez sur l'ic\u00f4ne Herd : assurez-vous que Nginx et la version de PHP souhait\u00e9e (par exemple, 8.3) sont d\u00e9marr\u00e9s (indiqu\u00e9s par un point vert).</li> <li>Allez dans Herd Paths et ajoutez le dossier o\u00f9 vos projets seront stock\u00e9s (par exemple, C:\\Users\\YourUser\\Code). Herd cr\u00e9era automatiquement pour chaque sous-r\u00e9pertoire de ce dossier un joli domaine de type nom-du-dossier.test.</li> </ul> </li> </ol> <p>\u26a0\ufe0f Important ! Lors de l'installation : - Autorisez l'acc\u00e8s au r\u00e9seau (si le pare-feu le demande) - V\u00e9rifiez le chemin dans PATH : <code>C:\\Program Files\\Herd\\bin</code></p> <p>V\u00e9rification du fonctionnement :</p> <ol> <li>Cliquez sur l'ic\u00f4ne Herd dans la barre d'\u00e9tat syst\u00e8me.</li> <li>Assurez-vous que les services Nginx et PHP sont actifs (indicateurs verts).</li> <li>Cr\u00e9ez un dossier test dans votre dossier de projets (par exemple, C:\\Users\\YourUser\\Code), et \u00e0 l'int\u00e9rieur, un fichier index.php avec le contenu <code>&lt;?php phpinfo(); ?&gt;</code>.</li> <li>Dans Herd, via l'onglet sites, indiquez le chemin vers le dossier test et cliquez sur \"Add site\".</li> <li>Ouvrez l'adresse http://test.test dans votre navigateur. Vous devriez voir la page d'informations PHP.</li> </ol>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/#3-methodes-alternatives-en-bref","title":"3. M\u00e9thodes alternatives (en bref)","text":"Outil Pour qui Avantages Inconv\u00e9nients Laravel Sail (Docker) Pour tous les niveaux Isolation compl\u00e8te, r\u00e9p\u00e9tabilit\u00e9 de l'environnement, support officiel de Laravel N\u00e9cessite l'installation de Docker, consomme plus de ressources XAMPP D\u00e9butants Tout en un (All-in-One) Encombrant, plus difficile \u00e0 g\u00e9rer les versions logicielles, pollue le syst\u00e8me Laragon D\u00e9veloppeurs Windows Rapide, facile \u00e0 changer de version, configuration automatique des h\u00f4tes N\u00e9cessite un red\u00e9marrage manuel du serveur web lors de l'ajout d'un nouveau projet <p>Exemple avec Docker (Laravel Sail) : <pre><code># Apr\u00e8s l'installation de Docker\n./vendor/bin/sail up\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/#4-installation-de-php-et-composer","title":"4. Installation de PHP et Composer","text":"<p>Si vous n'utilisez pas Herd :</p> <ol> <li>PHP :<ul> <li>T\u00e9l\u00e9chargez PHP 8.3 pour Windows</li> <li>D\u00e9compressez dans <code>C:\\PHP</code></li> <li>Ajoutez au PATH :  <pre><code># Recommand\u00e9 d'ex\u00e9cuter dans PowerShell en tant qu'administrateur\n[Environment]::SetEnvironmentVariable(\"Path\", \"$env:Path;C:\\PHP\", \"User\")\n</code></pre></li> </ul> </li> <li>Composer :<ul> <li>Ex\u00e9cutez Composer-Setup.exe</li> <li>V\u00e9rification :  <pre><code>php -v\ncomposer --version\n</code></pre></li> </ul> </li> </ol>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/#5-installation-de-postgresql","title":"5. Installation de PostgreSQL","text":"<p>Pour travailler avec les bases de donn\u00e9es :</p> <ol> <li>T\u00e9l\u00e9chargez PostgreSQL 15</li> <li>Ex\u00e9cutez l'installateur :</li> <li>Mot de passe du superutilisateur : <code>admin</code> (ou le v\u00f4tre)</li> <li>Port : <code>5432</code> (standard)</li> <li>Apr\u00e8s l'installation :</li> <li>Ouvrez pgAdmin 4 (client graphique) <p>Vous pouvez utiliser n'importe quel autre client pour travailler avec la base de donn\u00e9es, par exemple, DBeaver, DataGrip ou m\u00eame la ligne de commande. Je pr\u00e9f\u00e8re DBeaver - mais c'est une question de go\u00fbt</p> </li> <li>Cr\u00e9ez une base de donn\u00e9es pour le projet : <code>space_api</code></li> </ol>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/#6-installation-de-laravel","title":"6. Installation de Laravel","text":"<ol> <li> <p>Via Composer : <pre><code>composer create-project laravel/laravel space-api\ncd space-api\n</code></pre></p> </li> <li> <p>Initialisation de Git (optionnel) : <pre><code>git init\ngit add .\ngit commit -m \"D\u00e9marrage du projet spatial\"\n</code></pre></p> </li> <li> <p>D\u00e9marrage et v\u00e9rification du serveur :</p> <p>Si vous utilisez Herd : Assurez-vous que votre projet space-api se trouve dans le dossier que vous avez ajout\u00e9 \u00e0 Herd. Ouvrez l'adresse dans votre navigateur : http://space-api.test Vous devriez voir la page d'accueil de Laravel. Le serveur fonctionne d\u00e9j\u00e0 gr\u00e2ce \u00e0 Herd !</p> </li> </ol> <p>Si vous N'UTILISEZ PAS Herd (installation manuelle) : <pre><code>php artisan serve\n</code></pre> Ouvrez dans le navigateur : http://localhost:8000 \u2192 La page d'accueil de Laravel devrait appara\u00eetre !</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/#lors-de-la-creation-du-projet-dans-herd","title":"Lors de la cr\u00e9ation du projet dans Herd :","text":"<p>Suivez simplement les instructions \u00e0 l'\u00e9cran. Pour plus de commodit\u00e9, le nom du projet sera <code>space-api</code>. Le kit de d\u00e9marrage \u2014 n'importe lequel, mais je pr\u00e9f\u00e8re React.</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/#assurez-vous-dactiver-phpunit-il-nous-sera-utile-plus-tard","title":"Assurez-vous d'activer phpunit - il nous sera utile plus tard","text":""},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/#7-configuration-du-projet","title":"7. Configuration du projet","text":"<p>Fichiers importants :</p> <ul> <li><code>.env</code> \u2014 param\u00e8tres d'environnement (cl\u00e9s, bases de donn\u00e9es)</li> <li><code>config/database.php</code> \u2014 configuration SGBD</li> <li><code>composer.json</code> \u2014 d\u00e9pendances PHP</li> </ul> <p>Connexion de la BDD au projet :</p> <p>Ajoutez dans <code>.env</code> :</p> <pre><code>DB_CONNECTION=pgsql\nDB_HOST=127.0.0.1\nDB_PORT=5432\nDB_DATABASE=space_api\nDB_USERNAME=postgres # Nom d'utilisateur pour postgres\nDB_PASSWORD=admin # Mot de passe pour postgres\n</code></pre> <p>Premi\u00e8res commandes Artisan : <pre><code>php artisan key:generate  # G\u00e9n\u00e9ration de la cl\u00e9 de l'application\nphp artisan migrate:fresh # Migration de la base de donn\u00e9es (Lors du passage \u00e0 postgres)\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/#quiz-de-consolidation","title":"Quiz de consolidation","text":"<p>1. Herd est...</p>  a) Un outil de gestion d'environnement PHP  b) Un \u00e9diteur de code  c) Un syst\u00e8me d'exploitation <p>2. Quel outil Laravel utilise-t-il pour g\u00e9rer les d\u00e9pendances PHP ?</p>  a) npm  b) Composer  c) Artisan <p>3. Le port standard pour PostgreSQL est :</p>  a) 3306  b) 5432  c) 8000 <p>4. La commande pour cr\u00e9er un projet Laravel via Composer est :</p>  a) composer create-laravel  b) laravel new  c) composer create-project laravel/laravel <p>5. Quel fichier contient les param\u00e8tres d'environnement ?</p>  a) .env  b) config.php  c) settings.ini V\u00e9rifier"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/1/#resume-du-chapitre","title":"\ud83d\ude80 R\u00e9sum\u00e9 du chapitre","text":"<p>Vous avez d\u00e9ploy\u00e9 la \"plateforme de lancement\" pour l'API spatiale ! Vous disposez maintenant de :</p> <ul> <li>\ud83d\udee0\ufe0f Un environnement local (Herd ou installation manuelle) avec PHP et Nginx</li> <li>\ud83d\udc18 Un serveur de bases de donn\u00e9es PostgreSQL install\u00e9</li> <li>\ud83d\ude80 Un projet Laravel <code>space-api</code></li> <li>\ud83d\udd0c Une connexion configur\u00e9e \u00e0 la base de donn\u00e9es</li> </ul> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>Si vous utilisez Herd : Assurez-vous que le site s'ouvre \u00e0 l'adresse <code>http://space-api.test</code>.</li> <li>Si sans Herd : Assurez-vous que la commande <code>php artisan serve</code> fonctionne et que le site s'ouvre \u00e0 l'adresse <code>http://localhost:8000</code>.</li> <li>Dans tous les cas, v\u00e9rifiez que la base de donn\u00e9es <code>space_api</code> cr\u00e9\u00e9e est visible dans <code>pgAdmin 4</code>.</li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/2/","title":"Chapitre 2.2 : Cr\u00e9ation du mod\u00e8le Planet","text":"<p>Temps d'\u00e9tude : 45 minutes</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/2/#1-le-modele-dans-laravel-plan-dun-objet-cosmique","title":"1. Le mod\u00e8le dans Laravel : Plan d'un objet cosmique","text":"<p>Dans l'architecture MVC (Model-View-Controller), le mod\u00e8le est :</p> <ul> <li>\ud83d\udce6 Un conteneur pour les donn\u00e9es (param\u00e8tres des plan\u00e8tes)</li> <li>\ud83d\udd0c Une interface de travail avec la base de donn\u00e9es</li> <li>\ud83d\udee1\ufe0f Le centre de la logique m\u00e9tier de l'application</li> </ul> <p>\ud83d\udca1 Analogie spatiale : Le mod\u00e8le <code>Planet</code> = Le plan d'une plan\u00e8te dans l'ordinateur du centre de contr\u00f4le. Avec lui, on peut :</p> <ul> <li>Cr\u00e9er une nouvelle plan\u00e8te dans le catalogue (<code>INSERT</code>)</li> <li>Obtenir des donn\u00e9es sur Mars (<code>SELECT</code>)</li> <li>Mettre \u00e0 jour les informations sur l'atmosph\u00e8re (<code>UPDATE</code>)</li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/2/#2-creation-du-modele-et-de-la-migration","title":"2. Cr\u00e9ation du mod\u00e8le et de la migration","text":"<p>Laravel utilise Artisan CLI \u2014 votre \"t\u00e9l\u00e9commande\" de projet.</p> <p>\u00c9tape 1 : G\u00e9n\u00e9ration du mod\u00e8le avec migration <pre><code>php artisan make:model Planet -m\n</code></pre></p> <p>Ce qui a \u00e9t\u00e9 cr\u00e9\u00e9 : <pre><code>app/\n  \u2514\u2500\u2500 Models/\n      \u2514\u2500\u2500 Planet.php    \u2190 Mod\u00e8le\ndatabase/\n  \u2514\u2500\u2500 migrations/\n      \u2514\u2500\u2500 2025_08_04_000000_create_planets_table.php  \u2190 Migration\n</code></pre></p> <p>Options Artisan :</p> <ul> <li><code>-m</code> \u2192 Cr\u00e9er une migration</li> <li><code>-c</code> \u2192 Cr\u00e9er un contr\u00f4leur</li> <li><code>-r</code> \u2192 Contr\u00f4leur de ressources</li> </ul> <p>\ud83d\udca1 Conseil de pro : Ces options peuvent \u00eatre combin\u00e9es pour une efficacit\u00e9 maximale. La commande <code>php artisan make:model Planet -mcr</code> cr\u00e9era instantan\u00e9ment un mod\u00e8le, une migration et un contr\u00f4leur de ressources pour g\u00e9rer ce mod\u00e8le. Cela fait gagner beaucoup de temps.</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/2/#3-configuration-du-modele-planet","title":"3. Configuration du mod\u00e8le Planet","text":"<p>Ouvrez <code>app/Models/Planet.php</code> : <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Planet extends Model\n{\n    // Nom de la table (par d\u00e9faut : 'planets')\n    // Laravel suppose automatiquement que le nom de la table est la forme plurielle du nom du mod\u00e8le en snake_case (Planet -&gt; planets).\n     // Par cons\u00e9quent, cette propri\u00e9t\u00e9 n'est pas obligatoire ici, mais utile pour la clart\u00e9.\n    protected $table = 'planets';\n\n    // Champs autoris\u00e9s pour l'assignation massive\n    protected $fillable = [\n        'name',\n        'description',\n        'size_km',\n        'solar_system',\n        'image_url'\n    ];\n\n    // Types de donn\u00e9es pour la conversion automatique\n    protected $casts = [\n        'size_km' =&gt; 'integer'\n    ];\n}\n</code></pre></p> <p>Explication des propri\u00e9t\u00e9s :</p> Propri\u00e9t\u00e9 Valeur Exemple de donn\u00e9es <code>$table</code> Nom de la table dans la BDD <code>planets</code> <code>$fillable</code> Champs pour l'assignation massive <code>name</code>, <code>size_km</code> <code>$casts</code> Conversion automatique des types <code>size_km: integer</code>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/2/#4-conception-de-la-table-des-planetes","title":"4. Conception de la table des plan\u00e8tes","text":"<p>Avant d'\u00e9diter la migration, d\u00e9finissons la structure d'une \"plan\u00e8te\" :</p> Champ Type de donn\u00e9es Description Exemple de valeur <code>id</code> BIGINT (PK) ID unique 1 <code>name</code> VARCHAR(255) Nom de la plan\u00e8te \"Mars\" <code>description</code> TEXT Description \"Plan\u00e8te rouge...\" <code>size_km</code> INTEGER Diam\u00e8tre en km 6779 <code>solar_system</code> VARCHAR(100) Syst\u00e8me solaire \"Syst\u00e8me solaire\" <code>image_url</code> VARCHAR(2048) URL de la photo (peut \u00eatre null) \"https://...\" <code>created_at</code> TIMESTAMP Date de cr\u00e9ation 2025-08-04 12:00:00 <code>updated_at</code> TIMESTAMP Date de mise \u00e0 jour 2025-08-05 09:30:00"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/2/#5-edition-de-la-migration","title":"5. \u00c9dition de la migration","text":"<p>Ouvrez le fichier de migration dans <code>database/migrations/..._create_planets_table.php</code> :</p> <pre><code>&lt;?php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreatePlanetsTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('planets', function (Blueprint $table) {\n            $table-&gt;id(); // BIGINT auto-incr\u00e9ment\n\n            $table-&gt;string('name')-&gt;unique();\n            $table-&gt;text('description');\n            $table-&gt;integer('size_km');\n            $table-&gt;string('solar_system', 100);\n            $table-&gt;string('image_url', 2048)-&gt;nullable();\n\n            $table-&gt;timestamps(); // created_at + updated_at\n        });\n    }\n\n    public function down()\n    {\n        Schema::dropIfExists('planets');\n    }\n}\n</code></pre> <p>Points cl\u00e9s :</p> <ul> <li><code>-&gt;unique()</code> \u2192 Garantit l'unicit\u00e9 des noms</li> <li><code>-&gt;nullable()</code> \u2192 Le champ peut \u00eatre vide</li> <li><code>timestamps()</code> \u2192 Gestion automatique des dates</li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/2/#6-execution-de-la-migration-preliminaire","title":"6. Ex\u00e9cution de la migration (pr\u00e9liminaire)","text":"<p>Bien que l'ex\u00e9cution se fasse au chapitre 2.3, voyons \u00e0 quoi cela ressemblera : <pre><code>php artisan migrate\n</code></pre></p> <p>Sortie attendue : <pre><code>Migrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (32.15ms)\n</code></pre></p> <p>V\u00e9rification dans pgAdmin 4 :</p> <ol> <li>Ouvrez la base de donn\u00e9es <code>space_api</code> \u2192 Schemas \u2192 Tables</li> <li>La table <code>planets</code> avec vos champs devrait appara\u00eetre</li> </ol>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/2/#7-approche-alternative-generateurs-de-code","title":"7. Approche alternative : G\u00e9n\u00e9rateurs de code","text":"<p>Pour acc\u00e9l\u00e9rer le d\u00e9veloppement, vous pouvez utiliser des packages :</p> <ul> <li>Laravel Blueprint - cr\u00e9e des mod\u00e8les/migrations \u00e0 partir d'une description YAML</li> <li>InfyOm Laravel Generator - g\u00e9n\u00e9rateur bas\u00e9 sur le sch\u00e9ma de la BDD</li> </ul> <p>Exemple Blueprint : <pre><code>models:\n  Planet:\n    name: string:255\n    description: text\n    size_km: integer\n    solar_system: string:100\n    image_url: string:2048? # Le signe '?' signifie que le champ est nullable\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/2/#quiz-de-revision","title":"Quiz de r\u00e9vision","text":"<p>1. Commande Artisan pour cr\u00e9er un mod\u00e8le et la migration associ\u00e9e :</p>  a) php artisan make:model Planet -m  b) php artisan create:model Planet  c) php artisan model:new Planet --m <p>2. La propri\u00e9t\u00e9 `$fillable` dans le mod\u00e8le est utilis\u00e9e pour</p>  a) La protection contre l'assignation massive  b) Le chiffrement automatique des donn\u00e9es  c) La description des cl\u00e9s \u00e9trang\u00e8res <p>3. nullable() dans une migration signifie :</p>  a) Le champ est obligatoire  b) Le champ peut \u00eatre vide  c) Le champ sera supprim\u00e9 <p>4. Type de champ pour une longue description de la plan\u00e8te :</p>  a) string  b) text  c) varchar <p>5. La m\u00e9thode `timestamps()` cr\u00e9e :</p>  a) Seulement created_at  b) created_at et updated_at  c) id, created_at, updated_at V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre : Vous avez cr\u00e9\u00e9 le \"jumeau num\u00e9rique\" d'une plan\u00e8te ! D\u00e9sormais, votre projet contient :</p> <ul> <li>\ud83e\ude90 Le mod\u00e8le <code>Planet</code> avec sa logique m\u00e9tier</li> <li>\ud83d\udcca Une migration pour la table <code>planets</code> dans PostgreSQL</li> <li>\ud83d\udee0\ufe0f Des propri\u00e9t\u00e9s de mod\u00e8le configur\u00e9es (<code>fillable</code>, <code>casts</code>)</li> </ul> <p>Pr\u00e9parez la base de donn\u00e9es ! Dans le chapitre suivant, nous ex\u00e9cuterons la migration et peuplerons l'univers avec les premi\u00e8res plan\u00e8tes.</p> <p>\ud83d\udccc V\u00e9rification :</p> <p>Assurez-vous que les fichiers <code>Planet.php</code> et <code>..._create_planets_table.php</code> sont cr\u00e9\u00e9s dans les bons r\u00e9pertoires.</p> <p>\u26a0\ufe0f Si Artisan se plaint :</p> <ul> <li>V\u00e9rifiez que vous \u00eates dans le dossier du projet</li> <li>Assurez-vous que les d\u00e9pendances sont install\u00e9es (<code>composer install</code>)</li> <li>Pour Windows : ajoutez PHP et Composer au PATH</li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/3/","title":"Chapitre 2.3 : Migrations de base de donn\u00e9es","text":"<p>Temps d'\u00e9tude : 50 minutes</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/3/#1-migrations-construction-dune-station-spatiale","title":"1. Migrations : Construction d'une station spatiale","text":"<p>Les migrations dans Laravel sont un syst\u00e8me de contr\u00f4le de version pour votre base de donn\u00e9es.</p> <p>Imaginez que vous :</p> <ol> <li>\ud83c\udfd7\ufe0f Cr\u00e9ez le plan d'une station (migration <code>create_planets_table</code>)</li> <li>\ud83d\ude80 D\u00e9ployez des modules (ex\u00e9cution des migrations)</li> <li>\ud83d\udd27 Modernisez la construction (nouvelles migrations)</li> <li>\u23ea Pouvez revenir \u00e0 une version pr\u00e9c\u00e9dente (rollback)</li> </ol> <p>\ud83d\udca1 Important : Les migrations permettent \u00e0 l'\u00e9quipe de travailler de mani\u00e8re coh\u00e9rente \u2014 comme des ing\u00e9nieurs sur diff\u00e9rents continents construisant l'ISS !</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/3/#2-execution-des-migrations","title":"2. Ex\u00e9cution des migrations","text":"<p>Apr\u00e8s avoir cr\u00e9\u00e9 la migration au chapitre 2.2, ex\u00e9cutez : <pre><code>php artisan migrate\n</code></pre></p> <p>Sortie dans le terminal : <pre><code>Migration table created successfully.\nMigrating: 2014_10_12_000000_create_users_table\nMigrated:  2014_10_12_000000_create_users_table (25.12ms)\nMigrating: 2014_10_12_100000_create_password_reset_tokens_table\nMigrated:  2014_10_12_100000_create_password_reset_tokens_table (18.07ms)\nMigrating: 2019_08_19_000000_create_failed_jobs_table\nMigrated:  2019_08_19_000000_create_failed_jobs_table (21.33ms)\nMigrating: 2019_12_14_000001_create_personal_access_tokens_table\nMigrated:  2019_12_14_000001_create_personal_access_tokens_table (30.45ms)\nMigrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (15.67ms)  # Votre table !\n</code></pre></p> <p>V\u00e9rification dans pgAdmin 4 :</p> <ol> <li>Ouvrez la base <code>space_api</code> \u2192 Schemas \u2192 Tables</li> <li>Assurez-vous que les \u00e9l\u00e9ments suivants sont apparus :   - <code>planets</code>   - <code>users</code>   - <code>password_reset_tokens</code></li> </ol>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/3/#3-annulation-des-migrations-retour-durgence","title":"3. Annulation des migrations : Retour d'urgence","text":"<p>Si vous devez corriger la structure : <pre><code>php artisan migrate:rollback  # Annule le dernier lot de migrations\n</code></pre> <pre><code>php artisan migrate:reset    # Annule toutes les migrations\n</code></pre></p> <ul> <li><code>php artisan migrate:fresh</code> \u2014 la commande la plus utile en d\u00e9veloppement ! Elle supprime toutes les tables et ex\u00e9cute \u00e0 nouveau toutes les migrations.</li> <li><code>php artisan migrate:fresh --seed</code> \u2014 fait la m\u00eame chose que <code>fresh</code>, mais ex\u00e9cute imm\u00e9diatement les seeders apr\u00e8s les migrations. C'est la commande pour \"recr\u00e9er\" compl\u00e8tement la base de donn\u00e9es \u00e0 partir de z\u00e9ro.</li> </ul> <p>Sc\u00e9nario d'utilisation : <pre><code># \u00c9tape 1 : Vous avez r\u00e9alis\u00e9 qu'il y a une erreur dans la migration. Recr\u00e9ez enti\u00e8rement la base.\nphp artisan migrate:fresh\n# \u00c9tape 2 : Modifiez la migration\n# \u00c9tape 3 : Recr\u00e9ez \u00e0 nouveau la base avec la migration corrig\u00e9e\nphp artisan migrate:fresh\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/3/#4-ajout-de-nouveaux-champs-modernisation-de-la-station","title":"4. Ajout de nouveaux champs : Modernisation de la station","text":"<p>Exemple : Ajoutons le champ <code>is_habitable</code> (la plan\u00e8te est-elle habitable).</p> <p>\u00c9tape 1 : Cr\u00e9ez une nouvelle migration <pre><code>php artisan make:migration add_is_habitable_to_planets_table\n</code></pre></p> <p>\u00c9tape 2 : Modifiez le fichier <code>database/migrations/..._add_is_habitable_to_planets_table.php</code> <pre><code>&lt;?php\npublic function up()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;boolean('is_habitable')\n              -&gt;default(false);\n    });\n}\n\npublic function down()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;dropColumn('is_habitable');\n    });\n}\n</code></pre></p> <p>\u00c9tape 3 : Ex\u00e9cutez la mise \u00e0 jour <pre><code>php artisan migrate\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/3/#5-peuplement-de-la-base-premieres-planetes","title":"5. Peuplement de la base : Premi\u00e8res plan\u00e8tes","text":"<p>Nous cr\u00e9ons un seeder \u2014 un script pour g\u00e9n\u00e9rer des donn\u00e9es de test.</p> <p>\u00c9tape 1 : G\u00e9n\u00e9ration du seeder <pre><code>php artisan make:seeder PlanetSeeder\n</code></pre></p> <p>\u00c9tape 2 : Modifiez <code>database/seeders/PlanetSeeder.php</code> <pre><code>&lt;?php\nuse App\\Models\\Planet; // Importez le mod\u00e8le Planet - Sans cela, vous obtiendrez une erreur !\n\n\nclass PlanetSeeder extends Seeder\n{\n    public function run()\n    {\n        Planet::create([\n            'name' =&gt; 'Terre',\n            'description' =&gt; 'Plan\u00e8te bleue avec une vie diversifi\u00e9e',\n            'size_km' =&gt; 12742,\n            'solar_system' =&gt; 'Syst\u00e8me solaire',\n            'image_url' =&gt; 'https://example.com/earth.jpg',\n            'is_habitable' =&gt; true\n        ]);\n\n        Planet::create([\n            'name' =&gt; 'Mars',\n            'description' =&gt; 'Plan\u00e8te rouge, cible des futures colonisations',\n            'size_km' =&gt; 6779,\n            'solar_system' =&gt; 'Syst\u00e8me solaire',\n            'is_habitable' =&gt; false\n        ]);\n    }\n}\n</code></pre></p> <p>\u00c9tape 3 : Enregistrez le seeder dans <code>database/seeders/DatabaseSeeder.php</code> <pre><code>&lt;?php\npublic function run()\n{\n    $this-&gt;call([\n        PlanetSeeder::class\n    ]);\n}\n</code></pre></p> <p>\u00c9tape 4 : Ex\u00e9cutez le peuplement <pre><code>php artisan db:seed\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/3/#6-travailler-avec-postgresql-specificites","title":"6. Travailler avec PostgreSQL : Sp\u00e9cificit\u00e9s","text":"<p>Sp\u00e9cificit\u00e9s des types de donn\u00e9es :</p> Capacit\u00e9 PostgreSQL MySQL Commentaire Laravel Type bool\u00e9en <code>boolean</code> (vrai <code>true</code>/<code>false</code>) <code>tinyint(1)</code> (stocke <code>0</code>/<code>1</code>) <code>$table-&gt;boolean('...')</code> fonctionne pour les deux JSON <code>jsonb</code> (binaire, indexable) <code>json</code> (textuel) <code>$table-&gt;jsonb('...')</code> - tr\u00e8s puissant en PG Tableaux <code>text[]</code>, <code>integer[]</code> (tableaux natifs) Non (\u00e9mul\u00e9 via JSON ou cha\u00eenes de caract\u00e8res) <code>$table-&gt;array('...')</code> (exclusif \u00e0 PG) Ordre des colonnes Ne peut pas \u00eatre contr\u00f4l\u00e9 (<code>after()</code> ne fonctionne pas) Peut \u00eatre contr\u00f4l\u00e9 (<code>after()</code>) Laravel l'abstrait, mais il faut conna\u00eetre la limitation <p>Exemple de cr\u00e9ation d'index : <pre><code>// Dans la migration\n$table-&gt;index('solar_system');\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/3/#7-verification-des-donnees-dans-psql","title":"7. V\u00e9rification des donn\u00e9es dans psql","text":"<p>Vous pouvez utiliser n'importe quel client graphique et y s\u00e9lectionner space_api pour la visualisation.</p> <p>Lors de l'utilisation de la console : <pre><code>psql -U postgres -d space_api\n# Le terminal peut vous demander le mot de passe que vous avez d\u00e9fini lors de l'installation de PostgreSQL.\n</code></pre> <pre><code>SELECT * FROM planets;\n</code></pre></p> <p>Dans tous les cas, la sortie devrait \u00eatre la suivante :</p> id name description size_km solar_system image_url is_habitable 1 Terre Plan\u00e8te bleue avec une vie diversifi\u00e9e 12742 Syst\u00e8me solaire ... true 2 Mars Plan\u00e8te rouge, cible des colonisations 6779 Syst\u00e8me solaire null false"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/3/#quiz-pour-la-revision","title":"Quiz pour la r\u00e9vision","text":"<p>1. Commande pour ex\u00e9cuter les migrations :</p>  a) php artisan migrate:run  b) php artisan migrate  c) php artisan db:migrate <p>2. Comment annuler la derni\u00e8re migration ?</p>  a) migrate:undo  b) migrate:rollback  c) migrate:reset <p>3. Les seeders sont utilis\u00e9s pour :</p>  a) Supprimer des tables  b) Peupler la BDD avec des donn\u00e9es de test  c) Cr\u00e9er des mod\u00e8les <p>4. M\u00e9thode pour ajouter une colonne \u00e0 une table existante :</p>  a) Schema::addColumn()  b) Schema::table()  c) Schema::modify() <p>5. O\u00f9 les seeders sont-ils enregistr\u00e9s ?</p>  a) DatabaseSeeder.php  b) .env  c) config/database.php V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez ma\u00eetris\u00e9 la \"construction d'infrastructures spatiales\" :</p> <ul> <li>\u2705 Cr\u00e9\u00e9 et ex\u00e9cut\u00e9 des migrations</li> <li>\ud83d\udd27 Modernis\u00e9 la structure de la table</li> <li>\ud83c\udf0d Peupl\u00e9 la BDD avec les premi\u00e8res plan\u00e8tes</li> <li>\u2699\ufe0f Appris \u00e0 travailler avec PostgreSQL</li> </ul> <p>Votre univers a acquis ses premiers mondes ! Vous pouvez maintenant passer \u00e0 la cr\u00e9ation d'interfaces API pour g\u00e9rer les plan\u00e8tes.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ol> <li>Ex\u00e9cutez <code>php artisan tinker</code></li> <li>Ex\u00e9cutez <code>App\\Models\\Planet::all()</code></li> <li>Assurez-vous de voir la Terre et Mars</li> </ol>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/4/","title":"Chapitre 2.4 : Contr\u00f4leur API PlanetController","text":"<p>Temps d'\u00e9tude : 1 heure</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/4/#1-controleur-centre-de-controle-des-objets-spatiaux","title":"1. Contr\u00f4leur : Centre de contr\u00f4le des objets spatiaux","text":"<p>Dans l'architecture MVC, le contr\u00f4leur est un interm\u00e9diaire entre les mod\u00e8les et les requ\u00eates :</p> <ul> <li>\ud83d\udce1 Re\u00e7oit les requ\u00eates HTTP (GET, POST, PUT, DELETE)</li> <li>\ud83d\udd0d Extrait les donn\u00e9es de la base via les mod\u00e8les</li> <li>\ud83d\udce6 Forme les r\u00e9ponses JSON pour l'API</li> </ul> <p>\ud83d\udca1 Analogie spatiale : <code>PlanetController</code> = Centre de Contr\u00f4le des Missions :</p> <ul> <li>Re\u00e7oit les requ\u00eates de la Terre (<code>GET /planets</code>)</li> <li>Donne des commandes aux \"sondes\" (mod\u00e8les)</li> <li>Retourne la t\u00e9l\u00e9m\u00e9trie au format JSON</li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/4/#2-creation-dun-controleur-de-ressources","title":"2. Cr\u00e9ation d'un contr\u00f4leur de ressources","text":"<p>Un contr\u00f4leur de ressources inclut automatiquement des m\u00e9thodes pour les op\u00e9rations CRUD.</p> <p>\u00c9tape 1 : G\u00e9n\u00e9ration du contr\u00f4leur <pre><code>php artisan make:controller PlanetController --api --model=Planet\n</code></pre></p> <p>Ce qui sera cr\u00e9\u00e9 dans <code>app/Http/Controllers/PlanetController.php</code> : <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Planet;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Validation\\Rule; // N'oubliez pas d'ajouter cette importation\n\nclass PlanetController extends Controller\n{\n    // Afficher la liste des plan\u00e8tes\n    public function index(Request $request) {}\n\n    // Cr\u00e9er une nouvelle plan\u00e8te\n    public function store(Request $request) {}\n\n    // Afficher une plan\u00e8te sp\u00e9cifique\n    public function show(Planet $planet) {}\n\n    // Mettre \u00e0 jour une plan\u00e8te\n    public function update(Request $request, Planet $planet) {}\n\n    // Supprimer une plan\u00e8te\n    public function destroy(Planet $planet) {}\n}\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/4/#3-implementation-des-methodes-dapi","title":"3. Impl\u00e9mentation des m\u00e9thodes d'API","text":"<p>A. <code>index()</code> - R\u00e9cup\u00e9ration de la liste des plan\u00e8tes <pre><code>&lt;?php\npublic function index(Request $request)\n{\n    // R\u00e9cup\u00e9rons les plan\u00e8tes avec pagination, 15 par page\n    $planets = Planet::paginate($request-&gt;get('per_page', 15));\n    return response()-&gt;json($planets); // Automatiquement 200 OK\n}\n</code></pre></p> <p>B. <code>store()</code> - Cr\u00e9ation d'une nouvelle plan\u00e8te <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    $planet = Planet::create($data);\n    return response()-&gt;json($planet, 201); // 201 Created\n}\n</code></pre></p> <p>C. <code>show()</code> - Affichage d'une seule plan\u00e8te <pre><code>&lt;?php\npublic function show(Planet $planet)\n{\n    return response()-&gt;json($planet); // Automatique 200 OK\n}\n</code></pre></p> <p>D. <code>update()</code> - Mise \u00e0 jour d'une plan\u00e8te <pre><code>&lt;?php\npublic function update(Request $request, Planet $planet)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; [\n            'string',\n            'max:255',\n            Rule::unique('planets')-&gt;ignore($planet-&gt;id),\n        ],\n        'description' =&gt; 'sometimes|string', // 'sometimes' - valider uniquement si le champ est pr\u00e9sent\n        'size_km' =&gt; 'sometimes|integer|min:100',\n        'solar_system' =&gt; 'sometimes|string|max:100',\n        'image_url' =&gt; 'sometimes|nullable|url',\n        'is_habitable' =&gt; 'sometimes|boolean'\n    ]);\n\n    $planet-&gt;update($data);\n    return response()-&gt;json($planet); // 200 OK\n}\n</code></pre></p> <p>E. <code>destroy()</code> - Suppression d'une plan\u00e8te <pre><code>&lt;?php\npublic function destroy(Planet $planet)\n{\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204); // 204 No Content\n}\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/4/#4-liaison-de-modele-de-route-route-model-binding","title":"4. Liaison de mod\u00e8le de route (Route Model Binding)","text":"<p>Laravel substitue automatiquement l'objet plan\u00e8te par ID : <pre><code>// Dans la route : GET /planets/{planet}\n// Dans la m\u00e9thode : show(Planet $planet)\n</code></pre></p> <ul> <li>Si la plan\u00e8te n'est pas trouv\u00e9e \u2192 automatiquement 404</li> <li>Pas besoin de requ\u00eates manuelles <code>findOrFail()</code></li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/4/#5-formatage-des-reponses","title":"5. Formatage des r\u00e9ponses","text":"<p>Exemple de r\u00e9ponse am\u00e9lior\u00e9e pour <code>index()</code> : <pre><code>&lt;?php\npublic function index()\n{\n    return response()-&gt;json([\n        'success' =&gt; true,\n        'data' =&gt; Planet::all(),\n        'message' =&gt; 'Plan\u00e8tes r\u00e9cup\u00e9r\u00e9es avec succ\u00e8s'\n    ]);\n}\n</code></pre></p> <p>R\u00e9ponse en cas d'erreur 404 (automatique) : <pre><code>{\n    \"message\": \"No query results for model [App\\\\Models\\\\Planet] 123\",\n    \"exception\": \"Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\NotFoundHttpException\"\n}\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/4/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Le drapeau pour cr\u00e9er un contr\u00f4leur API :</p>  a) --api  b) --resource  c) --model <p>2. Quel statut renvoyer en cas de cr\u00e9ation r\u00e9ussie ?</p>  a) 200 OK  b) 201 Created  c) 204 No Content <p>3. Le Route Model Binding permet de :</p>  a) Obtenir automatiquement un objet par ID  b) G\u00e9n\u00e9rer des formulaires HTML  c) Mettre en cache les requ\u00eates <p>4. Lors de la suppression d'une plan\u00e8te, nous renvoyons :</p>  a) JSON avec les donn\u00e9es de la plan\u00e8te  b) null avec le code 204  c) Une cha\u00eene vide <p>5. `$request-&gt;validate()` est utilis\u00e9 pour :</p>  a) La validation des donn\u00e9es d'entr\u00e9e  b) Le chiffrement des requ\u00eates  c) La mise en cache des r\u00e9ponses V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez cr\u00e9\u00e9 le \"tableau de bord\" du syst\u00e8me plan\u00e9taire ! Votre contr\u00f4leur est maintenant capable de :</p> <ul> <li>\ud83c\udf0c Afficher la liste des plan\u00e8tes (<code>index</code>)</li> <li>\ud83e\ude90 Cr\u00e9er de nouveaux mondes (<code>store</code>)</li> <li>\ud83d\udd2d D\u00e9tailler les donn\u00e9es d'une plan\u00e8te (<code>show</code>)</li> <li>\ud83d\udee0\ufe0f Mettre \u00e0 jour les informations (<code>update</code>)</li> <li>\ud83d\udca5 D\u00e9truire des plan\u00e8tes (<code>destroy</code>)</li> </ul> <p>Il ne reste plus qu'\u00e0 d\u00e9finir les routes ! Dans le chapitre suivant, nous connecterons le contr\u00f4leur aux routes d'API.</p> <p>\ud83d\udccc V\u00e9rification :</p> <p>Assurez-vous que <code>PlanetController.php</code> se trouve dans <code>app/Http/Controllers</code> avec 5 m\u00e9thodes.</p> <p>\u26a0\ufe0f En cas d'erreurs :</p> <ul> <li>V\u00e9rifiez le nom du mod\u00e8le : <code>use App\\Models\\Planet;</code></li> <li>V\u00e9rifiez les importations</li> <li>Pour PostgreSQL : assurez-vous que <code>Planet::all()</code> renvoie des donn\u00e9es</li> <li>En cas de probl\u00e8mes avec Tinker : ex\u00e9cutez <code>composer dump-autoload</code></li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/5/","title":"Chapitre 2.5 : Routes d'API","text":"<p>Temps d'\u00e9tude : 45 minutes</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/5/#1-quest-ce-quune-route-explication-simple","title":"1. Qu'est-ce qu'une route ? Explication simple","text":"<p>Imaginez que votre contr\u00f4leur (<code>PlanetController</code>) est un grand centre de bureaux, et que chacune de ses m\u00e9thodes (<code>index</code>, <code>store</code>, <code>show</code>) est un d\u00e9partement effectuant son propre travail.</p> <p>Une route (Route) est une plaque d'adresse \u00e0 l'entr\u00e9e du b\u00e2timent. Elle indique :</p> <ul> <li>\"Si quelqu'un est arriv\u00e9 \u00e0 l'adresse <code>/planets</code> avec la m\u00e9thode GET \u2014 envoyez-le au d\u00e9partement <code>index</code> (afficher tout).\"</li> <li>\"Si quelqu'un est arriv\u00e9 \u00e0 l'adresse <code>/planets</code> avec la m\u00e9thode POST et un colis (donn\u00e9es) \u2014 envoyez-le au d\u00e9partement <code>store</code> (cr\u00e9er un nouveau).\"</li> </ul> <p>Sans routes, aucune requ\u00eate du monde ext\u00e9rieur ne trouvera le d\u00e9partement dont elle a besoin dans votre code. Le fichier principal pour de telles \"plaques d'adresse\" dans une API est <code>routes/api.php</code>.</p> <p>Dans Laravel 11+, il n'y a pas de \"carnet d'adresses API\" par d\u00e9faut. Nous l'avons cr\u00e9\u00e9 nous-m\u00eames en ex\u00e9cutant la commande php artisan install:api. Nous avons maintenant le fichier routes/api.php \u2014 c'est le centre de contr\u00f4le principal pour toutes les routes de notre API.</p> <p>Diff\u00e9rence cl\u00e9 entre api.php et web.php :</p> <ul> <li>Pr\u00e9fixe /api : Laravel ajoute automatiquement /api \u00e0 toutes les URL de ce fichier. La route /planets se transforme en /api/planets.</li> <li>\"Sans \u00e9tat\" (Stateless) : Il n'y a pas de sessions ni de cookies ici, comme dans une application web normale. Chaque requ\u00eate est ind\u00e9pendante et doit contenir toutes les informations d'authentification (g\u00e9n\u00e9ralement un jeton API dans les en-t\u00eates).</li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/5/#2-la-voie-du-debutant-creer-une-route-manuellement","title":"2. La voie du d\u00e9butant : Cr\u00e9er une route manuellement","text":"<p>Cr\u00e9ons une seule route manuellement pour comprendre le principe. Notre objectif est de faire en sorte que l'URL <code>/api/planets</code> affiche la liste de toutes les plan\u00e8tes.</p> <p>Ouvrez <code>routes/api.php</code> et \u00e9crivez :</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController; // Indique o\u00f9 se trouve notre contr\u00f4leur\n\n//                    (1)           (2)                     (3)\nRoute::get(      '/planets',    [PlanetController::class, 'index']     );\n//   ^               ^                       ^\n// (M\u00e9thode HTTP)   (URL)                (Quel contr\u00f4leur et quelle m\u00e9thode appeler)\n</code></pre> <p>Analysons cette ligne par parties :</p> <ol> <li><code>Route::get(...)</code> \u2014 nous disons : \"Cette route ne fonctionne que pour les requ\u00eates GET\".</li> <li><code>'/planets'</code> \u2014 c'est l'URL que Laravel \u00e9coutera. Compte tenu du pr\u00e9fixe <code>/api</code>, l'adresse compl\u00e8te sera <code>http://space-api.test/api/planets</code>.</li> <li><code>[PlanetController::class, 'index']</code> \u2014 c'est la \"destination\". Nous disons : \"Quand la requ\u00eate arrive, trouve la classe <code>PlanetController</code> et appelle la m\u00e9thode <code>index()</code> en elle\".</li> </ol> <p>Maintenant, tout est li\u00e9 ! Requ\u00eate -&gt; Route -&gt; Contr\u00f4leur -&gt; M\u00e9thode.</p> <p>Et si nous devons obtenir une plan\u00e8te par son ID ? Par exemple, <code>/api/planets/5</code>.</p> <pre><code>// Route pour obtenir une plan\u00e8te sp\u00e9cifique\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n</code></pre> <p>Ici, <code>{planet}</code> est un \"mod\u00e8le\" ou une variable. Laravel comprend que n'importe quoi peut se trouver \u00e0 cet endroit (ID, slug). Il transmet ensuite cette valeur \u00e0 la m\u00e9thode <code>show(Planet $planet)</code>. Cette \"magie\", o\u00f9 Laravel trouve lui-m\u00eame la plan\u00e8te par ID, est appel\u00e9e Route Model Binding.</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/5/#3-la-voie-du-maitre-apiresource-une-seule-ligne-pour-les-gouverner-toutes","title":"3. La voie du ma\u00eetre : <code>apiResource</code> \u2014 une seule ligne pour les gouverner toutes","text":"<p>Cr\u00e9er chaque route manuellement (pour <code>index</code>, <code>show</code>, <code>store</code>, <code>update</code>, <code>destroy</code>) est fastidieux. Les d\u00e9veloppeurs Laravel le comprennent, c'est pourquoi ils ont cr\u00e9\u00e9 un assistant puissant \u2014 <code>apiResource</code>.</p> <p>Supprimez tout ce que nous avons \u00e9crit et remplacez-le par une seule ligne :</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController;\n\nRoute::apiResource('planets', PlanetController::class);\n</code></pre> <p>Que fait cette seule ligne sous le capot ? Elle cr\u00e9e automatiquement un ensemble complet de routes pour les op\u00e9rations CRUD standard que nous avons d\u00e9j\u00e0 impl\u00e9ment\u00e9es dans le contr\u00f4leur.</p> M\u00e9thode URL Dirig\u00e9e vers la m\u00e9thode Objectif GET <code>/api/planets</code> <code>index()</code> Obtenir la liste de toutes les plan\u00e8tes POST <code>/api/planets</code> <code>store()</code> Cr\u00e9er une nouvelle plan\u00e8te GET <code>/api/planets/{planet}</code> <code>show()</code> Afficher une plan\u00e8te sp\u00e9cifique PUT/PATCH <code>/api/planets/{planet}</code> <code>update()</code> Mettre \u00e0 jour une plan\u00e8te existante DELETE <code>/api/planets/{planet}</code> <code>destroy()</code> Supprimer une plan\u00e8te <p>Vous pouvez le v\u00e9rifier par vous-m\u00eame. Ex\u00e9cutez la commande dans le terminal :</p> <pre><code>php artisan route:list --path=api\n</code></pre> <p>Vous verrez un tableau avec toutes les routes cr\u00e9\u00e9es. <code>apiResource</code> est votre meilleur ami pour gagner du temps lors de la cr\u00e9ation d'API standard.</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/5/#4-missions-speciales-et-ordre-des-routes","title":"4. Missions sp\u00e9ciales et ordre des routes","text":"<p>Et si nous avons besoin d'une route non standard qui n'est pas incluse dans <code>apiResource</code> ? Par exemple, obtenir une plan\u00e8te al\u00e9atoire \u00e0 l'adresse <code>/api/planets/random</code>.</p> <p>Ajoutons-la. Mais il y a ici un pi\u00e8ge mortel dans lequel tombent 9 d\u00e9butants sur 10.</p> <p>Ordre incorrect (NE FONCTIONNE PAS !) : <pre><code>Route::apiResource('planets', PlanetController::class);\nRoute::get('/planets/random', [PlanetController::class, 'random']); // &lt;-- NE FONCTIONNERA PAS\n</code></pre> Pourquoi ? Laravel lit les routes de haut en bas. Il verra <code>Route::apiResource</code>, qui a cr\u00e9\u00e9 la route <code>GET /planets/{planet}</code>. Lorsque vous demanderez <code>/planets/random</code>, Laravel pensera que \"random\" est l'ID de la plan\u00e8te, et tentera de trouver une plan\u00e8te avec l'ID \"random\" dans la base de donn\u00e9es, et vous obtiendrez une erreur.</p> <p>Ordre correct (FONCTIONNE !) : <pre><code>&lt;?php\nuse App\\Http\\Controllers\\PlanetController;\nuse Illuminate\\Support\\Facades\\Route;\n\n// 1. D\u00e9clarons d'abord les routes SP\u00c9CIFIQUES\nRoute::get('/planets/random', [PlanetController::class, 'random']);\n\n// 2. Et seulement ensuite, d\u00e9clarons les routes G\u00c9N\u00c9RIQUES avec des variables\nRoute::apiResource('planets', PlanetController::class);\n</code></pre></p> <p>R\u00e8gle : D\u00e9clarez toujours les routes plus sp\u00e9cifiques (telles que <code>/random</code>) avant les routes plus g\u00e9n\u00e9riques et \u00e0 motifs (telles que <code>/{planet}</code>).</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/5/#important","title":"\u26a0\ufe0f Important !","text":"<p>Pour tester la route api/planets/random, vous devez ajouter un nouveau gestionnaire dans PlanetController :</p> <pre><code>&lt;?php\npublic function random(Request $request)\n{\n   $planet = Planet::inRandomOrder()-&gt;first();\n   return response()-&gt;json($planet);\n}\n</code></pre>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/5/#5-regroupement-mettre-de-lordre","title":"5. Regroupement : Mettre de l'ordre","text":"<p>Lorsque le nombre de routes devient important, il est possible et n\u00e9cessaire de les regrouper.</p> <p>A. Versioning de l'API Pour ne pas casser \u00e0 l'avenir les anciennes applications qui utilisent votre API, il est courant d'ajouter une version \u00e0 l'URL, par exemple <code>/api/v1/...</code>.</p> <pre><code>&lt;?php\nRoute::prefix('v1')-&gt;group(function () {\n    // Toutes les routes \u00e0 l'int\u00e9rieur de ce groupe obtiendront le pr\u00e9fixe /v1\n    // URL finale : /api/v1/planets\n    Route::get('/planets/random', [PlanetController::class, 'random']);\n    Route::apiResource('planets', PlanetController::class);\n});\n</code></pre> <p>B. Protection des routes (Middleware) Imaginons que tout le monde puisse consulter les plan\u00e8tes, mais que seules les utilisateurs autoris\u00e9s puissent les cr\u00e9er, les mettre \u00e0 jour et les supprimer.</p> <pre><code>&lt;?php\n// Routes publiques, accessibles \u00e0 tous\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// Groupe de routes n\u00e9cessitant un \"pass\" (authentification)\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n});\n</code></pre> <p>Ici, <code>middleware('auth:sanctum')</code> est comme un garde qui v\u00e9rifie le \"pass\" de quiconque tente d'acc\u00e9der aux routes \u00e0 l'int\u00e9rieur du groupe.</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/5/#6-test-via-postman","title":"6. Test via Postman","text":"<p>Maintenant que toutes les routes sont \u00e9tablies, il est temps de les tester.</p> <ol> <li>Si vous utilisez Herd : Votre site fonctionne d\u00e9j\u00e0 \u00e0 une adresse de type <code>http://space-api.test</code>.</li> <li>Sinon : Lancez le serveur local avec la commande <code>php artisan serve</code>. L'adresse sera <code>http://localhost:8000</code>.</li> </ol> <p>Ouvrez Postman et envoyez les requ\u00eates :</p> <ul> <li><code>GET http://space-api.test/api/planets</code></li> <li><code>GET http://space-api.test/api/planets/random</code></li> <li><code>POST http://space-api.test/api/planets</code> (n'oubliez pas d'ajouter le corps de requ\u00eate JSON dans l'onglet <code>Body</code> -&gt; <code>raw</code> -&gt; <code>JSON</code>).</li> </ul> <p>Exemple de requ\u00eate POST : <pre><code>{\n    \"name\": \"Kepler-186f\",\n    \"description\": \"\u041f\u0435\u0440\u0432\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u0437\u0435\u043c\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0432 \u043e\u0431\u0438\u0442\u0430\u0435\u043c\u043e\u0439 \u0437\u043e\u043d\u0435\",\n    \"size_km\": 15000,\n    \"solar_system\": \"Kepler-186\",\n    \"is_habitable\": true\n}\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/5/#8-erreurs-courantes-de-routage","title":"8. Erreurs courantes de routage","text":"<ol> <li>404 Not Found <ul> <li>URL incorrecte (<code>/api/planet</code> au lieu de <code>/api/planets</code>)</li> <li>Oubli\u00e9 <code>php artisan serve</code></li> </ul> </li> <li>405 Method Not Allowed <ul> <li>M\u00e9thode HTTP incorrecte (par exemple, GET au lieu de POST)</li> </ul> </li> <li>Contr\u00f4leur Manquant <ul> <li>Faute de frappe dans le nom du contr\u00f4leur (<code>PlanetControler</code>)</li> </ul> </li> <li>Collision de Noms de Route <ul> <li>Noms de routes en double</li> </ul> </li> </ol>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/5/#quiz-de-revision","title":"Quiz de r\u00e9vision","text":"<p>1. Le fichier pour les routes API dans Laravel :</p>  a) routes/web.php  b) routes/api.php  c) routes/console.php <p>2. Le pr\u00e9fixe automatique pour les routes API :</p>  a) /admin  b) /api  c) /v1 <p>3. La m\u00e9thode pour cr\u00e9er 5 routes CRUD :</p>  a) Route::api()  b) Route::resource()  c) Route::apiResource() <p>4. Route::prefix('v1') est utilis\u00e9 pour :</p>  a) Authentification  b) Versioning de l'API  c) Mise en cache <p>5. Affichage de toutes les routes :</p>  a) php artisan route:list  b) php artisan list:routes  c) php routes V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez construit des \"routes hyperspatiales\" pour l'API spatiale ! Maintenant :</p> <ul> <li>\ud83d\uddfa\ufe0f Tous les points de terminaison sont accessibles via <code>/api/...</code></li> <li>\ud83d\udd17 Les routes de ressources sont connect\u00e9es au contr\u00f4leur</li> <li>\ud83d\udee1\ufe0f Des routes personnalis\u00e9es ont \u00e9t\u00e9 ajout\u00e9es pour les op\u00e9rations sp\u00e9ciales</li> <li>\u2705 Les routes ont \u00e9t\u00e9 test\u00e9es via Postman</li> </ul> <p>L'univers est ouvert aux requ\u00eates ! Ensuite, nous allons ajouter une protection contre les \"d\u00e9bris spatiaux\" \u2013 la validation des donn\u00e9es.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ol> <li>Ex\u00e9cutez <code>php artisan route:list</code></li> <li>Assurez-vous de voir 5+ routes pour planets</li> <li>V\u00e9rifiez le fonctionnement de GET /api/planets dans le navigateur/Postman</li> </ol> <p>\u26a0\ufe0f Si erreur 404 :</p> <ul> <li>V\u00e9rifiez la pr\u00e9sence de <code>Route::apiResource</code> dans <code>routes/api.php</code></li> <li>Assurez-vous que le serveur est lanc\u00e9 (<code>php artisan serve</code>)</li> <li>Pour Windows : autorisez le port 8000 dans le pare-feu</li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/6/","title":"Chapitre 2.6 : Validation des donn\u00e9es","text":"<p>Temps d'\u00e9tude : 50 minutes</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/6/#1-validation-un-bouclier-a-lechelle-cosmique","title":"1. Validation : Un bouclier \u00e0 l'\u00e9chelle cosmique","text":"<p>La validation est la v\u00e9rification des donn\u00e9es entrantes par rapport aux r\u00e8gles. Sans elle :</p> <ul> <li>\ud83d\ude80 Des donn\u00e9es incorrectes peuvent \"d\u00e9truire\" votre base de donn\u00e9es</li> <li>\ud83c\udf0c Des acteurs malveillants peuvent injecter du code nuisible</li> <li>\ud83e\ude90 Les utilisateurs recevront des erreurs incompr\u00e9hensibles</li> </ul> <p>\ud83d\udca1 Analogie spatiale : Validation = Syst\u00e8me de d\u00e9fense d'une station spatiale :</p> <ul> <li>V\u00e9rifie la \"cargaison\" (donn\u00e9es) avant l'amarrage</li> <li>Rejette les objets dangereux</li> <li>Filtre les d\u00e9bris spatiaux</li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/6/#2-ou-valider-dans-lapi-laravel","title":"2. O\u00f9 valider dans l'API Laravel","text":"<p>Principales approches :</p> <ol> <li>Dans le contr\u00f4leur (rapide, mais alourdit le code)</li> <li>Form Request (recommand\u00e9, architecture propre)</li> </ol>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/6/#3-validation-dans-le-controleur","title":"3. Validation dans le contr\u00f4leur","text":"<p>Nous utilisons la m\u00e9thode <code>validate()</code> de l'objet Request : <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $validated = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    // ... cr\u00e9ation de la plan\u00e8te\n}\n</code></pre></p> <p>R\u00e8gles de validation populaires :</p> R\u00e8gle Description Exemple <code>required</code> Champ obligatoire <code>'name' =&gt; 'required'</code> <code>string</code> Valeur de cha\u00eene de caract\u00e8res <code>'description' =&gt; 'string'</code> <code>integer</code> Nombre entier <code>'size_km' =&gt; 'integer'</code> <code>min:value</code> Valeur/longueur minimale <code>'size_km' =&gt; 'min:100'</code> <code>max:value</code> Valeur/longueur maximale <code>'name' =&gt; 'max:255'</code> <code>unique:table,column</code> Unicit\u00e9 dans la table <code>'name' =&gt; 'unique:planets'</code> <code>url</code> URL valide <code>'image_url' =&gt; 'url'</code> <code>boolean</code> true/false/1/0 <code>'is_habitable' =&gt; 'boolean'</code>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/6/#4-messages-derreur-personnalises","title":"4. Messages d'erreur personnalis\u00e9s","text":"<p>Nous modifions les textes d'erreur standard : <pre><code>&lt;?php\n$validated = $request-&gt;validate(\n    [\n        'name' =&gt; 'required|unique:planets',\n        'size_km' =&gt; 'min:1000'\n    ],\n    [\n        'name.required' =&gt; 'Le nom de la plan\u00e8te est obligatoire !',\n        'name.unique' =&gt; 'Cette plan\u00e8te existe d\u00e9j\u00e0 dans le catalogue',\n        'size_km.min' =&gt; 'Le diam\u00e8tre de la plan\u00e8te ne peut \u00eatre inf\u00e9rieur \u00e0 1000 km'\n    ]\n);\n</code></pre></p> <p>Exemple de r\u00e9ponse en cas d'erreur (automatiquement 422 Unprocessable Entity) : <pre><code>{\n    \"message\": \"Les donn\u00e9es fournies sont invalides.\",\n    \"errors\": {\n        \"name\": [\"Cette plan\u00e8te existe d\u00e9j\u00e0 dans le catalogue\"],\n        \"size_km\": [\"Le diam\u00e8tre de la plan\u00e8te ne peut \u00eatre inf\u00e9rieur \u00e0 1000 km\"]\n    }\n}\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/6/#5-creation-dun-form-request","title":"5. Cr\u00e9ation d'un Form Request","text":"<p>Pour une validation complexe, nous cr\u00e9ons une classe s\u00e9par\u00e9e :</p> <p>\u00c9tape 1 : G\u00e9n\u00e9ration <pre><code>php artisan make:request StorePlanetRequest\n</code></pre></p> <p>\u00c9tape 2 : Modification de <code>app/Http/Requests/StorePlanetRequest.php</code> <pre><code>&lt;?php\npublic function authorize()\n{\n    return true; // G\u00e9n\u00e9ralement true pour une API\n}\n\npublic function rules()\n{\n    return [\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ];\n}\n\npublic function messages()\n{\n    return [\n        'name.unique' =&gt; 'Une plan\u00e8te avec ce nom existe d\u00e9j\u00e0 !',\n        'size_km.min' =&gt; 'Le diam\u00e8tre ne peut \u00eatre inf\u00e9rieur \u00e0 100 km'\n    ];\n}\n</code></pre></p> <p>\u00c9tape 3 : Utilisation dans le contr\u00f4leur <pre><code>&lt;?php\nuse App\\Http\\Requests\\StorePlanetRequest;\n\npublic function store(StorePlanetRequest $request)\n{\n    // Les donn\u00e9es sont d\u00e9j\u00e0 valid\u00e9es !\n    $validated = $request-&gt;validated();\n    $planet = Planet::create($validated);\n    return response()-&gt;json($planet, 201);\n}\n</code></pre></p> <p>Compris. La t\u00e2che consiste \u00e0 rendre le chapitre enti\u00e8rement conforme \u00e0 Laravel 10/11/12, en supprimant toute mention de concepts et de drapeaux obsol\u00e8tes, en particulier <code>--invokable</code>, et en ne laissant que le code actuel. Sans toucher \u00e0 quoi que ce soit d'inutile.</p> <p>Accept\u00e9. Voici la version corrig\u00e9e de la section 6, qui refl\u00e8te fid\u00e8lement la r\u00e9alit\u00e9 des versions modernes du framework.</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/6/#6-regles-de-validation-personnalisees","title":"6. R\u00e8gles de validation personnalis\u00e9es","text":"<p>Nous allons cr\u00e9er une r\u00e8gle pour v\u00e9rifier la \"pertinence\" du nom d'une plan\u00e8te. Les r\u00e8gles standard de Laravel ne peuvent pas v\u00e9rifier si un nom est \"interdit\", nous allons donc \u00e9crire notre propre logique.</p> <p>\u00c9tape 1 : G\u00e9n\u00e9ration de la r\u00e8gle</p> <p>Laravel fournit une commande Artisan pour cr\u00e9er un \"squelette\" de classe de r\u00e8gle. Ex\u00e9cutons-la dans le terminal :</p> <pre><code>php artisan make:rule ValidPlanetName\n</code></pre> <p>\u00c9tape 2 : Modification de <code>app/Rules/ValidPlanetName.php</code></p> <p>Ouvrez le fichier cr\u00e9\u00e9. Sa structure est simple et claire. Notre t\u00e2che est d'impl\u00e9menter la logique \u00e0 l'int\u00e9rieur de la m\u00e9thode <code>validate</code>.</p> <pre><code>&lt;?php\n\nnamespace App\\Rules;\n\nuse Closure;\nuse Illuminate\\Contracts\\Validation\\ValidationRule;\n\nclass ValidPlanetName implements ValidationRule\n{\n    /**\n     * Ex\u00e9cute la r\u00e8gle de validation.\n     *\n     * @param  \\Closure(string): \\Illuminate\\Translation\\PotentiallyTranslatedString  $fail\n     */\n    public function validate(string $attribute, mixed $value, Closure $fail): void\n    {\n        // Notre \"liste noire\" de noms\n        $forbidden = ['\u0417\u0435\u043c\u043b\u044f 2.0', '\u041d\u0438\u0431\u0438\u0440\u0443', '\u041f\u043b\u0430\u043d\u0435\u0442\u0430 X'];\n\n        // Nous v\u00e9rifions si la valeur saisie est dans notre liste,\n        // en ignorant la casse des lettres.\n        if (in_array(strtolower($value), array_map('strtolower', $forbidden))) {\n            // Si la validation \u00e9choue, nous appelons la fonction $fail\n            // avec le texte d'erreur que l'utilisateur verra.\n            $fail('Ce nom de plan\u00e8te est interdit d\\'utilisation !');\n        }\n    }\n}\n</code></pre> <p>\u00c9tape 3 : Utilisation dans le Form Request</p> <p>Maintenant, notre r\u00e8gle personnalis\u00e9e est pr\u00eate \u00e0 \u00eatre utilis\u00e9e. Nous pouvons l'inclure dans n'importe quel Form Request, en cr\u00e9ant simplement une nouvelle instance de notre classe.</p> <p>Ouvrons <code>app/Http/Requests/StorePlanetRequest.php</code> et ajoutons <code>new ValidPlanetName</code> au tableau de r\u00e8gles pour le champ <code>name</code>.</p> <p><pre><code>&lt;?php\n// app/Http/Requests/StorePlanetRequest.php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Rules\\ValidPlanetName; // &lt;-- N'oubliez pas d'importer la classe\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass StorePlanetRequest extends FormRequest\n{\n    // ... (m\u00e9thode authorize)\n\n    public function rules(): array\n    {\n        return [\n            'name' =&gt; [\n                'sometimes',\n                'string',\n                'max:255',\n                'unique:planets',\n                new ValidPlanetName, // &lt;-- Voici notre r\u00e8gle personnalis\u00e9e\n            ],\n            'description' =&gt; 'sometimes|string',\n            'size_km' =&gt; 'sometimes|integer|min:100|max:500000',\n            'solar_system' =&gt; 'sometimes|string|max:100',\n            'image_url' =&gt; 'nullable|url|max:2048',\n            'is_habitable' =&gt; 'sometimes|boolean'\n        ];\n    }\n\n    // ... (m\u00e9thode messages)\n}\n</code></pre> C'est fait. Maintenant, lors de la cr\u00e9ation d'une plan\u00e8te, Laravel appliquera s\u00e9quentiellement toutes les r\u00e8gles au champ <code>name</code> et, en arrivant \u00e0 <code>new ValidPlanetName</code>, ex\u00e9cutera notre logique personnalis\u00e9e.</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/6/#7-validation-pour-la-mise-a-jour-update","title":"7. Validation pour la mise \u00e0 jour (Update)","text":"<p>Sp\u00e9cificit\u00e9s lors de la mise \u00e0 jour des donn\u00e9es :</p> <p>Lors de la mise \u00e0 jour d'un enregistrement, les r\u00e8gles de validation sont souvent diff\u00e9rentes. La principale particularit\u00e9 est la v\u00e9rification de l'unicit\u00e9, qui doit ignorer l'enregistrement actuellement mis \u00e0 jour.</p> <p>\u00c9tape 1 : Cr\u00e9ation d'un Form Request distinct pour la mise \u00e0 jour <pre><code>php artisan make:request UpdatePlanetRequest\n</code></pre> \u00c9tape 2 : Modification de <code>app/Http/Requests/UpdatePlanetRequest.php</code> <pre><code>&lt;?php\nuse Illuminate\\Validation\\Rule;\n\npublic function authorize(): bool\n{\n    return true;\n}\npublic function rules(): array\n{\n    $planet = $this-&gt;route('planet'); // R\u00e9cup\u00e8re le mod\u00e8le depuis la route\n\n     return [\n         'name' =&gt; [\n             'sometimes', // V\u00e9rifie uniquement si le champ est pr\u00e9sent dans la requ\u00eate\n             'required',\n             'string',\n             'max:255',\n             Rule::unique('planets')-&gt;ignore($planetId),\n         ],\n         'description'  =&gt; 'sometimes|required|string',\n         'size_km'      =&gt; 'sometimes|required|integer|min:100|max:500000',\n         // ... les autres champs avec 'sometimes'\n     ];\n }\n</code></pre> \u00c9tape 3 : Utilisation dans le contr\u00f4leur <pre><code>&lt;?php\n use App\\Http\\Requests\\UpdatePlanetRequest;\n\n public function update(UpdatePlanetRequest $request, Planet $planet)\n {\n     $validated = $request-&gt;validated();\n     $planet-&gt;update($validated);\n     return response()-&gt;json($planet);\n }\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/6/#8-test-de-la-validation-dans-postman","title":"8. Test de la validation dans Postman","text":"<p>Sc\u00e9nario 1 : Erreur d'unicit\u00e9 du nom <pre><code>POST /api/planets\n{\n    \"name\": \"Mars\",\n    \"description\": \"La plan\u00e8te rouge, cible des futures colonisations\",\n    \"size_km\": 6779,\n    \"solar_system\": \"Solar System\",\n    \"is_habitable\": false\n}\n</code></pre> R\u00e9ponse attendue : <pre><code>{\n    \"message\": \"Les donn\u00e9es fournies sont invalides.\",\n    \"errors\": {\n        \"name\": [\"Une plan\u00e8te avec ce nom existe d\u00e9j\u00e0 !\"]\n    }\n}\n</code></pre></p> <p>Sc\u00e9nario 2 : Diam\u00e8tre incorrect <pre><code>{\n    \"name\": \"Plan\u00e8te-Pois\",\n    \"size_km\": 50 // &lt; min:100\n}\n</code></pre> R\u00e9ponse attendue : <pre><code>\"errors\": {\n    \"size_km\": [\"Le diam\u00e8tre ne peut \u00eatre inf\u00e9rieur \u00e0 100 km\"]\n}\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/6/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Statut HTTP en cas d'erreurs de validation :</p>  a) 400 Bad Request  b) 422 Unprocessable Entity  c) 500 Internal Server Error <p>2. R\u00e8gle pour v\u00e9rifier l'unicit\u00e9 :</p>  a) unique:table  b) distinct  c) only:table <p>3. O\u00f9 est-il pr\u00e9f\u00e9rable de placer les r\u00e8gles de validation complexes ?</p>  a) Dans le contr\u00f4leur  b) Dans le mod\u00e8le  c) Dans Form Request <p>4. La m\u00e9thode `authorize()` dans un Form Request doit retourner :</p>  a) false  b) true  c) null <p>5. La r\u00e8gle sometimes signifie :</p>  a) Le champ est obligatoire  b) Le champ est v\u00e9rifi\u00e9 uniquement s'il est pr\u00e9sent  c) Le champ est ignor\u00e9 V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez mis en place un syst\u00e8me de protection puissant pour votre API spatiale :</p> <ul> <li>\ud83d\udee1\ufe0f R\u00e8gles de validation de base et personnalis\u00e9es</li> <li>\ud83d\udcdd Messages d'erreur lisibles</li> <li>\ud83e\udde9 Form Request pour les sc\u00e9narios complexes</li> <li>\u2699\ufe0f R\u00e8gles uniques pour la mise \u00e0 jour des donn\u00e9es</li> </ul> <p>Votre univers est maintenant prot\u00e9g\u00e9 ! Ensuite, nous apprendrons \u00e0 g\u00e9rer les \"accidents spatiaux\" - les erreurs de serveur.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ol> <li>Cr\u00e9ez une Form Request pour la mise \u00e0 jour des plan\u00e8tes</li> <li>Ajoutez une r\u00e8gle de validation personnalis\u00e9e pour le nom</li> <li>Testez les erreurs via Postman</li> </ol> <p>\u26a0\ufe0f Si la validation ne fonctionne pas :</p> <ul> <li>V\u00e9rifiez la connexion de la Form Request dans le contr\u00f4leur</li> <li>Assurez-vous que <code>authorize()</code> renvoie true</li> <li>Pour l'unicit\u00e9 lors de la mise \u00e0 jour, utilisez <code>Rule::unique</code></li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/7/","title":"Chapitre 2.7 : Gestion des erreurs","text":"<p>Temps d'\u00e9tude : 40 minutes</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/7/#1-pourquoi-les-erreurs-standards-sont-elles-mauvaises","title":"1. Pourquoi les erreurs standards sont-elles mauvaises ?","text":"<p>Si une erreur se produit dans votre application Laravel (par exemple, un enregistrement introuvable dans la base de donn\u00e9es) et que vous ne l'avez pas g\u00e9r\u00e9e, l'utilisateur verra une \u00e9norme page HTML avec des informations de d\u00e9bogage ou un message non informatif \"Server Error\".</p> <p>Pour une API, c'est une catastrophe. Votre application frontend s'attend \u00e0 recevoir du JSON, pas du HTML. Notre t\u00e2che est d'intercepter toute erreur et de la transformer en une r\u00e9ponse JSON structur\u00e9e.</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/7/#2-dispatcher-derreurs-central-bootstrapappphp","title":"2. Dispatcher d'erreurs central : <code>bootstrap/app.php</code>","text":"<p>Dans les anciennes versions de Laravel, il y avait un fichier volumineux <code>App\\Exceptions\\Handler.php</code>. Dans Laravel 11/12, tout est devenu beaucoup plus simple et \u00e9l\u00e9gant. Le centre de gestion des erreurs se trouve d\u00e9sormais directement dans le fichier de configuration de votre application \u2014 <code>bootstrap/app.php</code>.</p> <p>Ouvrez <code>bootstrap/app.php</code>. Tout en bas, vous verrez le bloc <code>.withExceptions(...)</code>. C'est notre \"dispatcher central\".</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    -&gt;withRouting(\n        web: __DIR__.'/../routes/web.php',\n        api: __DIR__.'/../routes/api.php',\n        commands: __DIR__.'/../routes/console.php',\n        health: '/up',\n    )\n    -&gt;withMiddleware(function (Middleware $middleware) {\n        // ...\n    })\n    -&gt;withExceptions(function (Exceptions $exceptions) {\n        // &lt;-- C'EST ICI QUE NOUS ALLONS TRAVAILLER\n    })-&gt;create();\n</code></pre>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/7/#3-gerer-lerreur-la-plus-courante-non-trouve-404","title":"3. G\u00e9rer l'erreur la plus courante : \"Non trouv\u00e9\" (404)","text":"<p>L'erreur la plus courante dans une API est lorsque l'utilisateur demande une ressource qui n'existe pas (par exemple, <code>GET /api/planets/999</code>). Dans ce cas, Laravel g\u00e9n\u00e8re une exception <code>ModelNotFoundException</code> ou <code>NotFoundHttpException</code>. Interceptons-les.</p> <p>Ajoutez le code suivant \u00e0 l'int\u00e9rieur de <code>.withExceptions(...)</code> :</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // Intercepte l'exception lorsque le mod\u00e8le n'est pas trouv\u00e9 dans la base de donn\u00e9es\n    $exceptions-&gt;render(function (ModelNotFoundException $e, Request $request) {\n        // V\u00e9rifie que la requ\u00eate provient bien de notre API\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; 'La ressource demand\u00e9e est introuvable dans notre galaxie.'\n            ], 404);\n        }\n    });\n\n    // Intercepte l'exception lorsque le chemin lui-m\u00eame n'est pas trouv\u00e9\n    $exceptions-&gt;render(function (NotFoundHttpException $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; 'Une telle route spatiale n\\'existe pas.'\n            ], 404);\n        }\n    });\n\n})-&gt;create();\n</code></pre> Qu'avons-nous fait ?</p> <ol> <li><code>$exceptions-&gt;render(...)</code> \u2014 nous enregistrons un \"gestionnaire\". Il dit : \"Si une exception de type <code>ModelNotFoundException</code> se produit, ex\u00e9cute ce code\".</li> <li><code>if ($request-&gt;is('api/*'))</code> \u2014 c'est une v\u00e9rification importante. Elle garantit que notre belle r\u00e9ponse JSON ne sera envoy\u00e9e que pour les requ\u00eates API, sans affecter les pages web normales.</li> <li><code>return response()-&gt;json(...)</code> \u2014 nous cr\u00e9ons et renvoyons une r\u00e9ponse JSON standardis\u00e9e avec le code 404.</li> </ol> <p>Maintenant, si vous demandez une plan\u00e8te inexistante, au lieu d'une page HTML disgracieuse, vous obtiendrez un JSON propre.</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/7/#4-exceptions-personnalisees-creer-nos-propres-alertes","title":"4. Exceptions personnalis\u00e9es : Cr\u00e9er nos propres \"alertes\"","text":"<p>Parfois, les exceptions standards ne suffisent pas. Imaginons que nous ayons une r\u00e8gle m\u00e9tier : \"il est interdit de supprimer la plan\u00e8te 'Terre'\". Si quelqu'un tente de le faire, nous devons renvoyer une erreur significative.</p> <p>\u00c9tape 1 : Cr\u00e9er notre classe d'exception Ex\u00e9cuter dans le terminal : <pre><code>php artisan make:exception CannotDeleteEarthException\n</code></pre></p> <p>\u00c9tape 2 : L'utiliser dans le contr\u00f4leur Ouvrez <code>PlanetController.php</code> et modifiez la m\u00e9thode <code>destroy</code> :</p> <p><pre><code>&lt;?php\n// app/Http/Controllers/PlanetController.php\nuse App\\Exceptions\\CannotDeleteEarthException; // &lt;-- Importons notre exception\nuse App\\Models\\Planet;\n\npublic function destroy(Planet $planet)\n{\n    // Notre nouvelle r\u00e8gle m\u00e9tier\n    if (strtolower($planet-&gt;name) === '\u0437\u0435\u043c\u043b\u044f') {\n        throw new CannotDeleteEarthException('La suppression de la plan\u00e8te Terre est interdite par le Code Galactique.');\n    }\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre> Maintenant, si quelqu'un tente d'ex\u00e9cuter <code>DELETE /api/planets/1</code> (o\u00f9 1 est l'ID de la Terre), notre code l\u00e8vera une exception <code>CannotDeleteEarthException</code>.</p> <p>\u00c9tape 3 : Apprendre \u00e0 Laravel \u00e0 g\u00e9rer joliment notre \"alerte\" Revenons \u00e0 <code>bootstrap/app.php</code> et ajoutons un nouveau gestionnaire pour notre exception.</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // Notre nouveau gestionnaire\n    $exceptions-&gt;render(function (CannotDeleteEarthException $e, Request $request) {\n        return response()-&gt;json([\n            'message' =&gt; 'Op\u00e9ration interdite.',\n            'details' =&gt; $e-&gt;getMessage() // R\u00e9cup\u00e8re le message que nous avons pass\u00e9 \u00e0 throw\n        ], 403); // 403 Forbidden - \"Acc\u00e8s interdit\"\n    });\n\n    // ... (autres gestionnaires pour 404)\n\n})-&gt;create();\n</code></pre> C'est fait ! Nous avons cr\u00e9\u00e9 notre propre exception nomm\u00e9e, ce qui rend le code du contr\u00f4leur plus propre, et nous avons appris \u00e0 Laravel \u00e0 la transformer en une belle r\u00e9ponse JSON significative avec le bon statut HTTP.</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/7/#5-gestion-de-tous-les-autres-echecs-500-internal-server-error","title":"5. Gestion de tous les autres \u00e9checs (500 Internal Server Error)","text":"<p>Que faire de toutes les autres erreurs impr\u00e9vues ? Par exemple, si la base de donn\u00e9es tombe en panne ou s'il y a une erreur de syntaxe dans le code. Pour cela, nous pouvons enregistrer un gestionnaire \"universel\" pour le type d'erreur le plus g\u00e9n\u00e9ral \u2014 <code>Throwable</code>.</p> <p>Important : Ce gestionnaire doit \u00eatre le dernier pour ne pas intercepter les exceptions plus sp\u00e9cifiques que nous avons d\u00e9finies ci-dessus.</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // ... (gestionnaires pour CannotDeleteEarthException et 404)\n\n    // GESTIONNAIRE UNIVERSEL (\u00e0 la toute fin)\n    $exceptions-&gt;render(function (Throwable $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            // En mode d\u00e9bogage, il est possible d'afficher le v\u00e9ritable message d'erreur\n            $message = config('app.debug')\n                ? 'Une erreur est survenue : ' . $e-&gt;getMessage()\n                : 'Une erreur inattendue est survenue \u00e0 bord. Les ing\u00e9nieurs ont d\u00e9j\u00e0 \u00e9t\u00e9 appel\u00e9s.';\n\n            return response()-&gt;json(['message' =&gt; $message], 500);\n        }\n    });\n\n})-&gt;create();\n</code></pre> <p>Maintenant, toute exception \"inconnue\" sera proprement intercept\u00e9e et transform\u00e9e en JSON avec le code 500, sans casser votre API et sans montrer d'informations superflues \u00e0 l'utilisateur.</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/7/#6-journalisation-des-erreurs-la-boite-noire-du-vaisseau-spatial","title":"6. Journalisation des erreurs : La bo\u00eete noire du vaisseau spatial","text":"<p>Param\u00e8tres de journalisation dans <code>config/logging.php</code> : <pre><code>&lt;?php\n'channels' =&gt; [\n    'space_api' =&gt; [\n        'driver' =&gt; 'daily',\n        'path' =&gt; storage_path('logs/space_api.log'),\n        'level' =&gt; 'error',\n        'days' =&gt; 14,\n    ],\n],\n</code></pre></p> <p>Ajouter une entr\u00e9e au journal : <pre><code>&lt;?php\ntry {\n    // Code avec risque d'erreur\n} catch (Exception $e) {\n    Log::channel('space_api')-&gt;error('Erreur d\\'acc\u00e8s aux plan\u00e8tes', [\n        'exception' =&gt; $e,\n        'request' =&gt; request()-&gt;all(),\n        'user_id' =&gt; auth()-&gt;id()\n    ]);\n    throw $e;\n}\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/7/#quiz-de-revision","title":"Quiz de r\u00e9vision","text":"<p>1. Statut HTTP pour \"Plan\u00e8te introuvable\" :</p>  a) 400  b) 404  c) 500 <p>2. Classe pour le traitement global des erreurs :</p>  a) Handler.php  b) ErrorController.php  c) Middleware/Error.php <p>3. M\u00e9thode pour cr\u00e9er une exception personnalis\u00e9e :</p>  a) php artisan make:exception  b) php artisan exception:create  c) php artisan generate:exception <p>4. Canal pour la journalisation s\u00e9par\u00e9e des erreurs d'API :</p>  a) Configuration dans config/logging.php  b) Param\u00e8tre dans .env  c) Sp\u00e9cification dans le contr\u00f4leur <p>5. Principal avantage de la cr\u00e9ation d'exceptions personnalis\u00e9es :</p>  a) Am\u00e9lioration des performances  b) Cr\u00e9ation d'erreurs s\u00e9mantiquement compr\u00e9hensibles pour des sc\u00e9narios m\u00e9tier sp\u00e9cifiques  c) Ajout automatique dans .env V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez \u00e9quip\u00e9 votre API d'un syst\u00e8me de sauvetage fiable : - \ud83d\udedf Interception globale des erreurs standard - \ud83e\ude90 Exceptions personnalis\u00e9es avec des codes clairs - \ud83d\udcdd Format JSON unifi\u00e9 pour toutes les erreurs - \ud83d\udd0d Journalisation avec les d\u00e9tails de l'incident - \ud83d\udce1 Int\u00e9gration avec les syst\u00e8mes de surveillance</p> <p>Le vaisseau spatial est pr\u00eat aux situations d'urgence ! Dans le chapitre final de cette section, nous allons tester tous les syst\u00e8mes.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ol> <li>Cr\u00e9ez une exception <code>PlanetNotFoundException</code></li> <li>Ajoutez la gestion des erreurs 404 dans <code>-&gt;withExceptions</code></li> <li>Testez une requ\u00eate vers une plan\u00e8te inexistante</li> </ol> <p>\u26a0\ufe0f Si les erreurs ne sont pas intercept\u00e9es :</p> <ul> <li>Assurez-vous que <code>is('api/*')</code> correspond \u00e0 vos routes</li> <li>V\u00e9rifiez l'ordre des gestionnaires dans <code>register()</code></li> <li>Pour les exceptions personnalis\u00e9es, utilisez <code>throw new</code></li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/8/","title":"Chapitre 2.8 : Test d'API","text":"<p>Temps d'\u00e9tude : 1 heure</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/8/#1-pourquoi-les-tests-sont-ils-necessaires","title":"1. Pourquoi les tests sont-ils n\u00e9cessaires ?","text":"<p>Imaginez que vous ayez construit un vaisseau spatial. Avant de l'envoyer sur Mars, vous effectuez des milliers de v\u00e9rifications sur Terre. Les tests en programmation, c'est la m\u00eame chose. Ils :</p> <ul> <li>Donnent confiance : Vous pouvez modifier le code, et si les tests passent, cela signifie que vous n'avez rien cass\u00e9.</li> <li>\u00c9conomisent du temps : Au lieu de \"cliquer\" manuellement sur tout dans Postman apr\u00e8s chaque modification, vous ex\u00e9cutez une seule commande qui v\u00e9rifie tout pour vous en quelques secondes.</li> <li>Servent de documentation : De bons tests montrent comment votre API est cens\u00e9e fonctionner.</li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/8/#2-configuration-du-laboratoire-de-test","title":"2. Configuration du \"Laboratoire\" de test","text":"<p>Laravel rend la configuration des tests incroyablement simple. Par d\u00e9faut, il utilise une configuration distincte afin de ne pas affecter votre base de donn\u00e9es principale.</p> <p>Base de donn\u00e9es pour les tests : Par d\u00e9faut, Laravel utilise une base de donn\u00e9es en m\u00e9moire (<code>:memory:</code>). C'est la m\u00e9thode la plus rapide car il n'est pas n\u00e9cessaire d'\u00e9crire quoi que ce soit sur le disque. La base de donn\u00e9es est cr\u00e9\u00e9e avant les tests et d\u00e9truite apr\u00e8s. Nous n'avons m\u00eame rien \u00e0 configurer pour cela !</p> <p>Cr\u00e9ation du fichier de test : Cr\u00e9ons un fichier sp\u00e9cial pour les tests li\u00e9s aux plan\u00e8tes.</p> <pre><code>php artisan make:test PlanetApiTest\n</code></pre> <p>Cette commande cr\u00e9era le fichier <code>tests/Feature/PlanetApiTest.php</code>. Le mot <code>Feature</code> signifie que nous allons tester la fonctionnalit\u00e9 dans son ensemble (par exemple, \"l'utilisateur peut-il cr\u00e9er une plan\u00e8te ?\"), et non une petite classe individuelle.</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/8/#3-anatomie-dun-test-preparation-action-verification","title":"3. Anatomie d'un test : Pr\u00e9paration, Action, V\u00e9rification","text":"<p>Ouvrez <code>tests/Feature/PlanetApiTest.php</code>. Nous y \u00e9crirons notre premier test. Un bon test se compose toujours de trois parties (Arrange, Act, Assert).</p> <p><pre><code>&lt;?php\n\nnamespace Tests\\Feature;\n\nuse App\\Models\\Planet; // N'oubliez pas d'importer le mod\u00e8le\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase; // L'outil le plus important !\nuse Tests\\TestCase;\n\nclass PlanetApiTest extends TestCase\n{\n    // Ce trait \"nettoie\" et recr\u00e9e \"magiquement\"\n    // notre base de donn\u00e9es de test avant chaque test.\n    // Cela garantit que les tests ne s'affectent pas mutuellement.\n    use RefreshDatabase;\n\n    /**\n     * Test : le point de terminaison pour obtenir la liste des plan\u00e8tes fonctionne correctement.\n     * Les noms des tests doivent \u00eatre significatifs !\n     */\n    public function test_can_get_all_planets(): void\n    {\n        // 1. PR\u00c9PARATION (Arrange)\n        // Nous cr\u00e9ons 3 plan\u00e8tes factices dans notre base de donn\u00e9es de test\n        // \u00e0 l'aide de la fabrique que nous avons cr\u00e9\u00e9e pr\u00e9c\u00e9demment.\n        Planet::factory()-&gt;count(3)-&gt;create();\n\n        // 2. ACTION (Act)\n        // Nous simulons une v\u00e9ritable requ\u00eate GET vers notre API.\n        $response = $this-&gt;getJson('/api/planets');\n\n        // 3. V\u00c9RIFICATION (Assert)\n        // Nous v\u00e9rifions que tout s'est pass\u00e9 comme pr\u00e9vu.\n        $response-&gt;assertStatus(200); // Nous nous attendons \u00e0 ce que le serveur r\u00e9ponde \"200 OK\"\n        $response-&gt;assertJsonCount(3); // Nous nous attendons \u00e0 exactement 3 plan\u00e8tes dans la r\u00e9ponse\n    }\n}\n</code></pre> Points cl\u00e9s :</p> <ul> <li><code>use RefreshDatabase</code> : Ce trait est votre meilleur ami. Il garantit que chaque test commence avec une \"table rase\", avec une base de donn\u00e9es vide.</li> <li><code>Planet::factory()</code> : Les fabriques sont id\u00e9ales pour cr\u00e9er des donn\u00e9es de test.</li> <li><code>$this-&gt;getJson()</code> : C'est une m\u00e9thode Laravel sp\u00e9ciale pour envoyer des requ\u00eates API \u00e0 l'int\u00e9rieur des tests.</li> <li><code>assert...()</code> : Ce sont des \"assertions\" ou des \"v\u00e9rifications\". Si au moins l'une d'entre elles \u00e9choue, le test \u00e9chouera.</li> </ul>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/8/#4-test-des-operations-principales-crud","title":"4. Test des op\u00e9rations principales (CRUD)","text":"<p>\u00c9crivons des tests pour la cr\u00e9ation, la mise \u00e0 jour et la suppression de plan\u00e8tes.</p> <p>A. Test de cr\u00e9ation de plan\u00e8te (POST)</p> <pre><code>&lt;?php\npublic function test_can_create_a_planet(): void\n{\n    // 1. Pr\u00e9paration : pr\u00e9paration des donn\u00e9es pour une nouvelle plan\u00e8te\n    $planetData = [\n        'name' =&gt; 'Kepler-186f',\n        'description' =&gt; 'La premi\u00e8re exoplan\u00e8te de la taille de la Terre dans la zone habitable.',\n        'size_km' =&gt; 14000,\n        'solar_system' =&gt; 'Kepler-186'\n    ];\n\n    // 2. Action : envoi d'une requ\u00eate POST avec les donn\u00e9es\n    $response = $this-&gt;postJson('/api/planets', $planetData);\n\n    // 3. V\u00e9rification\n    $response-&gt;assertStatus(201); // Nous nous attendons au statut \"201 Created\"\n    $response-&gt;assertJsonFragment(['name' =&gt; 'Kepler-186f']); // Nous v\u00e9rifions que le nom cr\u00e9\u00e9 est pr\u00e9sent dans la r\u00e9ponse\n\n    // La v\u00e9rification la plus importante : les donn\u00e9es ont-elles vraiment \u00e9t\u00e9 ajout\u00e9es \u00e0 la base de donn\u00e9es ?\n    $this-&gt;assertDatabaseHas('planets', [\n        'name' =&gt; 'Kepler-186f'\n    ]);\n}\n</code></pre> <p>B. Test de suppression de plan\u00e8te (DELETE) <pre><code>&lt;?php\npublic function test_can_delete_a_planet(): void\n{\n    // 1. Pr\u00e9paration : cr\u00e9ation de la plan\u00e8te \u00e0 supprimer\n    $planet = Planet::factory()-&gt;create();\n\n    // 2. Action : envoi d'une requ\u00eate DELETE\n    $response = $this-&gt;deleteJson(\"/api/planets/{$planet-&gt;id}\");\n\n    // 3. V\u00e9rification\n    $response-&gt;assertStatus(204); // Nous nous attendons \u00e0 \"204 No Content\" - suppression r\u00e9ussie\n\n    // Nous v\u00e9rifions que l'enregistrement a bien disparu de la base de donn\u00e9es\n    $this-&gt;assertDatabaseMissing('planets', [\n        'id' =&gt; $planet-&gt;id\n    ]);\n}\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/8/#5-test-des-mauvais-scenarios","title":"5. Test des \"mauvais\" sc\u00e9narios","text":"<p>Tester les cas r\u00e9ussis est une bonne chose. Mais il est encore plus important de tester les erreurs !</p> <p>A. Test d'erreur de validation <pre><code>&lt;?php\npublic function test_creation_fails_with_invalid_data(): void\n{\n    // 2. Action : envoi de donn\u00e9es sciemment incorrectes\n    $response = $this-&gt;postJson('/api/planets', ['name' =&gt; '']); // Nom vide\n\n    // 3. V\u00e9rification\n    $response-&gt;assertStatus(422); // Nous nous attendons \u00e0 \"422 Unprocessable Entity\"\n    $response-&gt;assertJsonValidationErrors('name'); // Nous nous attendons \u00e0 ce que l'erreur se trouve sp\u00e9cifiquement dans le champ 'name'\n}\n</code></pre></p> <p>B. Test de \"non trouv\u00e9\" (404) <pre><code>&lt;?php\npublic function test_returns_404_for_non_existent_planet(): void\n{\n    // 2. Action : demande d'une plan\u00e8te avec un ID inexistant\n    $response = $this-&gt;getJson('/api/planets/99999');\n\n    // 3. V\u00e9rification\n    $response-&gt;assertStatus(404); // Nous nous attendons \u00e0 \"404 Not Found\"\n}\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/8/#6-execution-des-tests","title":"6. Ex\u00e9cution des tests","text":"<p>Maintenant que les tests sont \u00e9crits, les ex\u00e9cuter est tr\u00e8s simple. Ex\u00e9cutez dans le terminal :</p> <pre><code>php artisan test\n</code></pre> <p>Laravel trouvera tous vos tests et les ex\u00e9cutera un par un. Si tout se passe bien, vous verrez une sortie verte. Si un test \u00e9choue, vous verrez une sortie rouge avec une description d\u00e9taill\u00e9e de l'erreur, ce qui vous permettra de la corriger rapidement.</p> <p>Pour ex\u00e9cuter un seul fichier sp\u00e9cifique : <pre><code>php artisan test tests/Feature/PlanetApiTest.php\n</code></pre></p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/8/#8-couverture-de-code-code-coverage","title":"8. Couverture de code (Code Coverage)","text":"<p>\u00c9tape 1 : Installation de Xdebug</p> <p>Pour collecter les informations de couverture de code, l'extension PHP Xdebug est requise.</p> <p>Envoyez votre <code>php -i</code> au wizard et suivez les instructions.</p> <p>\u00c9tape 2 : Configuration de <code>phpunit.xml</code> <pre><code>&lt;phpunit ... &gt;\n    &lt;coverage processUncoveredFiles=\"true\"&gt;\n        &lt;include&gt;\n            &lt;directory suffix=\".php\"&gt;./app&lt;/directory&gt;\n        &lt;/include&gt;\n    &lt;/coverage&gt;\n&lt;/phpunit&gt;\n</code></pre></p> <p>\u00c9tape 3 : Ex\u00e9cution avec rapport <pre><code>php artisan test --coverage-html=coverage\n</code></pre> Rapport : Ouvrez <code>coverage/index.html</code> dans le navigateur</p>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/8/#9-integration-avec-postman","title":"9. Int\u00e9gration avec Postman","text":"<p>Automatisation via Newman :</p> <ol> <li>Exportez la collection Postman vers <code>tests/Postman/SpaceApi.postman_collection.json</code></li> <li>Installez Newman : <pre><code>npm install -g newman\n</code></pre></li> <li>Ajoutez le script dans <code>composer.json</code> : <pre><code>\"scripts\": {\n    \"test:postman\": \"newman run tests/Postman/SpaceApi.postman_collection.json\"\n}\n</code></pre></li> <li>Ex\u00e9cution : <pre><code>composer test:postman\n</code></pre></li> </ol>"},{"location":"fr/Chapitre%202%20-%20Cr%C3%A9ation%20d%27une%20API%20sur%20Laravel/8/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Commande pour cr\u00e9er une classe de test :</p>  a) php artisan make:test  b) php artisan generate:test  c) php artisan test:create <p>2. Le trait RefreshDatabase est utilis\u00e9 pour :</p>  a) Nettoyer la BD apr\u00e8s les tests  b) Remplir la BD avec des donn\u00e9es de test  c) Cr\u00e9er la structure de la BD <p>3. M\u00e9thode pour v\u00e9rifier la structure JSON :</p>  a) assertJsonFormat()  b) assertJsonStructure()  c) assertJsonSchema() <p>4. Les fabriques dans Laravel sont n\u00e9cessaires pour :</p>  a) G\u00e9n\u00e9rer des donn\u00e9es de test  b) Cr\u00e9er des migrations  c) G\u00e9rer les erreurs <p>5. Outil pour ex\u00e9cuter des collections Postman depuis la CLI :</p>  a) Newman  b) Postman CLI  c) Artisan V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre : Vous avez effectu\u00e9 un cycle complet de tests de pr\u00e9-lancement ! Votre API peut d\u00e9sormais :</p> <ul> <li>\u2705 Configurer l'environnement de test sans effort suppl\u00e9mentaire</li> <li>\ud83d\udee1\ufe0f \u00c9crire des tests bas\u00e9s sur le principe \"Pr\u00e9paration-Action-V\u00e9rification\".</li> <li>\ud83d\udcca Tester les sc\u00e9narios r\u00e9ussis (CRUD) ainsi que les erreurs (validation, 404).</li> <li>\ud83d\udd01 Ex\u00e9cuter les tests avec une seule commande et \u00eatre confiant dans votre code.</li> </ul> <p>Le vaisseau spatial est pr\u00eat pour le lancement ! Vous avez termin\u00e9 la section sur la cr\u00e9ation d'une API avec Laravel.</p> <p>\ud83d\udccc V\u00e9rification finale :</p> <ol> <li>Ex\u00e9cutez <code>php artisan test</code></li> <li>Assurez-vous que tous les tests passent (lumi\u00e8re verte !)</li> <li>V\u00e9rifiez le rapport de couverture</li> </ol> <p>\u26a0\ufe0f Si les tests \u00e9chouent :</p> <ul> <li>V\u00e9rifiez le fonctionnement de l'API via Postman</li> <li>Assurez-vous que la base de donn\u00e9es de test est configur\u00e9e</li> <li>Utilisez <code>dd($response-&gt;content())</code> pour le d\u00e9bogage</li> </ul> <p>F\u00e9licitations pour l'ach\u00e8vement du Chapitre 2 ! Vous n'avez pas seulement cr\u00e9\u00e9 une API, vous avez construit un \"vaisseau spatial\" fiable et test\u00e9, pr\u00eat pour de futures missions.</p> <p>\ud83c\udf0c Prochaines \u00e9tapes :</p> <ol> <li>Configuration de l'authentification (Sanctum)</li> <li>Documentation de l'API avec Swagger</li> <li>D\u00e9ploiement sur un serveur (Forge, VPS)</li> <li>D\u00e9veloppement du frontend avec Vue/React</li> </ol> <p>Bon lancement pour votre mission spatiale ! Dans le prochain chapitre, nous aborderons la cr\u00e9ation d'une API \u00e0 partir de z\u00e9ro \ud83d\ude80</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/1/","title":"Chapitre 3.1 : Installation de FastAPI et configuration de l'environnement","text":"<p>Temps d'\u00e9tude : 45 minutes</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/1/#1-quest-ce-que-fastapi-un-hyperdrive-pour-api","title":"1. Qu'est-ce que FastAPI ? Un hyperdrive pour API","text":"<p>Si Flask est une sonde de reconnaissance maniable, et Django un \u00e9norme porte-vaisseaux, alors FastAPI est un chasseur supersonique.</p> <p>FastAPI est un framework web moderne et performant pour la cr\u00e9ation d'API en Python 3.7+. Ses principaux avantages sont :</p> <ul> <li>Vitesse : L'un des frameworks Python les plus rapides, comparable \u00e0 NodeJS et Go.</li> <li>Simplicit\u00e9 : Syntaxe minimaliste et intuitive.</li> <li>Auto-documentation : G\u00e9n\u00e8re automatiquement une documentation interactive pour votre API.</li> <li>Typage : Utilise les annotations de type Python standard pour la validation, l'autocompl\u00e9tion et la documentation.</li> </ul> <p>\ud83d\udca1 Analogie spatiale :</p> <p>FastAPI est comme un \"hyperdrive\" pour votre vaisseau-API. Il est bas\u00e9 sur deux technologies :</p> <ul> <li>Starlette (le ch\u00e2ssis du chasseur) \u2014 assure l'asynchronisme et les performances les plus \u00e9lev\u00e9es.</li> <li>Pydantic (l'ordinateur de bord) \u2014 est responsable de la validation des donn\u00e9es et des param\u00e8tres.</li> </ul>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/1/#2-preparation-du-pas-de-tir-environnement-virtuel","title":"2. Pr\u00e9paration du pas de tir : Environnement virtuel","text":"<p>Avant de construire notre chasseur, nous devons cr\u00e9er un laboratoire d'assemblage st\u00e9rile. En Python, les environnements virtuels sont utilis\u00e9s \u00e0 cette fin.</p> <p>Pourquoi est-ce n\u00e9cessaire ? Pour que les d\u00e9pendances de notre projet (moteurs, syst\u00e8mes de navigation) n'entrent pas en conflit avec d'autres projets sur votre ordinateur.</p> <p>\u00c9tape 1 : Cr\u00e9er un environnement virtuel Ouvrez un terminal dans le dossier de votre projet (par exemple, <code>C:\\Projects\\FastAPI_Fleet</code>) et ex\u00e9cutez :</p> <p><pre><code>python -m venv venv\n</code></pre> Cette commande cr\u00e9era un dossier <code>venv</code> avec une version isol\u00e9e de Python.</p> <p>\u00c9tape 2 : Activer le \"champ de force\" du laboratoire</p> <ul> <li>Windows (PowerShell) :</li> </ul> <p><pre><code>.\\venv\\Scripts\\Activate.ps1\n</code></pre> (Si une erreur se produit, il peut \u00eatre n\u00e9cessaire d'autoriser l'ex\u00e9cution des scripts : <code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process</code>)</p> <ul> <li>Windows (CMD) :</li> </ul> <pre><code>.\\venv\\Scripts\\activate.bat\n</code></pre> <ul> <li>macOS / Linux :</li> </ul> <p><pre><code>source venv/bin/activate\n</code></pre> Apr\u00e8s l'activation, <code>(venv)</code> appara\u00eetra au d\u00e9but de la ligne de commande du terminal. Cela signifie que vous \u00eates \u00e0 l'int\u00e9rieur de votre laboratoire !</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/1/#3-installation-du-moteur-fastapi-et-uvicorn","title":"3. Installation du moteur : FastAPI et Uvicorn","text":"<p>Nous allons maintenant installer deux composants cl\u00e9s :</p> <ul> <li>fastapi : Le framework lui-m\u00eame.</li> <li>uvicorn : Un serveur ASGI ultra-rapide qui \"lancera\" notre moteur.</li> </ul> <p>Ex\u00e9cutez dans l'environnement activ\u00e9 : <pre><code>pip install \"fastapi[all]\"\n</code></pre></p> <p>\ud83d\udca1 Pourquoi <code>[all]</code> ? Cela installera <code>fastapi</code>, <code>uvicorn</code> et d'autres paquets utiles (par exemple, pour le support des WebSockets et Jinja2) qui seront utiles pour les futures missions.</p> <p>V\u00e9rification de l'installation : <pre><code>pip freeze\n</code></pre> Vous devriez voir <code>fastapi</code>, <code>pydantic</code>, <code>starlette</code>, <code>uvicorn</code> et d'autres paquets dans la liste.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/1/#4-premier-contact-le-fichier-mainpy","title":"4. Premier contact : Le fichier <code>main.py</code>","text":"<p>Cr\u00e9ez un fichier <code>main.py</code> \u00e0 la racine du projet \u2014 ce sera le tableau de commande central de notre API.</p> <p>Ajoutez le code suivant \u00e0 <code>main.py</code> : <pre><code>from fastapi import FastAPI\n\n# Cr\u00e9ons une instance de notre \"vaisseau spatial\" API\napp = FastAPI()\n\n# D\u00e9finissons le premier \"n\u0153ud d'amarrage\" (endpoint)\n# C'est l'URL racine : /\n@app.get(\"/\")\ndef read_root():\n    \"\"\"\n    C'est le message du Centre de Contr\u00f4le de Mission, vu par tous ceux\n    qui se connectent \u00e0 la passerelle principale.\n    \"\"\"\n    return {\"message\": \"Bienvenue au Centre de Commande de la Flotte Spatiale !\"}\n</code></pre> - <code>@app.get(\"/\") :</code> C'est un d\u00e9corateur qui indique \u00e0 FastAPI que la fonction <code>read_root</code> doit g\u00e9rer les requ\u00eates <code>GET</code> sur l'URL racine (<code>/</code>).</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/1/#5-allumage-demarrage-du-serveur","title":"5. Allumage ! D\u00e9marrage du serveur","text":"<p>Il est temps de d\u00e9marrer notre hyperdrive ! Dans le terminal (avec <code>venv</code> actif), ex\u00e9cutez : <pre><code>uvicorn main:app --reload\n</code></pre> D\u00e9tails de la commande :</p> <ul> <li><code>uvicorn :</code> Lance le serveur Uvicorn.</li> <li><code>main :</code> Le fichier <code>main.py</code> (sans <code>.py</code>).</li> <li><code>app :</code> L'objet <code>app = FastAPI()</code>, cr\u00e9\u00e9 dans <code>main.py</code>.</li> <li><code>--reload :</code> \"Pilote automatique\". Le serveur red\u00e9marrera automatiquement \u00e0 chaque modification du code.</li> </ul> <p>Sortie attendue dans le terminal : <pre><code>INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [12345]\nINFO:     Started server process [12346]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n</code></pre></p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/1/#6-verification-de-la-communication-avec-le-ccm","title":"6. V\u00e9rification de la communication avec le CCM","text":"<p>Votre API est maintenant en ligne et \u00e9coute sur le port <code>8000</code> !</p> <p>\u00c9tape 1 : V\u00e9rification dans le navigateur</p> <p>Ouvrez l'adresse <code>http://127.0.0.1:8000</code> dans votre navigateur. Vous devriez voir : <pre><code>{\n  \"message\": \"Bienvenue au Centre de Commande de la Flotte Spatiale !\"\n}\n</code></pre></p> <p>\u00c9tape 2 : Un regard vers l'avenir (auto-documentation)</p> <p>FastAPI vous a d\u00e9j\u00e0 fait deux cadeaux. Ouvrez ces URL :</p> <ul> <li><code>http://127.0.0.1:8000/docs :</code> Documentation interactive Swagger UI.</li> <li><code>http://127.0.0.1:8000/redoc :</code> Documentation alternative ReDoc.</li> </ul> <p>Vous verrez votre premier endpoint, que vous pouvez tester directement depuis le navigateur !</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/1/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. FastAPI est connu pour sa/son...</p>  a) Fonctionnement lent mais fiable  b) Haute performance et vitesse  c) Int\u00e9gration uniquement avec les bases de donn\u00e9es Microsoft <p>2. Pourquoi un environnement virtuel (`venv`) est-il n\u00e9cessaire ?</p>  a) Pour acc\u00e9l\u00e9rer le fonctionnement de Python  b) Pour isoler les d\u00e9pendances du projet  c) Pour l'\u00e9criture automatique de tests <p>3. Quel serveur est utilis\u00e9 pour ex\u00e9cuter FastAPI dans cette le\u00e7on ?</p>  a) Apache  b) Gunicorn  c) Uvicorn <p>4. La commande `uvicorn main:app --reload` signifie :</p>  a) Ex\u00e9cuter le fichier `app.py` avec l'objet `main`  b) Ex\u00e9cuter l'objet `app` dans le fichier `main.py` et red\u00e9marrer en cas de modifications  c) Red\u00e9marrer l'ordinateur et lancer l'application <p>5. Que fait le d\u00e9corateur `@app.get(\"/\")` dans FastAPI ?</p>  a) R\u00e9cup\u00e8re les donn\u00e9es du fichier `app.py`  b) Envoie une requ\u00eate GET \u00e0 un serveur externe  c) Associe la fonction \u00e0 une requ\u00eate GET sur l'URL racine V\u00e9rifier <p>\ud83d\ude80 Conclusion du chapitre :</p> <p>Vous avez r\u00e9ussi \u00e0 assembler et \u00e0 lancer le \"hyperdrive\" de votre nouvelle API ! Vous avez maintenant :</p> <ul> <li>\ud83d\udee0\ufe0f Un environnement de d\u00e9veloppement isol\u00e9 (<code>venv</code>)</li> <li>\ud83d\ude80 FastAPI et le serveur Uvicorn install\u00e9s</li> <li>\ud83d\udef0\ufe0f Une API fonctionnelle avec un seul endpoint</li> <li>\ud83d\udcca Une documentation g\u00e9n\u00e9r\u00e9e automatiquement</li> </ul> <p>Tous les syst\u00e8mes sont en ordre ! Dans le prochain chapitre, nous allons cr\u00e9er notre premier endpoint complet qui renverra une liste de vaisseaux spatiaux.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>L'environnement <code>(venv)</code> est actif dans le terminal</li> <li>Le serveur <code>uvicorn</code> est lanc\u00e9 sans erreurs</li> <li>L'adresse <code>http://127.0.0.1:8000/docs</code> s'ouvre dans le navigateur</li> </ul> <p>\u26a0\ufe0f Si des erreurs :</p> <ul> <li><code>command not found</code> : Assurez-vous d'avoir activ\u00e9 l'environnement virtuel.</li> <li><code>Port ... is already in use</code> : Un autre programme utilise le port 8000. Arr\u00eatez-le ou lancez uvicorn sur un autre port : <code>uvicorn main:app --reload --port 8001</code>.</li> <li>Erreurs lors de l'activation de <code>venv</code> dans PowerShell : V\u00e9rifiez la politique d'ex\u00e9cution des scripts.</li> </ul>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/2/","title":"Chapitre 3.2 : Cr\u00e9ation du premier endpoint d'API","text":"<p>Temps d'\u00e9tude : 30 minutes</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/2/#1-endpoint-le-port-damarrage-des-donnees","title":"1. Endpoint : Le port d'amarrage des donn\u00e9es","text":"<p>Imaginez que notre API est une station spatiale. Un endpoint (point d'extr\u00e9mit\u00e9) est un port d'amarrage sp\u00e9cifique, con\u00e7u pour un certain type de vaisseaux.</p> <ul> <li>Port <code>N\u00b01</code> \u2014 pour les cargos (donn\u00e9es sur les plan\u00e8tes).</li> <li>Port <code>N\u00b02</code> \u2014 pour les sondes d'exploration (donn\u00e9es sur les missions).</li> <li>Port <code>N\u00b03</code> \u2014 pour les navettes de passagers (donn\u00e9es sur les astronautes).</li> </ul> <p>Chaque endpoint est une URL unique qui est responsable d'une op\u00e9ration sp\u00e9cifique avec une ressource particuli\u00e8re.</p> <p>\ud83d\udca1 Analogie spatiale : <code>GET /spaceships</code> \u2014 c'est la commande \"Centre de Contr\u00f4le \u2192 Station : Rapportez la liste de tous les vaisseaux amarr\u00e9s\". Cet endpoint renvoie une collection de ressources.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/2/#2-creation-de-la-flotte-spatiale","title":"2. Cr\u00e9ation de la \"flotte spatiale\"","text":"<p>Pour l'instant, nous n'avons pas de base de donn\u00e9es, nous allons donc cr\u00e9er une \"simulation\" \u2014 une simple liste de vaisseaux spatiaux sous forme de dictionnaire Python.</p> <p>Ouvrez <code>main.py</code> et ajoutez ce code avant la d\u00e9finition de <code>app</code> : <pre><code># main.py\n\n# \u00c9tape 1 : Cr\u00e9ation d'une simulation de base de donn\u00e9es\ndb_spaceships = {\n    1: {\n        \"name\": \"Voyager-1\",\n        \"type\": \"\u0417\u043e\u043d\u0434\",\n        \"launch_year\": 1977,\n        \"status\": \"\u0410\u043a\u0442\u0438\u0432\u0435\u043d\"\n    },\n    2: {\n        \"name\": \"Hubble Space Telescope\",\n        \"type\": \"\u0422\u0435\u043b\u0435\u0441\u043a\u043e\u043f\",\n        \"launch_year\": 1990,\n        \"status\": \"\u0410\u043a\u0442\u0438\u0432\u0435\u043d\"\n    },\n    3: {\n        \"name\": \"ISS\",\n        \"type\": \"\u0421\u0442\u0430\u043d\u0446\u0438\u044f\",\n        \"launch_year\": 1998,\n        \"status\": \"\u041d\u0430 \u043e\u0440\u0431\u0438\u0442\u0435\"\n    }\n}\n\n# ... ici le code app = FastAPI()\n</code></pre> C'est notre \"registre des vaisseaux spatiaux\" avec lequel nous allons travailler.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/2/#3-premier-endpoint-liste-des-vaisseaux","title":"3. Premier endpoint : Liste des vaisseaux","text":"<p>Nous allons maintenant cr\u00e9er un endpoint qui renverra l'ensemble de notre flotte.</p> <p>Ajoutez ce code dans <code>main.py</code> apr\u00e8s <code>@app.get(\"/\")</code> : <pre><code># main.py\n\n# ... code avec db_spaceships, FastAPI, app et read_root() ...\n\n@app.get(\"/spaceships\")\ndef get_spaceships():\n    \"\"\"\n    Renvoie la liste de tous les vaisseaux spatiaux enregistr\u00e9s.\n    \"\"\"\n    return db_spaceships\n</code></pre></p> <ul> <li><code>@app.get(\"/spaceships\")</code> : Nous avons cr\u00e9\u00e9 une nouvelle route. D\u00e9sormais, les requ\u00eates <code>GET</code> vers l'URL <code>/spaceships</code> seront g\u00e9r\u00e9es par la fonction <code>get_spaceships</code>.</li> <li><code>return db_spaceships</code> : FastAPI convertit automatiquement le dictionnaire Python en une r\u00e9ponse JSON valide.</li> </ul>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/2/#4-verification-du-fonctionnement-du-nouveau-port-damarrage","title":"4. V\u00e9rification du fonctionnement du nouveau port d'amarrage","text":"<p>Si votre serveur <code>uvicorn</code> est toujours en cours d'ex\u00e9cution avec le drapeau <code>--reload</code>, il s'est d\u00e9j\u00e0 recharg\u00e9 et est pr\u00eat \u00e0 fonctionner. Sinon, relancez-le : <pre><code>uvicorn main:app --reload\n</code></pre></p> <p>\u00c9tape 1 : V\u00e9rification dans le navigateur</p> <p>Ouvrez l'adresse <code>http://127.0.0.1:8000/spaceships</code> dans votre navigateur. Vous devriez voir la liste compl\u00e8te de vos vaisseaux au format JSON : <pre><code>{\n  \"1\": {\n    \"name\": \"Voyager-1\",\n    \"type\": \"\u0417\u043e\u043d\u0434\",\n    \"launch_year\": 1977,\n    \"status\": \"\u0410\u043a\u0442\u0438\u0432\u0435\u043d\"\n  },\n  \"2\": {\n    \"name\": \"Hubble Space Telescope\",\n    \"type\": \"\u0422\u0435\u043b\u0435\u0441\u043a\u043e\u043f\",\n    \"launch_year\": 1990,\n    \"status\": \"\u0410\u043a\u0442\u0438\u0432\u0435\u043d\"\n  },\n  \"3\": {\n    \"name\": \"ISS\",\n    \"type\": \"\u0421\u0442\u0430\u043d\u0446\u0438\u044f\",\n    \"launch_year\": 1998,\n    \"status\": \"\u041d\u0430 \u043e\u0440\u0431\u0438\u0442\u0435\"\n  }\n}\n</code></pre></p> <p>\u00c9tape 2 : V\u00e9rification dans la documentation automatique</p> <p>Rendez-vous sur <code>http://127.0.0.1:8000/docs</code>. Vous verrez qu'une nouvelle section est apparue dans la documentation pour l'endpoint <code>GET /spaceships</code>. Vous pouvez cliquer sur \"Try it out\" et \"Execute\" pour le tester directement de l\u00e0 !</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/2/#5-endpoint-avec-parametre-donnees-sur-un-vaisseau-specifique","title":"5. Endpoint avec param\u00e8tre : Donn\u00e9es sur un vaisseau sp\u00e9cifique","text":"<p>Et si nous n'avons besoin des donn\u00e9es que sur le \"Voyager-1\" ? Pour cela, nous allons cr\u00e9er un endpoint avec un param\u00e8tre de chemin (path parameter).</p> <p>Ajoutez ce code dans <code>main.py</code> : <pre><code># main.py\n\n# ... le reste du code ...\n\n@app.get(\"/spaceships/{ship_id}\")\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    Renvoie les donn\u00e9es d'un vaisseau spatial sp\u00e9cifique par son ID.\n    \"\"\"\n    return db_spaceships.get(ship_id)\n</code></pre></p> <ul> <li><code>\"/spaceships/{ship_id}\"</code> : Les accolades <code>{}</code> indiquent \u00e0 FastAPI que <code>ship_id</code> est une variable qui sera transmise depuis l'URL.</li> <li><code>ship_id: int</code> : C'est une indication de type (type hint). FastAPI v\u00e9rifiera automatiquement que l'ID transmis est un nombre entier. Si quelqu'un demande <code>/spaceships/voyager</code>, FastAPI renverra une erreur de validation <code>422 Unprocessable Entity</code>. C'est de la magie !</li> </ul> <p>V\u00e9rification :</p> <p>Ouvrez <code>http://127.0.0.1:8000/spaceships/2</code>. Vous devriez obtenir uniquement les donn\u00e9es du t\u00e9lescope \"Hubble\". Et si vous ouvrez <code>http://127.0.0.1:8000/spaceships/99</code>, vous obtiendrez <code>null</code>, car ce vaisseau n'existe pas.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/2/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Un endpoint dans une API est...</p>  a) Le point final de l'Univers  b) Une URL unique pour une op\u00e9ration sp\u00e9cifique avec une ressource  c) Le nom d'une base de donn\u00e9es <p>2. Que fait le d\u00e9corateur `@app.get(\"/users\")` ?</p>  a) Cr\u00e9e un nouvel utilisateur  b) Associe une fonction \u00e0 une requ\u00eate GET sur `/users`  c) Obtient la liste de tous les d\u00e9corateurs <p>3. Que signifie l'\u00e9criture `\"/items/{item_id}\"` dans le chemin ?</p>  a) Qu'il faut chercher un dossier nomm\u00e9 `{item_id}`  b) Que `item_id` est un param\u00e8tre qui sera extrait de l'URL  c) C'est un commentaire qui sera ignor\u00e9 <p>4. Pourquoi l'indication de type `ship_id: int` est-elle n\u00e9cessaire dans la fonction ?</p>  a) Pour que Python fonctionne plus vite  b) Pour que FastAPI valide automatiquement que l'ID est un nombre  c) Pour que la variable soit visible en dehors de la fonction <p>5. Si vous demandez `/spaceships/abc` et que FastAPI attend un `int`, que se passera-t-il ?</p>  a) Le serveur \"plantera\" avec une erreur 500  b) FastAPI renverra une erreur 422  c) FastAPI tentera de convertir \"abc\" en nombre V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez cr\u00e9\u00e9 avec succ\u00e8s deux \"ports d'amarrage\" sur votre station spatiale API :</p> <ul> <li>\ud83d\udef0\ufe0f Un pour obtenir la liste de tous les vaisseaux (<code>/spaceships</code>)</li> <li>\ud83d\udd2d Le second pour obtenir les donn\u00e9es d'un appareil sp\u00e9cifique (<code>/spaceships/{ship_id}</code>)</li> </ul> <p>Vous avez \u00e9galement d\u00e9couvert la puissance de la validation automatique des types de FastAPI, qui prot\u00e8ge votre API contre les requ\u00eates incorrectes.</p> <p>Le syst\u00e8me de navigation est configur\u00e9 ! Dans le prochain chapitre, nous allons cr\u00e9er les \"plans\" de nos vaisseaux spatiaux \u00e0 l'aide de Pydantic, afin de rendre notre API encore plus intelligente et fiable.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>Le serveur <code>uvicorn</code> est lanc\u00e9 et fonctionne.</li> <li>L'URL <code>http://127.0.0.1:8000/spaceships</code> renvoie un JSON avec la liste des vaisseaux.</li> <li>L'URL <code>http://127.0.0.1:8000/spaceships/1</code> renvoie les donn\u00e9es du \"Voyager-1\".</li> <li>L'URL <code>http://127.0.0.1:8000/docs</code> affiche deux nouveaux endpoints.</li> </ul> <p>\u26a0\ufe0f En cas d'erreurs :</p> <ul> <li>404 Not Found : V\u00e9rifiez si l'URL est correctement \u00e9crite dans le navigateur et dans le d\u00e9corateur <code>@app.get(...)</code>.</li> <li>Erreur de code : V\u00e9rifiez attentivement la syntaxe, en particulier l'indentation en Python et les virgules dans le dictionnaire.</li> </ul>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/3/","title":"Chapitre 3.3 : Mod\u00e8les de donn\u00e9es avec Pydantic","text":"<p>Temps d'\u00e9tude : 50 minutes</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/3/#1-pydantic-le-plan-numerique-dun-vaisseau-spatial","title":"1. Pydantic : Le \"plan num\u00e9rique\" d'un vaisseau spatial","text":"<p>Imaginez que vous construisez un vaisseau spatial. Vous ne pouvez pas simplement souder des morceaux de m\u00e9tal au hasard. Vous avez besoin d'un plan d\u00e9taill\u00e9 qui d\u00e9finit :</p> <ul> <li>Nom du vaisseau (type : <code>cha\u00eene</code>, longueur max : 50 caract\u00e8res)</li> <li>Ann\u00e9e de lancement (type : <code>entier</code>)</li> <li>Pr\u00e9sence d'un hyperpropulseur (type : <code>oui/non</code>)</li> </ul> <p>Pydantic est une biblioth\u00e8que qui permet de cr\u00e9er de tels \"plans num\u00e9riques\" pour vos donn\u00e9es en Python. Dans FastAPI, elle remplit trois fonctions cl\u00e9s :</p> <ol> <li>D\u00e9claration de structure : D\u00e9crit clairement de quels champs vos donn\u00e9es sont compos\u00e9es.</li> <li>Validation des donn\u00e9es : V\u00e9rifie automatiquement si les donn\u00e9es entrantes correspondent au plan.</li> <li>Documentation : FastAPI utilise ces plans pour g\u00e9n\u00e9rer une documentation d\u00e9taill\u00e9e et interactive.</li> </ol> <p>\ud83d\udca1 Analogie spatiale : Un mod\u00e8le Pydantic est le passeport technique d'un objet. Toute \"cargaison\" (donn\u00e9es) arrivant \u00e0 la station doit correspondre aux sp\u00e9cifications du passeport. Sinon, l'ordinateur de bord (Pydantic) la rejettera.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/3/#2-creation-du-premier-plan-le-modele-spaceship","title":"2. Cr\u00e9ation du premier plan : Le mod\u00e8le <code>Spaceship</code>","text":"<p>Cr\u00e9ons un mod\u00e8le qui d\u00e9crira notre engin spatial.</p> <p>\u00c9tape 1 : Importation de <code>BaseModel</code> depuis Pydantic Pydantic est d\u00e9j\u00e0 install\u00e9 avec <code>fastapi[all]</code>. Nous avons seulement besoin d'importer la classe de base pour nos mod\u00e8les.</p> <p>Ajoutez ceci en haut de <code>main.py</code>, \u00e0 c\u00f4t\u00e9 des autres importations : <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n</code></pre></p> <p>\u00c9tape 2 : Description du mod\u00e8le <code>Spaceship</code> Cr\u00e9ez une classe qui h\u00e9rite de <code>BaseModel</code>. \u00c0 l'int\u00e9rieur de la classe, d\u00e9finissez les champs et leurs types en utilisant les annotations de type Python standard.</p> <p>Ajoutez ce code dans <code>main.py</code> (peut \u00eatre apr\u00e8s les importations) : <pre><code>class Spaceship(BaseModel):\n    \"\"\"\n    Passeport technique (mod\u00e8le) d'un vaisseau spatial.\n    \"\"\"\n    name: str\n    type: str\n    launch_year: int\n    status: str\n</code></pre> Et voil\u00e0 ! Vous venez de cr\u00e9er un \"plan\". Pydantic sait maintenant que tout objet de type <code>Spaceship</code> doit avoir quatre champs avec les types sp\u00e9cifi\u00e9s.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/3/#3-application-du-modele-amelioration-de-nos-points-dapi","title":"3. Application du mod\u00e8le : Am\u00e9lioration de nos points d'API","text":"<p>Utilisons maintenant notre nouveau mod\u00e8le pour rendre l'API \"plus intelligente\".</p> <p>A. Mod\u00e8le en tant que r\u00e9ponse (Response Model) Nous pouvons indiquer \u00e0 FastAPI que notre point d'API doit retourner des donn\u00e9es correspondant au mod\u00e8le <code>Spaceship</code>. Cela garantit que la r\u00e9ponse aura toujours la bonne structure.</p> <p>Modifiez le point d'API <code>/spaceships/{ship_id}</code> comme suit : <pre><code># main.py\n\n# ... code avec db_spaceships et le mod\u00e8le Spaceship ...\n\n# Utilisation de `response_model` pour sp\u00e9cifier le \"plan\" de la r\u00e9ponse\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    Retourne les donn\u00e9es du vaisseau, correspondant au mod\u00e8le Spaceship.\n    \"\"\"\n    ship = db_spaceships.get(ship_id)\n    return ship\n</code></pre> - <code>response_model=Spaceship</code> : Nous disons \u00e0 FastAPI : \"La r\u00e9ponse de cette fonction doit correspondre \u00e0 la structure <code>Spaceship</code>. Filtre tous les champs superflus et assure-toi que les types sont corrects.\"</p> <p>Qu'est-ce que cela apporte ?</p> <ul> <li>Filtrage des donn\u00e9es : Si <code>db_spaceships</code> contenait des champs superflus (par exemple, <code>\"secret_code\"</code>), ils ne seraient pas inclus dans le JSON final.</li> <li>Garantie de structure : Le client de l'API peut \u00eatre s\u00fbr de toujours recevoir une r\u00e9ponse dans le format attendu.</li> <li>Documentation : Dans <code>/docs</code>, un exemple pr\u00e9cis de r\u00e9ponse (Example Value) sera d\u00e9sormais affich\u00e9.</li> </ul> <p>B. Mod\u00e8les pour les collections Et qu'en est-il du point d'API <code>/spaceships</code> qui retourne une liste de vaisseaux ? Pour cela, il faut utiliser <code>list</code> du module <code>typing</code>.</p> <p>Modifiez les importations et le point d'API <code>/spaceships</code> : <pre><code># main.py en haut\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom typing import List  # &lt;-- Importation de List\n\n# ... code ...\n\n# Indique que la r\u00e9ponse est une liste (List) d'objets de type Spaceship\n@app.get(\"/spaceships\", response_model=List[Spaceship])\ndef get_spaceships():\n    \"\"\"\n    Retourne une liste de vaisseaux. Chaque \u00e9l\u00e9ment de la liste\n    est valid\u00e9 selon le mod\u00e8le Spaceship.\n    \"\"\"\n    # Pydantic ne peut pas fonctionner avec un dictionnaire dont les cl\u00e9s sont des ID.\n    # Convertissons notre dictionnaire en une simple liste.\n    return list(db_spaceships.values())\n</code></pre></p> <ul> <li><code>response_model=List[Spaceship]</code> : Nous indiquons que la r\u00e9ponse sera une liste, o\u00f9 chaque \u00e9l\u00e9ment est un objet correspondant au mod\u00e8le <code>Spaceship</code>.</li> <li><code>return list(db_spaceships.values())</code> : Changement important ! Pydantic s'attend \u00e0 un objet it\u00e9rable (une liste), et non \u00e0 un dictionnaire o\u00f9 les cl\u00e9s sont des ID. Nous convertissons les valeurs de notre \"simulateur de base de donn\u00e9es\" en une liste.</li> </ul>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/3/#4-verification-de-lapi-amelioree","title":"4. V\u00e9rification de l'API am\u00e9lior\u00e9e","text":"<p>Assurez-vous que le serveur <code>uvicorn</code> est lanc\u00e9 avec <code>--reload</code>.</p> <ol> <li>V\u00e9rifiez <code>http://127.0.0.1:8000/spaceships</code> : La r\u00e9ponse est maintenant un tableau JSON, et non un objet. C'est une structure plus correcte et standard pour les collections.     <pre><code>[\n  { \"name\": \"Voyager-1\", \"type\": \"Sonde\", ... },\n  { \"name\": \"Hubble Space Telescope\", ... }\n]\n</code></pre></li> <li>V\u00e9rifiez <code>http://127.0.0.1:8000/spaceships/1</code> : La r\u00e9ponse n'a pas chang\u00e9, mais elle est maintenant garantie de correspondre au mod\u00e8le.</li> <li>Consultez <code>/docs</code> : Dans la section \"Schemas\" en bas de page, votre mod\u00e8le <code>Spaceship</code> est apparu. Et dans les exemples de r\u00e9ponses pour les points d'API, un beau sch\u00e9ma de donn\u00e9es structur\u00e9 est maintenant affich\u00e9.</li> </ol>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/3/#5-validation-avancee-lordinateur-de-bord-en-action","title":"5. Validation avanc\u00e9e : L'\"ordinateur de bord\" en action","text":"<p>Pydantic peut faire bien plus que simplement v\u00e9rifier les types.</p> <p>Ajoutons la validation \u00e0 notre mod\u00e8le <code>Spaceship</code> : <pre><code>from pydantic import BaseModel, Field\n\nclass Spaceship(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50, description=\"Nom du vaisseau\")\n    type: str\n    launch_year: int = Field(..., gt=1950, description=\"L'ann\u00e9e de lancement doit \u00eatre apr\u00e8s 1950\")\n    status: str\n</code></pre></p> <ul> <li><code>Field(...)</code> : Utilis\u00e9 pour ajouter des r\u00e8gles de validation suppl\u00e9mentaires.</li> <li><code>...</code> (Ellipsis) : Indique que le champ est obligatoire.</li> <li><code>min_length</code>, <code>max_length</code> : Contraintes pour la cha\u00eene de caract\u00e8res.</li> <li><code>gt</code> : \"Greater Than\" (plus grand que).</li> </ul> <p>Bien que nous ne cr\u00e9ions pas encore de nouveaux vaisseaux (ce sera dans le prochain chapitre), ces r\u00e8gles seront d\u00e9j\u00e0 refl\u00e9t\u00e9es dans la documentation et s'appliqueront lorsque nous impl\u00e9menterons les requ\u00eates <code>POST</code>.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/3/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Pydantic dans FastAPI est utilis\u00e9 pour...</p>  a) L'envoi de messages \u00e9lectroniques  b) La d\u00e9claration, la validation et la documentation des mod\u00e8les de donn\u00e9es  c) La connexion directe aux bases de donn\u00e9es <p>2. Pour cr\u00e9er un mod\u00e8le de donn\u00e9es, il faut h\u00e9riter d'une classe de...</p>  a) `FastAPI`  b) `pydantic.Field`  c) `pydantic.BaseModel` <p>3. Le param\u00e8tre `response_model` dans le d\u00e9corateur `@app.get` est n\u00e9cessaire pour...</p>  a) D\u00e9finir le mod\u00e8le pour la requ\u00eate entrante  b) Indiquer \u00e0 quelle structure la r\u00e9ponse de l'API doit correspondre  c) Acc\u00e9l\u00e9rer la r\u00e9ponse du serveur <p>4. Comment indiquer qu'un point d'API retourne une *liste* d'objets de type `Item` ?</p>  a) `response_model=Item[]`  b) `response_model=List[Item]` (en important `List` de `typing`)  c) `response_model=(Item)` <p>5. `Field(..., gt=0)` dans un mod\u00e8le Pydantic signifie que le champ...</p>  a) Est facultatif et doit \u00eatre \u00e9gal \u00e0 0  b) Est obligatoire et doit \u00eatre sup\u00e9rieur \u00e0 0  c) Est optionnel et a le type `float` V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez con\u00e7u des \"plans num\u00e9riques\" pour les donn\u00e9es de votre API. Maintenant, elle ne fonctionne pas seulement, elle fonctionne de mani\u00e8re pr\u00e9visible et fiable.</p> <ul> <li>\ud83d\udcdd Le mod\u00e8le <code>Spaceship</code> a \u00e9t\u00e9 cr\u00e9\u00e9 \u00e0 l'aide de Pydantic.</li> <li>\ud83d\udee1\ufe0f L'API valide et filtre d\u00e9sormais les donn\u00e9es sortantes \u00e0 l'aide de <code>response_model</code>.</li> <li>\ud83d\udcca La documentation est devenue beaucoup plus informative, affichant des sch\u00e9mas de donn\u00e9es pr\u00e9cis.</li> </ul> <p>Les plans sont pr\u00eats et approuv\u00e9s ! Dans le prochain chapitre, nous passerons de la lecture des donn\u00e9es \u00e0 leur cr\u00e9ation \u2014 nous impl\u00e9menterons des op\u00e9rations CRUD compl\u00e8tes pour notre flotte.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>Assurez-vous que le sch\u00e9ma du mod\u00e8le <code>Spaceship</code> est apparu dans <code>/docs</code>.</li> <li>V\u00e9rifiez que le point d'API <code>/spaceships</code> retourne d\u00e9sormais un tableau JSON (<code>[...]</code>), et non un objet (<code>{...}</code>).</li> <li>Assurez-vous qu'il n'y a pas d'erreurs de syntaxe dans le code apr\u00e8s l'ajout des mod\u00e8les.</li> </ul> <p>\u26a0\ufe0f En cas d'erreurs : - <code>NameError: name 'BaseModel' is not defined</code>: V\u00e9rifiez que vous avez import\u00e9 <code>BaseModel</code> depuis <code>pydantic</code>. - <code>NameError: name 'List' is not defined</code>: V\u00e9rifiez que vous avez import\u00e9 <code>List</code> depuis <code>typing</code>. - La r\u00e9ponse \u00e0 <code>/spaceships</code> est vide (<code>[]</code>) : Assurez-vous d'avoir chang\u00e9 <code>return db_spaceships</code> en <code>return list(db_spaceships.values())</code>.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/4/","title":"Chapitre 3.4 : Op\u00e9rations CRUD pour les vaisseaux spatiaux","text":"<p>Temps d'\u00e9tude : 1 heure</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/4/#1-crud-cycle-complet-de-gestion-de-mission-spatiale","title":"1. CRUD : Cycle complet de gestion de mission spatiale","text":"<p>Jusqu'\u00e0 pr\u00e9sent, nous n'avons fait que lire des donn\u00e9es (<code>Read</code>). Mais un v\u00e9ritable Centre de Contr\u00f4le de Mission doit tout savoir faire :</p> <ul> <li>Create (Cr\u00e9er) : Lancer un nouveau satellite en orbite.</li> <li>Read (Lire) : Demander le statut d'un vaisseau existant.</li> <li>Update (Mettre \u00e0 jour) : Corriger l'orbite ou mettre \u00e0 jour le logiciel.</li> <li>Delete (Supprimer) : D\u00e9sorbiter un ancien satellite.</li> </ul> <p>Ces quatre op\u00e9rations \u2014 CRUD \u2014 constituent la base de la plupart des API. Dans ce chapitre, nous allons impl\u00e9menter le cycle complet pour g\u00e9rer notre flotte.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/4/#2-create-lancement-dun-nouveau-vaisseau-post","title":"2. Create : Lancement d'un nouveau vaisseau (POST)","text":"<p>Pour cr\u00e9er un nouveau vaisseau spatial, nous utiliserons la m\u00e9thode <code>POST</code>. Les donn\u00e9es du nouveau vaisseau seront transmises dans le corps de la requ\u00eate au format JSON.</p> <p>\u00c9tape 1 : Cr\u00e9er un nouveau mod\u00e8le Pydantic pour les donn\u00e9es entrantes Pourquoi un nouveau mod\u00e8le est-il n\u00e9cessaire ? Parce que lors de la cr\u00e9ation d'un vaisseau, nous ne connaissons pas son <code>id</code> \u2013 il doit \u00eatre attribu\u00e9 par le serveur.</p> <p>Ajoutez ce mod\u00e8le \u00e0 <code>main.py</code> : <pre><code># main.py\nfrom pydantic import BaseModel, Field\n\nclass SpaceshipCreate(BaseModel):\n    \"\"\"Mod\u00e8le pour cr\u00e9er un nouveau vaisseau (sans ID).\"\"\"\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n</code></pre> Ce mod\u00e8le est presque identique \u00e0 <code>Spaceship</code>, mais il sera utilis\u00e9 pour la validation des donn\u00e9es entrantes.</p> <p>\u00c9tape 2 : Impl\u00e9menter le point d'acc\u00e8s <code>POST /spaceships</code> <pre><code># main.py\nimport random # Ajoutez cet import en haut du fichier\n\n# ... \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434 ...\n\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201)\ndef create_spaceship(ship: SpaceshipCreate):\n    \"\"\"\n    Ajoute un nouveau vaisseau spatial au registre.\n    \"\"\"\n    # G\u00e9n\u00e9rer un nouvel ID unique pour le vaisseau\n    new_id = max(db_spaceships.keys() or [0]) + 1\n\n    # Cr\u00e9er un objet vaisseau correspondant au mod\u00e8le Spaceship complet\n    new_ship = Spaceship(id=new_id, **ship.dict())\n\n    # Sauvegarder dans notre \"base de donn\u00e9es\"\n    db_spaceships[new_id] = new_ship.dict()\n\n    return new_ship\n</code></pre> Explication :</p> <ul> <li><code>@app.post(...)</code> : Utilise le d\u00e9corateur pour les requ\u00eates <code>POST</code>.</li> <li><code>status_code=201</code> : Indique qu'un statut <code>201 Created</code> doit \u00eatre renvoy\u00e9 en cas de cr\u00e9ation r\u00e9ussie.</li> <li><code>ship: SpaceshipCreate</code> : Voici la magie ! FastAPI prendra automatiquement le corps de la requ\u00eate (JSON), le validera selon le mod\u00e8le <code>SpaceshipCreate</code> et le passera \u00e0 la fonction comme un objet <code>ship</code>.</li> <li><code>new_id = ...</code> : Logique simple pour g\u00e9n\u00e9rer un nouvel ID.</li> <li><code>**ship.dict()</code> : Nous \"d\u00e9ballons\" les donn\u00e9es du mod\u00e8le <code>ship</code> re\u00e7u dans notre mod\u00e8le complet.</li> <li><code>response_model=Spaceship</code> : La r\u00e9ponse correspondra au mod\u00e8le complet, incluant l'<code>id</code>.</li> </ul>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/4/#3-update-correction-de-cap-put","title":"3. Update : Correction de cap (PUT)","text":"<p>La m\u00e9thode <code>PUT</code> est utilis\u00e9e pour la mise \u00e0 jour compl\u00e8te d'une ressource existante.</p> <p>Impl\u00e9menter le point d'acc\u00e8s <code>PUT /spaceships/{ship_id}</code> : <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # Mettez \u00e0 jour l'import\n\n# ... \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434 ...\n\n@app.put(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef update_spaceship(ship_id: int, ship_update: SpaceshipCreate):\n    \"\"\"\n    Met \u00e0 jour compl\u00e8tement les donn\u00e9es d'un vaisseau spatial.\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"Vaisseau spatial non trouv\u00e9\")\n\n    updated_ship = Spaceship(id=ship_id, **ship_update.dict())\n    db_spaceships[ship_id] = updated_ship.dict()\n\n    return updated_ship\n</code></pre></p> <ul> <li><code>ship_update: SpaceshipCreate</code> : Nous utilisons \u00e0 nouveau notre mod\u00e8le pour la validation des donn\u00e9es entrantes.</li> <li><code>HTTPException</code> : Si le vaisseau avec cet <code>id</code> n'est pas trouv\u00e9, nous \"levons\" une exception FastAPI standard, qui se transformera en une belle r\u00e9ponse JSON avec le code <code>404</code>.</li> </ul>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/4/#4-delete-desorbitation-delete","title":"4. Delete : D\u00e9sorbitation (DELETE)","text":"<p>La m\u00e9thode <code>DELETE</code> est utilis\u00e9e pour supprimer une ressource. Habituellement, ce point d'acc\u00e8s ne renvoie pas de corps de r\u00e9ponse.</p> <p>Impl\u00e9menter le point d'acc\u00e8s <code>DELETE /spaceships/{ship_id}</code> : <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException, Response, status # Mettez \u00e0 jour l'import\n\n# ... \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434 ...\n\n@app.delete(\"/spaceships/{ship_id}\", status_code=status.HTTP_204_NO_CONTENT)\ndef delete_spaceship(ship_id: int):\n    \"\"\"\n    Supprime un vaisseau spatial du registre.\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"Vaisseau spatial non trouv\u00e9\")\n\n    del db_spaceships[ship_id]\n\n    # Retourne une r\u00e9ponse vide avec le statut 204\n    return Response(status_code=status.HTTP_204_NO_CONTENT)\n</code></pre></p> <ul> <li><code>status_code=status.HTTP_204_NO_CONTENT</code> : Nous indiquons explicitement le statut <code>204 No Content</code>.</li> <li><code>del db_spaceships[ship_id]</code> : Supprime l'entr\u00e9e de notre dictionnaire.</li> <li><code>return Response(...)</code> : Retourne une r\u00e9ponse vide, car le client n'a pas besoin de donn\u00e9es sur l'objet supprim\u00e9.</li> </ul>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/4/#5-test-du-cycle-complet-dans-docs","title":"5. Test du cycle complet dans <code>/docs</code>","text":"<p>Votre <code>uvicorn</code> devrait s'\u00eatre recharg\u00e9.</p> <ol> <li>Ouvrez <code>http://127.0.0.1:8000/docs</code>. Vous disposez maintenant d'un ensemble complet d'op\u00e9rations CRUD !</li> <li>POST : D\u00e9veloppez le point d'acc\u00e8s <code>POST /spaceships</code>, cliquez sur \"Try it out\", remplissez le corps JSON (par exemple, cr\u00e9ez le \"James Webb Telescope\") et cliquez sur \"Execute\". Vous devriez recevoir une r\u00e9ponse <code>201</code> avec les donn\u00e9es du nouveau t\u00e9lescope.</li> <li>GET : Ex\u00e9cutez maintenant <code>GET /spaceships</code>. Votre nouveau t\u00e9lescope devrait appara\u00eetre dans la liste.</li> <li>PUT : Utilisez l'ID du nouveau t\u00e9lescope pour mettre \u00e0 jour ses donn\u00e9es via <code>PUT /spaceships/{ship_id}</code>. Par exemple, modifiez son statut.</li> <li>DELETE : Utilisez le m\u00eame ID pour supprimer le t\u00e9lescope via <code>DELETE /spaceships/{ship_id}</code>. Vous devriez recevoir une r\u00e9ponse vide avec le statut <code>204</code>.</li> <li>V\u00e9rification : Ex\u00e9cutez \u00e0 nouveau <code>GET /spaceships</code> pour vous assurer que le t\u00e9lescope a \u00e9t\u00e9 supprim\u00e9 de la liste.</li> </ol>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/4/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Quelle m\u00e9thode HTTP est utilis\u00e9e pour cr\u00e9er une nouvelle ressource ?</p>  a) GET  b) PUT  c) POST <p>2. Le code de statut de succ\u00e8s standard pour une op\u00e9ration `DELETE` :</p>  a) 200 OK  b) 204 No Content  c) 404 Not Found <p>3. Comment FastAPI re\u00e7oit-il les donn\u00e9es du corps d'une requ\u00eate POST ?</p>  a) Via la variable globale `$_POST`  b) Automatiquement, si un mod\u00e8le Pydantic est sp\u00e9cifi\u00e9 dans l'argument de la fonction  c) Il faut lire manuellement le flux `request.body` <p>4. `raise HTTPException(status_code=404)` est utilis\u00e9 pour :</p>  a) G\u00e9n\u00e9rer une erreur serveur fatale (500)  b) Retourner une r\u00e9ponse HTTP correcte avec une erreur au client  c) Enregistrer l'erreur dans un fichier <p>5. Pourquoi avons-nous cr\u00e9\u00e9 un mod\u00e8le `SpaceshipCreate` s\u00e9par\u00e9 pour la cr\u00e9ation de ressources (`POST`) ?</p>  a) Parce que l'objet cr\u00e9\u00e9 n'a pas encore d'`id`  b) Parce que FastAPI exige des noms de mod\u00e8les diff\u00e9rents pour chaque point d'acc\u00e8s  c) Pour acc\u00e9l\u00e9rer la validation V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez impl\u00e9ment\u00e9 un cycle CRUD complet et transform\u00e9 votre API d'un simple \"tableau d'information\" en un v\u00e9ritable Centre de Contr\u00f4le de Flotte !</p> <ul> <li>\u2705 Create : <code>POST /spaceships</code> pour lancer de nouveaux vaisseaux.</li> <li>\u2705 Read : <code>GET /spaceships</code> et <code>GET /spaceships/{id}</code> pour obtenir les donn\u00e9es.</li> <li>\u2705 Update : <code>PUT /spaceships/{id}</code> pour mettre \u00e0 jour les missions.</li> <li>\u2705 Delete : <code>DELETE /spaceships/{id}</code> pour d\u00e9sorbiter les vaisseaux.</li> </ul> <p>Votre flotte est sous contr\u00f4le total ! Dans le prochain chapitre, nous verrons comment FastAPI a automatiquement cr\u00e9\u00e9 pour nous un \"manuel d'utilisation\" d\u00e9taill\u00e9 \u2013 la documentation interactive Swagger.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>Les 5 points d'acc\u00e8s (<code>GET</code> (2), <code>POST</code>, <code>PUT</code>, <code>DELETE</code>) sont visibles et fonctionnent dans <code>/docs</code>.</li> <li>Vous pouvez cr\u00e9er, lire, mettre \u00e0 jour et supprimer une ressource avec succ\u00e8s.</li> <li>Lors d'une requ\u00eate avec un ID inexistant, une erreur <code>404</code> est renvoy\u00e9e.</li> </ul> <p>\u26a0\ufe0f En cas d'erreurs :</p> <ul> <li><code>NameError</code> : V\u00e9rifiez que vous avez import\u00e9 <code>HTTPException</code>, <code>Response</code>, <code>status</code>.</li> <li><code>KeyError</code> : Il est probable que vous essayiez d'acc\u00e9der \u00e0 un ID d\u00e9j\u00e0 supprim\u00e9.</li> <li>Fonctionnement incorrect de <code>PUT</code> ou <code>POST</code> : Assurez-vous d'utiliser le bon mod\u00e8le Pydantic dans l'argument de la fonction (<code>SpaceshipCreate</code>).</li> </ul>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/5/","title":"Chapitre 3.5 : Documentation Swagger automatique","text":"<p>Temps d'\u00e9tude : 30 minutes</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/5/#1-documentation-api-le-manuel-dutilisation-de-la-station-spatiale","title":"1. Documentation API : Le manuel d'utilisation de la station spatiale","text":"<p>Imaginez que vous \u00eates un nouvel astronaute arrivant \u00e0 l'ISS. Comment sauriez-vous \u00e0 quoi sert chaque interrupteur et comment contr\u00f4ler le bras robotique ? Il vous faudrait un manuel d\u00e9taill\u00e9 et \u00e0 jour.</p> <p>La documentation API est un manuel similaire pour les d\u00e9veloppeurs. Elle explique :</p> <ul> <li>Quels \"ports d'amarrage\" (endpoints) sont disponibles.</li> <li>Quelles \"commandes\" (m\u00e9thodes HTTP) peuvent \u00eatre envoy\u00e9es.</li> <li>Quelle \"cargaison\" (donn\u00e9es) doit \u00eatre transmise.</li> <li>Quelle \"t\u00e9l\u00e9m\u00e9trie\" (r\u00e9ponses) attendre.</li> </ul> <p>Le probl\u00e8me est que la r\u00e9daction manuelle de la documentation est longue, fastidieuse et qu'elle est presque toujours obsol\u00e8te.</p> <p>\ud83d\udca1 Analogie spatiale :</p> <p>La documentation manuelle, ce sont des plans papier qui se trouvent dans les archives et ne sont pas mis \u00e0 jour apr\u00e8s la modernisation de la station. La documentation automatique FastAPI est un \u00e9cran interactif au centre de contr\u00f4le des missions, qui se met \u00e0 jour en temps r\u00e9el apr\u00e8s chaque modification sur la station.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/5/#2-la-magie-de-fastapi-comment-ca-marche","title":"2. La magie de FastAPI : Comment \u00e7a marche ?","text":"<p>FastAPI fait tout le \"sale boulot\" pour vous, en se basant sur votre propre code. Il scanne :</p> <ol> <li>Routes : Tous les d\u00e9corateurs <code>@app.get</code>, <code>@app.post</code>, etc.</li> <li>Param\u00e8tres : Les param\u00e8tres de chemin (<code>ship_id: int</code>) et de requ\u00eate.</li> <li>Mod\u00e8les Pydantic : Vos \"plans\" (<code>Spaceship</code>, <code>SpaceshipCreate</code>).</li> <li>Cha\u00eenes de documentation (docstrings) : Les descriptions que vous \u00e9crivez entre guillemets triples.</li> </ol> <p>Sur la base de ces donn\u00e9es, FastAPI g\u00e9n\u00e8re un sch\u00e9ma selon la norme OpenAPI (anciennement connue sous le nom de Swagger), puis l'affiche via deux belles interfaces.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/5/#3-explorons-lecran-du-centre-de-controle-des-missions-swagger-ui","title":"3. Explorons l'\"\u00e9cran du centre de contr\u00f4le des missions\" : Swagger UI","text":"<p>Swagger UI est une interface interactive qui permet non seulement de lire la documentation, mais aussi de tester l'API directement depuis le navigateur.</p> <p>Ouvrez <code>http://127.0.0.1:8000/docs</code></p> <p>Vous verrez :</p> <ul> <li>Liste des endpoints : Regroup\u00e9s par balises (par d\u00e9faut, par nom de ressource) et color\u00e9s selon les m\u00e9thodes HTTP.</li> <li>Descriptions : Les textes de vos docstrings (<code>\"\"\"...\"\"\"</code>) s'affichent comme descriptions des endpoints.</li> <li>Param\u00e8tres : Indique les param\u00e8tres (comme <code>ship_id</code>) attendus par l'endpoint, leur type et leur caract\u00e8re obligatoire.</li> <li>Corps de la requ\u00eate (Request Body) : Pour <code>POST</code> et <code>PUT</code>, affiche le sch\u00e9ma JSON g\u00e9n\u00e9r\u00e9 \u00e0 partir de votre mod\u00e8le Pydantic (<code>SpaceshipCreate</code>).</li> <li>R\u00e9ponses (Responses) : Affiche les codes de statut possibles et les sch\u00e9mas de r\u00e9ponse, bas\u00e9s sur <code>response_model</code>.</li> <li>Bouton \"Try it out\" : Permet de renseigner les param\u00e8tres et d'envoyer une requ\u00eate r\u00e9elle \u00e0 votre serveur.</li> </ul>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/5/#4-ameliorer-la-documentation-balises-et-descriptions","title":"4. Am\u00e9liorer la documentation : Balises et descriptions","text":"<p>Rendons notre documentation encore plus professionnelle.</p> <p>\u00c9tape 1 : Ajouter des m\u00e9tadonn\u00e9es dans <code>FastAPI</code> Lors de la cr\u00e9ation de l'objet <code>app</code>, vous pouvez transmettre des informations g\u00e9n\u00e9rales sur votre API.</p> <p>Modifiez la ligne <code>app = FastAPI()</code> dans <code>main.py</code> : <pre><code># main.py\n\napp = FastAPI(\n    title=\"API de Gestion de Flotte\",\n    description=\"API pour la gestion d'une flotte de vaisseaux spatiaux.\",\n    version=\"1.0.0\",\n)\n</code></pre> Maintenant, le titre et la description appara\u00eetront en haut de votre documentation.</p> <p>\u00c9tape 2 : Regrouper les endpoints \u00e0 l'aide de balises Vous pouvez ajouter des balises \u00e0 chaque endpoint pour les regrouper par signification.</p> <p>Ajoutez le param\u00e8tre <code>tags</code> aux d\u00e9corateurs : <pre><code># GET /spaceships\n@app.get(\"/spaceships\", response_model=List[Spaceship], tags=[\"Vaisseaux spatiaux\"])\n# ...\n\n# GET /spaceships/{ship_id}\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"Vaisseaux spatiaux\"])\n# ...\n\n# POST /spaceships\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201, tags=[\"Vaisseaux spatiaux\"])\n# ...\n\n# et ainsi de suite pour PUT et DELETE\n</code></pre> Maintenant, toutes vos op\u00e9rations CRUD seront soigneusement regroup\u00e9es sous le titre \"Vaisseaux spatiaux\".</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/5/#5-vue-alternative-redoc","title":"5. Vue alternative : ReDoc","text":"<p>FastAPI fournit une autre interface de documentation \"pr\u00eate \u00e0 l'emploi\" \u2014 ReDoc. Elle est moins interactive, mais est souvent consid\u00e9r\u00e9e comme plus lisible et convient parfaitement \u00e0 la documentation statique.</p> <p>Ouvrez <code>http://127.0.0.1:8000/redoc</code></p> <p>Vous verrez une mise en page \u00e0 trois colonnes avec navigation, descriptions des endpoints et sch\u00e9mas de donn\u00e9es. C'est un excellent moyen de fournir de la documentation \u00e0 vos \"clients\" (par exemple, l'\u00e9quipe frontend).</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/5/#quiz-de-revision","title":"Quiz de r\u00e9vision","text":"<p>1. FastAPI g\u00e9n\u00e8re la documentation bas\u00e9e sur...</p>  a) Des fichiers `.html` s\u00e9par\u00e9s, qui doivent \u00eatre cr\u00e9\u00e9s manuellement  b) Votre code Python : routes, mod\u00e8les Pydantic et docstrings  c) Des commentaires commen\u00e7ant par `#` <p>2. Quelle norme est \u00e0 la base de l'auto-documentation FastAPI ?</p>  a) GraphQL  b) XML-RPC  c) OpenAPI (Swagger) <p>3. \u00c0 quelle URL la documentation interactive Swagger UI est-elle accessible par d\u00e9faut ?</p>  a) `/admin`  b) `/docs`  c) `/api/help` <p>4. Le param\u00e8tre `tags` dans le d\u00e9corateur `@app.get` est utilis\u00e9 pour :</p>  a) Ajouter des m\u00e9ta-balises en HTML  b) Regrouper les endpoints dans la documentation  c) Marquer un endpoint comme obsol\u00e8te <p>5. ReDoc est...</p>  a) Un outil d'\u00e9dition de code dans le navigateur  b) Une interface alternative, plus statique, pour la documentation API  c) Un syst\u00e8me pour d\u00e9tecter le code \"rouge\" (non fonctionnel) V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez d\u00e9couvert l'une des \"superpouvoirs\" les plus puissants de FastAPI : la cr\u00e9ation de documentation sans aucun effort.</p> <ul> <li>\ud83d\udcd6 Votre API dispose d\u00e9sormais de deux types de documentation \u00e0 jour : Swagger UI et ReDoc.</li> <li>\ud83d\udd2c La documentation est interactive et permet de tester l'API \u00e0 la vol\u00e9e.</li> <li>\ud83c\udff7\ufe0f Vous avez appris \u00e0 l'am\u00e9liorer \u00e0 l'aide de m\u00e9tadonn\u00e9es et de balises.</li> </ul> <p>Le manuel d'utilisation est pr\u00eat et toujours \u00e0 jour ! Dans le dernier chapitre de cette section, nous apprendrons \u00e0 g\u00e9rer les \"anomalies spatiales\" \u2014 les erreurs et les donn\u00e9es incorrectes.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>Assurez-vous que le titre, la description et les endpoints regroup\u00e9s par balises s'affichent \u00e0 l'adresse <code>http://127.0.0.1:8000/docs</code>.</li> <li>V\u00e9rifiez que votre mod\u00e8le <code>Spaceship</code> est visible dans la section \"Schemas\".</li> <li>Ouvrez <code>http://127.0.0.1:8000/redoc</code> et \u00e9valuez la vue alternative.</li> </ul> <p>\u26a0\ufe0f Si les modifications ne s'affichent pas :</p> <ul> <li>Assurez-vous d'avoir enregistr\u00e9 le fichier <code>main.py</code>.</li> <li>V\u00e9rifiez que le serveur <code>uvicorn</code> est lanc\u00e9 avec le drapeau <code>--reload</code> et qu'il a red\u00e9marr\u00e9 avec succ\u00e8s.</li> </ul>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/6/","title":"Chapitre 3.6 : Gestion des erreurs et validation","text":"<p>Temps d'\u00e9tude : 50 minutes</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/6/#1-gestion-des-erreurs-les-boucliers-durgence-du-vaisseau-spatial","title":"1. Gestion des erreurs : les \"boucliers d'urgence\" du vaisseau spatial","text":"<p>M\u00eame sur le vaisseau le plus sophistiqu\u00e9, des situations impr\u00e9vues peuvent survenir :</p> <ul> <li>Commande incorrecte du Centre de contr\u00f4le de mission : Le client a envoy\u00e9 des donn\u00e9es incorrectes.</li> <li>Perte de connexion avec le module : La ressource n'a pas \u00e9t\u00e9 trouv\u00e9e dans la base de donn\u00e9es.</li> <li>D\u00e9faillance du r\u00e9acteur : Erreur interne du serveur.</li> </ul> <p>Une bonne gestion des erreurs est un syst\u00e8me de \"boucliers d'urgence\". Elle emp\u00eache le vaisseau de se d\u00e9sint\u00e9grer et envoie plut\u00f4t un signal clair au Centre de contr\u00f4le de mission indiquant ce qui n'a pas fonctionn\u00e9.</p> <p>\ud83d\udca1 Analogie spatiale :</p> <p>Au lieu de simplement transmettre le signal \"URGENCE !\" au Centre de contr\u00f4le de mission, un bon ordinateur de bord enverra un rapport structur\u00e9 : <pre><code>{\n  \"error_code\": \"ENGINE_OVERHEAT\",\n  \"message\": \"La temp\u00e9rature du moteur n\u00b02 a d\u00e9pass\u00e9 la norme\",\n  \"suggested_action\": \"D\u00e9marrer le syst\u00e8me de refroidissement\"\n}\n</code></pre> Cela permet aux ing\u00e9nieurs sur Terre de comprendre rapidement le probl\u00e8me et de prendre des mesures.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/6/#2-validation-pydantic-lordinateur-de-bord-integre","title":"2. Validation Pydantic : l'\"ordinateur de bord\" int\u00e9gr\u00e9","text":"<p>Nous avons d\u00e9j\u00e0 rencontr\u00e9 la magie de Pydantic. Si vous tentez de cr\u00e9er un vaisseau avec un type de donn\u00e9es incorrect (par exemple, <code>launch_year</code> sous forme de cha\u00eene de caract\u00e8res), FastAPI retournera automatiquement une erreur <code>422 Unprocessable Entity</code> avec une description d\u00e9taill\u00e9e du champ et de la raison pour laquelle la validation a \u00e9chou\u00e9.</p> <p>Exemple de requ\u00eate vers <code>POST /spaceships</code> : <pre><code>{\n  \"name\": \"X-Wing\",\n  \"type\": \"Chasseur\",\n  \"launch_year\": \"il y a longtemps\",  // &lt;-- Type incorrect !\n  \"status\": \"En service\"\n}\n</code></pre></p> <p>R\u00e9ponse automatique de FastAPI : <pre><code>{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"body\",\n        \"launch_year\"\n      ],\n      \"msg\": \"value is not a valid integer\",\n      \"type\": \"type_error.integer\"\n    }\n  ]\n}\n</code></pre> C'est incroyablement puissant ! Vous n'avez pas besoin d'\u00e9crire de code pour la v\u00e9rification des types \u2014 FastAPI et Pydantic le font pour vous.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/6/#3-gestion-ressource-non-trouvee-lexception-httpexception","title":"3. Gestion \"Ressource non trouv\u00e9e\" : l'exception <code>HTTPException</code>","text":"<p>Nous l'avons d\u00e9j\u00e0 utilis\u00e9 dans les op\u00e9rations CRUD. <code>HTTPException</code> est le moyen standard pour FastAPI d'interrompre l'ex\u00e9cution de la requ\u00eate et de renvoyer imm\u00e9diatement une r\u00e9ponse d'erreur au client.</p> <p>Rappelons le code de <code>GET /spaceships/{ship_id}</code> : <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # Assurez-vous que HTTPException est import\u00e9\n\n# ...\n\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"Vaisseaux spatiaux\"])\ndef get_spaceship(ship_id: int):\n    ship = db_spaceships.get(ship_id)\n    if not ship:\n        # Si le vaisseau n'est pas trouv\u00e9, nous \"levons\" une exception 404\n        raise HTTPException(status_code=404, detail=f\"Vaisseau spatial avec l'ID {ship_id} non trouv\u00e9\")\n    return ship\n</code></pre></p> <ul> <li><code>raise HTTPException(...)</code> : Cet appel arr\u00eate l'ex\u00e9cution de la fonction.</li> <li><code>status_code=404</code> : D\u00e9finit le statut HTTP de la r\u00e9ponse.</li> <li><code>detail</code> : Le message qui sera envoy\u00e9 au client dans le corps de la r\u00e9ponse JSON.</li> </ul>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/6/#4-validateurs-personnalises-verifications-speciales-avant-le-lancement","title":"4. Validateurs personnalis\u00e9s : \"V\u00e9rifications sp\u00e9ciales\" avant le lancement","text":"<p>Et si nous voulions ajouter notre propre logique m\u00e9tier, plus complexe ? Par exemple, interdire de lancer des vaisseaux nomm\u00e9s \"\u00c9toile de la Mort\".</p> <p>Pour cela, Pydantic dispose d'un outil puissant : les validateurs.</p> <p>\u00c9tape 1 : Ajout d'un validateur au mod\u00e8le <code>SpaceshipCreate</code> <pre><code># main.py\nfrom pydantic import BaseModel, Field, validator\n\nclass SpaceshipCreate(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n\n    @validator('name')\n    def name_must_not_be_forbidden(cls, v):\n        \"\"\"V\u00e9rifie que le nom du vaisseau n'est pas dans la liste des noms interdits.\"\"\"\n        if 'Death Star' in v:\n            raise ValueError('Les noms comme \"\u00c9toile de la Mort\" sont interdits par d\u00e9cret Imp\u00e9rial !')\n        return v.title() # Met le nom en majuscule par la m\u00eame occasion\n</code></pre></p> <ul> <li><code>@validator('name')</code> : Un d\u00e9corateur qui \"lie\" cette fonction au champ <code>name</code>.</li> <li><code>cls, v</code> : La m\u00e9thode re\u00e7oit la classe elle-m\u00eame (<code>cls</code>) et la valeur du champ (<code>v</code>).</li> <li><code>raise ValueError(...)</code> : Si la validation \u00e9choue, nous levons une exception Python standard. FastAPI l'interceptera et la transformera en une belle erreur <code>422</code>.</li> <li><code>return v.title()</code> : Si tout est bon, nous devons imp\u00e9rativement retourner la valeur. Nous pouvons m\u00eame la modifier \u00e0 la vol\u00e9e (par exemple, la mettre sous une forme standardis\u00e9e).</li> </ul> <p>\u00c9tape 2 : Test Red\u00e9marrez <code>uvicorn</code> et essayez de cr\u00e9er un vaisseau avec un nom interdit via <code>/docs</code>. Vous obtiendrez une erreur <code>422</code> avec votre message personnalis\u00e9 !</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/6/#5-gestion-globale-des-erreurs-le-protocole-durgence-de-la-station","title":"5. Gestion globale des erreurs : le \"protocole d'urgence\" de la station","text":"<p>Parfois, il est n\u00e9cessaire d'intercepter des erreurs inattendues (par exemple, une panne de connexion \u00e0 une base de donn\u00e9es r\u00e9elle) et de renvoyer un format de r\u00e9ponse unique et standardis\u00e9.</p> <p>Pour cela, le d\u00e9corateur <code>@app.exception_handler</code> est utilis\u00e9.</p> <p>Exemple : Interception de toutes les erreurs <code>ValueError</code> <pre><code># main.py\nfrom fastapi import FastAPI, Request\nfrom fastapi.responses import JSONResponse\n\n# ...\n\n@app.exception_handler(ValueError)\nasync def value_error_exception_handler(request: Request, exc: ValueError):\n    \"\"\"\n    Gestionnaire global pour toutes les erreurs ValueError,\n    afin de renvoyer un JSON standardis\u00e9.\n    \"\"\"\n    return JSONResponse(\n        status_code=400,\n        content={\"message\": f\"Erreur dans les donn\u00e9es : {str(exc)}\"},\n    )\n</code></pre></p> <ul> <li><code>@app.exception_handler(ValueError)</code> : Indique \u00e0 FastAPI que cette fonction doit g\u00e9rer toutes les <code>ValueError</code> qui n'ont pas \u00e9t\u00e9 intercept\u00e9es pr\u00e9c\u00e9demment.</li> <li><code>async def ...</code> : Les gestionnaires d'exceptions doivent \u00eatre asynchrones (<code>async</code>).</li> <li><code>JSONResponse</code> : Permet de contr\u00f4ler enti\u00e8rement le corps et le statut de la r\u00e9ponse.</li> </ul> <p>Maintenant, lorsque notre validateur personnalis\u00e9 se d\u00e9clenchera, la r\u00e9ponse aura le format plus convivial que nous avons d\u00e9fini.</p>"},{"location":"fr/Chapitre%203%20-%20API%20en%20Python%20FastAPI/6/#quiz-pour-consolider-les-connaissances","title":"Quiz pour consolider les connaissances","text":"<p>1. Si le client envoie des donn\u00e9es d'un type incorrect (une cha\u00eene de caract\u00e8res au lieu d'un nombre), FastAPI retournera automatiquement le statut...</p>  a) 500 Internal Server Error  b) 404 Not Found  c) 422 Unprocessable Entity <p>2. `raise HTTPException(status_code=404)` est utilis\u00e9 pour...</p>  a) Arr\u00eater l'ensemble du serveur  b) Interrompre l'ex\u00e9cution de la requ\u00eate et renvoyer une erreur 404 au client  c) Enregistrer l'erreur dans le journal, mais poursuivre l'ex\u00e9cution <p>3. Le d\u00e9corateur `@validator('field_name')` dans Pydantic est n\u00e9cessaire pour :</p>  a) Cr\u00e9er une logique de validation personnalis\u00e9e pour un champ sp\u00e9cifique  b) Indiquer qu'un champ est obligatoire  c) Chiffrer la valeur d'un champ <p>4. Que doit faire une fonction de validation dans Pydantic si les donn\u00e9es sont correctes ?</p>  a) Ne rien retourner (None)  b) Retourner imp\u00e9rativement la valeur (\u00e9ventuellement modifi\u00e9e)  c) Retourner `True` <p>5. `@app.exception_handler()` permet de...</p>  a) Cr\u00e9er de nouveaux types d'exceptions  b) Intercepter les exceptions globalement et d\u00e9finir une r\u00e9ponse personnalis\u00e9e pour celles-ci  c) Ignorer toutes les erreurs et toujours retourner le statut 200 V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez install\u00e9 sur votre vaisseau API un puissant syst\u00e8me de d\u00e9fense et des protocoles d'urgence. Il est d\u00e9sormais capable de :</p> <ul> <li>\ud83d\udee1\ufe0f Repousser automatiquement les attaques de \"donn\u00e9es incorrectes\" \u00e0 l'aide de Pydantic.</li> <li>\ud83d\udea8 Signaler intelligemment l'absence de ressources (<code>404 Not Found</code>) via <code>HTTPException</code>.</li> <li>\u2699\ufe0f Effectuer des \"v\u00e9rifications sp\u00e9ciales\" \u00e0 l'aide de validateurs personnalis\u00e9s.</li> <li>\ud83e\uddef Intercepter globalement les pannes impr\u00e9vues et fournir des r\u00e9ponses standardis\u00e9es.</li> </ul> <p>Votre \"hyperpropulsion\" est non seulement rapide, mais aussi incroyablement fiable !</p> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>Essayez de cr\u00e9er un vaisseau nomm\u00e9 \"\u00c9toile de la Mort\" et assurez-vous de recevoir une erreur <code>400</code> avec votre message personnalis\u00e9.</li> <li>Essayez de requ\u00eater <code>GET /spaceships/999</code> et assurez-vous de recevoir une erreur <code>404</code>.</li> <li>Essayez d'envoyer une requ\u00eate <code>POST</code> avec <code>launch_year</code> sous forme de cha\u00eene de caract\u00e8res et assurez-vous de recevoir une erreur <code>422</code>.</li> </ul> <p>\u26a0\ufe0f En cas d'erreurs :</p> <ul> <li>Assurez-vous que tous les modules n\u00e9cessaires (<code>HTTPException</code>, <code>validator</code>, <code>Request</code>, <code>JSONResponse</code>) sont import\u00e9s.</li> <li>V\u00e9rifiez que les d\u00e9corateurs <code>@validator</code> et <code>@app.exception_handler</code> sont \u00e9crits sans fautes de frappe.</li> </ul> <p>F\u00e9licitations pour la fin du Chapitre 3 ! Vous avez construit et lanc\u00e9 un API puissant, document\u00e9 et s\u00e9curis\u00e9 avec FastAPI, \u00e0 partir de z\u00e9ro. Vous \u00eates pr\u00eat pour de v\u00e9ritables missions spatiales.</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/1/","title":"1","text":"<pre><code># **Chapitre 4.1 : Les bases de l'API Fetch**\n**Temps d'\u00e9tude :** 45 minutes\n\n---\n\n#### **1. API Fetch : L'\"antenne principale\" du Centre de Contr\u00f4le de Mission**\nImaginez que dans votre Centre de Contr\u00f4le de Mission, vous disposiez d'une **\u00e9norme antenne radio** pour communiquer avec les engins spatiaux. Vous pouvez la r\u00e9gler sur la bonne fr\u00e9quence, envoyer une commande et attendre une r\u00e9ponse.\n\nL'**API Fetch** est une \"antenne int\u00e9gr\u00e9e\" similaire dans les navigateurs modernes. C'est une interface JavaScript standard pour effectuer des requ\u00eates HTTP vers des serveurs. Elle permet de :\n\n- \ud83d\udce1 Envoyer des \"commandes\" (GET, POST, PUT, DELETE) \u00e0 notre API.\n- \ud83d\udef0\ufe0f Recevoir des \"donn\u00e9es de t\u00e9l\u00e9m\u00e9trie\" (donn\u00e9es JSON) du serveur.\n- \u2699\ufe0f Travailler de mani\u00e8re asynchrone, sans \"bloquer\" l'interface utilisateur en attendant une r\u00e9ponse.\n\n&gt; \ud83d\udca1 **Analogie spatiale :**\n\n&gt; La fonction `fetch()` est la commande \"Antenne, \u00e9tablir la connexion !\". Vous lui transmettez :\n\n&gt; - Les **coordonn\u00e9es de la cible** (l'URL de notre API).\n&gt; - Le **type de commande** (m\u00e9thode : GET, POST).\n&gt; - Le **contenu de la commande** (corps de la requ\u00eate, en-t\u00eates).\n\n&gt; En r\u00e9ponse, vous ne recevez pas les donn\u00e9es elles-m\u00eames, mais une **promesse (Promise)** que les donn\u00e9es arriveront.\n\n---\n\n#### **2. Asynchronisme : Communication \u00e0 la vitesse de la lumi\u00e8re**\nLa communication avec un vaisseau spatial lointain prend du temps. Vous ne pouvez pas simplement arr\u00eater tout le travail du Centre de Contr\u00f4le de Mission et attendre la r\u00e9ponse. Vous envoyez une commande et **continuez \u00e0 travailler**, et lorsque la r\u00e9ponse arrive, le syst\u00e8me vous en informe.\n\nC'est cela l'**asynchronisme**. JavaScript ne bloque pas l'ex\u00e9cution du reste du code pendant qu'il attend une r\u00e9ponse du serveur. Pour g\u00e9rer ce processus, l'API Fetch utilise les **Promesses (Promises)**.\n\nUne **Promesse (Promise)** est un \"re\u00e7u\" indiquant que vous avez envoy\u00e9 une requ\u00eate. Elle a trois \u00e9tats :\n\n- **`pending` (en attente) :** Le signal est toujours en cours de transmission.\n- **`fulfilled` (r\u00e9alis\u00e9e) :** La r\u00e9ponse a \u00e9t\u00e9 re\u00e7ue avec succ\u00e8s !\n- **`rejected` (rejet\u00e9e) :** Une erreur s'est produite (par exemple, pas de connexion).\n\n---\n\n#### **3. Premi\u00e8re requ\u00eate : D\u00e9couvrir la position de l'ISS**\nEnvoyons notre premi\u00e8re requ\u00eate \u00e0 l'aide de `fetch`. Nous utiliserons un simple fichier HTML et des balises `&lt;script&gt;`.\n\n**\u00c9tape 1 : Cr\u00e9ation de `index.html`**\nCr\u00e9ez un fichier `index.html` dans un nouveau dossier (par exemple, `frontend_fleet_control`).\n```html\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Centre de Contr\u00f4le de Mission - API Fetch&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Statut de la communication avec l'ISS&lt;/h1&gt;\n    &lt;div id=\"iss-status\"&gt;En attente de donn\u00e9es...&lt;/div&gt;\n\n    &lt;script&gt;\n        // Notre code JavaScript sera ici\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>\u00c9tape 2 : \u00c9crire le code avec <code>fetch</code> \u00c0 l'int\u00e9rieur de la balise <code>&lt;script&gt;</code>, ajoutons notre premi\u00e8re requ\u00eate <code>fetch</code> vers l'API publique Open Notify. <pre><code>// index.html -&gt; &lt;script&gt;\n\nconst issApiUrl = 'http://api.open-notify.org/iss-now.json';\nconst statusDiv = document.getElementById('iss-status');\n\nconsole.log('Envoi de la requ\u00eate pour obtenir les coordonn\u00e9es de l\\'ISS...');\n\nfetch(issApiUrl)\n    .then(response =&gt; {\n        // Le premier .then() traite la r\u00e9ponse HTTP elle-m\u00eame\n        console.log('R\u00e9ponse re\u00e7ue du serveur !', response);\n        // Convertissons le corps de la r\u00e9ponse en JSON, c'est aussi une op\u00e9ration asynchrone\n        return response.json();\n    })\n    .then(data =&gt; {\n        // Le second .then() re\u00e7oit les donn\u00e9es JSON d\u00e9j\u00e0 analys\u00e9es\n        console.log('Donn\u00e9es converties en JSON avec succ\u00e8s !', data);\n        const position = data.iss_position;\n        statusDiv.innerHTML = `L'ISS se trouve actuellement ici :\n                               &lt;strong&gt;Latitude :&lt;/strong&gt; ${position.latitude},\n                               &lt;strong&gt;Longitude :&lt;/strong&gt; ${position.longitude}`;\n    })\n    .catch(error =&gt; {\n        // .catch() sera d\u00e9clench\u00e9 si une erreur r\u00e9seau se produit\n        console.error('Erreur de communication avec l\\'ISS !', error);\n        statusDiv.textContent = 'Impossible de r\u00e9cup\u00e9rer les donn\u00e9es. V\u00e9rifiez votre connexion.';\n    });\n</code></pre></p> <ul> <li><code>fetch(url)</code> : Envoie une requ\u00eate GET. Renvoie une promesse.</li> <li><code>.then(callback)</code> : S'ex\u00e9cute lorsque la promesse est r\u00e9solue avec succ\u00e8s (<code>fulfilled</code>). Le premier <code>.then</code> re\u00e7oit un objet <code>Response</code>.</li> <li><code>response.json()</code> : M\u00e9thode qui lit le corps de la r\u00e9ponse et l'analyse comme du JSON. Elle renvoie \u00e9galement une promesse !</li> <li><code>.catch(callback)</code> : S'ex\u00e9cute si la promesse est rejet\u00e9e (<code>rejected</code>), par exemple en raison d'une erreur r\u00e9seau.</li> </ul> <p>\u00c9tape 3 : Ouvrir dans le navigateur Ouvrez simplement le fichier <code>index.html</code> dans votre navigateur. Vous devriez voir \"En attente de donn\u00e9es...\" se transformer en coordonn\u00e9es actuelles de l'ISS. Ouvrez la console d\u00e9veloppeur (F12) pour voir les logs.</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/1/#4-et-si-gestion-des-erreurs-du-serveur","title":"4. \"Et si...\" : Gestion des erreurs du serveur","text":"<p>Et si nous requ\u00eations une URL inexistante ? <code>fetch('http://api.open-notify.org/non-existent-endpoint')</code></p> <p>L'API <code>fetch</code> est con\u00e7ue de telle sorte que <code>.catch()</code> ne se d\u00e9clenche qu'en cas d'erreurs r\u00e9seau (pas d'internet, DNS introuvable). Cependant, les r\u00e9ponses avec les codes <code>404</code> ou <code>500</code> sont consid\u00e9r\u00e9es par <code>fetch</code> comme une r\u00e9ponse re\u00e7ue avec succ\u00e8s ! Elle contient simplement un code d'erreur.</p> <p>La bonne fa\u00e7on de v\u00e9rifier : <pre><code>fetch('http://api.open-notify.org/non-existent-endpoint')\n    .then(response =&gt; {\n        // V\u00e9rifions la propri\u00e9t\u00e9 .ok, qui est vraie pour les statuts 200-299\n        if (!response.ok) {\n            // Si la r\u00e9ponse n'est pas \"OK\", cr\u00e9ons notre propre erreur pour passer au .catch()\n            throw new Error(`Erreur HTTP ! Statut : ${response.status}`);\n        }\n        return response.json();\n    })\n    .then(data =&gt; {\n        console.log(data);\n    })\n    .catch(error =&gt; {\n        console.error('Une erreur s\\'est produite lors de l\\'ex\u00e9cution de la requ\u00eate :', error);\n    });\n</code></pre></p> <ul> <li><code>response.ok</code> : C'est votre principal indicateur de succ\u00e8s.</li> <li><code>throw new Error()</code> : Nous \"\u00e9chouons\" manuellement la cha\u00eene de promesses pour entrer dans le bloc <code>.catch</code>.</li> </ul>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/1/#quiz-de-consolidation","title":"Quiz de consolidation","text":"<p>1. L'API Fetch est...</p>  a) Une biblioth\u00e8que externe qu'il faut t\u00e9l\u00e9charger  b) Une interface int\u00e9gr\u00e9e au navigateur pour les requ\u00eates HTTP  c) Un langage de programmation pour le travail r\u00e9seau <p>2. Que renvoie l'appel `fetch(url)` ?</p>  a) Directement les donn\u00e9es JSON  b) Un objet `Promise` (promesse)  c) Une page HTML <p>3. La m\u00e9thode `.then()` dans une cha\u00eene de promesses est appel\u00e9e lorsque...</p>  a) Une erreur r\u00e9seau se produit  b) La requ\u00eate est ex\u00e9cut\u00e9e avec succ\u00e8s  c) L'utilisateur ferme l'onglet <p>4. La m\u00e9thode `response.json()` est utilis\u00e9e pour...</p>  a) Convertir le corps de la r\u00e9ponse en un objet JavaScript  b) V\u00e9rifier si la r\u00e9ponse est un JSON valide  c) Envoyer des donn\u00e9es au serveur au format JSON <p>5. Comment v\u00e9rifier correctement que le serveur n'a pas renvoy\u00e9 d'erreur (par exemple, 404) ?</p>  a) V\u00e9rifier la propri\u00e9t\u00e9 `response.ok`  b) Voir si le bloc `.catch()` est d\u00e9clench\u00e9  c) V\u00e9rifier que `response.status` est \u00e9gal \u00e0 \"OK\" V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez configur\u00e9 l'\"antenne principale\" de votre Centre de Contr\u00f4le de Mission et appris \u00e0 envoyer des requ\u00eates et \u00e0 recevoir des r\u00e9ponses.</p> <ul> <li>\ud83d\udce1 Vous avez ma\u00eetris\u00e9 la syntaxe de base de <code>fetch()</code>.</li> <li>\ud83d\udef0\ufe0f Vous avez compris ce que sont les Promesses (Promises) et comment travailler avec <code>.then()</code> et <code>.catch()</code>.</li> <li>\u2699\ufe0f Vous avez appris \u00e0 traiter correctement les r\u00e9ponses du serveur en v\u00e9rifiant <code>response.ok</code>.</li> </ul> <p>Communication \u00e9tablie ! Dans le prochain chapitre, nous connecterons notre Centre de Contr\u00f4le de Mission \u00e0 l'API de la flotte spatiale que nous avons cr\u00e9\u00e9e avec FastAPI, et nous apprendrons \u00e0 r\u00e9cup\u00e9rer et \u00e0 afficher la liste de nos vaisseaux.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>Assurez-vous que votre fichier <code>index.html</code> affiche correctement les coordonn\u00e9es de l'ISS.</li> <li>Essayez de casser intentionnellement l'URL et voyez quelle erreur est affich\u00e9e dans la console du d\u00e9veloppeur.</li> </ul> <p>\u26a0\ufe0f Si le code ne fonctionne pas :</p> <ul> <li>Erreur CORS : Si vous essayez de faire une requ\u00eate vers votre API FastAPI locale (par exemple, <code>http://127.0.0.1:8000</code>) \u00e0 partir d'un fichier ouvert en tant que <code>file:///...</code>, le navigateur bloquera la requ\u00eate en raison de la politique de s\u00e9curit\u00e9 CORS. Nous r\u00e9soudrons ce probl\u00e8me dans le prochain chapitre. Pour l'instant, nous utilisons des API publiques qui l'autorisent.</li> <li>HTTP/HTTPS : <code>http://api.open-notify.org</code> fonctionne en HTTP. Certains navigateurs peuvent \u00e9mettre un avertissement \u00e0 ce sujet. Si vous travaillez depuis un site HTTPS, les requ\u00eates vers des ressources HTTP peuvent \u00eatre bloqu\u00e9es. ```</li> </ul>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/2/","title":"Chapitre 4.2 : Envoi de requ\u00eates GET","text":"<p>Temps d'\u00e9tude : 45 minutes</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/2/#1-get-requete-de-telemetrie-de-la-flotte-spatiale","title":"1. GET : Requ\u00eate de t\u00e9l\u00e9m\u00e9trie de la flotte spatiale","text":"<p>Une requ\u00eate GET est la commande principale pour r\u00e9cup\u00e9rer des donn\u00e9es. Dans notre Centre de Contr\u00f4le de Mission (CCM), cela \u00e9quivaut \u00e0 la requ\u00eate : \"Centre de Gestion de Flotte, rapportez la situation !\"</p> <p>Nous allons utiliser <code>fetch</code> pour envoyer deux types de requ\u00eates GET \u00e0 notre serveur FastAPI :</p> <ol> <li>Obtention de toute la collection : \"Montrez-moi toute ma flotte\".</li> <li>Obtention d'une seule ressource : \"Donnez-moi les informations d\u00e9taill\u00e9es sur le vaisseau avec l'ID 2\".</li> </ol> <p>\ud83d\udca1 Analogie spatiale :</p> <p><code>GET /spaceships</code> \u2014 c'est une requ\u00eate de diffusion \u00e0 toute la flotte pour demander ses indicatifs d'appel.</p> <p><code>GET /spaceships/3</code> \u2014 c'est une requ\u00eate adress\u00e9e \u00e0 un vaisseau sp\u00e9cifique (ISS) pour qu'il transmette les donn\u00e9es compl\u00e8tes de ses syst\u00e8mes.</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/2/#2-le-probleme-cors-interferences-interplanetaires","title":"2. Le probl\u00e8me CORS : \"Interf\u00e9rences interplan\u00e9taires\"","text":"<p>Avant d'envoyer une requ\u00eate, nous devons r\u00e9soudre un probl\u00e8me important. Par d\u00e9faut, pour des raisons de s\u00e9curit\u00e9, les navigateurs emp\u00eachent une page web (notre CCM), charg\u00e9e \u00e0 partir d'un \"domaine\" (<code>file:///...</code> ou <code>http://localhost:5500</code>), de faire des requ\u00eates vers une API sur un autre \"domaine\" (<code>http://127.0.0.1:8000</code>).</p> <p>Cette politique est appel\u00e9e CORS (Cross-Origin Resource Sharing).</p> <p>Pour permettre \u00e0 notre front-end de communiquer avec le back-end, nous devons configurer le serveur FastAPI pour qu'il dise au navigateur : \"Tout va bien, je fais confiance aux requ\u00eates provenant de cette adresse\".</p> <p>\u00c9tape 1 : Installation de <code>python-multipart</code> C'est n\u00e9cessaire pour le bon fonctionnement du middleware. <pre><code>pip install python-multipart\n</code></pre></p> <p>\u00c9tape 2 : Configuration de CORS dans <code>main.py</code> Ouvrez votre fichier <code>main.py</code> du projet FastAPI et ajoutez le code suivant : <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware  # &lt;-- Importation du middleware\n\n# ... votre code restant (mod\u00e8les, db_spaceships) ...\n\napp = FastAPI(\n    title=\"Fleet Management API\",\n    # ...\n)\n\n# --- CONFIGURATION CORS ---\n# Sp\u00e9cifie quels \"domaines\" (origines) peuvent envoyer des requ\u00eates\norigins = [\n    \"http://localhost\",\n    \"http://localhost:8080\",\n    \"http://127.0.0.1:5500\",  # Adresse pour Live Server dans VS Code\n    \"null\"  # Pour les requ\u00eates provenant de fichiers locaux file:///\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # Autorise les origines sp\u00e9cifi\u00e9es\n    allow_credentials=True,\n    allow_methods=[\"*\"],  # Autorise toutes les m\u00e9thodes (GET, POST, etc.)\n    allow_headers=[\"*\"],  # Autorise tous les en-t\u00eates\n)\n\n# --- VOS POINTS DE TERMINAISON CI-DESSOUS ---\n@app.get(\"/\")\n# ...\n</code></pre> Maintenant, notre serveur API est pr\u00eat \u00e0 accepter les requ\u00eates du front-end. Red\u00e9marrez <code>uvicorn</code> pour que les modifications prennent effet !</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/2/#3-recuperation-de-la-liste-de-tous-les-vaisseaux","title":"3. R\u00e9cup\u00e9ration de la liste de tous les vaisseaux","text":"<p>Nous allons cr\u00e9er une interface pour afficher notre flotte.</p> <p>\u00c9tape 1 : Mise \u00e0 jour de <code>index.html</code> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;CCM - Gestion de Flotte&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: sans-serif; }\n        .ship-list { list-style: none; padding: 0; }\n        .ship-list li { border: 1px solid #ccc; margin-bottom: 10px; padding: 15px; border-radius: 5px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Panneau de contr\u00f4le de la flotte spatiale&lt;/h1&gt;\n\n    &lt;button id=\"load-fleet-btn\"&gt;Demander les donn\u00e9es de la flotte&lt;/button&gt;\n\n    &lt;h2&gt;Liste des appareils :&lt;/h2&gt;\n    &lt;ul id=\"fleet-list\" class=\"ship-list\"&gt;\n        &lt;li&gt;En attente de commande...&lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt; &lt;!-- Connexion du script externe --&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>\u00c9tape 2 : Cr\u00e9ation de <code>app.js</code> \u00c0 c\u00f4t\u00e9 de <code>index.html</code>, cr\u00e9ez un fichier <code>app.js</code>. Nous y d\u00e9porterons toute la logique. <pre><code>// app.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // URL de notre serveur FastAPI\n\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetList = document.getElementById('fleet-list');\n\n// Fonction pour charger et afficher la flotte\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;Chargement de la t\u00e9l\u00e9m\u00e9trie...&lt;/li&gt;';\n\n        // Envoi de la requ\u00eate GET vers /spaceships\n        const response = await fetch(`${API_BASE_URL}/spaceships`);\n\n        if (!response.ok) {\n            throw new Error(`Erreur r\u00e9seau : ${response.status}`);\n        }\n\n        const ships = await response.json(); // R\u00e9cup\u00e9ration du tableau de vaisseaux\n\n        // Effacement de la liste et affichage des donn\u00e9es\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;Aucun appareil n\\'est enregistr\u00e9 dans le registre.&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            const listItem = document.createElement('li');\n            listItem.innerHTML = `\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                Type: ${ship.type}&lt;br&gt;\n                Ann\u00e9e de lancement: ${ship.launch_year}&lt;br&gt;\n                Statut: ${ship.status}\n            `;\n            fleetList.appendChild(listItem);\n        });\n\n    } catch (error) {\n        console.error('Impossible de charger les donn\u00e9es de la flotte :', error);\n        fleetList.innerHTML = `&lt;li&gt;Erreur : ${error.message}&lt;/li&gt;`;\n    }\n}\n\n// Ajout de l'\u00e9couteur d'\u00e9v\u00e9nement au bouton\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\n</code></pre></p> <ul> <li>async/await : Nous avons utilis\u00e9 une nouvelle syntaxe, plus pratique, pour travailler avec les promesses. Nous l'examinerons en d\u00e9tail au chapitre 4.5. Pour l'instant, sachez simplement que <code>await</code> \"attend\" l'ex\u00e9cution d'une promesse sans bloquer la page.</li> <li><code>try...catch</code> : Une excellente fa\u00e7on de g\u00e9rer les erreurs dans les fonctions <code>async</code>.</li> </ul> <p>\u00c9tape 3 : Testons Ouvrez <code>index.html</code> dans votre navigateur (id\u00e9alement via l'extension Live Server de VS Code, qui le lancera sur <code>http://127.0.0.1:5500</code>). Cliquez sur le bouton \"Demander les donn\u00e9es de la flotte\". La liste de vos vaisseaux de FastAPI devrait appara\u00eetre sur la page !</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/2/#4-recuperation-des-donnees-dun-seul-vaisseau","title":"4. R\u00e9cup\u00e9ration des donn\u00e9es d'un seul vaisseau","text":"<p>Maintenant, ajoutons un formulaire pour demander des informations par ID sp\u00e9cifique.</p> <p>\u00c9tape 1 : Ajout du formulaire dans <code>index.html</code> <pre><code>&lt;!-- index.html, apr\u00e8s la liste --&gt;\n&lt;hr&gt;\n&lt;h2&gt;Requ\u00eate par ID&lt;/h2&gt;\n&lt;form id=\"ship-form\"&gt;\n    &lt;input type=\"number\" id=\"ship-id-input\" placeholder=\"Entrez l'ID de l'appareil\" required&gt;\n    &lt;button type=\"submit\"&gt;Trouver l'appareil&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"ship-details\" class=\"ship-list\"&gt;&lt;/div&gt;\n</code></pre></p> <p>\u00c9tape 2 : Ajout de la logique dans <code>app.js</code> <pre><code>// app.js, \u00e0 la fin du fichier\n\nconst shipForm = document.getElementById('ship-form');\nconst shipIdInput = document.getElementById('ship-id-input');\nconst shipDetails = document.getElementById('ship-details');\n\nasync function fetchShipById(event) {\n    event.preventDefault(); // Emp\u00eache le rechargement de la page\n    const shipId = shipIdInput.value;\n\n    if (!shipId) {\n        alert('Veuillez entrer un ID.');\n        return;\n    }\n\n    try {\n        shipDetails.innerHTML = '&lt;li&gt;Recherche de l\\'appareil...&lt;/li&gt;';\n\n        // Envoi de la requ\u00eate GET vers /spaceships/{id}\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`);\n\n        if (response.status === 404) {\n             throw new Error('Aucun appareil avec cet ID n\\'a \u00e9t\u00e9 trouv\u00e9 dans le registre.');\n        }\n        if (!response.ok) {\n            throw new Error(`Erreur r\u00e9seau : ${response.status}`);\n        }\n\n        const ship = await response.json();\n\n        shipDetails.innerHTML = `\n            &lt;li&gt;\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                Type: ${ship.type}&lt;br&gt;\n                Ann\u00e9e de lancement: ${ship.launch_year}&lt;br&gt;\n                Statut: ${ship.status}\n            &lt;/li&gt;\n        `;\n    } catch (error) {\n        console.error(`Erreur lors de la recherche de l'appareil ${shipId}:`, error);\n        shipDetails.innerHTML = `&lt;li&gt;Erreur : ${error.message}&lt;/li&gt;`;\n    }\n}\n\nshipForm.addEventListener('submit', fetchShipById);\n</code></pre></p> <ul> <li>Nous avons ajout\u00e9 une gestion s\u00e9par\u00e9e du statut <code>404</code> pour donner \u00e0 l'utilisateur un message d'erreur plus clair.</li> </ul> <p>\u00c9tape 3 : Testons Actualisez la page, entrez l'ID d'un vaisseau existant (par exemple, 1) et cliquez sur \"Trouver l'appareil\". Vous devriez voir ses donn\u00e9es. Essayez d'entrer un ID inexistant (par exemple, 99) \u2014 vous verrez un message d'erreur.</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/2/#quiz-de-consolidation","title":"Quiz de consolidation","text":"<p>1. La politique CORS dans le navigateur est n\u00e9cessaire pour...</p>  a) Acc\u00e9l\u00e9rer le chargement des pages  b) Prot\u00e9ger contre les requ\u00eates inter-sites malveillantes  c) Compresser les donn\u00e9es JSON <p>2. Pour permettre au front-end sur `localhost:5500` d'acc\u00e9der \u00e0 FastAPI, il faut...</p>  a) Configurer `CORSMiddleware` dans FastAPI  b) Modifier les param\u00e8tres du navigateur  c) Rien n'est n\u00e9cessaire, cela fonctionne par d\u00e9faut <p>3. Pour obtenir les donn\u00e9es d'une ressource sp\u00e9cifique avec l'ID=5, l'URL de la requ\u00eate ressemblera \u00e0 :</p>  a) `/resources?id=5`  b) `/resources/5`  c) `/get/resources/5` <p>4. Le mot-cl\u00e9 `await` en JavaScript ne peut \u00eatre utilis\u00e9 qu'\u00e0 l'int\u00e9rieur d'une fonction d\u00e9clar\u00e9e avec...</p>  a) `function`  b) `promise`  c) `async` <p>5. `event.preventDefault()` dans le gestionnaire de soumission de formulaire est n\u00e9cessaire pour...</p>  a) Emp\u00eacher le comportement standard du navigateur (rechargement de la page)  b) Arr\u00eater l'ex\u00e9cution du script  c) Annuler l'envoi de la requ\u00eate V\u00e9rifier"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/3/","title":"Chapitre 4.3 : Envoi de requ\u00eates POST/PUT/DELETE","text":"<p>Temps d'\u00e9tude : 1 heure</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/3/#1-commandes-actives-du-lancement-au-declassement","title":"1. Commandes actives : Du lancement au d\u00e9classement","text":"<p>Jusqu'\u00e0 pr\u00e9sent, notre centre de contr\u00f4le (MCC) ne faisait que demander des informations (<code>GET</code>). Nous allons maintenant apprendre \u00e0 envoyer des commandes actives :</p> <ul> <li>POST : \"Lancer un nouveau satellite en orbite !\"</li> <li>PUT : \"Effectuer une mise \u00e0 niveau compl\u00e8te des syst\u00e8mes de l'ISS !\"</li> <li>DELETE : \"D\u00e9sorbiter l'ancien appareil <code>Debris-123</code> !\"</li> </ul> <p>Pour ce faire, nous utiliserons <code>fetch</code>, mais avec des param\u00e8tres suppl\u00e9mentaires qui d\u00e9crivent notre commande.</p> <p>\ud83d\udca1 Analogie spatiale :</p> <p>Si <code>GET</code> est une \u00e9coute passive de la radio, <code>POST</code>, <code>PUT</code> et <code>DELETE</code> sont une transmission active de commandes. Pour cela, il ne suffit pas d'indiquer la \"fr\u00e9quence\" (URL), mais aussi le contenu de la commande (corps de la requ\u00eate) et le protocole de communication (en-t\u00eates).</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/3/#2-envoi-dune-requete-post-lancement-dun-nouveau-vaisseau","title":"2. Envoi d'une requ\u00eate POST : Lancement d'un nouveau vaisseau","text":"<p>Pour cr\u00e9er une nouvelle ressource, nous envoyons une requ\u00eate <code>POST</code>. Le plus important ici est de transmettre le corps (body) de la requ\u00eate avec les donn\u00e9es du nouvel objet.</p> <p>\u00c9tape 1 : Ajout du formulaire de cr\u00e9ation dans <code>index.html</code> Pla\u00e7ons-le apr\u00e8s le bloc \"Requ\u00eate par ID\". <pre><code>&lt;!-- index.html --&gt;\n&lt;hr&gt;\n&lt;h2&gt;Lancer un nouvel appareil&lt;/h2&gt;\n&lt;form id=\"create-ship-form\"&gt;\n    &lt;input type=\"text\" id=\"create-name\" placeholder=\"Nom\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-type\" placeholder=\"Type\" required&gt;&lt;br&gt;\n    &lt;input type=\"number\" id=\"create-year\" placeholder=\"Ann\u00e9e de lancement\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-status\" placeholder=\"Statut\" required&gt;&lt;br&gt;\n    &lt;button type=\"submit\"&gt;Lancer&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"create-status-message\"&gt;&lt;/div&gt;\n</code></pre></p> <p>\u00c9tape 2 : Ajout de la logique dans <code>app.js</code> <pre><code>// app.js, \u00e0 la fin du fichier\n\nconst createShipForm = document.getElementById('create-ship-form');\nconst createStatusMessage = document.getElementById('create-status-message');\n\nasync function createShip(event) {\n    event.preventDefault();\n\n    // 1. Rassemble les donn\u00e9es du formulaire dans un objet\n    const shipData = {\n        name: document.getElementById('create-name').value,\n        type: document.getElementById('create-type').value,\n        launch_year: parseInt(document.getElementById('create-year').value),\n        status: document.getElementById('create-status').value\n    };\n\n    try {\n        createStatusMessage.textContent = 'Envoi de la commande de lancement...';\n\n        // 2. Envoie la requ\u00eate fetch avec les param\u00e8tres\n        const response = await fetch(`${API_BASE_URL}/spaceships`, {\n            method: 'POST', // Indique la m\u00e9thode\n            headers: {\n                'Content-Type': 'application/json' // Indique au serveur que nous envoyons du JSON\n            },\n            body: JSON.stringify(shipData) // Convertit l'objet JavaScript en cha\u00eene JSON\n        });\n\n        if (!response.ok) {\n            // Si le serveur a renvoy\u00e9 une erreur, essaie de lire son corps\n            const errorData = await response.json();\n            throw new Error(errorData.detail || `Erreur serveur : ${response.status}`);\n        }\n\n        const newShip = await response.json();\n        createStatusMessage.textContent = `\ud83d\ude80 Lancement r\u00e9ussi ! L'appareil a l'ID : ${newShip.id}`;\n\n        createShipForm.reset(); // Efface le formulaire\n        fetchAndDisplayFleet(); // Met \u00e0 jour la liste g\u00e9n\u00e9rale de la flotte\n\n    } catch (error) {\n        console.error('Erreur lors du lancement de l\\'appareil :', error);\n        createStatusMessage.textContent = `\ud83d\udd34 Erreur : ${error.message}`;\n    }\n}\n\ncreateShipForm.addEventListener('submit', createShip);\n</code></pre> Points cl\u00e9s de <code>fetch</code> pour POST :</p> <ul> <li><code>method: 'POST'</code> : Il est imp\u00e9ratif d'indiquer la m\u00e9thode HTTP.</li> <li><code>headers: { 'Content-Type': 'application/json' }</code> : Cet en-t\u00eate est crucial. Il indique \u00e0 notre serveur FastAPI que le corps de la requ\u00eate contient du JSON et qu'il doit \u00eatre analys\u00e9.</li> <li><code>body: JSON.stringify(shipData)</code> : Nous ne pouvons pas envoyer un objet JavaScript directement. Il doit \u00eatre s\u00e9rialis\u00e9 (converti) en cha\u00eene JSON.</li> </ul>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/3/#3-envoi-dune-requete-delete-declassement-dun-appareil","title":"3. Envoi d'une requ\u00eate DELETE : D\u00e9classement d'un appareil","text":"<p>La requ\u00eate de suppression est plus simple : elle n'a g\u00e9n\u00e9ralement pas besoin de corps, seulement d'une URL avec l'ID de l'objet.</p> <p>\u00c9tape 1 : Ajout du bouton \"Supprimer\" dans notre liste de vaisseaux Modifions la fonction <code>fetchAndDisplayFleet</code> dans <code>app.js</code> pour qu'elle ajoute un bouton de suppression pour chaque \u00e9l\u00e9ment. <pre><code>// app.js, \u00e0 l'int\u00e9rieur de la fonction fetchAndDisplayFleet\n\n// ...\nships.forEach(ship =&gt; {\n    const listItem = document.createElement('li');\n    // Ajoute un bouton avec un attribut data stockant l'ID\n    listItem.innerHTML = `\n        &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n        Type: ${ship.type} | Ann\u00e9e: ${ship.launch_year} | Statut: ${ship.status}&lt;br&gt;\n        &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;D\u00e9classer l'appareil&lt;/button&gt;\n    `;\n    fleetList.appendChild(listItem);\n});\n// ...\n</code></pre></p> <p>\u00c9tape 2 : Ajout d'un gestionnaire pour tous les boutons \"Supprimer\" Nous utilisons la d\u00e9l\u00e9gation d'\u00e9v\u00e9nements - un seul gestionnaire pour toute la liste. <pre><code>// app.js, \u00e0 la fin du fichier\n\nasync function deleteShip(shipId) {\n    if (!confirm(`\u00cates-vous s\u00fbr de vouloir d\u00e9classer l'appareil avec l'ID ${shipId} ? Cette action est irr\u00e9versible.`)) {\n        return;\n    }\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`, {\n            method: 'DELETE' // Indique la m\u00e9thode\n        });\n\n        if (!response.ok) {\n            throw new Error(`\u00c9chec du d\u00e9classement de l'appareil. Statut : ${response.status}`);\n        }\n\n        alert(`L'appareil avec l'ID ${shipId} a \u00e9t\u00e9 d\u00e9class\u00e9 avec succ\u00e8s.`);\n        fetchAndDisplayFleet(); // Met \u00e0 jour la liste\n\n    } catch (error) {\n        console.error('Erreur lors du d\u00e9classement :', error);\n        alert(`Erreur : ${error.message}`);\n    }\n}\n\n// D\u00e9l\u00e9gation d'\u00e9v\u00e9nements : \u00e9coute les clics sur toute la liste\nfleetList.addEventListener('click', (event) =&gt; {\n    // V\u00e9rifie si le clic a eu lieu sur un bouton avec la classe 'delete-btn'\n    if (event.target.classList.contains('delete-btn')) {\n        const shipId = event.target.dataset.shipId; // R\u00e9cup\u00e8re l'ID depuis l'attribut data\n        deleteShip(shipId);\n    }\n});\n</code></pre></p> <p>\u00c9tape 3 : Ajout de l'id au mod\u00e8le Spaceship</p> <p>Ajoutez l'id aux mod\u00e8les et \u00e0 la base de donn\u00e9es dans le fichier <code>main.py</code>.</p> <pre><code>class Spaceship(BaseModel):\n    id: int\n    # Reste du code du mod\u00e8le...\n\ndb_spaceships = {\n    1: {\n        \"id\": 1,\n        # Donn\u00e9es de l'\u00e9l\u00e9ment 1\n    },\n    2: {\n        \"id\": 2,\n        # Donn\u00e9es de l'\u00e9l\u00e9ment 2\n    },\n    3: {\n        \"id\": 3,\n        # Donn\u00e9es de l'\u00e9l\u00e9ment 3\n    }\n}\n</code></pre> <ul> <li><code>method: 'DELETE'</code> : Indique la m\u00e9thode. Le corps et les en-t\u00eates ne sont pas n\u00e9cessaires ici.</li> <li><code>confirm()</code> : Simple fen\u00eatre de confirmation int\u00e9gr\u00e9e pour \u00e9viter de supprimer accidentellement quelque chose d'important.</li> </ul>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/3/#4-envoi-dune-requete-put-tache-autonome","title":"4. Envoi d'une requ\u00eate PUT (T\u00e2che autonome)","text":"<p>L'impl\u00e9mentation d'une requ\u00eate <code>PUT</code> pour la mise \u00e0 jour est tr\u00e8s similaire \u00e0 <code>POST</code>.</p> <p>Votre mission, si vous choisissez de l'accepter :</p> <ol> <li>Ajouter un bouton \"Modifier\" \u00e0 c\u00f4t\u00e9 du bouton \"Supprimer\" pour chaque vaisseau.</li> <li>Lorsque vous cliquez sur \"Modifier\", remplissez le formulaire (vous pouvez utiliser le m\u00eame que pour la cr\u00e9ation) avec les donn\u00e9es actuelles du vaisseau.</li> <li>Modifiez le texte du bouton \"Lancer\" en \"Mettre \u00e0 jour\".</li> <li>Lors de la soumission du formulaire, envoyez une requ\u00eate <code>PUT</code> \u00e0 <code>/spaceships/{id}</code> avec le corps complet de l'objet.</li> <li>Apr\u00e8s une mise \u00e0 jour r\u00e9ussie, mettez \u00e0 jour la liste de la flotte.</li> </ol> <p>Indice : Vous aurez besoin de <code>fetch</code> avec <code>method: 'PUT'</code>, les en-t\u00eates <code>Content-Type</code> et <code>body</code> avec <code>JSON.stringify()</code>, exactement comme dans la requ\u00eate <code>POST</code>.</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/3/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Quel param\u00e8tre `fetch` est utilis\u00e9 pour transmettre des donn\u00e9es dans le corps de la requ\u00eate ?</p>  a) `data`  b) `body`  c) `payload` <p>2. L'en-t\u00eate `'Content-Type': 'application/json'` indique au serveur que...</p>  a) Le client s'attend \u00e0 recevoir une r\u00e9ponse au format JSON  b) Le client envoie des donn\u00e9es dans le corps de la requ\u00eate au format JSON  c) La connexion doit \u00eatre chiffr\u00e9e <p>3. Que fait la fonction `JSON.stringify(obj)` en JavaScript ?</p>  a) Convertit une cha\u00eene JSON en objet  b) V\u00e9rifie la validit\u00e9 de l'objet  c) Convertit un objet JavaScript en cha\u00eene JSON <p>4. Pour envoyer une requ\u00eate `DELETE` avec `fetch`, il faut absolument indiquer :</p>  a) Un corps `body` vide  b) `method: 'DELETE'`  c) L'en-t\u00eate `Authorization` <p>5. La d\u00e9l\u00e9gation d'\u00e9v\u00e9nements en JavaScript, c'est quand...</p>  a) Nous attachons un seul gestionnaire \u00e0 l'\u00e9l\u00e9ment parent au lieu de plusieurs aux enfants  b) Nous transf\u00e9rons le droit d'ex\u00e9cuter une fonction \u00e0 un autre script  c) L'\u00e9v\u00e9nement se produit avec un d\u00e9lai V\u00e9rifier <p>resultsHTML += <code>&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Votre score : ${score} sur ${Object.keys(correctAnswers).length}&lt;/b&gt;&lt;/p&gt;</code>;     resultsContainer.innerHTML = resultsHTML;     resultsContainer.style.display = 'block';   } </p> <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Votre Centre de Contr\u00f4le de Mission (CCM) dispose maintenant d'un ensemble complet de commandes pour g\u00e9rer la flotte !</p> <ul> <li>\u2705 Vous avez appris \u00e0 envoyer des requ\u00eates <code>POST</code> avec un corps et des en-t\u00eates pour cr\u00e9er de nouvelles ressources.</li> <li>\u2705 Vous avez impl\u00e9ment\u00e9 des requ\u00eates <code>DELETE</code> pour d\u00e9sactiver les appareils obsol\u00e8tes.</li> <li>\u2705 Vous avez re\u00e7u la t\u00e2che d'impl\u00e9menter une requ\u00eate <code>PUT</code>, consolidant ainsi vos connaissances.</li> </ul> <p>Le contr\u00f4le total est \u00e9tabli ! Mais que faire si la connexion est interrompue ou si le serveur signale une erreur ? Dans le prochain chapitre, nous allons cr\u00e9er un syst\u00e8me centralis\u00e9 de gestion des erreurs c\u00f4t\u00e9 front-end.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>Assurez-vous que le formulaire de cr\u00e9ation d'un nouveau vaisseau fonctionne et qu'apr\u00e8s une cr\u00e9ation r\u00e9ussie, la liste sur la page est mise \u00e0 jour.</li> <li>V\u00e9rifiez que le bouton \"D\u00e9sactiver l'appareil\" fonctionne, demande confirmation et supprime le vaisseau de la liste.</li> <li>Essayez de cr\u00e9er un vaisseau avec des donn\u00e9es non valides (par exemple, avec un nom tr\u00e8s court) et observez l'erreur que votre serveur FastAPI renverra.</li> </ul> <p>\u26a0\ufe0f En cas d'erreurs :</p> <ul> <li>Erreur <code>422</code> du serveur : Il est probable que les donn\u00e9es que vous envoyez ne passent pas la validation Pydantic. V\u00e9rifiez la console du navigateur \u2014 <code>errorData.detail</code> indiquera le champ probl\u00e9matique.</li> <li>Erreur <code>415 Unsupported Media Type</code> : Vous avez oubli\u00e9 d'ajouter l'en-t\u00eate <code>'Content-Type': 'application/json'</code>.</li> <li>Les boutons de suppression ne fonctionnent pas : V\u00e9rifiez si la d\u00e9l\u00e9gation d'\u00e9v\u00e9nements fonctionne correctement et si vous r\u00e9cup\u00e9rez correctement <code>shipId</code> \u00e0 partir de <code>data-ship-id</code>.</li> </ul>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/4/","title":"Chapitre 4.4 : Gestion des erreurs","text":"<p>Temps d'\u00e9tude : 45 minutes</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/4/#1-gestion-des-erreurs-protocoles-durgence-du-mcc","title":"1. Gestion des erreurs : protocoles d'urgence du MCC","text":"<p>Dans l'espace, tout peut mal tourner : une \u00e9ruption solaire peut interrompre les communications, l'ordinateur de bord du vaisseau peut tomber en panne, et une commande venant de la Terre peut contenir des coordonn\u00e9es incorrectes.</p> <p>La gestion des erreurs sur le frontend est l'\u00e9quivalent des protocoles d'urgence de votre MCC. Ils doivent :</p> <ul> <li>\ud83d\udea8 Emp\u00eacher l'interface enti\u00e8re de \"planter\" \u00e0 cause d'une seule commande d\u00e9fectueuse.</li> <li>\ud83d\udce1 Informer clairement l'op\u00e9rateur (utilisateur) de ce qui n'a pas fonctionn\u00e9.</li> <li>\ud83d\udd27 Proposer des actions ult\u00e9rieures possibles.</li> </ul> <p>\ud83d\udca1 Analogie spatiale :</p> <p>Si un signal <code>500 Internal Server Error</code> est re\u00e7u du vaisseau, l'\u00e9cran du MCC ne doit pas afficher \"Erreur JavaScript critique \u00e0 la ligne 57\". Au lieu de cela, il devrait y avoir : \"\ud83d\udea8 D\u00e9faillance \u00e0 bord du vaisseau ! Les ing\u00e9nieurs ont d\u00e9j\u00e0 \u00e9t\u00e9 notifi\u00e9s. Veuillez r\u00e9essayer la commande ult\u00e9rieurement.\"</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/4/#2-types-danomalies-spatiales","title":"2. Types d'\"anomalies spatiales\"","text":"<p>Sur le frontend, nous rencontrons trois types principaux d'erreurs lors de l'interaction avec une API :</p> <ol> <li>Erreurs r\u00e9seau : La connexion au serveur n'a pas \u00e9t\u00e9 \u00e9tablie. L'antenne ne fonctionne pas, le c\u00e2ble est coup\u00e9. <code>fetch</code> \"tombera\" dans le bloc <code>.catch()</code>.</li> <li>Erreurs client (4xx) : La commande venant de la Terre \u00e9tait incorrecte. ID invalide, erreur de validation. Le serveur r\u00e9pond, mais avec un statut <code>4xx</code>.</li> <li>Erreurs serveur (5xx) : D\u00e9faillance sur le vaisseau lui-m\u00eame. Probl\u00e8me dans le code de l'API. Le serveur r\u00e9pond, mais avec un statut <code>500+</code>.</li> </ol> <p>Nous avons d\u00e9j\u00e0 commenc\u00e9 \u00e0 les g\u00e9rer avec <code>try...catch</code> et la v\u00e9rification de <code>response.ok</code>. Faisons maintenant cela de mani\u00e8re centralis\u00e9e.</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/4/#3-fonction-de-gestion-centralisee","title":"3. Fonction de gestion centralis\u00e9e","text":"<p>R\u00e9p\u00e9ter le m\u00eame code <code>try...catch</code> dans chaque fonction est une mauvaise pratique. Cr\u00e9ons un \"wrapper\" universel pour nos requ\u00eates <code>fetch</code>.</p> <p>\u00c9tape 1 : Cr\u00e9er <code>api.js</code> Cr\u00e9ez un nouveau fichier <code>api.js</code> \u00e0 c\u00f4t\u00e9 de <code>app.js</code>. Nous y d\u00e9placerons toute la logique d'interaction avec l'API. <pre><code>// api.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\n/**\n * Fonction universelle pour ex\u00e9cuter des requ\u00eates vers l'API.\n * G\u00e8re les erreurs et retourne du JSON.\n * @param {string} endpoint - Point d'acc\u00e8s de l'API, par exemple, '/spaceships'\n * @param {object} options - Param\u00e8tres pour fetch (method, headers, body)\n */\nasync function apiRequest(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n\n    try {\n        const response = await fetch(url, options);\n\n        // Si la r\u00e9ponse n'est pas du tout du JSON, nous levons imm\u00e9diatement une erreur\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n            // Exception pour une requ\u00eate DELETE r\u00e9ussie qui n'a pas de corps\n            if (response.status === 204) return null;\n\n            throw new TypeError(`R\u00e9ponse non-JSON re\u00e7ue du serveur : ${response.statusText}`);\n        }\n\n        const data = await response.json();\n\n        if (!response.ok) {\n            // Si le serveur a renvoy\u00e9 du JSON avec une erreur (par exemple, detail de FastAPI)\n            const errorMessage = data.detail || `Erreur HTTP ! Statut : ${response.status}`;\n            throw new Error(errorMessage);\n        }\n\n        return data;\n\n    } catch (error) {\n        console.error(`Erreur de requ\u00eate API vers ${endpoint} :`, error);\n        // Nous \"relan\u00e7ons\" l'erreur pour qu'elle puisse \u00eatre intercept\u00e9e dans l'UI\n        throw error;\n    }\n}\n</code></pre></p> <p>\u00c9tape 2 : Inclure <code>api.js</code> dans <code>index.html</code> Il est important de l'inclure AVANT <code>app.js</code>, car <code>app.js</code> utilisera ses fonctions. <pre><code>&lt;!-- index.html --&gt;\n&lt;body&gt;\n    &lt;!-- ... --&gt;\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</code></pre></p> <p>\u00c9tape 3 : Refactoriser <code>app.js</code> Nous allons maintenant r\u00e9\u00e9crire nos fonctions en utilisant le nouveau <code>apiRequest</code>. <pre><code>// app.js\n\n// const API_BASE_URL = ...; // Cette ligne peut \u00eatre supprim\u00e9e, elle est maintenant dans api.js\n\n// ...\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;Chargement de la t\u00e9l\u00e9m\u00e9trie...&lt;/li&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- Nous utilisons notre wrapper !\n\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;Aucun appareil n\\'est enregistr\u00e9 dans le registre.&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; { /* ... le reste du code d'affichage ... */ });\n    } catch (error) {\n        fleetList.innerHTML = `&lt;li&gt;\ud83d\udd34 Erreur de chargement de la flotte : ${error.message}&lt;/li&gt;`;\n    }\n}\n\nasync function createShip(event) {\n    event.preventDefault();\n    const shipData = { /* ... collecte des donn\u00e9es du formulaire ... */ };\n\n    try {\n        createStatusMessage.textContent = 'Envoi de la commande de lancement...';\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(shipData)\n        };\n        const newShip = await apiRequest('/spaceships', options); // &lt;-- Nous utilisons notre wrapper !\n\n        createStatusMessage.textContent = `\ud83d\ude80 Lancement r\u00e9ussi ! L'appareil a l'ID : ${newShip.id}`;\n        createShipForm.reset();\n        fetchAndDisplayFleet();\n    } catch (error) {\n        createStatusMessage.textContent = `\ud83d\udd34 Erreur : ${error.message}`;\n    }\n}\n\n// R\u00e9\u00e9crivez les autres fonctions (fetchShipById, deleteShip) de la m\u00eame mani\u00e8re !\n</code></pre> D\u00e9sormais, toute la logique de gestion des erreurs r\u00e9seau, de v\u00e9rification de <code>response.ok</code> et d'analyse du JSON se trouve au m\u00eame endroit, et le code dans <code>app.js</code> est devenu beaucoup plus propre et lisible.</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/4/#4-affichage-des-erreurs-a-lutilisateur","title":"4. Affichage des erreurs \u00e0 l'utilisateur","text":"<p>Une bonne interface ne doit pas se contenter d'\u00e9crire l'erreur dans la console, mais la montrer \u00e0 l'utilisateur sous une forme compr\u00e9hensible.</p> <p>Exemple : Am\u00e9lioration de <code>createShip</code> Notre code le fait d\u00e9j\u00e0 : <code>createStatusMessage.textContent = ...</code>. Mais on peut faire encore mieux en cr\u00e9ant une fonction universelle pour afficher les notifications.</p> <p>Ajouter \u00e0 <code>app.js</code> : <pre><code>// app.js\nfunction showNotification(message, isError = false) {\n    const notificationArea = document.getElementById('create-status-message'); // ou un autre \u00e9l\u00e9ment\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? 'red' : 'green';\n}\n\n// Utilisation dans createShip :\nasync function createShip(event) {\n    // ...\n    try {\n        // ...\n        const newShip = await apiRequest('/spaceships', options);\n        showNotification(`\ud83d\ude80 Lancement r\u00e9ussi ! ID : ${newShip.id}`);\n        // ...\n    } catch (error) {\n        showNotification(`\ud83d\udd34 Erreur : ${error.message}`, true);\n    }\n}\n</code></pre> Nous avons maintenant un m\u00e9canisme unifi\u00e9 pour afficher \u00e0 la fois les messages de succ\u00e8s et les erreurs.</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/4/#quiz-de-consolidation","title":"Quiz de consolidation","text":"<p>1. Le bloc `.catch()` dans une promesse `fetch` se d\u00e9clenchera si...</p>  a) Le serveur a renvoy\u00e9 une erreur 404 Not Found  b) Une erreur r\u00e9seau s'est produite (par exemple, pas d'internet)  c) Le serveur a renvoy\u00e9 une erreur 500 Internal Server Error <p>2. Pourquoi est-il n\u00e9cessaire d'avoir une fonction de gestion centralis\u00e9e pour les requ\u00eates API ?</p>  a) Pour \u00e9viter la duplication de code de gestion des erreurs et rendre la logique UI plus propre  b) Pour que toutes les requ\u00eates soient envoy\u00e9es simultan\u00e9ment  c) C'est une exigence de la norme Fetch API <p>3. `response.headers.get('content-type')` est utilis\u00e9 pour...</p>  a) D\u00e9finir un en-t\u00eate dans une requ\u00eate sortante  b) V\u00e9rifier le type de contenu dans la r\u00e9ponse re\u00e7ue du serveur  c) Obtenir tous les types de contenu disponibles <p>4. `throw new Error(...)` \u00e0 l'int\u00e9rieur de `try...catch` ou `.then()` est utilis\u00e9 pour...</p>  a) Arr\u00eater l'ex\u00e9cution de tout le JavaScript sur la page  b) \"Faire \u00e9chouer\" la promesse et transf\u00e9rer le contr\u00f4le au bloc `.catch()` le plus proche  c) Afficher un message dans une `alert` <p>5. Pourquoi est-il important d'afficher les erreurs \u00e0 l'utilisateur, et pas seulement dans la console ?</p>  a) Parce que la plupart des utilisateurs ne regardent pas la console  b) Pour que l'interface soit compr\u00e9hensible et pr\u00e9visible  c) Les deux options sont valables V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez renforc\u00e9 votre MCC en cr\u00e9ant des protocoles d'urgence fiables.</p> <ul> <li>\ud83d\udee1\ufe0f Vous comprenez la diff\u00e9rence entre les erreurs r\u00e9seau, client et serveur.</li> <li>\u2699\ufe0f Vous avez cr\u00e9\u00e9 une fonction <code>apiRequest</code> centralis\u00e9e pour g\u00e9rer toutes les requ\u00eates, \u00e9vitant ainsi la duplication de code.</li> <li>\ud83d\udce1 Votre interface est d\u00e9sormais capable d'informer correctement l'utilisateur des erreurs, la rendant plus conviviale et fiable. Boucliers d'urgence lev\u00e9s ! Mais qu'est-ce qui est mieux : les cha\u00eenes <code>.then()</code> ou le <code>async/await</code> moderne ? Dans le chapitre suivant, nous analyserons les deux approches et comprendrons quand utiliser laquelle.</li> </ul> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>V\u00e9rifiez que votre code dans <code>app.js</code> est correctement refactoris\u00e9 et utilise la nouvelle fonction <code>apiRequest</code>.</li> <li>Essayez d'arr\u00eater le serveur FastAPI et de cliquer sur le bouton \"Demander des donn\u00e9es\". Vous devriez voir une erreur de connexion sur la page.</li> <li>Essayez de cr\u00e9er un vaisseau avec des donn\u00e9es non valides. Vous devriez voir un message d'erreur de validation provenant de FastAPI.</li> </ul> <p>\u26a0\ufe0f En cas d'erreurs :</p> <ul> <li><code>apiRequest is not defined</code> : Assurez-vous d'avoir connect\u00e9 <code>api.js</code> dans <code>index.html</code> avant <code>app.js</code>.</li> <li>V\u00e9rifiez la console du navigateur pour d'autres erreurs de syntaxe en JavaScript.</li> </ul>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/5/","title":"Chapitre 4.5 : Async/await vs Promise","text":"<p>Temps d'\u00e9tude : 30 minutes</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/5/#1-asynchronisme-deux-manieres-de-gerer-la-communication-spatiale","title":"1. Asynchronisme : Deux mani\u00e8res de g\u00e9rer la \"communication spatiale\"","text":"<p>Imaginez que le Centre de Contr\u00f4le de Mission (CCM) envoie une commande \u00e0 Mars. La r\u00e9ponse n'arrivera que dans quelques minutes. Comment organiser le travail pendant ce temps ?</p> <p>M\u00e9thode 1 : \"Protocole de rappel\" (Promise avec <code>.then()</code>) Vous envoyez une commande et donnez l'instruction : \"QUAND la r\u00e9ponse arrivera, ALORS ex\u00e9cute cette fonction\". Cela ressemble \u00e0 une cha\u00eene d'\u00e9v\u00e9nements.</p> <p>M\u00e9thode 2 : \"Mode d'attente\" (Async/await) Vous dites : \"Je VAIS ATTENDRE la r\u00e9ponse \u00e0 cette commande, mais je ne bloquerai pas les autres pupitres de commande\". C'est comme si vous mettiez en pause l'ex\u00e9cution de cette t\u00e2che sp\u00e9cifique, permettant au reste du CCM de continuer \u00e0 fonctionner.</p> <p>Les deux m\u00e9thodes r\u00e9solvent la m\u00eame t\u00e2che : la gestion des op\u00e9rations asynchrones. <code>async/await</code> est simplement une syntaxe plus moderne et lisible qui fonctionne \"au-dessus\" des promesses.</p> <p>\ud83d\udca1 Analogie spatiale :</p> <ul> <li>Promise avec <code>.then()</code> : C'est comme \u00e9crire sur un post-it : \"Quand le rover martien enverra la photo, la transmettre au d\u00e9partement d'analyse.\"</li> <li>Async/await : C'est comme dire \u00e0 un assistant : \"Attendez la photo du rover martien, pendant ce temps je m'occupe des calculs pour le lancement d'une nouvelle fus\u00e9e.\"</li> </ul>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/5/#2-promise-avec-then-la-chaine-de-commandes-classique","title":"2. Promise avec <code>.then()</code> : La cha\u00eene de commandes classique","text":"<p>C'est la mani\u00e8re fondamentale de travailler avec l'asynchronisme en JavaScript, que nous avons utilis\u00e9e au chapitre 4.1.</p> <p>Rappelons notre premier code : <pre><code>function getIssPositionWithPromises() {\n    console.log('Envoi de la requ\u00eate via le protocole \"Promise\"...');\n\n    fetch('http://api.open-notify.org/iss-now.json')\n        .then(response =&gt; {\n            // \u00c9tape 1 : R\u00e9ponse re\u00e7ue\n            if (!response.ok) {\n                throw new Error(`Erreur HTTP : ${response.status}`);\n            }\n            return response.json(); // On retourne une nouvelle promesse\n        })\n        .then(data =&gt; {\n            // \u00c9tape 2 : Donn\u00e9es pars\u00e9es\n            console.log('Donn\u00e9es via le protocole \"Promise\" re\u00e7ues :', data.iss_position);\n        })\n        .catch(error =&gt; {\n            // \u00c9tape 3 (Erreur) : Quelque chose s'est mal pass\u00e9 \u00e0 l'une des \u00e9tapes\n            console.error('Panne de communication via le protocole \"Promise\" :', error);\n        });\n\n    console.log('...commande envoy\u00e9e, le CCM continue son travail...');\n}\n</code></pre></p> <p>Avantages :</p> <ul> <li>Cha\u00eene d'actions explicite.</li> <li>Convient bien aux op\u00e9rations s\u00e9quentielles simples.</li> </ul> <p>Inconv\u00e9nients :</p> <ul> <li>\"Enfer des rappels\" (Callback Hell) : Avec un grand nombre d'op\u00e9rations asynchrones imbriqu\u00e9es, le code peut se transformer en une \"\u00e9chelle\" de <code>.then()</code> difficile \u00e0 lire.</li> <li>La gestion des erreurs peut \u00eatre moins intuitive.</li> </ul>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/5/#3-asyncawait-le-style-synchrone-moderne","title":"3. Async/await : Le style synchrone moderne","text":"<p><code>async/await</code> est du \"sucre syntaxique\" au-dessus des promesses, qui permet d'\u00e9crire du code asynchrone comme s'il \u00e9tait synchrone.</p> <p>R\u00e8gles d'utilisation :</p> <ol> <li>Le mot-cl\u00e9 <code>await</code> ne peut \u00eatre utilis\u00e9 qu'\u00e0 l'int\u00e9rieur d'une fonction marqu\u00e9e comme <code>async</code>.</li> <li><code>await</code> est plac\u00e9 devant un appel qui retourne une promesse (par exemple, <code>fetch()</code> ou <code>response.json()</code>).</li> <li><code>await</code> \"suspend\" l'ex\u00e9cution de la fonction <code>async</code> jusqu'\u00e0 ce que la promesse soit r\u00e9solue, et retourne son r\u00e9sultat.</li> </ol> <p>Le m\u00eame code, r\u00e9\u00e9crit avec <code>async/await</code> : <pre><code>async function getIssPositionWithAsyncAwait() {\n    console.log('Envoi de la requ\u00eate via le protocole \"Async/await\"...');\n\n    try {\n        // \u00c9tape 1 : On attend la r\u00e9ponse du serveur\n        const response = await fetch('http://api.open-notify.org/iss-now.json');\n\n        if (!response.ok) {\n            throw new Error(`Erreur HTTP : ${response.status}`);\n        }\n\n        // \u00c9tape 2 : On attend que le corps de la r\u00e9ponse soit converti en JSON\n        const data = await response.json();\n\n        console.log('Donn\u00e9es via le protocole \"Async/await\" re\u00e7ues :', data.iss_position);\n    } catch (error) {\n        // \u00c9tape 3 (Erreur) : On attrape toute erreur du bloc try\n        console.error('Panne de communication via le protocole \"Async/await\" :', error);\n    }\n\n    console.log('...commande envoy\u00e9e, le CCM continue son travail...');\n}\n</code></pre></p> <p>Avantages :</p> <ul> <li>Lisibilit\u00e9 : Le code ressemble presque \u00e0 du code synchrone ordinaire, il est facile \u00e0 lire de haut en bas.</li> <li>Gestion des erreurs : Utilise le bloc <code>try...catch</code> standard et familier.</li> <li>D\u00e9bogage : Beaucoup plus facile \u00e0 d\u00e9boguer, car on peut placer des points d'arr\u00eat (breakpoints) sur chaque ligne avec <code>await</code>.</li> </ul> <p>Inconv\u00e9nients :</p> <ul> <li>Facile d'oublier <code>await</code> ou <code>async</code>, ce qui entra\u00eenera des erreurs.</li> </ul>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/5/#4-quand-utiliser-quel-protocole","title":"4. Quand utiliser quel protocole ?","text":"Situation Approche recommand\u00e9e Pourquoi ? La plupart des cas <code>async/await</code> Code plus propre, plus facile \u00e0 lire et \u00e0 d\u00e9boguer. C'est le standard moderne. Cha\u00eene simple de 1-2 actions Promise avec <code>.then()</code> Convient parfaitement, le code reste compact. Ex\u00e9cution parall\u00e8le de plusieurs requ\u00eates <code>Promise.all()</code> Cette m\u00e9thode permet de lancer plusieurs promesses simultan\u00e9ment et d'attendre qu'elles se terminent toutes. <code>async/await</code> se combine parfaitement avec elle. <p>Exemple avec <code>Promise.all()</code> : <pre><code>async function getParallelData() {\n    try {\n        // On lance les deux requ\u00eates simultan\u00e9ment\n        const [shipsResponse, launchesResponse] = await Promise.all([\n            fetch('https://api.spacexdata.com/v4/rockets'),\n            fetch('https://api.spacexdata.com/v4/launches/latest')\n        ]);\n\n        if (!shipsResponse.ok || !launchesResponse.ok) {\n            throw new Error('Une des requ\u00eates a \u00e9chou\u00e9 !');\n        }\n\n        const rockets = await shipsResponse.json();\n        const latestLaunch = await launchesResponse.json();\n\n        console.log(`Nombre total de fus\u00e9es dans la flotte : ${rockets.length}`);\n        console.log(`Dernier lancement : ${latestLaunch.name}`);\n    } catch (error) {\n        console.error('Erreur lors de la r\u00e9cup\u00e9ration des donn\u00e9es parall\u00e8les :', error);\n    }\n}\n</code></pre></p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/5/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. `async/await` est...</p>  a) Un remplacement des promesses qui fonctionne diff\u00e9remment  b) Une syntaxe plus pratique pour travailler avec les promesses  c) Un moyen de rendre JavaScript synchrone <p>2. Quel mot-cl\u00e9 est obligatoire pour une fonction \u00e0 l'int\u00e9rieur de laquelle `await` est utilis\u00e9 ?</p>  a) `promise`  b) `function`  c) `async` <p>3. Le principal avantage d' `async/await` par rapport \u00e0 `.then()` :</p>  a) Une vitesse d'ex\u00e9cution plus \u00e9lev\u00e9e  b) Une meilleure lisibilit\u00e9 du code et une gestion pratique des erreurs via `try...catch`  c) Fonctionne dans les anciens navigateurs sans polyfills <p>4. Que se passe-t-il si vous oubliez `await` avant `fetch()` \u00e0 l'int\u00e9rieur d'une fonction `async` ?</p>  a) Le code s'ex\u00e9cutera sans erreurs, mais la variable contiendra une promesse et non le r\u00e9sultat  b) JavaScript l\u00e8vera une erreur de syntaxe  c) La page \"g\u00e8lera\" en attendant une r\u00e9ponse <p>5. `Promise.all()` est utilis\u00e9 pour :</p>  a) L'ex\u00e9cution des promesses strictement dans l'ordre  b) Le lancement de plusieurs promesses en parall\u00e8le et l'attente de toutes  c) La s\u00e9lection de la plus rapide parmi plusieurs promesses V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez appris deux syntaxes pour g\u00e9rer les op\u00e9rations asynchrones et compris pourquoi <code>async/await</code> est pr\u00e9f\u00e9rable dans la plupart des projets modernes.</p> <ul> <li>\ud83d\udd17 Vous avez rafra\u00eechi vos connaissances sur les Promise avec <code>.then()</code>.</li> <li>\ud83d\udee0\ufe0f Vous avez profond\u00e9ment compris comment fonctionne <code>async/await</code> et ses avantages.</li> <li>\u26a1 Vous avez d\u00e9couvert <code>Promise.all</code> pour l'ex\u00e9cution de requ\u00eates parall\u00e8les.</li> </ul> <p>Les protocoles de communication ont \u00e9t\u00e9 \u00e9tudi\u00e9s ! Dans le dernier chapitre de cette section, nous rassemblerons toutes nos connaissances et ach\u00e8verons notre \"Centre de Contr\u00f4le de Mission\", en cr\u00e9ant une interface compl\u00e8te pour toutes les op\u00e9rations CRUD.</p> <p>\ud83d\udccc Pratique :</p> <ul> <li>R\u00e9\u00e9crivez toutes les fonctions de votre <code>app.js</code> qui utilisent encore <code>.then()</code>, en utilisant la syntaxe <code>async/await</code>.</li> <li>Essayez d'ajouter une autre requ\u00eate \u00e0 <code>Promise.all()</code> (par exemple, vers <code>https://api.spacexdata.com/v4/starlink</code>) et d'afficher les donn\u00e9es.</li> </ul> <p>\u26a0\ufe0f En cas d'erreurs :</p> <ul> <li><code>await is only valid in async functions</code> : Assurez-vous que la fonction o\u00f9 vous utilisez <code>await</code> est marqu\u00e9e comme <code>async</code>.</li> <li>La variable contient <code>[object Promise]</code> : Vous avez oubli\u00e9 de placer <code>await</code> devant la fonction qui retourne une promesse.</li> </ul>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/6/","title":"Chapitre 4.6 : Cr\u00e9ation d'une interface simple pour l'API","text":"<p>Temps d'\u00e9tude : 1 heure 15 minutes</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/6/#1-assemblage-final-lancement-du-centre-de-controle-de-vol","title":"1. Assemblage final : Lancement du \"Centre de Contr\u00f4le de Vol\"","text":"<p>Nous avons \u00e9tudi\u00e9 tous les syst\u00e8mes individuellement : configur\u00e9 \"l'antenne\" (<code>Fetch</code>), appris \u00e0 envoyer des \"commandes\" (<code>GET</code>, <code>POST</code>, <code>DELETE</code>), d\u00e9velopp\u00e9 des \"protocoles d'urgence\" (gestion des erreurs).</p> <p>Il est temps de rassembler tous les composants et de lancer notre CCV \u2013 une interface compl\u00e8te et interactive pour la gestion de la flotte spatiale.</p> <p>Notre objectif :</p> <ul> <li>Cr\u00e9er une interface unifi\u00e9e, propre et claire.</li> <li>Impl\u00e9menter un cycle CRUD complet : cr\u00e9ation, affichage, mise \u00e0 jour et suppression de vaisseaux.</li> <li>Ajouter un retour visuel pour l'utilisateur (chargement, succ\u00e8s, erreur).</li> </ul> <p>\ud83d\udca1 Analogie spatiale :</p> <p>Nous passons des consoles de test individuelles \u00e0 l'\u00e9cran principal du CCV. Il doit contenir tous les boutons et indicateurs n\u00e9cessaires pour qu'un seul op\u00e9rateur puisse g\u00e9rer toute la flotte sans basculer entre des dizaines de syst\u00e8mes diff\u00e9rents.</p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/6/#2-conception-de-linterface-tableau-de-bord","title":"2. Conception de l'interface : \"Tableau de bord\"","text":"<p>Nous aurons besoin d'un HTML plus structur\u00e9. Nous utiliserons des \"cartes\" pour afficher les vaisseaux et une fen\u00eatre modale pour leur \u00e9dition.</p> <p>Mise \u00e0 jour de <code>index.html</code> : <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;CCV v2.0 - Gestion de la Flotte&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt; &lt;!-- Connexion des styles --&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Panneau de contr\u00f4le de la flotte spatiale&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        &lt;section id=\"fleet-controls\"&gt;\n            &lt;button id=\"load-fleet-btn\"&gt;Actualiser la liste de la flotte&lt;/button&gt;\n            &lt;button id=\"show-create-form-btn\"&gt;Lancer un nouvel appareil&lt;/button&gt;\n        &lt;/section&gt;\n\n        &lt;section id=\"fleet-display\"&gt;\n            &lt;h2&gt;Composition actuelle de la flotte&lt;/h2&gt;\n            &lt;div id=\"fleet-list\" class=\"cards-container\"&gt;\n                &lt;!-- Les cartes des vaisseaux seront ici --&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n\n    &lt;!-- Fen\u00eatre modale pour la cr\u00e9ation/\u00e9dition (initialement cach\u00e9e) --&gt;\n    &lt;div id=\"modal\" class=\"modal-overlay\" style=\"display: none;\"&gt;\n        &lt;div class=\"modal-content\"&gt;\n            &lt;h2 id=\"modal-title\"&gt;Lancement d'un nouvel appareil&lt;/h2&gt;\n            &lt;form id=\"ship-form\"&gt;\n                &lt;input type=\"hidden\" id=\"ship-id\"&gt;\n                &lt;input type=\"text\" id=\"ship-name\" placeholder=\"Nom\" required&gt;\n                &lt;input type=\"text\" id=\"ship-type\" placeholder=\"Type\" required&gt;\n                &lt;input type=\"number\" id=\"ship-year\" placeholder=\"Ann\u00e9e de lancement\" required&gt;\n                &lt;input type=\"text\" id=\"ship-status\" placeholder=\"Statut\" required&gt;\n                &lt;div class=\"modal-actions\"&gt;\n                    &lt;button type=\"submit\" id=\"save-btn\"&gt;Enregistrer&lt;/button&gt;\n                    &lt;button type=\"button\" id=\"cancel-btn\"&gt;Annuler&lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/form&gt;\n            &lt;div id=\"notification-area\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/6/#3-ajout-du-design-spatial-stylecss","title":"3. Ajout du design \"spatial\" : <code>style.css</code>","text":"<p>Cr\u00e9ez le fichier <code>style.css</code> pour que notre CCV ait une apparence digne. <pre><code>/* style.css */\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background-color: #1a1a2e;\n    color: #e0e0e0;\n    margin: 0;\n    padding: 20px;\n}\nheader { text-align: center; margin-bottom: 20px; }\nbutton {\n    background-color: #4a4e69;\n    color: white;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\nbutton:hover { background-color: #6a6e94; }\n.cards-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 20px;\n}\n.card {\n    background-color: #2a2a4e;\n    border: 1px solid #4a4e69;\n    border-radius: 8px;\n    padding: 15px;\n}\n.card h3 { margin-top: 0; color: #9394a5; }\n.card-actions { margin-top: 15px; }\n\n/* Styles pour la fen\u00eatre modale */\n.modal-overlay {\n    position: fixed;\n    top: 0; left: 0;\n    width: 100%; height: 100%;\n    background-color: rgba(0,0,0,0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.modal-content {\n    background: #1a1a2e;\n    padding: 20px;\n    border-radius: 8px;\n    border: 1px solid #4a4e69;\n    width: 90%;\n    max-width: 500px;\n}\n#ship-form input {\n    width: calc(100% - 20px);\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 4px;\n    border: 1px solid #4a4e69;\n    background-color: #2a2a4e;\n    color: white;\n}\n.modal-actions { text-align: right; }\n</code></pre></p>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/6/#4-reconstitution-complete-de-la-logique-appjs","title":"4. Reconstitution compl\u00e8te de la logique : <code>app.js</code>","text":"<p>Nous allons maintenant \u00e9crire la version finale de <code>app.js</code>, en combinant toutes nos connaissances.</p> <pre><code>// app.js\n\n// --- \u00c9l\u00e9ments DOM ---\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetListContainer = document.getElementById('fleet-list');\nconst modal = document.getElementById('modal');\nconst modalTitle = document.getElementById('modal-title');\nconst shipForm = document.getElementById('ship-form');\nconst saveBtn = document.getElementById('save-btn');\nconst cancelBtn = document.getElementById('cancel-btn');\nconst showCreateFormBtn = document.getElementById('show-create-form-btn');\nconst notificationArea = document.getElementById('notification-area');\n\n// --- Fonctions pour l'UI ---\n\nfunction showNotification(message, isError = false) {\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? '#ff6b6b' : '#6bff6b';\n}\n\nfunction openModalForCreate() {\n    shipForm.reset();\n    document.getElementById('ship-id').value = '';\n    modalTitle.textContent = 'Lancement d'un nouvel appareil';\n    modal.style.display = 'flex';\n}\n\nfunction openModalForEdit(ship) {\n    shipForm.reset();\n    document.getElementById('ship-id').value = ship.id;\n    document.getElementById('ship-name').value = ship.name;\n    document.getElementById('ship-type').value = ship.type;\n    document.getElementById('ship-year').value = ship.launch_year;\n    document.getElementById('ship-status').value = ship.status;\n    modalTitle.textContent = `Modification : ${ship.name}`;\n    modal.style.display = 'flex';\n}\n\nfunction closeModal() {\n    modal.style.display = 'none';\n    notificationArea.textContent = '';\n}\n\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;Type : ${ship.type}&lt;/p&gt;\n        &lt;p&gt;Ann\u00e9e de lancement : ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;Statut : ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;Modifier&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;Mettre au rebut&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n\n// --- Logique API et affichage ---\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;Chargement de la t\u00e9l\u00e9m\u00e9trie...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships');\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;Aucun appareil dans le registre.&lt;/p&gt;';\n            return;\n        }\n        ships.forEach(ship =&gt; {\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;Erreur de chargement de la flotte : ${error.message}&lt;/p&gt;`;\n    }\n}\n\nasync function handleSaveShip(event) {\n    event.preventDefault();\n    const shipId = document.getElementById('ship-id').value;\n    const shipData = {\n        name: document.getElementById('ship-name').value,\n        type: document.getElementById('ship-type').value,\n        launch_year: parseInt(document.getElementById('ship-year').value),\n        status: document.getElementById('ship-status').value\n    };\n\n    try {\n        let response;\n        if (shipId) {\n            // Mise \u00e0 jour (PUT)\n            response = await apiRequest(`/spaceships/${shipId}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`L'appareil \"${response.name}\" a \u00e9t\u00e9 mis \u00e0 jour avec succ\u00e8s !`);\n        } else {\n            // Cr\u00e9ation (POST)\n            response = await apiRequest('/spaceships', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`L'appareil \"${response.name}\" a \u00e9t\u00e9 lanc\u00e9 avec succ\u00e8s ! ID : ${response.id}`);\n        }\n\n        setTimeout(() =&gt; {\n            closeModal();\n            fetchAndDisplayFleet();\n        }, 1500);\n\n    } catch (error) {\n        showNotification(error.message, true);\n    }\n}\n\nasync function handleDeleteShip(shipId) {\n    if (!confirm(`\u00cates-vous s\u00fbr de vouloir mettre au rebut l'appareil avec l'ID ${shipId} ?`)) return;\n\n    try {\n        await apiRequest(`/spaceships/${shipId}`, { method: 'DELETE' });\n        alert('L'appareil a \u00e9t\u00e9 mis au rebut avec succ\u00e8s.');\n        fetchAndDisplayFleet();\n    } catch (error) {\n        alert(`Erreur lors de la mise au rebut : ${error.message}`);\n    }\n}\n\n// --- Gestionnaires d'\u00e9v\u00e9nements ---\n\ndocument.addEventListener('DOMContentLoaded', fetchAndDisplayFleet);\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\nshowCreateFormBtn.addEventListener('click', openModalForCreate);\ncancelBtn.addEventListener('click', closeModal);\nshipForm.addEventListener('submit', handleSaveShip);\n\nfleetListContainer.addEventListener('click', async (event) =&gt; {\n    const target = event.target;\n    if (target.classList.contains('delete-btn')) {\n        handleDeleteShip(target.dataset.shipId);\n    }\n    if (target.classList.contains('edit-btn')) {\n        try {\n            const ship = await apiRequest(`/spaceships/${target.dataset.shipId}`);\n            openModalForEdit(ship);\n        } catch (error) {\n            alert(`Impossible de charger les donn\u00e9es pour la modification : ${error.message}`);\n        }\n    }\n});\n</code></pre>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/6/#5-tests-finaux","title":"5. Tests finaux","text":"<ol> <li>Lancez le serveur FastAPI : <code>uvicorn main:app --reload</code></li> <li>Ouvrez <code>index.html</code> dans le navigateur (via Live Server).</li> <li>V\u00e9rifiez le cycle complet :<ul> <li>La liste des vaisseaux doit se charger automatiquement.</li> <li>Cliquez sur \"Lancer un nouvel appareil\", remplissez le formulaire et enregistrez. Assurez-vous que le nouveau vaisseau appara\u00eet dans la liste.</li> <li>Cliquez sur \"Modifier\" sur n'importe quel vaisseau, modifiez les donn\u00e9es et enregistrez. Assurez-vous que les informations ont \u00e9t\u00e9 mises \u00e0 jour.</li> <li>Cliquez sur \"Mettre au rebut\" sur n'importe quel vaisseau, confirmez l'action. Assurez-vous qu'il dispara\u00eet de la liste.</li> <li>V\u00e9rifiez tous les sc\u00e9narios d'erreur (donn\u00e9es incorrectes, arr\u00eat du serveur).</li> </ul> </li> </ol>"},{"location":"fr/Chapitre%204%20-%20Utilisation%20de%20l%27API%20sur%20le%20front-end/6/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Une fen\u00eatre modale dans une interface web est...</p>  a) Un nouveau tag en HTML6  b) Une bo\u00eete de dialogue pop-up qui bloque le reste de l'interface  c) Une fen\u00eatre pour afficher les erreurs de la console <p>2. L'\u00e9v\u00e9nement `DOMContentLoaded` se produit quand...</p>  a) Toutes les images et les styles sont enti\u00e8rement charg\u00e9s  b) Le navigateur a construit l'arbre DOM \u00e0 partir du HTML, mais les ressources peuvent encore \u00eatre en cours de chargement  c) Une erreur de chargement de la page s'est produite <p>3. Pourquoi, dans la version finale, utilisons-nous un seul formulaire pour la cr\u00e9ation et l'\u00e9dition ?</p>  a) Pour \u00e9viter la duplication du code HTML et simplifier la logique  b) Parce que le navigateur ne permet pas d'avoir plus d'un formulaire par page  c) C'est une exigence de FastAPI <p>4. `data-ship-id=\"${ship.id}\"` \u2014 c'est un exemple de...</p>  a) Classe CSS  b) Variable JavaScript  c) Attribut de donn\u00e9es personnalis\u00e9 pour stocker des informations en HTML <p>5. Le refactoring de code (par exemple, le d\u00e9placement de la logique dans `api.js`) est n\u00e9cessaire pour...</p>  a) Rendre le code plus complexe pour le prot\u00e9ger contre la copie  b) Am\u00e9liorer la lisibilit\u00e9, la maintenabilit\u00e9 et la r\u00e9utilisation du code  c) R\u00e9duire la taille du fichier final V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre</p> <p>Vous avez achev\u00e9 avec succ\u00e8s la construction et le lancement de votre \"Centre de Contr\u00f4le de Mission\".</p> <ul> <li>\ud83d\udda5\ufe0f Vous avez cr\u00e9\u00e9 une interface HTML/CSS structur\u00e9e et stylis\u00e9e.</li> <li>\u2699\ufe0f Vous avez \u00e9crit un code JavaScript propre et modulaire, impl\u00e9mentant un cycle CRUD complet.</li> <li>\ud83d\udef0\ufe0f Votre frontend peut d\u00e9sormais g\u00e9rer enti\u00e8rement le backend cr\u00e9\u00e9 avec FastAPI.</li> </ul> <p>F\u00e9licitations pour avoir termin\u00e9 le Chapitre 4 ! Vous avez parcouru tout le chemin, de l'envoi d'une simple requ\u00eate <code>fetch</code> \u00e0 la cr\u00e9ation d'une application web compl\u00e8te qui interagit avec votre propre API.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/1/","title":"Chapitre 5.1: Les mod\u00e8les Blade dans Laravel","text":"<p>Temps d'\u00e9tude: 40 minutes</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/1/#1-quest-ce-que-blade-votre-plan-intelligent","title":"1. Qu'est-ce que Blade? Votre \"plan intelligent\"","text":"<p>Jusqu'\u00e0 pr\u00e9sent, nous avons travaill\u00e9 avec deux extr\u00eames: un <code>index.html</code> pur et une r\u00e9ponse JSON pure d'une API. Mais comment cr\u00e9er des pages web compl\u00e8tes qui affichent dynamiquement des donn\u00e9es de notre backend?</p> <p>Blade est le moteur de templating int\u00e9gr\u00e9 \u00e0 Laravel. Il nous permet d'\u00e9crire du HTML ordinaire, mais avec des \"super-pouvoirs\":</p> <ul> <li>Ins\u00e9rer des variables et ex\u00e9cuter du code PHP avec une syntaxe \u00e9l\u00e9gante.</li> <li>Cr\u00e9er des \"layouts\" de pages r\u00e9utilisables (en-t\u00eates, pieds de page).</li> <li>Utiliser des boucles et des conditions directement dans le code HTML.</li> <li>Se prot\u00e9ger automatiquement des attaques XSS.</li> </ul> <p>\ud83d\udca1 Analogie spatiale:</p> <p>Imaginez que le HTML est un simple plan de vaisseau spatial. Blade est un syst\u00e8me de CAO avanc\u00e9. Vous ne dessinez pas seulement des lignes, vous ajoutez des objets \"intelligents\". Vous dites: \"Voici la liste de l'\u00e9quipage\", et Blade demande automatiquement les donn\u00e9es et la remplit. \"Voici l'\u00e9cran principal\", et Blade ins\u00e8re l'interface standard.</p> <p>Tous les fichiers Blade ont l'extension <code>.blade.php</code> et sont stock\u00e9s dans le dossier <code>resources/views/</code>.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/1/#2-les-bases-de-la-syntaxe-affichage-des-donnees","title":"2. Les bases de la syntaxe: Affichage des donn\u00e9es","text":"<p>La chose la plus simple que Blade fait est d'afficher des donn\u00e9es.</p> <p>Syntaxe <code>{{ }}</code></p> <p>Ces doubles accolades sont la commande pour Blade \"prendre une variable et afficher son contenu en toute s\u00e9curit\u00e9\".</p> <p>Exemple:</p> <ol> <li> <p>Route dans <code>routes/web.php</code>: <pre><code>&lt;?php\nRoute::get('/mission-briefing', function () {\n    $mission = '\u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 Kepler-186';\n    return view('briefing', ['mission_name' =&gt; $mission]); // indique \u00e0 Laravel de trouver le fichier resources/views/briefing.blade.php\n});\n</code></pre></p> <ul> <li><code>view('briefing', ...)</code> indique \u00e0 Laravel de trouver le fichier <code>resources/views/briefing.blade.php</code>.</li> <li><code>['mission_name' =&gt; $mission]</code> \u2014 c'est un tableau de donn\u00e9es que nous \"passons\" \u00e0 notre vue.</li> </ul> </li> <li> <p>Vue dans <code>resources/views/briefing.blade.php</code>: <pre><code>&lt;h1&gt;Mission du Centre de Contr\u00f4le&lt;/h1&gt;\n&lt;p&gt;T\u00e2che actuelle: {{ $mission_name }}&lt;/p&gt;\n</code></pre></p> </li> </ol> <p>R\u00e9sultat dans le navigateur \u00e0 l'adresse <code>/mission-briefing</code>: <pre><code>&lt;h1&gt;Mission du Centre de Contr\u00f4le&lt;/h1&gt;\n&lt;p&gt;T\u00e2che actuelle: Explorer le syst\u00e8me Kepler-186&lt;/p&gt;\n</code></pre></p> <p>\ud83d\udee1\ufe0f Important \u00e0 savoir: Blade \u00e9chappe automatiquement toutes les donn\u00e9es \u00e0 l'int\u00e9rieur de <code>{{ }}</code>. Cela signifie que si une variable contient des balises HTML ou un script malveillant, elles seront affich\u00e9es comme du texte brut et non ex\u00e9cut\u00e9es. C'est une protection int\u00e9gr\u00e9e contre les attaques XSS.</p> <p>Pour afficher du HTML non \u00e9chapp\u00e9 (faites-le avec prudence!), utilisez la syntaxe <code>{!! $variable !!}</code>.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/1/#3-directives-ajouter-de-la-logique-au-html","title":"3. Directives: Ajouter de la logique au HTML","text":"<p>Les directives Blade commencent par le symbole <code>@</code>. Elles permettent d'utiliser des boucles, des conditions et bien plus encore.</p> <p>Conditions (<code>@if</code>, <code>@else</code>): <pre><code>@if($planet-&gt;is_habitable)\n    &lt;p style=\"color: green;\"&gt;La plan\u00e8te est habitable!&lt;/p&gt;\n@else\n    &lt;p style=\"color: red;\"&gt;Combinaison spatiale requise. L'atmosph\u00e8re est hostile.&lt;/p&gt;\n@endif\n</code></pre></p> <p>Boucles (<code>@foreach</code>, <code>@forelse</code>):</p> <p><code>@forelse</code> est une directive tr\u00e8s pratique qui combine une boucle et une v\u00e9rification de vide. <pre><code>&lt;h2&gt;Liste des plan\u00e8tes du syst\u00e8me:&lt;/h2&gt;\n&lt;ul&gt;\n    @forelse($planets as $planet)\n        &lt;li&gt;\n            {{ $loop-&gt;iteration }}. {{ $planet-&gt;name }}\n            &lt;!-- $loop - variable sp\u00e9ciale disponible dans la boucle --&gt;\n        &lt;/li&gt;\n    @empty\n        &lt;li&gt;Aucune plan\u00e8te d\u00e9tect\u00e9e dans ce syst\u00e8me.&lt;/li&gt;\n    @endforelse\n&lt;/ul&gt;\n</code></pre></p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/1/#4-layouts-et-sections-ne-vous-repetez-pas-dry","title":"4. Layouts et sections: Ne vous r\u00e9p\u00e9tez pas (DRY)","text":"<p>La fonctionnalit\u00e9 la plus puissante de Blade est la cr\u00e9ation de layouts r\u00e9utilisables. Vous n'avez pas besoin de copier l'en-t\u00eate et le pied de page du site sur chaque page.</p> <p>\u00c9tape 1: Cr\u00e9er un layout ma\u00eetre</p> <p>Cr\u00e9ez le fichier <code>resources/views/layouts/app.blade.php</code>: <pre><code>&lt;?php\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;title&gt;Centre de Contr\u00f4le - @yield('title')&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"{{ asset('css/style.css') }}\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Centre de Commandement de la Flotte Galactique&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        @yield('content') &lt;!-- Le contenu unique de la page sera ici --&gt;\n    &lt;/main&gt;\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command. Tous droits r\u00e9serv\u00e9s.&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> -   <code>@yield('title')</code> et <code>@yield('content')</code> sont des \"slots\" ou \"placeholders\".</p> <p>\u00c9tape 2: Cr\u00e9er une vue enfant qui utilise le layout</p> <p>Cr\u00e9ez le fichier <code>resources/views/planets/index.blade.php</code>: <pre><code>&lt;?php\n@extends('layouts.app') {{-- H\u00e9rite de notre layout ma\u00eetre --}}\n\n@section('title', 'Liste des plan\u00e8tes') {{-- Remplit la section 'title' --}}\n\n@section('content') {{-- Remplit la section principale 'content' --}}\n    &lt;h2&gt;Plan\u00e8tes enregistr\u00e9es&lt;/h2&gt;\n    &lt;p&gt;Ceci est une liste de tous les mondes que nous connaissons.&lt;/p&gt;\n    {{-- Votre boucle @forelse pour afficher les plan\u00e8tes peut \u00eatre ici --}}\n@endsection\n</code></pre></p> <p>Maintenant, lorsque Laravel rendra <code>planets.index</code>, il prendra d'abord <code>layouts.app</code>, puis ins\u00e9rera le contenu des sections <code>@section</code>.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/1/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Quelle extension ont les fichiers de mod\u00e8les Blade?</p>  a) .html  b) .blade.php  c) .php.blade <p>2. Comment afficher en toute s\u00e9curit\u00e9 une variable `$name` dans Blade?</p>  a)   b) {{ $name }}  c) [[$name]] <p>3. Quelle directive est utilis\u00e9e pour h\u00e9riter un layout ma\u00eetre?</p>  a) @include('layouts.app')  b) @layout('layouts.app')  c) @extends('layouts.app') <p>4. Que fait la directive `@yield('content')`?</p>  a) D\u00e9finit un placeholder (emplacement pour ins\u00e9rer du contenu)  b) Ins\u00e8re le contenu du fichier `content.blade.php`  c) Termine la section de contenu <p>5. Quelle directive est id\u00e9ale pour boucler sur un tableau qui peut \u00eatre vide?</p>  a) @foreach  b) @while  c) @forelse V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre:</p> <p>Vous avez appris les bases de Blade \u2014 un outil puissant pour cr\u00e9er des pages web dynamiques. Vous savez maintenant comment:</p> <ul> <li>Afficher des donn\u00e9es avec une protection automatique contre les XSS.</li> <li>Utiliser des directives pour ajouter de la logique (<code>@if</code>, <code>@forelse</code>).</li> <li>Cr\u00e9er des layouts r\u00e9utilisables \u00e0 l'aide de <code>@extends</code> et <code>@yield</code>.</li> </ul> <p>Nous avons pr\u00e9par\u00e9 les \"plans\" pour les panneaux de contr\u00f4le de notre vaisseau. Dans le chapitre suivant, nous cr\u00e9erons des \"panneaux\" (vues) sp\u00e9cifiques pour notre API et y afficherons des donn\u00e9es r\u00e9elles.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/2/","title":"Chapitre 5.2 : Cr\u00e9ation de vues simples pour l'API","text":"<p>Temps d'\u00e9tude : 45 minutes</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/2/#1-objectif-visualiser-les-donnees","title":"1. Objectif : Visualiser les donn\u00e9es","text":"<p>Notre API au Chapitre 2 est capable de renvoyer des donn\u00e9es au format JSON. C'est excellent pour les machines, mais les humains pr\u00e9f\u00e8rent voir les informations sur des pages web joliment con\u00e7ues. Notre objectif est de cr\u00e9er deux pages de ce type :</p> <ol> <li>Liste de toutes les plan\u00e8tes (<code>/planets</code>)</li> <li>Page d'une seule plan\u00e8te (<code>/planets/{id}</code>)</li> </ol> <p>Pour cela, nous utiliserons la combinaison \"Route \u2192 Contr\u00f4leur \u2192 Vue\".</p> <p>\ud83d\udca1 Analogie spatiale :</p> <p>Imaginez que le JSON de l'API sont des donn\u00e9es de t\u00e9l\u00e9m\u00e9trie brutes, juste un flux de chiffres. Notre t\u00e2che aujourd'hui est de cr\u00e9er deux \u00e9crans (deux \"vues\") au centre de contr\u00f4le :</p> <ul> <li>\u00c9cran g\u00e9n\u00e9ral : affiche le statut de tous les objets du syst\u00e8me (liste des plan\u00e8tes).</li> <li>\u00c9cran d\u00e9taill\u00e9 : en cliquant sur un objet, affiche toutes les informations le concernant (page d'une seule plan\u00e8te).</li> </ul>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/2/#2-etape-1-creation-du-controleur-pour-les-pages-web","title":"2. \u00c9tape 1 : Cr\u00e9ation du contr\u00f4leur pour les pages web","text":"<p>Pour la puret\u00e9 de l'architecture, il ne faut pas m\u00e9langer la logique de l'API et la logique des pages web dans un seul contr\u00f4leur. Nous allons cr\u00e9er un nouveau contr\u00f4leur sp\u00e9cifiquement pour afficher nos vues Blade.</p> <p>Ex\u00e9cutez dans le terminal : <pre><code>php artisan make:controller Web/PlanetPageController\n</code></pre> Nous le cr\u00e9ons dans le sous-dossier <code>Web</code> pour le s\u00e9parer des contr\u00f4leurs d'API.</p> <p>Ouvrez le fichier cr\u00e9\u00e9 <code>app/Http/Controllers/Web/PlanetPageController.php</code>.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/2/#etape-2-page-avec-la-liste-de-toutes-les-planetes","title":"\u00c9tape 2 : Page avec la liste de toutes les plan\u00e8tes","text":"<p>1. Cr\u00e9ation d'une m\u00e9thode dans le contr\u00f4leur : Dans <code>PlanetPageController</code>, ajoutez la m\u00e9thode <code>index</code> qui r\u00e9cup\u00e9rera toutes les plan\u00e8tes de la base de donn\u00e9es et les transmettra \u00e0 la vue. <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers\\Web;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Planet; // N'oubliez pas d'importer le mod\u00e8le\n\nclass PlanetPageController extends Controller\n{\n    /**\n     * Affiche la page avec la liste de toutes les plan\u00e8tes.\n     */\n    public function index()\n    {\n        // 1. R\u00e9cup\u00e9rons toutes les plan\u00e8tes de la BDD\n        $planets = Planet::all();\n\n        // 2. Retournons la vue et transmettons les donn\u00e9es\n        return view('planets.index', ['planets' =&gt; $planets]);\n    }\n}\n</code></pre></p> <p>2. Cr\u00e9ation de la vue Blade : Cr\u00e9ez le fichier <code>resources/views/planets/index.blade.php</code>. Nous utiliserons la mise en page cr\u00e9\u00e9e dans le chapitre pr\u00e9c\u00e9dent.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Planets&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n        }\n        .container {\n            max-width: 960px;\n            margin: 0 auto;\n        }\n        h2 {\n            color: #1a202c;\n        }\n        hr {\n            border: none;\n            border-top: 1px solid #e2e8f0;\n            margin: 1.5em 0;\n        }\n        .planet-list {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n            gap: 1.5em;\n        }\n        .planet-card {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 1.5em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n            transition: transform 0.2s;\n        }\n        .planet-card:hover {\n            transform: translateY(-5px);\n        }\n        .planet-card h3 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-card p {\n            margin-bottom: 0.5em;\n            color: #4a5568;\n        }\n        .planet-card a {\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .planet-card a:hover {\n            text-decoration: underline;\n        }\n        .no-planets {\n            color: #718096;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h2&gt;Liste de toutes les plan\u00e8tes connues&lt;/h2&gt;\n        &lt;hr&gt;\n        &lt;div class=\"planet-list\"&gt;\n            @forelse($planets as $planet)\n                &lt;div class=\"planet-card\"&gt;\n                    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n                    &lt;p&gt;Syst\u00e8me solaire : {{ $planet-&gt;solar_system }}&lt;/p&gt;\n                    &lt;p&gt;Diam\u00e8tre : {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n                    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;En savoir plus &amp;rarr;&lt;/a&gt;\n                &lt;/div&gt;\n            @empty\n                &lt;p class=\"no-planets\"&gt;Il n'y a aucune plan\u00e8te dans la base de donn\u00e9es. Veuillez ex\u00e9cuter les seeders.&lt;/p&gt;\n            @endforelse\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li><code>number_format(...)</code> est une fonction PHP standard pour un formatage agr\u00e9able des nombres. Elle peut \u00eatre utilis\u00e9e directement dans Blade.</li> </ul> <p>3. Cr\u00e9ation de la route dans <code>routes/web.php</code> : <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// ...\n\nRoute::get('/planets', [PlanetPageController::class, 'index']);\n</code></pre> Maintenant, si vous vous rendez \u00e0 l'adresse <code>/planets</code> dans votre navigateur, vous verrez la page avec la liste des plan\u00e8tes !</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/2/#4-etape-3-page-dune-seule-planete","title":"4. \u00c9tape 3 : Page d'une seule plan\u00e8te","text":"<p>1. Cr\u00e9ation d'une m\u00e9thode dans le contr\u00f4leur :</p> <p>Dans <code>PlanetPageController</code>, nous ajouterons la m\u00e9thode <code>show</code>. Gr\u00e2ce au Route Model Binding, Laravel trouvera automatiquement la plan\u00e8te par son ID et la transmettra \u00e0 la m\u00e9thode.</p> <pre><code>&lt;?php\n// \u00c0 l'int\u00e9rieur de la classe PlanetPageController\n/**\n * Affiche la page d'une plan\u00e8te sp\u00e9cifique.\n */\npublic function show(Planet $planet)\n{\n    // Laravel a d\u00e9j\u00e0 trouv\u00e9 la plan\u00e8te pour nous.\n    // Si elle n'est pas trouv\u00e9e, il retournera automatiquement une erreur 404.\n\n    return view('planets.show', ['planet' =&gt; $planet]);\n}\n</code></pre> <p>2. Cr\u00e9ation de la vue Blade :</p> <p>Cr\u00e9ez le fichier <code>resources/views/planets/show.blade.php</code>.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;{{ $planet-&gt;name }}&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n        }\n        .container {\n            max-width: 600px;\n            width: 100%;\n        }\n        .planet-detail {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 2em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n        }\n        .planet-detail h1 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-detail p {\n            margin-bottom: 1em;\n            color: #4a5568;\n            font-size: 1.1em;\n        }\n        .back-link {\n            display: inline-block;\n            margin-top: 1.5em;\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .back-link:hover {\n            text-decoration: underline;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"planet-detail\"&gt;\n            @if($planet-&gt;image_url)\n                &lt;img src=\"{{ $planet-&gt;image_url }}\" alt=\"Image de {{ $planet-&gt;name }}\" style=\"max-width: 100%; height: auto; border-radius: 0.5em; margin-bottom: 1em;\"&gt;\n            @endif\n            &lt;h1&gt;{{ $planet-&gt;name }}&lt;/h1&gt;\n            @if($planet-&gt;description)\n                &lt;p&gt;{{ $planet-&gt;description }}&lt;/p&gt;\n            @endif\n            &lt;p&gt;&lt;strong&gt;Syst\u00e8me solaire :&lt;/strong&gt; {{ $planet-&gt;solar_system }}&lt;/p&gt;\n            &lt;p&gt;&lt;strong&gt;Diam\u00e8tre :&lt;/strong&gt; {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n            &lt;a href=\"/planets\" class=\"back-link\"&gt;&amp;larr; Retour \u00e0 la liste des plan\u00e8tes&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>3. Cr\u00e9ation de la route dans <code>routes/web.php</code> : <pre><code>// Ajoutez cette route apr\u00e8s la route pour /planets\nRoute::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n</code></pre> -   Le nom du param\u00e8tre <code>{planet}</code> doit correspondre au nom de la variable dans la m\u00e9thode du contr\u00f4leur (<code>show(Planet $planet)</code>) pour que le Route Model Binding fonctionne correctement.</p> <p>Maintenant, en cliquant sur le lien \"En savoir plus\" sur la page de la liste, vous acc\u00e9derez \u00e0 la page d\u00e9taill\u00e9e d'une plan\u00e8te sp\u00e9cifique.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/2/#quiz-de-consolidation","title":"Quiz de consolidation","text":"<p>1. Quelle approche est la meilleure pratique pour s\u00e9parer la logique de l'API et des pages web ?</p>  a) Utiliser un seul contr\u00f4leur pour tout  b) Cr\u00e9er des contr\u00f4leurs distincts (par exemple, dans les dossiers `Web` et `Api`)  c) Placer toute la logique dans le fichier de routes <p>2. Que fait return view('planets.index', ['planets' =&gt; $planets]);?</p>  a) Renvoie un tableau JSON avec les donn\u00e9es des plan\u00e8tes  b) Rend le fichier resources/views/planets/index.blade.php et lui transmet la variable `$planets`  c) Redirige vers l'URL /planets/index <p>3. Qu'est-ce que le Route Model Binding dans le contexte de `show(Planet $planet)` ?</p>  a) Laravel lie manuellement la route au mod\u00e8le dans la configuration  b) Laravel trouve automatiquement dans la BDD l'enregistrement `Planet` par le param\u00e8tre de l'URL (`{planet}`)  c) Laravel cr\u00e9e une nouvelle plan\u00e8te si elle n'est pas trouv\u00e9e <p>4. Comment formater une date \u00e0 partir du champ `created_at` dans Blade ?</p>  a) {{ $planet-&gt;created_at-&gt;format('Y-m-d') }}  b) {{ format_date($planet-&gt;created_at) }}  c) Cela ne peut \u00eatre fait que dans le contr\u00f4leur <p>5. Si la route sp\u00e9cifie `/posts/{post}`, comment doit se pr\u00e9senter la signature de la m\u00e9thode dans le contr\u00f4leur pour que le Route Model Binding fonctionne ?</p>  a) public function show(Post $post)  b) public function show(Post $p)  c) public function show($post) V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez r\u00e9ussi \u00e0 cr\u00e9er une \"vitrine\" pour votre API en utilisant l'architecture Laravel MVC. Vous avez maintenant :</p> <ul> <li>Un contr\u00f4leur s\u00e9par\u00e9 pour la logique des pages web.</li> <li>Une page dynamique avec la liste de toutes les plan\u00e8tes, r\u00e9cup\u00e9rant les donn\u00e9es de la base de donn\u00e9es.</li> <li>Une page d\u00e9taill\u00e9e pour chaque plan\u00e8te utilisant le Route Model Binding.</li> <li>Deux routes web dans <code>routes/web.php</code> pour acc\u00e9der \u00e0 ces pages.</li> </ul> <p>Vous avez transform\u00e9 des donn\u00e9es brutes en informations claires et utiles pour l'utilisateur. Dans le chapitre suivant, nous ajouterons de l'interactivit\u00e9 en int\u00e9grant du JavaScript dans nos vues Blade pour interagir avec l'API sans recharger la page.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/3/","title":"Chapitre 5.3 : Int\u00e9gration de JavaScript dans les vues Laravel","text":"<p>Temps d'\u00e9tude : 50 minutes</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/3/#1-deux-approches-de-javascript-sur-le-web","title":"1. Deux approches de JavaScript sur le web","text":"<p>Jusqu'\u00e0 pr\u00e9sent, nous avons travaill\u00e9 avec le Server-Side Rendering (SSR) \u2014 le serveur (Laravel) g\u00e9n\u00e9rait le HTML pr\u00eat (via Blade) et l'envoyait au navigateur. C'est excellent pour le SEO et un premier chargement rapide.</p> <p>Maintenant, nous allons ajouter des Client-Side Interactions \u2014 le navigateur, une fois la page charg\u00e9e, ex\u00e9cutera du code JavaScript pour :</p> <ul> <li>Envoyer des requ\u00eates \u00e0 notre API sans recharger la page.</li> <li>Mettre \u00e0 jour dynamiquement des parties de la page (par exemple, ajouter une nouvelle plan\u00e8te \u00e0 la liste).</li> <li>Afficher des notifications et des fen\u00eatres modales.</li> </ul> <p>\ud83d\udca1 Analogie spatiale :</p> <p>Imaginez que le SSR est l'obtention d'une carte compl\u00e8te d'un syst\u00e8me stellaire, imprim\u00e9e au centre de contr\u00f4le (serveur). Vous voyez tous les objets au moment de l'impression.</p> <p>Le Client-Side JS est votre tablette personnelle (navigateur) qui se connecte en temps r\u00e9el aux satellites (API) et met \u00e0 jour la position des objets sur votre carte, sans demander une nouvelle carte papier au centre de contr\u00f4le.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/3/#2-ou-stocker-et-comment-inclure-le-code-js","title":"2. O\u00f9 stocker et comment inclure le code JS","text":"<p>Comme nous l'avons d\u00e9j\u00e0 \u00e9tabli, tous les actifs publics (CSS, JS, images) doivent se trouver dans le dossier <code>public</code>.</p> <p>Structure correcte :</p> <ol> <li>Fichiers source : Tout votre code JS principal doit se trouver dans <code>public/js/</code>. Par exemple, <code>public/js/planets.js</code>.</li> <li>Inclusion dans Blade : Utilisez l'aideur <code>asset()</code> pour g\u00e9n\u00e9rer l'URL correcte.</li> </ol> <p>Exemple d'inclusion dans le gabarit <code>layouts/app.blade.php</code> : <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    {{-- ... --}}\n&lt;/head&gt;\n&lt;body&gt;\n    {{-- ... header et main ... --}}\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command.&lt;/p&gt;\n    &lt;/footer&gt;\n\n    {{-- Il est pr\u00e9f\u00e9rable d'inclure les scripts \u00e0 la fin du corps pour acc\u00e9l\u00e9rer le rendu de la page --}}\n    &lt;script src=\"{{ asset('js/planets.js') }}\"&gt;&lt;/script&gt;\n    @stack('scripts') {{-- Nous cr\u00e9ons un \"slot\" pour les scripts d'une page sp\u00e9cifique --}}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <ul> <li><code>@stack('scripts')</code> est une directive Blade puissante. Elle permet aux vues enfants de \"pousser\" leur propre code JS \u00e0 cet endroit. C'est utile lorsqu'une page n\u00e9cessite un script unique et qu'une autre non.</li> </ul>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/3/#3-exemple-bouton-supprimer-avec-confirmation","title":"3. Exemple : Bouton \"Supprimer\" avec confirmation","text":"<p>Ajoutons un bouton \"Supprimer\" pour chaque plan\u00e8te sur la page de liste des plan\u00e8tes (<code>planets/index.blade.php</code>), qui fonctionnera via JavaScript et l'API Fetch.</p> <p>\u00c9tape 1 : Ajout du bouton dans <code>resources/views/planets/index.blade.php</code></p> <p>Modifiez la carte de la plan\u00e8te en ajoutant un bouton avec des attributs data : <pre><code>{{-- ... \u00e0 l'int\u00e9rieur de la boucle @forelse ... --}}\n&lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n    &lt;p&gt;Syst\u00e8me solaire : {{ $planet-&gt;solar_system }}&lt;/p&gt;\n    &lt;p&gt;Diam\u00e8tre : {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;En savoir plus &amp;rarr;&lt;/a&gt;\n    &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"/api/planets/{{ $planet-&gt;id }}\"&gt;\n        D\u00e9saffecter\n    &lt;/button&gt;\n&lt;/div&gt;\n&lt;!-- ... Avant la balise de fermeture body ... --&gt;\n&lt;script src=\"{{ asset('js/planets.js') }}\" defer&gt;&lt;/script&gt;\n</code></pre></p> <ul> <li><code>id=\"planet-card-{{ $planet-&gt;id }}\"</code> \u2014 ID unique pour toute la carte, afin que nous puissions la supprimer du DOM.</li> <li><code>data-id</code> et <code>data-url</code> \u2014 un moyen pratique de transmettre des donn\u00e9es de PHP (Blade) \u00e0 JavaScript.</li> </ul> <p>\u00c9tape 2 : \u00c9criture de la logique JavaScript</p> <p>Cr\u00e9ez le fichier <code>public/js/planets.js</code> et ajoutez-y le code suivant : <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    // Trouver tous les boutons \"Supprimer\"\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            const planetId = event.target.dataset.id;\n            const apiUrl = event.target.dataset.url;\n\n            if (!confirm(`\u00cates-vous s\u00fbr de vouloir d\u00e9saffecter la plan\u00e8te avec l'ID ${planetId} ? Cette action est irr\u00e9versible.`)) {\n                return; // L'utilisateur a cliqu\u00e9 sur \"Annuler\"\n            }\n\n            try {\n                // Envoyer une requ\u00eate DELETE \u00e0 notre API\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        // Plus tard, nous ajouterons le jeton CSRF ici\n                    }\n                });\n\n                if (response.status === 204) { // 204 No Content - suppression r\u00e9ussie\n                    // Supprimer la carte de la plan\u00e8te de la page\n                    const cardToRemove = document.getElementById(`planet-card-${planetId}`);\n                    if (cardToRemove) {\n                        cardToRemove.remove();\n                    }\n                    alert('La plan\u00e8te a \u00e9t\u00e9 d\u00e9saffect\u00e9e avec succ\u00e8s.');\n                } else {\n                    // Si l'API a renvoy\u00e9 une erreur\n                    const errorData = await response.json();\n                    alert(`Erreur : ${errorData.message || 'Impossible de supprimer la plan\u00e8te.'}`);\n                }\n            } catch (error) {\n                console.error('Erreur lors de l\\'envoi de la requ\u00eate :', error);\n                alert('Une erreur r\u00e9seau est survenue. Veuillez r\u00e9essayer.');\n            }\n        });\n    });\n});\n</code></pre></p> <p>Maintenant, si vous rafra\u00eechissez la page <code>/planets</code>, vous verrez les boutons \"D\u00e9saffecter\", et en cliquant dessus, notre code JavaScript se d\u00e9clenchera !</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/3/#4-transmission-de-donnees-de-blade-vers-javascript","title":"4. Transmission de donn\u00e9es de Blade vers JavaScript","text":"<p>Parfois, il est n\u00e9cessaire de transmettre \u00e0 JS non pas une simple cha\u00eene de caract\u00e8res, mais un tableau ou un objet entier.</p> <p>M\u00e9thode incorrecte (vuln\u00e9rable) : <pre><code>let planets = {{ $planets }}; // Cela entra\u00eenera une erreur de syntaxe et est dangereux.\n</code></pre></p> <p>M\u00e9thode correcte (via JSON) : Utilisez la directive <code>@json</code>. Elle convertit en toute s\u00e9curit\u00e9 un tableau/objet PHP en un objet JSON valide.</p> <p>Exemple dans <code>planets/index.blade.php</code> : <pre><code>@extends('layouts.app')\n{{-- ... --}}\n@section('content')\n    {{-- ... --}}\n@endsection\n\n@push('scripts') {{-- Nous \"poussons\" notre script dans le slot @stack('scripts') du gabarit --}}\n&lt;script&gt;\n    // Laravel convertit en toute s\u00e9curit\u00e9 la collection $planets en un tableau JSON\n    const planetsData = @json($planets);\n\n    // Maintenant, nous pouvons travailler avec ce tableau en JS\n    console.log('Donn\u00e9es sur les plan\u00e8tes transmises depuis Blade :', planetsData);\n    alert(`${planetsData.length} plan\u00e8tes charg\u00e9es !`);\n&lt;/script&gt;\n@endpush\n</code></pre></p> <ul> <li><code>@push('scripts')</code> place le contenu \u00e0 l'int\u00e9rieur de <code>@stack('scripts')</code> dans <code>layouts/app.blade.php</code>. Cela permet d'ajouter des scripts uniquement aux pages o\u00f9 ils sont r\u00e9ellement n\u00e9cessaires.</li> </ul>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/3/#quiz-de-consolidation","title":"Quiz de consolidation","text":"<p>1. O\u00f9 les fichiers JS et CSS publics doivent-ils \u00eatre stock\u00e9s dans un projet Laravel ?</p>  a) resources/js  b) storage/app/public  c) public/ <p>2. Quel aideur Blade est utilis\u00e9 pour g\u00e9n\u00e9rer correctement l'URL des actifs (JS, CSS) ?</p>  a) url()  b) asset()  c) public_path() <p>3. Que fait la paire de directives `@push('scripts')` / `@stack('scripts')` ?</p>  a) Permet \u00e0 une vue enfant d'ajouter son code JS \u00e0 un endroit sp\u00e9cifique du gabarit parent  b) Fusionne tous les fichiers JS en un seul  c) Envoie le code JS au serveur <p>4. Comment transmettre en toute s\u00e9curit\u00e9 un tableau PHP `$data` \u00e0 JavaScript depuis Blade ?</p>  a) let jsData = {{ $data }};  b) let jsData = '@php echo json_encode($data); @endphp';  c) let jsData = @json($data); <p>5. Pourquoi est-il recommand\u00e9 d'inclure les scripts JS \u00e0 la fin de la balise body ?</p>  a) Pour qu'ils ne bloquent pas le rendu du contenu HTML principal de la page  b) C'est une exigence de la norme HTML5  c) Ainsi, les scripts s'ex\u00e9cutent plus rapidement V\u00e9rifier <p>\ud83d\ude80 Conclusion du chapitre :</p> <p>Vous avez appris \u00e0 donner vie aux pages Blade statiques en ajoutant de la logique c\u00f4t\u00e9 client. Comp\u00e9tences cl\u00e9s :</p> <ul> <li>Organisation et inclusion correctes des fichiers JS dans un projet Laravel.</li> <li>Utilisation des attributs <code>data-*</code> pour transmettre des donn\u00e9es de HTML \u00e0 JS.</li> <li>Interaction dynamique avec l'API via Fetch sans rechargement de page.</li> <li>Transmission s\u00e9curis\u00e9e des variables PHP \u00e0 JavaScript \u00e0 l'aide de la directive <code>@json</code>.</li> <li>Organisation des scripts avec <code>@push</code> et <code>@stack</code>. Vos \"panneaux de contr\u00f4le\" sont devenus interactifs. Cependant, nos requ\u00eates de modification (POST, PUT, DELETE) sont d\u00e9sormais vuln\u00e9rables. Dans le chapitre suivant, nous ajouterons un m\u00e9canisme de protection crucial : les jetons CSRF.</li> </ul>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/4/","title":"Chapitre 5.4 : Travailler avec les jetons CSRF","text":"<p>Temps d'\u00e9tude : 30 minutes</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/4/#1-quest-ce-quune-attaque-csrf-le-detournement-de-votre-vaisseau","title":"1. Qu'est-ce qu'une attaque CSRF ? Le \"d\u00e9tournement\" de votre vaisseau","text":"<p>Imaginez que vous \u00eates connect\u00e9 au panneau de contr\u00f4le de votre flotte spatiale (<code>space-api.test</code>). Dans un onglet voisin, vous ouvrez un site de chats inoffensif (<code>evil-cats.com</code>). Sur ce site, il y a un formulaire cach\u00e9 qui envoie automatiquement une requ\u00eate \u00e0 votre site \u00e0 l'adresse <code>POST /api/planets/1/delete</code>.</p> <p>\u00c9tant donn\u00e9 que vous \u00eates d\u00e9j\u00e0 autoris\u00e9 sur <code>space-api.test</code>, votre navigateur attachera gentiment tous vos cookies \u00e0 cette requ\u00eate. Le serveur Laravel verra une session valide et pensera que c'est vous qui avez d\u00e9cid\u00e9 de d\u00e9classer la plan\u00e8te. La plan\u00e8te sera supprim\u00e9e \u00e0 votre insu.</p> <p>C'est ce qu'on appelle la CSRF (Cross-Site Request Forgery) \u2014 une attaque o\u00f9 un attaquant force le navigateur d'un utilisateur authentifi\u00e9 \u00e0 effectuer une action ind\u00e9sirable sur un site de confiance.</p> <p>\ud83d\udca1 Analogie spatiale :</p> <p>Vous \u00eates le capitaine d'un vaisseau, et vous avez une carte-cl\u00e9 (session/cookie). L'attaquant ne peut pas voler votre carte. Mais il peut vous forcer par la ruse \u00e0 l'appliquer au terminal de d\u00e9classification des ressources pendant que vous \u00eates distrait. Un jeton CSRF, c'est comme un code PIN que vous devez saisir avec la carte. L'attaquant ne conna\u00eet pas le code PIN, et son attaque \u00e9choue.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/4/#2-comment-laravel-protege-t-il-contre-la-csrf","title":"2. Comment Laravel prot\u00e8ge-t-il contre la CSRF ?","text":"<p>Laravel prot\u00e8ge par d\u00e9faut toutes les requ\u00eates web \"non s\u00e9curis\u00e9es\" (POST, PUT, PATCH, DELETE) \u00e0 l'aide d'un jeton CSRF.</p> <ol> <li>Lors de la g\u00e9n\u00e9ration d'une page, Laravel cr\u00e9e un jeton unique et al\u00e9atoire pour la session de l'utilisateur.</li> <li>Ce jeton est int\u00e9gr\u00e9 dans les formulaires HTML.</li> <li>Lors de l'envoi du formulaire, le jeton est envoy\u00e9 avec la requ\u00eate.</li> <li>C\u00f4t\u00e9 serveur, le middleware <code>VerifyCsrfToken</code> compare le jeton de la requ\u00eate avec le jeton stock\u00e9 dans la session.</li> <li>Si les jetons ne correspondent pas, Laravel interrompt la requ\u00eate avec une erreur 419 (Session expir\u00e9e/Page expir\u00e9e).</li> </ol> <p>Important : Les routes API dans <code>routes/api.php</code> ne sont pas prot\u00e9g\u00e9es par CSRF, car elles supposent un autre m\u00e9canisme d'authentification (par exemple, les jetons Sanctum), et non des sessions bas\u00e9es sur les cookies. Notre probl\u00e8me actuel concerne sp\u00e9cifiquement les routes web et les pages que nous cr\u00e9ons dans <code>routes/web.php</code>.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/4/#3-utilisation-du-jeton-csrf-dans-les-formulaires-html","title":"3. Utilisation du jeton CSRF dans les formulaires HTML","text":"<p>C'est le sc\u00e9nario le plus simple. Laravel fournit une directive Blade sp\u00e9ciale pour cela.</p> <p>Exemple : Formulaire de cr\u00e9ation de plan\u00e8te Cr\u00e9ons un formulaire simple dans le fichier <code>resources/views/planets/create.blade.php</code> :</p> <pre><code>&lt;h2&gt;Formulaire de lancement d'une nouvelle plan\u00e8te&lt;/h2&gt;\n&lt;form action=\"/planets\" method=\"POST\"&gt;\n    @csrf {{-- Voil\u00e0 la magie ! --}}\n\n    &lt;label for=\"name\"&gt;Nom :&lt;/label&gt;\n    &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;\n\n    &lt;label for=\"solar_system\"&gt;Syst\u00e8me solaire :&lt;/label&gt;\n    &lt;input type=\"text\" id=\"solar_system\" name=\"solar_system\" required&gt;\n\n    {{-- ... autres champs ... --}}\n\n    &lt;button type=\"submit\"&gt;Lancer&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>La directive <code>@csrf</code> g\u00e9n\u00e9rera automatiquement un champ cach\u00e9 dans le formulaire : <pre><code>&lt;input type=\"hidden\" name=\"_token\" value=\"j2aK3dLf4gH5...jeton_unique...\"&gt;\n</code></pre></p> <p>C'est suffisant pour prot\u00e9ger les formulaires HTML standards.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/4/#4-utilisation-du-jeton-csrf-dans-les-requetes-ajaxfetch","title":"4. Utilisation du jeton CSRF dans les requ\u00eates AJAX/Fetch","text":"<p>Dans le chapitre pr\u00e9c\u00e9dent, nous avons envoy\u00e9 une requ\u00eate <code>DELETE</code> en utilisant JavaScript. Maintenant, Laravel va la bloquer avec une erreur 419. Nous devons ajouter le jeton CSRF dans les en-t\u00eates de notre requ\u00eate Fetch.</p> <p>\u00c9tape 1 : Rendre le jeton accessible \u00e0 JavaScript</p> <p>Ajoutez une balise meta avec le jeton dans le <code>&lt;head&gt;</code> de votre mise en page principale <code>resources/views/app.blade.php</code>. C'est une pratique standard dans Laravel.</p> <pre><code>&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n\n    {{-- Ajout du jeton CSRF dans la balise meta --}}\n    &lt;meta name=\"csrf-token\" content=\"{{ csrf_token() }}\"&gt;\n\n    {{-- ... --}}\n&lt;/head&gt;\n</code></pre> <p>La fonction <code>csrf_token()</code> renvoie le jeton actuel.</p> <p>\u00c9tape 2 : Modifier JavaScript pour envoyer le jeton</p> <p>Maintenant, dans notre <code>public/js/planets.js</code>, nous pouvons lire ce jeton et l'ajouter aux en-t\u00eates de toutes les requ\u00eates \"non s\u00e9curis\u00e9es\".</p> <pre><code>// ... dans le fichier public/js/planets.js ...\n\ndocument.addEventListener('DOMContentLoaded', () =&gt; {\n    // Obtenir le jeton de la balise meta\n    const csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            // ... logique de confirmation ...\n\n            try {\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        'X-CSRF-TOKEN': csrfToken // &lt;-- Ajouter le jeton aux en-t\u00eates !\n                    }\n                });\n\n                // ... reste de la logique de traitement de la r\u00e9ponse ...\n            } catch (error) {\n                // ...\n            }\n        });\n    });\n});\n</code></pre> <ul> <li>Le nom de l'en-t\u00eate <code>X-CSRF-TOKEN</code> est la norme que Laravel v\u00e9rifie par d\u00e9faut.</li> </ul> <p>Nos requ\u00eates AJAX sont maintenant \u00e9galement prot\u00e9g\u00e9es. Essayez \u00e0 nouveau de supprimer une plan\u00e8te \u2014 cette fois, la requ\u00eate sera r\u00e9ussie.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/4/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Quelle attaque le jeton CSRF pr\u00e9vient-il ?</p>  a) Injections SQL  b) Scripting inter-sites (XSS)  c) Falsification de requ\u00eate inter-sites (CSRF) <p>2. Quelle directive Blade ajoute un champ cach\u00e9 avec le jeton CSRF \u00e0 un formulaire ?</p>  a) @token  b) @csrf  c) @form_token <p>3. Que se passe-t-il si vous envoyez une requ\u00eate POST sans jeton CSRF \u00e0 une route web ?</p>  a) Erreur 500 (Internal Server Error)  b) Erreur 403 (Forbidden)  c) Erreur 419 (Page expir\u00e9e / Session expir\u00e9e) <p>4. Quel en-t\u00eate HTTP standard est utilis\u00e9 pour envoyer le jeton CSRF dans les requ\u00eates AJAX ?</p>  a) Authorization  b) X-CSRF-TOKEN  c) Content-Type <p>5. Pourquoi les routes API (`routes/api.php`) n'utilisent-elles pas la protection CSRF par d\u00e9faut ?</p>  a) Parce qu'elles sont destin\u00e9es \u00e0 l'authentification sans \u00e9tat  b) C'est une erreur dans Laravel, elles doivent \u00eatre activ\u00e9es manuellement  c) Parce que les requ\u00eates API ne peuvent pas \u00eatre falsifi\u00e9es V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez install\u00e9 un \"syst\u00e8me d'identification ami ou ennemi\" sur votre vaisseau spatial, le prot\u00e9geant ainsi des attaques CSRF. Vous avez appris \u00e0 :</p> <ul> <li>Comprendre l'essence et le danger des attaques CSRF.</li> <li>Prot\u00e9ger les formulaires HTML standards \u00e0 l'aide de la directive <code>@csrf</code>.</li> <li>Transmettre le jeton CSRF \u00e0 JavaScript via une balise meta.</li> <li>Inclure le jeton dans les en-t\u00eates des requ\u00eates AJAX/Fetch pour leur ex\u00e9cution r\u00e9ussie.</li> </ul> <p>Vos interfaces web sont maintenant non seulement interactives, mais aussi s\u00e9curis\u00e9es. Dans le chapitre suivant, nous terminerons la cr\u00e9ation de notre interface web en examinant comment organiser correctement le routage pour les pages web.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/5/","title":"Chapitre 5.5 : Routage pour les pages web","text":"<p>Temps d'\u00e9tude : 40 minutes</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/5/#1-routeswebphp-vs-routesapiphp-deux-panneaux-de-controle-differents","title":"1. <code>routes/web.php</code> vs <code>routes/api.php</code> : Deux panneaux de contr\u00f4le diff\u00e9rents","text":"<p>Il est important de bien comprendre la diff\u00e9rence fondamentale :</p> Caract\u00e9ristique <code>routes/web.php</code> (Panneau web) <code>routes/api.php</code> (Panneau API) T\u00e2che principale Affichage de pages HTML, traitement de formulaires Fourniture de donn\u00e9es au format JSON pour d'autres applications \u00c9tat (State) Stateful (avec \u00e9tat) \u2014 utilise les sessions et les cookies Stateless (sans \u00e9tat) \u2014 chaque requ\u00eate est ind\u00e9pendante Middleware par d\u00e9faut <code>web</code> (inclut les sessions, la protection CSRF, le chiffrement des cookies) <code>api</code> (inclut le \"throttling\" \u2014 limitation de la fr\u00e9quence des requ\u00eates) Pr\u00e9fixe d'URL Aucun (racine de votre site) <code>/api/</code> (configurable dans <code>RouteServiceProvider</code>) Authentification Habituellement via sessions (Login/Mot de passe) Habituellement via tokens (Sanctum, Passport) <p>Nous travaillons avec <code>routes/web.php</code> pour construire une interface pour un \u00eatre humain.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/5/#2-routes-de-ressources-pour-le-web","title":"2. Routes de ressources pour le web","text":"<p>Semblable \u00e0 <code>Route::apiResource</code>, il existe <code>Route::resource</code> pour le web. Il cr\u00e9e des routes pour un cycle CRUD complet, y compris des pages pour afficher les formulaires de cr\u00e9ation et d'\u00e9dition.</p> <p>Cr\u00e9ons un ensemble complet de routes pour g\u00e9rer nos plan\u00e8tes via l'interface web.</p> <p>\u00c9tape 1 : Cr\u00e9er la route dans <code>routes/web.php</code></p> <p>Commentez ou supprimez les anciennes routes pour <code>/planets</code> et remplacez-les par une seule ligne :</p> <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// Route::get('/planets', [PlanetPageController::class, 'index']);\n// Route::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n\nRoute::resource('planets', PlanetPageController::class);\n</code></pre> <p>\u00c9tape 2 : V\u00e9rifier ce qui a \u00e9t\u00e9 cr\u00e9\u00e9 Ex\u00e9cutez la commande <code>php artisan route:list --except-vendor</code> dans le terminal :</p> <pre><code>+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| Method | URI       | Name                   | Action           | Middleware                                      |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| GET|HEAD | planets                | planets.index          | ...\\PlanetPageController@index                    | web        |\n| POST   | planets                | planets.store          | ...\\PlanetPageController@store                    | web        |\n| GET|HEAD | planets/create         | planets.create         | ...\\PlanetPageController@create                   | web        |\n| GET|HEAD | planets/{planet}       | planets.show           | ...\\PlanetPageController@show                     | web        |\n| PUT|PATCH | planets/{planet}       | planets.update         | ...\\PlanetPageController@update                   | web        |\n| DELETE | planets/{planet}       | planets.destroy        | ...\\PlanetPageController@destroy                  | web        |\n| GET|HEAD | planets/{planet}/edit  | planets.edit           | ...\\PlanetPageController@edit                     | web        |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n</code></pre> <p><code>Route::resource</code> a cr\u00e9\u00e9 7 routes pour nous, incluant :</p> <ul> <li><code>planets.create</code> (GET <code>/planets/create</code>) : page avec le formulaire de cr\u00e9ation.</li> <li><code>planets.store</code> (POST <code>/planets</code>) : traitement de ce formulaire.</li> <li><code>planets.edit</code> (GET <code>/planets/{planet}/edit</code>) : page avec le formulaire d'\u00e9dition.</li> <li><code>planets.update</code> (PUT/PATCH <code>/planets/{planet}</code>) : traitement du formulaire d'\u00e9dition.</li> <li><code>planets.destroy</code> (DELETE <code>/planets/{planet}</code>) : suppression de la ressource.</li> </ul>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/5/#3-routes-nommees-des-coordonnees-spatiales-pratiques","title":"3. Routes nomm\u00e9es : Des \"coordonn\u00e9es spatiales\" pratiques","text":"<p>Notez la colonne <code>Name</code>. Laravel a automatiquement attribu\u00e9 un nom unique \u00e0 chaque route (par exemple, <code>planets.index</code>). Utiliser des noms au lieu d'URL cod\u00e9es en dur est une meilleure pratique.</p> <p>Pourquoi ? Si vous d\u00e9cidez de changer l'URL de <code>/planets</code> \u00e0 <code>/worlds</code>, vous n'aurez pas \u00e0 chercher et modifier tous les liens dans vos templates. Vous le changez simplement \u00e0 un seul endroit \u2014 dans le fichier de routes, et les noms restent les m\u00eames.</p> <p>Exemple d'utilisation dans Blade :</p> <p>Avant, nous \u00e9crivions ceci :</p> <pre><code>&lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n</code></pre> <p>Maintenant, nous \u00e9crirons ceci, en utilisant l'aideur <code>route()</code> : <pre><code>&lt;a href=\"{{ route('planets.show', ['planet' =&gt; $planet-&gt;id]) }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n</code></pre></p> <ul> <li><code>route('planets.show', ...)</code> \u2014 g\u00e9n\u00e8re une URL pour la route nomm\u00e9e <code>planets.show</code>.</li> <li><code>['planet' =&gt; $planet-&gt;id]</code> \u2014 transmet les param\u00e8tres n\u00e9cessaires \u00e0 l'URL. Laravel substituera l'ID dans <code>{planet}</code>. On peut m\u00eame passer le mod\u00e8le entier : <code>['planet' =&gt; $planet]</code>.</li> </ul>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/5/#4-implementation-des-methodes-manquantes-dans-le-controleur","title":"4. Impl\u00e9mentation des m\u00e9thodes manquantes dans le contr\u00f4leur","text":"<p><code>Route::resource</code> a cr\u00e9\u00e9 les routes, mais nous devons cr\u00e9er nous-m\u00eames les m\u00e9thodes correspondantes dans <code>PlanetPageController</code>.</p> <p>Ouvrez <code>app/Http/Controllers/Web/PlanetPageController.php</code> et ajoutons-les.</p> <pre><code>&lt;?php\nuse Illuminate\\Http\\Request; // &lt;-- \u00c0 ajouter\n\nclass PlanetPageController extends Controller\n{\n    // index() et show() sont d\u00e9j\u00e0 pr\u00e9sents\n\n    /**\n     * Affiche le formulaire pour cr\u00e9er une nouvelle plan\u00e8te.\n     */\n    public function create()\n    {\n        return view('planets.create'); // Nous retournons simplement la vue avec le formulaire\n    }\n\n    /**\n     * Enregistre une nouvelle plan\u00e8te dans la base de donn\u00e9es.\n     */\n    public function store(Request $request)\n    {\n        // Validation des donn\u00e9es du formulaire\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets',\n            'solar_system' =&gt; 'required|string|max:100',\n            // ... autres r\u00e8gles\n        ]);\n\n        Planet::create($validated);\n\n        // Redirige l'utilisateur vers la page de liste avec un message de succ\u00e8s\n        return redirect()-&gt;route('planets.index')-&gt;with('success', 'Plan\u00e8te cr\u00e9\u00e9e avec succ\u00e8s !');\n    }\n\n    /**\n     * Affiche le formulaire pour modifier une plan\u00e8te.\n     */\n    public function edit(Planet $planet)\n    {\n        return view('planets.edit', ['planet' =&gt; $planet]);\n    }\n\n    /**\n     * Met \u00e0 jour les donn\u00e9es de la plan\u00e8te dans la base de donn\u00e9es.\n     */\n    public function update(Request $request, Planet $planet)\n    {\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets,name,' . $planet-&gt;id,\n            'solar_system' =&gt; 'required|string|max:100',\n        ]);\n\n        $planet-&gt;update($validated);\n\n        return redirect()-&gt;route('planets.show', $planet)-&gt;with('success', 'Donn\u00e9es de la plan\u00e8te mises \u00e0 jour !');\n    }\n\n    /**\n     * Supprime une plan\u00e8te.\n     */\n    public function destroy(Planet $planet)\n    {\n        $planet-&gt;delete();\n\n        return redirect()-&gt;route('planets.index')-&gt;with('success', 'Plan\u00e8te supprim\u00e9e.');\n    }\n}\n</code></pre> <ul> <li><code>redirect()-&gt;route(...)</code> \u2014 redirige l'utilisateur vers une autre route nomm\u00e9e.</li> <li><code>-&gt;with('success', '...')</code> \u2014 ajoute un \"message flash\" \u00e0 la session, qui sera disponible sur la page suivante une seule fois. Nous pouvons l'afficher dans notre template Blade.</li> </ul>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/5/#5-groupement-de-routes","title":"5. Groupement de routes","text":"<p>Si vous avez de nombreuses routes avec des caract\u00e9ristiques communes (par exemple, toutes sont destin\u00e9es au panneau d'administration et doivent avoir le pr\u00e9fixe <code>/admin</code> et un middleware sp\u00e9cial), elles peuvent \u00eatre regroup\u00e9es.</p> <pre><code>&lt;?php\nRoute::middleware(['auth', 'admin'])-&gt;prefix('admin')-&gt;name('admin.')-&gt;group(function () {\n    // Toutes les routes \u00e0 l'int\u00e9rieur de ce groupe auront :\n    // 1. Les middlewares 'auth' et 'admin'\n    // 2. Le pr\u00e9fixe d'URL '/admin' (par exemple, /admin/planets)\n    // 3. Le pr\u00e9fixe de nom 'admin.' (par exemple, admin.planets.index)\n\n    Route::resource('planets', PlanetPageController::class);\n    // Route::get('/dashboard', ...)-&gt;name('dashboard'); // -&gt; admin.dashboard\n});\n</code></pre>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/5/#quiz-de-consolidation","title":"Quiz de consolidation","text":"<p>1. Quelle commande dans `routes/web.php` cr\u00e9era un ensemble complet de routes CRUD pour l'interface web ?</p>  a) Route::crud('planets', Controller::class)  b) Route::apiResource('planets', Controller::class)  c) Route::resource('planets', Controller::class) <p>2. Quel est le principal avantage de l'utilisation des routes nomm\u00e9es ?</p>  a) Elles sont plus rapides que les URL directes  b) Elles permettent de modifier facilement l'URL dans le fichier de routes sans casser les liens dans les templates  c) Elles sont automatiquement prot\u00e9g\u00e9es contre le CSRF <p>3. Quelle route sera g\u00e9n\u00e9r\u00e9e pour la m\u00e9thode `create()` dans `Route::resource('articles', ...)` ?</p>  a) GET `/articles/new`  b) GET `/articles/create`  c) POST `/articles/create` <p>4. Que fait le code `redirect()-&gt;route('home')-&gt;with('status', 'OK')` ?</p>  a) Il retourne un JSON avec 'status' =&gt; 'OK' \u00e0 l'URL `/home`  b) Il redirige vers la route nomm\u00e9e `home` et ajoute un message flash 'status' \u00e0 la session  c) Il affiche la vue `home.blade.php` avec la variable `$status` <p>5. \u00c0 quoi sert `Route::prefix('dashboard')` ?</p>  a) Pour ajouter un pr\u00e9fixe \u00e0 toutes les URL \u00e0 l'int\u00e9rieur du groupe  b) Pour ajouter un pr\u00e9fixe \u00e0 tous les noms de routes \u00e0 l'int\u00e9rieur du groupe  c) Pour appliquer le middleware `dashboard` V\u00e9rifier <pre><code>    for (const [question, correctAnswer] of Object.entries(correctAnswers)) {\n      const questionDiv = form.querySelector(`input[name=\"${question}\"]`).closest('.question');\n      const labels = questionDiv.querySelectorAll('label');\n      labels.forEach(l =&gt; {\n          l.style.color = 'inherit';\n          l.style.fontWeight = 'normal';\n          l.style.border = 'none';\n      });\n\n      const userAnswer = form.elements[question] ? form.elements[question].value : undefined;\n\n      if (userAnswer) {\n        const selectedLabel = form.querySelector(`input[name=\"${question}\"][value=\"${userAnswer}\"]`).parentElement;\n        if (userAnswer === correctAnswer) {\n          score++;\n          selectedLabel.style.fontWeight = 'bold';\n          resultsHTML += `&lt;li&gt;Question ${question.slice(1)}: &lt;span style=\"color:green;\"&gt;Correct !&lt;/span&gt;&lt;/li&gt;`;\n        } else {\n          selectedLabel.style.fontWeight = 'bold';\n          const correctLabel = form.querySelector(`input[name=\"${question}\"][value=\"${correctAnswer}\"]`).parentElement;\n          correctLabel.style.fontWeight = 'bold';\n          resultsHTML += `&lt;li&gt;Question ${question.slice(1)}: &lt;span style=\"color:red;\"&gt;Incorrect.&lt;/span&gt; Bonne r\u00e9ponse : &lt;b&gt;${correctAnswer.toUpperCase()}&lt;/b&gt;&lt;/li&gt;`;\n        }\n      } else {\n        resultsHTML += `&lt;li&gt;Question ${question.slice(1)}: &lt;span style=\"color:orange;\"&gt;Pas de r\u00e9ponse.&lt;/span&gt;&lt;/li&gt;`;\n      }\n    }\n\n    resultsHTML += `&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Votre r\u00e9sultat : ${score} sur ${Object.keys(correctAnswers).length}&lt;/b&gt;&lt;/p&gt;`;\n    resultsContainer.innerHTML = resultsHTML;\n    resultsContainer.style.display = 'block';\n  }\n&lt;/script&gt;\n\n---\n\n**\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :**\n\nVous avez ma\u00eetris\u00e9 une approche structur\u00e9e et professionnelle pour l'organisation des routes web dans Laravel. Vous savez maintenant :\n\n-   Distinguer les routes `web` et `api` et leur objectif.\n-   Utiliser `Route::resource` pour g\u00e9n\u00e9rer rapidement des routes CRUD standard.\n-   Appliquer des routes nomm\u00e9es pour cr\u00e9er un code flexible et maintenable.\n-   Cr\u00e9er des op\u00e9rations CRUD compl\u00e8tes dans le contr\u00f4leur avec validation et redirections.\n-   Grouper les routes pour appliquer des r\u00e8gles communes.\n\n**Le syst\u00e8me de navigation de votre \"navire\" est d\u00e9sormais r\u00e9silient et pr\u00eat \u00e0 \u00eatre \u00e9tendu.** Dans le dernier chapitre de cette section, nous combinerons toutes les connaissances acquises et afficherons les donn\u00e9es des plan\u00e8tes, obtenues via Fetch, sur notre page Blade.\n</code></pre>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/6/","title":"Chapitre 5.6 : Affichage des donn\u00e9es via Blade + Fetch","text":"<p>Temps d'\u00e9tude : 50 minutes</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/6/#1-approche-hybride-le-meilleur-des-deux-mondes","title":"1. Approche hybride : Le meilleur des deux mondes","text":"<p>Nous pouvons construire une page de deux mani\u00e8res :</p> <ol> <li>Rendu c\u00f4t\u00e9 serveur complet (SSR) : Laravel g\u00e9n\u00e8re tout le HTML, y compris la liste des plan\u00e8tes. Pour toute mise \u00e0 jour (suppression, ajout), la page est enti\u00e8rement recharg\u00e9e.</li> <li>Rendu c\u00f4t\u00e9 client complet (CSR) : Laravel renvoie une \"coque\" HTML vide, et JavaScript demande toutes les donn\u00e9es \u00e0 l'API et les rend c\u00f4t\u00e9 client. (C'est l'approche Single Page Application - SPA).</li> </ol> <p>Notre choix \u2014 l'approche hybride :</p> <ul> <li>Premier chargement (SSR) : Laravel renvoie imm\u00e9diatement la page avec une liste de plan\u00e8tes d\u00e9j\u00e0 pr\u00eate. C'est rapide et bon pour le SEO. L'utilisateur voit imm\u00e9diatement le contenu.</li> <li>Actions suivantes (CSR) : JavaScript intercepte les actions de l'utilisateur (clics sur les boutons) et interagit avec l'API, ne mettant \u00e0 jour que les parties n\u00e9cessaires de la page, sans rechargement complet.</li> </ul> <p>\ud83d\udca1 Analogie spatiale :</p> <p>En entrant sur la passerelle, on vous remet imm\u00e9diatement une carte de navigation principale, imprim\u00e9e au centre de contr\u00f4le (SSR). Vous l'avez d\u00e9j\u00e0 en main, pas besoin d'attendre. Mais ensuite, vous activez le \"mode direct\" sur votre tablette (CSR), et elle commence \u00e0 recevoir des mises \u00e0 jour des satellites en temps r\u00e9el, redessinant les objets sur votre carte.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/6/#2-etape-1-preparation-de-la-page","title":"2. \u00c9tape 1 : Pr\u00e9paration de la page","text":"<p>Nous allons travailler avec notre page de liste des plan\u00e8tes <code>resources/views/planets/index.blade.php</code>. Elle sait d\u00e9j\u00e0 afficher les donn\u00e9es transmises par le contr\u00f4leur. Nous allons maintenant y ajouter des \u00e9l\u00e9ments de contr\u00f4le qui fonctionneront via JS.</p> <p>Ajoutons le bouton \"Actualiser la liste\" et un conteneur pour les notifications : <pre><code>    &lt;div class=\"controls\"&gt;\n        &lt;h2&gt;Liste de toutes les plan\u00e8tes connues&lt;/h2&gt;\n        &lt;button id=\"refresh-btn\"&gt;Actualiser via API&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div id=\"notification-area\" class=\"notification\"&gt;&lt;/div&gt;\n    &lt;hr&gt;\n    {{-- Ce div sera notre conteneur pour la mise \u00e0 jour dynamique --}}\n    &lt;div id=\"planet-list-container\" class=\"planet-list\"&gt;\n        {{-- Inclut la vue \"enfant\" qui rend la liste initiale --}}\n        @include('planets.partials.list', ['planets' =&gt; $planets])\n    &lt;/div&gt;\n</code></pre></p> <p>Notez bien <code>@include('planets.partials.list', ...)</code>. Nous avons extrait la logique d'affichage de la liste dans un fichier s\u00e9par\u00e9 et r\u00e9utilisable.</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/6/#etape-2-creation-dune-vue-partielle-reutilisable-partial","title":"\u00c9tape 2 : Cr\u00e9ation d'une vue \"partielle\" r\u00e9utilisable (Partial)","text":"<p>Extraire les parties r\u00e9p\u00e9titives dans des fichiers s\u00e9par\u00e9s est une bonne pratique.</p> <p>Cr\u00e9ez le fichier <code>resources/views/planets/partials/list.blade.php</code> :</p> <pre><code>@forelse($planets as $planet)\n    &lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n        &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n        &lt;p&gt;Syst\u00e8me solaire : {{ $planet-&gt;solar_system }}&lt;/p&gt;\n        &lt;p&gt;Diam\u00e8tre : {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n        &lt;a href=\"{{ route('planets.show', $planet) }}\"&gt;En savoir plus &amp;rarr;&lt;/a&gt;\n        &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"{{ route('api.planets.destroy', $planet) }}\"&gt;\n            D\u00e9saffecter\n        &lt;/button&gt;\n    &lt;/div&gt;\n@empty\n    &lt;p&gt;Il n'y a aucune plan\u00e8te dans la base de donn\u00e9es.&lt;/p&gt;\n@endforelse\n</code></pre> <ul> <li>Important : Notez que l'URL du bouton de suppression est maintenant g\u00e9n\u00e9r\u00e9e pour la route API : <code>route('api.planets.destroy', $planet)</code>. Pour cela, assurez-vous d'avoir une ressource nomm\u00e9e dans <code>routes/api.php</code> : <code>Route::apiResource('planets', ...)-&gt;name('api.planets');</code></li> </ul>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/6/#etape-3-ecriture-du-javascript-pour-la-mise-a-jour-dynamique","title":"\u00c9tape 3 : \u00c9criture du JavaScript pour la mise \u00e0 jour dynamique","text":"<p>Maintenant, la partie la plus int\u00e9ressante. Cr\u00e9ons un JavaScript qui, via un bouton, demandera une liste de plan\u00e8tes actualis\u00e9e \u00e0 l'API et la redessinera.</p> <p>Cr\u00e9ez le fichier <code>public/js/planet-manager.js</code> et incluez-le dans <code>layouts/app.blade.php</code>.</p> <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    const refreshBtn = document.getElementById('refresh-btn');\n    const planetListContainer = document.getElementById('planet-list-container');\n    const notificationArea = document.getElementById('notification-area');\n\n    // Fonction pour afficher les notifications\n    function showNotification(message, isError = false) {\n        notificationArea.textContent = message;\n        notificationArea.className = isError ? 'notification error' : 'notification success';\n        setTimeout(() =&gt; {\n            notificationArea.textContent = '';\n            notificationArea.className = 'notification';\n        }, 3000);\n    }\n\n    // Fonction pour dessiner une seule carte de plan\u00e8te\n    function createPlanetCardHtml(planet) {\n        // IMPORTANT : Nous g\u00e9n\u00e9rons le m\u00eame HTML que dans notre vue partielle\n        return `\n            &lt;div class=\"planet-card\" id=\"planet-card-${planet.id}\"&gt;\n                &lt;h3&gt;${planet.name}&lt;/h3&gt;\n                &lt;p&gt;Syst\u00e8me solaire : ${planet.solar_system}&lt;/p&gt;\n                &lt;p&gt;Diam\u00e8tre : ${new Intl.NumberFormat().format(planet.size_km)} km&lt;/p&gt;\n                &lt;a href=\"/planets/${planet.id}\"&gt;En savoir plus &amp;rarr;&lt;/a&gt;\n                &lt;button class=\"delete-btn\" data-id=\"${planet.id}\" data-url=\"/api/planets/${planet.id}\"&gt;\n                    D\u00e9commissionner (JS)\n                &lt;/button&gt;\n            &lt;/div&gt;\n        `;\n    }\n\n    // Fonction pour demander et redessiner la liste des plan\u00e8tes\n    async function fetchAndRenderPlanets() {\n        showNotification('Requ\u00eate de donn\u00e9es fra\u00eeches aupr\u00e8s des satellites orbitaux...');\n        try {\n            const response = await fetch('/api/planets', {\n                headers: { 'Accept': 'application/json' }\n            });\n\n            if (!response.ok) {\n                throw new Error('Erreur r\u00e9seau lors de la r\u00e9cup\u00e9ration des donn\u00e9es.');\n            }\n\n            const planets = await response.json(); // Laravel retournera par d\u00e9faut { data: [...] } pour une ressource pagin\u00e9e\n\n            planetListContainer.innerHTML = ''; // Nettoyage de l'ancienne liste\n\n            if (planets.data.length === 0) {\n                planetListContainer.innerHTML = '&lt;p&gt;Il n\\'y a aucune plan\u00e8te dans la base de donn\u00e9es.&lt;/p&gt;';\n            } else {\n                planets.data.forEach(planet =&gt; {\n                    const cardHtml = createPlanetCardHtml(planet);\n                    planetListContainer.innerHTML += cardHtml;\n                });\n            }\n            showNotification('Donn\u00e9es mises \u00e0 jour avec succ\u00e8s !', false);\n        } catch (error) {\n            console.error('Erreur lors de la mise \u00e0 jour de la liste des plan\u00e8tes :', error);\n            showNotification(error.message, true);\n        }\n    }\n\n    // Attacher le gestionnaire au bouton\n    if (refreshBtn) {\n        refreshBtn.addEventListener('click', fetchAndRenderPlanets);\n    }\n\n    // La logique de suppression du chapitre pr\u00e9c\u00e9dent pourra \u00eatre d\u00e9plac\u00e9e ici,\n    // afin que tout le JS soit au m\u00eame endroit.\n});\n</code></pre>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/6/#3-verification-finale","title":"3. V\u00e9rification finale","text":"<ol> <li>Lancez le serveur (<code>php artisan serve</code> ou assurez-vous que Herd fonctionne).</li> <li>Recr\u00e9ez la base de donn\u00e9es, si n\u00e9cessaire : <code>php artisan migrate:fresh --seed</code>.</li> <li>Ouvrez la page <code>/planets</code> dans le navigateur.<ul> <li>Vous devriez voir imm\u00e9diatement la liste des plan\u00e8tes, g\u00e9n\u00e9r\u00e9e par le serveur.</li> </ul> </li> <li>Cliquez sur le bouton \"Actualiser via API\".<ul> <li>Vous verrez une notification de chargement.</li> <li>La liste devrait dispara\u00eetre un instant et r\u00e9appara\u00eetre, mais cette fois-ci, elle sera g\u00e9n\u00e9r\u00e9e par JavaScript \u00e0 partir des donn\u00e9es re\u00e7ues de l'API.</li> </ul> </li> </ol> <p>Vous avez impl\u00e9ment\u00e9 avec succ\u00e8s un mod\u00e8le hybride !</p>"},{"location":"fr/Chapitre%205%20-%20Int%C3%A9gration%20du%20front-end%20avec%20Laravel/6/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Qu'est-ce que l'approche hybride de rendu (SSR + CSR) ?</p>  a) Une page vide est d'abord rendue, puis JS charge tout le contenu  b) Le serveur renvoie une page enti\u00e8rement pr\u00eate, et elle ne change jamais c\u00f4t\u00e9 client  c) Le serveur renvoie une page pr\u00eate pour un premier chargement rapide, et les mises \u00e0 jour ult\u00e9rieures se font c\u00f4t\u00e9 client via JS <p>2. Quel est l'avantage principal du rendu c\u00f4t\u00e9 serveur initial (SSR) ?</p>  a) R\u00e9duction de la charge sur le serveur  b) Rendu rapide du contenu pour l'utilisateur et bonne indexation SEO  c) Simplification du code JavaScript <p>3. Pourquoi `@include('planets.partials.list')` est-il utilis\u00e9 dans l'exemple ?</p>  a) C'est une exigence de Blade pour les boucles  b) Pour r\u00e9utiliser le code et s\u00e9parer la logique d'affichage de la liste  c) Pour le chargement asynchrone d'une partie de la page <p>4. Dans le code JavaScript, nous dupliquons la structure HTML de la carte. Quel pourrait \u00eatre un moyen plus avanc\u00e9 d'\u00e9viter cela ?</p>  a) Demander \u00e0 l'API non pas du JSON, mais du HTML d\u00e9j\u00e0 rendu pour une seule carte  b) Utiliser des moteurs de templates JavaScript (comme Mustache, Handlebars) ou des frameworks (Vue, React)  c) Les deux options sont valables <p>5. Pourquoi est-il important que l'API (`/api/planets`) et le code JavaScript (`createPlanetCardHtml`) g\u00e9n\u00e8rent des donn\u00e9es/HTML coh\u00e9rents ?</p>  a) Sinon, l'utilisateur verra un \"saut\" ou un changement dans l'interface lors de la mise \u00e0 jour via l'API  b) Cela est requis par la sp\u00e9cification Fetch API  c) Sinon, Laravel renverra une erreur 500 V\u00e9rifier <p>\ud83d\ude80 F\u00e9licitations pour avoir termin\u00e9 le Chapitre 5 !</p> <p>Vous avez parcouru un long chemin, des bases de Blade \u00e0 la cr\u00e9ation de pages hybrides interactives. Vous avez appris \u00e0 :</p> <ul> <li>Cr\u00e9er et utiliser des mod\u00e8les et des mises en page Blade.</li> <li>Organiser des routes web et des contr\u00f4leurs pour les op\u00e9rations CRUD.</li> <li>Prot\u00e9ger les formulaires web et les requ\u00eates AJAX \u00e0 l'aide de jetons CSRF.</li> <li>Int\u00e9grer JavaScript pour une interaction dynamique avec l'API sans recharger la page.</li> </ul> <p>Votre Centre de contr\u00f4le de vol est enti\u00e8rement fonctionnel, s\u00e9curis\u00e9 et interactif. Vous \u00eates pr\u00eat pour la prochaine grande \u00e9tape : comparer cette approche avec d'autres frameworks et explorer les meilleures pratiques pour la production.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/1/","title":"Chapitre 6.1 : Connexion de FastAPI au Frontend","text":"<p>Temps d'\u00e9tude : 30 minutes</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/1/#1-retour-au-moteur-hyperdrive-comparaison-des-protocoles","title":"1. Retour au \"moteur hyperdrive\" : Comparaison des protocoles","text":"<p>Dans le chapitre pr\u00e9c\u00e9dent, nous avons amarr\u00e9 notre MCC (frontend) \u00e0 la \"SSI\" (API Laravel). Nous allons maintenant revenir \u00e0 notre chasseur supraluminique (FastAPI) et effectuer la m\u00eame op\u00e9ration.</p> <p>L'objectif de ce chapitre n'est pas seulement de r\u00e9p\u00e9ter les actions, mais de comparer deux approches. C'est comme si le m\u00eame vaisseau Dragon s'amarrait d'abord \u00e0 la SSI, puis \u00e0 la station chinoise \"Tiangong\". Le m\u00e9canisme d'amarrage est le m\u00eame (REST), mais il peut y avoir des nuances dans les proc\u00e9dures et l'emplacement des ports.</p> <p>\ud83d\udca1 Analogie spatiale :</p> <p>Le processus est le m\u00eame : approcher, s'aligner, s'amarrer. Mais pour la \"SSI\", il fallait utiliser le port <code>/api/planets</code>, et pour \"Tiangong\" \u2014 le port <code>/spaceships</code>. Notre op\u00e9rateur au MCC doit conna\u00eetre ces d\u00e9tails pour que la mission r\u00e9ussisse.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/1/#2-preparation-du-chasseur-fastapi-pour-lamarrage","title":"2. Pr\u00e9paration du \"chasseur\" (FastAPI) pour l'amarrage","text":"<p>Nous l'avons d\u00e9j\u00e0 fait au Chapitre 4.2, mais assurons-nous que tout est en place.</p> <p>\u00c9tape 1 : D\u00e9marrer le serveur FastAPI</p> <ol> <li>Arr\u00eatez le serveur Laravel s'il est en cours d'ex\u00e9cution (pour \u00e9viter les conflits de ports).</li> <li>Ouvrez un terminal dans le dossier de votre projet FastAPI.</li> <li> <p>Activez l'environnement virtuel :</p> <ul> <li>Windows : <code>.\\venv\\Scripts\\Activate.ps1</code></li> <li>macOS / Linux : <code>source venv/bin/activate</code></li> </ul> </li> <li> <p>D\u00e9marrez le serveur :     <pre><code>uvicorn main:app --reload\n</code></pre>     Le serveur sera accessible \u00e0 l'adresse <code>http://127.0.0.1:8000</code>.</p> </li> </ol> <p>\u00c9tape 2 : V\u00e9rifier les param\u00e8tres CORS dans <code>main.py</code></p> <p>Assurez-vous que votre projet FastAPI contient le <code>CORSMiddleware</code> configur\u00e9 que nous avons ajout\u00e9 pr\u00e9c\u00e9demment. Il doit autoriser les requ\u00eates provenant de l'adresse de votre frontend. <pre><code># main.py\nfrom fastapi.middleware.cors import CORSMiddleware\n\n# ...\n\norigins = [\n    \"http://127.0.0.1:5500\", # Adresse du Live Server\n    \"null\", # Pour file:///\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n# ...\n</code></pre> Si tout est en place, votre serveur FastAPI est enti\u00e8rement pr\u00eat.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/1/#3-reconfiguration-de-lantenne-du-mcc-vers-fastapi","title":"3. Reconfiguration de l'\"antenne\" du MCC vers FastAPI","text":"<p>Maintenant, le plus int\u00e9ressant : les modifications minimales \u00e0 apporter \u00e0 notre JavaScript pour qu'il fonctionne \u00e0 nouveau avec FastAPI.</p> <p>\u00c9tape 1 : Modifier l'URL de base</p> <p>Ouvrez <code>api.js</code> et restaurez <code>API_BASE_URL</code> \u00e0 sa valeur initiale. <pre><code>// api.js\n\n// Sp\u00e9cifiez l'URL de notre API FastAPI\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // &lt;-- Sans /api !\n\n// ... reste du code apiRequest ...\n</code></pre></p> <p>\u00c9tape 2 : Adaptation \u00e0 la structure de la r\u00e9ponse FastAPI</p> <p>Rappelons que notre <code>GET /spaceships</code> dans FastAPI renvoie un simple tableau, et non un objet avec pagination. Cela signifie que nous devons restaurer le code de <code>fetchAndDisplayFleet</code> \u00e0 son \u00e9tat initial.</p> <p>Modifiez la fonction <code>fetchAndDisplayFleet</code> dans <code>app.js</code> : <pre><code>// app.js\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;Chargement de la t\u00e9l\u00e9m\u00e9trie depuis FastAPI...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- Requ\u00eate vers /spaceships\n\n        // Dans FastAPI, nous avons un simple tableau, donc la cl\u00e9 .data n'est pas n\u00e9cessaire !\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;Il n\\'y a pas d\\'appareils dans le registre.&lt;/p&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            // Restaurons notre fonction originale pour cr\u00e9er des cartes\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;Erreur lors du chargement de la flotte : ${error.message}&lt;/p&gt;`;\n    }\n}\n\n// Fonction originale pour cr\u00e9er des cartes de vaisseaux\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;Type: ${ship.type}&lt;/p&gt;\n        &lt;p&gt;Ann\u00e9e de lancement: ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;Statut: ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;Modifier&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;Radier&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n</code></pre></p> <p>\u00c9tape 3 : V\u00e9rification des op\u00e9rations CRUD</p> <p>\u00c9tant donn\u00e9 que nos mod\u00e8les Pydantic dans FastAPI et les champs du formulaire HTML correspondent (<code>name</code>, <code>type</code>, <code>launch_year</code>, <code>status</code>), les fonctions <code>handleSaveShip</code> et <code>handleDeleteShip</code> devraient fonctionner sans modifications, car elles ciblent d\u00e9j\u00e0 le point de terminaison <code>/spaceships</code>.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/1/#4-bilan-comparatif-quest-ce-que-cela-signifie-pour-le-developpeur-frontend","title":"4. Bilan comparatif : Qu'est-ce que cela signifie pour le d\u00e9veloppeur frontend ?","text":"<ul> <li>Universalit\u00e9 de REST : Vous avez clairement constat\u00e9 que pour le frontend, peu importe le backend utilis\u00e9 (PHP/Laravel ou Python/FastAPI), tant qu'il respecte les principes REST.</li> <li>Importance de la documentation : Les principales diff\u00e9rences r\u00e9sidaient dans les URL des points de terminaison et la structure des r\u00e9ponses JSON. C'est pr\u00e9cis\u00e9ment ce qui doit \u00eatre d\u00e9crit dans la documentation de l'API. Sans elle, le d\u00e9veloppeur frontend travaillerait \"\u00e0 l'aveugle\".</li> <li>Flexibilit\u00e9 du frontend : Votre code JavaScript doit \u00eatre suffisamment flexible pour s'adapter facilement \u00e0 diff\u00e9rents formats de donn\u00e9es (par exemple, v\u00e9rifier s'il y a une cl\u00e9 <code>data</code>, ou si c'est juste un tableau).</li> </ul> <p>Conclusion : La comp\u00e9tence \u00e0 travailler avec une API REST est une cl\u00e9 universelle qui ouvre les portes \u00e0 l'interaction avec n'importe quel backend moderne.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/1/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. La principale diff\u00e9rence dans l'URL entre notre API Laravel et notre API FastAPI \u00e9tait...</p>  a) L'utilisation de ports diff\u00e9rents  b) La pr\u00e9sence du pr\u00e9fixe `/api` chez Laravel  c) L'utilisation de HTTPS chez FastAPI <p>2. Quel a \u00e9t\u00e9 le principal changement requis dans le code JS lors du passage d'une r\u00e9ponse pagin\u00e9e de Laravel \u00e0 un simple tableau de FastAPI ?</p>  a) Cesser d'acc\u00e9der \u00e0 `responseData.data` et utiliser `responseData` directement  b) Utiliser une autre m\u00e9thode `fetch`  c) Modifier le `Content-Type` dans les en-t\u00eates <p>3. Cette exp\u00e9rience prouve que pour un d\u00e9veloppeur frontend...</p>  a) Il est important de conna\u00eetre \u00e0 la fois PHP et Python  b) Il est important de comprendre les principes REST et de savoir lire la documentation API  c) Laravel et FastAPI sont absolument identiques <p>4. La configuration CORS est une t\u00e2che...</p>  a) Du d\u00e9veloppeur frontend  b) De l'administrateur syst\u00e8me  c) Du d\u00e9veloppeur backend <p>5. Si FastAPI utilisait la pagination, comme Laravel, que devrions-nous faire c\u00f4t\u00e9 frontend ?</p>  a) Rien, le code fonctionnerait tout seul  b) Modifier \u00e0 nouveau la logique pour extraire le tableau de la cl\u00e9 `data` (ou similaire)  c) Passer de `fetch` \u00e0 la biblioth\u00e8que Axios V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez r\u00e9ussi \u00e0 changer les \"protocoles de communication\" de votre MCC et \u00e0 comparer en pratique le travail avec deux syst\u00e8mes backend diff\u00e9rents.</p> <ul> <li>\u2705 Vous avez consolid\u00e9 la comp\u00e9tence de configuration de <code>API_BASE_URL</code> pour basculer entre les serveurs.</li> <li>\u2705 Vous avez compris l'importance de la structure de la r\u00e9ponse (<code>data</code> vs simple tableau) et comment y adapter le frontend.</li> <li>\u2705 Vous avez r\u00e9alis\u00e9 qu'un bon d\u00e9veloppeur frontend doit \u00eatre pr\u00eat \u00e0 travailler avec n'importe quelle API RESTful, en \u00e9tudiant attentivement sa documentation.</li> </ul> <p>La comp\u00e9tence d'amarrage universel est acquise ! Maintenant que nous savons configurer la connexion de base, il est temps de parler de protocoles plus complexes : CORS, authentification et s\u00e9curit\u00e9.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>Assurez-vous que votre serveur FastAPI est en cours d'ex\u00e9cution.</li> <li>Assurez-vous d'avoir restaur\u00e9 <code>API_BASE_URL</code> et la logique de traitement de la r\u00e9ponse dans <code>app.js</code> \u00e0 la version pour FastAPI.</li> <li>V\u00e9rifiez que votre frontend ex\u00e9cute \u00e0 nouveau correctement toutes les op\u00e9rations CRUD avec le backend FastAPI.</li> </ul> <p>\u26a0\ufe0f En cas d'erreurs :</p> <ul> <li>Erreur CORS : Assurez-vous que le serveur FastAPI est d\u00e9marr\u00e9 avec les bons param\u00e8tres CORS.</li> <li>Erreur <code>Cannot read properties of undefined (reading 'length')</code> : Vous avez peut-\u00eatre oubli\u00e9 de supprimer l'acc\u00e8s \u00e0 <code>.data</code> de <code>responseData</code>.</li> <li>404 Not Found : V\u00e9rifiez <code>API_BASE_URL</code> \u2014 FastAPI n'a pas de pr\u00e9fixe <code>/api</code>.</li> </ul>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/2/","title":"Chapitre 6.2 : Configuration CORS","text":"<p>Temps d'\u00e9tude : 30 minutes</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/2/#1-cors-quest-ce-que-cest-et-pourquoi-est-ce-necessaire","title":"1. CORS : Qu'est-ce que c'est et pourquoi est-ce n\u00e9cessaire ?","text":"<p>Comme nous l'avons d\u00e9couvert, le CORS (Cross-Origin Resource Sharing) est une politique de s\u00e9curit\u00e9 des navigateurs. Elle emp\u00eache une situation o\u00f9 un site malveillant <code>evil-site.com</code>, en votre nom (en utilisant vos cookies), ferait des requ\u00eates \u00e0 <code>your-bank.com</code> et volerait des donn\u00e9es.</p> <p>Comment cela fonctionne-t-il ?</p> <ol> <li>Le Frontend (navigateur) depuis le domaine <code>A</code> souhaite obtenir des donn\u00e9es du domaine <code>B</code>.</li> <li>Le navigateur envoie au domaine <code>B</code> une requ\u00eate \"pr\u00e9liminaire\" sp\u00e9ciale (requ\u00eate de pr\u00e9-vol ou \"preflight request\") avec la m\u00e9thode <code>OPTIONS</code>, demandant : \"H\u00e9, domaine <code>B</code>, puis-je, moi, domaine <code>A</code>, te faire une requ\u00eate <code>GET</code> ?\"</li> <li>Le Backend (serveur sur le domaine <code>B</code>) doit r\u00e9pondre avec des en-t\u00eates HTTP sp\u00e9ciaux, par exemple : <code>Access-Control-Allow-Origin: A</code>.</li> <li>Si la r\u00e9ponse du serveur autorise la requ\u00eate, le navigateur envoie la requ\u00eate <code>GET</code> principale. Sinon, il la bloque et affiche une erreur CORS.</li> </ol> <p>\ud83d\udca1 Analogie spatiale :</p> <p>Avant de t\u00e9l\u00e9porter le capitaine vers une station \u00e9trang\u00e8re (envoyer une requ\u00eate <code>POST</code>), le vaisseau (le navigateur) envoie un drone (une requ\u00eate <code>OPTIONS</code>) avec la question : \"Station, acceptez-vous la t\u00e9l\u00e9portation depuis le vaisseau 'Enterprise' ?\". La station (l'API) r\u00e9pond : \"Oui, la r\u00e9ception depuis l''Enterprise' est autoris\u00e9e\" (en-t\u00eate <code>Access-Control-Allow-Origin</code>). C'est seulement apr\u00e8s cela que la t\u00e9l\u00e9portation commence.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/2/#2-configuration-cors-dans-laravel-approche-moderne-pour-laravel-11","title":"2. Configuration CORS dans Laravel (Approche moderne pour Laravel 11+)","text":"<p>Dans Laravel 11+, la configuration CORS est devenue beaucoup plus simple et ne n\u00e9cessite pas la publication du fichier <code>config/cors.php</code> si vous avez besoin de r\u00e9glages de base. Tout est g\u00e9r\u00e9 via le fichier <code>.env</code> et <code>bootstrap/app.php</code>.</p> <p>\u00c9tape 1 : Configuration via les variables d'environnement</p> <p>Ouvrez votre fichier <code>.env</code>. Laravel fournit d\u00e9j\u00e0 par d\u00e9faut des variables pour g\u00e9rer le CORS pour l'API.</p> <pre><code># .env\n\n# ... autres variables\n\n# Sp\u00e9cifiez les chemins pour lesquels CORS sera actif.\n# 'api/*' - valeur standard pour toutes les routes API.\nCORS_PATHS=api/*\n\n# Sp\u00e9cifiez les origines (domaines) autoris\u00e9es.\n# Pour le d\u00e9veloppement, indiquez l'adresse de votre frontend.\n# Vous pouvez les lister s\u00e9par\u00e9es par des virgules, sans espaces.\nCORS_ALLOWED_ORIGINS=http://localhost:5500,http://127.0.0.1:5500\n\n# Autres param\u00e8tres (g\u00e9n\u00e9ralement, peuvent \u00eatre laiss\u00e9s par d\u00e9faut)\nCORS_ALLOWED_METHODS=*\nCORS_ALLOWED_HEADERS=*\nCORS_EXPOSED_HEADERS=\nCORS_MAX_AGE=0\nCORS_SUPPORTS_CREDENTIALS=false\n</code></pre> <p>Variables cl\u00e9s :</p> <ul> <li><code>CORS_ALLOWED_ORIGINS</code> : La variable la plus importante. Ici, vous listez les domaines \u00e0 partir desquels les requ\u00eates sont autoris\u00e9es. <code>*</code> autorise tout le monde, mais c'est</li> </ul> <p>extr\u00eamement dangereux pour la production.</p> <ul> <li><code>CORS_PATHS</code> : Chemins auxquels ces r\u00e8gles s'appliquent. <code>api/*</code> signifie tout ce qui commence par <code>/api/</code>.</li> </ul> <p>Apr\u00e8s avoir modifi\u00e9 le <code>.env</code>, il n'est pas n\u00e9cessaire de red\u00e9marrer le serveur si vous utilisez <code>php artisan serve</code>. Les modifications seront prises en compte automatiquement.</p> <p>\u00c9tape 2 (Optionnel) : Configuration avanc\u00e9e dans <code>bootstrap/app.php</code></p> <p>Si vous avez besoin d'une logique plus complexe (par exemple, autoriser les sous-domaines \u00e0 l'aide de motifs), vous devrez tout de m\u00eame publier le fichier de configuration et configurer le middleware. Mais pour 95% des cas, le fichier <code>.env</code> est suffisant.</p> <p>La commande <code>php artisan install:api</code> configure automatiquement le middleware CORS de base pour les routes API dans le fichier <code>bootstrap/app.php</code>. Cela ressemble \u00e0 ceci :</p> <pre><code>// bootstrap/app.php\n-&gt;withMiddleware(function (Middleware $middleware) {\n    // Cette ligne sera d\u00e9j\u00e0 ajout\u00e9e par la commande install:api\n    // C'est elle qui active le traitement CORS pour toutes les routes API\n    $middleware-&gt;api(base_path('routes/api.php'));\n})\n</code></pre> <p>\u00c0 l'int\u00e9rieur de <code>-&gt;api()</code>, Laravel utilise d\u00e9j\u00e0 le middleware <code>HandleCors</code>, qui lit les param\u00e8tres de votre <code>.env</code>. C'est simple et pr\u00eat \u00e0 l'emploi.</p> <p>\u26a0\ufe0f Important ! N'utilisez pas <code>CORS_ALLOWED_ORIGINS='*'</code> sur un serveur de production si votre API n'est pas enti\u00e8rement publique. Cela ouvre une vuln\u00e9rabilit\u00e9 potentielle. Listez toujours les domaines sp\u00e9cifiques de votre frontend.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/2/#3-configuration-cors-dans-fastapi","title":"3. Configuration CORS dans FastAPI","text":"<p>FastAPI utilise le concept de Middleware (logiciel interm\u00e9diaire) pour g\u00e9rer des t\u00e2ches transversales telles que le CORS.</p> <p>\u00c9tape 1 : Ouvrez le fichier principal de votre application</p> <p>C'est le fichier o\u00f9 vous cr\u00e9ez une instance de FastAPI (g\u00e9n\u00e9ralement <code>main.py</code>).</p> <p>\u00c9tape 2 : Ajoutez <code>CORSMiddleware</code></p> <p>FastAPI fournit un middleware pr\u00eat \u00e0 l'emploi pour la configuration CORS.</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware # 1. Importez le middleware\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"API pour la gestion des plan\u00e8tes dans la galaxie\",\n    version=\"1.0.0\"\n)\n\n# 2. Liste des origines autoris\u00e9es\norigins = [\n    \"http://localhost:5500\",\n    \"http://127.0.0.1:5500\",\n    # En production, ce sera le domaine de votre frontend\n    # \"https://my-awesome-app.com\",\n]\n\n# 3. Ajoutez le middleware \u00e0 l'application\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # Autorise les origines sp\u00e9cifi\u00e9es\n    allow_credentials=True, # Autorise les cookies (n\u00e9cessaire pour l'authentification)\n    allow_methods=[\"*\"],    # Autorise toutes les m\u00e9thodes (GET, POST, etc.)\n    allow_headers=[\"*\"],    # Autorise tous les en-t\u00eates\n)\n\n# ... ici vos routeurs et le reste du code\n</code></pre> <p>\u00c9tape 3 : Red\u00e9marrez le serveur Uvicorn Le serveur Uvicorn se recharge g\u00e9n\u00e9ralement automatiquement lorsque le code est modifi\u00e9. Si ce n'est pas le cas, red\u00e9marrez-le manuellement. D\u00e9sormais, votre serveur FastAPI r\u00e9pondra correctement aux requ\u00eates <code>OPTIONS</code> du frontend.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/2/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. La requ\u00eate que le navigateur envoie avant la requ\u00eate principale pour v\u00e9rifier le CORS s'appelle :</p>  a) CHECK request  b) Preflight request  c) Handshake request <p>2. Dans Laravel moderne (11+), les param\u00e8tres CORS de base sont principalement d\u00e9finis dans :</p>  a) Le fichier bootstrap/app.php  b) Le fichier .env  c) Le fichier routes/api.php <p>3. Dans FastAPI, pour configurer CORS, on utilise :</p>  a) Le d\u00e9corateur @app.cors()  b) La classe Security int\u00e9gr\u00e9e  c) Un logiciel interm\u00e9diaire (`Middleware`) <p>4. Quelle valeur de CORS_ALLOWED_ORIGINS est la plus s\u00fbre pour la production ?</p>  a) CORS_ALLOWED_ORIGINS='*'  b) CORS_ALLOWED_ORIGINS=http://my-frontend.com,https://my-frontend.com`  c) Ne pas d\u00e9finir cette variable V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous \u00eates devenu un \"diplomate des communications interstellaires\" ! Vos API peuvent d\u00e9sormais interagir en toute s\u00e9curit\u00e9 avec des applications externes, en utilisant des approches modernes et correctes.</p> <ul> <li>\u2705 Compris le m\u00e9canisme de fonctionnement du CORS et des requ\u00eates de pr\u00e9-vol.</li> <li>\ud83d\udd27 Configur\u00e9 CORS pour Laravel 11+ via le fichier <code>.env</code>.</li> <li>\u2699\ufe0f Configur\u00e9 CORS pour FastAPI \u00e0 l'aide de <code>CORSMiddleware</code>.</li> <li>\ud83d\udef0\ufe0f \u00c9tabli avec succ\u00e8s la connexion entre le frontend et le backend.</li> </ul> <p>Le pont de communication est construit et s\u00e9curis\u00e9. Il est maintenant temps de r\u00e9fl\u00e9chir \u00e0 la mani\u00e8re de n'autoriser que le \"personnel autoris\u00e9\" \u00e0 emprunter ce pont.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>Le crit\u00e8re principal de succ\u00e8s est l'absence d'erreurs CORS dans la console du navigateur lors de la demande de donn\u00e9es depuis le frontend.</li> <li>Dans l'onglet \"Network\" (R\u00e9seau) des outils de d\u00e9veloppement, vous pouvez voir deux requ\u00eates vers votre API : la premi\u00e8re avec la m\u00e9thode <code>OPTIONS</code> (statut 200/204) et la seconde avec la m\u00e9thode <code>GET</code> (statut 200). C'est une d\u00e9monstration visuelle du fonctionnement de CORS.</li> </ul>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/3/","title":"Chapitre 6.3 : Authentification de base","text":"<p>Temps d'\u00e9tude : 1 heure</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/3/#1-authentification-api-le-laissez-passer-du-centre-de-controle-mission","title":"1. Authentification API : Le laissez-passer du Centre de Contr\u00f4le Mission","text":"<p>L'authentification est le processus de v\u00e9rification de l'identit\u00e9 d'un utilisateur. Contrairement aux sites web avec sessions et cookies, les API stateless (sans \u00e9tat) utilisent g\u00e9n\u00e9ralement des jetons.</p> <p>Le processus se d\u00e9roule comme suit :</p> <ol> <li>L'utilisateur envoie son nom d'utilisateur et son mot de passe \u00e0 un point d'extr\u00e9mit\u00e9 d\u00e9di\u00e9 (par exemple, <code>/login</code>).</li> <li>Le serveur les v\u00e9rifie. Si tout est correct, il g\u00e9n\u00e8re un jeton unique et chiffr\u00e9 (une longue cha\u00eene de caract\u00e8res) et le renvoie.</li> <li>Pour chaque requ\u00eate ult\u00e9rieure aux ressources prot\u00e9g\u00e9es (par exemple, <code>POST /planets</code>), l'utilisateur doit joindre ce jeton dans l'en-t\u00eate <code>Authorization</code>.</li> <li>Le serveur v\u00e9rifie la validit\u00e9 du jeton et, s'il est correct, ex\u00e9cute la requ\u00eate.</li> </ol> <p>\ud83d\udca1 Analogie spatiale :</p> <ul> <li>Nom d'utilisateur/mot de passe = Votre scan biom\u00e9trique pour obtenir le laissez-passer.</li> <li>Jeton = Le laissez-passer \u00e9lectronique (carte d'identit\u00e9) que vous recevez \u00e0 l'entr\u00e9e du Centre de Contr\u00f4le Mission.</li> <li>En-t\u00eate <code>Authorization: Bearer &lt;jeton&gt;</code> = Vous pr\u00e9sentez votre laissez-passer au lecteur devant chaque porte s\u00e9curis\u00e9e.</li> <li>Points d'extr\u00e9mit\u00e9 prot\u00e9g\u00e9s (POST, PUT, DELETE) = Les portes menant \u00e0 la salle des serveurs ou au pupitre de commande de lancement.</li> </ul>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/3/#2-authentification-dans-laravel-sanctum","title":"2. Authentification dans Laravel : Sanctum","text":"<p>Laravel offre une solution \u00e9l\u00e9gante pour l'authentification API \u2014 Laravel Sanctum. Il est id\u00e9al pour les SPA (applications monopages), les applications mobiles et les API simples bas\u00e9es sur des jetons.</p> <p>\u00c9tape 1 : Installation et configuration de Sanctum</p> <p>Sanctum est d\u00e9j\u00e0 install\u00e9 dans une application Laravel standard, mais nous allons v\u00e9rifier la configuration.</p> <ol> <li>Publication de la configuration (si ce n'est pas d\u00e9j\u00e0 fait) : <pre><code>php artisan vendor:publish --provider=\"Laravel\\Sanctum\\SanctumServiceProvider\"\n</code></pre></li> <li>Ex\u00e9cution des migrations (cr\u00e9era la table <code>personal_access_tokens</code>) : <pre><code>php artisan migrate\n</code></pre></li> <li>Ajout du trait au mod\u00e8le <code>User</code> :     Ouvrez <code>app/Models/User.php</code> et assurez-vous qu'il utilise le trait <code>HasApiTokens</code>.     <pre><code>// app/Models/User.php\nuse Laravel\\Sanctum\\HasApiTokens;\n\nclass User extends Authenticatable\n{\n    use HasApiTokens, HasFactory, Notifiable;\n    // ...\n}\n</code></pre></li> </ol> <p>\u00c9tape 2 : Cr\u00e9ation d'un point d'extr\u00e9mit\u00e9 pour l'\u00e9mission de jetons Nous avons besoin d'une route vers laquelle l'utilisateur enverra son nom d'utilisateur/mot de passe.</p> <p>Ajoutez \u00e0 <code>routes/api.php</code> : <pre><code>// routes/api.php\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Models\\User;\nuse Illuminate\\Validation\\ValidationException;\n\nRoute::post('/login', function (Request $request) {\n    $request-&gt;validate([\n        'email' =&gt; 'required|email',\n        'password' =&gt; 'required',\n    ]);\n\n    $user = User::where('email', $request-&gt;email)-&gt;first();\n\n    if (! $user || ! Hash::check($request-&gt;password, $user-&gt;password)) {\n        throw ValidationException::withMessages([\n            'email' =&gt; ['Les identifiants sont incorrects.'],\n        ]);\n    }\n\n    // Retourne le jeton\n    return response()-&gt;json([\n        'token' =&gt; $user-&gt;createToken('api-token')-&gt;plainTextToken\n    ]);\n});\n</code></pre></p> <p>Pour les tests, vous pouvez cr\u00e9er un utilisateur via un seeder ou Tinker.</p> <p>\u00c9tape 3 : Protection des routes Maintenant, prot\u00e9geons nos op\u00e9rations CRUD. Modifions <code>routes/api.php</code> :</p> <pre><code>// routes/api.php\nuse App\\Http\\Controllers\\PlanetController;\n\n// Route publique pour visualiser les plan\u00e8tes\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// Groupe de routes prot\u00e9g\u00e9es\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n\n    // Route pour la d\u00e9connexion (suppression du jeton)\n    Route::post('/logout', function (Request $request) {\n        $request-&gt;user()-&gt;currentAccessToken()-&gt;delete();\n        return response()-&gt;json(['message' =&gt; 'Vous avez \u00e9t\u00e9 d\u00e9connect\u00e9 avec succ\u00e8s'], 200);\n    });\n});\n</code></pre> <p>Le middleware <code>auth:sanctum</code> v\u00e9rifiera la pr\u00e9sence d'un jeton valide dans l'en-t\u00eate <code>Authorization</code>.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/3/#3-authentification-dans-fastapi-oauth2-et-jwt","title":"3. Authentification dans FastAPI : OAuth2 et JWT","text":"<p>FastAPI ne dispose pas de syst\u00e8me d'authentification int\u00e9gr\u00e9, mais il offre de puissants outils pour sa mise en \u0153uvre. La norme de facto est OAuth2 avec des jetons JWT.</p> <p>\u00c9tape 1 : Installation des d\u00e9pendances <pre><code>pip install \"python-jose[cryptography]\" \"passlib[bcrypt]\" \"python-multipart\"\n</code></pre></p> <ul> <li><code>python-jose</code> : pour la cr\u00e9ation et la v\u00e9rification des jetons JWT.</li> <li><code>passlib</code> : pour le hachage et la v\u00e9rification des mots de passe.</li> <li><code>python-multipart</code> : pour le traitement des donn\u00e9es de formulaire (<code>username</code> et <code>password</code>).</li> </ul> <p>\u00c9tape 2 : Cr\u00e9ation du module de s\u00e9curit\u00e9 (<code>security.py</code>) C'est une bonne pratique de d\u00e9placer toute la logique d'authentification dans un fichier s\u00e9par\u00e9.</p> <p>Cr\u00e9ez le fichier <code>security.py</code> :</p> <pre><code># security.py\nfrom fastapi import Depends, HTTPException, status\nfrom fastapi.security import OAuth2PasswordBearer\nfrom jose import JWTError, jwt\nfrom passlib.context import CryptContext\nfrom datetime import datetime, timedelta, timezone\n\n# --- Param\u00e8tres ---\nSECRET_KEY = \"your-super-secret-key-that-is-long-and-random\" # \u26a0\ufe0f Remplacez par votre propre cl\u00e9 !\nALGORITHM = \"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES = 30\n\n# --- Utilitaires ---\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/api/v1/login\")\n\n# --- Fonctions ---\ndef verify_password(plain_password, hashed_password):\n    return pwd_context.verify(plain_password, hashed_password)\n\ndef get_password_hash(password):\n    return pwd_context.hash(password)\n\ndef create_access_token(data: dict):\n    to_encode = data.copy()\n    expire = datetime.now(timezone.utc) + timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    to_encode.update({\"exp\": expire})\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n    return encoded_jwt\n\n# --- Fonction de d\u00e9pendance pour la v\u00e9rification du jeton ---\ndef get_current_user(token: str = Depends(oauth2_scheme)):\n    credentials_exception = HTTPException(\n        status_code=status.HTTP_401_UNAUTHORIZED,\n        detail=\"Impossible de valider les identifiants\",\n        headers={\"WWW-Authenticate\": \"Bearer\"},\n    )\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\n        username: str = payload.get(\"sub\")\n        if username is None:\n            raise credentials_exception\n    except JWTError:\n        raise credentials_exception\n    # Ici, vous pouvez retourner l'utilisateur depuis la BDD, pour l'instant, nous retournons juste le nom\n    return {\"username\": username}\n</code></pre> <p>\u00c9tape 3 : Int\u00e9gration dans <code>main.py</code> Maintenant, int\u00e9grons cela \u00e0 notre application.</p> <ol> <li> <p>Cr\u00e9ons un point d'extr\u00e9mit\u00e9 <code>/login</code> : <pre><code># main.py\nfrom fastapi.security import OAuth2PasswordRequestForm\nfrom fastapi import Depends, APIRouter\nfrom . import security # Importons notre module\n\n# ... votre code FastAPI ...\nrouter = APIRouter(prefix=\"/api/v1\")\n\n@router.post(\"/login\")\ndef login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):\n    # Ici, la v\u00e9rification de l'utilisateur dans la BDD doit avoir lieu\n    # Pour l'exemple, nous avons un utilisateur de test\n    is_user_valid = (form_data.username == \"testuser\" and\n                     security.verify_password(\"testpass\", security.get_password_hash(\"testpass\")))\n\n    if not is_user_valid:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"Nom d'utilisateur ou mot de passe incorrect\",\n        )\n    access_token = security.create_access_token(data={\"sub\": form_data.username})\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\n\n# ...\napp.include_router(router)\n</code></pre></p> </li> <li> <p>Prot\u00e9geons les points d'extr\u00e9mit\u00e9 :</p> <p>Utilisons notre d\u00e9pendance <code>get_current_user</code>. <pre><code># main.py ou dans votre routeur de plan\u00e8tes\n\n@router.post(\"/planets\", status_code=status.HTTP_201_CREATED)\ndef create_planet(\n    planet: PlanetCreate,\n    current_user: dict = Depends(security.get_current_user) # &lt;-- Protection !\n):\n    # Logique de cr\u00e9ation de plan\u00e8te...\n    print(f\"L'utilisateur {current_user['username']} cr\u00e9e une plan\u00e8te.\")\n    # ...\n    return new_planet\n\n# Prot\u00e9geons \u00e9galement PUT et DELETE\n</code></pre></p> </li> </ol>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/3/#4-utilisation-des-jetons-sur-le-frontend","title":"4. Utilisation des jetons sur le frontend","text":"<p>Notre frontend doit maintenant d'abord obtenir le jeton, le stocker (par exemple, dans <code>localStorage</code>) et le joindre \u00e0 chaque requ\u00eate prot\u00e9g\u00e9e.</p> <p>Exemple en JavaScript (<code>fetch</code>) : <pre><code>// 1. Connexion\nasync function login(email, password) {\n    const response = await fetch('http://localhost:8001/api/login', { // Adresse de l'API Laravel\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({email, password})\n    });\n    const data = await response.json();\n\n    if (data.token) {\n        localStorage.setItem('api_token', data.token); // Stocke le jeton\n    }\n}\n\n// 2. Effectue une requ\u00eate prot\u00e9g\u00e9e\nasync function createPlanet(planetData) {\n    const token = localStorage.getItem('api_token');\n\n    const response = await fetch('http://localhost:8001/api/planets', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` // &lt;--- Joindre le jeton !\n        },\n        body: JSON.stringify(planetData)\n    });\n    // ...\n}\n</code></pre></p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/3/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Les API Stateless utilisent le plus souvent pour l'authentification :</p>  a) Sessions et cookies  b) Jetons (par exemple, JWT)  c) Adresses IP <p>2. Dans Laravel, pour prot\u00e9ger les routes avec des jetons, le middleware utilis\u00e9 est :</p>  a) auth:api  b) auth:sanctum  c) verified <p>3. Dans FastAPI, pour obtenir les donn\u00e9es d'un formulaire de connexion, la d\u00e9pendance utilis\u00e9e est :</p>  a) Body()  b) Form()  c) OAuth2PasswordRequestForm = Depends() <p>4. Comment le jeton est-il transmis du client au serveur dans une requ\u00eate prot\u00e9g\u00e9e ?</p>  a) Dans le param\u00e8tre URL `?token=...`  b) Dans le corps de la requ\u00eate  c) Dans l'en-t\u00eate HTTP `Authorization: Bearer ` V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez mis en place un \"syst\u00e8me de contr\u00f4le d'acc\u00e8s\" sur vos API. D\u00e9sormais, n'importe qui ne peut plus modifier votre \"base de donn\u00e9es galactique\".</p> <ul> <li>\u2705 Compris le principe de l'authentification bas\u00e9e sur les jetons.</li> <li>\ud83d\udd10 Mis en \u0153uvre l'\u00e9mission de jetons et la protection des routes dans Laravel Sanctum.</li> <li>\u2699\ufe0f Configur\u00e9e l'authentification bas\u00e9e sur OAuth2 et JWT dans FastAPI.</li> <li>\ud83d\udef0\ufe0f Appris comment le frontend doit stocker et utiliser le jeton.</li> </ul> <p>Vos API sont devenues non seulement fonctionnelles, mais aussi s\u00e9curis\u00e9es. Cependant, pour que d'autres d\u00e9veloppeurs puissent les utiliser, ils ont besoin d'\"instructions d'utilisation\".</p> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>Essayez de faire une requ\u00eate <code>POST</code> \u00e0 <code>/api/planets</code> (dans Laravel) ou <code>/api/v1/planets</code> (dans FastAPI) sans jeton en utilisant Postman ou Insomnia. Vous devriez obtenir une erreur <code>401 Unauthorized</code>.</li> <li>Faites une requ\u00eate \u00e0 <code>/login</code>, obtenez un jeton, ajoutez-le \u00e0 l'en-t\u00eate <code>Authorization</code> et r\u00e9p\u00e9tez la requ\u00eate <code>POST</code>. Elle devrait s'ex\u00e9cuter avec succ\u00e8s.</li> </ul>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/4/","title":"Chapitre 6.4 : Documentation de l'API","text":"<p>Temps d'\u00e9tude : 30 minutes</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/4/#1-pourquoi-documenter-une-api","title":"1. Pourquoi documenter une API ?","text":"<p>Imaginez qu'on vous donne une t\u00e9l\u00e9commande d'un vaisseau spatial complexe sans aucune \u00e9tiquette sur les boutons. Vous les presseriez au hasard, risquant de lancer le si\u00e8ge \u00e9jectable au lieu d'allumer la lumi\u00e8re. La documentation d'API, ce sont ces \u00e9tiquettes et ces instructions.</p> <p>Une bonne documentation :</p> <ul> <li>\u00c9conomise du temps : Les d\u00e9veloppeurs n'ont pas \u00e0 deviner quels sont les points d'API existants, quels param\u00e8tres ils acceptent et ce qu'ils retournent.</li> <li>R\u00e9duit les erreurs : Une description claire des formats de donn\u00e9es et des codes d'erreur aide \u00e0 \u00e9viter une mauvaise utilisation de l'API.</li> <li>Simplifie l'int\u00e9gration : L'\u00e9quipe frontend peut travailler en parall\u00e8le avec l'\u00e9quipe backend, en se basant sur la documentation comme sur un contrat.</li> <li>Est votre h\u00e9ritage : Dans six mois, vous vous remercierez vous-m\u00eame lorsque vous reviendrez sur le projet.</li> </ul> <p>\ud83d\udca1 Analogie spatiale :</p> <ul> <li>API = Syst\u00e8me de contr\u00f4le complexe d'une station spatiale.</li> <li>Documentation de l'API = Guide pour les astronautes. Il d\u00e9crit :</li> <li>Quelle commande (<code>point d'API</code>) envoyer pour ouvrir le sas.</li> <li>Quels param\u00e8tres (<code>corps de requ\u00eate</code>) transmettre pour configurer le syst\u00e8me de survie.</li> <li>Quels signaux (<code>r\u00e9ponses de l'API</code>) attendre en retour.</li> </ul>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/4/#2-documentation-dans-fastapi-la-magie-automatique","title":"2. Documentation dans FastAPI : La magie automatique","text":"<p>FastAPI rend la documentation incroyablement simple. Il g\u00e9n\u00e8re automatiquement une documentation interactive bas\u00e9e sur votre code, en utilisant les standards OpenAPI et Swagger UI.</p> <p>\u00c9tape 1 : Ajoutez des m\u00e9tadonn\u00e9es \u00e0 votre application</p> <p>Dans <code>main.py</code>, vous pouvez ajouter des descriptions qui appara\u00eetront dans la documentation.</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel, Field\n\n# ... (code FastAPI)\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"\"\"\nAPI pour l'exploration de la galaxie. \ud83d\ude80\n\nVous pourrez :\n* **Consulter les plan\u00e8tes**.\n* **Ajouter de nouveaux mondes** (authentification requise).\n    \"\"\",\n    version=\"1.0.0\",\n    contact={\n        \"name\": \"Ing\u00e9nieur en chef du centre de contr\u00f4le\",\n        \"url\": \"https://example.com/contact\",\n        \"email\": \"engineer@example.com\",\n    },\n)\n</code></pre> <p>\u00c9tape 2 : D\u00e9crivez vos mod\u00e8les et points d'API</p> <p>Plus vous d\u00e9crivez en d\u00e9tail les mod\u00e8les Pydantic et les param\u00e8tres des points d'API, meilleure sera la documentation.</p> <pre><code># Dans le fichier des mod\u00e8les Pydantic ou dans main.py\n\nclass PlanetBase(BaseModel):\n    name: str = Field(..., example=\"Terre\", description=\"Nom de la plan\u00e8te\")\n    description: str = Field(..., example=\"Plan\u00e8te bleue avec une vie diverse\", description=\"Br\u00e8ve description\")\n    # ...\n\nclass Planet(PlanetBase):\n    id: int\n    is_habitable: bool\n\n    class Config:\n        orm_mode = True # ou from_attributes = True dans Pydantic v2\n\n# Dans le fichier des routes\n@router.get(\n    \"/planets\",\n    response_model=list[Planet],\n    summary=\"Obtenir la liste de toutes les plan\u00e8tes\",\n    description=\"Retourne une liste de toutes les plan\u00e8tes connues avec pagination (\u00e0 l'avenir).\"\n)\ndef get_planets():\n    # ...\n\n@router.post(\n    \"/planets\",\n    # ...\n    summary=\"Cr\u00e9er une nouvelle plan\u00e8te\",\n    responses={\n        401: {\"description\": \"Utilisateur non autoris\u00e9\"},\n        422: {\"description\": \"Erreur de validation des donn\u00e9es\"}\n    }\n)\ndef create_planet(planet: PlanetCreate, ...):\n    # ...\n</code></pre> <ul> <li><code>Field(..., example=\"...\")</code>: Ajoute des exemples \u00e0 la documentation.</li> <li><code>summary</code>: Br\u00e8ve description du point d'API.</li> <li><code>description</code>: Description d\u00e9taill\u00e9e.</li> <li><code>responses</code>: Description des codes de r\u00e9ponse possibles, en dehors du succ\u00e8s.</li> </ul> <p>\u00c9tape 3 : Ouvrez la documentation dans le navigateur</p> <p>Lancez votre serveur FastAPI et ouvrez deux URL magiques :</p> <ol> <li><code>http://127.0.0.1:8000/docs</code> \u2014 ouvrira la documentation interactive Swagger UI. Ici, vous pouvez non seulement lire, mais aussi tester vos points d'API directement depuis le navigateur !</li> <li><code>http://127.0.0.1:8000/redoc</code> \u2014 ouvrira une vue alternative de la documentation ReDoc. Elle est moins interactive, mais souvent plus lisible.</li> </ol>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/4/#3-documentation-dans-laravel-utilisation-de-paquets-tiers","title":"3. Documentation dans Laravel : Utilisation de paquets tiers","text":"<p>Contrairement \u00e0 FastAPI, Laravel ne g\u00e9n\u00e8re pas de documentation \"pr\u00eate \u00e0 l'emploi\". Cependant, il existe d'excellents paquets qui le font en analysant votre code. Le plus populaire est Scribe.</p> <p>\u00c9tape 1 : Installation de Scribe <pre><code>composer require --dev \"knuckleswtf/scribe\"\n</code></pre> <pre><code>php artisan vendor:publish --tag=scribe-config\nphp artisan scribe:generate\n</code></pre></p> <p>\u00c9tape 2 : Description des points d'API avec les DocBlocks</p> <p>Scribe lit les DocBlocks PHP (commentaires de type <code>/** ... */</code>) au-dessus des m\u00e9thodes de votre contr\u00f4leur.</p> <p>Ouvrez <code>app/Http/Controllers/PlanetController.php</code> :</p> <pre><code>// app/Http/Controllers/PlanetController.php\n\n/**\n * @group Plan\u00e8tes\n * API pour la gestion des plan\u00e8tes\n */\nclass PlanetController extends Controller\n{\n    /**\n     * Obtenir la liste des plan\u00e8tes\n     *\n     * Retourne une liste pagin\u00e9e de toutes les plan\u00e8tes de la galaxie.\n     *\n     * @unauthenticated\n     */\n    public function index()\n    {\n        // ...\n    }\n\n    /**\n     * Cr\u00e9er une nouvelle plan\u00e8te\n     *\n     * @authenticated\n     *\n     * @bodyParam name string required Nom de la plan\u00e8te. Example: Kepler-186f\n     * @bodyParam description string required Description de la plan\u00e8te.\n     * @bodyParam size_km integer required Diam\u00e8tre en kilom\u00e8tres. Example: 14000\n     * @bodyParam is_habitable boolean La plan\u00e8te est-elle habitable. Example: true\n     *\n     * @response 201 {\n     *  \"id\": 4,\n     *  \"name\": \"Kepler-186f\",\n     *  \"description\": \"Premi\u00e8re plan\u00e8te de la taille de la Terre confirm\u00e9e dans la zone habitable d'une autre \u00e9toile.\",\n     *  \"size_km\": 14000,\n     *  \"is_habitable\": true,\n     *  \"created_at\": \"2023-10-27T12:00:00.000000Z\",\n     *  \"updated_at\": \"2023-10-27T12:00:00.000000Z\"\n     * }\n     */\n    public function store(Request $request)\n    {\n        // ...\n    }\n    // ... et ainsi de suite pour les autres m\u00e9thodes\n}\n</code></pre> <p>Balises cl\u00e9s de Scribe :</p> <ul> <li><code>@group</code>: Regroupe les points d'API.</li> <li><code>@unauthenticated</code> / <code>@authenticated</code>: Indique si un jeton est requis.</li> <li><code>@bodyParam</code>: D\u00e9crit un param\u00e8tre dans le corps de la requ\u00eate.</li> <li><code>@response</code>: Exemple de r\u00e9ponse r\u00e9ussie.</li> </ul> <p>\u00c9tape 3 : G\u00e9n\u00e9ration et visualisation de la documentation</p> <p>Chaque fois apr\u00e8s avoir apport\u00e9 des modifications aux DocBlocks, ex\u00e9cutez la commande :</p> <p><pre><code>php artisan scribe:generate\n</code></pre> Scribe cr\u00e9era une page HTML statique avec votre documentation. Ouvrez-la \u00e0 l'adresse : <code>http://your-app-url/docs</code>.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/4/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. FastAPI g\u00e9n\u00e8re la documentation bas\u00e9e sur le standard :</p>  a) GraphQL  b) OpenAPI (Swagger)  c) WSDL <p>2. Quelle URL ouvre Swagger UI dans FastAPI par d\u00e9faut ?</p>  a) /api/docs  b) /swagger  c) /docs <p>3. Paquet populaire pour la g\u00e9n\u00e9ration de documentation dans Laravel :</p>  a) Telescope  b) Scribe  c) Horizon <p>4. Dans Scribe, la balise utilis\u00e9e pour d\u00e9crire les param\u00e8tres du corps de la requ\u00eate est :</p>  a) @param  b) @bodyParam  c) @request V\u00e9rifier <p>\ud83d\ude80 R\u00e9sum\u00e9 du chapitre :</p> <p>Vous avez cr\u00e9\u00e9 une documentation professionnelle, transformant vos API de \"bo\u00eetes noires\" en outils clairs et faciles \u00e0 utiliser.</p> <ul> <li>\u2705 Compris l'importance critique de la documentation des API.</li> <li>\ud83e\ude84 Appris \u00e0 utiliser la g\u00e9n\u00e9ration automatique de documentation dans FastAPI.</li> <li>\u2699\ufe0f Ma\u00eetris\u00e9 les bases du paquet Scribe pour documenter les API avec Laravel.</li> <li>\ud83d\udef0\ufe0f Constat\u00e9 qu'une bonne documentation est le meilleur alli\u00e9 de tout d\u00e9veloppeur.</li> </ul> <p>Vos API fonctionnent et sont s\u00e9curis\u00e9es, et elles sont d\u00e9sormais enti\u00e8rement pr\u00eates \u00e0 \u00eatre utilis\u00e9es par d'autres membres de l'\u00e9quipe. Il ne reste qu'une derni\u00e8re \u00e9tape, mais la plus importante : la v\u00e9rification finale de la s\u00e9curit\u00e9.</p> <p>\ud83d\udccc V\u00e9rification :</p> <ul> <li>Pour FastAPI : ouvrez <code>/docs</code> dans le navigateur et essayez d'effectuer une requ\u00eate <code>GET</code> vers la liste des plan\u00e8tes directement depuis l'interface Swagger UI.</li> <li>Pour Laravel : ex\u00e9cutez <code>php artisan scribe:generate</code> et ouvrez <code>/docs</code>. Assurez-vous que les points d'API sont regroup\u00e9s et que la m\u00e9thode <code>store</code> a une description des param\u00e8tres.</li> </ul>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/5/","title":"Chapitre 6.5 : Fondamentaux de la s\u00e9curit\u00e9 des API","text":"<p>Temps d'\u00e9tude : 45 minutes</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/5/#1-securite-des-api-une-defense-de-station-a-plusieurs-niveaux","title":"1. S\u00e9curit\u00e9 des API : Une d\u00e9fense de station \u00e0 plusieurs niveaux","text":"<p>Imaginez que votre station spatiale (API) se trouve dans un secteur hostile de l'espace. Un seul champ de force (authentification) ne suffit pas. Vous avez besoin d'un syst\u00e8me de d\u00e9fense complet :</p> <ul> <li>Boucliers (HTTPS) : Chiffrement de tout le trafic.</li> <li>Capteurs d'anomalies (Rate Limiting) : Protection contre les requ\u00eates trop fr\u00e9quentes.</li> <li>Cloisons internes (Autorisation) : S\u00e9paration des droits d'acc\u00e8s.</li> <li>Inspection des cargaisons (Validation) : Ne faire confiance \u00e0 aucune donn\u00e9e entrante.</li> <li>Coffre-fort secret (Variables d'environnement) : Stockage s\u00e9curis\u00e9 des cl\u00e9s.</li> </ul> <p>Param\u00e9trons chacun de ces niveaux.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/5/#2-boucliers-toujours-utiliser-https","title":"2. Boucliers : Toujours utiliser HTTPS","text":"<p>Qu'est-ce que c'est ? HTTPS (HyperText Transfer Protocol Secure) est une version du protocole HTTP qui chiffre toutes les donn\u00e9es entre le client et le serveur. Sans lui, quiconque \"\u00e9coute\" le r\u00e9seau (par exemple, dans un Wi-Fi public) peut intercepter les identifiants, mots de passe et jetons.</p> <p>Comment impl\u00e9menter ?</p> <ul> <li>En production \u2014 obligatoire. Lors du d\u00e9ploiement de votre API sur un serveur r\u00e9el (Heroku, DigitalOcean, etc.), configurez le serveur web (Nginx, Apache) pour qu'il fonctionne avec un certificat SSL. Des services comme Let's Encrypt fournissent des certificats gratuits.</li> <li>En d\u00e9veloppement local c'est moins critique, mais des outils comme Laravel Herd ou mkcert permettent de configurer facilement le HTTPS local.</li> </ul> <p>\ud83d\udca1 R\u00e8gle n\u00b01 de la s\u00e9curit\u00e9 des API : Pas de HTTPS \u2014 pas de s\u00e9curit\u00e9.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/5/#3-capteurs-danomalies-limitation-du-taux-de-requetes-rate-limiting","title":"3. Capteurs d'anomalies : Limitation du taux de requ\u00eates (Rate Limiting)","text":"<p>Qu'est-ce que c'est ? Protection contre les attaques par force brute (lorsqu'un attaquant tente de deviner un mot de passe en envoyant des milliers de requ\u00eates par seconde) et contre les attaques DoS (lorsque le serveur est \"submerg\u00e9\" de requ\u00eates pour le rendre indisponible). Le Rate Limiting limite le nombre de requ\u00eates qu'un utilisateur (ou une adresse IP) peut effectuer dans un laps de temps donn\u00e9.</p> <p>Comment impl\u00e9menter ?</p> <ul> <li> <p>Dans Laravel : Le middleware de limitation est d\u00e9j\u00e0 int\u00e9gr\u00e9 !   Ouvrez <code>app/Http/Kernel.php</code> et regardez la cl\u00e9 <code>middlewareGroups['api']</code>. Il y a d\u00e9j\u00e0 <code>'throttle:api'</code>. Les param\u00e8tres de cette limitation se trouvent dans <code>app/Providers/RouteServiceProvider.php</code> dans la m\u00e9thode <code>configureRateLimiting()</code>.   <pre><code>// app/Providers/RouteServiceProvider.php\nprotected function configureRateLimiting()\n{\n    RateLimiter::for('api', function (Request $request) {\n        return Limit::perMinute(60)-&gt;by($request-&gt;user()?-&gt;id ?: $request-&gt;ip());\n    });\n}\n</code></pre>   Cela signifie : 60 requ\u00eates par minute par utilisateur (s'il est authentifi\u00e9) ou par adresse IP.</p> </li> <li> <p>Dans FastAPI : Un paquet tiers est utilis\u00e9, par exemple, <code>slowapi</code>.</p> </li> <li> <p>Installation : <code>pip install slowapi</code></p> </li> <li>Int\u00e9gration dans <code>main.py</code> :       <pre><code># main.py\nfrom slowapi import Limiter, _rate_limit_exceeded_handler\nfrom slowapi.util import get_remote_address\nfrom slowapi.errors import RateLimitExceeded\n\nlimiter = Limiter(key_func=get_remote_address)\napp = FastAPI(...)\n\n# On connecte le gestionnaire d'exceptions et le limiteur lui-m\u00eame\napp.state.limiter = limiter\napp.add_exception_handler(RateLimitExceeded, _rate_limit_exceeded_handler)\n\n# Appliquer \u00e0 un point de terminaison sp\u00e9cifique\n@router.get(\"/planets\")\n@limiter.limit(\"5/minute\") # 5 requ\u00eates par minute\ndef get_planets(request: Request):\n    # ...\n</code></pre></li> </ul>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/5/#4-cloisons-internes-autorisation-a-ne-pas-confondre-avec-lauthentification","title":"4. Cloisons internes : Autorisation (\u00e0 ne pas confondre avec l'authentification !)","text":"<p>Qu'est-ce que c'est ?</p> <ul> <li>L'authentification r\u00e9pond \u00e0 la question \"Qui es-tu ?\".</li> <li>L'autorisation r\u00e9pond \u00e0 la question \"Qu'as-tu le droit de faire ?\".</li> </ul> <p>Par exemple, un utilisateur ordinaire peut consulter les plan\u00e8tes, mais seul un utilisateur avec le r\u00f4le \"administrateur\" peut les supprimer.</p> <p>Comment impl\u00e9menter ?</p> <ul> <li> <p>Dans Laravel : Les Policies (Politiques) ou les Gates (Portails) sont utilis\u00e9s.</p> </li> <li> <p>Cr\u00e9ation d'une politique : <code>php artisan make:policy PlanetPolicy --model=Planet</code></p> </li> <li>Description des r\u00e8gles dans <code>app/Policies/PlanetPolicy.php</code> :       <pre><code>class PlanetPolicy\n{\n    // Autoriser la suppression uniquement aux utilisateurs avec le r\u00f4le 'admin'\n    public function delete(User $user, Planet $planet): bool\n    {\n        return $user-&gt;role === 'admin';\n    }\n}\n</code></pre></li> <li> <p>Application de la politique dans le contr\u00f4leur <code>PlanetController.php</code> :       <pre><code>public function destroy(Planet $planet)\n{\n    // On v\u00e9rifie si l'utilisateur actuel a le droit de supprimer\n    $this-&gt;authorize('delete', $planet);\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre></p> </li> <li> <p>Dans FastAPI : La logique d'autorisation est g\u00e9n\u00e9ralement \u00e9crite manuellement \u00e0 l'int\u00e9rieur des points de terminaison, en utilisant les informations utilisateur obtenues \u00e0 partir du jeton.</p> </li> </ul> <pre><code># (nous supposons que le jeton contient un champ 'roles')\ndef get_current_active_user(token: str = Depends(oauth2_scheme)):\n    # ... nous d\u00e9codons le jeton et obtenons l'utilisateur avec les r\u00f4les de la base de donn\u00e9es\n    # user = get_user_from_db(username)\n    return user # retourne l'objet utilisateur\n\n@router.delete(\"/planets/{planet_id}\")\ndef delete_planet(\n    planet_id: int,\n    current_user: User = Depends(get_current_active_user)\n):\n    if \"admin\" not in current_user.roles:\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail=\"Droits insuffisants pour effectuer cette op\u00e9ration\",\n        )\n    # ... logique de suppression ...\n</code></pre>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/5/#5-inspection-des-cargaisons-et-coffre-fort-secret-validation-et-variables-denvironnement","title":"5. Inspection des cargaisons et Coffre-fort secret : Validation et Variables d'environnement","text":"<p>Nous avons d\u00e9j\u00e0 impl\u00e9ment\u00e9 ces deux points, mais il est important de souligner leur r\u00f4le dans la s\u00e9curit\u00e9.</p> <ul> <li> <p>Ne jamais faire confiance aux donn\u00e9es entrantes (Validation) :</p> </li> <li> <p>Nous avons utilis\u00e9 <code>$request-&gt;validate()</code> dans Laravel et les mod\u00e8les Pydantic dans FastAPI. Cela nous prot\u00e8ge des injections SQL (lors de l'utilisation d'Eloquent/SQLAlchemy) et des donn\u00e9es incorrectes qui pourraient casser l'application. Toujours valider tout ce qui vient de l'ext\u00e9rieur !</p> </li> <li> <p>Stocker les secrets dans <code>.env</code> (Variables d'environnement) :</p> </li> <li> <p>Les cl\u00e9s de bases de donn\u00e9es, les cl\u00e9s secr\u00e8tes pour JWT (<code>SECRET_KEY</code>), les cl\u00e9s de services tiers \u2014 tout cela ne doit jamais \u00eatre inclus dans le syst\u00e8me de contr\u00f4le de version (Git). C'est pourquoi il existe des fichiers <code>.env</code> qui sont ajout\u00e9s au <code>.gitignore</code>.</p> </li> </ul>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/5/#quiz-pour-la-consolidation","title":"Quiz pour la consolidation","text":"<p>1. Pour se prot\u00e9ger de l'interception de donn\u00e9es sur les r\u00e9seaux publics, on utilise :</p>  a) Rate Limiting  b) HTTPS  c) CORS <p>2. La limitation du taux de requ\u00eates (Rate Limiting) prot\u00e8ge principalement contre :</p>  a) les injections SQL  b) les attaques par force brute et DoS  c) le Cross-Site Scripting (XSS) <p>3. La question \"Qu'est-ce que cet utilisateur a le droit de faire ?\" est r\u00e9solue par :</p>  a) l'Authentification  b) l'Autorisation  c) la Validation <p>4. Les cl\u00e9s secr\u00e8tes d'API et les mots de passe de la base de donn\u00e9es doivent \u00eatre stock\u00e9s :</p>  a) Directement dans le code pour plus de commodit\u00e9  b) Dans un d\u00e9p\u00f4t public sur GitHub  c) Dans un fichier `.env`, qui est exclu de Git V\u00e9rifier <p>\ud83d\ude80 Fin du cours F\u00e9licitations, commandant ! Vous avez men\u00e9 \u00e0 bien toutes les missions.</p> <p>Vous \u00eates pass\u00e9 d'un d\u00e9butant qui n'avait qu'entendu parler des API \u00e0 un ing\u00e9nieur capable de concevoir, d\u00e9velopper, documenter, s\u00e9curiser et tester de mani\u00e8re autonome un service web complet en utilisant deux des technologies les plus populaires de leurs \u00e9cosyst\u00e8mes respectifs.</p> <p>Vous avez ma\u00eetris\u00e9 le langage universel REST, appris Laravel et FastAPI et construit pour eux un \"Centre de Contr\u00f4le de Mission\" en JavaScript pur.</p> <p>C'est une \u00e9norme r\u00e9ussite. Le monde du d\u00e9veloppement API est d\u00e9sormais ouvert \u00e0 vous. Continuez \u00e0 explorer, \u00e0 apprendre et \u00e0 construire des choses incroyables.</p>"},{"location":"fr/Chapitre%206%20-%20Int%C3%A9gration%20et%20meilleures%20pratiques/5/#fin-de-la-transmission","title":"Fin de la transmission. \ud83d\ude80\u2604 Soutenez la mission","text":"<p>La cr\u00e9ation de ce tutoriel \u2014 est un long et complexe voyage qui demande beaucoup de temps et d'\u00e9nergie. Si ce contenu vous a \u00e9t\u00e9 utile, vous pouvez nous aider \u00e0 remplir les r\u00e9servoirs de carburant de notre exp\u00e9dition. Chaque soutien est un tour de plus sur l'orbite vers de nouveaux mat\u00e9riaux utiles.</p> <p></p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/1/","title":"1.1\uc7a5: API\ub780 \ubb34\uc5c7\uc774\uba70 \uc65c \ud544\uc694\ud55c\uac00?","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 30\ubd84</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/1/#1-api","title":"1. \uc18c\uac1c: \"\uc6b0\uc8fc \ub3c4\ud0b9 \ud5c8\ube0c\"\ub85c\uc11c\uc758 API","text":"<p>\uc6b0\uc8fc\uc120 \uc0ac\ub839\uad00\uc774\ub77c\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. \uc6b0\uc8fc\uc120\uc744 ISS\uc5d0 \uc5f0\uacb0\ud558\ub824\uba74 \ud45c\uc900 \ub3c4\ud0b9 \ud5c8\ube0c\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc6b0\uc8fc\uc120\uacfc \uc6b0\uc8fc \uc815\uac70\uc7a5\uc774 \uc644\ubcbd\ud558\uac8c \ub9de\uc544\ub3c4, \uc774\uac83\uc774 \uc5c6\uc73c\uba74 \ub3c4\ud0b9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.</p> <p>API (Application Programming Interface)\ub294 \ud504\ub85c\uadf8\ub7a8\ub4e4\uc744 \uc704\ud55c \uc774\uc640 \uac19\uc740 \"\ub3c4\ud0b9 \ud5c8\ube0c\"\uc785\ub2c8\ub2e4. - \uc11c\ub85c \ub2e4\ub978 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub370\uc774\ud130\ub97c \uad50\ud658\ud558\uace0 \ud568\uaed8 \uc791\ub3d9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uaddc\uce59 \uc9d1\ud569\uc785\ub2c8\ub2e4. - \uc608\uc2dc: \ubaa8\ubc14\uc77c \uc571\uc774 \uc77c\uae30 \uc608\ubcf4\ub97c \ud45c\uc2dc\ud560 \ub54c, \uae30\uc0c1 \uc11c\ube44\uc2a4\uc758 API\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</p> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720: API\ub294 \uc9c0\uad6c\uc640 \ud654\uc131 \ub85c\ubc84 \uac04\uc758 \ud1b5\uc2e0 \ud504\ub85c\ud1a0\ucf5c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ub85c\ubc84\ub294 \uc790\uc2e0\uc5d0\uac8c \uc774\ud574 \uac00\ub2a5\ud55c \ud615\uc2dd(\uc608: \"\ubd84\ud654\uad6c \uc0ac\uc9c4 \ucc0d\uc5b4\")\uc73c\ub85c \uba85\ub839\uc744 \ubc1b\uace0, \uc791\uc5c5\uc744 \uc218\ud589\ud55c \ub2e4\uc74c \ub370\uc774\ud130\ub97c \ub2e4\uc2dc \ubcf4\ub0c5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/1/#2-api","title":"2. API\uac00 \uc65c \ud544\uc694\ud55c\uac00?","text":"<ol> <li> <p>\uac1c\ubc1c \uac04\uc18c\ud654    \ubaa8\ub4e0 \uac83\uc744 \ucc98\uc74c\ubd80\ud130 \ub9cc\ub4e4 \ud544\uc694 \uc5c6\uc774, SpaceX API\uc640 \uac19\uc740 \uc900\ube44\ub41c API\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.    <pre><code># \uc608\uc2dc: SpaceX \ubc1c\uc0ac \ub370\uc774\ud130 \uac00\uc838\uc624\uae30\nimport requests\nresponse = requests.get(\"https://api.spacexdata.com/v3/missions\")\nprint(response.json()[0])  # \ub370\uc774\ud130 \ucd9c\ub825\n</code></pre></p> </li> <li> <p>\ud504\ub85c\uc138\uc2a4 \uc790\ub3d9\ud654    API\ub97c \ud1b5\ud574 \ub85c\ubd07 \ud0d0\uc0ac\uc120\uc740 \uc218\ub3d9 \uac1c\uc785 \uc5c6\uc774 \ub370\uc774\ud130\ub97c \uc9c0\uad6c\ub85c \uc790\ub3d9 \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> </li> <li> <p>\uc2dc\uc2a4\ud15c \ud1b5\ud569    ISS \ubaa8\ub4c8 \ub3c4\ud0b9\uacfc \uac19\uc2b5\ub2c8\ub2e4: API\ub294 \ub2f9\uc2e0\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uacb0\uc81c \uc2dc\uc2a4\ud15c, \ub370\uc774\ud130\ubca0\uc774\uc2a4, \uc2ec\uc9c0\uc5b4 \ub9dd\uc6d0\uacbd\uacfc\ub3c4 \uc5f0\uacb0\ud569\ub2c8\ub2e4!</p> </li> <li> <p>\uace0\uc720 \ub370\uc774\ud130 \uc811\uadfc    \uc608\ub97c \ub4e4\uc5b4, SpaceX API\ub294 \ub85c\ucf13 \ubc1c\uc0ac\uc5d0 \ub300\ud55c \uc2e4\uc81c \ub370\uc774\ud130\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.</p> </li> </ol>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/1/#3-api","title":"3. API\ub294 \uc5b4\ub5bb\uac8c \uc791\ub3d9\ud558\ub294\uac00?","text":"<ul> <li>\ud074\ub77c\uc774\uc5b8\ud2b8(\ub2f9\uc2e0\uc758 \ud504\ub85c\uadf8\ub7a8)\ub294 \uc11c\ubc84\ub85c HTTP \uc694\uccad\uc744 \ubcf4\ub0c5\ub2c8\ub2e4.</li> <li>\uc11c\ubc84(\uc608: NASA)\ub294 \uc694\uccad\uc744 \ucc98\ub9ac\ud558\uace0 JSON \ud615\uc2dd\uc758 \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.</li> <li>\ub370\uc774\ud130\ub294 \"\uc6b0\uc8fc \ubcf4\ubb3c\"\uc785\ub2c8\ub2e4: ISS \uc88c\ud45c, \uc740\ud558\uacc4 \uc0ac\uc9c4, \uc678\uacc4 \ud589\uc131 \ubaa9\ub85d.</li> </ul> <p>\u26a1 \"Open Notify\" API (ISS) \uc694\uccad \uc608\uc2dc: <pre><code>curl \"http://api.open-notify.org/iss-now.json\"\n</code></pre> \uc751\ub2f5: <pre><code>{\n  \"message\": \"success\",\n  \"timestamp\": 1725431234,\n  \"iss_position\": {\n    \"latitude\": \"51.1234\",\n    \"longitude\": \"-120.5678\"\n  }\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/1/#4-api","title":"4. API \uc720\ud615 (\uac04\ub7b5 \uac1c\uc694)","text":"\uc720\ud615 \uc6b0\uc8fc \uad00\ub828 \uc608\uc2dc \uc0ac\uc6a9\ucc98 REST \ud45c\uc900 \uad00\uc81c \uc13c\ud130 \u2194 \uc704\uc131 \ud1b5\uc2e0 \uc6f9 \uc11c\ube44\uc2a4 (90% \uc0ac\ub840) GraphQL \"\ub9de\ucda4\ud615 \uc694\uccad\" (\uc608: \"\ud589\uc131\uc758 \ud06c\uae30\uc640 \uc9c8\ub7c9\ub9cc \uc918\") \ubcf5\uc7a1\ud55c \uc2dc\uc2a4\ud15c SOAP \uad6c\ud615 \uc784\ubb34\uc758 \ubb34\uc120 \uc554\ud638\ud654\uc640 \uac19\uc74c \uae30\uc5c5\uc6a9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 <p>\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c\ub294 \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \ud615\uc2dd\uc778 REST API\uc5d0 \uc911\uc810\uc744 \ub461\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/1/#5-api","title":"5. \uc6b0\uc8fc API \uc608\uc2dc","text":"<ol> <li>NASA Open API: \uc18c\ud589\uc131 \ub370\uc774\ud130, \ud5c8\ube14 \ub9dd\uc6d0\uacbd \uc0ac\uc9c4.</li> <li>SpaceX API: \ubc1c\uc0ac, \ub85c\ucf13, \ub4dc\ub798\uace4 \uc6b0\uc8fc\uc120 \uc815\ubcf4.</li> <li>Open Notify: ISS\uc758 \ud604\uc7ac \uc704\uce58, \uc6b0\uc8fc\uc5d0 \uc788\ub294 \uc0ac\ub78c \uc218.</li> </ol>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/1/#_1","title":"\ub300\ud654\ud615 \ud034\uc988","text":"<p>1. API\ub294...</p>  \uac00) \uc778\uacf5 \uc9c0\ub2a5  \ub098) \ud504\ub85c\uadf8\ub7a8 \uc0c1\ud638 \uc791\uc6a9\uc744 \uc704\ud55c \uaddc\uce59 \uc9d1\ud569  \ub2e4) \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4 <p>2. \ucf54\ub4dc\ub97c \uc9c1\uc811 \uc791\uc131\ud558\ub294 \ub300\uc2e0 API\ub97c \uc0ac\uc6a9\ud558\ub294 \uc774\uc720\ub294 \ubb34\uc5c7\uc778\uac00\uc694?</p>  \uac00) \uc2dc\uac04\uc744 \uc808\uc57d\ud558\uae30 \uc704\ud574  \ub098) \uace0\uc720\ud55c \ub370\uc774\ud130\uc5d0 \uc811\uadfc\ud558\uae30 \uc704\ud574  \ub2e4) \ub450 \uac00\uc9c0 \ubaa8\ub450 <p>3. API\uac00 \uac00\uc7a5 \uc790\uc8fc \ubc18\ud658\ud558\ub294 \ub370\uc774\ud130 \ud615\uc2dd\uc740 \ubb34\uc5c7\uc778\uac00\uc694?</p>  \uac00) XML  \ub098) JSON  \ub2e4) TXT \ud655\uc778 <p>\ud83d\ude80 \ucc55\ud130 \uc694\uc57d:</p> <p>API\ub294 \uc678\ubd80 \uc18c\uc2a4\ub85c\ubd80\ud130 \ub370\uc774\ud130\ub97c \ub2e4\ub8e8\uae30 \uc704\ud55c \uae30\ubc18\uc785\ub2c8\ub2e4. \uc6b0\uc8fc\ube44\ud589\uc0ac\uac00 \uad00\uc81c \uc13c\ud130\uc640 \ud1b5\uc2e0 \uc5c6\uc774\ub294 \uc77c\ud560 \uc218 \uc5c6\ub4ef\uc774, \uac1c\ubc1c\uc790\ub3c4 API \uc5c6\uc774\ub294 \ubcf5\uc7a1\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uad6c\ucd95\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ucc55\ud130\uc5d0\uc11c\ub294 HTTP \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc11c\ubc84\uc5d0 \"\uba85\ub839\"\uc744 \ubcf4\ub0b4\ub294 \ubc29\ubc95\uc744 \ubc30\uc6b8 \uac83\uc785\ub2c8\ub2e4!</p> <p>\ud83d\udccc \ud301: Open Notify API\uc5d0 \uc694\uccad\uc744 \ubcf4\ub0b4 ISS\uac00 \ud604\uc7ac \uc5b4\ub514\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778\ud574 \ubcf4\uc138\uc694! (\uac04\ub2e8\ud55c \ucf58\uc194\ub85c\ub3c4 \uac00\ub2a5\ud569\ub2c8\ub2e4)</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/2/","title":"\ucc55\ud130 1.2: HTTP \uba54\uc11c\ub4dc \ubc0f \uc0c1\ud0dc \ucf54\ub4dc","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 40\ubd84</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/2/#1-http","title":"1. HTTP: \uc6b0\uc8fc \ud1b5\uc2e0 \uc5b8\uc5b4","text":"<p>\ub2f9\uc2e0\uc774 \ube44\ud589 \uad00\uc81c \uc13c\ud130(\u0426\u0423\u041f)\uc774\uace0 API \uc11c\ubc84\uac00 \uc6b0\uc8fc\uc120\uc774\ub77c\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. HTTP(\ud558\uc774\ud37c\ud14d\uc2a4\ud2b8 \uc804\uc1a1 \ud504\ub85c\ud1a0\ucf5c)\ub294 \uc5ec\ub7ec\ubd84 \uc0ac\uc774\uc758 \ubb34\uc120 \ud1b5\uc2e0\uc785\ub2c8\ub2e4.</p> <p>\uac01 \uba54\uc2dc\uc9c0\uc5d0\ub294 \ub2e4\uc74c\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4:</p> <ul> <li> <p>\uba54\uc11c\ub4dc \u2192 \ubb34\uc5c7\uc744 \ud560 \uac83\uc778\uc9c0 (\uc608: \"\ud0d0\uc0ac\uc120 \ubc1c\uc0ac\")</p> </li> <li> <p>\uc0c1\ud0dc \ucf54\ub4dc \u2192 \uc791\uc5c5 \uacb0\uacfc (\"\ud0d0\uc0ac\uc120 \uc131\uacf5\uc801\uc73c\ub85c \ubc1c\uc0ac\ub428!\")</p> </li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720: <code>GET /stars</code> = \"\u0426\u0423\u041f \u2192 \uc6b0\uc8fc\uc120\uc5d0\uac8c: \ubcc4\uc758 \uc88c\ud45c\ub97c \uc54c\ub824\uc918!\" <code>200 OK</code> = \"\uc6b0\uc8fc\uc120 \u2192 \u0426\u0423\u041f\uc5d0\uac8c: \uc88c\ud45c \uc804\uc1a1 \uc644\ub8cc!\"</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/2/#2-http","title":"2. \uc8fc\uc694 HTTP \uba54\uc11c\ub4dc","text":"<p>\uac01 \uba54\uc11c\ub4dc\ub294 \uc6b0\uc8fc \uc784\ubb34\ub97c \uc704\ud55c \uba85\ub839 \uc720\ud615\uacfc \uac19\uc2b5\ub2c8\ub2e4:</p> \uba54\uc11c\ub4dc \uc6b0\uc8fc \ube44\uc720 \uc694\uccad \uc608\uc2dc \uc124\uba85 GET \ub370\uc774\ud130 \uc694\uccad (\ub9dd\uc6d0\uacbd) <code>GET /planets</code> \ud589\uc131 \ubaa9\ub85d \uac00\uc838\uc624\uae30 POST \uc0c8 \uac1d\uccb4 \uc804\uc1a1 (\ub85c\ucf13 \ubc1c\uc0ac) <code>POST /satellites</code> \uc0c8 \uc704\uc131 \uc0dd\uc131 PUT \uac1d\uccb4 \uc804\uccb4 \uc5c5\ub370\uc774\ud2b8 (\uada4\ub3c4 \uc218\uc815) <code>PUT /satellites/iss</code> ISS \ub370\uc774\ud130 \uc5c5\ub370\uc774\ud2b8 DELETE \uac1d\uccb4 \ud30c\uad34 (\uada4\ub3c4 \uc774\ud0c8) <code>DELETE /debris/123</code> \uc6b0\uc8fc \uc4f0\ub808\uae30 \uc0ad\uc81c <p>\u26a1 \ucf54\ub4dc \uc608\uc2dc (Python): <pre><code>import requests\n\n# GET: \ud314\ucf58 9 \ub85c\ucf13 \ub370\uc774\ud130 \uac00\uc838\uc624\uae30\n# SpaceX API\uc758 \uc2e4\uc81c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\nresponse = requests.get(\"https://api.spacexdata.com/v4/rockets/5e9d0d95eda69973a809d1ec\")\nprint(response.status_code, response.json()['name']) # 200 Falcon 9\n\n# POST: \ud14c\uc2a4\ud2b8 API\uc5d0 \uc0c8 \uac8c\uc2dc\ubb3c \uc0dd\uc131\n# jsonplaceholder \uc0cc\ub4dc\ubc15\uc2a4 \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\nnew_post = {\"title\": \"Artemis Mission\", \"body\": \"Ready for launch\", \"userId\": 1}\nresponse = requests.post(\"https://jsonplaceholder.typicode.com/posts\", json=new_post)\nprint(response.status_code, response.json()['id'])  # 201 101 (\ub610\ub294 \ub2e4\ub978 ID)\n</code></pre></p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/2/#3","title":"3. \uc911\uc694\ud55c \uc0c1\ud0dc \ucf54\ub4dc","text":"<p>\uc11c\ubc84 \uc751\ub2f5\uc740 \uc6b0\uc8fc\uc120\u304b\u3089\u306e \uc2e0\ud638\uc640 \uac19\uc2b5\ub2c8\ub2e4:</p> \uadf8\ub8f9 \ucf54\ub4dc \uc6b0\uc8fc \ube44\uc720 \uc124\uba85 <code>2xx</code> 200 \u2705 \"\uc791\uc5c5 \uc644\ub8cc!\" \uc131\uacf5 201 \ud83d\ude80 \"\ub85c\ucf13 \ubc1c\uc0ac!\" \uac1d\uccb4 \uc0dd\uc131\ub428 <code>3xx</code> 301 \ud83c\udf0d \"\u0426\u0423\u041f\uc774 \uc0c8 \uc8fc\uc18c\ub85c \uc774\ub3d9\ub428\" \ub9ac\ub514\ub809\uc158 <code>4xx</code> 400 \u274c \"\uc694\uccad\uc5d0 \uc798\ubabb\ub41c \uc88c\ud45c!\" \ud074\ub77c\uc774\uc5b8\ud2b8 \uc624\ub958 404 \ud83e\ude90 \"\ud589\uc131\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc74c!\" \ub9ac\uc18c\uc2a4 \uc5c6\uc74c <code>5xx</code> 500 \ud83d\udd25 \"\uc5d4\uc9c4 \uc2dc\uc2a4\ud15c \uc624\ub958 \ubc1c\uc0dd!\" \uc11c\ubc84 \uc624\ub958"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/2/#4","title":"4. \uc2e4\uc2b5: \uc0c1\ud0dc \ucf54\ub4dc \ucc98\ub9ac","text":"<p>\ud56d\uc0c1 API \uc751\ub2f5\uc744 \ud655\uc778\ud558\uc138\uc694! \uc624\ub958 \ucc98\ub9ac \uc608\uc2dc: <pre><code>import requests\n\ndef get_post_data(post_id):\n    \"\"\"\uc0c1\ud0dc \ucf54\ub4dc\ub97c \ucc98\ub9ac\ud558\uc5ec \uac8c\uc2dc\ubb3c \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub294 \ud568\uc218.\"\"\"\n    try:\n        response = requests.get(f\"https://jsonplaceholder.typicode.com/posts/{post_id}\")\n\n        # \uc751\ub2f5 \uc0c1\ud0dc \ucf54\ub4dc \ud655\uc778\n        if response.status_code == 200:\n            print(f\"\u2705 \uac8c\uc2dc\ubb3c {post_id}\uc758 \ub370\uc774\ud130\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uac00\uc838\uc654\uc2b5\ub2c8\ub2e4!\")\n            return response.json()\n        elif response.status_code == 404:\n            print(f\"\u26a0\ufe0f \uac8c\uc2dc\ubb3c {post_id}\uc758 \ub9ac\uc18c\uc2a4\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4!\")\n            return None\n        else:\n            # \ub2e4\ub978 \ud074\ub77c\uc774\uc5b8\ud2b8(4xx) \ub610\ub294 \uc11c\ubc84(5xx) \uc624\ub958 \ucc98\ub9ac\n            print(f\"\ud83d\udea8 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4! \uc0c1\ud0dc \ucf54\ub4dc: {response.status_code}\")\n            return None\n\n    except requests.exceptions.RequestException as e:\n        # \uc5f0\uacb0 \uc624\ub958 \ucc98\ub9ac (\uc608: \uc778\ud130\ub137 \uc5c6\uc74c)\n        print(f\"\ud83d\udd25 \uc5f0\uacb0 \uc624\ub958: {e}\")\n        return None\n\n# --- \ud568\uc218 \ud14c\uc2a4\ud2b8 ---\nprint(\"--- \uae30\uc874 \uac8c\uc2dc\ubb3c \uac80\uc0c9 ---\")\nget_post_data(1)\n\nprint(\"\\n--- \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uac8c\uc2dc\ubb3c \uac80\uc0c9 ---\")\nget_post_data(9999) # \uc774 \uac8c\uc2dc\ubb3c\uc740 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c 404\ub97c \uc608\uc0c1\ud569\ub2c8\ub2e4.\n</code></pre></p> <p>\ud83d\udd2d \uc2e4\uc81c API \uc608\uc2dc (SpaceX): \uc694\uccad: <code>GET https://api.spacexdata.com/v4/ships/OCISLY</code> \uc751\ub2f5: <code>200 OK</code> + \uc120\ubc15 \ub370\uc774\ud130 \uc694\uccad: <code>GET https://api.spacexdata.com/v4/ships/UNICORN</code> \uc751\ub2f5: <code>404 Not Found</code></p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/2/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. \ubcc4\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub824\uba74 \uc5b4\ub5a4 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc57c \ud560\uae4c\uc694?</p>  a) POST  b) PUT  c) GET <p>2. `201 Created` \uc0c1\ud0dc\ub294 \ub2e4\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4:</p>  a) \uac1d\uccb4 \uc0ad\uc81c\ub428  b) \uac1d\uccb4 \uc0dd\uc131\ub428  c) \uc11c\ubc84 \uc624\ub958 <p>3. \uc704\uc131 \ub370\uc774\ud130\ub97c \uc644\uc804\ud788 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uba54\uc11c\ub4dc:</p>  a) PATCH  b) DELETE  c) PUT <p>4. `500 Internal Server Error` \uc0c1\ud0dc\ub294 \ubb34\uc5c7\uc744 \uc758\ubbf8\ud560\uae4c\uc694?</p>  a) \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uccad \uc624\ub958  b) \uc11c\ubc84 \uc624\ub958  c) \uc131\uacf5\uc801\uc778 \uc2e4\ud589 \ud655\uc778 <p>\ud83d\ude80 \ucc55\ud130 \uc694\uc57d: HTTP \uba54\uc11c\ub4dc\ub294 \uc6b0\uc8fc \uc784\ubb34\ub97c \uc704\ud55c \ub2f9\uc2e0\uc758 \uba85\ub839\uc774\uba70, \uc0c1\ud0dc \ucf54\ub4dc\ub294 \uadf8 \uc2e4\ud589 \ubcf4\uace0\uc11c\uc785\ub2c8\ub2e4. \uae30\uc5b5\ud558\uc138\uc694:</p> <p><code>GET</code> = \"\ub370\uc774\ud130 \uc918\", <code>POST</code> = \"\uc0c8\ub85c\uc6b4 \uac83 \uc0dd\uc131\", <code>PUT</code> = \"\ubaa8\ub450 \uc5c5\ub370\uc774\ud2b8\", <code>DELETE</code> = \"\ud30c\uad34\" <code>2xx</code> = \uc131\uacf5, <code>4xx</code> = \ub2f9\uc2e0\uc758 \uc624\ub958, <code>5xx</code> = \uc11c\ubc84 \ubb38\uc81c</p> <p>\ubc1c\uc0ac\ub97c \uc900\ube44\ud558\uc138\uc694! \ub2e4\uc74c \ucc55\ud130\uc5d0\uc11c\ub294 \uc11c\ubc84\u304b\u3089\u306e \"\uc804\ubcf4\"\uc778 JSON \ud615\uc2dd\uc744 \ud574\ub3c5\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \uc2e4\uc2b5: SpaceX API\ub97c \uc0ac\uc6a9\ud558\uc5ec <code>GET /launches/latest</code>\ub97c \ubcf4\ub0b4\uace0 \uc751\ub2f5 \ucf54\ub4dc\ub97c \uc5f0\uad6c\ud574 \ubcf4\uc138\uc694!</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/3/","title":"\uc81c1.3\uc7a5: JSON \ud615\uc2dd","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 35\ubd84</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/3/#1-json","title":"1. JSON: \uc6b0\uc8fc \ud1b5\uc2e0 \uc5b8\uc5b4","text":"<p>\uc6b0\uc8fc \ud0d0\uc0ac\uc120\uacfc \uad00\uc81c \uc13c\ud130\uac00 \uc11c\ub85c \ub2e4\ub978 \uc5b8\uc5b4\ub85c \ub9d0\ud55c\ub2e4\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. JSON (JavaScript Object Notation)\uc740 \uc0ac\ub78c\uacfc \uae30\uacc4 \ubaa8\ub450\uac00 \uc774\ud574\ud560 \uc218 \uc788\ub294 \ubc94\uc6a9 \ub370\uc774\ud130 \uc5b8\uc5b4\uc785\ub2c8\ub2e4. \ub9c8\uce58 \uc6b0\uc8fc \ube44\ud589\uc0ac\ub4e4\uc758 \uad6d\uc81c\uc5b4\uc640 \uac19\uc2b5\ub2c8\ub2e4!</p> <p>\uc8fc\uc694 \ud2b9\uc9d5:</p> <ul> <li>\ud83e\udeb6 \uacbd\ub7c9\uc131: \uc57d\ud55c \uc2e0\ud638\uc5d0\uc11c\ub3c4 \ube60\ub978 \uc804\uc1a1</li> <li>\ud83d\udc40 \uac00\ub3c5\uc131: \uc721\uc548\uc73c\ub85c \uad6c\uc870 \ud30c\uc545 \uc6a9\uc774</li> <li>\ud83d\udd04 \ubc94\uc6a9\uc131: \ubaa8\ub4e0 \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\uc5d0\uc11c \uc9c0\uc6d0</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>JSON\uc740 \ubcc4 \ub370\uc774\ud130\uac00 \ub2f4\uae34 \ub514\uc9c0\ud138 \uc804\ubcf4\uc640 \uac19\uc2b5\ub2c8\ub2e4. \ubaa8\uc2a4 \ubd80\ud638 \ub300\uc2e0 <code>{\ud0a4: \uac12}</code> \ud615\ud0dc\uc758 \uba85\ud655\ud55c \uad6c\uc870\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/3/#2-json","title":"2. JSON \uba54\uc2dc\uc9c0\uc758 \ud574\ubd80","text":"<p>JSON\uc740 \ub450 \uac00\uc9c0 \uc720\ud615\uc758 \uad6c\uc870\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4:</p> <p>A. \uac1d\uccb4 (\uc6b0\uc8fc\uc120) <pre><code>{\n  \"name\": \"Voyager-1\",\n  \"launch_year\": 1977,\n  \"is_active\": true,\n  \"position\": [-19.1, 42.7, 0.3]\n}\n</code></pre></p> <p>B. \ubc30\uc5f4 (\uc131\ub2e8) <pre><code>[\n  {\"name\": \"Sirius\", \"magnitude\": -1.46},\n  {\"name\": \"Canopus\", \"magnitude\": -0.74},\n  {\"name\": \"Arcturus\", \"magnitude\": -0.05}\n]\n</code></pre></p> <p>\u26a1 \uad6c\ubb38 \uaddc\uce59:</p> <ul> <li>\ud0a4\ub294 \ub530\uc634\ud45c <code>\" \"</code> \uc548\uc5d0</li> <li>\uac12: \ubb38\uc790\uc5f4, \uc22b\uc790, \ubd88\ub9ac\uc5b8 (<code>true</code>/<code>false</code>), <code>null</code></li> <li>\ub370\uc774\ud130\ub294 \uc27c\ud45c\ub85c \uad6c\ubd84</li> <li>\uac1d\uccb4\ub294 \uc911\uad04\ud638 <code>{}</code>, \ubc30\uc5f4\uc740 \ub300\uad04\ud638 <code>[]</code> \uc0ac\uc6a9</li> </ul>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/3/#3-json-vs-xml","title":"3. JSON vs XML: \ud615\uc2dd\uc758 \ub300\uacb0","text":"\ub9e4\uac1c\ubcc0\uc218 JSON (\ud604\ub300 \uc704\uc131) XML (\uc624\ub798\ub41c \ub9dd\uc6d0\uacbd) \uac00\ub3c5\uc131 \ub192\uc74c (\ud544\ub4dc\uc5d0 \uc9c1\uc811 \uc811\uadfc) \ub0ae\uc74c (\ud0dc\uadf8 <code>&lt;planet&gt;...&lt;/planet&gt;</code>) \ud06c\uae30 \uac04\uacb0\ud568 \ubc88\uac70\ub85c\uc6c0 (\ud06c\uae30 +30%) \ucc98\ub9ac \uc18d\ub3c4 \ube60\ub984 \ub290\ub9bc \uc608\uc2dc <code>{\"planet\": \"Mars\"}</code> <code>&lt;planet&gt;Mars&lt;/planet&gt;</code> <p>\ud83d\udd2d JSON\uc774 \uc6b0\uc8fc\uc5d0\uc11c \uc2b9\ub9ac\ud55c \uc774\uc720?</p> <p>NASA, SpaceX, ESA\uc758 API\ub294 JSON\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4 \u2014 \ub370\uc774\ud130 \uc804\uc1a1\uc5d0 \uc774\uc0c1\uc801\uc774\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4!</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/3/#4-json","title":"4. \ucf54\ub4dc\uc5d0\uc11c JSON \uc0ac\uc6a9\ud558\uae30","text":"<p>Python \uc608\uc2dc (\ub2ec \ub370\uc774\ud130 \uac00\uc838\uc624\uae30): <pre><code>import requests\nimport json\n\n# \uc2e4\uc81c API \uc0ac\uc6a9 \uc608\uc2dc: \ud0dc\uc591\uacc4 \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\uae30 \uc704\ud574\n# The Solar System OpenData API\uc5d0\uc11c\ntry:\n    response = requests.get(\"https://api.le-systeme-solaire.net/rest/bodies/terre\")\n    response.raise_for_status() # HTTP \uc624\ub958 (4xx, 5xx) \ud655\uc778\n\n    planet_data = response.json()\n\n    print(f\"\uc774\ub984: {planet_data['englishName']}\")\n    print(f\"\uc704\uc131: {[moon['moon'] for moon in planet_data['moons']]}\")\n\n    # Python \ub515\uc154\ub108\ub9ac\ub97c JSON \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud558\uc5ec \uc800\uc7a5\n    planet_json_str = json.dumps(planet_data, indent=2, ensure_ascii=False) # ensure_ascii=False\ub294 \ud0a4\ub9b4 \ubb38\uc790 \uc9c0\uc6d0\uc744 \uc704\ud568\n    print(\"\\n--- \ud615\uc2dd\ud654\ub41c JSON ---\")\n    print(planet_json_str)\n\nexcept requests.exceptions.RequestException as e:\n    print(f\"\uc694\uccad \uc624\ub958: {e}\")\n</code></pre></p> <p>JavaScript \uc608\uc2dc (\ub9dd\uc6d0\uacbd \ub370\uc774\ud130 \ucc98\ub9ac): <pre><code>const Data = `{\n  \"id\": \"terre\",\n  \"name\": \"La Terre\",\n  \"englishName\": \"Earth\",\n  \"isPlanet\": true,\n  \"moons\": [\n    {\n      \"moon\": \"La Lune\",\n      \"rel\": \"https://api.le-systeme-solaire.net/rest/bodies/lune\"\n    }\n  ],\n  \"semimajorAxis\": 149598023,\n  \"perihelion\": 147095000,\n  \"aphelion\": 152100000,\n  \"eccentricity\": 0.0167,\n  \"inclination\": 0,\n  \"mass\": {\n    \"massValue\": 5.97237,\n    \"massExponent\": 24\n  },\n  \"vol\": {\n    \"volValue\": 1.08321,\n    \"volExponent\": 12\n  },\n  \"density\": 5.5136,\n  \"gravity\": 9.8,\n  \"escape\": 11190,\n  \"meanRadius\": 6371.0084,\n  \"equaRadius\": 6378.1366,\n  \"polarRadius\": 6356.8,\n  \"flattening\": 0.00335,\n  \"dimension\": \"\",\n  \"sideralOrbit\": 365.256,\n  \"sideralRotation\": 23.9345,\n  \"aroundPlanet\": null,\n  \"discoveredBy\": \"\",\n  \"discoveryDate\": \"\",\n  \"alternativeName\": \"\",\n  \"axialTilt\": 23.4393,\n  \"avgTemp\": 288,\n  \"mainAnomaly\": 358.617,\n  \"argPeriapsis\": 85.901,\n  \"longAscNode\": 18.272,\n  \"bodyType\": \"Planet\"\n}`;\n\nconst dataObj = JSON.parse(Data);\nconsole.log(dataObj.target);\n</code></pre></p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/3/#5-json","title":"5. JSON \uc720\ud6a8\uc131 \uac80\uc0ac: \"\uc2e0\ud638\" \ud655\uc778","text":"<p>\ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uae30 \uc804\uc5d0 JSON\uc774 \ub2e4\uc74c\uc744 \ub9cc\uc871\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694:</p> <ol> <li> <p>\uc62c\ubc14\ub978 \uad6c\uc870\ub97c \uac00\uc84c\ub294\uc9c0 (\uad04\ud638\ub97c \ud655\uc778\ud558\uc138\uc694!)</p> </li> <li> <p>\uc608\uc0c1 \ud544\ub4dc\ub97c \ud3ec\ud568\ud558\ub294\uc9c0</p> </li> <li> <p>\uad6c\ubb38 \uc624\ub958\uac00 \uc5c6\ub294\uc9c0</p> </li> </ol> <p>\ub3c4\uad6c: - JSONLint (JSON\uc744 \uc704\ud55c \uc6b0\uc8fc \uc4f0\ub808\uae30 \ud0d0\uc9c0\uae30\ucc98\ub7fc) - \ub0b4\uc7a5 \uc5b8\uc5b4 \ud30c\uc11c (\uc798\ubabb\ub41c \ud615\uc2dd\uc77c \uacbd\uc6b0 \uc624\ub958 \ubc1c\uc0dd)</p> <p>\u26a0\ufe0f \uc624\ub958 \uc608\uc2dc:</p> <p><code>{\"planet\": \"Mars\"</code> \u2192 \ub2eb\ub294 \uad04\ud638\uac00 \uc5c6\uc2b5\ub2c8\ub2e4!</p> <p>\ud574\uacb0\ucc45: Python\uc5d0\uc11c\ub294 <code>json.loads()</code>\ub97c, JS\uc5d0\uc11c\ub294 <code>JSON.parse()</code>\ub97c \ud56d\uc0c1 \uc0ac\uc6a9\ud558\uc5ec \uac80\uc99d\ud558\uc138\uc694.</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/3/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. JSON\uc740 \ub2e4\uc74c\uc758 \uc57d\uc790\uc785\ub2c8\ub2e4...</p>  a) Java Space Object Notation  b) JavaScript Object Notation  c) Jupiter's Satellite Orbital Network <p>2. JSON\uc5d0\uc11c \uac1d\uccb4\ub294 \uc5b4\ub5bb\uac8c \ud45c\ud604\ub418\ub098\uc694:</p>  a) ()  b) {}  c) [] <p>3. \ub2e4\uc74c \uc911 JSON\uc5d0\uc11c \uc720\ud6a8\ud55c \uac12\uc774 \uc544\ub2cc \uac83\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) \"name\": \"Saturn\"  b) \"radius_km\": 58232  c) \"has_rings\": undefined <p>4. \uc6b0\uc8fc API\uc5d0 JSON\uc774 XML\ubcf4\ub2e4 \ub354 \ub098\uc740 \uc774\uc720\ub294 \ubb34\uc5c7\uc778\uac00\uc694?</p>  a) \ub354 \uc791\uc740 \ud06c\uae30\uc640 \ube60\ub978 \uc18d\ub3c4  b) \uc678\uacc4 \ucf54\ub529 \uc9c0\uc6d0  c) \ube44\ub514\uc624 \uc800\uc7a5 \uae30\ub2a5 <p>5. JSON \ubb38\uc790\uc5f4\uc744 Python \uac1d\uccb4\ub85c \ubcc0\ud658\ud558\ub294 \ubc29\ubc95\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) json.parse()  b) json.to_object()  c) json.loads() \ud655\uc778\ud558\uae30 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>JSON\uc740 API \uc138\uacc4\uc758 \"\uc6b0\uc8fc \uc5d0\uc2a4\ud398\ub780\ud1a0\"\uc785\ub2c8\ub2e4. \uadf8 \uad6c\uc870\ub97c \uc54c\uba74 \ub2e4\uc74c\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:</p> <ul> <li> <p>\ud83d\udce1 \ub9dd\uc6d0\uacbd\uacfc \ud0d0\uc0ac\uc120\uc5d0\uc11c \ub370\uc774\ud130 \uc218\uc2e0</p> </li> <li> <p>\ud83d\udd27 \uc2dc\uc2a4\ud15c \uac04 \uc815\ubcf4 \ubcc0\ud658</p> </li> <li> <p>\ud83d\udef0\ufe0f \uacfc\ud559 \ub370\uc774\ud130 \ud30c\uc77c \uc800\uc7a5</p> </li> </ul> <p>\ub3c4\ud0b9\uc744 \uc900\ube44\ud558\uc138\uc694! \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \uc11c\ubc84\uc758 \"\uc6b0\uc8fc \uc815\uac70\uc7a5\" \uad00\ub9ac \uc2dc\uc2a4\ud15c\uc778 REST API \uc544\ud0a4\ud14d\ucc98\ub97c \ud559\uc2b5\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \uc2e4\uc2b5: NASA Open APIs\uc5d0 \uc811\uc18d\ud558\uc5ec \uc18c\ud589\uc131 API (Asteroids NeoWs)\ub97c \ucc3e\uc544 \uc751\ub2f5\uc758 JSON \uad6c\uc870\ub97c \uc0b4\ud3b4\ubcf4\uc138\uc694!</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/4/","title":"1.4\uc7a5: REST API \uad6c\uc870","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 45\ubd84</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/4/#1-rest-api","title":"1. REST API: \uc6b0\uc8fc \uc815\uac70\uc7a5 \uc544\ud0a4\ud14d\ucc98","text":"<p>\uac01 \ubaa8\ub4c8\uc774 \ub2e4\uc74c\uc744 \uac16\ub294 \uc6b0\uc8fc \uc815\uac70\uc7a5\uc744 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694:</p> <ul> <li> <p>\ud45c\uc900 \ub3c4\ud0b9 \ud3ec\ud2b8 (\ub2e8\uc77c \uc778\ud130\ud398\uc774\uc2a4)</p> </li> <li> <p>\uba85\ud655\ud55c \uc804\ubb38\ud654 (\uc8fc\uac70 \uad6c\uc5ed, \uc2e4\ud5d8\uc2e4, \uc800\uc7a5\uace0)</p> </li> <li> <p>\uc88c\ud45c\uacc4 (\uc815\ud655\ud55c \uc704\uce58)</p> </li> </ul> <p>REST (Representational State Transfer) API\ub294 \ub3d9\uc77c\ud55c \uc6d0\ub9ac\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4:</p> <ul> <li> <p>\ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \ub2e8\uc77c \uc778\ud130\ud398\uc774\uc2a4</p> </li> <li> <p>\uba85\ud655\ud55c \uad6c\uc131 \uc694\uc18c \ubd84\ub9ac</p> </li> <li> <p>URI\ub97c \ud1b5\ud55c \uc8fc\uc18c \uc9c0\uc815 (\uc6b0\uc8fc \uc88c\ud45c)</p> </li> </ul> <p>\ud83d\udca1 \ud575\uc2ec \uc544\uc774\ub514\uc5b4:</p> <p>\uac01 \ub9ac\uc18c\uc2a4(\ud589\uc131, \ub85c\ucf13, \uc6b0\uc8fc \ube44\ud589\uc0ac)\ub294 \uace0\uc720\ud55c URL \uc8fc\uc18c\ub97c \uac00\uc9c0\uba70 HTTP \uba54\uc11c\ub4dc\ub97c \ud1b5\ud574 \uc0c1\ud638 \uc791\uc6a9\ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/4/#2-rest-6","title":"2. \uc6b0\uc8fc \ube44\uc720\ub85c \ubcf8 REST\uc758 6\uac00\uc9c0 \uc6d0\uce59","text":"REST \uc6d0\uce59 ISS \ube44\uc720 API\uc5d0\uc11c\uc758 \uc758\ubbf8 \ub2e8\uc77c \uc778\ud130\ud398\uc774\uc2a4 \ud45c\uc900 \ub3c4\ud0b9 \ub178\ub4dc \ubaa8\ub4e0 \uc694\uccad\uc5d0 \ub300\ud55c \ub3d9\uc77c\ud55c \uaddc\uce59 \ubb34\uc0c1\ud0dc\uc131(Stateless) \uac01 \uba85\ub839\uc740 \uc790\uccb4 \ud3ec\ud568\uc801\uc774\ub2e4 \uc11c\ubc84\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\uc9c0 \uc54a\ub294\ub2e4 \uce90\uc2f1 \ud604\uc9c0 \uc2dd\ub7c9 \ube44\ucd95\ub7c9 \uc790\uc8fc \uc694\uccad\ub418\ub294 \uc751\ub2f5 \uc800\uc7a5 \ud074\ub77c\uc774\uc5b8\ud2b8-\uc11c\ubc84 \uba85\ud655\ud55c \ubd84\ub9ac: \uc9c0\uc0c1 \uad00\uc81c\uc18c \u2194 \uc815\uac70\uc7a5 \uad6c\uc131 \uc694\uc18c\uc758 \ub3c5\ub9bd\uc801\uc778 \uac1c\ubc1c \uacc4\uce35\ud654 \uc911\uacc4 \uc704\uc131 \ud504\ub85d\uc2dc, \ub85c\ub4dc \ubc38\ub7f0\uc11c \uc628\ub514\ub9e8\ub4dc \ucf54\ub4dc \uc2e4\ud5d8\uc6a9 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \ub2e4\uc6b4\ub85c\ub4dc (\uc120\ud0dd \uc0ac\ud56d) \uc2a4\ud06c\ub9bd\ud2b8 \uc804\uc1a1"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/4/#3-uri","title":"3. \ub9ac\uc18c\uc2a4 \ubc0f URI: \uc6b0\uc8fc \uc88c\ud45c","text":"<p>API\uc758 \ubaa8\ub4e0 \uac1d\uccb4\ub294 \uace0\uc720\ud55c \uc8fc\uc18c\ub97c \uac00\uc9c4 \ub9ac\uc18c\uc2a4\uc785\ub2c8\ub2e4: <pre><code>https://api.spacexdata.com/v4/    \u2190 \uae30\ubcf8 URL\n          rockets/            \u2190 \ub85c\ucf13 \uceec\ub809\uc158\n          rockets/5e9d0d95eda69973a809d1ec \u2190 \ud2b9\uc815 \ub85c\ucf13 (ID\ub85c)\n</code></pre></p> <p>\uc6b0\uc8fc \ub9ac\uc18c\uc2a4 \uc608\uc2dc:</p> <ul> <li><code>GET /stars</code> \u2192 \ubcc4 \ubaa9\ub85d</li> <li><code>GET /stars/sirius</code> \u2192 \uc2dc\ub9ac\uc6b0\uc2a4 \ub370\uc774\ud130</li> <li><code>POST /satellites</code> \u2192 \uc0c8 \uc704\uc131 \ubc1c\uc0ac</li> <li><code>PUT /missions/artemis</code> \u2192 \ubbf8\uc158 \uc5c5\ub370\uc774\ud2b8</li> </ul> <p>URI \uacc4\uce35 \uad6c\uc870: <pre><code>[\uae30\ubcf8 URL]\n\u251c\u2500\u2500 /planets          \u2192 \ud589\uc131 \uceec\ub809\uc158\n\u2502   \u251c\u2500\u2500 /mars         \u2192 \"\ud654\uc131\" \ub9ac\uc18c\uc2a4\n\u2502   \u2514\u2500\u2500 /venus        \u2192 \"\uae08\uc131\" \ub9ac\uc18c\uc2a4\n\u2514\u2500\u2500 /launches         \u2192 \ubc1c\uc0ac \uceec\ub809\uc158\n    \u251c\u2500\u2500 /upcoming     \u2192 \ud558\uc704 \uceec\ub809\uc158\n    \u2514\u2500\u2500 /latest       \u2192 \ub9ac\uc18c\uc2a4\n</code></pre></p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/4/#4-http-crud","title":"4. HTTP \uba54\uc11c\ub4dc\ub97c \ud1b5\ud55c CRUD \uc791\uc5c5","text":"\uc791\uc5c5 HTTP \uba54\uc11c\ub4dc \uc608\uc2dc (\uc6b0\uc8fc \uc815\uac70\uc7a5) \uc11c\ubc84 \uc751\ub2f5 \uc0dd\uc131(Create) <code>POST</code> \uc0c8 \ubaa8\ub4c8 \uc804\uc1a1 <code>201 Created</code> \uc77d\uae30(Read) <code>GET</code> \ubaa8\ub4c8 \ub370\uc774\ud130 \uc694\uccad <code>200 OK</code> \uc5c5\ub370\uc774\ud2b8(Update) <code>PUT</code> \ubaa8\ub4c8 \uc7ac\uad6c\uc131 <code>200 OK</code> \uc0ad\uc81c(Delete) <code>DELETE</code> \uc624\ub798\ub41c \ubaa8\ub4c8 \ubd84\ub9ac <code>204 No Content</code> <p>\u26a1 \ucf54\ub4dc \uc608\uc2dc (\uc704\uc131 \ucd94\uac00): <pre><code>import requests\n\n# \ub9ac\uc18c\uc2a4 \uc0dd\uc131\uc744 \ubaa8\ubc29\ud558\ub294 \ud14c\uc2a4\ud2b8 \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\nnew_post = {\n    \"title\": \"\uc0c8 \ub9dd\uc6d0\uacbd \ubc1c\uc0ac\",\n    \"body\": \"\ud5c8\ube14-2\uac00 \ubc30\uce58 \uc900\ube44\ub97c \ub9c8\ucce4\uc2b5\ub2c8\ub2e4.\",\n    \"userId\": 1\n}\n\n# \ud5e4\ub354 \uc2dc\uc5f0\uc744 \uc704\ud55c \uac00\uc0c1 API \ud0a4\nheaders = {\n    \"Authorization\": \"Bearer YOUR_DEMO_KEY\",\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n}\n\nresponse = requests.post(\n    \"https://jsonplaceholder.typicode.com/posts\",\n    json=new_post,\n    headers=headers\n)\n\nif response.status_code == 201:\n    print(\"\u2705 \uc0c8 \uc704\uc131\uc5d0 \ub300\ud55c \uac8c\uc2dc\ubb3c\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc0dd\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4!\")\n    print(\"\uc11c\ubc84 \uc751\ub2f5:\")\n    print(response.json())\nelse:\n    print(f\"\u274c \uc624\ub958! \uc0c1\ud0dc: {response.status_code}\")\n</code></pre></p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/4/#5-api","title":"5. API \ubc84\uc804 \uad00\ub9ac: \uc815\uac70\uc7a5\uc758 \uc9c4\ud654","text":"<p>ISS\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\ub294 \uac83\ucc98\ub7fc(\uc790\ub7b4 \ubaa8\ub4c8 \u2192 \ub098\uc6b0\uce74), API\ub3c4 \ubc84\uc804\uc744 \ubcc0\uacbd\ud569\ub2c8\ub2e4:</p> <ul> <li>URL\uc5d0\uc11c: <code>https://api.spacex.com/v4/rockets</code></li> <li>\ud5e4\ub354\uc5d0\uc11c: <code>Accept: application/vnd.spacex-v5+json</code></li> </ul> <p>\uc911\uc694\ud55c \uc774\uc720:</p> <ul> <li>v1: \uae30\ubcf8 \uae30\ub2a5</li> <li>v2: \uc0c8 \ud544\ub4dc \ucd94\uac00\ub428</li> <li>v3: \uc751\ub2f5 \uad6c\uc870 \ubcc0\uacbd\ub428</li> </ul> <p>\u26a0\ufe0f \ud301: \ud56d\uc0c1 \uc694\uccad\uc5d0 \ubc84\uc804\uc744 \uc9c0\uc815\ud558\uc138\uc694. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \"\ub3c4\ud0b9\"\uc774 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4!</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/4/#6-hateoas","title":"6. \ud558\uc774\ud37c\ubbf8\ub514\uc5b4 (HATEOAS): \uc6b0\uc8fc\uc5d0\uc11c\uc758 \ub0b4\ube44\uac8c\uc774\uc158","text":"<p>API \uc751\ub2f5\uc5d0\ub294 \uc2a4\ud14c\uc774\uc158 \uc9c0\ub3c4\ucc98\ub7fc \uad00\ub828 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \ub9c1\ud06c\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4: <pre><code>{\n  \"id\": \"iss\",\n  \"name\": \"\uad6d\uc81c \uc6b0\uc8fc \uc815\uac70\uc7a5\",\n  \"crew\": 7,\n  \"_links\": {\n    \"self\": { \"href\": \"/stations/iss\" },\n    \"modules\": { \"href\": \"/stations/iss/modules\" },\n    \"schedule\": { \"href\": \"/stations/iss/schedule\" }\n  }\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/4/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. REST\ub294 \ub2e4\uc74c\uc758 \uc57d\uc790\uc785\ub2c8\ub2e4:</p>  a) Rocket Engine System Transfer  b) Representational State Transfer  c) Remote Space Technology <p>2. \"\ubb34\uc0c1\ud0dc\uc131(Stateless)\" \uc6d0\uce59\uc740 \ub2e4\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4:</p>  a) \uc11c\ubc84\uac00 \uc694\uccad \uae30\ub85d\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4  b) \uac01 \uc694\uccad\uc740 \uc790\uccb4 \ud3ec\ud568\uc801\uc785\ub2c8\ub2e4  c) \ub370\uc774\ud130\ub294 SSL\uc744 \ud1b5\ud574\uc11c\ub9cc \uc804\uc1a1\ub429\ub2c8\ub2e4 <p>3. Falcon Heavy \ub85c\ucf13 \ub370\uc774\ud130\ub97c \uc5bb\uae30 \uc704\ud55c URI:</p>  a) POST /rockets/falcon-heavy  b) GET /falcon-heavy  c) GET /rockets/falcon-heavy <p>4. \ub9ac\uc18c\uc2a4\ub97c \uc644\uc804\ud788 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uba54\uc11c\ub4dc:</p>  a) PATCH  b) POST  c) PUT <p>5. API\uc5d0\uc11c HATEOAS\ub294 \ub2e4\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4:</p>  a) \uad00\ub828 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \ub9c1\ud06c \uc2dc\uc2a4\ud15c  b) \uc554\ud638\ud654 \ud504\ub85c\ud1a0\ucf5c  c) \ucffc\ub9ac \uc5b8\uc5b4 \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>REST API\ub294 \uc6f9 \uc11c\ube44\uc2a4\uc6a9 \ud45c\uc900\ud654\ub41c \"\uc6b0\uc8fc \uc815\uac70\uc7a5 \uc544\ud0a4\ud14d\ucc98\"\uc785\ub2c8\ub2e4. \uae30\uc5b5\ud558\uc138\uc694:</p> <ul> <li>\ub9ac\uc18c\uc2a4 = \uac1d\uccb4 (\ub85c\ucf13, \ud589\uc131)</li> <li>URI = \uac1d\uccb4 \uc88c\ud45c</li> <li>HTTP \uba54\uc11c\ub4dc = \uc81c\uc5b4 \uba85\ub839</li> <li>\ubc84\uc804 = \uc815\uac70\uc7a5 \ud604\ub300\ud654</li> </ul> <p>\uc900\ube44 \uc644\ub8cc! \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \"\ud14c\uc2a4\ud2b8 \ud504\ub85c\ube0c\"\ub97c \ubc1c\uc0ac\ud560 \uac83\uc785\ub2c8\ub2e4. Postman\uc744 \ud1b5\ud574 API\ub97c \ud14c\uc2a4\ud2b8\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4.</p> <p>\ud83d\udccc \uc2e4\uc2b5: SpaceX API\uc758 \uad6c\uc870\ub97c \uc0b4\ud3b4\ubcf4\uace0 \ub2e4\uc74c\uc744 \uc2e4\ud589\ud574 \ubcf4\uc138\uc694:</p> <p><code>GET https://api.spacexdata.com/v4/launches/latest</code> \u2014 URI\uc640 JSON \uad6c\uc870\uc5d0 \uc8fc\ubaa9\ud558\uc138\uc694!</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/5/","title":"\uc81c1.5\uc7a5: Postman\uc744 \ud1b5\ud55c API \ud14c\uc2a4\ud2b8","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 50\ubd84</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/5/#1-api","title":"1. \uc65c API\ub97c \ud14c\uc2a4\ud2b8\ud574\uc57c \ud560\uae4c\uc694? \ubc1c\uc0ac \uc804 \uc810\uac80","text":"<p>\uc0c1\uc0c1\ud574\ubcf4\uc138\uc694: \ub85c\ucf13 \ubc1c\uc0ac \uc804\uc5d0 \uc5d4\uc9c0\ub2c8\uc5b4\ub4e4\uc740 \uc2dc\uc2a4\ud15c \ud14c\uc2a4\ud2b8 \uac00\ub3d9\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. \uc810\uac80\uc744 \uac74\ub108\ub6f0\uba74 \uc784\ubb34\uac00 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4!</p> <p>API \ud14c\uc2a4\ud2b8\ub294 \ub2f9\uc2e0\uc758 \ud1b5\uc81c \uc2dc\ud5d8\uc785\ub2c8\ub2e4:</p> <ul> <li> <p>\u2705 \"\ub3c4\ud0b9 \ub178\ub4dc\"\uc758 \uc791\ub3d9 \uc5ec\ubd80 \ud655\uc778</p> </li> <li> <p>\ud83d\udee1\ufe0f \uc2e4\uc81c \uc0ac\uc6a9 \uc804\uc5d0 \ucde8\uc57d\uc810 \ubc1c\uacac</p> </li> <li> <p>\ud83d\udcca \ub370\uc774\ud130\uac00 \uc190\uc0c1 \uc5c6\uc774 \uc804\uc1a1\ub418\ub294\uc9c0 \ud655\uc778</p> </li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720: Postman\uc740 \ubaa8\ub4e0 \uc2dc\ub098\ub9ac\uc624\ub97c \uc2dc\ubbac\ub808\uc774\uc158\ud558\ub294 \ube44\ud589 \uad00\uc81c \uc13c\ud130\uc758 \ud14c\uc2a4\ud2b8 \ucf58\uc194\uacfc \uac19\uc2b5\ub2c8\ub2e4: \"\uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ud589\uc131\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub97c \uc694\uccad\ud558\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c? \uc11c\ubc84\uac00 \ucd08\ub2f9 1000\uac1c\uc758 \uc694\uccad\uc744 \uacac\ub51c \uc218 \uc788\uc744\uae4c?\"</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/5/#2-postman-api","title":"2. Postman: API\ub97c \uc704\ud55c \"\ube44\ud589 \uad00\uc81c \uc13c\ud130\"","text":"<p>\uae30\ub2a5:</p> <ul> <li> <p>\ud83d\udce1 \ubaa8\ub4e0 HTTP \uc694\uccad \uc804\uc1a1 (GET, POST, PUT, DELETE)</p> </li> <li> <p>\ud83d\udd0d \uc751\ub2f5 \ubd84\uc11d (\uc0c1\ud0dc \ucf54\ub4dc, \ud5e4\ub354, JSON \ubcf8\ubb38)</p> </li> <li> <p>\ud83e\uddea \uc790\ub3d9 \ud14c\uc2a4\ud2b8 \uc791\uc131 (JavaScript)</p> </li> <li> <p>\ud83c\udf10 \ud658\uacbd \ubcc0\uc218 \uc0ac\uc6a9 (\ud14c\uc2a4\ud2b8 vs \uc6b4\uc601)</p> </li> </ul> <p>\ud83d\udc49 Postman \ub2e4\uc6b4\ub85c\ub4dc</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/5/#3-api","title":"3. \uccab \uc2e4\ud589: \ud589\uc131 API \ud14c\uc2a4\ud2b8","text":"<p>1\ub2e8\uacc4: \uc694\uccad \uc0dd\uc131</p> <ol> <li> <p>Postman \uc5f4\uae30 \u2192 New \u2192 Request</p> </li> <li> <p>URL \uc785\ub825: <code>https://api.spacexdata.com/v4/rockets</code></p> </li> <li> <p>\uba54\uc11c\ub4dc \uc120\ud0dd: GET</p> </li> </ol> <p>2\ub2e8\uacc4: \"\uc2e0\ud638\" \uc804\uc1a1 <pre><code>[\ube44\ud589 \uad00\uc81c \uc13c\ud130] -- GET /planets --&gt; [SpaceX \uc11c\ubc84]\n</code></pre></p> <p>3\ub2e8\uacc4: \uc6d0\uaca9 \uce21\uc815 \ubd84\uc11d: - \uc0c1\ud0dc: <code>200 OK</code> - \uc751\ub2f5 \ubcf8\ubb38 (JSON): \ub9e4\uac1c\ubcc0\uc218\uac00 \ud3ec\ud568\ub41c \ub85c\ucf13 \ubaa9\ub85d <pre><code>[\n  {\n    \"name\": \"Falcon 1\",\n    \"type\": \"rocket\",\n    \"active\": false,\n    \"stages\": 2,\n    \"id\": \"5e9d0d95eda69955f709d1eb\"\n  },\n  {\n    \"name\": \"Falcon 9\",\n    \"type\": \"rocket\",\n    \"active\": true,\n    \"id\": \"5e9d0d95eda69973a809d1ec\"\n  }\n]\n</code></pre></p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/5/#4-postman","title":"4. \ub2e4\uc774\uc5b4\uadf8\ub7a8: Postman \uad6c\uc131 \uc694\uc18c","text":"<pre><code>[\uc791\uc5c5 \uacf5\uac04]\n\u251c\u2500\u2500 \"Params\" \ud0ed (\ucffc\ub9ac \ub9e4\uac1c\ubcc0\uc218)\n\u251c\u2500\u2500 \"Headers\" \ud0ed (\ud5e4\ub354)\n\u251c\u2500\u2500 \"Body\" \ud0ed (POST/PUT \uc694\uccad \ubcf8\ubb38)\n\u251c\u2500\u2500 \"Tests\" \ud0ed (\ud655\uc778 \uc2a4\ud06c\ub9bd\ud2b8)\n\u2514\u2500\u2500 \uc751\ub2f5 \ud328\ub110 (\uc0c1\ud0dc, \uc2dc\uac04, \ud06c\uae30, \ubcf8\ubb38)\n</code></pre>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/5/#5","title":"5. \ubcf5\uc7a1\ud55c \uc2dc\ub098\ub9ac\uc624 \uc0dd\uc131: \ubbf8\uc158 \uc2dc\uc791","text":"<p>\ud14c\uc2a4\ud2b8: \uce74\ud0c8\ub85c\uadf8\uc5d0 \uc0c8 \ud589\uc131 \ucd94\uac00</p> <ol> <li> <p>\uba54\uc11c\ub4dc: POST</p> </li> <li> <p>URL: <code>https://jsonplaceholder.typicode.com/posts</code> (\uc608\uc2dc)</p> </li> <li> <p>Headers\uc5d0:    <pre><code> { \"Content-Type\": \"application/json\" }\n</code></pre></p> </li> <li>Body (raw \u2192 JSON)\uc5d0:    <pre><code>{\n \"title\": \"New Exoplanet Found\",\n \"body\": \"Proxima Centauri b shows signs of a stable atmosphere.\",\n \"userId\": 1\n }\n</code></pre></li> </ol> <p>Tests\uc5d0\uc11c\uc758 \uc790\ub3d9 \ud655\uc778: <pre><code>// \uc0c1\ud0dc \ud655\uc778\npm.test(\"Post created successfully\", () =&gt; {\n    pm.response.to.have.status(201);\n});\n\n// \uc751\ub2f5\uc758 \uad6c\uc870 \ubc0f \ub370\uc774\ud130 \ud655\uc778\npm.test(\"Response contains the new post data\", () =&gt; {\n    const response = pm.response.json();\n    pm.expect(response).to.have.property(\"id\"); // \uc11c\ubc84\uac00 ID\ub97c \ud560\ub2f9\ud588\ub294\uc9c0 \ud655\uc778\n    pm.expect(response.title).to.eql(\"New Exoplanet Found\");\n});\n</code></pre></p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/5/#6-vs","title":"6. \ud658\uacbd \ubcc0\uc218: \uc9c0\uad6c vs \ud654\uc131","text":"<p>\ub2e4\ub978 \uc11c\ubc84(\ud14c\uc2a4\ud2b8/\uc6b4\uc601)\uc5d0\uc11c \uc5b4\ub5bb\uac8c \ud14c\uc2a4\ud2b8\ud560\uae4c\uc694?</p> <ol> <li>\ud658\uacbd \uc0dd\uc131:</li> <li><code>Local</code> \u2192 <code>http://localhost:3000</code></li> <li> <p><code>Production</code> \u2192 <code>https://api.nasa.gov</code></p> </li> <li> <p>\uc694\uccad\uc5d0\uc11c \ubcc0\uc218 \uc0ac\uc6a9:    <pre><code>{{base_url}}/planets  # \ud604\uc7ac URL\uc744 \ub300\uccb4\n</code></pre></p> </li> </ol> <p>\u26a0\ufe0f \uc911\uc694! \uc6b4\uc601 \uc11c\ubc84\uc5d0\uc11c <code>DELETE</code>\ub97c \uc808\ub300\ub85c \ud14c\uc2a4\ud2b8\ud558\uc9c0 \ub9c8\uc138\uc694!</p>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/5/#7","title":"7. \uceec\ub809\uc158: \uc6b0\uc8fc \uc784\ubb34 \ub77c\uc774\ube0c\ub7ec\ub9ac","text":"<p>\uc694\uccad \uadf8\ub8f9\ud654: <pre><code>    \ud83d\udcc2 \"NASA\" \uceec\ub809\uc158\n    \u251c\u2500\u2500 GET \ud589\uc131\n    \u251c\u2500\u2500 POST \uc0c8 \ud589\uc131\n    \u2514\u2500\u2500 DELETE \ud589\uc131 (\ud14c\uc2a4\ud2b8 \ubaa8\ub4dc)\n</code></pre> \uc7a5\uc810:</p> <ul> <li>\ud83d\ude80 \ubaa8\ub4e0 \ud14c\uc2a4\ud2b8\ub97c \ud55c \ubc88\uc758 \ubc84\ud2bc \ud074\ub9ad\uc73c\ub85c \uc2e4\ud589</li> <li>\ud83d\udce4 \uad6c\uc131 \ub0b4\ubcf4\ub0b4\uae30/\uac00\uc838\uc624\uae30</li> <li>\ud83d\udc68\u200d\ud83d\ude80 \ud300 \uacf5\ub3d9 \uc791\uc5c5</li> </ul>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/5/#8","title":"8. \uc790\ub3d9\ud654: \uc704\uc131 \uc815\uae30 \uc810\uac80","text":"<p>Postman\uc744 \ud1b5\ud574 API \ubaa8\ub2c8\ud130\ub9c1 \uc124\uc815:</p> <ol> <li> <p>Schedule \u2192 2\uc2dc\uac04\ub9c8\ub2e4</p> </li> <li> <p>\ud14c\uc2a4\ud2b8:    <pre><code>pm.test(\"\uc704\uc131 \uc628\ub77c\uc778\", () =&gt; {\n  pm.response.to.have.status(200);\n  pm.expect(pm.response.json().signal).above(50); // \uc2e0\ud638 &gt;50%\n});\n</code></pre></p> </li> <li> <p>\uace0\uc7a5 \uc2dc Slack/\uc774\uba54\uc77c \uc54c\ub9bc</p> </li> </ol>"},{"location":"ko/%EC%A0%9C1%EC%9E%A5%20-%20API%EC%9D%98%20%EA%B8%B0%EB%B3%B8%20%EA%B0%9C%EB%85%90/5/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. Postman\uc740 \ub2e4\uc74c \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4:</p>  a) \uc774\uba54\uc77c \uc804\uc1a1  b) API \ud14c\uc2a4\ud2b8  c) \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc0dd\uc131 <p>2. \uac1d\uccb4 \uc0dd\uc131 \uc131\uacf5 \uc2dc \uc608\uc0c1\ub418\ub294 \uc0c1\ud0dc\ub294?</p>  a) 200 OK  b) 201 Created  c) 404 Not Found <p>3. Postman\uc5d0\uc11c \uc790\ub3d9 \ud14c\uc2a4\ud2b8\ub294 \uc5b4\ub514\uc5d0 \uc791\uc131\ud558\ub098\uc694?</p>  a) \"Body\" \ud0ed  b) \"Tests\" \ud0ed  c) \"Cookies\" \ud0ed <p>4. \ud658\uacbd \ubcc0\uc218\uac00 \ud544\uc694\ud55c \uc774\uc720\ub294:</p>  a) \ud14c\uc2a4\ud2b8 \ubc0f \uc6b4\uc601 \uc11c\ubc84 \uac04 \uc804\ud658  b) \ube44\ubc00\ubc88\ud638\ub97c \ud3c9\ubb38\uc73c\ub85c \uc800\uc7a5  c) \uc784\uc758\uc758 \ub370\uc774\ud130 \uc0dd\uc131 <p>5. \uc815\uae30 \ubaa8\ub2c8\ud130\ub9c1\uc740 \ubb34\uc5c7\uc744 \ud655\uc778\ud558\ub098\uc694?</p>  a) API \uc791\ub3d9 \uc548\uc815\uc131  b) \uc778\ud130\ub137 \uc18d\ub3c4  c) \ubb38\uc11c\uc758 \ucd5c\uc2e0\uc131 \ud655\uc778 <p>\ud83d\ude80 \uc694\uc57d: Postman\uc740 API \ud14c\uc2a4\ud2b8\ub97c \uc704\ud55c \ub9cc\ub2a5 \"\uc81c\uc5b4\ud310\"\uc785\ub2c8\ub2e4. Postman\uc744 \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc74c\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: - \ucd9c\uc2dc \uc804\uc5d0 \"\uc628\ubcf4\ub4dc \uc2dc\uc2a4\ud15c\"\uc758 \uc791\ub3d9\uc744 \ud655\uc778 - \ud14c\uc2a4\ud2b8 \uc2dc\ub098\ub9ac\uc624 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc0dd\uc131 - \uc6b0\uc8fc \uc11c\ube44\uc2a4 \ubaa8\ub2c8\ud130\ub9c1 \uc790\ub3d9\ud654</p> <p>\ud83d\udccc \uc2e4\uc2b5 \uacfc\uc81c:</p> <ol> <li>Postman \uc124\uce58</li> <li>SpaceX API\uc5d0 \uc694\uccad \uc0dd\uc131: <code>GET https://api.spacexdata.com/v4/launches/latest</code></li> <li>\ub2e4\uc74c\uc744 \ud655\uc778\ud558\ub294 \ud14c\uc2a4\ud2b8 \uc791\uc131:</li> <li>\uc751\ub2f5 \uc0c1\ud0dc <code>200</code></li> <li><code>name</code> \ud544\ub4dc\uc5d0 \"Falcon\"\uc774\ub77c\ub294 \ub2e8\uc5b4 \ud3ec\ud568</li> <li>\uc751\ub2f5 \uc2dc\uac04 &lt; 500ms</li> </ol> <p>1\uc7a5 \uc644\ub8cc\ub97c \ucd95\ud558\ud569\ub2c8\ub2e4!</p> <p>API\uc758 \uae30\ubcf8 \uc0ac\ud56d\uc744 \uc775\ud788\uc168\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \uc6b0\uc8fc API\ub97c \uc0ac\uc6a9\ud558\ub294 \"\uc6b0\uc8fc\uc120\"\uc778 \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uad6c\ucd95\ud560 \uac83\uc785\ub2c8\ub2e4!</p> <p>\ud83c\udf0c \ucd94\uac00 \uc790\ub8cc:</p> <ul> <li>SpaceX API Documentation</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/","title":"2.1\uc7a5: Laravel \ud658\uacbd \uc124\uc815","text":""},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/#1-2","title":"\ud559\uc2b5 \uc2dc\uac04: 1-2\uc2dc\uac04","text":""},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/#1","title":"1. \ub85c\uceec \ud658\uacbd\uc774 \ud544\uc694\ud55c \uc774\uc720\ub294?","text":"<p>\uc6b0\uc8fc \ud0d0\uc0ac\uc120\uc744 \ub9cc\ub4e0\ub2e4\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. \uc6b0\uc8fc\ub85c \ubc1c\uc0ac\ud558\uae30 \uc804\uc5d0 \ubaa8\ub4e0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uad6c\uc5d0\uc11c \ud14c\uc2a4\ud2b8\ud569\ub2c8\ub2e4. \ub85c\uceec \ud658\uacbd\uc740 \ucf54\ub4dc\uc758 \"\uc81c\uc5b4 \uc5f0\uad6c\uc2e4\"\uc785\ub2c8\ub2e4:</p> <ul> <li>\uc6b4\uc601 \uc11c\ubc84\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub294 \uc548\uc804\ud55c \uc2e4\ud5d8</li> <li>\ube60\ub978 \uc758\uc874\uc131 \ubc30\ud3ec</li> <li>\uc18c\ud504\ud2b8\uc6e8\uc5b4 \ubc84\uc804 \uac04 \uc26c\uc6b4 \uc804\ud658</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720: Herd = \ubaa8\ubc14\uc77c \ubc1c\uc0ac\ub300 Docker = \uc6b0\uc8fc \uc815\uac70\uc7a5 \ud6c8\ub828 \uc2dc\ubbac\ub808\uc774\ud130 XAMPP = \uace0\uc815\uc2dd \ud14c\uc2a4\ud2b8 \uc2a4\ud0e0\ub4dc</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/#2-herd","title":"2. Herd \uc124\uce58","text":"<p>Herd\ub294 PHP \ud658\uacbd\uc744 \uad00\ub9ac\ud558\ub294 \ud604\ub300\uc801\uc778 \ub3c4\uad6c\uc785\ub2c8\ub2e4 (Laravel Valet\uacfc \uc720\uc0ac).</p> <p>\uc124\uce58 \ub2e8\uacc4:</p> <ol> <li>\uc124\uce58 \ud504\ub85c\uadf8\ub7a8 \ub2e4\uc6b4\ub85c\ub4dc: herd.laravel.com</li> <li><code>Herd Installer.exe</code> \uc2e4\ud589 \u2192 \ub2e4\uc74c(Next) \u2192 \uc124\uce58(Install)</li> <li>\uc124\uce58 \ud6c4:<ul> <li>\uc2dc\uc791 \uba54\ub274\uc5d0\uc11c Herd\ub97c \uc5fd\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc544\uc774\ucf58\uc774 \uc2dc\uc2a4\ud15c \ud2b8\ub808\uc774(\uc2dc\uacc4 \uc606)\uc5d0 \ub098\ud0c0\ub0a9\ub2c8\ub2e4.</li> <li>Herd \uc544\uc774\ucf58\uc744 \ud074\ub9ad\ud569\ub2c8\ub2e4: Nginx\uc640 \ud544\uc694\ud55c PHP \ubc84\uc804 (\uc608: 8.3)\uc774 \uc2e4\ud589 \uc911\uc778\uc9c0 (\ub179\uc0c9 \uc810\uc73c\ub85c \ud45c\uc2dc) \ud655\uc778\ud569\ub2c8\ub2e4.</li> <li>Herd \uacbd\ub85c\ub85c \uc774\ub3d9\ud558\uc5ec \ud504\ub85c\uc81d\ud2b8\uac00 \uc800\uc7a5\ub420 \ud3f4\ub354\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4 (\uc608: C:\\Users\\YourUser\\Code). Herd\ub294 \uc774 \ud3f4\ub354 \ub0b4\uc758 \uac01 \ud558\uc704 \ub514\ub809\ud1a0\ub9ac\uc5d0 \ub300\ud574 \ud3f4\ub354-\uc774\ub984.test\uc640 \uac19\uc740 \uc608\uc05c \ub3c4\uba54\uc778\uc744 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4.</li> </ul> </li> </ol> <p>\u26a0\ufe0f \uc911\uc694! \uc124\uce58 \uc2dc: - \ub124\ud2b8\uc6cc\ud06c \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4 (\ubc29\ud654\ubcbd\uc5d0\uc11c \uc694\uccad\ud560 \uacbd\uc6b0) - PATH \uacbd\ub85c \ud655\uc778: <code>C:\\Program Files\\Herd\\bin</code></p> <p>\uc791\ub3d9 \ud655\uc778:</p> <ol> <li>\uc2dc\uc2a4\ud15c \ud2b8\ub808\uc774\uc5d0 \uc788\ub294 Herd \uc544\uc774\ucf58\uc744 \ud074\ub9ad\ud569\ub2c8\ub2e4.</li> <li>Nginx \ubc0f PHP \uc11c\ube44\uc2a4\uac00 \ud65c\uc131 \uc0c1\ud0dc\uc778\uc9c0 (\ub179\uc0c9 \ud45c\uc2dc\uae30) \ud655\uc778\ud569\ub2c8\ub2e4.</li> <li>\ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354 (\uc608: C:\\Users\\YourUser\\Code)\uc5d0 <code>test</code> \ud3f4\ub354\ub97c \ub9cc\ub4e4\uace0, \uadf8 \uc548\uc5d0 <code>&lt;?php phpinfo(); ?&gt;</code> \ub0b4\uc6a9\uc744 \uac00\uc9c4 <code>index.php</code> \ud30c\uc77c\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.</li> <li>Herd\uc5d0\uc11c <code>sites</code> \ud0ed\uc744 \ud1b5\ud574 <code>test</code> \ud3f4\ub354\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud558\uace0 \"Add site\"\ub97c \ud074\ub9ad\ud569\ub2c8\ub2e4.</li> <li>\ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c <code>http://test.test</code> \uc8fc\uc18c\ub97c \uc5fd\ub2c8\ub2e4. PHP \uc815\ubcf4 \ud398\uc774\uc9c0\uac00 \ud45c\uc2dc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.</li> </ol>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/#3","title":"3. \ub300\uccb4 \ubc29\ubc95 (\uc694\uc57d)","text":"\ub3c4\uad6c \ub300\uc0c1 \uc7a5\uc810 \ub2e8\uc810 Laravel Sail (Docker) \ubaa8\ub4e0 \uc218\uc900\uc758 \uc0ac\uc6a9\uc790 \uc644\uc804\ud55c \uaca9\ub9ac, \ud658\uacbd \uc7ac\ud604\uc131, Laravel \uacf5\uc2dd \uc9c0\uc6d0 Docker \uc124\uce58 \ud544\uc694, \ub354 \ub9ce\uc740 \ub9ac\uc18c\uc2a4 \uc18c\ubaa8 XAMPP \ucd08\ubcf4\uc790 \uc62c\uc778\uc6d0 \uc124\uce58 \ud504\ub85c\uadf8\ub7a8 \ubcf5\uc7a1\uc131, \uc18c\ud504\ud2b8\uc6e8\uc5b4 \ubc84\uc804 \uad00\ub9ac \uc5b4\ub824\uc6c0, \uc2dc\uc2a4\ud15c \uc624\uc5fc Laragon Windows \uac1c\ubc1c\uc790 \ube60\ub974\uace0, \ubc84\uc804 \uc804\ud658 \uc6a9\uc774, \ud638\uc2a4\ud2b8 \uc790\ub3d9 \uc124\uc815 \uc0c8 \ud504\ub85c\uc81d\ud2b8 \ucd94\uac00 \uc2dc \uc6f9 \uc11c\ubc84 \uc218\ub3d9 \uc7ac\uc2dc\uc791 \ud544\uc694 <p>Docker \uc608\uc2dc (Laravel Sail): <pre><code># Docker \uc124\uce58 \ud6c4\n./vendor/bin/sail up\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/#4-php-composer","title":"4. PHP \ubc0f Composer \uc124\uce58","text":"<p>Herd\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0:</p> <ol> <li>PHP:<ul> <li>Windows\uc6a9 PHP 8.3 \ub2e4\uc6b4\ub85c\ub4dc</li> <li><code>C:\\PHP</code>\uc5d0 \uc555\ucd95 \ud574\uc81c</li> <li>PATH\uc5d0 \ucd94\uac00:  <pre><code># \uad00\ub9ac\uc790 \uad8c\ud55c\uc73c\ub85c PowerShell\uc5d0\uc11c \uc2e4\ud589\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4.\n[Environment]::SetEnvironmentVariable(\"Path\", \"$env:Path;C:\\PHP\", \"User\")\n</code></pre></li> </ul> </li> <li>Composer:<ul> <li>Composer-Setup.exe \uc2e4\ud589</li> <li>\ud655\uc778:  <pre><code>php -v\ncomposer --version\n</code></pre></li> </ul> </li> </ol>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/#5-postgresql","title":"5. PostgreSQL \uc124\uce58","text":"<p>\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc791\uc5c5\uc6a9:</p> <ol> <li>PostgreSQL 15 \ub2e4\uc6b4\ub85c\ub4dc</li> <li>\uc124\uce58 \ud504\ub85c\uadf8\ub7a8 \uc2e4\ud589:</li> <li>\uc288\ud37c\uc720\uc800 \ube44\ubc00\ubc88\ud638: <code>admin</code> (\ub610\ub294 \ubcf8\uc778 \uc124\uc815)</li> <li>\ud3ec\ud2b8: <code>5432</code> (\uae30\ubcf8)</li> <li>\uc124\uce58 \ud6c4:</li> <li>pgAdmin 4 (\uadf8\ub798\ud53d \ud074\ub77c\uc774\uc5b8\ud2b8) \uc5f4\uae30 <p>DBeaver, DataGrip \ub610\ub294 \uba85\ub839\uc904\uacfc \uac19\uc740 \ub2e4\ub978 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc800\ub294 DBeaver\ub97c \uc120\ud638\ud558\uc9c0\ub9cc, \uc774\uac83\uc740 \ucde8\ud5a5\uc758 \ubb38\uc81c\uc785\ub2c8\ub2e4.</p> </li> <li>\ud504\ub85c\uc81d\ud2b8\uc6a9 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc0dd\uc131: <code>space_api</code></li> </ol>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/#6-laravel","title":"6. Laravel \uc124\uce58","text":"<ol> <li> <p>Composer\ub97c \ud1b5\ud574: <pre><code>composer create-project laravel/laravel space-api\ncd space-api\n</code></pre></p> </li> <li> <p>Git \ucd08\uae30\ud654 (\uc120\ud0dd \uc0ac\ud56d): <pre><code>git init\ngit add .\ngit commit -m \"\uc6b0\uc8fc \ud504\ub85c\uc81d\ud2b8 \uc2dc\uc791\"\n</code></pre></p> </li> <li> <p>\uc11c\ubc84 \uc2e4\ud589 \ubc0f \ud655\uc778:</p> <p>Herd\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0: space-api \ud504\ub85c\uc81d\ud2b8\uac00 Herd\uc5d0 \ucd94\uac00\ud55c \ud3f4\ub354\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ub2e4\uc74c \uc8fc\uc18c\ub97c \uc5fd\ub2c8\ub2e4: http://space-api.test Laravel \uc2dc\uc791 \ud398\uc774\uc9c0\uac00 \ud45c\uc2dc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. Herd \ub355\ubd84\uc5d0 \uc11c\ubc84\uac00 \uc774\ubbf8 \uc2e4\ud589 \uc911\uc785\ub2c8\ub2e4!</p> </li> </ol> <p>Herd\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 (\uc218\ub3d9 \uc124\uce58): <pre><code>php artisan serve\n</code></pre> \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ub2e4\uc74c\uc744 \uc5fd\ub2c8\ub2e4: http://localhost:8000 \u2192 Laravel \uc2dc\uc791 \ud398\uc774\uc9c0\uac00 \ub098\ud0c0\ub098\uc57c \ud569\ub2c8\ub2e4!</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/#herd","title":"Herd\uc5d0\uc11c \ud504\ub85c\uc81d\ud2b8 \uc0dd\uc131 \uc2dc:","text":"<p>\ud654\uba74\uc758 \uc9c0\uc2dc\ub97c \ub530\ub974\uc138\uc694. \ud3b8\uc758\ub97c \uc704\ud574 \ud504\ub85c\uc81d\ud2b8 \uc774\ub984\uc740 <code>space-api</code>\ub85c \ud558\uaca0\uc2b5\ub2c8\ub2e4. \uc2a4\ud0c0\ud130 \ud0a4\ud2b8\ub294 \uc544\ubb34\uac70\ub098 \uc0c1\uad00\uc5c6\uc9c0\ub9cc, \uc800\ub294 React\ub97c \uc120\ud638\ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/#phpunit-","title":"phpunit\uc744 \ubc18\ub4dc\uc2dc \ud3ec\ud568\ud558\uc138\uc694 - \ub098\uc911\uc5d0 \ud544\uc694\ud560 \uac83\uc785\ub2c8\ub2e4","text":""},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/#7","title":"7. \ud504\ub85c\uc81d\ud2b8 \uc124\uc815","text":"<p>\uc911\uc694 \ud30c\uc77c:</p> <ul> <li><code>.env</code> \u2014 \ud658\uacbd \uc124\uc815 (\ud0a4, \ub370\uc774\ud130\ubca0\uc774\uc2a4)</li> <li><code>config/database.php</code> \u2014 DBMS \uad6c\uc131</li> <li><code>composer.json</code> \u2014 PHP \uc758\uc874\uc131</li> </ul> <p>\ud504\ub85c\uc81d\ud2b8\uc5d0 DB \uc5f0\uacb0:</p> <p><code>.env</code>\uc5d0 \ub2e4\uc74c\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4:</p> <pre><code>DB_CONNECTION=pgsql\nDB_HOST=127.0.0.1\nDB_PORT=5432\nDB_DATABASE=space_api\nDB_USERNAME=postgres # postgres \ub85c\uadf8\uc778\nDB_PASSWORD=admin # postgres \ube44\ubc00\ubc88\ud638\n</code></pre> <p>\uccab Artisan \uba85\ub839\uc5b4: <pre><code>php artisan key:generate  # \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud0a4 \uc0dd\uc131\nphp artisan migrate:fresh # \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub9c8\uc774\uadf8\ub808\uc774\uc158 (postgres\ub85c \uc804\ud658 \uc2dc)\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. Herd\ub294...</p>  a) PHP \ud658\uacbd \uad00\ub9ac \ub3c4\uad6c  b) \ucf54\ub4dc \uc5d0\ub514\ud130  c) \uc6b4\uc601 \uccb4\uc81c <p>2. Laravel\uc774 PHP \uc758\uc874\uc131\uc744 \uad00\ub9ac\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \ub3c4\uad6c\ub294?</p>  a) npm  b) Composer  c) Artisan <p>3. PostgreSQL\uc758 \uae30\ubcf8 \ud3ec\ud2b8:</p>  a) 3306  b) 5432  c) 8000 <p>4. Composer\ub97c \ud1b5\ud574 Laravel \ud504\ub85c\uc81d\ud2b8\ub97c \uc0dd\uc131\ud558\ub294 \uba85\ub839\uc5b4:</p>  a) composer create-laravel  b) laravel new  c) composer create-project laravel/laravel <p>5. \ud658\uacbd \uc124\uc815 \ud30c\uc77c\uc740?</p>  a) .env  b) config.php  c) settings.ini \ud655\uc778"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/1/#_2","title":"\ud83d\ude80 \ucc55\ud130 \ub9c8\ubb34\ub9ac","text":"<p>\ub2f9\uc2e0\uc740 \uc6b0\uc8fc API\ub97c \uc704\ud55c \"\ub7f0\uce58 \ud328\ub4dc\"\ub97c \ubc30\ud3ec\ud588\uc2b5\ub2c8\ub2e4! \uc774\uc81c \ub2e4\uc74c\uc744 \uac00\uc9d1\ub2c8\ub2e4:</p> <ul> <li>\ud83d\udee0\ufe0f PHP \ubc0f Nginx\uc640 \ud568\uaed8\ud558\ub294 \ub85c\uceec \ud658\uacbd (Herd \ub610\ub294 \uc218\ub3d9 \uc124\uce58)</li> <li>\ud83d\udc18 \uc124\uce58\ub41c PostgreSQL \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc11c\ubc84</li> <li>\ud83d\ude80 Laravel \ud504\ub85c\uc81d\ud2b8 <code>space-api</code></li> <li>\ud83d\udd0c \uc124\uc815\ub41c \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5f0\uacb0</li> </ul> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li>Herd\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0: <code>http://space-api.test</code> \uc8fc\uc18c\ub85c \uc6f9\uc0ac\uc774\ud2b8\uac00 \uc5f4\ub9ac\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li>Herd\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0: <code>php artisan serve</code> \uba85\ub839\uc774 \uc791\ub3d9\ud558\uace0 <code>http://localhost:8000</code> \uc8fc\uc18c\ub85c \uc6f9\uc0ac\uc774\ud2b8\uac00 \uc5f4\ub9ac\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li>\uc5b4\ub5a4 \uacbd\uc6b0\ub4e0, <code>pgAdmin 4</code>\uc5d0\uc11c \uc0dd\uc131\ub41c <code>space_api</code> \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \ubcf4\uc774\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> </ul> <p>```</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/2/","title":"2.2\uc7a5: Planet \ubaa8\ub378 \uc0dd\uc131","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 45\ubd84</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/2/#1-laravel","title":"1. Laravel\uc758 \ubaa8\ub378: \uc6b0\uc8fc \uac1d\uccb4\uc758 \uc124\uacc4\ub3c4","text":"<p>MVC(Model-View-Controller) \uc544\ud0a4\ud14d\ucc98\uc5d0\uc11c \ubaa8\ub378\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:</p> <ul> <li>\ud83d\udce6 \ub370\uc774\ud130 \ucee8\ud14c\uc774\ub108 (\ud589\uc131 \ub9e4\uac1c\ubcc0\uc218)</li> <li>\ud83d\udd0c \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc791\uc5c5 \uc778\ud130\ud398\uc774\uc2a4</li> <li>\ud83d\udee1\ufe0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\uc758 \uc911\uc2ec</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720: <code>Planet</code> \ubaa8\ub378 = \uc9c0\uc0c1 \ud1b5\uc81c \uc13c\ud130(\u0426\u0423\u041f) \ucef4\ud4e8\ud130\uc758 \ud589\uc131 \uc124\uacc4\ub3c4. \uc774\ub97c \ud1b5\ud574 \ub2e4\uc74c\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:</p> <ul> <li>\uce74\ud0c8\ub85c\uadf8\uc5d0 \uc0c8\ub85c\uc6b4 \ud589\uc131 \uc0dd\uc131 (<code>INSERT</code>)</li> <li>\ud654\uc131 \ub370\uc774\ud130 \uac00\uc838\uc624\uae30 (<code>SELECT</code>)</li> <li>\ub300\uae30 \uc815\ubcf4 \uc5c5\ub370\uc774\ud2b8 (<code>UPDATE</code>)</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/2/#2","title":"2. \ubaa8\ub378 \ubc0f \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc0dd\uc131","text":"<p>Laravel\uc740 Artisan CLI\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ud504\ub85c\uc81d\ud2b8\uc758 \"\uc81c\uc5b4\ud310\"\uc785\ub2c8\ub2e4.</p> <p>1\ub2e8\uacc4: \ub9c8\uc774\uadf8\ub808\uc774\uc158\uacfc \ud568\uaed8 \ubaa8\ub378 \uc0dd\uc131 <pre><code>php artisan make:model Planet -m\n</code></pre></p> <p>\uc0dd\uc131\ub41c \ud30c\uc77c: <pre><code>app/\n  \u2514\u2500\u2500 Models/\n      \u2514\u2500\u2500 Planet.php    \u2190 \ubaa8\ub378\ndatabase/\n  \u2514\u2500\u2500 migrations/\n      \u2514\u2500\u2500 2025_08_04_000000_create_planets_table.php  \u2190 \ub9c8\uc774\uadf8\ub808\uc774\uc158\n</code></pre></p> <p>Artisan \ud50c\ub798\uadf8:</p> <ul> <li><code>-m</code> \u2192 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc0dd\uc131</li> <li><code>-c</code> \u2192 \ucee8\ud2b8\ub864\ub7ec \uc0dd\uc131</li> <li><code>-r</code> \u2192 \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec</li> </ul> <p>\ud83d\udca1 \uc804\ubb38\uac00 \ud301: \uc774\ub7ec\ud55c \ud50c\ub798\uadf8\ub97c \uc870\ud569\ud558\uc5ec \ucd5c\ub300 \ud6a8\uc728\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. <code>php artisan make:model Planet -mcr</code> \uba85\ub839\uc5b4\ub294 \ubaa8\ub378, \ub9c8\uc774\uadf8\ub808\uc774\uc158, \uadf8\ub9ac\uace0 \uc774 \ubaa8\ub378\uc744 \uad00\ub9ac\ud558\ub294 \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec\ub97c \ub3d9\uc2dc\uc5d0 \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub294 \ub9ce\uc740 \uc2dc\uac04\uc744 \uc808\uc57d\ud574\uc90d\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/2/#3-planet","title":"3. Planet \ubaa8\ub378 \uc124\uc815","text":"<p><code>app/Models/Planet.php</code> \ud30c\uc77c\uc744 \uc5fd\ub2c8\ub2e4: <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Planet extends Model\n{\n    // \ud14c\uc774\ube14 \uc774\ub984 (\uae30\ubcf8\uac12: 'planets')\n    // Laravel\uc740 \ud14c\uc774\ube14 \uc774\ub984\uc774 \ubaa8\ub378 \uc774\ub984\uc758 snake_case \ud615\ud0dc\uc758 \ubcf5\uc218\ud615(Planet -&gt; planets)\uc774\ub77c\uace0 \uc790\ub3d9\uc73c\ub85c \uac00\uc815\ud569\ub2c8\ub2e4.\n       //\ub530\ub77c\uc11c \uc774 \uc18d\uc131\uc740 \ud544\uc218\ub294 \uc544\ub2c8\uc9c0\ub9cc, \uba85\ud655\uc131\uc744 \uc704\ud574 \uc720\uc6a9\ud569\ub2c8\ub2e4.\n    protected $table = 'planets';\n\n    // \ub300\ub7c9 \ud560\ub2f9\uc774 \ud5c8\uc6a9\ub41c \ud544\ub4dc\n    protected $fillable = [\n        'name',\n        'description',\n        'size_km',\n        'solar_system',\n        'image_url'\n    ];\n\n    // \uc790\ub3d9 \ud615 \ubcc0\ud658\uc744 \uc704\ud55c \ub370\uc774\ud130 \ud0c0\uc785\n    protected $casts = [\n        'size_km' =&gt; 'integer'\n    ];\n}\n</code></pre></p> <p>\uc18d\uc131 \uc124\uba85:</p> \uc18d\uc131 \uac12 \ub370\uc774\ud130 \uc608\uc2dc <code>$table</code> DB\uc758 \ud14c\uc774\ube14 \uc774\ub984 <code>planets</code> <code>$fillable</code> \ub300\ub7c9 \ud560\ub2f9\uc744 \uc704\ud55c \ud544\ub4dc <code>name</code>, <code>size_km</code> <code>$casts</code> \uc790\ub3d9 \ud0c0\uc785 \ubcc0\ud658 <code>size_km: integer</code>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/2/#4","title":"4. \ud589\uc131 \ud14c\uc774\ube14 \uc124\uacc4","text":"<p>\ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \ud3b8\uc9d1\ud558\uae30 \uc804\uc5d0 \"\ud589\uc131\"\uc758 \uad6c\uc870\ub97c \uc815\uc758\ud574 \ubd05\uc2dc\ub2e4:</p> \ud544\ub4dc \ub370\uc774\ud130 \ud0c0\uc785 \uc124\uba85 \uc608\uc2dc \uac12 <code>id</code> BIGINT (PK) \uace0\uc720 ID 1 <code>name</code> VARCHAR(255) \ud589\uc131 \uc774\ub984 \"\ud654\uc131\" <code>description</code> TEXT \uc124\uba85 \"\ubd89\uc740 \ud589\uc131...\" <code>size_km</code> INTEGER \uc9c1\uacbd (km) 6779 <code>solar_system</code> VARCHAR(100) \ud0dc\uc591\uacc4 \"\ud0dc\uc591\uacc4\" <code>image_url</code> VARCHAR(2048) \uc0ac\uc9c4 URL (null \ud5c8\uc6a9) \"https://...\" <code>created_at</code> TIMESTAMP \uc0dd\uc131 \ub0a0\uc9dc 2025-08-04 12:00:00 <code>updated_at</code> TIMESTAMP \uc5c5\ub370\uc774\ud2b8 \ub0a0\uc9dc 2025-08-05 09:30:00"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/2/#5","title":"5. \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ud3b8\uc9d1","text":"<p><code>database/migrations/..._create_planets_table.php</code> \ud30c\uc77c\uc744 \uc5fd\ub2c8\ub2e4:</p> <pre><code>&lt;?php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreatePlanetsTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('planets', function (Blueprint $table) {\n            $table-&gt;id(); // BIGINT \uc790\ub3d9 \uc99d\ubd84\n\n            $table-&gt;string('name')-&gt;unique();\n            $table-&gt;text('description');\n            $table-&gt;integer('size_km');\n            $table-&gt;string('solar_system', 100);\n            $table-&gt;string('image_url', 2048)-&gt;nullable();\n\n            $table-&gt;timestamps(); // created_at + updated_at\n        });\n    }\n\n    public function down()\n    {\n        Schema::dropIfExists('planets');\n    }\n}\n</code></pre> <p>\ud575\uc2ec \uc0ac\ud56d:</p> <ul> <li><code>-&gt;unique()</code> \u2192 \uc774\ub984\uc758 \uace0\uc720\uc131 \ubcf4\uc7a5</li> <li><code>-&gt;nullable()</code> \u2192 \ud544\ub4dc\uac00 \ube44\uc5b4 \uc788\uc744 \uc218 \uc788\uc74c</li> <li><code>timestamps()</code> \u2192 \ub0a0\uc9dc \uc790\ub3d9 \uad00\ub9ac</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/2/#6","title":"6. \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc2e4\ud589 (\uc0ac\uc804)","text":"<p>2.3\uc7a5\uc5d0\uc11c \uc2e4\ud589\ud558\uaca0\uc9c0\ub9cc, \uc5b4\ub5bb\uac8c \ubcf4\uc77c\uc9c0 \ubbf8\ub9ac \uc0b4\ud3b4\ubd05\uc2dc\ub2e4: <pre><code>php artisan migrate\n</code></pre></p> <p>\uc608\uc0c1 \ucd9c\ub825: <pre><code>Migrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (32.15ms)\n</code></pre></p> <p>pgAdmin 4\uc5d0\uc11c \ud655\uc778:</p> <ol> <li><code>space_api</code> \ub370\uc774\ud130\ubca0\uc774\uc2a4 \u2192 Schemas \u2192 Tables\ub97c \uc5fd\ub2c8\ub2e4.</li> <li><code>planets</code> \ud14c\uc774\ube14\uc774 \uc5ec\ub7ec\ubd84\uc774 \uc815\uc758\ud55c \ud544\ub4dc\ub4e4\uacfc \ud568\uaed8 \ub098\ud0c0\ub098\uc57c \ud569\ub2c8\ub2e4.</li> </ol>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/2/#7","title":"7. \ub300\uccb4 \uc811\uadfc \ubc29\uc2dd: \ucf54\ub4dc \uc0dd\uc131\uae30","text":"<p>\uac1c\ubc1c \uc18d\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 \ub2e4\uc74c \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:</p> <ul> <li>Laravel Blueprint - YAML \uc124\uba85\uc744 \uae30\ubc18\uc73c\ub85c \ubaa8\ub378/\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc0dd\uc131</li> <li>InfyOm Laravel Generator - DB \uc2a4\ud0a4\ub9c8 \uae30\ubc18\uc758 \uc0dd\uc131\uae30</li> </ul> <p>Blueprint \uc608\uc2dc: <pre><code>models:\n  Planet:\n    name: string:255\n    description: text\n    size_km: integer\n    solar_system: string:100\n    image_url: string:2048? # '?' \uae30\ud638\ub294 \ud544\ub4dc\uac00 nullable\uc784\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4.\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/2/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. \ubaa8\ub378 \ubc0f \uad00\ub828 \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \uc0dd\uc131\ud558\ub294 Artisan \uba85\ub839\uc5b4:</p>  a) php artisan make:model Planet -m  b) php artisan create:model Planet  c) php artisan model:new Planet --m <p>2. \ubaa8\ub378\uc758 `$fillable` \uc18d\uc131\uc774 \ud544\uc694\ud55c \uc774\uc720:</p>  a) \ub300\ub7c9 \ud560\ub2f9\uc73c\ub85c\ubd80\ud130 \ubcf4\ud638  b) \ub370\uc774\ud130 \uc790\ub3d9 \uc554\ud638\ud654  c) \uc678\ub798 \ud0a4 \uc124\uba85 <p>3. \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc5d0\uc11c nullable()\uc740 \ub2e4\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4:</p>  a) \ud544\uc218 \ud544\ub4dc  b) \ud544\ub4dc\uac00 \ube44\uc5b4 \uc788\uc744 \uc218 \uc788\uc74c  c) \ud544\ub4dc\uac00 \uc0ad\uc81c\ub429\ub2c8\ub2e4 <p>4. \ud589\uc131\uc758 \uae34 \uc124\uba85\uc744 \uc704\ud55c \ud544\ub4dc \uc720\ud615:</p>  a) string  b) text  c) varchar <p>5. `timestamps()` \uba54\uc11c\ub4dc\ub294 \ub2e4\uc74c\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4:</p>  a) created_at\ub9cc  b) created_at \ubc0f updated_at  c) id, created_at, updated_at \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d: \ud589\uc131\uc758 \"\ub514\uc9c0\ud138 \ud2b8\uc708\"\uc744 \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4! \uc774\uc81c \ud504\ub85c\uc81d\ud2b8\uc5d0\ub294 \ub2e4\uc74c\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4:</p> <ul> <li>\ud83e\ude90 \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\uc774 \ud3ec\ud568\ub41c <code>Planet</code> \ubaa8\ub378</li> <li>\ud83d\udcca PostgreSQL \ub0b4 <code>planets</code> \ud14c\uc774\ube14\uc6a9 \ub9c8\uc774\uadf8\ub808\uc774\uc158</li> <li>\ud83d\udee0\ufe0f \uc124\uc815\ub41c \ubaa8\ub378 \uc18d\uc131(<code>fillable</code>, <code>casts</code>)</li> </ul> <p>\ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc900\ube44\ud558\uc138\uc694! \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \uc2e4\ud589\ud558\uace0 \uccab \ud589\uc131\ub4e4\ub85c \uc6b0\uc8fc\ub97c \ucc44\uc6b8 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <p><code>Planet.php</code> \ubc0f <code>..._create_planets_table.php</code> \ud30c\uc77c\uc774 \uc62c\ubc14\ub978 \ub514\ub809\ud130\ub9ac\uc5d0 \uc0dd\uc131\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</p> <p>\u26a0\ufe0f Artisan\uc5d0 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uba74:</p> <ul> <li>\ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354 \uc548\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> <li>\uc885\uc18d\uc131\uc774 \uc124\uce58\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694 (<code>composer install</code>).</li> <li>Windows\uc758 \uacbd\uc6b0: PHP\uc640 Composer\ub97c PATH\uc5d0 \ucd94\uac00\ud558\uc138\uc694.</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/3/","title":"\ucc55\ud130 2.3: \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub9c8\uc774\uadf8\ub808\uc774\uc158","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 50\ubd84</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/3/#1","title":"1. \ub9c8\uc774\uadf8\ub808\uc774\uc158: \uc6b0\uc8fc \uc815\uac70\uc7a5 \uac74\uc124","text":"<p>Laravel\uc758 \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc740 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc704\ud55c \ubc84\uc804 \uad00\ub9ac \uc2dc\uc2a4\ud15c\uc785\ub2c8\ub2e4.</p> <p>\ub2e4\uc74c\uacfc \uac19\uc774 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694:</p> <ol> <li>\ud83c\udfd7\ufe0f \uc815\uac70\uc7a5 \uc124\uacc4\ub3c4\ub97c \ub9cc\ub4ed\ub2c8\ub2e4 (<code>create_planets_table</code> \ub9c8\uc774\uadf8\ub808\uc774\uc158)</li> <li>\ud83d\ude80 \ubaa8\ub4c8\uc744 \ubc30\ud3ec\ud569\ub2c8\ub2e4 (\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc2e4\ud589)</li> <li>\ud83d\udd27 \uad6c\uc870\ub97c \ud604\ub300\ud654\ud569\ub2c8\ub2e4 (\uc0c8\ub85c\uc6b4 \ub9c8\uc774\uadf8\ub808\uc774\uc158)</li> <li>\u23ea \uc774\uc804 \ubc84\uc804\uc73c\ub85c \ub418\ub3cc\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4 (\ub864\ubc31)</li> </ol> <p>\ud83d\udca1 \uc911\uc694: \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc740 \ud300\uc774 \uc77c\uad00\ub418\uac8c \uc791\uc5c5\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4 \u2014 \ub9c8\uce58 \ub2e4\ub978 \ub300\ub959\uc5d0\uc11c ISS\ub97c \uac74\uc124\ud558\ub294 \uc5d4\uc9c0\ub2c8\uc5b4\ub4e4\ucc98\ub7fc\uc694!</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/3/#2","title":"2. \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc2e4\ud589","text":"<p>\ucc55\ud130 2.2\uc5d0\uc11c \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \uc0dd\uc131\ud55c \ud6c4 \ub2e4\uc74c\uc744 \uc2e4\ud589\ud558\uc138\uc694: <pre><code>php artisan migrate\n</code></pre></p> <p>\ud130\ubbf8\ub110 \ucd9c\ub825: <pre><code>\ub9c8\uc774\uadf8\ub808\uc774\uc158 \ud14c\uc774\ube14\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc0dd\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\n\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc911: 2014_10_12_000000_create_users_table\n\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc644\ub8cc:  2014_10_12_000000_create_users_table (25.12ms)\n\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc911: 2014_10_12_100000_create_password_reset_tokens_table\n\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc644\ub8cc:  2014_10_12_100000_create_password_reset_tokens_table (18.07ms)\n\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc911: 2019_08_19_000000_create_failed_jobs_table\n\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc644\ub8cc:  2019_08_19_000000_create_failed_jobs_table (21.33ms)\n\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc911: 2019_12_14_000001_create_personal_access_tokens_table\n\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc644\ub8cc:  2019_12_14_000001_create_personal_access_tokens_table (30.45ms)\n\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc911: 2025_08_04_000000_create_planets_table\n\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc644\ub8cc:  2025_08_04_000000_create_planets_table (15.67ms)  # \ub2f9\uc2e0\uc758 \ud14c\uc774\ube14!\n</code></pre></p> <p>pgAdmin 4\uc5d0\uc11c \ud655\uc778:</p> <ol> <li><code>space_api</code> \ub370\uc774\ud130\ubca0\uc774\uc2a4 \u2192 Schemas \u2192 Tables\ub97c \uc5fd\ub2c8\ub2e4.</li> <li>\ub2e4\uc74c\uc774 \ub098\ud0c0\ub098\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694:   - <code>planets</code>   - <code>users</code>   - <code>password_reset_tokens</code></li> </ol>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/3/#3","title":"3. \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ub864\ubc31: \ube44\uc0c1 \ubcf5\uadc0","text":"<p>\uad6c\uc870\ub97c \uc218\uc815\ud574\uc57c \ud560 \uacbd\uc6b0: <pre><code>php artisan migrate:rollback  # \ub9c8\uc9c0\ub9c9 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ud328\ud0a4\uc9c0 \ub864\ubc31\n</code></pre> <pre><code>php artisan migrate:reset    # \ubaa8\ub4e0 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc644\uc804\ud788 \ub864\ubc31\n</code></pre></p> <ul> <li><code>php artisan migrate:fresh</code> \u2014 \uac1c\ubc1c\uc5d0\uc11c \uac00\uc7a5 \uc720\uc6a9\ud55c \uba85\ub839\uc5b4\uc785\ub2c8\ub2e4! \ubaa8\ub4e0 \ud14c\uc774\ube14\uc744 \uc0ad\uc81c\ud558\uace0 \ubaa8\ub4e0 \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \ub2e4\uc2dc \uc2e4\ud589\ud569\ub2c8\ub2e4.</li> <li><code>php artisan migrate:fresh --seed</code> \u2014 <code>fresh</code>\uc640 \ub3d9\uc77c\ud558\uac8c \uc791\ub3d9\ud558\uc9c0\ub9cc, \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ud6c4 \uc989\uc2dc \uc2dc\ub354\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc644\uc804\ud788 \"\ucd08\uae30\ud654\"\ud558\ub294 \uba85\ub839\uc5b4\uc785\ub2c8\ub2e4.</li> </ul> <p>\uc0ac\uc6a9 \uc2dc\ub098\ub9ac\uc624: <pre><code># 1\ub2e8\uacc4: \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc5d0 \uc624\ub958\uac00 \uc788\uc74c\uc744 \uae68\ub2ec\uc558\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc644\uc804\ud788 \ub2e4\uc2dc \ub9cc\ub4ed\ub2c8\ub2e4.\nphp artisan migrate:fresh\n# 2\ub2e8\uacc4: \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \ud3b8\uc9d1\ud569\ub2c8\ub2e4.\n# 3\ub2e8\uacc4: \uc774\ubbf8 \uc218\uc815\ub41c \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc73c\ub85c \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \ub2e4\uc2dc \ub9cc\ub4ed\ub2c8\ub2e4.\nphp artisan migrate:fresh\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/3/#4","title":"4. \uc0c8 \ud544\ub4dc \ucd94\uac00: \uc815\uac70\uc7a5 \ud604\ub300\ud654","text":"<p>\uc608\uc2dc: <code>is_habitable</code> \ud544\ub4dc(\ud589\uc131\uc774 \uac70\uc8fc \uac00\ub2a5\ud55c\uc9c0 \uc5ec\ubd80)\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4.</p> <p>1\ub2e8\uacc4: \uc0c8 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc0dd\uc131 <pre><code>php artisan make:migration add_is_habitable_to_planets_table\n</code></pre></p> <p>2\ub2e8\uacc4: \ud30c\uc77c \ud3b8\uc9d1 <code>database/migrations/..._add_is_habitable_to_planets_table.php</code> <pre><code>&lt;?php\npublic function up()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;boolean('is_habitable')\n              -&gt;default(false);\n    });\n}\n\npublic function down()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;dropColumn('is_habitable');\n    });\n}\n</code></pre></p> <p>3\ub2e8\uacc4: \uc5c5\ub370\uc774\ud2b8 \uc2e4\ud589 <pre><code>php artisan migrate\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/3/#5","title":"5. \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ucc44\uc6b0\uae30: \uccab \ubc88\uc9f8 \ud589\uc131\ub4e4","text":"<p>\uc2dc\ub354(Seeder)\ub97c \ub9cc\ub4ed\ub2c8\ub2e4 \u2014 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud55c \uc2a4\ud06c\ub9bd\ud2b8\uc785\ub2c8\ub2e4.</p> <p>1\ub2e8\uacc4: \uc2dc\ub354 \uc0dd\uc131 <pre><code>php artisan make:seeder PlanetSeeder\n</code></pre></p> <p>2\ub2e8\uacc4: \ud3b8\uc9d1 <code>database/seeders/PlanetSeeder.php</code> <pre><code>&lt;?php\nuse App\\Models\\Planet; // \ud589\uc131 \ubaa8\ub378\uc744 \uc784\ud3ec\ud2b8\ud569\ub2c8\ub2e4 - \uc5c6\uc73c\uba74 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4!\n\n\nclass PlanetSeeder extends Seeder\n{\n    public function run()\n    {\n        Planet::create([\n            'name' =&gt; '\uc9c0\uad6c',\n            'description' =&gt; '\ub2e4\uc591\ud55c \uc0dd\uba85\uccb4\uac00 \uc788\ub294 \ud478\ub978 \ud589\uc131',\n            'size_km' =&gt; 12742,\n            'solar_system' =&gt; '\ud0dc\uc591\uacc4',\n            'image_url' =&gt; 'https://example.com/earth.jpg',\n            'is_habitable' =&gt; true\n        ]);\n\n        Planet::create([\n            'name' =&gt; '\ud654\uc131',\n            'description' =&gt; '\ubbf8\ub798 \uc2dd\ubbfc\uc9c0\ud654\uc758 \ubaa9\ud45c\uc778 \ubd89\uc740 \ud589\uc131',\n            'size_km' =&gt; 6779,\n            'solar_system' =&gt; '\ud0dc\uc591\uacc4',\n            'is_habitable' =&gt; false\n        ]);\n    }\n}\n</code></pre></p> <p>3\ub2e8\uacc4: \uc2dc\ub354\ub97c \ub4f1\ub85d\ud569\ub2c8\ub2e4 <code>database/seeders/DatabaseSeeder.php</code>\uc5d0 <pre><code>&lt;?php\npublic function run()\n{\n    $this-&gt;call([\n        PlanetSeeder::class\n    ]);\n}\n</code></pre></p> <p>4\ub2e8\uacc4: \ucc44\uc6b0\uae30 \uc2e4\ud589 <pre><code>php artisan db:seed\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/3/#6-postgresql","title":"6. PostgreSQL \uc791\uc5c5: \ud2b9\uc9d5","text":"<p>\ub370\uc774\ud130 \uc720\ud615 \ud2b9\uc9d5:</p> \uae30\ub2a5 PostgreSQL MySQL Laravel \uc8fc\uc11d \ub17c\ub9ac \ud0c0\uc785 <code>boolean</code> (\uc2e4\uc81c <code>true</code>/<code>false</code>) <code>tinyint(1)</code> (<code>0</code>/<code>1</code> \uc800\uc7a5) <code>$table-&gt;boolean('...')</code> \ub458 \ub2e4 \uc791\ub3d9 JSON <code>jsonb</code> (\ubc14\uc774\ub108\ub9ac, \uc778\ub371\uc2f1 \uac00\ub2a5) <code>json</code> (\ud14d\uc2a4\ud2b8) <code>$table-&gt;jsonb('...')</code> - PG\uc5d0\uc11c \ub9e4\uc6b0 \uac15\ub825\ud568 \ubc30\uc5f4 <code>text[]</code>, <code>integer[]</code> (\ub124\uc774\ud2f0\ube0c \ubc30\uc5f4) \uc5c6\uc74c (JSON \ub610\ub294 \ubb38\uc790\uc5f4\ub85c \uc5d0\ubbac\ub808\uc774\uc158\ub428) <code>$table-&gt;array('...')</code> (PG \uc804\uc6a9) \uceec\ub7fc \uc21c\uc11c \uc81c\uc5b4\ud560 \uc218 \uc5c6\uc74c (<code>after()</code> \uc791\ub3d9 \uc548\ud568) \uc81c\uc5b4\ud560 \uc218 \uc788\uc74c (<code>after()</code>) Laravel\uc774 \uc774\ub97c \ucd94\uc0c1\ud654\ud558\uc9c0\ub9cc, \uc81c\uc57d\uc744 \uc54c\uc544\uc57c \ud569\ub2c8\ub2e4. <p>\uc778\ub371\uc2a4 \uc0dd\uc131 \uc608\uc2dc: <pre><code>// \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc5d0\uc11c\n$table-&gt;index('solar_system');\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/3/#7-psql","title":"7. psql\uc5d0\uc11c \ub370\uc774\ud130 \ud655\uc778","text":"<p>\uc544\ubb34 \uadf8\ub798\ud53d \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc0ac\uc6a9\ud558\uace0 \uac70\uae30\uc11c space_api\ub97c \uc120\ud0dd\ud558\uc5ec \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ucf58\uc194 \uc0ac\uc6a9 \uc2dc: <pre><code>psql -U postgres -d space_api\n# \ud130\ubbf8\ub110\uc774 PostgreSQL \uc124\uce58 \uc2dc \uc124\uc815\ud55c \ube44\ubc00\ubc88\ud638\ub97c \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n</code></pre> <pre><code>SELECT * FROM planets;\n</code></pre></p> <p>\uc5b4\ub5a4 \uacbd\uc6b0\ub4e0 \ucd9c\ub825\uc740 \ub2e4\uc74c\uacfc \uac19\uc544\uc57c \ud569\ub2c8\ub2e4:</p> id name description size_km solar_system image_url is_habitable 1 \uc9c0\uad6c \ub2e4\uc591\ud55c \uc0dd\uba85\uccb4\uac00 \uc788\ub294 \ud478\ub978 \ud589\uc131 12742 \ud0dc\uc591\uacc4 ... true 2 \ud654\uc131 \ubbf8\ub798 \uc2dd\ubbfc\uc9c0\ud654\uc758 \ubaa9\ud45c\uc778 \ubd89\uc740 \ud589\uc131 6779 \ud0dc\uc591\uacc4 null false"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/3/#_1","title":"\ud655\uc778\uc744 \uc704\ud55c \ud034\uc988","text":"<p>1. \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc2e4\ud589 \uba85\ub839\uc5b4:</p>  a) php artisan migrate:run  b) php artisan migrate  c) php artisan db:migrate <p>2. \ub9c8\uc9c0\ub9c9 \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \ub864\ubc31\ud558\ub824\uba74?</p>  a) migrate:undo  b) migrate:rollback  c) migrate:reset <p>3. \uc2dc\ub354\ub294 \ubb34\uc5c7\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\uae4c?</p>  a) \ud14c\uc774\ube14 \uc0ad\uc81c  b) DB\uc5d0 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ucc44\uc6b0\uae30  c) \ubaa8\ub378 \uc0dd\uc131 <p>4. \uae30\uc874 \ud14c\uc774\ube14\uc5d0 \uceec\ub7fc\uc744 \ucd94\uac00\ud558\ub294 \uba54\uc11c\ub4dc\ub294?</p>  a) Schema::addColumn()  b) Schema::table()  c) Schema::modify() <p>5. \uc2dc\ub354\ub294 \uc5b4\ub514\uc5d0 \ub4f1\ub85d\ub429\ub2c8\uae4c?</p>  a) DatabaseSeeder.php  b) .env  c) config/database.php \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\ub2e4\uc74c\uacfc \uac19\uc774 \"\uc6b0\uc8fc \uc778\ud504\ub77c \uad6c\ucd95\"\uc744 \ub9c8\uc2a4\ud130\ud588\uc2b5\ub2c8\ub2e4:</p> <ul> <li>\u2705 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc0dd\uc131 \ubc0f \uc2e4\ud589</li> <li>\ud83d\udd27 \ud14c\uc774\ube14 \uad6c\uc870 \ud604\ub300\ud654</li> <li>\ud83c\udf0d \uccab \ubc88\uc9f8 \ud589\uc131\uc73c\ub85c DB \ucc44\uc6b0\uae30</li> <li>\u2699\ufe0f PostgreSQL \uc791\uc5c5 \ubc29\ubc95 \ud559\uc2b5</li> </ul> <p>\ub2f9\uc2e0\uc758 \uc6b0\uc8fc\uac00 \uccab \ubc88\uc9f8 \uc138\uacc4\ub97c \uc5bb\uc5c8\uc2b5\ub2c8\ub2e4! \uc774\uc81c \ud589\uc131 \uad00\ub9ac\ub97c \uc704\ud55c API \uc778\ud130\ud398\uc774\uc2a4 \uc0dd\uc131\uc744 \uc9c4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ol> <li><code>php artisan tinker</code> \uc2e4\ud589</li> <li><code>App\\Models\\Planet::all()</code> \uc2e4\ud589</li> <li>\uc9c0\uad6c\uc640 \ud654\uc131\uc774 \ubcf4\uc774\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> </ol>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/4/","title":"2.4\uc7a5: PlanetController API \ucee8\ud2b8\ub864\ub7ec","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 1\uc2dc\uac04</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/4/#1","title":"1. \ucee8\ud2b8\ub864\ub7ec: \uc6b0\uc8fc \uac1d\uccb4 \uad00\ub9ac \uc13c\ud130","text":"<p>MVC \uc544\ud0a4\ud14d\ucc98\uc5d0\uc11c \ucee8\ud2b8\ub864\ub7ec\ub294 \ubaa8\ub378\uacfc \uc694\uccad \uc0ac\uc774\uc758 \uc911\uac1c\uc790\uc785\ub2c8\ub2e4:</p> <ul> <li>\ud83d\udce1 HTTP \uc694\uccad(GET, POST, PUT, DELETE) \uc218\uc2e0</li> <li>\ud83d\udd0d \ubaa8\ub378\uc744 \ud1b5\ud574 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ub370\uc774\ud130 \ucd94\ucd9c</li> <li>\ud83d\udce6 API\ub97c \uc704\ud55c JSON \uc751\ub2f5 \uc0dd\uc131</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720: <code>PlanetController</code> = \ubbf8\uc158 \ud1b5\uc81c \uc13c\ud130(MCC):</p> <ul> <li>\uc9c0\uad6c\ub85c\ubd80\ud130 \uc694\uccad \uc218\uc2e0 (<code>GET /planets</code>)</li> <li>\"\ud0d0\uc0ac\uc120\"(\ubaa8\ub378)\uc5d0 \uba85\ub839 \uc804\ub2ec</li> <li>JSON \ud615\uc2dd\uc73c\ub85c \uc6d0\uaca9 \uce21\uc815 \ub370\uc774\ud130 \ubc18\ud658</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/4/#2","title":"2. \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec \uc0dd\uc131","text":"<p>\ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec\ub294 CRUD \uc791\uc5c5\uc744 \uc704\ud55c \uba54\uc11c\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ud3ec\ud568\ud569\ub2c8\ub2e4.</p> <p>1\ub2e8\uacc4: \ucee8\ud2b8\ub864\ub7ec \uc0dd\uc131 <pre><code>php artisan make:controller PlanetController --api --model=Planet\n</code></pre></p> <p><code>app/Http/Controllers/PlanetController.php</code>\uc5d0 \uc0dd\uc131\ub420 \ub0b4\uc6a9: <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Planet;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Validation\\Rule; // \uc774 \uc784\ud3ec\ud2b8\ub97c \ucd94\uac00\ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694.\n\nclass PlanetController extends Controller\n{\n    // \ud589\uc131 \ubaa9\ub85d \ud45c\uc2dc\n    public function index(Request $request) {}\n\n    // \uc0c8\ub85c\uc6b4 \ud589\uc131 \uc0dd\uc131\n    public function store(Request $request) {}\n\n    // \ud2b9\uc815 \ud589\uc131 \ud45c\uc2dc\n    public function show(Planet $planet) {}\n\n    // \ud589\uc131 \uc5c5\ub370\uc774\ud2b8\n    public function update(Request $request, Planet $planet) {}\n\n    // \ud589\uc131 \uc0ad\uc81c\n    public function destroy(Planet $planet) {}\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/4/#3-api","title":"3. API \uba54\uc11c\ub4dc \uad6c\ud604","text":"<p>A. <code>index()</code> - \ud589\uc131 \ubaa9\ub85d \uac00\uc838\uc624\uae30 <pre><code>&lt;?php\npublic function index(Request $request)\n{\n    // \ud398\uc774\uc9c0\ub2f9 15\uac1c\uc529, \ud398\uc774\uc9c0\ub124\uc774\uc158\ub41c \ud589\uc131 \uac00\uc838\uc624\uae30\n    $planets = Planet::paginate($request-&gt;get('per_page', 15));\n    return response()-&gt;json($planets); // \uc790\ub3d9 200 OK\n}\n</code></pre></p> <p>B. <code>store()</code> - \uc0c8\ub85c\uc6b4 \ud589\uc131 \uc0dd\uc131 <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    $planet = Planet::create($data);\n    return response()-&gt;json($planet, 201); // 201 Created\n}\n</code></pre></p> <p>C. <code>show()</code> - \ub2e8\uc77c \ud589\uc131 \ubcf4\uae30 <pre><code>&lt;?php\npublic function show(Planet $planet)\n{\n    return response()-&gt;json($planet); // \uc790\ub3d9 200 OK\n}\n</code></pre></p> <p>D. <code>update()</code> - \ud589\uc131 \uc5c5\ub370\uc774\ud2b8 <pre><code>&lt;?php\npublic function update(Request $request, Planet $planet)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; [\n            'string',\n            'max:255',\n            Rule::unique('planets')-&gt;ignore($planet-&gt;id),\n        ],\n        'description' =&gt; 'sometimes|string', // 'sometimes' - \ud544\ub4dc\uac00 \uc804\uc1a1\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc720\ud6a8\uc131 \uac80\uc0ac\n        'size_km' =&gt; 'sometimes|integer|min:100',\n        'solar_system' =&gt; 'sometimes|string|max:100',\n        'image_url' =&gt; 'sometimes|nullable|url',\n        'is_habitable' =&gt; 'sometimes|boolean'\n    ]);\n\n    $planet-&gt;update($data);\n    return response()-&gt;json($planet); // 200 OK\n}\n</code></pre></p> <p>E. <code>destroy()</code> - \ud589\uc131 \uc0ad\uc81c <pre><code>&lt;?php\npublic function destroy(Planet $planet)\n{\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204); // 204 No Content\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/4/#4-route-model-binding","title":"4. \ub77c\uc6b0\ud2b8 \ubaa8\ub378 \ubc14\uc778\ub529 (Route Model Binding)","text":"<p>Laravel\uc740 ID\uc5d0 \ub530\ub77c \ud589\uc131 \uac1d\uccb4\ub97c \uc790\ub3d9\uc73c\ub85c \uc0bd\uc785\ud569\ub2c8\ub2e4: <pre><code>// \ub77c\uc6b0\ud2b8: GET /planets/{planet}\n// \uba54\uc11c\ub4dc: show(Planet $planet)\n</code></pre></p> <ul> <li>\ud589\uc131\uc744 \ucc3e\uc744 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \u2192 \uc790\ub3d9 404</li> <li><code>findOrFail()</code>\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc218\ub3d9\uc73c\ub85c \ucffc\ub9ac\ud560 \ud544\uc694 \uc5c6\uc74c</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/4/#5","title":"5. \uc751\ub2f5 \ud615\uc2dd \uc9c0\uc815","text":"<p><code>index()</code>\uc5d0 \ub300\ud55c \uac1c\uc120\ub41c \uc751\ub2f5 \uc608\uc2dc: <pre><code>&lt;?php\npublic function index()\n{\n    return response()-&gt;json([\n        'success' =&gt; true,\n        'data' =&gt; Planet::all(),\n        'message' =&gt; '\ud589\uc131\uc744 \uc131\uacf5\uc801\uc73c\ub85c \uac00\uc838\uc654\uc2b5\ub2c8\ub2e4'\n    ]);\n}\n</code></pre></p> <p>404 \uc624\ub958 \uc2dc \uc751\ub2f5 (\uc790\ub3d9): <pre><code>{\n    \"message\": \"No query results for model [App\\\\Models\\\\Planet] 123\",\n    \"exception\": \"Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\NotFoundHttpException\"\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/4/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. API \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0dd\uc131\ud558\ub294 \ud50c\ub798\uadf8:</p>  a) --api  b) --resource  c) --model <p>2. \uc131\uacf5\uc801\uc778 \uc0dd\uc131 \uc2dc \uc5b4\ub5a4 \uc0c1\ud0dc\ub97c \ubc18\ud658\ud574\uc57c \ud569\ub2c8\uae4c?</p>  a) 200 OK  b) 201 Created  c) 204 No Content <p>3. \ub77c\uc6b0\ud2b8 \ubaa8\ub378 \ubc14\uc778\ub529\uc740 \ub2e4\uc74c\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4:</p>  a) ID\ub85c \uac1d\uccb4\ub97c \uc790\ub3d9\uc73c\ub85c \uac00\uc838\uc635\ub2c8\ub2e4  b) HTML \ud3fc\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4  c) \uc694\uccad\uc744 \uce90\uc2dc\ud569\ub2c8\ub2e4 <p>4. \ud589\uc131 \uc0ad\uc81c \uc2dc \ubc18\ud658\ud558\ub294 \uac83\uc740:</p>  a) \ud589\uc131 \ub370\uc774\ud130\uac00 \ud3ec\ud568\ub41c JSON  b) 204 \ucf54\ub4dc\uc640 \ud568\uaed8 null  c) \ube48 \ubb38\uc790\uc5f4 <p>5. `$request-&gt;validate()`\ub294 \ub2e4\uc74c \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4:</p>  a) \uc785\ub825 \ub370\uc774\ud130 \uc720\ud6a8\uc131 \uac80\uc0ac  b) \uc694\uccad \uc554\ud638\ud654  c) \uc751\ub2f5 \uce90\uc2f1 \ud655\uc778 <p>\ud83d\ude80 \uc774 \uc7a5\uc758 \uc694\uc57d:</p> <p>\uc774\uc81c \ud589\uc131 \uc2dc\uc2a4\ud15c\uc758 \"\uc81c\uc5b4\ud310\"\uc744 \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4! \uc774\uc81c \ucee8\ud2b8\ub864\ub7ec\ub294 \ub2e4\uc74c\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:</p> <ul> <li>\ud83c\udf0c \ud589\uc131 \ubaa9\ub85d \ud45c\uc2dc (<code>index</code>)</li> <li>\ud83e\ude90 \uc0c8\ub85c\uc6b4 \ud589\uc131 \uc0dd\uc131 (<code>store</code>)</li> <li>\ud83d\udd2d \ud589\uc131 \ub370\uc774\ud130 \uc0c1\uc138 \ud45c\uc2dc (<code>show</code>)</li> <li>\ud83d\udee0\ufe0f \uc815\ubcf4 \uc5c5\ub370\uc774\ud2b8 (<code>update</code>)</li> <li>\ud83d\udca5 \ud589\uc131 \uc0ad\uc81c (<code>destroy</code>)</li> </ul> <p>\uc774\uc81c \uacbd\ub85c\ub97c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4! \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \ucee8\ud2b8\ub864\ub7ec\ub97c API \uacbd\ub85c\uc5d0 \uc5f0\uacb0\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <p><code>app/Http/Controllers</code>\uc5d0 5\uac1c\uc758 \uba54\uc11c\ub4dc\uac00 \uc788\ub294 <code>PlanetController.php</code>\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</p> <p>\u26a0\ufe0f \uc624\ub958 \ubc1c\uc0dd \uc2dc:</p> <ul> <li>\ubaa8\ub378 \uc774\ub984 \ud655\uc778: <code>use App\\Models\\Planet;</code></li> <li>\uc784\ud3ec\ud2b8 \ud655\uc778</li> <li>PostgreSQL\uc758 \uacbd\uc6b0: <code>Planet::all()</code>\uc774 \ub370\uc774\ud130\ub97c \ubc18\ud658\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> <li>Tinker \ubb38\uc81c \ubc1c\uc0dd \uc2dc: <code>composer dump-autoload</code>\ub97c \uc2e4\ud589\ud558\uc138\uc694.</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/5/","title":"2.5\uc7a5: API \ub77c\uc6b0\ud2b8","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 45\ubd84</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/5/#1-route","title":"1. \ub77c\uc6b0\ud2b8(Route)\ub780 \ubb34\uc5c7\uc778\uac00\uc694? \uc27d\uac8c \uc124\uba85\ud558\uae30","text":"<p>\ucee8\ud2b8\ub864\ub7ec(<code>PlanetController</code>)\ub97c \ud070 \uc624\ud53c\uc2a4 \uc13c\ud130\ub77c\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. \uac01 \uba54\uc18c\ub4dc(<code>index</code>, <code>store</code>, <code>show</code>)\ub294 \uc790\uc2e0\uc758 \uc5c5\ubb34\ub97c \uc218\ud589\ud558\ub294 \ubd80\uc11c\uc785\ub2c8\ub2e4.</p> <p>\ub77c\uc6b0\ud2b8(Route)\ub294 \uac74\ubb3c \uc785\uad6c\uc5d0 \ubd99\uc5b4 \uc788\ub294 \uc8fc\uc18c\ud310\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \ub9d0\ud569\ub2c8\ub2e4:</p> <ul> <li>\"\ub204\uad70\uac00 <code>/planets</code> \uc8fc\uc18c\ub85c GET \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 \uc654\ub2e4\uba74 \u2014 <code>index</code> \ubd80\uc11c(\ubaa8\ub450 \ubcf4\uc5ec\uc8fc\uae30)\ub85c \ubcf4\ub0b4\uc138\uc694.\"</li> <li>\"\ub204\uad70\uac00 <code>/planets</code> \uc8fc\uc18c\ub85c POST \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 (\ub370\uc774\ud130\uc640 \ud568\uaed8) \uc654\ub2e4\uba74 \u2014 <code>store</code> \ubd80\uc11c(\uc0c8\ub85c\uc6b4 \uac83 \uc0dd\uc131)\ub85c \ubcf4\ub0b4\uc138\uc694.\"</li> </ul> <p>\ub77c\uc6b0\ud2b8 \uc5c6\uc774\ub294 \uc678\ubd80\uc758 \uc5b4\ub5a4 \uc694\uccad\ub3c4 \ucf54\ub4dc \ub0b4\uc5d0\uc11c \ud544\uc694\ud55c \ubd80\uc11c\ub97c \ucc3e\uc9c0 \ubabb\ud560 \uac83\uc785\ub2c8\ub2e4. API\uc5d0\uc11c \uc774\ub7ec\ud55c \"\uc8fc\uc18c\ud310\"\uc758 \uc8fc\uc694 \ud30c\uc77c\uc740 <code>routes/api.php</code>\uc785\ub2c8\ub2e4.</p> <p>Laravel 11+\uc5d0\uc11c\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \"API \uc8fc\uc18c\ub85d\"\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 <code>php artisan install:api</code> \uba85\ub839\uc744 \uc2e4\ud589\ud558\uc5ec \uc9c1\uc811 \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\uc81c <code>routes/api.php</code> \ud30c\uc77c\uc774 \uc0dd\uacbc\uace0, \uc774\uac83\uc740 \uc6b0\ub9ac API\uc758 \ubaa8\ub4e0 \ub77c\uc6b0\ud2b8\ub97c \uad00\ub9ac\ud558\ub294 \uc8fc\uc694 \uc81c\uc5b4 \uc13c\ud130\uc785\ub2c8\ub2e4.</p> <p>api.php\uc640 web.php\uc758 \uc8fc\uc694 \ucc28\uc774\uc810:</p> <ul> <li><code>/api</code> \uc811\ub450\uc0ac: Laravel\uc740 \uc774 \ud30c\uc77c\uc758 \ubaa8\ub4e0 URL \uc8fc\uc18c\uc5d0 \uc790\ub3d9\uc73c\ub85c /api\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. <code>/planets</code> \ub77c\uc6b0\ud2b8\ub294 <code>/api/planets</code>\ub85c \ubc14\ub01d\ub2c8\ub2e4.</li> <li>\"\ubb34\uc0c1\ud0dc(Stateless)\": \uc77c\ubc18\uc801\uc778 \uc6f9\ucc98\ub7fc \uc138\uc158\uacfc \ucfe0\ud0a4 \ud30c\uc77c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \uac01 \uc694\uccad\uc740 \ub3c5\ub9bd\uc801\uc774\uba70 \uc778\uc99d\uc5d0 \ud544\uc694\ud55c \ubaa8\ub4e0 \uc815\ubcf4(\uc77c\ubc18\uc801\uc73c\ub85c \ud5e4\ub354\uc758 API \ud1a0\ud070)\ub97c \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/5/#2","title":"2. \ucd08\ubcf4\uc790\uc758 \uae38: \ub77c\uc6b0\ud2b8 \uc218\ub3d9 \uc0dd\uc131","text":"<p>\uc6d0\ub9ac\ub97c \uc774\ud574\ud558\uae30 \uc704\ud574 \uc9c1\uc811 \ub2e8 \ud558\ub098\uc758 \ub77c\uc6b0\ud2b8\ub97c \ub9cc\ub4e4\uc5b4 \ubd05\uc2dc\ub2e4. \uc6b0\ub9ac\uc758 \ubaa9\ud45c\ub294 <code>/api/planets</code> URL\uc774 \ubaa8\ub4e0 \ud589\uc131 \ubaa9\ub85d\uc744 \ud45c\uc2dc\ud558\ub3c4\ub85d \ud558\ub294 \uac83\uc785\ub2c8\ub2e4.</p> <p><code>routes/api.php</code>\ub97c \uc5f4\uace0 \ub2e4\uc74c\uc744 \uc791\uc131\ud558\uc138\uc694:</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController; // \ucee8\ud2b8\ub864\ub7ec\uc758 \uc704\uce58\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4.\n\n//                    (1)           (2)                     (3)\nRoute::get(      '/planets',    [PlanetController::class, 'index']     );\n//   ^               ^                       ^\n// (HTTP \uba54\uc18c\ub4dc)   (URL \uc8fc\uc18c)          (\ud638\ucd9c\ud560 \ucee8\ud2b8\ub864\ub7ec \ubc0f \uba54\uc18c\ub4dc)\n</code></pre> <p>\uc774 \uc904\uc744 \ubd80\ubd84\ubcc4\ub85c \ubd84\uc11d\ud574 \ubd05\uc2dc\ub2e4:</p> <ol> <li><code>Route::get(...)</code> \u2014 \uc6b0\ub9ac\ub294 \"\uc774 \ub77c\uc6b0\ud2b8\ub294 GET \uc694\uccad\uc5d0\ub9cc \uc791\ub3d9\ud569\ub2c8\ub2e4\"\ub77c\uace0 \ub9d0\ud569\ub2c8\ub2e4.</li> <li><code>'/planets'</code> \u2014 \uc774\uac83\uc740 Laravel\uc774 \uc218\uc2e0\ud560 URL\uc785\ub2c8\ub2e4. <code>/api</code> \uc811\ub450\uc0ac\ub97c \uace0\ub824\ud558\uba74 \uc804\uccb4 \uc8fc\uc18c\ub294 <code>http://space-api.test/api/planets</code>\uac00 \ub429\ub2c8\ub2e4.</li> <li><code>[PlanetController::class, 'index']</code> \u2014 \uc774\uac83\uc740 \"\ubaa9\uc801\uc9c0\"\uc785\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \"\uc694\uccad\uc774 \uc624\uba74 <code>PlanetController</code> \ud074\ub798\uc2a4\ub97c \ucc3e\uc544 \uadf8 \uc548\uc5d0 \uc788\ub294 <code>index()</code> \uba54\uc18c\ub4dc\ub97c \ud638\ucd9c\ud558\uc138\uc694\"\ub77c\uace0 \ub9d0\ud569\ub2c8\ub2e4.</li> </ol> <p>\uc774\uc81c \ubaa8\ub4e0 \uac83\uc774 \uc5f0\uacb0\ub429\ub2c8\ub2e4! \uc694\uccad -&gt; \ub77c\uc6b0\ud2b8 -&gt; \ucee8\ud2b8\ub864\ub7ec -&gt; \uba54\uc18c\ub4dc.</p> <p>\uadf8\ub7fc \ub9cc\uc57d ID\ub85c \ud558\ub098\uc758 \ud589\uc131\uc744 \uac00\uc838\uc640\uc57c \ud55c\ub2e4\uba74 \uc5b4\ub5a8\uae4c\uc694? \uc608\ub97c \ub4e4\uc5b4, <code>/api/planets/5</code>\uc640 \uac19\uc774\uc694.</p> <pre><code>// \ud2b9\uc815 \ud589\uc131\uc744 \uac00\uc838\uc624\ub294 \ub77c\uc6b0\ud2b8\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n</code></pre> <p>\uc5ec\uae30\uc11c <code>{planet}</code>\uc740 \"\ud15c\ud50c\ub9bf\" \ub610\ub294 \ubcc0\uc218\uc785\ub2c8\ub2e4. Laravel\uc740 \uc774 \uc704\uce58\uc5d0 \ubb34\uc5c7\uc774\ub4e0 \uc62c \uc218 \uc788\ub2e4\ub294 \uac83\uc744 \uc774\ud574\ud569\ub2c8\ub2e4 (ID, \uc2ac\ub7ec\uadf8). \uadf8\ub7f0 \ub2e4\uc74c \uc774 \uac12\uc744 <code>show(Planet $planet)</code> \uba54\uc18c\ub4dc\ub85c \uc804\ub2ec\ud569\ub2c8\ub2e4. Laravel\uc774 ID\ub97c \ud1b5\ud574 \ud589\uc131\uc744 \uc2a4\uc2a4\ub85c \ucc3e\ub294 \uc774\ub7ec\ud55c \"\ub9c8\ubc95\"\uc744 \ub77c\uc6b0\ud2b8 \ubaa8\ub378 \ubc14\uc778\ub529(Route Model Binding)\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/5/#3-apiresource","title":"3. \ub9c8\uc2a4\ud130\uc758 \uae38: <code>apiResource</code> \u2014 \ubaa8\ub4e0 \uac83\uc744 \uc9c0\ubc30\ud558\ub294 \ud55c \uc904","text":"<p>\uac01 \ub77c\uc6b0\ud2b8\ub97c \uc218\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\ub294 \uac83(<code>index</code>, <code>show</code>, <code>store</code>, <code>update</code>, <code>destroy</code>\uc5d0 \ub300\ud574)\uc740 \uc9c0\ub8e8\ud55c \uc77c\uc785\ub2c8\ub2e4. Laravel \uac1c\ubc1c\uc790\ub4e4\uc740 \uc774 \uc810\uc744 \uc774\ud574\ud558\uace0 \uac15\ub825\ud55c \ub3c4\uc6b0\ubbf8\uc778 <code>apiResource</code>\ub97c \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4.</p> <p>\uc6b0\ub9ac\uac00 \uc791\uc131\ud588\ub358 \ubaa8\ub4e0 \uac83\uc744 \uc9c0\uc6b0\uace0 \ud55c \uc904\ub85c \ub300\uccb4\ud558\uc138\uc694:</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController;\n\nRoute::apiResource('planets', PlanetController::class);\n</code></pre> <p>\uc774 \ud55c \uc904\uc740 \ub0b4\ubd80\uc801\uc73c\ub85c \ubb34\uc5c7\uc744 \ud560\uae4c\uc694? \uc774 \ud55c \uc904\uc740 \uc6b0\ub9ac\uac00 \ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c \uc774\ubbf8 \uad6c\ud604\ud55c \ud45c\uc900 CRUD \uc791\uc5c5\uc744 \uc704\ud55c \uc804\uccb4 \ub77c\uc6b0\ud2b8 \uc138\ud2b8\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4.</p> \uba54\uc18c\ub4dc URL \uc5f0\uacb0\ub418\ub294 \uba54\uc18c\ub4dc \ubaa9\uc801 GET <code>/api/planets</code> <code>index()</code> \ubaa8\ub4e0 \ud589\uc131 \ubaa9\ub85d \uac00\uc838\uc624\uae30 POST <code>/api/planets</code> <code>store()</code> \uc0c8 \ud589\uc131 \uc0dd\uc131 GET <code>/api/planets/{planet}</code> <code>show()</code> \ud2b9\uc815 \ud589\uc131 \ud558\ub098 \ubcf4\uc5ec\uc8fc\uae30 PUT/PATCH <code>/api/planets/{planet}</code> <code>update()</code> \uae30\uc874 \ud589\uc131 \uc5c5\ub370\uc774\ud2b8 DELETE <code>/api/planets/{planet}</code> <code>destroy()</code> \ud589\uc131 \uc0ad\uc81c <p>\uc9c1\uc811 \ud655\uc778\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud130\ubbf8\ub110\uc5d0\uc11c \ub2e4\uc74c \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uc138\uc694:</p> <pre><code>php artisan route:list --path=api\n</code></pre> <p>\uc0dd\uc131\ub41c \ubaa8\ub4e0 \ub77c\uc6b0\ud2b8\uac00 \ud3ec\ud568\ub41c \ud14c\uc774\ube14\uc744 \ubcf4\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4. <code>apiResource</code>\ub294 \ud45c\uc900 API\ub97c \uc0dd\uc131\ud560 \ub54c \uc2dc\uac04\uc744 \uc808\uc57d\ud574 \uc8fc\ub294 \uac00\uc7a5 \uc88b\uc740 \uce5c\uad6c\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/5/#4","title":"4. \ud2b9\ubcc4 \ubbf8\uc158 \ubc0f \ub77c\uc6b0\ud2b8 \uc21c\uc11c","text":"<p>\ub9cc\uc57d <code>apiResource</code>\uc5d0 \uc5c6\ub294 \ube44\ud45c\uc900 \ub77c\uc6b0\ud2b8\uac00 \ud544\uc694\ud558\ub2e4\uba74 \uc5b4\ub5a8\uae4c\uc694? \uc608\ub97c \ub4e4\uc5b4, <code>/api/planets/random</code> \uc8fc\uc18c\ub85c \ubb34\uc791\uc704 \ud589\uc131\uc744 \uac00\uc838\uc624\ub294 \uacbd\uc6b0\uc694.</p> <p>\ucd94\uac00\ud574 \ubd05\uc2dc\ub2e4. \ud558\uc9c0\ub9cc \uc5ec\uae30\uc5d0\ub294 \ucd08\ubcf4\uc790 10\uba85 \uc911 9\uba85\uc774 \ube60\uc9c0\ub294 \uce58\uba85\uc801\uc778 \ud568\uc815\uc774 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\uc798\ubabb\ub41c \uc21c\uc11c (\uc791\ub3d9 \uc548\ud568!): <pre><code>Route::apiResource('planets', PlanetController::class);\nRoute::get('/planets/random', [PlanetController::class, 'random']); // &lt;-- \uc791\ub3d9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n</code></pre> \uc65c\uc694? Laravel\uc740 \ub77c\uc6b0\ud2b8\ub97c \uc704\uc5d0\uc11c \uc544\ub798\ub85c \uc77d\uc2b5\ub2c8\ub2e4. <code>GET /planets/{planet}</code> \ub77c\uc6b0\ud2b8\ub97c \uc0dd\uc131\ud55c <code>Route::apiResource</code>\ub97c \uba3c\uc800 \ubcf4\uac8c \ub429\ub2c8\ub2e4. <code>/planets/random</code>\uc744 \uc694\uccad\ud558\uba74 Laravel\uc740 \"random\"\uc744 \ud589\uc131 ID\ub77c\uace0 \uc0dd\uac01\ud558\uc5ec \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c ID\uac00 \"random\"\uc778 \ud589\uc131\uc744 \ucc3e\uc73c\ub824\uace0 \uc2dc\ub3c4\ud560 \uac83\uc774\uace0, \uadf8\ub7ec\uba74 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\uc62c\ubc14\ub978 \uc21c\uc11c (\uc791\ub3d9\ud568!): <pre><code>&lt;?php\nuse App\\Http\\Controllers\\PlanetController;\nuse Illuminate\\Support\\Facades\\Route;\n\n// 1. \uba3c\uc800 \uad6c\uccb4\uc801\uc778 \ub77c\uc6b0\ud2b8\ub97c \uc120\uc5b8\ud569\ub2c8\ub2e4.\nRoute::get('/planets/random', [PlanetController::class, 'random']);\n\n// 2. \uadf8 \ub2e4\uc74c\uc5d0\ub9cc \ubcc0\uc218\uac00 \uc788\ub294 \uc77c\ubc18 \ub77c\uc6b0\ud2b8\ub97c \uc120\uc5b8\ud569\ub2c8\ub2e4.\nRoute::apiResource('planets', PlanetController::class);\n</code></pre></p> <p>\uaddc\uce59: \ud56d\uc0c1 \ub354 \uad6c\uccb4\uc801\uc778 \ub77c\uc6b0\ud2b8(<code>/random</code>\uacfc \uac19\uc740)\ub97c \ub354 \uc77c\ubc18\uc801\uc774\uace0 \ud15c\ud50c\ub9bf\ud654\ub41c \ub77c\uc6b0\ud2b8(<code>/{planet}</code>\uacfc \uac19\uc740) \uc55e\uc5d0 \uc120\uc5b8\ud558\uc138\uc694.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/5/#_1","title":"\u26a0\ufe0f \uc911\uc694!","text":"<p>api/planets/random \ub77c\uc6b0\ud2b8\ub97c \ud14c\uc2a4\ud2b8\ud558\ub824\uba74 PlanetController\uc5d0 \uc0c8 \ud578\ub4e4\ub7ec\ub97c \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4:</p> <pre><code>&lt;?php\npublic function random(Request $request)\n{\n   $planet = Planet::inRandomOrder()-&gt;first();\n   return response()-&gt;json($planet);\n}\n</code></pre>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/5/#5","title":"5. \uadf8\ub8f9\ud654: \uc815\ub9ac\ud558\uae30","text":"<p>\ub77c\uc6b0\ud2b8\uac00 \ub9ce\uc544\uc9c0\uba74 \uadf8\ub8f9\ud654\ud560 \uc218 \uc788\uc73c\uba70, \uadf8\ub807\uac8c \ud574\uc57c \ud569\ub2c8\ub2e4.</p> <p>A. API \ubc84\uc804 \uad00\ub9ac \ubbf8\ub798\uc5d0 \uae30\uc874 API\ub97c \uc0ac\uc6a9\ud558\ub294 \uc624\ub798\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc190\uc0c1\ub418\uc9c0 \uc54a\ub3c4\ub85d, URL\uc5d0 <code>/api/v1/...</code>\uacfc \uac19\uc774 \ubc84\uc804\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc785\ub2c8\ub2e4.</p> <pre><code>&lt;?php\nRoute::prefix('v1')-&gt;group(function () {\n    // \uc774 \uadf8\ub8f9 \ub0b4\ubd80\uc758 \ubaa8\ub4e0 \ub77c\uc6b0\ud2b8\ub294 /v1 \uc811\ub450\uc0ac\ub97c \uac16\uac8c \ub429\ub2c8\ub2e4.\n    // \ucd5c\uc885 URL: /api/v1/planets\n    Route::get('/planets/random', [PlanetController::class, 'random']);\n    Route::apiResource('planets', PlanetController::class);\n});\n</code></pre> <p>B. \ub77c\uc6b0\ud2b8 \ubcf4\ud638 (\ubbf8\ub4e4\uc6e8\uc5b4) \ud589\uc131\uc744 \ubcf4\ub294 \uac83\uc740 \ub204\uad6c\ub098 \ud560 \uc218 \uc788\uc9c0\ub9cc, \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8, \uc0ad\uc81c\ub294 \uc778\uc99d\ub41c \uc0ac\uc6a9\uc790\ub9cc \uac00\ub2a5\ud558\ub2e4\uace0 \uac00\uc815\ud574 \ubd05\uc2dc\ub2e4.</p> <pre><code>&lt;?php\n// \ubaa8\ub450\uc5d0\uac8c \uacf5\uac1c\ub41c \ub77c\uc6b0\ud2b8\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// \"\ud328\uc2a4\"(\uc778\uc99d)\ub97c \uc694\uad6c\ud558\ub294 \ub77c\uc6b0\ud2b8 \uadf8\ub8f9\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n});\n</code></pre> <p>\uc5ec\uae30\uc11c <code>middleware('auth:sanctum')</code>\ub294 \uadf8\ub8f9 \ub0b4 \ub77c\uc6b0\ud2b8\uc5d0 \uc811\uadfc\ud558\ub824\ub294 \ubaa8\ub4e0 \uc0ac\ub78c\uc758 \"\ud328\uc2a4\"\ub97c \ud655\uc778\ud558\ub294 \uacbd\ube44\uc6d0\uacfc \uac19\uc2b5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/5/#6-postman","title":"6. Postman\uc744 \ud1b5\ud55c \ud14c\uc2a4\ud2b8","text":"<p>\uc774\uc81c \ubaa8\ub4e0 \ub77c\uc6b0\ud2b8\uac00 \uc124\uc815\ub418\uc5c8\uc73c\ub2c8, \ud14c\uc2a4\ud2b8\ud574 \ubcfc \uc2dc\uac04\uc785\ub2c8\ub2e4.</p> <ol> <li>Herd\ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74: \uadc0\ud558\uc758 \uc6f9\uc0ac\uc774\ud2b8\ub294 \uc774\ubbf8 <code>http://space-api.test</code>\uc640 \uac19\uc740 \uc8fc\uc18c\ub85c \uc791\ub3d9 \uc911\uc785\ub2c8\ub2e4.</li> <li>\uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74: <code>php artisan serve</code> \uba85\ub839\uc73c\ub85c \ub85c\uceec \uc11c\ubc84\ub97c \uc2e4\ud589\ud558\uc138\uc694. \uc8fc\uc18c\ub294 <code>http://localhost:8000</code>\uc774 \ub420 \uac83\uc785\ub2c8\ub2e4.</li> </ol> <p>Postman\uc744 \uc5f4\uace0 \uc694\uccad\uc744 \ubcf4\ub0b4\uc138\uc694:</p> <ul> <li><code>GET http://space-api.test/api/planets</code></li> <li><code>GET http://space-api.test/api/planets/random</code></li> <li><code>POST http://space-api.test/api/planets</code> (<code>Body</code> \ud0ed -&gt; <code>raw</code> -&gt; <code>JSON</code>\uc5d0\uc11c JSON \uc694\uccad \ubcf8\ubb38\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694).</li> </ul> <p>POST \uc694\uccad \uc608\uc2dc: <pre><code>{\n    \"name\": \"Kepler-186f\",\n    \"description\": \"\u041f\u0435\u0440\u0432\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u0437\u0435\u043c\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0432 \u043e\u0431\u0438\u0442\u0430\u0435\u043c\u043e\u0439 \u0437\u043e\u043d\u0435\",\n    \"size_km\": 15000,\n    \"solar_system\": \"Kepler-186\",\n    \"is_habitable\": true\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/5/#8","title":"8. \uc790\uc8fc \ubc1c\uc0dd\ud558\ub294 \ub77c\uc6b0\ud305 \uc624\ub958","text":"<ol> <li>404 Not Found</li> <li>\uc798\ubabb\ub41c URL (<code>/api/planets</code> \ub300\uc2e0 <code>/api/planet</code>)</li> <li><code>php artisan serve</code>\ub97c \uc78a\uc74c</li> <li>405 Method Not Allowed</li> <li>\uc798\ubabb\ub41c HTTP \uba54\uc18c\ub4dc (\uc608: POST \ub300\uc2e0 GET)</li> <li>Missing Controller</li> <li>\ucee8\ud2b8\ub864\ub7ec \uc774\ub984 \uc624\ud0c0 (<code>PlanetControler</code>)</li> <li>Route Name Collision</li> <li>\ub77c\uc6b0\ud2b8 \uc774\ub984 \uc911\ubcf5</li> </ol>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/5/#_2","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. Laravel\uc5d0\uc11c API \uacbd\ub85c\ub97c \uc704\ud55c \ud30c\uc77c:</p>  a) routes/web.php  b) routes/api.php  c) routes/console.php <p>2. API \ub77c\uc6b0\ud2b8\uc758 \uc790\ub3d9 \uc811\ub450\uc0ac:</p>  a) /admin  b) /api  c) /v1 <p>3. 5\uac1c\uc758 CRUD \uacbd\ub85c\ub97c \uc0dd\uc131\ud558\ub294 \uba54\uc11c\ub4dc:</p>  a) Route::api()  b) Route::resource()  c) Route::apiResource() <p>4. Route::prefix('v1')\ub294 \ub2e4\uc74c \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4:</p>  a) \uc778\uc99d  b) API \ubc84\uc804 \uad00\ub9ac  c) \uce90\uc2f1 <p>5. \ubaa8\ub4e0 \uacbd\ub85c \ubcf4\uae30:</p>  a) php artisan route:list  b) php artisan list:routes  c) php routes \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\uc6b0\uc8fc API\ub97c \uc704\ud55c \"\ud558\uc774\ud37c\uc2a4\ud398\uc774\uc2a4 \uacbd\ub85c\"\ub97c \uad6c\ucd95\ud588\uc2b5\ub2c8\ub2e4! \uc774\uc81c:</p> <ul> <li>\ud83d\uddfa\ufe0f \ubaa8\ub4e0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 <code>/api/...</code>\ub85c \uc811\uadfc \uac00\ub2a5\ud569\ub2c8\ub2e4.</li> <li>\ud83d\udd17 \ub9ac\uc18c\uc2a4 \uacbd\ub85c\ub294 \ucee8\ud2b8\ub864\ub7ec\uc5d0 \uc5f0\uacb0\ub429\ub2c8\ub2e4.</li> <li>\ud83d\udee1\ufe0f \ud2b9\ubcc4\ud55c \uc791\uc5c5\uc744 \uc704\ud55c \uc0ac\uc6a9\uc790 \uc815\uc758 \uacbd\ub85c\uac00 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4.</li> <li>\u2705 \uacbd\ub85c\ub294 Postman\uc744 \ud1b5\ud574 \ud14c\uc2a4\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\uc6b0\uc8fc\uac00 \uc694\uccad\uc744 \uc704\ud574 \uc5f4\ub838\uc2b5\ub2c8\ub2e4! \ub2e4\uc74c\uc73c\ub85c \"\uc6b0\uc8fc \uc4f0\ub808\uae30\"\ub85c\ubd80\ud130 \ubcf4\ud638\ud558\ub294 \u2014 \ub370\uc774\ud130 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \ucd94\uac00\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ol> <li><code>php artisan route:list</code>\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4.</li> <li>planets\uc5d0 \ub300\ud55c 5\uac1c \uc774\uc0c1\uc758 \uacbd\ub85c\uac00 \ubcf4\uc774\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.</li> <li>\ube0c\ub77c\uc6b0\uc800/Postman\uc5d0\uc11c GET /api/planets\uc758 \uc791\ub3d9\uc744 \ud655\uc778\ud569\ub2c8\ub2e4.</li> </ol> <p>\u26a0\ufe0f 404 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uba74:</p> <ul> <li><code>routes/api.php</code>\uc5d0 <code>Route::apiResource</code>\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.</li> <li>\uc11c\ubc84\uac00 \uc2e4\ud589 \uc911\uc778\uc9c0 (<code>php artisan serve</code>) \ud655\uc778\ud569\ub2c8\ub2e4.</li> <li>Windows\uc758 \uacbd\uc6b0: \ubc29\ud654\ubcbd\uc5d0\uc11c \ud3ec\ud2b8 8000\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/6/","title":"2.6\uc7a5: \ub370\uc774\ud130 \uc720\ud6a8\uc131 \uac80\uc0ac","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 50\ubd84</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/6/#1","title":"1. \uc720\ud6a8\uc131 \uac80\uc0ac: \uc6b0\uc8fc \uaddc\ubaa8\uc758 \ubc29\ud328","text":"<p>\uc720\ud6a8\uc131 \uac80\uc0ac(Validation)\ub294 \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\uac00 \uaddc\uce59\uc744 \uc900\uc218\ud558\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc720\ud6a8\uc131 \uac80\uc0ac \uc5c6\uc774\ub294:</p> <ul> <li>\ud83d\ude80 \uc798\ubabb\ub41c \ub370\uc774\ud130\uac00 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \"\ud30c\uad34\"\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4</li> <li>\ud83c\udf0c \uc545\uc758\uc801\uc778 \uc0ac\uc6a9\uc790\uac00 \uc545\uc131 \ucf54\ub4dc\ub97c \uc8fc\uc785\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4</li> <li>\ud83e\ude90 \uc0ac\uc6a9\uc790\uac00 \uc774\ud574\ud560 \uc218 \uc5c6\ub294 \uc624\ub958\ub97c \ubc1b\uac8c \ub429\ub2c8\ub2e4</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc\uc801 \ube44\uc720: \uc720\ud6a8\uc131 \uac80\uc0ac = \uc6b0\uc8fc \uc815\uac70\uc7a5 \ubc29\uc5b4 \uc2dc\uc2a4\ud15c:</p> <ul> <li>\ub3c4\ud0b9 \uc804 \"\ud654\ubb3c\"(\ub370\uc774\ud130)\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4</li> <li>\uc704\ud5d8\ud55c \uac1d\uccb4\ub97c \uac70\ubd80\ud569\ub2c8\ub2e4</li> <li>\uc6b0\uc8fc \uc4f0\ub808\uae30\ub97c \ud544\ud130\ub9c1\ud569\ub2c8\ub2e4</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/6/#2-laravel-api","title":"2. Laravel API\uc5d0\uc11c \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc218\ud589\ud560 \uc704\uce58","text":"<p>\uc8fc\uc694 \uc811\uadfc \ubc29\uc2dd:</p> <ol> <li>\ucee8\ud2b8\ub864\ub7ec \ub0b4\uc5d0\uc11c (\ube60\ub974\uc9c0\ub9cc \ucf54\ub4dc\uac00 \ubcf5\uc7a1\ud574\uc9d1\ub2c8\ub2e4)</li> <li>\ud3fc \uc694\uccad (Form Request) (\uad8c\uc7a5, \uae54\ub054\ud55c \uc544\ud0a4\ud14d\ucc98)</li> </ol>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/6/#3","title":"3. \ucee8\ud2b8\ub864\ub7ec \ub0b4 \uc720\ud6a8\uc131 \uac80\uc0ac","text":"<p>Request \uac1d\uccb4\uc758 <code>validate()</code> \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4: <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $validated = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    // ... \ud589\uc131 \uc0dd\uc131\n}\n</code></pre></p> <p>\uc778\uae30 \uc788\ub294 \uc720\ud6a8\uc131 \uac80\uc0ac \uaddc\uce59:</p> \uaddc\uce59 \uc124\uba85 \uc608\uc2dc <code>required</code> \ud544\uc218 \ud544\ub4dc <code>'name' =&gt; 'required'</code> <code>string</code> \ubb38\uc790\uc5f4 \uac12 <code>'description' =&gt; 'string'</code> <code>integer</code> \uc815\uc218 <code>'size_km' =&gt; 'integer'</code> <code>min:value</code> \ucd5c\uc18c\uac12/\uae38\uc774 <code>'size_km' =&gt; 'min:100'</code> <code>max:value</code> \ucd5c\ub300\uac12/\uae38\uc774 <code>'name' =&gt; 'max:255'</code> <code>unique:table,column</code> \ud14c\uc774\ube14 \ub0b4 \uace0\uc720\uc131 <code>'name' =&gt; 'unique:planets'</code> <code>url</code> \uc720\ud6a8\ud55c URL <code>'image_url' =&gt; 'url'</code> <code>boolean</code> true/false/1/0 <code>'is_habitable' =&gt; 'boolean'</code>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/6/#4","title":"4. \uc0ac\uc6a9\uc790 \uc815\uc758 \uc624\ub958 \uba54\uc2dc\uc9c0","text":"<p>\uae30\ubcf8 \uc624\ub958 \ud14d\uc2a4\ud2b8\ub97c \ubcc0\uacbd\ud569\ub2c8\ub2e4: <pre><code>&lt;?php\n$validated = $request-&gt;validate(\n    [\n        'name' =&gt; 'required|unique:planets',\n        'size_km' =&gt; 'min:1000'\n    ],\n    [\n        'name.required' =&gt; '\ud589\uc131 \uc774\ub984\uc740 \ud544\uc218\uc785\ub2c8\ub2e4!',\n        'name.unique' =&gt; '\ud574\ub2f9 \ud589\uc131\uc740 \uc774\ubbf8 \uce74\ud0c8\ub85c\uadf8\uc5d0 \uc788\uc2b5\ub2c8\ub2e4',\n        'size_km.min' =&gt; '\ud589\uc131\uc758 \uc9c1\uacbd\uc740 1000km \ubbf8\ub9cc\uc77c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4'\n    ]\n);\n</code></pre></p> <p>\uc624\ub958 \uc751\ub2f5 \uc608\uc2dc (\uc790\ub3d9 422 Unprocessable Entity): <pre><code>{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"name\": [\"\ud574\ub2f9 \ud589\uc131\uc740 \uc774\ubbf8 \uce74\ud0c8\ub85c\uadf8\uc5d0 \uc788\uc2b5\ub2c8\ub2e4\"],\n        \"size_km\": [\"\ud589\uc131\uc758 \uc9c1\uacbd\uc740 1000km \ubbf8\ub9cc\uc77c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4\"]\n    }\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/6/#5-form-request","title":"5. \ud3fc \uc694\uccad(Form Request) \uc0dd\uc131","text":"<p>\ubcf5\uc7a1\ud55c \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc704\ud574 \ubcc4\ub3c4\uc758 \ud074\ub798\uc2a4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4:</p> <p>\ub2e8\uacc4 1: \uc0dd\uc131 <pre><code>php artisan make:request StorePlanetRequest\n</code></pre></p> <p>\ub2e8\uacc4 2: <code>app/Http/Requests/StorePlanetRequest.php</code> \ud3b8\uc9d1 <pre><code>&lt;?php\npublic function authorize()\n{\n    return true; // API\uc758 \uacbd\uc6b0 \uc77c\ubc18\uc801\uc73c\ub85c true\n}\n\npublic function rules()\n{\n    return [\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ];\n}\n\npublic function messages()\n{\n    return [\n        'name.unique' =&gt; '\ud574\ub2f9 \uc774\ub984\uc744 \uac00\uc9c4 \ud589\uc131\uc774 \uc774\ubbf8 \uc874\uc7ac\ud569\ub2c8\ub2e4!',\n        'size_km.min' =&gt; '\uc9c1\uacbd\uc740 100km \ubbf8\ub9cc\uc77c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4'\n    ];\n}\n</code></pre></p> <p>\ub2e8\uacc4 3: \ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c \uc0ac\uc6a9 <pre><code>&lt;?php\nuse App\\Http\\Requests\\StorePlanetRequest;\n\npublic function store(StorePlanetRequest $request)\n{\n    // \ub370\uc774\ud130\ub294 \uc774\ubbf8 \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4!\n    $validated = $request-&gt;validated();\n    $planet = Planet::create($validated);\n    return response()-&gt;json($planet, 201);\n}\n</code></pre></p> <p>\uc774\ud574\ud588\uc2b5\ub2c8\ub2e4. Laravel 10/11/12\uc640 \uc644\ubcbd\ud558\uac8c \uc77c\uce58\ud558\ub3c4\ub85d \uc774 \ucc55\ud130\ub97c \uc218\uc815\ud558\uace0, \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 \uac1c\ub150\uc774\ub098 \ud50c\ub798\uadf8(\ud2b9\ud788 <code>--invokable</code>)\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc5b8\uae09\uc744 \uc81c\uac70\ud558\uba70, \ucd5c\uc2e0 \ucf54\ub4dc\ub9cc \uc720\uc9c0\ud574\uc57c \ud569\ub2c8\ub2e4. \ubd88\ud544\uc694\ud55c \uac83\uc740 \uac74\ub4dc\ub9ac\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.</p> <p>\uc54c\uaca0\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \ud504\ub808\uc784\uc6cc\ud06c\uc758 \ucd5c\uc2e0 \ubc84\uc804\uc744 \uc815\ud655\ud558\uac8c \ubc18\uc601\ud558\ub294 6\ubc88\uc9f8 \uc139\uc158\uc758 \uc218\uc815\ub41c \ubc84\uc804\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/6/#6","title":"6. \uc0ac\uc6a9\uc790 \uc815\uc758 \uc720\ud6a8\uc131 \uac80\uc0ac \uaddc\uce59","text":"<p>\ud589\uc131 \uc774\ub984\uc758 \"\ud0c0\ub2f9\uc131\"\uc744 \ud655\uc778\ud558\ub294 \uaddc\uce59\uc744 \uc0dd\uc131\ud558\uaca0\uc2b5\ub2c8\ub2e4. Laravel\uc758 \ud45c\uc900 \uaddc\uce59\uc740 \uc774\ub984\uc774 \"\uae08\uc9c0\"\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c, \uc6b0\ub9ac\ub294 \uc790\uccb4\uc801\uc778 \ub85c\uc9c1\uc744 \uc791\uc131\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 1: \uaddc\uce59 \uc0dd\uc131</p> <p>Laravel\uc740 \uaddc\uce59 \ud074\ub798\uc2a4\uc758 \"\uc2a4\ud141\"\uc744 \uc0dd\uc131\ud558\uae30 \uc704\ud55c Artisan \uba85\ub839\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud130\ubbf8\ub110\uc5d0\uc11c \uc2e4\ud589\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4:</p> <pre><code>php artisan make:rule ValidPlanetName\n</code></pre> <p>\ub2e8\uacc4 2: <code>app/Rules/ValidPlanetName.php</code> \ud3b8\uc9d1</p> <p>\uc0dd\uc131\ub41c \ud30c\uc77c\uc744 \uc5fd\ub2c8\ub2e4. \uadf8 \uad6c\uc870\ub294 \uac04\ub2e8\ud558\uace0 \uba85\ud655\ud569\ub2c8\ub2e4. \uc6b0\ub9ac\uc758 \uc784\ubb34\ub294 <code>validate</code> \uba54\uc11c\ub4dc \ub0b4\ubd80\uc5d0 \ub85c\uc9c1\uc744 \uad6c\ud604\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.</p> <pre><code>&lt;?php\n\nnamespace App\\Rules;\n\nuse Closure;\nuse Illuminate\\Contracts\\Validation\\ValidationRule;\n\nclass ValidPlanetName implements ValidationRule\n{\n    /**\n     * \uc720\ud6a8\uc131 \uac80\uc0ac \uaddc\uce59\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4.\n     *\n     * @param  \\Closure(string): \\Illuminate\\Translation\\PotentiallyTranslatedString  $fail\n     */\n    public function validate(string $attribute, mixed $value, Closure $fail): void\n    {\n        // \uc6b0\ub9ac\uc758 \"\ube14\ub799\ub9ac\uc2a4\ud2b8\" \uc774\ub984\n        $forbidden = ['\u0417\u0435\u043c\u043b\u044f 2.0', '\u041d\u0438\u0431\u0438\u0440\u0443', '\u041f\u043b\u0430\u043d\u0435\u0442\u0430 X'];\n\n        // \uc785\ub825\ub41c \uac12\uc774 \uc6b0\ub9ac\uc758 \ubaa9\ub85d\uc5d0 \uc788\ub294\uc9c0,\n        // \ub300\uc18c\ubb38\uc790\ub97c \ubb34\uc2dc\ud558\uace0 \ud655\uc778\ud569\ub2c8\ub2e4.\n        if (in_array(strtolower($value), array_map('strtolower', $forbidden))) {\n            // \uac80\uc99d\uc5d0 \uc2e4\ud328\ud558\uba74,\n            // \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud45c\uc2dc\ub420 \uc624\ub958 \ud14d\uc2a4\ud2b8\uc640 \ud568\uaed8 $fail \ud568\uc218\ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4.\n            $fail('\uc774 \ud589\uc131 \uc774\ub984\uc740 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4!');\n        }\n    }\n}\n</code></pre> <p>\ub2e8\uacc4 3: \ud3fc \uc694\uccad(Form Request)\uc5d0\uc11c \uc0ac\uc6a9</p> <p>\uc774\uc81c \uc0ac\uc6a9\uc790 \uc815\uc758 \uaddc\uce59\uc744 \uc0ac\uc6a9\ud560 \uc900\ube44\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ud074\ub798\uc2a4\uc758 \uc0c8 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\uae30\ub9cc \ud558\uba74 \uc5b4\ub5a4 \ud3fc \uc694\uccad(Form Request)\uc5d0\uc11c\ub3c4 \uc774\ub97c \ud3ec\ud568\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p><code>app/Http/Requests/StorePlanetRequest.php</code>\ub97c \uc5f4\uace0 <code>name</code> \ud544\ub4dc\uc758 \uaddc\uce59 \ubc30\uc5f4\uc5d0 <code>new ValidPlanetName</code>\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4.</p> <p><pre><code>&lt;?php\n// app/Http/Requests/StorePlanetRequest.php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Rules\\ValidPlanetName; // &lt;-- \ud074\ub798\uc2a4\ub97c \uc784\ud3ec\ud2b8\ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass StorePlanetRequest extends FormRequest\n{\n    // ... (authorize \uba54\uc11c\ub4dc)\n\n    public function rules(): array\n    {\n        return [\n            'name' =&gt; [\n                'sometimes',\n                'string',\n                'max:255',\n                'unique:planets',\n                new ValidPlanetName, // &lt;-- \uc5ec\uae30\uc5d0 \uc6b0\ub9ac\uc758 \uc0ac\uc6a9\uc790 \uc815\uc758 \uaddc\uce59\uc774 \uc788\uc2b5\ub2c8\ub2e4\n            ],\n            'description' =&gt; 'sometimes|string',\n            'size_km' =&gt; 'sometimes|integer|min:100|max:500000',\n            'solar_system' =&gt; 'sometimes|string|max:100',\n            'image_url' =&gt; 'nullable|url|max:2048',\n            'is_habitable' =&gt; 'sometimes|boolean'\n        ];\n    }\n\n    // ... (messages \uba54\uc11c\ub4dc)\n}\n</code></pre> \uc644\ub8cc. \uc774\uc81c \ud589\uc131\uc744 \uc0dd\uc131\ud560 \ub54c Laravel\uc740 <code>name</code> \ud544\ub4dc\uc5d0 \ubaa8\ub4e0 \uaddc\uce59\uc744 \uc21c\ucc28\uc801\uc73c\ub85c \uc801\uc6a9\ud558\uace0, <code>new ValidPlanetName</code>\uc5d0 \ub3c4\ub2ec\ud558\uba74 \uc6b0\ub9ac\uc758 \uc0ac\uc6a9\uc790 \uc815\uc758 \ub85c\uc9c1\uc744 \uc2e4\ud589\ud560 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/6/#7-update","title":"7. \uc5c5\ub370\uc774\ud2b8\ub97c \uc704\ud55c \uc720\ud6a8\uc131 \uac80\uc0ac (Update)","text":"<p>\ub370\uc774\ud130 \uc5c5\ub370\uc774\ud2b8 \uc2dc\uc758 \ud2b9\uc9d5:</p> <p>\ub808\ucf54\ub4dc\ub97c \uc5c5\ub370\uc774\ud2b8\ud560 \ub54c \uc720\ud6a8\uc131 \uac80\uc0ac \uaddc\uce59\uc740 \uc885\uc885 \ub2e4\ub985\ub2c8\ub2e4. \uc8fc\uc694 \ud2b9\uc9d5\uc740 \ud604\uc7ac \uc5c5\ub370\uc774\ud2b8 \uc911\uc778 \ub808\ucf54\ub4dc\ub97c \ubb34\uc2dc\ud574\uc57c \ud558\ub294 \uace0\uc720\uc131 \uac80\uc0ac\uc785\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 1: \uc5c5\ub370\uc774\ud2b8\ub97c \uc704\ud55c \ubcc4\ub3c4\uc758 \ud3fc \uc694\uccad(Form Request) \uc0dd\uc131 <pre><code>php artisan make:request UpdatePlanetRequest\n</code></pre> \ub2e8\uacc4 2: <code>app/Http/Requests/UpdatePlanetRequest.php</code> \ud3b8\uc9d1 <pre><code>&lt;?php\nuse Illuminate\\Validation\\Rule;\n\npublic function authorize(): bool\n{\n    return true;\n}\npublic function rules(): array\n{\n    $planet = $this-&gt;route('planet'); // \ub77c\uc6b0\ud2b8\uc5d0\uc11c \ubaa8\ub378 \uac00\uc838\uc624\uae30\n\n     return [\n         'name' =&gt; [\n             'sometimes', // \ud544\ub4dc\uac00 \uc694\uccad\uc5d0 \ud3ec\ud568\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uac80\uc0ac\n             'required',\n             'string',\n             'max:255',\n             Rule::unique('planets')-&gt;ignore($planetId),\n         ],\n         'description'  =&gt; 'sometimes|required|string',\n         'size_km'      =&gt; 'sometimes|required|integer|min:100|max:500000',\n         // ... 'sometimes'\uac00 \uc801\uc6a9\ub41c \ub098\uba38\uc9c0 \ud544\ub4dc\n     ];\n }\n</code></pre> \ub2e8\uacc4 3: \ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c \uc0ac\uc6a9 <pre><code>&lt;?php\n use App\\Http\\Requests\\UpdatePlanetRequest;\n\n public function update(UpdatePlanetRequest $request, Planet $planet)\n {\n     $validated = $request-&gt;validated();\n     $planet-&gt;update($validated);\n     return response()-&gt;json($planet);\n }\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/6/#8-postman","title":"8. Postman\uc5d0\uc11c \uc720\ud6a8\uc131 \uac80\uc0ac \ud14c\uc2a4\ud2b8","text":"<p>\uc2dc\ub098\ub9ac\uc624 1: \uc774\ub984 \uace0\uc720\uc131 \uc624\ub958 <pre><code>POST /api/planets\n{\n    \"name\": \"\u041c\u0430\u0440\u0441\",\n    \"description\": \"\ubbf8\ub798 \uc2dd\ubbfc\uc9c0 \uac1c\ucc99\uc758 \ubaa9\ud45c\uc778 \ubd89\uc740 \ud589\uc131\",\n    \"size_km\": 6779,\n    \"solar_system\": \"Solar System\",\n    \"is_habitable\": false\n}\n</code></pre> \uc608\uc0c1 \uc751\ub2f5: <pre><code>{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"name\": [\"\ud574\ub2f9 \uc774\ub984\uc744 \uac00\uc9c4 \ud589\uc131\uc774 \uc774\ubbf8 \uc874\uc7ac\ud569\ub2c8\ub2e4!\"]\n    }\n}\n</code></pre></p> <p>\uc2dc\ub098\ub9ac\uc624 2: \uc798\ubabb\ub41c \uc9c1\uacbd <pre><code>{\n    \"name\": \"\ucf69\uc54c \ud589\uc131\",\n    \"size_km\": 50 // &lt; min:100\n}\n</code></pre> \uc608\uc0c1 \uc751\ub2f5: <pre><code>\"errors\": {\n    \"size_km\": [\"\uc9c1\uacbd\uc740 100km \ubbf8\ub9cc\uc77c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4\"]\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/6/#_1","title":"\ud655\uc778 \ud034\uc988","text":"<p>1. \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958 \uc2dc HTTP \uc0c1\ud0dc \ucf54\ub4dc\ub294?</p>  a) 400 Bad Request  b) 422 Unprocessable Entity  c) 500 Internal Server Error <p>2. \uace0\uc720\uc131 \uac80\uc0ac \uaddc\uce59\uc740?</p>  a) unique:table  b) distinct  c) only:table <p>3. \ubcf5\uc7a1\ud55c \uc720\ud6a8\uc131 \uac80\uc0ac \uaddc\uce59\uc744 \uc5b4\ub514\uc5d0 \ub450\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\uae4c?</p>  a) \ucee8\ud2b8\ub864\ub7ec\uc5d0  b) \ubaa8\ub378\uc5d0  c) Form Request\uc5d0 <p>4. Form Request\uc758 `authorize()` \uba54\uc11c\ub4dc\ub294 \ub2e4\uc74c\uc744 \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4:</p>  a) false  b) true  c) null <p>5. sometimes \uaddc\uce59\uc758 \uc758\ubbf8\ub294?</p>  a) \ud544\ub4dc\ub294 \ud544\uc218\uc785\ub2c8\ub2e4  b) \ud544\ub4dc\uac00 \uc874\uc7ac\ud560 \uacbd\uc6b0\uc5d0\ub9cc \uac80\uc0ac\ub429\ub2c8\ub2e4  c) \ud544\ub4dc\ub294 \ubb34\uc2dc\ub429\ub2c8\ub2e4 \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\uadc0\ud558\ub294 \uc6b0\uc8fc API\ub97c \uc704\ud55c \uac15\ub825\ud55c \ubcf4\ud638 \uc2dc\uc2a4\ud15c\uc744 \uad6c\ucd95\ud588\uc2b5\ub2c8\ub2e4:</p> <ul> <li>\ud83d\udee1\ufe0f \uae30\ubcf8 \ubc0f \uc0ac\uc6a9\uc790 \uc815\uc758 \uc720\ud6a8\uc131 \uac80\uc0ac \uaddc\uce59</li> <li>\ud83d\udcdd \uac00\ub3c5\uc131 \uc88b\uc740 \uc624\ub958 \uba54\uc2dc\uc9c0</li> <li>\ud83e\udde9 \ubcf5\uc7a1\ud55c \uc2dc\ub098\ub9ac\uc624\ub97c \uc704\ud55c Form Request</li> <li>\u2699\ufe0f \ub370\uc774\ud130 \uc5c5\ub370\uc774\ud2b8\ub97c \uc704\ud55c \uace0\uc720 \uaddc\uce59</li> </ul> <p>\uc774\uc81c \uadc0\ud558\uc758 \uc6b0\uc8fc\ub294 \ubcf4\ud638\ubc1b\uc2b5\ub2c8\ub2e4! \ub2e4\uc74c\uc73c\ub85c \"\uc6b0\uc8fc \uc0ac\uace0\"\uc778 \uc11c\ubc84 \uc624\ub958\ub97c \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6b8 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ol> <li>\ud589\uc131 \uc5c5\ub370\uc774\ud2b8\ub97c \uc704\ud55c Form Request\ub97c \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624</li> <li>\uc0ac\uc6a9\uc790 \uc815\uc758 \uc774\ub984 \uac80\uc0ac \uaddc\uce59\uc744 \ucd94\uac00\ud558\uc2ed\uc2dc\uc624</li> <li>Postman\uc744 \ud1b5\ud574 \uc624\ub958\ub97c \ud14c\uc2a4\ud2b8\ud558\uc2ed\uc2dc\uc624</li> </ol> <p>\u26a0\ufe0f \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \uc791\ub3d9\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0:</p> <ul> <li>\ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c Form Request \uc5f0\uacb0\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624</li> <li><code>authorize()</code>\uac00 true\ub97c \ubc18\ud658\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624</li> <li>\uc5c5\ub370\uc774\ud2b8 \uc2dc \uace0\uc720\uc131\uc744 \uc704\ud574 <code>Rule::unique</code>\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/7/","title":"\uc81c2.7\uc7a5: \uc624\ub958 \ucc98\ub9ac","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 40\ubd84</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/7/#1","title":"1. \ud45c\uc900 \uc624\ub958\uac00 \ub098\uc05c \uc774\uc720","text":"<p>Laravel \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uace0(\uc608: \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ub808\ucf54\ub4dc\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc74c) \uc774\ub97c \ucc98\ub9ac\ud558\uc9c0 \uc54a\uc73c\uba74, \uc0ac\uc6a9\uc790\ub294 \ubc29\ub300\ud55c HTML \ub514\ubc84\uadf8 \uc815\ubcf4 \ud398\uc774\uc9c0\ub098 \uc815\ubcf4\uac00 \ubd80\uc871\ud55c \"\uc11c\ubc84 \uc624\ub958\" \uba54\uc2dc\uc9c0\ub97c \ubcf4\uac8c \ub429\ub2c8\ub2e4.</p> <p>API\uc758 \uacbd\uc6b0 \uc774\ub294 \uc7ac\uc559\uc785\ub2c8\ub2e4. \ud504\ub860\ud2b8\uc5d4\ub4dc \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 HTML\uc774 \uc544\ub2cc JSON\uc744 \ubc1b\uc544\uc57c \ud569\ub2c8\ub2e4. \uc6b0\ub9ac\uc758 \uc784\ubb34\ub294 \ubaa8\ub4e0 \uc624\ub958\ub97c \uac00\ub85c\ucc44\uc11c \uad6c\uc870\ud654\ub41c JSON \uc751\ub2f5\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/7/#2-bootstrapappphp","title":"2. \uc911\uc559 \uc624\ub958 \ub514\uc2a4\ud328\ucc98: <code>bootstrap/app.php</code>","text":"<p>\uc774\uc804 Laravel \ubc84\uc804\uc5d0\uc11c\ub294 <code>App\\Exceptions\\Handler.php</code>\ub77c\ub294 \ubc88\uac70\ub85c\uc6b4 \ud30c\uc77c\uc774 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. Laravel 11/12\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \uac83\uc774 \ud6e8\uc52c \uac04\ub2e8\ud558\uace0 \uc6b0\uc544\ud574\uc84c\uc2b5\ub2c8\ub2e4. \uc624\ub958 \uad00\ub9ac \uc13c\ud130\ub294 \uc774\uc81c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uad6c\uc131 \ud30c\uc77c\uc778 <code>bootstrap/app.php</code>\uc5d0 \uc9c1\uc811 \uc704\uce58\ud569\ub2c8\ub2e4.</p> <p><code>bootstrap/app.php</code> \ud30c\uc77c\uc744 \uc5ec\uc138\uc694. \ub9e8 \uc544\ub798\uc5d0 <code>.withExceptions(...)</code> \ube14\ub85d\uc774 \ubcf4\uc77c \uac83\uc785\ub2c8\ub2e4. \uc774\uac83\uc774 \ubc14\ub85c \uc6b0\ub9ac\uc758 \"\uc911\uc559 \ub514\uc2a4\ud328\ucc98\"\uc785\ub2c8\ub2e4.</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    -&gt;withRouting(\n        web: __DIR__.'/../routes/web.php',\n        api: __DIR__.'/../routes/api.php',\n        commands: __DIR__.'/../routes/console.php',\n        health: '/up',\n    )\n    -&gt;withMiddleware(function (Middleware $middleware) {\n        // ...\n    })\n    -&gt;withExceptions(function (Exceptions $exceptions) {\n        // &lt;-- \uc5ec\uae30\uc5d0\uc11c \uc791\uc5c5\ud560 \uc608\uc815\uc785\ub2c8\ub2e4.\n    })-&gt;create();\n</code></pre>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/7/#3-404","title":"3. \uac00\uc7a5 \ud754\ud55c \uc624\ub958 \ucc98\ub9ac: \"\ucc3e\uc744 \uc218 \uc5c6\uc74c\" (404)","text":"<p>API\uc5d0\uc11c \uac00\uc7a5 \ud754\ud55c \uc624\ub958\ub294 \uc0ac\uc6a9\uc790\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ub9ac\uc18c\uc2a4\ub97c \uc694\uccad\ud560 \ub54c\uc785\ub2c8\ub2e4(\uc608: <code>GET /api/planets/999</code>). \uc774 \uacbd\uc6b0 Laravel\uc740 <code>ModelNotFoundException</code> \ub610\ub294 <code>NotFoundHttpException</code> \uc608\uc678\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub97c \uac00\ub85c\ucc44 \ubd05\uc2dc\ub2e4.</p> <p><code>.withExceptions(...)</code> \uc548\uc5d0 \ub2e4\uc74c \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\uc138\uc694:</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ubaa8\ub378\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc744 \ub54c \uc608\uc678\ub97c \uac00\ub85c\ucc55\ub2c8\ub2e4.\n    $exceptions-&gt;render(function (ModelNotFoundException $e, Request $request) {\n        // \uc694\uccad\uc774 \uc6b0\ub9ac API\ub85c \uc654\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; '\uc694\uccad\ud55c \ub9ac\uc18c\uc2a4\ub294 \uc6b0\ub9ac \uc740\ud558\uc5d0\uc11c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.'\n            ], 404);\n        }\n    });\n\n    // \uacbd\ub85c \uc790\uccb4\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc744 \ub54c \uc608\uc678\ub97c \uac00\ub85c\ucc55\ub2c8\ub2e4.\n    $exceptions-&gt;render(function (NotFoundHttpException $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; '\uadf8\ub7f0 \uc6b0\uc8fc \uacbd\ub85c\ub294 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.'\n            ], 404);\n        }\n    });\n\n})-&gt;create();\n</code></pre> \uc6b0\ub9ac\uac00 \ud55c \uc77c?</p> <ol> <li><code>$exceptions-&gt;render(...)</code> \u2014 \uc6b0\ub9ac\ub294 \"\ud578\ub4e4\ub7ec\"\ub97c \ub4f1\ub85d\ud569\ub2c8\ub2e4. \uc774\ub294 \"<code>ModelNotFoundException</code> \uc720\ud615\uc758 \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uba74 \uc774 \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\ub77c\"\uace0 \ub9d0\ud569\ub2c8\ub2e4.</li> <li><code>if ($request-&gt;is('api/*'))</code> \u2014 \uc774\uac83\uc740 \uc911\uc694\ud55c \ud655\uc778\uc785\ub2c8\ub2e4. \uc774 \ucf54\ub4dc\ub294 \uc6b0\ub9ac\uc758 \uc608\uc05c JSON \uc751\ub2f5\uc774 \uc77c\ubc18 \uc6f9 \ud398\uc774\uc9c0\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uace0 API \uc694\uccad\uc5d0\ub9cc \uc804\uc1a1\ub418\ub3c4\ub85d \ubcf4\uc7a5\ud569\ub2c8\ub2e4.</li> <li><code>return response()-&gt;json(...)</code> \u2014 \uc6b0\ub9ac\ub294 404 \ucf54\ub4dc\uc640 \ud568\uaed8 \ud45c\uc900\ud654\ub41c JSON \uc751\ub2f5\uc744 \uc0dd\uc131\ud558\uace0 \ubc18\ud658\ud569\ub2c8\ub2e4.</li> </ol> <p>\uc774\uc81c \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ud589\uc131\uc744 \uc694\uccad\ud558\uba74, \ubcf4\uae30 \ud749\ud55c HTML \ud398\uc774\uc9c0 \ub300\uc2e0 \uae54\ub054\ud55c JSON\uc744 \ubc1b\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/7/#4","title":"4. \uc0ac\uc6a9\uc790 \uc815\uc758 \uc608\uc678: \ub098\ub9cc\uc758 \"\uacbd\uace0 \uc2e0\ud638\" \uc0dd\uc131","text":"<p>\ub54c\ub85c\ub294 \ud45c\uc900 \uc608\uc678\ub9cc\uc73c\ub85c\ub294 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \"\uc9c0\uad6c \ud589\uc131\uc744 \uc0ad\uc81c\ud560 \uc218 \uc5c6\ub2e4\"\ub294 \ube44\uc988\ub2c8\uc2a4 \uaddc\uce59\uc774 \uc788\ub2e4\uace0 \uac00\uc815\ud574 \ubd05\uc2dc\ub2e4. \ub204\uad70\uac00 \uc774\ub97c \uc2dc\ub3c4\ud558\uba74 \uc758\ubbf8 \uc788\ub294 \uc624\ub958\ub97c \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 1: \uc0ac\uc6a9\uc790 \uc815\uc758 \uc608\uc678 \ud074\ub798\uc2a4 \uc0dd\uc131 \ud130\ubbf8\ub110\uc5d0\uc11c \uc2e4\ud589: <pre><code>php artisan make:exception CannotDeleteEarthException\n</code></pre></p> <p>\ub2e8\uacc4 2: \ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c \uc0ac\uc6a9 <code>PlanetController.php</code>\ub97c \uc5f4\uace0 <code>destroy</code> \uba54\uc11c\ub4dc\ub97c \uc218\uc815\ud569\ub2c8\ub2e4:</p> <p><pre><code>&lt;?php\n// app/Http/Controllers/PlanetController.php\nuse App\\Exceptions\\CannotDeleteEarthException; // &lt;-- \uc608\uc678 \uac00\uc838\uc624\uae30\nuse App\\Models\\Planet;\n\npublic function destroy(Planet $planet)\n{\n    // \uc0c8\ub85c\uc6b4 \ube44\uc988\ub2c8\uc2a4 \uaddc\uce59\n    if (strtolower($planet-&gt;name) === '\u0437\u0435\u043c\u043b\u044f') {\n        throw new CannotDeleteEarthException('\uc740\ud558\uacc4 \ubc95\uaddc\uc5d0 \ub530\ub77c \uc9c0\uad6c \ud589\uc131 \uc0ad\uc81c\ub294 \uae08\uc9c0\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.');\n    }\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre> \uc774\uc81c \ub204\uad70\uac00 <code>DELETE /api/planets/1</code>(\uc5ec\uae30\uc11c 1\uc740 \uc9c0\uad6c\uc758 ID)\uc744 \uc2e4\ud589\ud558\ub824\uace0 \ud558\uba74, \uc6b0\ub9ac \ucf54\ub4dc\ub294 <code>CannotDeleteEarthException</code> \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0ac \uac83\uc785\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 3: Laravel\uc5d0\uac8c \"\uacbd\uace0\"\ub97c \uba4b\uc9c0\uac8c \ucc98\ub9ac\ud558\ub3c4\ub85d \uac00\ub974\uce58\uae30 <code>bootstrap/app.php</code>\ub85c \ub3cc\uc544\uac00\uc11c \uc6b0\ub9ac \uc608\uc678\ub97c \uc704\ud55c \uc0c8\ub85c\uc6b4 \ud578\ub4e4\ub7ec\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4.</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // \uc6b0\ub9ac\uc758 \uc0c8\ub85c\uc6b4 \ud578\ub4e4\ub7ec\n    $exceptions-&gt;render(function (CannotDeleteEarthException $e, Request $request) {\n        return response()-&gt;json([\n            'message' =&gt; '\uc791\uc5c5\uc774 \uae08\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4.',\n            'details' =&gt; $e-&gt;getMessage() // throw\uc5d0 \uc804\ub2ec\ud55c \uba54\uc2dc\uc9c0\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.\n        ], 403); // 403 Forbidden - \"\uc811\uadfc \uae08\uc9c0\"\n    });\n\n    // ... (404\uc5d0 \ub300\ud55c \ub2e4\ub978 \ud578\ub4e4\ub7ec)\n\n})-&gt;create();\n</code></pre> \uc644\ub8cc! \uc6b0\ub9ac\ub294 \ucee8\ud2b8\ub864\ub7ec \ucf54\ub4dc\ub97c \ub354 \uae54\ub054\ud558\uac8c \ub9cc\ub4dc\ub294 \uc790\uccb4 \uba85\uba85\ub41c \uc608\uc678\ub97c \ub9cc\ub4e4\uc5c8\uace0, Laravel\uc5d0\uac8c \uc774\ub97c \uc62c\ubc14\ub978 HTTP \uc0c1\ud0dc \ucf54\ub4dc\ub97c \uac00\uc9c4 \uc544\ub984\ub2f5\uace0 \uc758\ubbf8 \uc788\ub294 JSON \uc751\ub2f5\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \ubc29\ubc95\uc744 \uac00\ub974\ucce4\uc2b5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/7/#5-500","title":"5. \uadf8 \uc678 \ubaa8\ub4e0 \uc2e4\ud328 \ucc98\ub9ac (500 \ub0b4\ubd80 \uc11c\ubc84 \uc624\ub958)","text":"<p>\uc608\uae30\uce58 \uc54a\uc740 \ub2e4\ub978 \ubaa8\ub4e0 \uc624\ub958\ub294 \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud574\uc57c \ud560\uae4c\uc694? \uc608\ub97c \ub4e4\uc5b4, \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \ub04a\uacbc\uac70\ub098 \ucf54\ub4dc\uc5d0 \uad6c\ubb38 \uc624\ub958\uac00 \uc788\ub294 \uacbd\uc6b0\uc785\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \uc624\ub958 \uc720\ud615\uc778 <code>Throwable</code>\uc5d0 \ub300\ud55c \"\ubc94\uc6a9\" \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\uc911\uc694: \uc774 \ud578\ub4e4\ub7ec\ub294 \uc704\uc5d0\uc11c \uc815\uc758\ud55c \ub354 \uad6c\uccb4\uc801\uc778 \uc608\uc678\ub97c \uac00\ub85c\ucc44\uc9c0 \uc54a\ub3c4\ub85d \ub9c8\uc9c0\ub9c9\uc5d0 \uc704\uce58\ud574\uc57c \ud569\ub2c8\ub2e4.</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // ... (CannotDeleteEarthException \ubc0f 404\uc5d0 \ub300\ud55c \ud578\ub4e4\ub7ec)\n\n    // \ubc94\uc6a9 \ud578\ub4e4\ub7ec (\ub9e8 \ub9c8\uc9c0\ub9c9)\n    $exceptions-&gt;render(function (Throwable $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            // \ub514\ubc84\uadf8 \ubaa8\ub4dc\uc5d0\uc11c\ub294 \uc2e4\uc81c \uc624\ub958 \uba54\uc2dc\uc9c0\ub97c \ud45c\uc2dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n            $message = config('app.debug')\n                ? '\uc624\ub958 \ubc1c\uc0dd: ' . $e-&gt;getMessage()\n                : '\uc120\ub0b4\uc5d0\uc11c \uc608\uae30\uce58 \uc54a\uc740 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \uc5d4\uc9c0\ub2c8\uc5b4\ub4e4\uc774 \uc774\ubbf8 \ud638\ucd9c\ub418\uc5c8\uc2b5\ub2c8\ub2e4.';\n\n            return response()-&gt;json(['message' =&gt; $message], 500);\n        }\n    });\n\n})-&gt;create();\n</code></pre> <p>\uc774\uc81c \uc5b4\ub5a4 \"\uc54c \uc218 \uc5c6\ub294\" \uc608\uc678\ub3c4 \uae54\ub054\ud558\uac8c \uac00\ub85c\ucc44\uc838 500 \ucf54\ub4dc\uc640 \ud568\uaed8 JSON\uc73c\ub85c \ubcc0\ud658\ub420 \uac83\uc774\uba70, \uc774\ub294 API\ub97c \uc190\uc0c1\uc2dc\ud0a4\uac70\ub098 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubd88\ud544\uc694\ud55c \uc815\ubcf4\ub97c \ub178\ucd9c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/7/#6","title":"6. \uc624\ub958 \ub85c\uae45: \uc6b0\uc8fc\uc120\uc758 \ube14\ub799\ubc15\uc2a4","text":"<p><code>config/logging.php</code>\uc758 \ub85c\uae45 \uc124\uc815: <pre><code>&lt;?php\n'channels' =&gt; [\n    'space_api' =&gt; [\n        'driver' =&gt; 'daily',\n        'path' =&gt; storage_path('logs/space_api.log'),\n        'level' =&gt; 'error',\n        'days' =&gt; 14,\n    ],\n],\n</code></pre></p> <p>\ub85c\uadf8\uc5d0 \uae30\ub85d \ucd94\uac00: <pre><code>&lt;?php\ntry {\n    // \uc624\ub958 \uc704\ud5d8\uc774 \uc788\ub294 \ucf54\ub4dc\n} catch (Exception $e) {\n    Log::channel('space_api')-&gt;error('\ud589\uc131 \uc811\uadfc \uc624\ub958', [\n        'exception' =&gt; $e,\n        'request' =&gt; request()-&gt;all(),\n        'user_id' =&gt; auth()-&gt;id()\n    ]);\n    throw $e;\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/7/#_1","title":"\uc815\ub9ac \ud034\uc988","text":"<p>1. \"\ud589\uc131\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc74c\"\uc5d0 \ub300\ud55c HTTP \uc0c1\ud0dc:</p>  a) 400  b) 404  c) 500 <p>2. \uc804\uc5ed \uc624\ub958 \ucc98\ub9ac\ub97c \uc704\ud55c \ud074\ub798\uc2a4:</p>  a) Handler.php  b) ErrorController.php  c) Middleware/Error.php <p>3. \uc0ac\uc6a9\uc790 \uc815\uc758 \uc608\uc678\ub97c \uc0dd\uc131\ud558\ub294 \uba54\uc11c\ub4dc:</p>  a) php artisan make:exception  b) php artisan exception:create  c) php artisan generate:exception <p>4. API \uc624\ub958\uc758 \ubd84\ub9ac\ub41c \ub85c\uae45\uc744 \uc704\ud55c \ucc44\ub110:</p>  a) config/logging.php\uc5d0\uc11c \uc124\uc815  b) .env \ud30c\uc77c\uc758 \ub9e4\uac1c\ubcc0\uc218  c) \ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c \uc9c0\uc815 <p>5. \uc0ac\uc6a9\uc790 \uc815\uc758 \uc608\uc678\ub97c \uc0dd\uc131\ud558\ub294 \uc8fc\uc694 \uc774\uc810:</p>  a) \uc131\ub2a5 \ud5a5\uc0c1  b) \ud2b9\uc815 \ube44\uc988\ub2c8\uc2a4 \uc2dc\ub098\ub9ac\uc624\uc5d0 \ub300\ud55c \uc758\ubbf8\ub860\uc801\uc73c\ub85c \uc774\ud574\ud558\uae30 \uc26c\uc6b4 \uc624\ub958 \uc0dd\uc131  c) .env\uc5d0 \uc790\ub3d9 \ucd94\uac00 \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\uadc0\ud558\ub294 API\uc5d0 \uac15\ub825\ud55c \ubcf5\uad6c \uc2dc\uc2a4\ud15c\uc744 \uac16\ucd94\uc5c8\uc2b5\ub2c8\ub2e4:</p> <ul> <li>\ud83d\udedf \uc804\uc5ed \ud45c\uc900 \uc624\ub958 \uac00\ub85c\ucc44\uae30</li> <li>\ud83e\ude90 \uba85\ud655\ud55c \ucf54\ub4dc\ub97c \uac00\uc9c4 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc608\uc678</li> <li>\ud83d\udcdd \ubaa8\ub4e0 \uc624\ub958\uc5d0 \ub300\ud55c \ub2e8\uc77c JSON \ud615\uc2dd</li> <li>\ud83d\udd0d \uc0ac\uace0 \uc138\ubd80 \uc815\ubcf4\ub97c \ud3ec\ud568\ud55c \ub85c\uae45</li> <li>\ud83d\udce1 \ubaa8\ub2c8\ud130\ub9c1 \uc2dc\uc2a4\ud15c\uacfc\uc758 \ud1b5\ud569</li> </ul> <p>\uc6b0\uc8fc\uc120\uc774 \ube44\uc0c1 \uc0c1\ud669\uc5d0 \ub300\ube44\ub418\uc5c8\uc2b5\ub2c8\ub2e4! \uc774 \uc139\uc158\uc758 \ub9c8\uc9c0\ub9c9 \uc7a5\uc5d0\uc11c \ubaa8\ub4e0 \uc2dc\uc2a4\ud15c\uc744 \ud14c\uc2a4\ud2b8\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ol> <li><code>PlanetNotFoundException</code> \uc608\uc678 \uc0dd\uc131</li> <li><code>-&gt;withExceptions</code>\uc5d0 404 \uc624\ub958 \ucc98\ub9ac \ucd94\uac00</li> <li>\uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ud589\uc131\uc5d0 \ub300\ud55c \uc694\uccad \ud14c\uc2a4\ud2b8</li> </ol> <p>\u26a0\ufe0f \uc624\ub958\uac00 \uac00\ub85c\ucc44\uc9c0\uc9c0 \uc54a\ub294 \uacbd\uc6b0:</p> <ul> <li><code>is('api/*')</code>\uac00 \uacbd\ub85c\uc640 \uc77c\uce58\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li><code>register()</code>\uc758 \ud578\ub4e4\ub7ec \uc21c\uc11c\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li>\uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc608\uc678\uc758 \uacbd\uc6b0 <code>throw new</code>\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624.</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/8/","title":"\uc81c2.8\uc7a5: API \ud14c\uc2a4\ud2b8","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 1\uc2dc\uac04</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/8/#1","title":"1. \uc65c \ud14c\uc2a4\ud2b8\uac00 \ud544\uc694\ud55c\uac00\uc694?","text":"<p>\uc6b0\uc8fc\uc120\uc744 \ub9cc\ub4e4\uc5c8\ub2e4\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. \ud654\uc131\uc73c\ub85c \ubcf4\ub0b4\uae30 \uc804\uc5d0 \uc9c0\uad6c\uc5d0\uc11c \uc218\ucc9c \ubc88\uc758 \uac80\uc0ac\ub97c \uc218\ud589\ud569\ub2c8\ub2e4. \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c\uc758 \ud14c\uc2a4\ud2b8\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\uc785\ub2c8\ub2e4. \ud14c\uc2a4\ud2b8\ub294:</p> <ul> <li>\uc790\uc2e0\uac10\uc744 \uc90d\ub2c8\ub2e4: \ucf54\ub4dc\ub97c \ubcc0\uacbd\ud560 \uc218 \uc788\uc73c\uba70, \ud14c\uc2a4\ud2b8\uac00 \ud1b5\uacfc\ud558\uba74 \uc544\ubb34\uac83\ub3c4 \uc190\uc0c1\uc2dc\ud0a4\uc9c0 \uc54a\uc558\ub2e4\ub294 \uc758\ubbf8\uc785\ub2c8\ub2e4.</li> <li>\uc2dc\uac04\uc744 \uc808\uc57d\ud569\ub2c8\ub2e4: \ubcc0\uacbd\ud560 \ub54c\ub9c8\ub2e4 Postman\uc5d0\uc11c \ubaa8\ub4e0 \uac83\uc744 \uc218\ub3d9\uc73c\ub85c \"\ud074\ub9ad\"\ud558\ub294 \ub300\uc2e0, \ub2e8\uc77c \uba85\ub839\uc744 \uc2e4\ud589\ud558\uba74 \uba87 \ucd08 \ub9cc\uc5d0 \ubaa8\ub4e0 \uac83\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4.</li> <li>\ubb38\uc11c \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4: \uc88b\uc740 \ud14c\uc2a4\ud2b8\ub294 API\uac00 \uc5b4\ub5bb\uac8c \uc791\ub3d9\ud574\uc57c \ud558\ub294\uc9c0 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/8/#2","title":"2. \ud14c\uc2a4\ud2b8 \"\uc2e4\ud5d8\uc2e4\" \uc124\uc815","text":"<p>Laravel\uc740 \ud14c\uc2a4\ud2b8 \uc124\uc815\uc744 \ub180\ub77c\uc6b8 \uc815\ub3c4\ub85c \uac04\ub2e8\ud558\uac8c \ub9cc\ub4ed\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc8fc \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub3c4\ub85d \ubcc4\ub3c4\uc758 \uad6c\uc131\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</p> <p>\ud14c\uc2a4\ud2b8\uc6a9 \ub370\uc774\ud130\ubca0\uc774\uc2a4: \uae30\ubcf8\uc801\uc73c\ub85c Laravel\uc740 \uba54\ubaa8\ub9ac \ub0b4 \ub370\uc774\ud130\ubca0\uc774\uc2a4(<code>:memory:</code>)\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub514\uc2a4\ud06c\uc5d0 \uc544\ubb34\uac83\ub3c4 \uc4f8 \ud544\uc694\uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uac00\uc7a5 \ube60\ub978 \ubc29\ubc95\uc785\ub2c8\ub2e4. \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub294 \ud14c\uc2a4\ud2b8 \uc804\uc5d0 \uc0dd\uc131\ub418\uace0 \ud14c\uc2a4\ud2b8 \ud6c4\uc5d0 \ud30c\uad34\ub429\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 \uc544\ubb34\uac83\ub3c4 \uc124\uc815\ud560 \ud544\uc694\uc870\ucc28 \uc5c6\uc2b5\ub2c8\ub2e4!</p> <p>\ud14c\uc2a4\ud2b8 \ud30c\uc77c \uc0dd\uc131: \ud589\uc131\uacfc \uad00\ub828\ub41c \ud14c\uc2a4\ud2b8\ub97c \uc704\ud55c \ud2b9\ubcc4\ud55c \ud30c\uc77c\uc744 \ub9cc\ub4e4\uc5b4 \ubd05\uc2dc\ub2e4.</p> <pre><code>php artisan make:test PlanetApiTest\n</code></pre> <p>\uc774 \uba85\ub839\uc740 <code>tests/Feature/PlanetApiTest.php</code> \ud30c\uc77c\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. <code>Feature</code>\ub77c\ub294 \ub2e8\uc5b4\ub294 \uc6b0\ub9ac\uac00 \uc804\uccb4 \uae30\ub2a5(\uc608: \"\uc0ac\uc6a9\uc790\uac00 \ud589\uc131\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\ub294\uac00?\")\uc744 \ud14c\uc2a4\ud2b8\ud558\uace0, \uac1c\ubcc4\uc801\uc778 \uc791\uc740 \ud074\ub798\uc2a4\ub97c \ud14c\uc2a4\ud2b8\ud558\ub294 \uac83\uc774 \uc544\ub2d8\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/8/#3","title":"3. \ud14c\uc2a4\ud2b8\uc758 \ud574\ubd80\ud559: \uc900\ube44, \uc2e4\ud589, \uac80\uc99d","text":"<p><code>tests/Feature/PlanetApiTest.php</code>\ub97c \uc5fd\ub2c8\ub2e4. \uadf8 \uc548\uc5d0 \uccab \ubc88\uc9f8 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud560 \uac83\uc785\ub2c8\ub2e4. \uc88b\uc740 \ud14c\uc2a4\ud2b8\ub294 \ud56d\uc0c1 \uc138 \ubd80\ubd84(Arrange, Act, Assert)\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4.</p> <p><pre><code>&lt;?php\n\nnamespace Tests\\Feature;\n\nuse App\\Models\\Planet; // \ubaa8\ub378\uc744 \uc784\ud3ec\ud2b8\ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase; // \uac00\uc7a5 \uc911\uc694\ud55c \ub3c4\uad6c!\nuse Tests\\TestCase;\n\nclass PlanetApiTest extends TestCase\n{\n    // \uc774 \ud2b8\ub808\uc774\ud2b8\ub294 \"\ub9c8\ubc95\ucc98\ub7fc\"\n    // \uac01 \ud14c\uc2a4\ud2b8 \uc804\uc5d0 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc815\ub9ac\ud558\uace0 \ub2e4\uc2dc \uc0dd\uc131\ud569\ub2c8\ub2e4.\n    // \uc774\ub294 \ud14c\uc2a4\ud2b8\ub4e4\uc774 \uc11c\ub85c \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub3c4\ub85d \ubcf4\uc7a5\ud569\ub2c8\ub2e4.\n    use RefreshDatabase;\n\n    /**\n     * \ud14c\uc2a4\ud2b8: \ud589\uc131 \ubaa9\ub85d\uc744 \uac00\uc838\uc624\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc62c\ubc14\ub974\uac8c \uc791\ub3d9\ud569\ub2c8\ub2e4.\n     * \ud14c\uc2a4\ud2b8 \uc774\ub984\uc740 \uc758\ubbf8\uac00 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4!\n     */\n    public function test_can_get_all_planets(): void\n    {\n        // 1. \uc900\ube44 (Arrange)\n        // \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uac00\uc9dc \ud589\uc131 3\uac1c\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4\n        // \uc774\uc804\uc5d0 \uc0dd\uc131\ud55c \ud329\ud1a0\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec.\n        Planet::factory()-&gt;count(3)-&gt;create();\n\n        // 2. \uc2e4\ud589 (Act)\n        // API\uc5d0 \uc2e4\uc81c GET \uc694\uccad\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4.\n        $response = $this-&gt;getJson('/api/planets');\n\n        // 3. \uac80\uc99d (Assert)\n        // \ubaa8\ub4e0 \uac83\uc774 \uc81c\ub300\ub85c \ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.\n        $response-&gt;assertStatus(200); // \uc11c\ubc84\uac00 \"200 OK\"\ub85c \uc751\ub2f5\ud588\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4\n        $response-&gt;assertJsonCount(3); // \uc751\ub2f5\uc5d0 \uc815\ud655\ud788 3\uac1c\uc758 \ud589\uc131\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4\n    }\n}\n</code></pre> \ud575\uc2ec \uc0ac\ud56d:</p> <ul> <li><code>use RefreshDatabase</code>: \uc774 \ud2b8\ub808\uc774\ud2b8\ub294 \ub2f9\uc2e0\uc758 \uac00\uc7a5 \uce5c\ud55c \uce5c\uad6c\uc785\ub2c8\ub2e4. \uac01 \ud14c\uc2a4\ud2b8\uac00 \"\uae68\ub057\ud55c \uc0c1\ud0dc\" \uc989, \ube44\uc5b4\uc788\ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub85c \uc2dc\uc791\ud558\ub3c4\ub85d \ubcf4\uc7a5\ud569\ub2c8\ub2e4.</li> <li><code>Planet::factory()</code>: \ud329\ud1a0\ub9ac\ub294 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\ub294 \ub370 \uc774\uc0c1\uc801\uc785\ub2c8\ub2e4.</li> <li><code>$this-&gt;getJson()</code>: \uc774\uac83\uc740 \ud14c\uc2a4\ud2b8 \ub0b4\uc5d0\uc11c API \uc694\uccad\uc744 \ubcf4\ub0b4\uae30 \uc704\ud55c Laravel\uc758 \ud2b9\ubcc4\ud55c \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4.</li> <li><code>assert...()</code>: \uc774\uac83\uc740 \"\uc5b4\uc124\uc158\" \ub610\ub294 \"\uac80\uc99d\"\uc785\ub2c8\ub2e4. \uc774\ub4e4 \uc911 \ud558\ub098\ub77c\ub3c4 \uc2e4\ud328\ud558\uba74 \ud14c\uc2a4\ud2b8\ub294 \ud1b5\uacfc\ud558\uc9c0 \ubabb\ud569\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/8/#4-crud","title":"4. \uc8fc\uc694 \uc791\uc5c5 (CRUD) \ud14c\uc2a4\ud2b8","text":"<p>\ud589\uc131\uc744 \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8 \ubc0f \uc0ad\uc81c\ud558\ub294 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud574 \ubd05\uc2dc\ub2e4.</p> <p>A. \ud589\uc131 \uc0dd\uc131 \ud14c\uc2a4\ud2b8 (POST)</p> <pre><code>&lt;?php\npublic function test_can_create_a_planet(): void\n{\n    // 1. \uc900\ube44: \uc0c8 \ud589\uc131 \ub370\uc774\ud130\ub97c \uc900\ube44\ud569\ub2c8\ub2e4\n    $planetData = [\n        'name' =&gt; 'Kepler-186f',\n        'description' =&gt; '\u041f\u0435\u0440\u0432\u0430\u044f \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c \u0441 \u0417\u0435\u043c\u043b\u044e \u0432 \u043e\u0431\u0438\u0442\u0430\u0435\u043c\u043e\u0439 \u0437\u043e\u043d\u0435.',\n        'size_km' =&gt; 14000,\n        'solar_system' =&gt; 'Kepler-186'\n    ];\n\n    // 2. \uc2e4\ud589: \ub370\uc774\ud130\uc640 \ud568\uaed8 POST \uc694\uccad\uc744 \ubcf4\ub0c5\ub2c8\ub2e4\n    $response = $this-&gt;postJson('/api/planets', $planetData);\n\n    // 3. \uac80\uc99d\n    $response-&gt;assertStatus(201); // \"201 Created\" \uc0c1\ud0dc\ub97c \uc608\uc0c1\ud569\ub2c8\ub2e4\n    $response-&gt;assertJsonFragment(['name' =&gt; 'Kepler-186f']); // \uc751\ub2f5\uc5d0 \uc0dd\uc131\ub41c \uc774\ub984\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4\n\n    // \uac00\uc7a5 \uc911\uc694\ud55c \uac80\uc99d: \ub370\uc774\ud130\uac00 \uc2e4\uc81c\ub85c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ub4e4\uc5b4\uac14\ub294\uac00?\n    $this-&gt;assertDatabaseHas('planets', [\n        'name' =&gt; 'Kepler-186f'\n    ]);\n}\n</code></pre> <p>B. \ud589\uc131 \uc0ad\uc81c \ud14c\uc2a4\ud2b8 (DELETE) <pre><code>&lt;?php\npublic function test_can_delete_a_planet(): void\n{\n    // 1. \uc900\ube44: \uc0ad\uc81c\ud560 \ud589\uc131\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4\n    $planet = Planet::factory()-&gt;create();\n\n    // 2. \uc2e4\ud589: DELETE \uc694\uccad\uc744 \ubcf4\ub0c5\ub2c8\ub2e4\n    $response = $this-&gt;deleteJson(\"/api/planets/{$planet-&gt;id}\");\n\n    // 3. \uac80\uc99d\n    $response-&gt;assertStatus(204); // \"204 No Content\"\ub97c \uc608\uc0c1\ud569\ub2c8\ub2e4 - \uc131\uacf5\uc801\uc778 \uc0ad\uc81c\n\n    // \ub808\ucf54\ub4dc\uac00 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc2e4\uc81c\ub85c \uc0ac\ub77c\uc84c\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4\n    $this-&gt;assertDatabaseMissing('planets', [\n        'id' =&gt; $planet-&gt;id\n    ]);\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/8/#5","title":"5. \"\uc798\ubabb\ub41c\" \uc2dc\ub098\ub9ac\uc624 \ud14c\uc2a4\ud2b8","text":"<p>\uc131\uacf5\uc801\uc778 \uacbd\uc6b0\ub97c \ud14c\uc2a4\ud2b8\ud558\ub294 \uac83\uc740 \uc88b\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc624\ub958\ub97c \ud14c\uc2a4\ud2b8\ud558\ub294 \uac83\uc774 \ud6e8\uc52c \ub354 \uc911\uc694\ud569\ub2c8\ub2e4!</p> <p>A. \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958 \ud14c\uc2a4\ud2b8 <pre><code>&lt;?php\npublic function test_creation_fails_with_invalid_data(): void\n{\n    // 2. \uc2e4\ud589: \uc758\ub3c4\uc801\uc73c\ub85c \uc798\ubabb\ub41c \ub370\uc774\ud130\ub97c \ubcf4\ub0c5\ub2c8\ub2e4\n    $response = $this-&gt;postJson('/api/planets', ['name' =&gt; '']); // \ube48 \uc774\ub984\n\n    // 3. \uac80\uc99d\n    $response-&gt;assertStatus(422); // \"422 Unprocessable Entity\"\ub97c \uc608\uc0c1\ud569\ub2c8\ub2e4\n    $response-&gt;assertJsonValidationErrors('name'); // 'name' \ud544\ub4dc\uc5d0 \uc624\ub958\uac00 \uc788\uc744 \uac83\uc73c\ub85c \uc608\uc0c1\ud569\ub2c8\ub2e4\n}\n</code></pre></p> <p>B. \"\ucc3e\uc744 \uc218 \uc5c6\uc74c\" (404) \ud14c\uc2a4\ud2b8 <pre><code>&lt;?php\npublic function test_returns_404_for_non_existent_planet(): void\n{\n    // 2. \uc2e4\ud589: \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 ID\ub85c \ud589\uc131\uc744 \uc694\uccad\ud569\ub2c8\ub2e4\n    $response = $this-&gt;getJson('/api/planets/99999');\n\n    // 3. \uac80\uc99d\n    $response-&gt;assertStatus(404); // \"404 Not Found\"\ub97c \uc608\uc0c1\ud569\ub2c8\ub2e4\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/8/#6","title":"6. \ud14c\uc2a4\ud2b8 \uc2e4\ud589","text":"<p>\uc774\uc81c \ud14c\uc2a4\ud2b8\uac00 \uc791\uc131\ub418\uc5c8\uc73c\ub2c8, \uc2e4\ud589\ud558\ub294 \uac83\uc740 \ub9e4\uc6b0 \uac04\ub2e8\ud569\ub2c8\ub2e4. \ud130\ubbf8\ub110\uc5d0\uc11c \ub2e4\uc74c\uc744 \uc2e4\ud589\ud558\uc138\uc694:</p> <pre><code>php artisan test\n</code></pre> <p>Laravel\uc740 \ubaa8\ub4e0 \ud14c\uc2a4\ud2b8\ub97c \ucc3e\uc544 \ud558\ub098\uc529 \uc2e4\ud589\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uac83\uc774 \uc131\uacf5\uc801\uc73c\ub85c \ud1b5\uacfc\ud558\uba74 \ub179\uc0c9 \ucd9c\ub825\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5b4\ub5a4 \ud14c\uc2a4\ud2b8\ub77c\ub3c4 \uc2e4\ud328\ud558\uba74 \uc624\ub958\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc124\uba85\uacfc \ud568\uaed8 \ube68\uac04\uc0c9 \ucd9c\ub825\uc774 \ud45c\uc2dc\ub418\uc5b4 \uc2e0\uc18d\ud558\uac8c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ud2b9\uc815 \ud30c\uc77c \ud558\ub098\ub9cc \uc2e4\ud589\ud558\ub824\uba74: <pre><code>php artisan test tests/Feature/PlanetApiTest.php\n</code></pre></p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/8/#8-code-coverage","title":"8. \ucf54\ub4dc \ucee4\ubc84\ub9ac\uc9c0 (Code Coverage)","text":"<p>\ub2e8\uacc4 1: Xdebug \uc124\uce58</p> <p>\ucf54\ub4dc \ucee4\ubc84\ub9ac\uc9c0 \uc815\ubcf4\ub97c \uc218\uc9d1\ud558\ub824\uba74 PHP \ud655\uc7a5\uc778 Xdebug\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.</p> <p>wizard\uc5d0 <code>php -i</code> \uacb0\uacfc\ub97c \ubcf4\ub0b4\uace0 \uc9c0\uce68\uc744 \ub530\ub974\uc138\uc694.</p> <p>\ub2e8\uacc4 2: <code>phpunit.xml</code> \uc124\uc815 <pre><code>&lt;phpunit ... &gt;\n    &lt;coverage processUncoveredFiles=\"true\"&gt;\n        &lt;include&gt;\n            &lt;directory suffix=\".php\"&gt;./app&lt;/directory&gt;\n        &lt;/include&gt;\n    &lt;/coverage&gt;\n&lt;/phpunit&gt;\n</code></pre></p> <p>\ub2e8\uacc4 3: \ubcf4\uace0\uc11c\uc640 \ud568\uaed8 \uc2e4\ud589 <pre><code>php artisan test --coverage-html=coverage\n</code></pre> \ubcf4\uace0\uc11c: \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c <code>coverage/index.html</code>\uc744 \uc5fd\ub2c8\ub2e4</p>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/8/#9-postman","title":"9. Postman\uacfc\uc758 \ud1b5\ud569","text":"<p>Newman\uc744 \ud1b5\ud55c \uc790\ub3d9\ud654:</p> <ol> <li>Postman \uceec\ub809\uc158\uc744 <code>tests/Postman/SpaceApi.postman_collection.json</code>\uc73c\ub85c \ub0b4\ubcf4\ub0c5\ub2c8\ub2e4</li> <li>Newman \uc124\uce58: <pre><code>npm install -g newman\n</code></pre></li> <li><code>composer.json</code>\uc5d0 \uc2a4\ud06c\ub9bd\ud2b8 \ucd94\uac00: <pre><code>\"scripts\": {\n    \"test:postman\": \"newman run tests/Postman/SpaceApi.postman_collection.json\"\n}\n</code></pre></li> <li>\uc2e4\ud589: <pre><code>composer test:postman\n</code></pre></li> </ol>"},{"location":"ko/%EC%A0%9C2%EC%9E%A5%20-%20Laravel%EC%9D%84%20%EC%82%AC%EC%9A%A9%ED%95%9C%20API%20%EC%83%9D%EC%84%B1/8/#_1","title":"\uac1c\ub150 \ud655\ub9bd\uc744 \uc704\ud55c \ud034\uc988","text":"<p>1. \ud14c\uc2a4\ud2b8 \ud074\ub798\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 \uba85\ub839\uc5b4:</p>  a) php artisan make:test  b) php artisan generate:test  c) php artisan test:create <p>2. RefreshDatabase \ud2b8\ub808\uc774\ud2b8\ub294 \ub2e4\uc74c \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4:</p>  a) \ud14c\uc2a4\ud2b8 \ud6c4 DB \uc815\ub9ac  b) DB\ub97c \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ub85c \ucc44\uc6b0\uae30  c) DB \uad6c\uc870 \uc0dd\uc131 <p>3. JSON \uad6c\uc870\ub97c \ud655\uc778\ud558\ub294 \uba54\uc11c\ub4dc:</p>  a) assertJsonFormat()  b) assertJsonStructure()  c) assertJsonSchema() <p>4. Laravel\uc5d0\uc11c \ud329\ud1a0\ub9ac\ub294 \ub2e4\uc74c \uc6a9\ub3c4\ub85c \ud544\uc694\ud569\ub2c8\ub2e4:</p>  a) \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \uc0dd\uc131  b) \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc0dd\uc131  c) \uc624\ub958 \ucc98\ub9ac <p>5. CLI\uc5d0\uc11c Postman \uceec\ub809\uc158\uc744 \uc2e4\ud589\ud558\ub294 \ub3c4\uad6c:</p>  a) Newman  b) Postman CLI  c) Artisan \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\uc0ac\uc804 \ube44\ud589 \ud14c\uc2a4\ud2b8\uc758 \uc804\uccb4 \uc8fc\uae30\ub97c \uc644\ub8cc\ud588\uc2b5\ub2c8\ub2e4! \uc774\uc81c \uadc0\ud558\uc758 API\ub294 \ub2e4\uc74c\uc744 \uc218\ud589\ud569\ub2c8\ub2e4:</p> <ul> <li>\u2705 \uc190\uc27d\uac8c \ud14c\uc2a4\ud2b8 \ud658\uacbd \uc124\uc815</li> <li>\ud83d\udee1\ufe0f \"\uc900\ube44-\uc2e4\ud589-\uac80\uc99d\" \uc6d0\uce59\uc5d0 \ub530\ub77c \ud14c\uc2a4\ud2b8 \uc791\uc131.</li> <li>\ud83d\udcca \uc131\uacf5\uc801\uc778 \uc2dc\ub098\ub9ac\uc624(CRUD)\uc640 \uc624\ub958(\uc720\ud6a8\uc131 \uac80\uc0ac, 404)\ub97c \ubaa8\ub450 \ud14c\uc2a4\ud2b8.</li> <li>\ud83d\udd01 \ub2e8\uc77c \uba85\ub839\uc5b4\ub85c \ud14c\uc2a4\ud2b8\ub97c \uc2e4\ud589\ud558\uace0 \ucf54\ub4dc\uc5d0 \ub300\ud55c \ud655\uc2e0\uc744 \uac00\uc9d0.</li> </ul> <p>\uc6b0\uc8fc\uc120 \ubc1c\uc0ac \uc900\ube44 \uc644\ub8cc! Laravel\uc5d0\uc11c API\ub97c \uc0dd\uc131\ud558\ub294 \uc139\uc158\uc744 \uc644\ub8cc\ud588\uc2b5\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ucd5c\uc885 \ud655\uc778:</p> <ol> <li><code>php artisan test</code>\ub97c \uc2e4\ud589\ud558\uc138\uc694.</li> <li>\ubaa8\ub4e0 \ud14c\uc2a4\ud2b8\uac00 \ud1b5\uacfc\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694 (\ucd08\ub85d\ubd88!).</li> <li>\ucf54\ub4dc \ucee4\ubc84\ub9ac\uc9c0 \ubcf4\uace0\uc11c\ub97c \ud655\uc778\ud558\uc138\uc694.</li> </ol> <p>\u26a0\ufe0f \ud14c\uc2a4\ud2b8\uac00 \uc2e4\ud328\ud560 \uacbd\uc6b0:</p> <ul> <li>Postman\uc744 \ud1b5\ud574 API \uc791\ub3d9\uc744 \ud655\uc778\ud558\uc138\uc694.</li> <li>\ud14c\uc2a4\ud2b8 DB\uac00 \uc124\uc815\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> <li><code>dd($response-&gt;content())</code>\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub514\ubc84\uae45\ud558\uc138\uc694.</li> </ul> <p>2\uc7a5 \uc644\ub8cc\ub97c \ucd95\ud558\ud569\ub2c8\ub2e4! API\ub97c \uc0dd\uc131\ud588\uc744 \ubfd0\ub9cc \uc544\ub2c8\ub77c, \ud5a5\ud6c4 \ubbf8\uc158\uc744 \uc704\ud55c \uc2e0\ub8b0\ud560 \uc218 \uc788\uace0 \uac80\uc99d\ub41c \"\uc6b0\uc8fc\uc120\"\uc744 \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4.</p> <p>\ud83c\udf0c \ub2e4\uc74c \ub2e8\uacc4:</p> <ol> <li>\uc778\uc99d \uc124\uc815 (Sanctum)</li> <li>Swagger\ub97c \uc0ac\uc6a9\ud55c API \ubb38\uc11c\ud654</li> <li>\uc11c\ubc84 \ubc30\ud3ec (Forge, VPS)</li> <li>Vue/React\ub85c \ud504\ub7f0\ud2b8\uc5d4\ub4dc \uc791\uc131</li> </ol> <p>\uc6b0\uc8fc \ubbf8\uc158\uc758 \uc131\uacf5\uc801\uc778 \ubc1c\uc0ac\ub97c \uae30\uc6d0\ud569\ub2c8\ub2e4! \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 API\ub97c \ucc98\uc74c\ubd80\ud130 \uc791\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4 \ud83d\ude80</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/1/","title":"3.1\uc7a5: FastAPI \uc124\uce58 \ubc0f \ud658\uacbd \uc124\uc815","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 45\ubd84</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/1/#1-fastapi-api","title":"1. FastAPI\ub780? API\ub97c \uc704\ud55c \ud558\uc774\ud37c\ub4dc\ub77c\uc774\ube0c","text":"<p>Flask\uac00 \uae30\ub3d9\uc131 \uc788\ub294 \uc815\ucc30\uc6a9 \ud0d0\uc0ac\uc120\uc774\uace0 Django\uac00 \uac70\ub300\ud55c \ud56d\uacf5\ubaa8\ud568\uc774\ub77c\uba74, FastAPI\ub294 \ucd08\uad11\uc18d \uc804\ud22c\uae30\uc785\ub2c8\ub2e4.</p> <p>FastAPI\ub294 Python 3.7+\uc5d0\uc11c API\ub97c \uad6c\ucd95\ud558\uae30 \uc704\ud55c \ud604\ub300\uc801\uc774\uace0 \uace0\uc131\ub2a5 \uc6f9 \ud504\ub808\uc784\uc6cc\ud06c\uc785\ub2c8\ub2e4. \uc8fc\uc694 \uc7a5\uc810\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:</p> <ul> <li>\uc18d\ub3c4: NodeJS \ubc0f Go\uc640 \ube44\uacac\ub420 \uc815\ub3c4\ub85c \uac00\uc7a5 \ube60\ub978 Python \ud504\ub808\uc784\uc6cc\ud06c \uc911 \ud558\ub098\uc785\ub2c8\ub2e4.</li> <li>\ub2e8\uc21c\uc131: \ubbf8\ub2c8\uba40\ud558\uace0 \uc9c1\uad00\uc801\uc778 \uad6c\ubb38\uc785\ub2c8\ub2e4.</li> <li>\uc790\ub3d9 \ubb38\uc11c\ud654: API\uc5d0 \ub300\ud55c \ub300\ud654\ud615 \ubb38\uc11c\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4.</li> <li>\ud0c0\uc785 \ud78c\ud2b8: \uc720\ud6a8\uc131 \uac80\uc0ac, \uc790\ub3d9 \uc644\uc131 \ubc0f \ubb38\uc11c\ud654\ub97c \uc704\ud574 \ud45c\uc900 Python \ud0c0\uc785 \ud78c\ud2b8\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>FastAPI\ub294 API \ud568\uc120\uc744 \uc704\ud55c \"\ud558\uc774\ud37c\ub4dc\ub77c\uc774\ube0c\"\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uc774 \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ub450 \uac00\uc9c0 \uae30\uc220\uc744 \uae30\ubc18\uc73c\ub85c \ud569\ub2c8\ub2e4:</p> <ul> <li>Starlette (\uc804\ud22c\uae30 \uae30\uccb4) \u2014 \ube44\ub3d9\uae30\uc2dd \ubc0f \ucd5c\uace0 \uc131\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.</li> <li>Pydantic (\uc628\ubcf4\ub4dc \ucef4\ud4e8\ud130) \u2014 \ub370\uc774\ud130 \uc720\ud6a8\uc131 \uac80\uc0ac \ubc0f \uc124\uc815 \uad00\ub9ac\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/1/#2","title":"2. \ubc1c\uc0ac\ub300 \uc900\ube44: \uac00\uc0c1 \ud658\uacbd","text":"<p>\uc804\ud22c\uae30\ub97c \uc81c\uc791\ud558\uae30 \uc804\uc5d0 \ubb34\uade0 \uc870\ub9bd \uc2e4\ud5d8\uc2e4\uc744 \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. Python\uc5d0\uc11c\ub294 \uc774\ub97c \uc704\ud574 \uac00\uc0c1 \ud658\uacbd\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</p> <p>\uc65c \ud544\uc694\ud560\uae4c\uc694? \ud504\ub85c\uc81d\ud2b8\uc758 \uc885\uc18d\uc131(\uc5d4\uc9c4, \ub0b4\ube44\uac8c\uc774\uc158 \uc2dc\uc2a4\ud15c)\uc774 \ucef4\ud4e8\ud130\uc758 \ub2e4\ub978 \ud504\ub85c\uc81d\ud2b8\uc640 \ucda9\ub3cc\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\uae30 \uc704\ud568\uc785\ub2c8\ub2e4.</p> <p>1\ub2e8\uacc4: \uac00\uc0c1 \ud658\uacbd \uc0dd\uc131 \ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354(\uc608: <code>C:\\Projects\\FastAPI_Fleet</code>)\uc5d0\uc11c \ud130\ubbf8\ub110\uc744 \uc5f4\uace0 \ub2e4\uc74c\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4:</p> <p><pre><code>python -m venv venv\n</code></pre> \uc774 \uba85\ub839\uc740 \uaca9\ub9ac\ub41c Python \ubc84\uc804\uc774 \ud3ec\ud568\ub41c <code>venv</code> \ud3f4\ub354\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.</p> <p>2\ub2e8\uacc4: \uc2e4\ud5d8\uc2e4 \"\ubcf4\ud638\ub9c9\" \ud65c\uc131\ud654</p> <ul> <li>Windows (PowerShell):</li> </ul> <p><pre><code>.\\venv\\Scripts\\Activate.ps1\n</code></pre> (\uc624\ub958\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0 \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589\uc744 \ud5c8\uc6a9\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: <code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process</code>)</p> <ul> <li>Windows (CMD):</li> </ul> <pre><code>.\\venv\\Scripts\\activate.bat\n</code></pre> <ul> <li>macOS / Linux:</li> </ul> <p><pre><code>source venv/bin/activate\n</code></pre> \ud65c\uc131\ud654 \ud6c4 \ud130\ubbf8\ub110 \ub77c\uc778 \uc2dc\uc791 \ubd80\ubd84\uc5d0 <code>(venv)</code>\uac00 \ub098\ud0c0\ub0a9\ub2c8\ub2e4. \uc774\ub294 \uc5ec\ub7ec\ubd84\uc774 \uc2e4\ud5d8\uc2e4 \uc548\uc5d0 \uc788\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4!</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/1/#3-fastapi-uvicorn","title":"3. \uc5d4\uc9c4 \uc124\uce58: FastAPI \ubc0f Uvicorn","text":"<p>\uc774\uc81c \ub450 \uac00\uc9c0 \ud575\uc2ec \uad6c\uc131 \uc694\uc18c\ub97c \uc124\uce58\ud558\uaca0\uc2b5\ub2c8\ub2e4:</p> <ul> <li>fastapi: \ud504\ub808\uc784\uc6cc\ud06c \uc790\uccb4\uc785\ub2c8\ub2e4.</li> <li>uvicorn: \uc5d4\uc9c4\uc744 \"\uc2dc\ub3d9\"\ud560 \ubc88\uac1c\ucc98\ub7fc \ube60\ub978 ASGI \uc11c\ubc84\uc785\ub2c8\ub2e4.</li> </ul> <p>\ud65c\uc131\ud654\ub41c \ud658\uacbd\uc5d0\uc11c \ub2e4\uc74c\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4: <pre><code>pip install \"fastapi[all]\"\n</code></pre></p> <p>\ud83d\udca1 \uc65c <code>[all]</code>\uc77c\uae4c\uc694? \uc774\ub294 <code>fastapi</code>, <code>uvicorn</code> \ubc0f \ud5a5\ud6c4 \ubbf8\uc158\uc5d0 \uc720\uc6a9\ud560 \ub2e4\ub978 \uc720\uc6a9\ud55c \ud328\ud0a4\uc9c0(\uc608: \uc6f9 \uc18c\ucf13 \ubc0f Jinja2 \uc9c0\uc6d0\uc6a9)\ub97c \uc124\uce58\ud569\ub2c8\ub2e4.</p> <p>\uc124\uce58 \ud655\uc778: <pre><code>pip freeze\n</code></pre> \ubaa9\ub85d\uc5d0\uc11c <code>fastapi</code>, <code>pydantic</code>, <code>starlette</code>, <code>uvicorn</code> \ubc0f \uae30\ud0c0 \ud328\ud0a4\uc9c0\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/1/#4-mainpy","title":"4. \uccab \uc811\ucd09: <code>main.py</code> \ud30c\uc77c","text":"<p>\ud504\ub85c\uc81d\ud2b8 \ub8e8\ud2b8\uc5d0 <code>main.py</code> \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uc138\uc694. \uc774\uac83\uc774 API\uc758 \uc911\uc559 \uc81c\uc5b4\ud310\uc774 \ub420 \uac83\uc785\ub2c8\ub2e4.</p> <p><code>main.py</code>\uc5d0 \ub2e4\uc74c \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\uc138\uc694: <pre><code>from fastapi import FastAPI\n\n# \uc6b0\ub9ac \"\uc6b0\uc8fc\uc120\" API\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.\napp = FastAPI()\n\n# \uccab \ubc88\uc9f8 \"\ub3c4\ud0b9 \ub178\ub4dc\"(\uc5d4\ub4dc\ud3ec\uc778\ud2b8)\ub97c \uc815\uc758\ud569\ub2c8\ub2e4.\n# \uc774\ub294 \ub8e8\ud2b8 URL\uc785\ub2c8\ub2e4: /\n@app.get(\"/\")\ndef read_root():\n    \"\"\"\n    \uc774\uac83\uc740 \uc8fc \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0 \uc5f0\uacb0\ud558\ub294 \ubaa8\ub4e0 \uc0ac\ub78c\uc774 \ubcfc \uc218 \uc788\ub294\n    \uc6b0\uc8fc \uad00\uc81c \uc13c\ud130\uc758 \uba54\uc2dc\uc9c0\uc785\ub2c8\ub2e4.\n    \"\"\"\n    return {\"message\": \"\uc6b0\uc8fc \ud568\ub300 \uad00\uc81c \uc13c\ud130\uc5d0 \uc624\uc2e0 \uac83\uc744 \ud658\uc601\ud569\ub2c8\ub2e4!\"}\n</code></pre> - <code>@app.get(\"/\")</code>: \uc774\ub294 FastAPI\uc5d0\uac8c <code>read_root</code> \ud568\uc218\uac00 \ub8e8\ud2b8 URL(<code>/</code>)\uc5d0 \ub300\ud55c <code>GET</code> \uc694\uccad\uc744 \ucc98\ub9ac\ud574\uc57c \ud55c\ub2e4\uace0 \uc54c\ub824\uc8fc\ub294 \ub370\ucf54\ub808\uc774\ud130\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/1/#5","title":"5. \uc810\ud654! \uc11c\ubc84 \uc2e4\ud589","text":"<p>\uc774\uc81c \ud558\uc774\ud37c\ub4dc\ub77c\uc774\ube0c\ub97c \uc2e4\ud589\ud560 \uc2dc\uac04\uc785\ub2c8\ub2e4! \ud130\ubbf8\ub110(\ud65c\uc131\ud654\ub41c <code>venv</code> \uc0c1\ud0dc)\uc5d0\uc11c \ub2e4\uc74c\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4: <pre><code>uvicorn main:app --reload\n</code></pre> \uba85\ub839\uc5b4 \ud574\uc11d:</p> <ul> <li><code>uvicorn</code>: Uvicorn \uc11c\ubc84\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4.</li> <li><code>main</code>: <code>main.py</code> \ud30c\uc77c(<code>.py</code> \uc81c\uc678).</li> <li><code>app</code>: <code>main.py</code> \ub0b4\ubd80\uc5d0\uc11c \uc0dd\uc131\ub41c <code>app = FastAPI()</code> \uac1d\uccb4.</li> <li><code>--reload</code>: \"\uc790\ub3d9 \uc870\uc885\". \ucf54\ub4dc\uac00 \ubcc0\uacbd\ub420 \ub54c\ub9c8\ub2e4 \uc11c\ubc84\uac00 \uc790\ub3d9\uc73c\ub85c \ub2e4\uc2dc \uc2dc\uc791\ub429\ub2c8\ub2e4.</li> </ul> <p>\ud130\ubbf8\ub110 \uc608\uc0c1 \ucd9c\ub825: <pre><code>INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [12345]\nINFO:     Started server process [12346]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n</code></pre></p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/1/#6","title":"6. \uc6b0\uc8fc \uad00\uc81c \uc13c\ud130\uc640\uc758 \ud1b5\uc2e0 \ud655\uc778","text":"<p>\uc774\uc81c API\uac00 \uc628\ub77c\uc778 \uc0c1\ud0dc\uc774\uba70 <code>8000</code> \ud3ec\ud2b8\ub97c \uc218\uc2e0 \ub300\uae30\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4!</p> <p>1\ub2e8\uacc4: \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ud655\uc778</p> <p>\ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c <code>http://127.0.0.1:8000</code> \uc8fc\uc18c\ub97c \uc5fd\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4: <pre><code>{\n  \"message\": \"\uc6b0\uc8fc \ud568\ub300 \uad00\uc81c \uc13c\ud130\uc5d0 \uc624\uc2e0 \uac83\uc744 \ud658\uc601\ud569\ub2c8\ub2e4!\"\n}\n</code></pre></p> <p>2\ub2e8\uacc4: \ubbf8\ub798 \uc5ff\ubcf4\uae30 (\uc790\ub3d9 \ubb38\uc11c\ud654)</p> <p>FastAPI\ub294 \uc774\ubbf8 \ub450 \uac00\uc9c0 \uc120\ubb3c\uc744 \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c URL\uc744 \uc5fd\ub2c8\ub2e4:</p> <ul> <li><code>http://127.0.0.1:8000/docs</code>: \ub300\ud654\ud615 Swagger UI \ubb38\uc11c.</li> <li><code>http://127.0.0.1:8000/redoc</code>: \ub300\uccb4 ReDoc \ubb38\uc11c.</li> </ul> <p>\ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ubc14\ub85c \ud14c\uc2a4\ud2b8\ud560 \uc218 \uc788\ub294 \uccab \ubc88\uc9f8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ubcf4\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4!</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/1/#_1","title":"\ud655\uc778\uc744 \uc704\ud55c \ud034\uc988","text":"<p>1. FastAPI\ub294 ...\uc73c\ub85c \uc54c\ub824\uc838 \uc788\uc2b5\ub2c8\ub2e4.</p>  a) \ub290\ub9ac\uc9c0\ub9cc \uc548\uc815\uc801\uc778 \uc791\uc5c5  b) \ub192\uc740 \uc131\ub2a5\uacfc \uc18d\ub3c4  c) Microsoft \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc640\uc758 \ud1b5\ud569\ub9cc <p>2. \uac00\uc0c1 \ud658\uacbd(`venv`)\uc774 \uc65c \ud544\uc694\ud560\uae4c\uc694?</p>  a) Python \uc791\uc5c5 \uc18d\ub3c4 \ud5a5\uc0c1  b) \ud504\ub85c\uc81d\ud2b8 \uc885\uc18d\uc131 \uaca9\ub9ac  c) \ud14c\uc2a4\ud2b8 \uc790\ub3d9 \uc791\uc131 <p>3. \uc774 \uac15\uc758\uc5d0\uc11c FastAPI\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uc11c\ubc84\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) Apache  b) Gunicorn  c) Uvicorn <p>4. `uvicorn main:app --reload` \uba85\ub839\uc5b4\ub294 \ub2e4\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4:</p>  a) `main` \uac1d\uccb4\ub85c `app.py` \ud30c\uc77c \uc2e4\ud589  b) `main.py` \ud30c\uc77c\uc5d0\uc11c `app` \uac1d\uccb4\ub97c \uc2e4\ud589\ud558\uace0 \ubcc0\uacbd \uc2dc \ub2e4\uc2dc \uc2dc\uc791  c) \ucef4\ud4e8\ud130\ub97c \uc7ac\ubd80\ud305\ud558\uace0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2e4\ud589 <p>5. FastAPI\uc5d0\uc11c `@app.get(\"/\")` \ub370\ucf54\ub808\uc774\ud130\ub294 \ubb34\uc5c7\uc744 \ud569\ub2c8\uae4c?</p>  a) `app.py` \ud30c\uc77c\uc5d0\uc11c \ub370\uc774\ud130 \uac00\uc838\uc624\uae30  b) \uc678\ubd80 \uc11c\ubc84\uc5d0 GET \uc694\uccad \ubcf4\ub0b4\uae30  c) \ud568\uc218\ub97c \ub8e8\ud2b8 URL\uc5d0 \ub300\ud55c GET \uc694\uccad\uacfc \uc5f0\uacb0 \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\uc0c8\ub85c\uc6b4 API\uc758 \"\ud558\uc774\ud37c\ub4dc\ub77c\uc774\ube0c\"\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uc870\ub9bd\ud558\uace0 \uc2e4\ud589\ud588\uc2b5\ub2c8\ub2e4! \uc774\uc81c \ub2e4\uc74c\uc774 \uc788\uc2b5\ub2c8\ub2e4: - \ud83d\udee0\ufe0f \uaca9\ub9ac\ub41c \uac1c\ubc1c \ud658\uacbd (<code>venv</code>) - \ud83d\ude80 FastAPI \ubc0f Uvicorn \uc11c\ubc84 \uc124\uce58 \uc644\ub8cc - \ud83d\udef0\ufe0f \ub2e8\uc77c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub85c \uc791\ub3d9\ud558\ub294 API - \ud83d\udcca \uc790\ub3d9 \uc0dd\uc131\ub41c \ubb38\uc11c</p> <p>\ubaa8\ub4e0 \uc2dc\uc2a4\ud15c \uc815\uc0c1! \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \uc6b0\uc8fc\uc120 \ubaa9\ub85d\uc744 \ubc18\ud658\ud558\ub294 \uccab \ubc88\uc9f8 \uc644\uc804\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub9cc\ub4e4 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li>\ud130\ubbf8\ub110\uc5d0\uc11c <code>(venv)</code> \ud658\uacbd \ud65c\uc131\ud654\ub428</li> <li><code>uvicorn</code> \uc11c\ubc84 \uc624\ub958 \uc5c6\uc774 \uc2e4\ud589 \uc911</li> <li><code>http://127.0.0.1:8000/docs</code> \uc8fc\uc18c\uac00 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc5f4\ub9bc</li> </ul> <p>\u26a0\ufe0f \uc624\ub958 \ubc1c\uc0dd \uc2dc:</p> <ul> <li><code>command not found</code>: \uac00\uc0c1 \ud658\uacbd\uc744 \ud65c\uc131\ud654\ud588\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li><code>Port ... is already in use</code>: \ub2e4\ub978 \ud504\ub85c\uadf8\ub7a8\uc774 \ud3ec\ud2b8 8000\uc744 \uc0ac\uc6a9 \uc911\uc785\ub2c8\ub2e4. \ud574\ub2f9 \ud504\ub85c\uadf8\ub7a8\uc744 \uc911\uc9c0\ud558\uac70\ub098 \ub2e4\ub978 \ud3ec\ud2b8\uc5d0\uc11c uvicorn\uc744 \uc2e4\ud589\ud558\uc2ed\uc2dc\uc624: <code>uvicorn main:app --reload --port 8001</code>.</li> <li>PowerShell\uc5d0\uc11c <code>venv</code> \ud65c\uc131\ud654 \uc2dc \uc624\ub958: \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589 \uc815\ucc45\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> </ul>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/2/","title":"\uc81c3.2\uc7a5: \uccab API \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc0dd\uc131","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 30\ubd84</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/2/#1","title":"1. \uc5d4\ub4dc\ud3ec\uc778\ud2b8: \ub370\uc774\ud130 \ub3c4\ud0b9 \ud3ec\ud2b8","text":"<p>\uc6b0\ub9ac API\uac00 \uc6b0\uc8fc \uc815\uac70\uc7a5\uc774\ub77c\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. \uc5d4\ub4dc\ud3ec\uc778\ud2b8(\uc885\uc810)\ub294 \ud2b9\uc815 \uc720\ud615\uc758 \uc6b0\uc8fc\uc120\uc744 \uc704\ud574 \uc124\uacc4\ub41c \ud2b9\uc815 \ub3c4\ud0b9 \ud3ec\ud2b8\uc785\ub2c8\ub2e4.</p> <ul> <li>\ud3ec\ud2b8 <code>\u21161</code> \u2014 \ud654\ubb3c\uc120\uc6a9 (\ud589\uc131 \ub370\uc774\ud130).</li> <li>\ud3ec\ud2b8 <code>\u21162</code> \u2014 \ud0d0\uc0ac\uc120\uc6a9 (\uc784\ubb34 \ub370\uc774\ud130).</li> <li>\ud3ec\ud2b8 <code>\u21163</code> \u2014 \uc5ec\uac1d \uc154\ud2c0\uc6a9 (\uc6b0\uc8fc \ube44\ud589\uc0ac \ub370\uc774\ud130).</li> </ul> <p>\uac01 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \ud2b9\uc815 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \ud2b9\uc815 \uc791\uc5c5\uc744 \ub2f4\ub2f9\ud558\ub294 \uace0\uc720\ud55c URL\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720: <code>GET /spaceships</code> \u2014 \uc774\ub294 \"\uc9c0\uc0c1 \uad00\uc81c \uc13c\ud130 \u2192 \uc815\uac70\uc7a5: \ubaa8\ub4e0 \ub3c4\ud0b9\ub41c \uc6b0\uc8fc\uc120 \ubaa9\ub85d\uc744 \ubcf4\uace0\ud558\uc2ed\uc2dc\uc624\"\ub77c\ub294 \uba85\ub839\uc5b4\uc785\ub2c8\ub2e4. \uc774 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \ub9ac\uc18c\uc2a4 \uceec\ub809\uc158\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/2/#2","title":"2. \"\uc6b0\uc8fc \ud568\ub300\" \uc0dd\uc131","text":"<p>\uc544\uc9c1 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \uc5c6\uc73c\ubbc0\ub85c Python \ub515\uc154\ub108\ub9ac \ud615\ud0dc\uc758 \uac04\ub2e8\ud55c \uc6b0\uc8fc\uc120 \ubaa9\ub85d\uc73c\ub85c \"\uc2dc\ubbac\ub808\uc774\uc158\"\uc744 \ub9cc\ub4e4\uaca0\uc2b5\ub2c8\ub2e4.</p> <p><code>main.py</code>\ub97c \uc5f4\uace0 <code>app</code> \uc815\uc758 \uc55e\uc5d0 \ub2e4\uc74c \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\uc138\uc694: <pre><code># main.py\n\n# \ub2e8\uacc4 1: \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc2dc\ubbac\ub808\uc774\uc158 \uc0dd\uc131\ndb_spaceships = {\n    1: {\n        \"name\": \"Voyager-1\",\n        \"type\": \"\ud0d0\uc0ac\uc120\",\n        \"launch_year\": 1977,\n        \"status\": \"\ud65c\uc131\"\n    },\n    2: {\n        \"name\": \"Hubble Space Telescope\",\n        \"type\": \"\ub9dd\uc6d0\uacbd\",\n        \"launch_year\": 1990,\n        \"status\": \"\ud65c\uc131\"\n    },\n    3: {\n        \"name\": \"ISS\",\n        \"type\": \"\uc815\uac70\uc7a5\",\n        \"launch_year\": 1998,\n        \"status\": \"\uada4\ub3c4\"\n    }\n}\n\n# ... \uc5ec\uae30\uc5d0 app = FastAPI() \ucf54\ub4dc ...\n</code></pre> \uc774\uac83\uc774 \uc6b0\ub9ac\uac00 \uc791\uc5c5\ud560 \"\uc6b0\uc8fc\uc120 \ub4f1\ub85d\ubd80\"\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/2/#3","title":"3. \uccab \ubc88\uc9f8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8: \uc6b0\uc8fc\uc120 \ubaa9\ub85d","text":"<p>\uc774\uc81c \uc6b0\ub9ac \ud568\ub300 \uc804\uccb4\ub97c \ubc18\ud658\ud558\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub9cc\ub4e4\uaca0\uc2b5\ub2c8\ub2e4.</p> <p><code>main.py</code>\uc758 <code>@app.get(\"/\")</code> \ub2e4\uc74c\uc5d0 \ub2e4\uc74c \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\uc138\uc694: <pre><code># main.py\n\n# ... db_spaceships, FastAPI, app \ubc0f read_root() \ucf54\ub4dc ...\n\n@app.get(\"/spaceships\")\ndef get_spaceships():\n    \"\"\"\n    \ub4f1\ub85d\ub41c \ubaa8\ub4e0 \uc6b0\uc8fc\uc120 \ubaa9\ub85d\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.\n    \"\"\"\n    return db_spaceships\n</code></pre></p> <ul> <li><code>@app.get(\"/spaceships\")</code>: \uc0c8 \uacbd\ub85c\ub97c \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c <code>/spaceships</code> URL\uc5d0 \ub300\ud55c <code>GET</code> \uc694\uccad\uc740 <code>get_spaceships</code> \ud568\uc218\uc5d0 \uc758\ud574 \ucc98\ub9ac\ub429\ub2c8\ub2e4.</li> <li><code>return db_spaceships</code>: FastAPI\ub294 Python \ub515\uc154\ub108\ub9ac\ub97c \uc720\ud6a8\ud55c JSON \uc751\ub2f5\uc73c\ub85c \uc790\ub3d9 \ubcc0\ud658\ud569\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/2/#4","title":"4. \uc0c8 \ub3c4\ud0b9 \ud3ec\ud2b8 \uc791\ub3d9 \ud655\uc778","text":"<p>\ub9cc\uc57d <code>uvicorn</code> \uc11c\ubc84\uac00 <code>--reload</code> \ud50c\ub798\uadf8\uc640 \ud568\uaed8 \uc5ec\uc804\ud788 \uc2e4\ud589 \uc911\uc774\ub77c\uba74, \uc774\ubbf8 \uc7ac\ub85c\ub4dc\ub418\uc5b4 \uc791\ub3d9 \uc900\ube44\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \ub2e4\uc2dc \uc2dc\uc791\ud558\uc2ed\uc2dc\uc624: <pre><code>uvicorn main:app --reload\n</code></pre></p> <p>\ub2e8\uacc4 1: \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ud655\uc778</p> <p>\ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c <code>http://127.0.0.1:8000/spaceships</code> \uc8fc\uc18c\ub97c \uc5fd\ub2c8\ub2e4. JSON \ud615\uc2dd\uc73c\ub85c \uc6b0\uc8fc\uc120 \uc804\uccb4 \ubaa9\ub85d\uc774 \ud45c\uc2dc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4: <pre><code>{\n  \"1\": {\n    \"name\": \"Voyager-1\",\n    \"type\": \"\u0417\u043e\u043d\u0434\",\n    \"launch_year\": 1977,\n    \"status\": \"\u0410\u043a\u0442\u0438\u0432\u0435\u043d\"\n  },\n  \"2\": {\n    \"name\": \"Hubble Space Telescope\",\n    \"type\": \"\u0422\u0435\u043b\u0435\u0441\u043a\u043e\u043f\",\n    \"launch_year\": 1990,\n    \"status\": \"\u0410\u043a\u0442\u0438\u0432\u0435\u043d\"\n  },\n  \"3\": {\n    \"name\": \"ISS\",\n    \"type\": \"\u0421\u0442\u0430\u043d\u0446\u0438\u044f\",\n    \"launch_year\": 1998,\n    \"status\": \"\u041d\u0430 \u043e\u0440\u0431\u0438\u0442\u0435\"\n  }\n}\n</code></pre></p> <p>\ub2e8\uacc4 2: \uc790\ub3d9 \ubb38\uc11c\uc5d0\uc11c \ud655\uc778</p> <p><code>http://127.0.0.1:8000/docs</code>\ub85c \uc774\ub3d9\ud558\uc138\uc694. \ubb38\uc11c\uc5d0 <code>GET /spaceships</code> \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub300\ud55c \uc0c8 \uc139\uc158\uc774 \ub098\ud0c0\ub09c \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \"Try it out\"\uc744 \ud074\ub9ad\ud558\uace0 \"Execute\"\ub97c \ub20c\ub7ec \uac70\uae30\uc11c \ubc14\ub85c \ud14c\uc2a4\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4!</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/2/#5","title":"5. \ub9e4\uac1c\ubcc0\uc218\uac00 \uc788\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8: \ud2b9\uc815 \uc6b0\uc8fc\uc120 \ub370\uc774\ud130","text":"<p>\"\ubcf4\uc774\uc800-1\"\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub9cc \ud544\uc694\ud558\ub2e4\uba74 \uc5b4\ub5a8\uae4c\uc694? \uc774\ub97c \uc704\ud574 \uacbd\ub85c \ub9e4\uac1c\ubcc0\uc218(path parameter)\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub9cc\ub4e4\uaca0\uc2b5\ub2c8\ub2e4.</p> <p><code>main.py</code>\uc5d0 \ub2e4\uc74c \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\uc138\uc694: <pre><code># main.py\n\n# ... \ub098\uba38\uc9c0 \ucf54\ub4dc ...\n\n@app.get(\"/spaceships/{ship_id}\")\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    ID\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \uc6b0\uc8fc\uc120\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.\n    \"\"\"\n    return db_spaceships.get(ship_id)\n</code></pre></p> <ul> <li><code>\"/spaceships/{ship_id}\"</code>: \uc911\uad04\ud638 <code>{}</code>\ub294 <code>ship_id</code>\uac00 URL\uc5d0\uc11c \uc804\ub2ec\ub420 \ubcc0\uc218\uc784\uc744 FastAPI\uc5d0 \uc54c\ub824\uc90d\ub2c8\ub2e4.</li> <li><code>ship_id: int</code>: \uc774\uac83\uc740 \ud0c0\uc785 \ud78c\ud2b8(type hint)\uc785\ub2c8\ub2e4. FastAPI\ub294 \uc804\ub2ec\ub41c ID\uac00 \uc815\uc218\uc778\uc9c0 \uc790\ub3d9\uc73c\ub85c \ud655\uc778\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ub204\uad70\uac00 <code>/spaceships/voyager</code>\ub97c \uc694\uccad\ud558\uba74, FastAPI\ub294 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958 <code>422 Unprocessable Entity</code>\ub97c \ubc18\ud658\ud560 \uac83\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 \ub9c8\ubc95\uc785\ub2c8\ub2e4!</li> </ul> <p>\ud655\uc778:</p> <p><code>http://127.0.0.1:8000/spaceships/2</code>\ub97c \uc5fd\ub2c8\ub2e4. \"\ud5c8\ube14\" \ub9dd\uc6d0\uacbd\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub9cc \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d <code>http://127.0.0.1:8000/spaceships/99</code>\ub97c \uc5f4\uba74, \ud574\ub2f9 \uc6b0\uc8fc\uc120\uc774 \uc5c6\uc73c\ubbc0\ub85c <code>null</code>\uc744 \ubc1b\uac8c \ub429\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/2/#_1","title":"\uc815\ub9ac \ud034\uc988","text":"<p>1. API\uc758 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294...</p>  a) \uc6b0\uc8fc\uc758 \uc885\uc810  b) \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \ud2b9\uc815 \uc791\uc5c5\uc744 \uc704\ud55c \uace0\uc720 URL  c) \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc774\ub984 <p>2. `@app.get(\"/users\")` \ub370\ucf54\ub808\uc774\ud130\ub294 \ubb34\uc5c7\uc744 \ud569\ub2c8\uae4c?</p>  a) \uc0c8 \uc0ac\uc6a9\uc790 \uc0dd\uc131  b) \ud568\uc218\ub97c `/users`\uc5d0 \ub300\ud55c GET \uc694\uccad\uacfc \uc5f0\uacb0  c) \ubaa8\ub4e0 \ub370\ucf54\ub808\uc774\ud130 \ubaa9\ub85d \uac00\uc838\uc624\uae30 <p>3. \uacbd\ub85c\uc5d0 `\"/items/{item_id}\"`\ub77c\ub294 \ud45c\uc2dc\ub294 \ubb34\uc5c7\uc744 \uc758\ubbf8\ud569\ub2c8\uae4c?</p>  a) `{item_id}`\ub77c\ub294 \uc774\ub984\uc758 \ud3f4\ub354\ub97c \ucc3e\uc544\uc57c \ud55c\ub2e4\ub294 \uac83  b) `item_id`\uac00 URL\uc5d0\uc11c \uac00\uc838\uc62c \ub9e4\uac1c\ubcc0\uc218\ub77c\ub294 \uac83  c) \ubb34\uc2dc\ub420 \uc8fc\uc11d <p>4. \ud568\uc218\uc5d0 `ship_id: int` \ud0c0\uc785 \ud78c\ud2b8\uac00 \ud544\uc694\ud55c \uc774\uc720\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) Python\uc744 \ub354 \ube60\ub974\uac8c \uc2e4\ud589\ud558\uae30 \uc704\ud574  b) FastAPI\uac00 ID\uac00 \uc22b\uc790\uc778\uc9c0 \uc790\ub3d9\uc73c\ub85c \uc720\ud6a8\uc131 \uac80\uc0ac\ud558\ub3c4\ub85d \ud558\uae30 \uc704\ud574  c) \ubcc0\uc218\uac00 \ud568\uc218 \uc678\ubd80\uc5d0\uc11c \ubcf4\uc774\ub3c4\ub85d \ud558\uae30 \uc704\ud574 <p>5. `/spaceships/abc`\ub97c \uc694\uccad\ud588\ub294\ub370 FastAPI\uac00 `int`\ub97c \uc608\uc0c1\ud55c\ub2e4\uba74 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?</p>  a) \uc11c\ubc84\uac00 500 \uc624\ub958\uc640 \ud568\uaed8 \"\ub2e4\uc6b4\"\ub429\ub2c8\ub2e4.  b) FastAPI\uac00 422 \uc624\ub958\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.  c) FastAPI\uac00 \"abc\"\ub97c \uc22b\uc790\ub85c \ubcc0\ud658\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>API \uc6b0\uc8fc \uc815\uac70\uc7a5\uc5d0 \ub450 \uac1c\uc758 \"\ub3c4\ud0b9 \ud3ec\ud2b8\"\ub97c \uc131\uacf5\uc801\uc73c\ub85c \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4:</p> <ul> <li>\ud83d\udef0\ufe0f \ubaa8\ub4e0 \uc6b0\uc8fc\uc120 \ubaa9\ub85d\uc744 \uac00\uc838\uc624\ub294 \ud3ec\ud2b8 (<code>/spaceships</code>)</li> <li>\ud83d\udd2d \ud2b9\uc815 \uc6b0\uc8fc\uc120\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub294 \ud3ec\ud2b8 (<code>/spaceships/{ship_id}</code>)</li> </ul> <p>\ub610\ud55c FastAPI\uc758 \uc790\ub3d9 \ud0c0\uc785 \uc720\ud6a8\uc131 \uac80\uc0ac\uc758 \uac15\ub825\ud568\uc744 \ud655\uc778\ud588\uc73c\uba70, \uc774\ub294 API\ub97c \uc798\ubabb\ub41c \uc694\uccad\uc73c\ub85c\ubd80\ud130 \ubcf4\ud638\ud569\ub2c8\ub2e4.</p> <p>\ub0b4\ube44\uac8c\uc774\uc158 \uc2dc\uc2a4\ud15c\uc774 \uc124\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4! \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 Pydantic\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6b0\ub9ac \uc6b0\uc8fc\uc120\uc758 \"\uccad\uc0ac\uc9c4\"\uc744 \ub9cc\ub4e4\uc5b4 API\ub97c \ub354\uc6b1 \uc2a4\ub9c8\ud2b8\ud558\uace0 \uacac\uace0\ud558\uac8c \ub9cc\ub4e4 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778: - <code>uvicorn</code> \uc11c\ubc84\uac00 \uc2e4\ud589 \uc911\uc774\uba70 \uc791\ub3d9\ud569\ub2c8\ub2e4. - URL <code>http://127.0.0.1:8000/spaceships</code>\uac00 \uc6b0\uc8fc\uc120 \ubaa9\ub85d\uc774 \ud3ec\ud568\ub41c JSON\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. - URL <code>http://127.0.0.1:8000/spaceships/1</code>\uac00 \"\ubcf4\uc774\uc800-1\ud638\"\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. - URL <code>http://127.0.0.1:8000/docs</code>\uac00 \ub450 \uac1c\uc758 \uc0c8\ub85c\uc6b4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.</p> <p>\u26a0\ufe0f \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uba74:</p> <ul> <li>404 Not Found: \ube0c\ub77c\uc6b0\uc800\uc640 <code>@app.get(...)</code> \ub370\ucf54\ub808\uc774\ud130\uc5d0\uc11c URL\uc774 \uc62c\ubc14\ub974\uac8c \uc785\ub825\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> <li>\ucf54\ub4dc \uc624\ub958: \uad6c\ubb38, \ud2b9\ud788 Python\uc758 \ub4e4\uc5ec\uc4f0\uae30\uc640 \ub515\uc154\ub108\ub9ac\uc758 \uc27c\ud45c\ub97c \uc8fc\uc758 \uae4a\uac8c \ud655\uc778\ud558\uc138\uc694.</li> </ul>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/3/","title":"3.3\uc7a5: Pydantic\uc744 \uc0ac\uc6a9\ud55c \ub370\uc774\ud130 \ubaa8\ub378","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 50\ubd84</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/3/#1-pydantic","title":"1. Pydantic: \uc6b0\uc8fc\uc120\uc758 \"\ub514\uc9c0\ud138 \uccad\uc0ac\uc9c4\"","text":"<p>\uc6b0\uc8fc\uc120\uc744 \uad6c\ucd95\ud55c\ub2e4\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. \ubb34\uc791\uc815 \uae08\uc18d \uc870\uac01\ub4e4\uc744 \uc6a9\uc811\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \uc0c1\uc138\ud55c \uccad\uc0ac\uc9c4\uc774 \ud544\uc694\ud569\ub2c8\ub2e4:</p> <ul> <li>\uc120\ubc15\uba85 (\ud0c0\uc785: <code>\ubb38\uc790\uc5f4</code>, \ucd5c\ub300 \uae38\uc774: 50 \ubb38\uc790)</li> <li>\ubc1c\uc0ac \uc5f0\ub3c4 (\ud0c0\uc785: <code>\uc815\uc218</code>)</li> <li>\ucd08\uad11\uc18d \uc5d4\uc9c4 \uc5ec\ubd80 (\ud0c0\uc785: <code>\ubd80\uc6b8</code>)</li> </ul> <p>Pydantic\uc740 Python\uc5d0\uc11c \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc774\ub7ec\ud55c \"\ub514\uc9c0\ud138 \uccad\uc0ac\uc9c4\"\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc785\ub2c8\ub2e4. FastAPI\uc5d0\uc11c\ub294 \uc138 \uac00\uc9c0 \uc8fc\uc694 \uae30\ub2a5\uc744 \uc218\ud589\ud569\ub2c8\ub2e4:</p> <ol> <li>\uad6c\uc870 \uc120\uc5b8: \ub370\uc774\ud130\uac00 \uc5b4\ub5a4 \ud544\ub4dc\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub294\uc9c0 \uba85\ud655\ud558\uac8c \uc124\uba85\ud569\ub2c8\ub2e4.</li> <li>\ub370\uc774\ud130 \uc720\ud6a8\uc131 \uac80\uc0ac: \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\uac00 \uccad\uc0ac\uc9c4\uc5d0 \uc77c\uce58\ud558\ub294\uc9c0 \uc790\ub3d9\uc73c\ub85c \ud655\uc778\ud569\ub2c8\ub2e4.</li> <li>\ubb38\uc11c\ud654: FastAPI\ub294 \uc774 \uccad\uc0ac\uc9c4\ub4e4\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc0c1\uc138\ud558\uace0 \uc778\ud130\ub799\ud2f0\ube0c\ud55c \ubb38\uc11c\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.</li> </ol> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720: Pydantic \ubaa8\ub378\uc740 \uac1d\uccb4\uc758 \uae30\uc220 \uc0ac\uc591\uc11c\uc785\ub2c8\ub2e4. \uc2a4\ud14c\uc774\uc158\uc5d0 \ub3c4\ucc29\ud558\ub294 \ubaa8\ub4e0 \"\ud654\ubb3c\"(\ub370\uc774\ud130)\uc740 \uc0ac\uc591\uc11c\uc758 \uc0ac\uc591\uacfc \uc77c\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc628\ubcf4\ub4dc \ucef4\ud4e8\ud130(Pydantic)\uac00 \uc774\ub97c \uac70\ubd80\ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/3/#2-spaceship","title":"2. \uccab \ubc88\uc9f8 \uccad\uc0ac\uc9c4 \uc0dd\uc131: <code>Spaceship</code> \ubaa8\ub378","text":"<p>\uc774\uc81c \uc6b0\ub9ac \uc6b0\uc8fc\uc120\uc744 \uc124\uba85\ud560 \ubaa8\ub378\uc744 \ub9cc\ub4e4\uc5b4 \ubd05\uc2dc\ub2e4.</p> <p>1\ub2e8\uacc4: Pydantic\uc5d0\uc11c <code>BaseModel</code> \uc784\ud3ec\ud2b8 Pydantic\uc740 <code>fastapi[all]</code>\uacfc \ud568\uaed8 \uc774\ubbf8 \uc124\uce58\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \ubaa8\ub378\uc758 \uae30\ubcf8 \ud074\ub798\uc2a4\ub9cc \uc784\ud3ec\ud2b8\ud558\uba74 \ub429\ub2c8\ub2e4.</p> <p><code>main.py</code>\uc758 \ub9e8 \uc704\uc5d0 \ub2e4\ub978 \uc784\ud3ec\ud2b8 \uc606\uc5d0 \ub2e4\uc74c\uc744 \ucd94\uac00\ud558\uc138\uc694: <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n</code></pre></p> <p>2\ub2e8\uacc4: <code>Spaceship</code> \ubaa8\ub378 \uc124\uba85 <code>BaseModel</code>\ub85c\ubd80\ud130 \uc0c1\uc18d\ubc1b\ub294 \ud074\ub798\uc2a4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \ud074\ub798\uc2a4 \ub0b4\ubd80\uc5d0 \ud45c\uc900 Python \ud0c0\uc785 \ud78c\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud544\ub4dc\uc640 \uadf8 \ud0c0\uc785\uc744 \uc815\uc758\ud569\ub2c8\ub2e4.</p> <p><code>main.py</code>\uc5d0 \ub2e4\uc74c \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\uc138\uc694 (\uc784\ud3ec\ud2b8 \ud6c4\uc5d0 \ucd94\uac00 \uac00\ub2a5): <pre><code>class Spaceship(BaseModel):\n    \"\"\"\n    \uc6b0\uc8fc\uc120\uc758 \uae30\uc220 \uc0ac\uc591\uc11c(\ubaa8\ub378).\n    \"\"\"\n    name: str\n    type: str\n    launch_year: int\n    status: str\n</code></pre> \uc774\uac83\uc73c\ub85c \ub05d\uc785\ub2c8\ub2e4! \ubc29\uae08 \"\uccad\uc0ac\uc9c4\"\uc744 \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4. Pydantic\uc740 \uc774\uc81c <code>Spaceship</code> \ud0c0\uc785\uc758 \ubaa8\ub4e0 \uac1d\uccb4\ub294 \uc9c0\uc815\ub41c \ud0c0\uc785\uc758 \ub124 \uac00\uc9c0 \ud544\ub4dc\ub97c \uac00\uc838\uc57c \ud55c\ub2e4\ub294 \uac83\uc744 \uc54c\uace0 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/3/#3","title":"3. \ubaa8\ub378 \uc801\uc6a9: \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uac1c\uc120","text":"<p>\uc774\uc81c \uc0c8 \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uc5ec API\ub97c \"\ub354 \uc2a4\ub9c8\ud2b8\ud558\uac8c\" \ub9cc\ub4e4\uc5b4 \ubd05\uc2dc\ub2e4.</p> <p>A. \uc751\ub2f5 \ubaa8\ub378\ub85c\uc11c\uc758 \ubaa8\ub378 (Response Model) FastAPI\uc5d0 \uc6b0\ub9ac\uc758 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 <code>Spaceship</code> \ubaa8\ub378\uacfc \uc77c\uce58\ud558\ub294 \ub370\uc774\ud130\ub97c \ubc18\ud658\ud574\uc57c \ud55c\ub2e4\uace0 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc751\ub2f5\uc774 \ud56d\uc0c1 \uc62c\ubc14\ub978 \uad6c\uc870\ub97c \uac00\uc9c8 \uac83\uc774\ub77c\ub294 \uc810\uc744 \ubcf4\uc7a5\ud569\ub2c8\ub2e4.</p> <p><code>/spaceships/{ship_id}</code> \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub2e4\uc74c\uacfc \uac19\uc774 \ubcc0\uacbd\ud558\uc138\uc694: <pre><code># main.py\n\n# ... db_spaceships \ubc0f Spaceship \ubaa8\ub378 \ucf54\ub4dc ...\n\n# `response_model`\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc751\ub2f5\uc758 \"\uccad\uc0ac\uc9c4\"\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4.\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    Spaceship \ubaa8\ub378\uacfc \uc77c\uce58\ud558\ub294 \uc120\ubc15 \ub370\uc774\ud130\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.\n    \"\"\"\n    ship = db_spaceships.get(ship_id)\n    return ship\n</code></pre> - <code>response_model=Spaceship</code>: \uc6b0\ub9ac\ub294 FastAPI\uc5d0 \ub9d0\ud569\ub2c8\ub2e4: \"\uc774 \ud568\uc218\uc758 \uc751\ub2f5\uc740 <code>Spaceship</code> \uad6c\uc870\uc640 \uc77c\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \ubd88\ud544\uc694\ud55c \ud544\ub4dc\ub97c \ud544\ud130\ub9c1\ud558\uace0 \ud0c0\uc785\uc774 \uc62c\ubc14\ub978\uc9c0 \ud655\uc778\ud574.\"</p> <p>\uc774\uac83\uc774 \uc81c\uacf5\ud558\ub294 \uac83\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p> <ul> <li>\ub370\uc774\ud130 \ud544\ud130\ub9c1: \ub9cc\uc57d <code>db_spaceships</code>\uc5d0 \ubd88\ud544\uc694\ud55c \ud544\ub4dc(\uc608: <code>\"secret_code\"</code>)\uac00 \uc788\uc5c8\ub2e4\uba74, \ucd5c\uc885 JSON\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc558\uc744 \uac83\uc785\ub2c8\ub2e4.</li> <li>\uad6c\uc870 \ubcf4\uc7a5: API \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \ud56d\uc0c1 \uc608\uc0c1\ub41c \ud615\uc2dd\uc73c\ub85c \uc751\ub2f5\uc744 \ubc1b\uc744 \uac83\uc774\ub77c\ub294 \uc810\uc744 \ud655\uc2e0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>\ubb38\uc11c\ud654: <code>/docs</code>\uc5d0\uc11c\ub294 \uc774\uc81c \uc815\ud655\ud55c \uc751\ub2f5 \uc608\uc2dc(Example Value)\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4.</li> </ul> <p>B. \uceec\ub809\uc158\uc744 \uc704\ud55c \ubaa8\ub378 \uc120\ubc15 \ubaa9\ub85d\uc744 \ubc18\ud658\ud558\ub294 <code>/spaceships</code> \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \uc5b4\ub5bb\uac8c \ub420\uae4c\uc694? \uc774\ub97c \uc704\ud574 <code>typing</code> \ubaa8\ub4c8\uc5d0\uc11c <code>list</code>\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4.</p> <p>\uc784\ud3ec\ud2b8\uc640 <code>/spaceships</code> \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ubcc0\uacbd\ud558\uc138\uc694: <pre><code># main.py \uc0c1\ub2e8\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom typing import List  # &lt;-- List \uc784\ud3ec\ud2b8\n\n# ... \ucf54\ub4dc ...\n\n# \uc751\ub2f5\uc774 Spaceship \ud0c0\uc785 \uac1d\uccb4\uc758 \ubaa9\ub85d(List)\uc784\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4.\n@app.get(\"/spaceships\", response_model=List[Spaceship])\ndef get_spaceships():\n    \"\"\"\n    \uc120\ubc15 \ubaa9\ub85d\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \ubaa9\ub85d\uc758 \uac01 \uc694\uc18c\ub294\n    Spaceship \ubaa8\ub378\uc5d0 \ub530\ub77c \uac80\uc0ac\ub429\ub2c8\ub2e4.\n    \"\"\"\n    # Pydantic\uc740 \ud0a4\uac00 ID\uc778 \ub515\uc154\ub108\ub9ac\uc640 \ud568\uaed8 \uc791\ub3d9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n    # \uc6b0\ub9ac\uc758 \ub515\uc154\ub108\ub9ac\ub97c \uac04\ub2e8\ud55c \ubaa9\ub85d\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.\n    return list(db_spaceships.values())\n</code></pre></p> <ul> <li><code>response_model=List[Spaceship]</code>: \uc6b0\ub9ac\ub294 \uc751\ub2f5\uc774 <code>Spaceship</code> \ubaa8\ub378\uacfc \uc77c\uce58\ud558\ub294 \uac1d\uccb4\ub85c \uad6c\uc131\ub41c \ubaa9\ub85d\uc784\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4.</li> <li><code>return list(db_spaceships.values())</code>: \uc911\uc694\ud55c \ubcc0\uacbd \uc0ac\ud56d\uc785\ub2c8\ub2e4! Pydantic\uc740 \ud0a4\uac00 ID\uc778 \ub515\uc154\ub108\ub9ac\uac00 \uc544\ub2cc, \ubc18\ubcf5 \uac00\ub2a5\ud55c \uac1d\uccb4(\ubaa9\ub85d)\ub97c \uc608\uc0c1\ud569\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \"DB \uc2dc\ubbac\ub808\uc774\ud130\"\uc758 \uac12\ub4e4\uc744 \ubaa9\ub85d\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/3/#4-api","title":"4. \uac1c\uc120\ub41c API \ud655\uc778","text":"<p><code>uvicorn</code> \uc11c\ubc84\uac00 <code>--reload</code> \uc635\uc158\uc73c\ub85c \uc2e4\ud589 \uc911\uc778\uc9c0 \ud655\uc778\ud558\uc138\uc694.</p> <ol> <li><code>http://127.0.0.1:8000/spaceships</code> \ud655\uc778\ud558\uc138\uc694: \uc774\uc81c \uc751\ub2f5\uc740 \uac1d\uccb4\uac00 \uc544\ub2cc JSON \ubc30\uc5f4\uc785\ub2c8\ub2e4. \uc774\ub294 \uceec\ub809\uc158\uc5d0 \ub300\ud574 \ub354 \uc62c\ubc14\ub974\uace0 \ud45c\uc900\uc801\uc778 \uad6c\uc870\uc785\ub2c8\ub2e4.     <pre><code>[\n  { \"name\": \"Voyager-1\", \"type\": \"\u0417\u043e\u043d\u0434\", ... },\n  { \"name\": \"Hubble Space Telescope\", ... }\n]\n</code></pre></li> <li><code>http://127.0.0.1:8000/spaceships/1</code> \ud655\uc778\ud558\uc138\uc694: \uc751\ub2f5\uc740 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc558\uc9c0\ub9cc, \uc774\uc81c \ubaa8\ub378\uc5d0 \ubcf4\uc7a5\ub41c \uc77c\uce58\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.</li> <li><code>/docs</code> \ud655\uc778\ud558\uc138\uc694: \ud398\uc774\uc9c0 \ud558\ub2e8\uc758 \"Schemas\" \uc139\uc158\uc5d0 <code>Spaceship</code> \ubaa8\ub378\uc774 \ub098\ud0c0\ub0ac\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \uc751\ub2f5 \uc608\uc2dc\uc5d0\ub294 \uc774\uc81c \uc544\ub984\ub2f5\uace0 \uad6c\uc870\ud654\ub41c \ub370\uc774\ud130 \uc2a4\ud0a4\ub9c8\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4.</li> </ol>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/3/#5","title":"5. \uace0\uae09 \uc720\ud6a8\uc131 \uac80\uc0ac: \"\uc628\ubcf4\ub4dc \ucef4\ud4e8\ud130\" \uc791\ub3d9 \uc911","text":"<p>Pydantic\uc740 \ub2e8\uc21c\ud788 \ud0c0\uc785\uc744 \ud655\uc778\ud558\ub294 \uac83\ubcf4\ub2e4 \ud6e8\uc52c \ub354 \ub9ce\uc740 \uac83\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p><code>Spaceship</code> \ubaa8\ub378\uc5d0 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \ucd94\uac00\ud574 \ubd05\uc2dc\ub2e4: <pre><code>from pydantic import BaseModel, Field\n\nclass Spaceship(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50, description=\"\uc120\ubc15\uba85\")\n    type: str\n    launch_year: int = Field(..., gt=1950, description=\"\ubc1c\uc0ac \uc5f0\ub3c4\ub294 1950\ub144 \uc774\ud6c4\uc5ec\uc57c \ud569\ub2c8\ub2e4.\")\n    status: str\n</code></pre></p> <ul> <li><code>Field(...)</code>: \ucd94\uac00 \uc720\ud6a8\uc131 \uac80\uc0ac \uaddc\uce59\uc744 \ucd94\uac00\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.</li> <li><code>...</code> (Ellipsis): \ud544\ub4dc\uac00 \ud544\uc218\uc784\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4.</li> <li><code>min_length</code>, <code>max_length</code>: \ubb38\uc790\uc5f4\uc5d0 \ub300\ud55c \uc81c\ud55c\uc785\ub2c8\ub2e4.</li> <li><code>gt</code>: \"Greater Than\" (\ucd08\uacfc).</li> </ul> <p>\uc544\uc9c1 \uc0c8 \uc120\ubc15\uc744 \uc0dd\uc131\ud558\uc9c0\ub294 \uc54a\uc9c0\ub9cc (\uc774\uac83\uc740 \ub2e4\uc74c \uc7a5\uc5d0\uc11c \ub2e4\ub8f0 \uac83\uc785\ub2c8\ub2e4), \uc774\ub7ec\ud55c \uaddc\uce59\uc740 \uc774\ubbf8 \ubb38\uc11c\uc5d0 \ubc18\uc601\ub420 \uac83\uc774\uace0 \uc6b0\ub9ac\uac00 <code>POST</code> \uc694\uccad\uc744 \uad6c\ud604\ud560 \ub54c \uc791\ub3d9\ud560 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/3/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. FastAPI\uc5d0\uc11c Pydantic\uc740 \ub2e4\uc74c \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4...</p>  a) \uc774\uba54\uc77c \uba54\uc2dc\uc9c0 \uc804\uc1a1  b) \ub370\uc774\ud130 \ubaa8\ub378\uc758 \uc120\uc5b8, \uc720\ud6a8\uc131 \uac80\uc0ac \ubc0f \ubb38\uc11c\ud654  c) \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc9c1\uc811 \uc5f0\uacb0 <p>2. \ub370\uc774\ud130 \ubaa8\ub378\uc744 \uc0dd\uc131\ud558\ub824\uba74 \ub2e4\uc74c \ud074\ub798\uc2a4\ub85c\ubd80\ud130 \uc0c1\uc18d\ubc1b\uc544\uc57c \ud569\ub2c8\ub2e4...</p>  a) `FastAPI`  b) `pydantic.Field`  c) `pydantic.BaseModel` <p>3. `@app.get` \ub370\ucf54\ub808\uc774\ud130\uc758 `response_model` \ub9e4\uac1c\ubcc0\uc218\ub294 \ub2e4\uc74c\uc744 \uc704\ud574 \ud544\uc694\ud569\ub2c8\ub2e4...</p>  a) \ub4e4\uc5b4\uc624\ub294 \uc694\uccad\uc5d0 \ub300\ud55c \ubaa8\ub378 \uc124\uc815  b) API \uc751\ub2f5\uc774 \uc5b4\ub5a4 \uad6c\uc870\ub97c \ub530\ub77c\uc57c \ud558\ub294\uc9c0 \uc9c0\uc815  c) \uc11c\ubc84 \uc751\ub2f5 \uc18d\ub3c4 \ud5a5\uc0c1 <p>4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 *\ubaa9\ub85d* \uac1d\uccb4 \ud0c0\uc785 `Item`\uc744 \ubc18\ud658\ud55c\ub2e4\uace0 \uc5b4\ub5bb\uac8c \uc9c0\uc815\ud569\ub2c8\uae4c?</p>  a) `response_model=Item[]`  b) `response_model=List[Item]` (typing\uc5d0\uc11c `List`\ub97c \uc784\ud3ec\ud2b8\ud558\uc5ec)  c) `response_model=(Item)` <p>5. Pydantic \ubaa8\ub378\uc5d0\uc11c `Field(..., gt=0)`\ub294 \ud544\ub4dc\uac00...</p>  a) \uc120\ud0dd \uc0ac\ud56d\uc774\uba70 0\uacfc \uac19\uc544\uc57c \ud568  b) \ud544\uc218\uc774\uba70 0\ubcf4\ub2e4 \ucee4\uc57c \ud568  c) \uc120\ud0dd \uc0ac\ud56d\uc774\uba70 `float` \ud0c0\uc785\uc784 \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>API \ub370\uc774\ud130\uc5d0 \ub300\ud55c \"\ub514\uc9c0\ud138 \uccad\uc0ac\uc9c4\"\uc744 \uc124\uacc4\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c \ub2e8\uc21c\ud788 \uc791\ub3d9\ud558\ub294 \uac83\uc744 \ub118\uc5b4, \uc608\uce21 \uac00\ub2a5\ud558\uace0 \uc548\uc815\uc801\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4.</p> <ul> <li>\ud83d\udcdd Pydantic\uc744 \uc0ac\uc6a9\ud558\uc5ec <code>Spaceship</code> \ubaa8\ub378\uc744 \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\ud83d\udee1\ufe0f \uc774\uc81c API\ub294 <code>response_model</code>\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub098\uac00\ub294 \ub370\uc774\ud130\ub97c \uac80\uc99d\ud558\uace0 \ud544\ud130\ub9c1\ud569\ub2c8\ub2e4.</li> <li>\ud83d\udcca \ubb38\uc11c\ub294 \uc815\ud655\ud55c \ub370\uc774\ud130 \uc2a4\ud0a4\ub9c8\ub97c \ubcf4\uc5ec\uc8fc\uba74\uc11c \ud6e8\uc52c \ub354 \uc720\uc775\ud574\uc84c\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\uccad\uc0ac\uc9c4\uc774 \uc900\ube44\ub418\uace0 \uc2b9\uc778\ub418\uc5c8\uc2b5\ub2c8\ub2e4! \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \ub370\uc774\ud130 \uc77d\uae30\uc5d0\uc11c \ub370\uc774\ud130 \uc0dd\uc131\uc73c\ub85c \ub118\uc5b4\uac08 \uac83\uc785\ub2c8\ub2e4. \uc6b0\ub9ac \ud568\ub300\ub97c \uc704\ud55c \uc644\uc804\ud55c CRUD \uc791\uc5c5\uc744 \uad6c\ud604\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li><code>/docs</code>\uc5d0 <code>Spaceship</code> \ubaa8\ub378 \uc2a4\ud0a4\ub9c8\uac00 \ub098\ud0c0\ub0ac\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li><code>/spaceships</code> \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc774\uc81c \uac1d\uccb4 (<code>{...}</code>)\uac00 \uc544\ub2cc JSON \ubc30\uc5f4 (<code>[...]</code>)\uc744 \ubc18\ud658\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li>\ubaa8\ub378 \ucd94\uac00 \ud6c4 \ucf54\ub4dc\uc5d0 \uad6c\ubb38 \uc624\ub958\uac00 \uc5c6\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> </ul> <p>\u26a0\ufe0f \uc624\ub958 \ubc1c\uc0dd \uc2dc:</p> <ul> <li><code>NameError: name 'BaseModel' is not defined</code>: <code>BaseModel</code>\uc744 <code>pydantic</code>\uc5d0\uc11c \uc784\ud3ec\ud2b8\ud588\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li><code>NameError: name 'List' is not defined</code>: <code>List</code>\ub97c <code>typing</code>\uc5d0\uc11c \uc784\ud3ec\ud2b8\ud588\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li><code>/spaceships</code>\uc5d0 \ub300\ud55c \uc751\ub2f5\uc774 \ube44\uc5b4 \uc788\uc74c (<code>[]</code>): <code>return db_spaceships</code>\ub97c <code>return list(db_spaceships.values())</code>\ub85c \ubcc0\uacbd\ud588\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. ```</li> </ul>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/4/","title":"\uc81c3\uc7a5 3.4: \uc6b0\uc8fc\uc120 CRUD \uc791\uc5c5","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 1\uc2dc\uac04</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/4/#1-crud","title":"1. CRUD: \uc6b0\uc8fc \uc784\ubb34 \uad00\ub9ac\uc758 \uc804\uccb4 \uc8fc\uae30","text":"<p>\uc9c0\uae08\uae4c\uc9c0\ub294 \ub370\uc774\ud130\ub9cc \uc77d\uc5c8\uc2b5\ub2c8\ub2e4(<code>Read</code>). \uadf8\ub7ec\ub098 \uc9c4\uc815\ud55c \ube44\ud589 \ud1b5\uc81c \uc13c\ud130\ub294 \ubaa8\ub4e0 \uac83\uc744 \ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4:</p> <ul> <li>Create (\uc0dd\uc131): \uc0c8\ub85c\uc6b4 \uc704\uc131\uc744 \uada4\ub3c4\uc5d0 \uc9c4\uc785\uc2dc\ud0b5\ub2c8\ub2e4.</li> <li>Read (\uc77d\uae30): \uae30\uc874 \uc6b0\uc8fc\uc120\uc758 \uc0c1\ud0dc\ub97c \uc694\uccad\ud569\ub2c8\ub2e4.</li> <li>Update (\uc5c5\ub370\uc774\ud2b8): \uada4\ub3c4\ub97c \uc218\uc815\ud558\uac70\ub098 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub97c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.</li> <li>Delete (\uc0ad\uc81c): \uc624\ub798\ub41c \uc704\uc131\uc744 \uada4\ub3c4\uc5d0\uc11c \uc774\ud0c8\uc2dc\ud0b5\ub2c8\ub2e4.</li> </ul> <p>\uc774 \ub124 \uac00\uc9c0 \uc791\uc5c5\uc778 CRUD\ub294 \ub300\ubd80\ubd84\uc758 API\uc758 \uae30\ubcf8\uc744 \uc774\ub8f9\ub2c8\ub2e4. \uc774 \uc7a5\uc5d0\uc11c\ub294 \uc6b0\ub9ac \ud568\ub300 \uad00\ub9ac\ub97c \uc704\ud55c \uc644\uc804\ud55c \uc8fc\uae30\ub97c \uad6c\ud604\ud560 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/4/#2-create-post","title":"2. Create: \uc0c8\ub85c\uc6b4 \uc6b0\uc8fc\uc120 \ubc1c\uc0ac (POST)","text":"<p>\uc0c8\ub85c\uc6b4 \uc6b0\uc8fc\uc120\uc744 \uc0dd\uc131\ud558\uae30 \uc704\ud574 <code>POST</code> \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 \uc6b0\uc8fc\uc120\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub294 \uc694\uccad \ubcf8\ubb38\uc5d0 JSON \ud615\uc2dd\uc73c\ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 1: \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\ub97c \uc704\ud55c \uc0c8\ub85c\uc6b4 Pydantic \ubaa8\ub378 \uc0dd\uc131 \uc0c8\ub85c\uc6b4 \ubaa8\ub378\uc774 \uc65c \ud544\uc694\ud560\uae4c\uc694? \uc6b0\uc8fc\uc120\uc744 \uc0dd\uc131\ud560 \ub54c <code>id</code>\ub97c \ubaa8\ub974\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. <code>id</code>\ub294 \uc11c\ubc84\uac00 \ud560\ub2f9\ud574\uc57c \ud569\ub2c8\ub2e4.</p> <p>\uc774 \ubaa8\ub378\uc744 <code>main.py</code>\uc5d0 \ucd94\uac00\ud558\uc138\uc694: <pre><code># main.py\nfrom pydantic import BaseModel, Field\n\nclass SpaceshipCreate(BaseModel):\n    \"\"\"\uc0c8\ub85c\uc6b4 \uc6b0\uc8fc\uc120 \uc0dd\uc131\uc744 \uc704\ud55c \ubaa8\ub378 (ID \uc5c6\uc74c).\"\"\"\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n</code></pre> \uc774 \ubaa8\ub378\uc740 <code>Spaceship</code> \ubaa8\ub378\uacfc \uac70\uc758 \ub3d9\uc77c\ud558\uc9c0\ub9cc, \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\uc758 \uc720\ud6a8\uc131 \uac80\uc0ac\uc5d0 \uc0ac\uc6a9\ub420 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 2: <code>POST /spaceships</code> \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uad6c\ud604 <pre><code># main.py\nimport random # \ud30c\uc77c \uc0c1\ub2e8\uc5d0 \uc774 \uc784\ud3ec\ud2b8\ub97c \ucd94\uac00\ud558\uc138\uc694\n\n# ... \ub098\uba38\uc9c0 \ucf54\ub4dc ...\n\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201)\ndef create_spaceship(ship: SpaceshipCreate):\n    \"\"\"\n    \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc0c8\ub85c\uc6b4 \uc6b0\uc8fc\uc120\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4.\n    \"\"\"\n    # \uc6b0\uc8fc\uc120\uc744 \uc704\ud55c \uc0c8\ub86d\uace0 \uace0\uc720\ud55c ID\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.\n    new_id = max(db_spaceships.keys() or [0]) + 1\n\n    # \uc804\uccb4 Spaceship \ubaa8\ub378\uc5d0 \ud574\ub2f9\ud558\ub294 \uc6b0\uc8fc\uc120 \uac1d\uccb4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.\n    new_ship = Spaceship(id=new_id, **ship.dict())\n\n    # \uc6b0\ub9ac\uc758 \"\ub370\uc774\ud130\ubca0\uc774\uc2a4\"\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4.\n    db_spaceships[new_id] = new_ship.dict()\n\n    return new_ship\n</code></pre> \uc124\uba85:</p> <ul> <li><code>@app.post(...)</code>: <code>POST</code> \uc694\uccad\uc744 \uc704\ud55c \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</li> <li><code>status_code=201</code>: \uc131\uacf5\uc801\uc73c\ub85c \uc0dd\uc131\ub420 \uacbd\uc6b0 <code>201 Created</code> \uc0c1\ud0dc\ub97c \ubc18\ud658\ud558\ub3c4\ub85d \uc9c0\uc815\ud569\ub2c8\ub2e4.</li> <li><code>ship: SpaceshipCreate</code>: \uc5ec\uae30\uc5d0 \ub9c8\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4! FastAPI\ub294 \uc694\uccad \ubcf8\ubb38(JSON)\uc744 \uc790\ub3d9\uc73c\ub85c \uac00\uc838\uc640 <code>SpaceshipCreate</code> \ubaa8\ub378\uc5d0 \ub530\ub77c \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud55c \ub2e4\uc74c, <code>ship</code> \uac1d\uccb4\ub85c \ud568\uc218\uc5d0 \uc804\ub2ec\ud569\ub2c8\ub2e4.</li> <li><code>new_id = ...</code>: \uc0c8\ub85c\uc6b4 ID\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud55c \uac04\ub2e8\ud55c \ub85c\uc9c1\uc785\ub2c8\ub2e4.</li> <li><code>**ship.dict()</code>: \uc218\uc2e0\ub41c <code>ship</code> \ubaa8\ub378\uc758 \ub370\uc774\ud130\ub97c \uc804\uccb4 \ubaa8\ub378\ub85c \"\uc5b8\ud329\"\ud569\ub2c8\ub2e4.</li> <li><code>response_model=Spaceship</code>: \uc751\ub2f5\uc740 <code>id</code>\ub97c \ud3ec\ud568\ud558\uc5ec \uc804\uccb4 \ubaa8\ub378\uc5d0 \ub530\ub97c \uac83\uc785\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/4/#3-update-put","title":"3. Update: \ucf54\uc2a4 \uc218\uc815 (PUT)","text":"<p>\uae30\uc874 \ub9ac\uc18c\uc2a4\ub97c \uc644\uc804\ud788 \uc5c5\ub370\uc774\ud2b8\ud558\ub824\uba74 <code>PUT</code> \uba54\uc11c\ub4dc\uac00 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.</p> <p><code>PUT /spaceships/{ship_id}</code> \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uad6c\ud604: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # \uc784\ud3ec\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694\n\n# ... \ub098\uba38\uc9c0 \ucf54\ub4dc ...\n\n@app.put(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef update_spaceship(ship_id: int, ship_update: SpaceshipCreate):\n    \"\"\"\n    \uc6b0\uc8fc\uc120 \ub370\uc774\ud130\ub97c \uc644\uc804\ud788 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"\uc6b0\uc8fc\uc120\uc774 \ubc1c\uacac\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\")\n\n    updated_ship = Spaceship(id=ship_id, **ship_update.dict())\n    db_spaceships[ship_id] = updated_ship.dict()\n\n    return updated_ship\n</code></pre></p> <ul> <li><code>ship_update: SpaceshipCreate</code>: \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\uc758 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc704\ud574 \ub2e4\uc2dc \uc774 \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</li> <li><code>HTTPException</code>: \ud574\ub2f9 <code>id</code>\ub97c \uac00\uc9c4 \uc6b0\uc8fc\uc120\uc774 \ubc1c\uacac\ub418\uc9c0 \uc54a\uc73c\uba74, FastAPI\uc758 \ud45c\uc900 \uc608\uc678\ub97c \"\ub358\uc838\" \uc544\ub984\ub2e4\uc6b4 <code>404</code> \ucf54\ub4dc\uc758 JSON \uc751\ub2f5\uc73c\ub85c \ubcc0\ud658\ub429\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/4/#4-delete-delete","title":"4. Delete: \uada4\ub3c4 \uc774\ud0c8 (DELETE)","text":"<p>\ub9ac\uc18c\uc2a4\ub97c \uc0ad\uc81c\ud558\ub824\uba74 <code>DELETE</code> \uba54\uc11c\ub4dc\uac00 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774\ub7ec\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \uc751\ub2f5 \ubcf8\ubb38\uc744 \ubc18\ud658\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.</p> <p><code>DELETE /spaceships/{ship_id}</code> \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uad6c\ud604: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException, Response, status # \uc784\ud3ec\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694\n\n# ... \ub098\uba38\uc9c0 \ucf54\ub4dc ...\n\n@app.delete(\"/spaceships/{ship_id}\", status_code=status.HTTP_204_NO_CONTENT)\ndef delete_spaceship(ship_id: int):\n    \"\"\"\n    \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0\uc11c \uc6b0\uc8fc\uc120\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"\uc6b0\uc8fc\uc120\uc774 \ubc1c\uacac\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\")\n\n    del db_spaceships[ship_id]\n\n    # 204 \uc0c1\ud0dc\ub85c \ube48 \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.\n    return Response(status_code=status.HTTP_204_NO_CONTENT)\n</code></pre></p> <ul> <li><code>status_code=status.HTTP_204_NO_CONTENT</code>: \uba85\uc2dc\uc801\uc73c\ub85c <code>204 No Content</code> \uc0c1\ud0dc\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4.</li> <li><code>del db_spaceships[ship_id]</code>: \uc0ac\uc804\uc5d0\uc11c \ud56d\ubaa9\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.</li> <li><code>return Response(...)</code>: \uc0ad\uc81c\ub41c \uac1d\uccb4\uc5d0 \ub300\ud55c \ub370\uc774\ud130\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud544\uc694 \uc5c6\uc73c\ubbc0\ub85c \ube48 \uc751\ub2f5\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/4/#5-docs","title":"5. <code>/docs</code>\uc5d0\uc11c \uc804\uccb4 \uc8fc\uae30 \ud14c\uc2a4\ud2b8","text":"<p><code>uvicorn</code>\uc774 \uc7ac\uc2dc\uc791\ub418\uc5c8\uc744 \uac83\uc785\ub2c8\ub2e4.</p> <ol> <li><code>http://127.0.0.1:8000/docs</code>\ub97c \uc5fd\ub2c8\ub2e4. \uc774\uc81c \uc644\uc804\ud55c CRUD \uc791\uc5c5 \uc138\ud2b8\ub97c \uac16\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4!</li> <li>POST: <code>POST /spaceships</code> \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud655\uc7a5\ud558\uace0 \"Try it out\"\uc744 \ud074\ub9ad\ud55c \ub2e4\uc74c, JSON \ubcf8\ubb38\uc744 \uc791\uc131\ud558\uace0 (\uc608: \"\uc81c\uc784\uc2a4 \uc6f9 \uc6b0\uc8fc \ub9dd\uc6d0\uacbd\" \uc0dd\uc131) \"Execute\"\ub97c \ud074\ub9ad\ud569\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 \ub9dd\uc6d0\uacbd \ub370\uc774\ud130\uc640 \ud568\uaed8 <code>201</code> \uc751\ub2f5\uc744 \ubc1b\uc544\uc57c \ud569\ub2c8\ub2e4.</li> <li>GET: \uc774\uc81c <code>GET /spaceships</code>\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \ubaa9\ub85d\uc5d0 \uc0c8\ub85c\uc6b4 \ub9dd\uc6d0\uacbd\uc774 \ub098\ud0c0\ub098\uc57c \ud569\ub2c8\ub2e4.</li> <li>PUT: \uc0c8\ub85c\uc6b4 \ub9dd\uc6d0\uacbd\uc758 ID\ub97c \uc0ac\uc6a9\ud558\uc5ec <code>PUT /spaceships/{ship_id}</code>\ub97c \ud1b5\ud574 \ub370\uc774\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc0c1\ud0dc\ub97c \ubcc0\uacbd\ud569\ub2c8\ub2e4.</li> <li>DELETE: \ub3d9\uc77c\ud55c ID\ub97c \uc0ac\uc6a9\ud558\uc5ec <code>DELETE /spaceships/{ship_id}</code>\ub97c \ud1b5\ud574 \ub9dd\uc6d0\uacbd\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4. <code>204</code> \uc0c1\ud0dc\uc758 \ube48 \uc751\ub2f5\uc744 \ubc1b\uc544\uc57c \ud569\ub2c8\ub2e4.</li> <li>\ud655\uc778: \ub9dd\uc6d0\uacbd\uc774 \ubaa9\ub85d\uc5d0\uc11c \uc0ad\uc81c\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 <code>GET /spaceships</code>\ub97c \ub2e4\uc2dc \uc2e4\ud589\ud569\ub2c8\ub2e4.</li> </ol>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/4/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. \uc0c8\ub85c\uc6b4 \ub9ac\uc18c\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 HTTP \uba54\uc11c\ub4dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) GET  b) PUT  c) POST <p>2. `DELETE` \uc791\uc5c5\uc5d0 \ub300\ud55c \ud45c\uc900 \uc131\uacf5 \uc0c1\ud0dc \ucf54\ub4dc\ub294?</p>  a) 200 OK  b) 204 No Content  c) 404 Not Found <p>3. FastAPI\ub294 POST \uc694\uccad \ubcf8\ubb38\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uc5b4\ub5bb\uac8c \ubc1b\uc2b5\ub2c8\uae4c?</p>  a) \uc804\uc5ed \ubcc0\uc218 `$_POST`\ub97c \ud1b5\ud574  b) \ud568\uc218 \uc778\uc218\uc5d0 Pydantic \ubaa8\ub378\uc774 \uc9c0\uc815\ub41c \uacbd\uc6b0 \uc790\ub3d9\uc73c\ub85c  c) `request.body` \uc2a4\ud2b8\ub9bc\uc744 \uc218\ub3d9\uc73c\ub85c \uc77d\uc5b4\uc57c \ud569\ub2c8\ub2e4 <p>4. `raise HTTPException(status_code=404)`\ub294 \ub2e4\uc74c\uc744 \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\ub2e4:</p>  a) \uce58\uba85\uc801\uc778 \uc11c\ubc84 \uc624\ub958 (500) \uc0dd\uc131  b) \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc62c\ubc14\ub978 HTTP \uc624\ub958 \uc751\ub2f5 \ubc18\ud658  c) \uc624\ub958\ub97c \ud30c\uc77c\uc5d0 \ub85c\uae45 <p>5. \ub9ac\uc18c\uc2a4 \uc0dd\uc131\uc744 \uc704\ud574 (`POST`) \ubcc4\ub3c4\uc758 `SpaceshipCreate` \ubaa8\ub378\uc744 \uc0dd\uc131\ud55c \uc774\uc720\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) \uc0dd\uc131\ub418\ub294 \uac1d\uccb4\uc5d0 \uc544\uc9c1 `id`\uac00 \uc5c6\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4  b) FastAPI\ub294 \uac01 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub300\ud574 \ub2e4\ub978 \ubaa8\ub378 \uc774\ub984\uc774 \ud544\uc694\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4  c) \uc720\ud6a8\uc131 \uac80\uc0ac \uc18d\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\ub2f9\uc2e0\uc740 \uc644\uc804\ud55c CRUD \uc8fc\uae30\ub97c \uad6c\ud604\ud558\uc5ec \ub2f9\uc2e0\uc758 API\ub97c \ub2e8\uc21c\ud55c \"\uc815\ubcf4\ud310\"\uc5d0\uc11c \uc644\uc804\ud55c \ud568\ub300 \uc81c\uc5b4 \uc13c\ud130\ub85c \ud0c8\ubc14\uafc8\uc2dc\ucf30\uc2b5\ub2c8\ub2e4!</p> <ul> <li>\u2705 Create: <code>POST /spaceships</code> \uc0c8\ub85c\uc6b4 \uae30\uccb4 \ucd9c\uc2dc\uc6a9.</li> <li>\u2705 Read: <code>GET /spaceships</code> \ubc0f <code>GET /spaceships/{id}</code> \ub370\uc774\ud130 \ud68d\ub4dd\uc6a9.</li> <li>\u2705 Update: <code>PUT /spaceships/{id}</code> \uc784\ubb34 \uc5c5\ub370\uc774\ud2b8\uc6a9.</li> <li>\u2705 Delete: <code>DELETE /spaceships/{id}</code> \uae30\uccb4 \ud3d0\uae30\uc6a9.</li> </ul> <p>\ub2f9\uc2e0\uc758 \ud568\ub300\ub294 \uc644\ubcbd\ud558\uac8c \ud1b5\uc81c\ub429\ub2c8\ub2e4! \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 FastAPI\uac00 \uc6b0\ub9ac\ub97c \uc704\ud574 \uc0c1\uc138\ud55c \"\uc791\ub3d9 \uc9c0\uce68\uc11c\" \u2014 \ub300\ud654\ud615 Swagger \ubb38\uc11c\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li>5\uac1c\uc758 \ubaa8\ub4e0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8(GET (2), POST, PUT, DELETE)\uac00 <code>/docs</code>\uc5d0\uc11c \ubcf4\uc774\uace0 \uc791\ub3d9\ud569\ub2c8\ub2e4.</li> <li>\ub9ac\uc18c\uc2a4\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uc0dd\uc131, \uc77d\uae30, \uc5c5\ub370\uc774\ud2b8 \ubc0f \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>\uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 ID\ub97c \uc694\uccad\ud558\uba74 <code>404</code> \uc624\ub958\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4.</li> </ul> <p>\u26a0\ufe0f \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uba74:</p> <ul> <li><code>NameError</code>: <code>HTTPException</code>, <code>Response</code>, <code>status</code>\ub97c \uc784\ud3ec\ud2b8\ud588\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> <li><code>KeyError</code>: \uc544\ub9c8\ub3c4 \uc774\ubbf8 \uc0ad\uc81c\ub41c ID\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \uc2dc\ub3c4 \uc911\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li><code>PUT</code> \ub610\ub294 <code>POST</code> \uc791\uc5c5\uc774 \uc798\ubabb\ub41c \uacbd\uc6b0: \ud568\uc218 \uc778\uc218\uc5d0 \uc62c\ubc14\ub978 Pydantic \ubaa8\ub378(<code>SpaceshipCreate</code>)\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> </ul>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/5/","title":"\ucc55\ud130 3.5: Swagger \uc790\ub3d9 \ubb38\uc11c\ud654","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 30\ubd84</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/5/#1-api","title":"1. API \ubb38\uc11c\ud654: \uc6b0\uc8fc \uc815\uac70\uc7a5 \uc0ac\uc6a9 \uc124\uba85\uc11c","text":"<p>\ub2f9\uc2e0\uc774 ISS\uc5d0 \uc0c8\ub85c \uc628 \uc6b0\uc8fc \ube44\ud589\uc0ac\ub77c\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. \uc5b4\ub5a4 \uc2a4\uc704\uce58\uac00 \ubb34\uc5c7\uc744 \uc81c\uc5b4\ud558\ub294\uc9c0, \ub85c\ubd07 \ud314\uc744 \uc5b4\ub5bb\uac8c \uc870\uc791\ud558\ub294\uc9c0 \uc5b4\ub5bb\uac8c \uc54c \uc218 \uc788\uc744\uae4c\uc694? \uc790\uc138\ud558\uace0 \ucd5c\uc2e0 \uc0c1\ud0dc\uc758 \uc124\uba85\uc11c\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.</p> <p>API \ubb38\uc11c\ud654\ub294 \uac1c\ubc1c\uc790\uc5d0\uac8c \uc774\ub7ec\ud55c \uc124\uba85\uc11c\uc640 \uac19\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \uc124\uba85\ud569\ub2c8\ub2e4:</p> <ul> <li>\uc5b4\ub5a4 \"\ub3c4\ud0b9 \ud3ec\ud2b8\"(\uc5d4\ub4dc\ud3ec\uc778\ud2b8)\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294\uc9c0.</li> <li>\uc5b4\ub5a4 \"\uba85\ub839\"(HTTP \uba54\uc11c\ub4dc)\uc744 \ubcf4\ub0bc \uc218 \uc788\ub294\uc9c0.</li> <li>\uc5b4\ub5a4 \"\ud654\ubb3c\"(\ub370\uc774\ud130)\uc744 \uc804\uc1a1\ud574\uc57c \ud558\ub294\uc9c0.</li> <li>\uc5b4\ub5a4 \"\ud154\ub808\uba54\ud2b8\ub9ac\"(\uc751\ub2f5)\ub97c \uae30\ub300\ud574\uc57c \ud558\ub294\uc9c0.</li> </ul> <p>\ubb38\uc81c\ub294 \ubb38\uc11c\ub97c \uc218\ub3d9\uc73c\ub85c \uc791\uc131\ud558\ub294 \uac83\uc740 \uc2dc\uac04\uc774 \uc624\ub798 \uac78\ub9ac\uace0, \uc9c0\ub8e8\ud558\uba70, \uac70\uc758 \ud56d\uc0c1 \uad6c\uc2dd\uc774 \ub41c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>\uc218\ub3d9 \ubb38\uc11c\ub294 \uc2a4\ud14c\uc774\uc158\uc744 \ud604\ub300\ud654\ud55c \ud6c4\uc5d0\ub3c4 \uc5c5\ub370\uc774\ud2b8\ub418\uc9c0 \uc54a\uace0 \uc544\uce74\uc774\ube0c\uc5d0 \ubcf4\uad00\ub418\ub294 \uc885\uc774 \ub3c4\uba74\uacfc \uac19\uc2b5\ub2c8\ub2e4. FastAPI\uc758 \uc790\ub3d9 \ubb38\uc11c\ud654\ub294 \uc2a4\ud14c\uc774\uc158\uc758 \ubaa8\ub4e0 \ubcc0\uacbd \uc0ac\ud56d\uc5d0 \ub530\ub77c \uc2e4\uc2dc\uac04\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ub418\ub294 \uad00\uc81c \uc13c\ud130(MCC)\uc758 \ub300\ud654\ud615 \ub514\uc2a4\ud50c\ub808\uc774\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/5/#2-fastapi","title":"2. FastAPI\uc758 \ub9c8\ubc95: \uc791\ub3d9 \ubc29\uc2dd","text":"<p>FastAPI\ub294 \ub2f9\uc2e0\uc758 \ucf54\ub4dc\uc5d0 \uae30\ubc18\ud558\uc5ec \ubaa8\ub4e0 \"\ud798\ub4e0 \uc791\uc5c5\"\uc744 \ub300\uc2e0 \ucc98\ub9ac\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \uc2a4\uce94\ud569\ub2c8\ub2e4:</p> <ol> <li>\uacbd\ub85c: \ubaa8\ub4e0 <code>@app.get</code>, <code>@app.post</code> \ub4f1\uc758 \ub370\ucf54\ub808\uc774\ud130.</li> <li>\ub9e4\uac1c\ubcc0\uc218: \uacbd\ub85c \ub9e4\uac1c\ubcc0\uc218 (<code>ship_id: int</code>) \ubc0f \ucffc\ub9ac \ub9e4\uac1c\ubcc0\uc218.</li> <li>Pydantic \ubaa8\ub378: \ub2f9\uc2e0\uc758 \"\uc124\uacc4\ub3c4\" (<code>Spaceship</code>, <code>SpaceshipCreate</code>).</li> <li>\ubb38\uc11c \ubb38\uc790\uc5f4(docstrings): \uc138 \uac1c\uc758 \ub530\uc634\ud45c\ub85c \uc791\uc131\ud55c \uc124\uba85.</li> </ol> <p>\uc774\ub7ec\ud55c \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c FastAPI\ub294 OpenAPI (\uc774\uc804 Swagger\ub85c \uc54c\ub824\uc9d0) \ud45c\uc900\uc5d0 \ub530\ub77c \uc2a4\ud0a4\ub9c8\ub97c \uc0dd\uc131\ud55c \ub2e4\uc74c, \ub450 \uac00\uc9c0 \uc544\ub984\ub2e4\uc6b4 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud1b5\ud574 \uc774\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/5/#3-mcc-swagger-ui","title":"3. \"\uad00\uc81c \uc13c\ud130(MCC) \ub514\uc2a4\ud50c\ub808\uc774\" \ud0d0\uc0c9: Swagger UI","text":"<p>Swagger UI\ub294 \ubb38\uc11c\ub97c \uc77d\uc744 \uc218 \uc788\uc744 \ubfd0\ub9cc \uc544\ub2c8\ub77c \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc9c1\uc811 API\ub97c \ud14c\uc2a4\ud2b8\ud560 \uc218 \uc788\ub294 \ub300\ud654\ud615 \uc778\ud130\ud398\uc774\uc2a4\uc785\ub2c8\ub2e4.</p> <p><code>http://127.0.0.1:8000/docs</code>\ub97c \uc5fd\ub2c8\ub2e4.</p> <p>\ub2e4\uc74c\uacfc \uac19\uc740 \ub0b4\uc6a9\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4:</p> <ul> <li>\uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubaa9\ub85d: \ud0dc\uadf8\ubcc4(\uae30\ubcf8\uc801\uc73c\ub85c \ub9ac\uc18c\uc2a4 \uc774\ub984\ubcc4)\ub85c \uadf8\ub8f9\ud654\ub418\uc5b4 \uc788\uc73c\uba70 HTTP \uba54\uc11c\ub4dc \uc0c9\uc0c1\uc73c\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4.</li> <li>\uc124\uba85: docstrings (<code>\"\"\"...\"\"\"</code>)\uc758 \ud14d\uc2a4\ud2b8\uac00 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc124\uba85\uc73c\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4.</li> <li>\ub9e4\uac1c\ubcc0\uc218: \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc608\uc0c1\ud558\ub294 \ub9e4\uac1c\ubcc0\uc218(\uc608: <code>ship_id</code>), \ud574\ub2f9 \uc720\ud615 \ubc0f \ud544\uc218 \uc5ec\ubd80\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.</li> <li>\uc694\uccad \ubcf8\ubb38(Request Body): <code>POST</code> \ubc0f <code>PUT</code>\uc758 \uacbd\uc6b0 Pydantic \ubaa8\ub378(<code>SpaceshipCreate</code>)\uc5d0\uc11c \uc0dd\uc131\ub41c JSON \uc2a4\ud0a4\ub9c8\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.</li> <li>\uc751\ub2f5(Responses): \uac00\ub2a5\ud55c \uc0c1\ud0dc \ucf54\ub4dc \ubc0f <code>response_model</code>\uc5d0 \uae30\ubc18\ud55c \uc751\ub2f5 \uc2a4\ud0a4\ub9c8\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.</li> <li>\"Try it out\" \ubc84\ud2bc: \ub9e4\uac1c\ubcc0\uc218\ub97c \ucc44\uc6b0\uace0 \uc11c\ubc84\uc5d0 \uc2e4\uc81c \uc694\uccad\uc744 \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/5/#4","title":"4. \ubb38\uc11c\ud654 \uac1c\uc120: \ud0dc\uadf8 \ubc0f \uc124\uba85","text":"<p>\uc774\uc81c \ubb38\uc11c\ud654\ub97c \ub354\uc6b1 \uc804\ubb38\uc801\uc73c\ub85c \ub9cc\ub4e4\uc5b4 \ubd05\uc2dc\ub2e4.</p> <p>\ub2e8\uacc4 1: <code>FastAPI</code>\uc5d0 \uba54\ud0c0\ub370\uc774\ud130 \ucd94\uac00 <code>app</code>\uc744 \uc0dd\uc131\ud560 \ub54c API\uc5d0 \ub300\ud55c \uc77c\ubc18 \uc815\ubcf4\ub97c \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p><code>main.py</code>\uc758 <code>app = FastAPI()</code> \uc904\uc744 \ubcc0\uacbd\ud569\ub2c8\ub2e4: <pre><code># main.py\n\napp = FastAPI(\n    title=\"\ud568\ub300 \uad00\ub9ac API\",\n    description=\"\uc6b0\uc8fc\uc120 \ud568\ub300 \uad00\ub9ac\ub97c \uc704\ud55c API\uc785\ub2c8\ub2e4.\",\n    version=\"1.0.0\",\n)\n</code></pre> \uc774\uc81c \ubb38\uc11c \uc0c1\ub2e8\uc5d0 \uc81c\ubaa9\uacfc \uc124\uba85\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 2: \ud0dc\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uadf8\ub8f9\ud654 \uac01 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ud0dc\uadf8\ub97c \ucd94\uac00\ud558\uc5ec \uc758\ubbf8\ubcc4\ub85c \uadf8\ub8f9\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ub370\ucf54\ub808\uc774\ud130\uc5d0 <code>tags</code> \ub9e4\uac1c\ubcc0\uc218\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4: <pre><code># GET /spaceships\n@app.get(\"/spaceships\", response_model=List[Spaceship], tags=[\"\uc6b0\uc8fc\uc120\"])\n# ...\n\n# GET /spaceships/{ship_id}\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"\uc6b0\uc8fc\uc120\"])\n# ...\n\n# POST /spaceships\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201, tags=[\"\uc6b0\uc8fc\uc120\"])\n# ...\n\n# \ubc0f PUT\uacfc DELETE\uc5d0 \ub300\ud574\uc11c\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\n</code></pre> \uc774\uc81c \ubaa8\ub4e0 CRUD \uc791\uc5c5\uc774 \"\uc6b0\uc8fc\uc120\"\uc774\ub77c\ub294 \uc81c\ubaa9 \uc544\ub798\uc5d0 \uae54\ub054\ud558\uac8c \uadf8\ub8f9\ud654\ub429\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/5/#5-redoc","title":"5. \ub300\uc548\uc801\uc778 \ubcf4\uae30: ReDoc","text":"<p>FastAPI\ub294 \"\uae30\ubcf8\uc801\uc73c\ub85c\" \ub610 \ub2e4\ub978 \ubb38\uc11c \uc778\ud130\ud398\uc774\uc2a4\uc778 ReDoc\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \uc0c1\ud638 \uc791\uc6a9\uc774 \uc801\uc9c0\ub9cc, \ub354 \uc77d\uae30 \uc27d\ub2e4\uace0 \uc5ec\uaca8\uc9c0\uba70 \uc815\uc801 \ubb38\uc11c\uc5d0 \ub9e4\uc6b0 \uc801\ud569\ud569\ub2c8\ub2e4.</p> <p><code>http://127.0.0.1:8000/redoc</code>\ub97c \uc5fd\ub2c8\ub2e4.</p> <p>\ud0d0\uc0c9, \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc124\uba85 \ubc0f \ub370\uc774\ud130 \uc2a4\ud0a4\ub9c8\uac00 \uc788\ub294 3\uc5f4 \ub808\uc774\uc544\uc6c3\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uc774\ub294 \"\ud074\ub77c\uc774\uc5b8\ud2b8\"(\uc608: \ud504\ub860\ud2b8\uc5d4\ub4dc \ud300)\uc5d0\uac8c \ubb38\uc11c\ub97c \uc81c\uacf5\ud558\ub294 \ud6cc\ub96d\ud55c \ubc29\ubc95\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/5/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. FastAPI\ub294 \ub2e4\uc74c\uc744 \uae30\ubc18\uc73c\ub85c \ubb38\uc11c\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4...</p>  a) \uc218\ub3d9\uc73c\ub85c \uc0dd\uc131\ud574\uc57c \ud558\ub294 \ubcc4\ub3c4\uc758 `.html` \ud30c\uc77c  b) Python \ucf54\ub4dc: \uacbd\ub85c, Pydantic \ubaa8\ub378 \ubc0f docstrings  c) `#`\uc73c\ub85c \uc2dc\uc791\ud558\ub294 \uc8fc\uc11d <p>2. FastAPI \uc790\ub3d9 \ubb38\uc11c\ud654\uc758 \uae30\ubc18\uc774 \ub418\ub294 \ud45c\uc900\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) GraphQL  b) XML-RPC  c) OpenAPI (Swagger) <p>3. \ub300\ud654\ud615 Swagger UI \ubb38\uc11c\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc5b4\ub5a4 URL\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\uae4c?</p>  a) `/admin`  b) `/docs`  c) `/api/help` <p>4. `@app.get` \ub370\ucf54\ub808\uc774\ud130\uc758 `tags` \ub9e4\uac1c\ubcc0\uc218\ub294 \ub2e4\uc74c \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4:</p>  a) HTML\uc5d0 \uba54\ud0c0 \ud0dc\uadf8 \ucd94\uac00  b) \ubb38\uc11c\uc5d0\uc11c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uadf8\ub8f9\ud654  c) \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 \uac83\uc73c\ub85c \ud45c\uc2dc <p>5. ReDoc\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ucf54\ub4dc\ub97c \ud3b8\uc9d1\ud558\ub294 \ub3c4\uad6c  b) API \ubb38\uc11c\ud654\ub97c \uc704\ud55c \ub300\uc548\uc801\uc774\uace0 \ub354 \uc815\uc801\uc778 \uc778\ud130\ud398\uc774\uc2a4  c) \"\ube68\uac04\uc0c9\"(\uc791\ub3d9\ud558\uc9c0 \uc54a\ub294) \ucf54\ub4dc\ub97c \uac10\uc9c0\ud558\ub294 \uc2dc\uc2a4\ud15c \ud655\uc778\ud558\uae30 <p>\ud83d\ude80 \ucc55\ud130 \uc694\uc57d:</p> <p>FastAPI\uc758 \uac00\uc7a5 \uac15\ub825\ud55c \uae30\ub2a5 \uc911 \ud558\ub098\uc778 \ub178\ub825 \uc5c6\uc774 \ubb38\uc11c\ub97c \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubcf4\uc558\uc2b5\ub2c8\ub2e4.</p> <ul> <li>\ud83d\udcd6 \uc774\uc81c API\uc5d0 Swagger UI\uc640 ReDoc\uc774\ub77c\ub294 \ub450 \uac00\uc9c0 \ucd5c\uc2e0 \ubb38\uc11c\uac00 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>\ud83d\udd2c \ubb38\uc11c\ub294 \ub300\ud654\ud615\uc774\uba70 \uc989\uc11d\uc5d0\uc11c API\ub97c \ud14c\uc2a4\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>\ud83c\udff7\ufe0f \uba54\ud0c0\ub370\uc774\ud130\uc640 \ud0dc\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubb38\uc11c\ub97c \uac1c\uc120\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\uc0ac\uc6a9 \uc124\uba85\uc11c\uac00 \uc900\ube44\ub418\uc5c8\uace0 \ud56d\uc0c1 \ucd5c\uc2e0 \uc0c1\ud0dc\uc785\ub2c8\ub2e4! \uc774 \uc139\uc158\uc758 \ub9c8\uc9c0\ub9c9 \ucc55\ud130\uc5d0\uc11c\ub294 \"\uc6b0\uc8fc \uc774\uc0c1 \ud604\uc0c1\", \uc989 \uc624\ub958 \ubc0f \uc798\ubabb\ub41c \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778 \uc0ac\ud56d:</p> <ul> <li><code>http://127.0.0.1:8000/docs</code> \uc8fc\uc18c\uc5d0 \uc81c\ubaa9, \uc124\uba85 \ubc0f \ud0dc\uadf8\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ud45c\uc2dc\ub418\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.</li> <li>\"Schemas\" \uc139\uc158\uc5d0 <code>Spaceship</code> \ubaa8\ub378\uc774 \ubcf4\uc774\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.</li> <li><code>http://127.0.0.1:8000/redoc</code>\uc744 \uc5f4\uace0 \ub300\uccb4 \ubcf4\uae30\ub97c \ud3c9\uac00\ud569\ub2c8\ub2e4.</li> </ul> <p>\u26a0\ufe0f \ubcc0\uacbd \uc0ac\ud56d\uc774 \ud45c\uc2dc\ub418\uc9c0 \uc54a\ub294 \uacbd\uc6b0: - \ud30c\uc77c <code>main.py</code>\ub97c \uc800\uc7a5\ud588\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694. - <code>uvicorn</code> \uc11c\ubc84\uac00 <code>--reload</code> \ud50c\ub798\uadf8\ub85c \uc2e4\ud589 \uc911\uc774\uba70 \uc131\uacf5\uc801\uc73c\ub85c \uc7ac\uc2dc\uc791\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/6/","title":"3.6\uc7a5: \uc624\ub958 \ucc98\ub9ac \ubc0f \uc720\ud6a8\uc131 \uac80\uc0ac","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 50\ubd84</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/6/#1","title":"1. \uc624\ub958 \ucc98\ub9ac: \uc6b0\uc8fc\uc120\uc758 \"\ube44\uc0c1 \ubc29\uc5b4\ub9c9\"","text":"<p>\uac00\uc7a5 \uc644\ubcbd\ud55c \uc6b0\uc8fc\uc120\uc5d0\ub3c4 \uc608\uc0c1\uce58 \ubabb\ud55c \uc0c1\ud669\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:</p> <ul> <li>\uad00\uc81c \uc13c\ud130\ub85c\ubd80\ud130\uc758 \uc798\ubabb\ub41c \uba85\ub839: \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc740 \ub370\uc774\ud130\ub97c \ubcf4\ub0c8\uc2b5\ub2c8\ub2e4.</li> <li>\ubaa8\ub4c8\uacfc\uc758 \uc5f0\uacb0 \ub04a\uae40: \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ub9ac\uc18c\uc2a4\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.</li> <li>\ubc18\uc751\uae30 \uace0\uc7a5: \ub0b4\ubd80 \uc11c\ubc84 \uc624\ub958.</li> </ul> <p>\uc62c\ubc14\ub978 \uc624\ub958 \ucc98\ub9ac\ub294 \"\ube44\uc0c1 \ubc29\uc5b4\ub9c9\" \uc2dc\uc2a4\ud15c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc6b0\uc8fc\uc120\uc774 \ubb34\ub108\uc9c0\uc9c0 \uc54a\ub3c4\ub85d \ud558\uace0, \ub300\uc2e0 \uad00\uc81c \uc13c\ud130\uc5d0 \ubb34\uc5c7\uc774 \uc798\ubabb\ub418\uc5c8\ub294\uc9c0\uc5d0 \ub300\ud55c \uba85\ud655\ud55c \uc2e0\ud638\ub97c \ubcf4\ub0c5\ub2c8\ub2e4.</p> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>\ub2e8\uc21c\ud788 \uad00\uc81c \uc13c\ud130\uc5d0 \"\ube44\uc0c1 \uc0ac\ud0dc!\" \uc2e0\ud638\ub97c \ubcf4\ub0b4\ub294 \ub300\uc2e0, \uc88b\uc740 \uc628\ubcf4\ub4dc \ucef4\ud4e8\ud130\ub294 \uad6c\uc870\ud654\ub41c \ubcf4\uace0\uc11c\ub97c \ubcf4\ub0bc \uac83\uc785\ub2c8\ub2e4: <pre><code>{\n  \"error_code\": \"ENGINE_OVERHEAT\",\n  \"message\": \"2\ubc88 \uc5d4\uc9c4 \uc628\ub3c4\uac00 \uc815\uc0c1 \ubc94\uc704\ub97c \ucd08\uacfc\ud588\uc2b5\ub2c8\ub2e4.\",\n  \"suggested_action\": \"\ub0c9\uac01 \uc2dc\uc2a4\ud15c\uc744 \uc2dc\uc791\ud558\uc2ed\uc2dc\uc624.\"\n}\n</code></pre> \uc774\uac83\uc740 \uc9c0\uad6c\uc758 \uc5d4\uc9c0\ub2c8\uc5b4\ub4e4\uc774 \ubb38\uc81c\ub97c \ube60\ub974\uac8c \uc774\ud574\ud558\uace0 \uc870\uce58\ub97c \ucde8\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/6/#2-pydantic","title":"2. Pydantic \uc720\ud6a8\uc131 \uac80\uc0ac: \ub0b4\uc7a5\ub41c \"\uc628\ubcf4\ub4dc \ucef4\ud4e8\ud130\"","text":"<p>\uc6b0\ub9ac\ub294 \uc774\ubbf8 Pydantic\uc758 \ub9c8\ubc95\uc744 \uacbd\ud5d8\ud588\uc2b5\ub2c8\ub2e4. \uc798\ubabb\ub41c \ub370\uc774\ud130 \ud0c0\uc785(\uc608: <code>launch_year</code>\ub97c \ubb38\uc790\uc5f4\ub85c)\uc73c\ub85c \uc6b0\uc8fc\uc120\uc744 \uc0dd\uc131\ud558\ub824\uace0 \ud558\uba74, FastAPI\ub294 \uc790\ub3d9\uc73c\ub85c <code>422 Unprocessable Entity</code> \uc624\ub958\ub97c \ubc18\ud658\ud558\uba70 \uc5b4\ub5a4 \ud544\ub4dc\uac00 \uc65c \uac80\uc99d\uc5d0 \uc2e4\ud328\ud588\ub294\uc9c0\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc124\uba85\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.</p> <p><code>POST /spaceships</code>\uc5d0 \ub300\ud55c \uc694\uccad \uc608\uc2dc: <pre><code>{\n  \"name\": \"X-Wing\",\n  \"type\": \"\uc774\ub3d9 \uc804\ud22c\uae30\",\n  \"launch_year\": \"\uc624\ub798\uc804\",  // &lt;-- \uc798\ubabb\ub41c \ud0c0\uc785!\n  \"status\": \"\uc6b4\uc6a9 \uc911\"\n}\n</code></pre></p> <p>FastAPI\uc758 \uc790\ub3d9 \uc751\ub2f5: <pre><code>{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"body\",\n        \"launch_year\"\n      ],\n      \"msg\": \"value is not a valid integer\",\n      \"type\": \"type_error.integer\"\n    }\n  ]\n}\n</code></pre> \uc774\uac83\uc740 \ubbff\uc744 \uc218 \uc5c6\uc744 \uc815\ub3c4\ub85c \uac15\ub825\ud569\ub2c8\ub2e4! \ud0c0\uc785 \uac80\uc0ac\ub97c \uc704\ud55c \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. FastAPI\uc640 Pydantic\uc774 \ub2f9\uc2e0\uc744 \uc704\ud574 \ucc98\ub9ac\ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/6/#3-httpexception","title":"3. \"\ub9ac\uc18c\uc2a4\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc74c\" \ucc98\ub9ac: <code>HTTPException</code> \uc608\uc678","text":"<p>\uc6b0\ub9ac\ub294 CRUD \uc791\uc5c5\uc5d0\uc11c \uc774\ubbf8 \uc774\uac83\uc744 \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4. <code>HTTPException</code>\uc740 FastAPI\uac00 \uc694\uccad \uc2e4\ud589\uc744 \uc911\ub2e8\ud558\uace0 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uac8c \uc989\uc2dc \uc624\ub958 \uc751\ub2f5\uc744 \ubc18\ud658\ud558\ub294 \ud45c\uc900\uc801\uc778 \ubc29\ubc95\uc785\ub2c8\ub2e4.</p> <p><code>GET /spaceships/{ship_id}</code>\uc758 \ucf54\ub4dc\ub97c \uc0c1\uae30\ud574 \ubd05\uc2dc\ub2e4: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # HTTPException\uc774 \uc784\ud3ec\ud2b8\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624\n\n# ...\n\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"\uc6b0\uc8fc\uc120\"])\ndef get_spaceship(ship_id: int):\n    ship = db_spaceships.get(ship_id)\n    if not ship:\n        # \uc6b0\uc8fc\uc120\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc73c\uba74 404 \uc608\uc678\ub97c \"\ubc1c\uc0dd\"\uc2dc\ud0b5\ub2c8\ub2e4.\n        raise HTTPException(status_code=404, detail=f\"ID {ship_id}\ub97c \uac00\uc9c4 \uc6b0\uc8fc\uc120\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\")\n    return ship\n</code></pre></p> <ul> <li><code>raise HTTPException(...)</code>: \uc774 \ud638\ucd9c\uc740 \ud568\uc218 \uc2e4\ud589\uc744 \uc911\ub2e8\ud569\ub2c8\ub2e4.</li> <li><code>status_code=404</code>: HTTP \uc751\ub2f5 \uc0c1\ud0dc\ub97c \uc124\uc815\ud569\ub2c8\ub2e4.</li> <li><code>detail</code>: JSON \uc751\ub2f5 \ubcf8\ubb38\uc5d0 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uac8c \uc804\uc1a1\ub420 \uba54\uc2dc\uc9c0\uc785\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/6/#4","title":"4. \ucee4\uc2a4\ud140 \uc720\ud6a8\uc131 \uac80\uc0ac\uae30: \uc2e4\ud589 \uc804 \"\ud2b9\ubcc4 \uac80\uc0ac\"","text":"<p>\ub9cc\uc57d \uc6b0\ub9ac\uac00 \ub354 \ubcf5\uc7a1\ud55c \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\uc744 \ucd94\uac00\ud558\uace0 \uc2f6\ub2e4\uba74 \uc5b4\ub5a8\uae4c\uc694? \uc608\ub97c \ub4e4\uc5b4, \"Death Star\"\ub77c\ub294 \uc774\ub984\uc758 \uc6b0\uc8fc\uc120 \ubc1c\uc0ac\ub97c \uae08\uc9c0\ud558\ub294 \uac83 \ub9d0\uc785\ub2c8\ub2e4.</p> <p>\uc774\ub97c \uc704\ud574 Pydantic\uc5d0\ub294 \uac15\ub825\ud55c \ub3c4\uad6c\uc778 \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\uac00 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 1: <code>SpaceshipCreate</code> \ubaa8\ub378\uc5d0 \uc720\ud6a8\uc131 \uac80\uc0ac\uae30 \ucd94\uac00 <pre><code># main.py\nfrom pydantic import BaseModel, Field, validator\n\nclass SpaceshipCreate(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n\n    @validator('name')\n    def name_must_not_be_forbidden(cls, v):\n        \"\"\"\uc6b0\uc8fc\uc120 \uc774\ub984\uc774 \uae08\uc9c0\ub41c \ubaa9\ub85d\uc5d0 \uc5c6\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.\"\"\"\n        if 'Death Star' in v:\n            raise ValueError(' \"Death Star\"\uc640 \uac19\uc740 \uc774\ub984\uc740 \uc81c\uad6d \uce59\ub839\uc5d0 \uc758\ud574 \uae08\uc9c0\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4!')\n        return v.title() # \ub3d9\uc2dc\uc5d0 \uc774\ub984\uc744 \ub300\ubb38\uc790\ub85c \ubcc0\uacbd\ud569\ub2c8\ub2e4.\n</code></pre></p> <ul> <li><code>@validator('name')</code>: \uc774 \ud568\uc218\ub97c <code>name</code> \ud544\ub4dc\uc5d0 \"\uc5f0\uacb0\"\ud558\ub294 \ub370\ucf54\ub808\uc774\ud130\uc785\ub2c8\ub2e4.</li> <li><code>cls, v</code>: \uc774 \uba54\uc11c\ub4dc\ub294 \ud074\ub798\uc2a4 \uc790\uccb4(<code>cls</code>)\uc640 \ud544\ub4dc\uc758 \uac12(<code>v</code>)\uc744 \ubc1b\uc2b5\ub2c8\ub2e4.</li> <li><code>raise ValueError(...)</code>: \uac80\uc99d\uc5d0 \uc2e4\ud328\ud558\uba74 \uc6b0\ub9ac\ub294 \ud45c\uc900 Python \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. FastAPI\ub294 \uc774\ub97c \uac00\ub85c\ucc44\uc11c \uba4b\uc9c4 <code>422</code> \uc624\ub958\ub85c \ubcc0\ud658\ud560 \uac83\uc785\ub2c8\ub2e4.</li> <li><code>return v.title()</code>: \ubaa8\ub4e0 \uac83\uc774 \uc88b\ub2e4\uba74, \uc6b0\ub9ac\ub294 \ubc18\ub4dc\uc2dc \uac12\uc744 \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4. \uc2ec\uc9c0\uc5b4 \uc989\uc11d\uc5d0\uc11c \ubcc0\uacbd\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4(\uc608: \ud45c\uc900 \ud615\uc2dd\uc73c\ub85c \ubcc0\ud658).</li> </ul> <p>\ub2e8\uacc4 2: \ud14c\uc2a4\ud2b8\ud558\uae30 <code>uvicorn</code>\uc744 \uc7ac\uc2dc\uc791\ud558\uace0 <code>/docs</code>\ub97c \ud1b5\ud574 \uae08\uc9c0\ub41c \uc774\ub984\uc73c\ub85c \uc6b0\uc8fc\uc120\uc744 \uc0dd\uc131\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc0ac\uc6a9\uc790 \uc815\uc758 \uba54\uc2dc\uc9c0\uc640 \ud568\uaed8 <code>422</code> \uc624\ub958\ub97c \ubc1b\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4!</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/6/#5","title":"5. \uc804\uc5ed \uc624\ub958 \ucc98\ub9ac: \uc2a4\ud14c\uc774\uc158\uc758 \"\ube44\uc0c1 \ud504\ub85c\ud1a0\ucf5c\"","text":"<p>\ub54c\ub85c\ub294 \uc608\uc0c1\uce58 \ubabb\ud55c \uc624\ub958(\uc608: \uc2e4\uc81c \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5f0\uacb0 \uc2e4\ud328)\ub97c \uac00\ub85c\ucc44\uace0 \ub2e8\uc77c\ud558\uace0 \ud45c\uc900\ud654\ub41c \uc751\ub2f5 \ud615\uc2dd\uc744 \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4.</p> <p>\uc774\ub97c \uc704\ud574 <code>@app.exception_handler</code> \ub370\ucf54\ub808\uc774\ud130\uac00 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.</p> <p>\uc608\uc2dc: \ubaa8\ub4e0 <code>ValueError</code> \uac00\ub85c\ucc44\uae30 <pre><code># main.py\nfrom fastapi import FastAPI, Request\nfrom fastapi.responses import JSONResponse\n\n# ...\n\n@app.exception_handler(ValueError)\nasync def value_error_exception_handler(request: Request, exc: ValueError):\n    \"\"\"\n    \ubaa8\ub4e0 ValueError\uc5d0 \ub300\ud55c \uc804\uc5ed \ud578\ub4e4\ub7ec\uc785\ub2c8\ub2e4.\n    \ud45c\uc900\ud654\ub41c JSON\uc744 \ubc18\ud658\ud558\uae30 \uc704\ud574.\n    \"\"\"\n    return JSONResponse(\n        status_code=400,\n        content={\"message\": f\"\ub370\uc774\ud130 \uc624\ub958: {str(exc)}\"},\n    )\n</code></pre></p> <ul> <li><code>@app.exception_handler(ValueError)</code>: FastAPI\uc5d0\uac8c \uc774 \ud568\uc218\uac00 \uc774\uc804\uc5d0 \uac00\ub85c\ucc44\uc9c0\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 <code>ValueError</code>\ub97c \ucc98\ub9ac\ud574\uc57c \ud55c\ub2e4\uace0 \uc54c\ub9bd\ub2c8\ub2e4.</li> <li><code>async def ...</code>: \uc608\uc678 \ud578\ub4e4\ub7ec\ub294 \ube44\ub3d9\uae30\uc2dd(<code>async</code>)\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4.</li> <li><code>JSONResponse</code>: \uc751\ub2f5 \ubcf8\ubb38\uacfc \uc0c1\ud0dc\ub97c \uc644\uc804\ud788 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\uc774\uc81c \uc6b0\ub9ac\uc758 \ucee4\uc2a4\ud140 \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\uac00 \uc791\ub3d9\ud558\uba74, \uc751\ub2f5\uc740 \uc6b0\ub9ac\uac00 \uc815\uc758\ud55c \ub354 \uce5c\uc219\ud55c \ud615\uc2dd\uc744 \uac00\uc9c8 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C3%EC%9E%A5%20-%20Python%EC%9A%A9%20FastAPI%20API/6/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc798\ubabb\ub41c \ud0c0\uc785\uc758 \ub370\uc774\ud130(\uc22b\uc790 \ub300\uc2e0 \ubb38\uc790\uc5f4)\ub97c \ubcf4\ub0b4\uba74 FastAPI\ub294 \uc790\ub3d9\uc73c\ub85c \ub2e4\uc74c \uc0c1\ud0dc\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4...</p>  a) 500 Internal Server Error  b) 404 Not Found  c) 422 Unprocessable Entity <p>2. `raise HTTPException(status_code=404)`\ub294 \ub2e4\uc74c\uc744 \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\ub2e4...</p>  a) \uc804\uccb4 \uc11c\ubc84 \uc791\uc5c5\uc744 \uc885\ub8cc\ud569\ub2c8\ub2e4.  b) \uc694\uccad \uc2e4\ud589\uc744 \uc911\ub2e8\ud558\uace0 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uac8c 404 \uc624\ub958\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.  c) \ub85c\uadf8\uc5d0 \uc624\ub958\ub97c \uae30\ub85d\ud558\uc9c0\ub9cc \uc2e4\ud589\uc744 \uacc4\uc18d\ud569\ub2c8\ub2e4. <p>3. Pydantic\uc758 `@validator('field_name')` \ub370\ucf54\ub808\uc774\ud130\ub294 \ub2e4\uc74c\uc744 \uc704\ud574 \ud544\uc694\ud569\ub2c8\ub2e4:</p>  a) \ud2b9\uc815 \ud544\ub4dc\uc5d0 \ub300\ud55c \ucee4\uc2a4\ud140 \uc720\ud6a8\uc131 \uac80\uc0ac \ub85c\uc9c1\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.  b) \ud544\ub4dc\uac00 \ud544\uc218\uc784\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4.  c) \ud544\ub4dc \uac12\uc744 \uc554\ud638\ud654\ud569\ub2c8\ub2e4. <p>4. \ub370\uc774\ud130\uac00 \uc62c\ubc14\ub978 \uacbd\uc6b0 Pydantic\uc758 \uc720\ud6a8\uc131 \uac80\uc0ac \ud568\uc218\ub294 \ubb34\uc5c7\uc744 \ud574\uc57c \ud569\ub2c8\uae4c?</p>  a) \uc544\ubb34\uac83\ub3c4 \ubc18\ud658\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4(None).  b) \uac12\uc744 \ubc18\ub4dc\uc2dc \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4(\ubcc0\uacbd\ub420 \uc218\ub3c4 \uc788\uc74c).  c) `True`\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. <p>5. `@app.exception_handler()`\ub294 \ub2e4\uc74c\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4...</p>  a) \uc0c8\ub85c\uc6b4 \uc608\uc678 \uc720\ud615\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.  b) \uc608\uc678\ub97c \uc804\uc5ed\uc801\uc73c\ub85c \uac00\ub85c\ucc44\uace0 \uc774\uc5d0 \ub300\ud55c \ucee4\uc2a4\ud140 \uc751\ub2f5\uc744 \uc815\uc758\ud569\ub2c8\ub2e4.  c) \ubaa8\ub4e0 \uc624\ub958\ub97c \ubb34\uc2dc\ud558\uace0 \ud56d\uc0c1 \uc0c1\ud0dc 200\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>API \uc6b0\uc8fc\uc120\uc5d0 \uac15\ub825\ud55c \ubcf4\ud638 \uc2dc\uc2a4\ud15c\uacfc \ube44\uc0c1 \ud504\ub85c\ud1a0\ucf5c\uc744 \uc124\uce58\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c \ub2e4\uc74c\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:</p> <ul> <li>\ud83d\udee1\ufe0f Pydantic\uc744 \uc0ac\uc6a9\ud558\uc5ec \"\uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \ub370\uc774\ud130\" \uacf5\uaca9\uc744 \uc790\ub3d9\uc73c\ub85c \uaca9\ud1f4\ud569\ub2c8\ub2e4.</li> <li>\ud83d\udea8 <code>HTTPException</code>\uc744 \ud1b5\ud574 \ub9ac\uc18c\uc2a4 \ubd80\uc7ac(<code>404 Not Found</code>)\ub97c \uc815\ud655\ud558\uac8c \ubcf4\uace0\ud569\ub2c8\ub2e4.</li> <li>\u2699\ufe0f \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc720\ud6a8\uc131 \uac80\uc0ac\uae30\ub97c \uc0ac\uc6a9\ud558\uc5ec \"\ud2b9\ubcc4 \uac80\uc0ac\"\ub97c \uc218\ud589\ud569\ub2c8\ub2e4.</li> <li>\ud83e\uddef \uc608\uae30\uce58 \uc54a\uc740 \uc624\ub958\ub97c \uc804\uc5ed\uc801\uc73c\ub85c \uac00\ub85c\ucc44\uace0 \ud45c\uc900\ud654\ub41c \uc751\ub2f5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.</li> </ul> <p>\uadc0\ud558\uc758 \"\ucd08\uacf5\uac04 \uc5d4\uc9c4\"\uc740 \ube60\ub97c \ubfd0\ub9cc \uc544\ub2c8\ub77c \ub9e4\uc6b0 \uc548\uc815\uc801\uc785\ub2c8\ub2e4!</p> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li>\"Death Star\"\ub77c\ub294 \uc774\ub984\uc73c\ub85c \uc6b0\uc8fc\uc120\uc744 \uc0dd\uc131\ud558\uace0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uba54\uc2dc\uc9c0\uc640 \ud568\uaed8 <code>400</code> \uc624\ub958\ub97c \uc218\uc2e0\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li><code>GET /spaceships/999</code>\ub97c \uc694\uccad\ud558\uace0 <code>404</code> \uc624\ub958\ub97c \uc218\uc2e0\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li><code>launch_year</code>\ub97c \ubb38\uc790\uc5f4\ub85c \ud3ec\ud568\ud558\ub294 <code>POST</code> \uc694\uccad\uc744 \ubcf4\ub0b4\uace0 <code>422</code> \uc624\ub958\ub97c \uc218\uc2e0\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> </ul> <p>\u26a0\ufe0f \uc624\ub958 \ubc1c\uc0dd \uc2dc:</p> <ul> <li>\ud544\uc694\ud55c \ubaa8\ub4e0 \ubaa8\ub4c8(<code>HTTPException</code>, <code>validator</code>, <code>Request</code>, <code>JSONResponse</code>)\uc774 \uc784\ud3ec\ud2b8\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li><code>@validator</code> \ubc0f <code>@app.exception_handler</code> \ub370\ucf54\ub808\uc774\ud130\uac00 \uc624\ud0c0 \uc5c6\uc774 \uc791\uc131\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> </ul> <p>3\uc7a5 \uc644\ub8cc\ub97c \ucd95\ud558\ub4dc\ub9bd\ub2c8\ub2e4! FastAPI\ub85c \uac15\ub825\ud558\uace0 \ubb38\uc11c\ud654\ub418\uc5b4 \uc788\uc73c\uba70 \uc548\uc804\ud55c API\ub97c \ucc98\uc74c\ubd80\ud130 \uad6c\ucd95\ud558\uace0 \uc2e4\ud589\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc2e4\uc81c \uc6b0\uc8fc \uc784\ubb34\ub97c \uc218\ud589\ud560 \uc900\ube44\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/1/","title":"\ucc55\ud130 4.1: Fetch API\uc758 \uae30\ubcf8","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 45\ubd84</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/1/#1-fetch-api","title":"1. Fetch API: \uad00\uc81c \uc13c\ud130\uc758 \"\uc8fc\uc694 \uc548\ud14c\ub098\"","text":"<p>\uc5ec\ub7ec\ubd84\uc758 \ube44\ud589 \uad00\uc81c \uc13c\ud130\uc5d0 \uc6b0\uc8fc\uc120\uacfc \ud1b5\uc2e0\ud558\uae30 \uc704\ud55c \uac70\ub300\ud55c \ubb34\uc120 \uc548\ud14c\ub098\uac00 \uc788\ub2e4\uace0 \uc0c1\uc0c1\ud574\ubcf4\uc138\uc694. \uc5ec\ub7ec\ubd84\uc740 \uc774 \uc548\ud14c\ub098\ub97c \ud544\uc694\ud55c \uc8fc\ud30c\uc218\uc5d0 \ub9de\ucdb0 \uba85\ub839\uc744 \ubcf4\ub0b4\uace0 \uc751\ub2f5\uc744 \uae30\ub2e4\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>Fetch API\ub294 \ucd5c\uc2e0 \ube0c\ub77c\uc6b0\uc800\uc5d0 \ub0b4\uc7a5\ub41c \"\uc548\ud14c\ub098\"\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uc11c\ubc84\uc5d0 HTTP \uc694\uccad\uc744 \uc218\ud589\ud558\uae30 \uc704\ud55c \ud45c\uc900 JavaScript \uc778\ud130\ud398\uc774\uc2a4\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub2e4\uc74c\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:</p> <ul> <li>\ud83d\udce1 \uc6b0\ub9ac API\uc5d0 \"\uba85\ub839\"(GET, POST, PUT, DELETE)\uc744 \ubcf4\ub0c5\ub2c8\ub2e4.</li> <li>\ud83d\udef0\ufe0f \uc11c\ubc84\ub85c\ubd80\ud130 \"\ud154\ub808\uba54\ud2b8\ub9ac\"(JSON \ub370\uc774\ud130)\ub97c \ubc1b\uc2b5\ub2c8\ub2e4.</li> <li>\u2699\ufe0f \ube44\ub3d9\uae30\uc801\uc73c\ub85c \uc791\ub3d9\ud558\uc5ec \uc751\ub2f5\uc744 \uae30\ub2e4\ub9ac\ub294 \ub3d9\uc548 \uc0ac\uc6a9\uc790 \uc778\ud130\ud398\uc774\uc2a4\ub97c \"\uba48\ucd94\uc9c0\" \uc54a\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p><code>fetch()</code>\ub294 \"\uc548\ud14c\ub098, \uc5f0\uacb0 \uc124\uc815!\"\uc774\ub77c\ub294 \uba85\ub839\uc785\ub2c8\ub2e4. \uc5ec\ub7ec\ubd84\uc740 \uc5ec\uae30\uc5d0 \ub2e4\uc74c\uc744 \uc804\ub2ec\ud569\ub2c8\ub2e4:</p> <ul> <li>\ubaa9\ud45c \uc88c\ud45c (\uc6b0\ub9ac API\uc758 URL).</li> <li>\uba85\ub839 \uc720\ud615 (\uba54\uc11c\ub4dc: GET, POST).</li> <li>\uba85\ub839 \ub0b4\uc6a9 (\uc694\uccad \ubcf8\ubb38, \ud5e4\ub354).</li> </ul> <p>\uc751\ub2f5\uc73c\ub85c \uc2e4\uc81c \ub370\uc774\ud130\ub97c \ubc1b\ub294 \uac83\uc774 \uc544\ub2c8\ub77c, \ub370\uc774\ud130\uac00 \uc62c \uac83\uc774\ub77c\ub294 \uc57d\uc18d (Promise)\uc744 \ubc1b\uc2b5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/1/#2","title":"2. \ube44\ub3d9\uae30\uc131: \uad11\uc18d \ud1b5\uc2e0","text":"<p>\uba40\ub9ac \ub5a8\uc5b4\uc9c4 \uc6b0\uc8fc\uc120\uacfc\uc758 \ud1b5\uc2e0\uc740 \uc2dc\uac04\uc774 \uac78\ub9bd\ub2c8\ub2e4. \uad00\uc81c \uc13c\ud130\uc758 \ubaa8\ub4e0 \uc791\uc5c5\uc744 \uc911\ub2e8\ud558\uace0 \uc751\ub2f5\uc774 \uc62c \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9b4 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \uba85\ub839\uc744 \ubcf4\ub0b4\uace0 \uacc4\uc18d \uc791\uc5c5\ud558\uba70, \uc751\ub2f5\uc774 \uc624\uba74 \uc2dc\uc2a4\ud15c\uc774 \uc5ec\ub7ec\ubd84\uc5d0\uac8c \uc54c\ub9bd\ub2c8\ub2e4.</p> <p>\uc774\uac83\uc774 \ubc14\ub85c \ube44\ub3d9\uae30\uc131\uc785\ub2c8\ub2e4. JavaScript\ub294 \uc11c\ubc84\ub85c\ubd80\ud130 \uc751\ub2f5\uc744 \uae30\ub2e4\ub9ac\ub294 \ub3d9\uc548 \ub098\uba38\uc9c0 \ucf54\ub4dc\uc758 \uc2e4\ud589\uc744 \ucc28\ub2e8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc138\uc2a4\ub97c \uad00\ub9ac\ud558\uae30 \uc704\ud574 Fetch API\ub294 \ud504\ub85c\ubbf8\uc2a4 (Promises)\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</p> <p>\ud504\ub85c\ubbf8\uc2a4 (Promise)\ub294 \uc5ec\ub7ec\ubd84\uc774 \uc694\uccad\uc744 \ubcf4\ub0c8\ub2e4\ub294 \"\uc601\uc218\uc99d\"\uc785\ub2c8\ub2e4. \ub2e4\uc74c \uc138 \uac00\uc9c0 \uc0c1\ud0dc\ub97c \uac00\uc9d1\ub2c8\ub2e4:</p> <ul> <li><code>pending</code> (\ub300\uae30 \uc911): \uc2e0\ud638\uac00 \uc544\uc9c1 \uc804\uc1a1 \uc911\uc785\ub2c8\ub2e4.</li> <li><code>fulfilled</code> (\uc774\ud589\ub428): \uc751\ub2f5\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc218\uc2e0\ub418\uc5c8\uc2b5\ub2c8\ub2e4!</li> <li><code>rejected</code> (\uac70\ubd80\ub428): \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4 (\uc608: \uc5f0\uacb0 \uc5c6\uc74c).</li> </ul>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/1/#3-iss","title":"3. \uccab \ubc88\uc9f8 \uc694\uccad: ISS\uc758 \uc704\uce58 \uc54c\uc544\ub0b4\uae30","text":"<p><code>fetch</code>\ub97c \uc0ac\uc6a9\ud558\uc5ec \uccab \ubc88\uc9f8 \uc694\uccad\uc744 \ubcf4\ub0b4\ubd05\uc2dc\ub2e4. \uac04\ub2e8\ud55c HTML \ud30c\uc77c\uacfc <code>&lt;script&gt;</code> \ud0dc\uadf8\ub97c \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 1: <code>index.html</code> \uc0dd\uc131 \uc0c8 \ud3f4\ub354(\uc608: <code>frontend_fleet_control</code>)\uc5d0 <code>index.html</code> \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uc138\uc694. <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ko\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\uad00\uc81c \uc13c\ud130 - Fetch API&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;ISS \ud1b5\uc2e0 \uc0c1\ud0dc&lt;/h1&gt;\n    &lt;div id=\"iss-status\"&gt;\ub370\uc774\ud130 \ub300\uae30 \uc911...&lt;/div&gt;\n\n    &lt;script&gt;\n        // \uc6b0\ub9ac\uc758 JavaScript \ucf54\ub4dc\uac00 \uc5ec\uae30\uc5d0 \uc635\ub2c8\ub2e4\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>\ub2e8\uacc4 2: <code>fetch</code> \ucf54\ub4dc\ub97c \uc791\uc131\ud569\ub2c8\ub2e4 <code>&lt;script&gt;</code> \ud0dc\uadf8 \uc548\uc5d0 Open Notify\uc758 \uacf5\uac1c API\uc5d0 \ub300\ud55c \uccab \ubc88\uc9f8 <code>fetch</code> \uc694\uccad\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. <pre><code>// index.html -&gt; &lt;script&gt;\n\nconst issApiUrl = 'http://api.open-notify.org/iss-now.json';\nconst statusDiv = document.getElementById('iss-status');\n\nconsole.log('ISS \uc88c\ud45c\ub97c \uac00\uc838\uc624\uae30 \uc704\ud55c \uc694\uccad\uc744 \ubcf4\ub0c5\ub2c8\ub2e4...');\n\nfetch(issApiUrl)\n    .then(response =&gt; {\n        // \uccab \ubc88\uc9f8 .then()\uc740 HTTP \uc751\ub2f5 \uc790\uccb4\ub97c \ucc98\ub9ac\ud569\ub2c8\ub2e4\n        console.log('\uc11c\ubc84\ub85c\ubd80\ud130 \uc751\ub2f5\uc744 \ubc1b\uc558\uc2b5\ub2c8\ub2e4!', response);\n        // \uc751\ub2f5 \ubcf8\ubb38\uc744 JSON\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. \uc774\uac83 \ub610\ud55c \ube44\ub3d9\uae30 \uc791\uc5c5\uc785\ub2c8\ub2e4.\n        return response.json();\n    })\n    .then(data =&gt; {\n        // \ub450 \ubc88\uc9f8 .then()\uc740 \uc774\ubbf8 \ud30c\uc2f1\ub41c JSON \ub370\uc774\ud130\ub97c \ubc1b\uc2b5\ub2c8\ub2e4.\n        console.log('\ub370\uc774\ud130\uac00 \uc131\uacf5\uc801\uc73c\ub85c JSON\uc73c\ub85c \ubcc0\ud658\ub418\uc5c8\uc2b5\ub2c8\ub2e4!', data);\n        const position = data.iss_position;\n        statusDiv.innerHTML = `ISS\ub294 \ud604\uc7ac \uc5ec\uae30\uc5d0 \uc788\uc2b5\ub2c8\ub2e4:\n                               &lt;strong&gt;\uc704\ub3c4:&lt;/strong&gt; ${position.latitude},\n                               &lt;strong&gt;\uacbd\ub3c4:&lt;/strong&gt; ${position.longitude}`;\n    })\n    .catch(error =&gt; {\n        // .catch()\ub294 \ub124\ud2b8\uc6cc\ud06c \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc744 \ub54c \uc791\ub3d9\ud569\ub2c8\ub2e4\n        console.error('ISS \ud1b5\uc2e0 \uc624\ub958!', error);\n        statusDiv.textContent = '\ub370\uc774\ud130\ub97c \uac00\uc838\uc62c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc5f0\uacb0\uc744 \ud655\uc778\ud558\uc138\uc694.';\n    });\n</code></pre></p> <ul> <li><code>fetch(url)</code>: GET \uc694\uccad\uc744 \ubcf4\ub0c5\ub2c8\ub2e4. \ud504\ub85c\ubbf8\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.</li> <li><code>.then(callback)</code>: \ud504\ub85c\ubbf8\uc2a4\uac00 \uc131\uacf5\uc801\uc73c\ub85c \uc774\ud589\ub418\uc5c8\uc744 \ub54c (<code>fulfilled</code>) \uc2e4\ud589\ub429\ub2c8\ub2e4. \uccab \ubc88\uc9f8 <code>.then</code>\uc740 <code>Response</code> \uac1d\uccb4\ub97c \ubc1b\uc2b5\ub2c8\ub2e4.</li> <li><code>response.json()</code>: \uc751\ub2f5 \ubcf8\ubb38\uc744 \uc77d\uace0 JSON\uc73c\ub85c \ud30c\uc2f1\ud558\ub294 \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4. \uc774 \ub610\ud55c \ud504\ub85c\ubbf8\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4!</li> <li><code>.catch(callback)</code>: \ud504\ub85c\ubbf8\uc2a4\uac00 \uac70\ubd80\ub418\uc5c8\uc744 \ub54c (<code>rejected</code>), \uc608\ub97c \ub4e4\uc5b4 \ub124\ud2b8\uc6cc\ud06c \uc624\ub958\ub85c \uc778\ud574 \uc2e4\ud589\ub429\ub2c8\ub2e4.</li> </ul> <p>\ub2e8\uacc4 3: \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc5f4\uae30 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c <code>index.html</code> \ud30c\uc77c\uc744 \uc5f4\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4. \"\ub370\uc774\ud130 \ub300\uae30 \uc911...\"\uc774 \ud604\uc7ac ISS \uc88c\ud45c\ub85c \ubc14\ub00c\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. \uac1c\ubc1c\uc790 \ucf58\uc194(F12)\uc744 \uc5f4\uc5b4 \ub85c\uadf8\ub97c \ud655\uc778\ud558\uc138\uc694.</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/1/#4","title":"4. \"\ub9cc\uc57d ...\uc774\ub77c\uba74?\": \uc11c\ubc84 \uc624\ub958 \ucc98\ub9ac","text":"<p>\ub9cc\uc57d \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 URL\uc744 \uc694\uccad\ud558\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c\uc694? <code>fetch('http://api.open-notify.org/non-existent-endpoint')</code></p> <p><code>fetch</code>\ub294 <code>.catch()</code>\uac00 \ub124\ud2b8\uc6cc\ud06c \uc624\ub958(\uc778\ud130\ub137 \uc5c6\uc74c, DNS\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc74c)\uac00 \ubc1c\uc0dd\ud588\uc744 \ub54c\ub9cc \uc791\ub3d9\ud558\ub3c4\ub85d \uc124\uacc4\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc <code>404</code> \ub610\ub294 <code>500</code> \ucf54\ub4dc\uc758 \uc751\ub2f5\uc740 <code>fetch</code>\uc5d0\uac8c\ub294 \uc131\uacf5\uc801\uc73c\ub85c \uc218\uc2e0\ub41c \uc751\ub2f5\uc785\ub2c8\ub2e4! \ub2e8\uc9c0 \uc624\ub958 \ucf54\ub4dc\ub97c \ud3ec\ud568\ud558\uace0 \uc788\uc744 \ubfd0\uc774\uc8e0.</p> <p>\uc62c\ubc14\ub978 \ud655\uc778 \ubc29\ubc95: <pre><code>fetch('http://api.open-notify.org/non-existent-endpoint')\n    .then(response =&gt; {\n        // 200-299 \uc0c1\ud0dc \ucf54\ub4dc\uc5d0 \ub300\ud574 true\uc778 .ok \uc18d\uc131\uc744 \ud655\uc778\ud569\ub2c8\ub2e4.\n        if (!response.ok) {\n            // \uc751\ub2f5\uc774 \"OK\"\uac00 \uc544\ub2c8\uba74, .catch()\ub85c \uc774\ub3d9\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc624\ub958\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.\n            throw new Error(`HTTP \uc624\ub958! \uc0c1\ud0dc: ${response.status}`);\n        }\n        return response.json();\n    })\n    .then(data =&gt; {\n        console.log(data);\n    })\n    .catch(error =&gt; {\n        console.error('\uc694\uccad \uc2e4\ud589 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4:', error);\n    });\n</code></pre></p> <ul> <li><code>response.ok</code>: \uc774\uac83\uc774 \uc5ec\ub7ec\ubd84\uc758 \uc8fc\uc694 \uc131\uacf5 \uc9c0\ud45c\uc785\ub2c8\ub2e4.</li> <li><code>throw new Error()</code>: <code>.catch</code> \ube14\ub85d\uc73c\ub85c \uc774\ub3d9\ud558\uae30 \uc704\ud574 \ud504\ub85c\ubbf8\uc2a4 \uccb4\uc778\uc744 \uc218\ub3d9\uc73c\ub85c \"\uc2e4\ud328\"\uc2dc\ud0b5\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/1/#_1","title":"\uc815\ub9ac\ub97c \uc704\ud55c \ud034\uc988","text":"<p>1. Fetch API\ub294...</p>  a) \ub2e4\uc6b4\ub85c\ub4dc\ud574\uc57c \ud558\ub294 \uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac  b) HTTP \uc694\uccad\uc744 \uc704\ud55c \ube0c\ub77c\uc6b0\uc800 \ub0b4\uc7a5 \uc778\ud130\ud398\uc774\uc2a4  c) \ub124\ud2b8\uc6cc\ud06c \uc791\uc5c5\uc6a9 \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4 <p>2. `fetch(url)` \ud638\ucd9c\uc740 \ubb34\uc5c7\uc744 \ubc18\ud658\ud558\ub098\uc694?</p>  a) \uc989\uc2dc JSON \ub370\uc774\ud130  b) `Promise` \uac1d\uccb4 (\uc57d\uc18d)  c) HTML \ud398\uc774\uc9c0 <p>3. \ud504\ub85c\ubbf8\uc2a4 \uccb4\uc778\uc758 `.then()` \uba54\uc11c\ub4dc\ub294 \ub2e4\uc74c \uacbd\uc6b0\uc5d0 \ud638\ucd9c\ub429\ub2c8\ub2e4...</p>  a) \ub124\ud2b8\uc6cc\ud06c \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \ub54c  b) \uc694\uccad\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc644\ub8cc\ub420 \ub54c  c) \uc0ac\uc6a9\uc790\uac00 \ud0ed\uc744 \ub2eb\uc744 \ub54c <p>4. `response.json()` \uba54\uc11c\ub4dc\ub294 \ub2e4\uc74c\uc744 \uc704\ud574 \ud544\uc694\ud569\ub2c8\ub2e4...</p>  a) \uc751\ub2f5 \ubcf8\ubb38\uc744 JavaScript \uac1d\uccb4\ub85c \ubcc0\ud658\ud558\uae30 \uc704\ud574  b) \uc751\ub2f5\uc774 \uc720\ud6a8\ud55c JSON\uc778\uc9c0 \ud655\uc778\ud558\uae30 \uc704\ud574  c) JSON \ud615\uc2dd\uc73c\ub85c \uc11c\ubc84\uc5d0 \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\uae30 \uc704\ud574 <p>5. \uc11c\ubc84\uac00 \uc624\ub958(\uc608: 404)\ub97c \ubc18\ud658\ud558\uc9c0 \uc54a\uc558\ub294\uc9c0 \uc62c\ubc14\ub974\uac8c \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc740 \ubb34\uc5c7\uc778\uac00\uc694?</p>  a) `response.ok` \uc18d\uc131\uc744 \ud655\uc778\ud569\ub2c8\ub2e4  b) `.catch()` \ube14\ub85d\uc774 \uc791\ub3d9\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4  c) `response.status`\uac00 \"OK\"\uc778\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4 \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\uad00\uc81c \uc13c\ud130\uc758 \"\uba54\uc778 \uc548\ud14c\ub098\"\ub97c \uc124\uc815\ud558\uace0 \uc694\uccad\uc744 \ubcf4\ub0b4\uace0 \uc751\ub2f5\uc744 \ubc1b\ub294 \ubc29\ubc95\uc744 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4.</p> <ul> <li>\ud83d\udce1 <code>fetch()</code>\uc758 \uae30\ubcf8 \uad6c\ubb38\uc744 \ub9c8\uc2a4\ud130\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\ud83d\udef0\ufe0f \ud504\ub85c\ubbf8\uc2a4(Promises)\uac00 \ubb34\uc5c7\uc774\uba70 <code>.then()</code> \ubc0f <code>.catch()</code>\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \uc774\ud574\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\u2699\ufe0f <code>response.ok</code>\ub97c \ud655\uc778\ud558\uc5ec \uc11c\ubc84 \uc751\ub2f5\uc744 \uc62c\ubc14\ub974\uac8c \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\uc5f0\uacb0\ub418\uc5c8\uc2b5\ub2c8\ub2e4! \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \uad00\uc81c \uc13c\ud130\ub97c FastAPI\ub85c \uc0dd\uc131\ud55c \uc6b0\uc8fc \ud568\ub300 API\uc5d0 \uc5f0\uacb0\ud558\uace0 \ud568\uc120 \ubaa9\ub85d\uc744 \uac00\uc838\uc640 \ud45c\uc2dc\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li><code>index.html</code> \ud30c\uc77c\uc774 ISS \uc88c\ud45c\ub97c \uc62c\ubc14\ub974\uac8c \ud45c\uc2dc\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> <li>\uc758\ub3c4\uc801\uc73c\ub85c URL\uc744 \uae68\ub728\ub9b0 \ub2e4\uc74c \uac1c\ubc1c\uc790 \ucf58\uc194\uc5d0 \uc5b4\ub5a4 \uc624\ub958\uac00 \ucd9c\ub825\ub418\ub294\uc9c0 \ud655\uc778\ud574 \ubcf4\uc138\uc694.</li> </ul> <p>\u26a0\ufe0f \ucf54\ub4dc\uac00 \uc791\ub3d9\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0:</p> <ul> <li>CORS \uc624\ub958: \ub85c\uceec FastAPI API(<code>http://127.0.0.1:8000</code> \ub4f1)\uc5d0 <code>file:///...</code>\ub85c \uc5f4\ub9b0 \ud30c\uc77c\uc5d0\uc11c \uc694\uccad\ud558\ub824\uace0 \ud558\uba74 \ube0c\ub77c\uc6b0\uc800\ub294 CORS \ubcf4\uc548 \uc815\ucc45\uc73c\ub85c \uc778\ud574 \uc694\uccad\uc744 \ucc28\ub2e8\ud569\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub294 \ub2e4\uc74c \uc7a5\uc5d0\uc11c \ud574\uacb0\ud560 \uac83\uc785\ub2c8\ub2e4. \ud604\uc7ac\ub294 \uc774\ub97c \ud5c8\uc6a9\ud558\ub294 \uacf5\uac1c API\ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>HTTP/HTTPS: <code>http://api.open-notify.org</code>\ub294 HTTP\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc77c\ubd80 \ube0c\ub77c\uc6b0\uc800\ub294 \uc774\uc5d0 \ub300\ud574 \uacbd\uace0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HTTPS \uc6f9\uc0ac\uc774\ud2b8\uc5d0\uc11c \uc791\uc5c5\ud558\ub294 \uacbd\uc6b0 HTTP \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \uc694\uccad\uc774 \ucc28\ub2e8\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/2/","title":"4.2\uc7a5: GET \uc694\uccad \uc804\uc1a1","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 45\ubd84</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/2/#1-get","title":"1. GET: \uc6b0\uc8fc \ud568\ub300 \uc6d0\uaca9 \uce21\uc815 \uc694\uccad","text":"<p>GET \uc694\uccad\uc740 \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\uae30 \uc704\ud55c \uae30\ubcf8 \uba85\ub839\uc5b4\uc785\ub2c8\ub2e4. \uc6b0\ub9ac \ud1b5\uc81c \uc13c\ud130\uc5d0\uc11c\ub294 \uc774\ub294 \"\ud568\ub300 \ud1b5\uc81c \uc13c\ud130, \uc0c1\ud669\uc744 \ubcf4\uace0\ud558\ub77c!\"\ub77c\ub294 \uc694\uccad\uacfc \uac19\uc2b5\ub2c8\ub2e4.</p> <p>FastAPI \uc11c\ubc84\uc5d0 \ub450 \uac00\uc9c0 \uc720\ud615\uc758 GET \uc694\uccad\uc744 \ubcf4\ub0b4\uae30 \uc704\ud574 <code>fetch</code>\ub97c \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4:</p> <ol> <li>\uc804\uccb4 \uceec\ub809\uc158 \uac00\uc838\uc624\uae30: \"\ub0b4 \ubaa8\ub4e0 \ud568\ub300\ub97c \ubcf4\uc5ec\uc918\".</li> <li>\ub2e8\uc77c \ub9ac\uc18c\uc2a4 \uac00\uc838\uc624\uae30: \"ID 2\ubc88 \ud568\uc120\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc815\ubcf4\ub97c \uc918\".</li> </ol> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p><code>GET /spaceships</code>\ub294 \ubaa8\ub4e0 \ud568\ub300\uc5d0 \ud638\ucd9c \ubd80\ud638\ub97c \ubcf4\uace0\ud558\ub3c4\ub85d \uc694\uccad\ud558\ub294 \uad11\uc5ed \uc694\uccad\uc785\ub2c8\ub2e4.</p> <p><code>GET /spaceships/3</code>\uc740 \ud2b9\uc815 \ud568\uc120(ISS)\uc5d0 \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \uc804\uccb4 \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud558\ub3c4\ub85d \uc694\uccad\ud558\ub294 \uc8fc\uc18c \uc9c0\uc815 \uc694\uccad\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/2/#2-cors","title":"2. CORS \ubb38\uc81c: \"\ud589\uc131 \uac04 \uac04\uc12d\"","text":"<p>\uc694\uccad\uc744 \ubcf4\ub0b4\uae30 \uc804\uc5d0 \ud55c \uac00\uc9c0 \uc911\uc694\ud55c \ubb38\uc81c\ub97c \ud574\uacb0\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ube0c\ub77c\uc6b0\uc800\ub294 \ubcf4\uc548\uc0c1\uc758 \uc774\uc720\ub85c \ud55c \"\ub3c4\uba54\uc778\"(<code>file:///...</code> \ub610\ub294 <code>http://localhost:5500</code>)\uc5d0\uc11c \ub85c\ub4dc\ub41c \uc6f9 \ud398\uc774\uc9c0(\uc6b0\ub9ac\uc758 \ud1b5\uc81c \uc13c\ud130)\uac00 \ub2e4\ub978 \"\ub3c4\uba54\uc778\"(<code>http://127.0.0.1:8000</code>)\uc758 API\ub85c \uc694\uccad\uc744 \ubcf4\ub0b4\ub294 \uac83\uc744 \uae08\uc9c0\ud569\ub2c8\ub2e4.</p> <p>\uc774 \uc815\ucc45\uc744 CORS(\uad50\ucc28 \ucd9c\ucc98 \ub9ac\uc18c\uc2a4 \uacf5\uc720)\ub77c\uace0 \ud569\ub2c8\ub2e4.</p> <p>\ud504\ub860\ud2b8\uc5d4\ub4dc\uac00 \ubc31\uc5d4\ub4dc\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub824\uba74 FastAPI \uc11c\ubc84\uac00 \ube0c\ub77c\uc6b0\uc800\uc5d0\uac8c \"\uad1c\ucc2e\uc544, \uc774 \uc8fc\uc18c\uc5d0\uc11c\uc758 \uc694\uccad\uc744 \uc2e0\ub8b0\ud574\"\ub77c\uace0 \ub9d0\ud558\ub3c4\ub85d \uad6c\uc131\ud574\uc57c \ud569\ub2c8\ub2e4.</p> <p>1\ub2e8\uacc4: <code>python-multipart</code> \uc124\uce58 \ubbf8\ub4e4\uc6e8\uc5b4\uc758 \uc62c\ubc14\ub978 \uc791\ub3d9\uc744 \uc704\ud574 \ud544\uc694\ud569\ub2c8\ub2e4. <pre><code>pip install python-multipart\n</code></pre></p> <p>2\ub2e8\uacc4: <code>main.py</code>\uc5d0\uc11c CORS \uc124\uc815 FastAPI \ud504\ub85c\uc81d\ud2b8\uc758 <code>main.py</code> \ud30c\uc77c\uc744 \uc5f4\uace0 \ub2e4\uc74c \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\uc138\uc694: <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware  # &lt;-- \ubbf8\ub4e4\uc6e8\uc5b4 \uc784\ud3ec\ud2b8\n\n# ... \ub098\uba38\uc9c0 \ucf54\ub4dc (\ubaa8\ub378, db_spaceships) ...\n\napp = FastAPI(\n    title=\"Fleet Management API\",\n    # ...\n)\n\n# --- CORS \uc124\uc815 ---\n# \uc5b4\ub5a4 \"\ub3c4\uba54\uc778\"(origins)\uc774 \uc694\uccad\uc744 \ubcf4\ub0bc \uc218 \uc788\ub294\uc9c0 \uc9c0\uc815\ud569\ub2c8\ub2e4.\norigins = [\n    \"http://localhost\",\n    \"http://localhost:8080\",\n    \"http://127.0.0.1:5500\",  # VS Code\uc758 Live Server\uc6a9 \uc8fc\uc18c\n    \"null\"  # \ub85c\uceec \ud30c\uc77c file:/// \uc5d0\uc11c\uc758 \uc694\uccad\uc6a9\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # \uc9c0\uc815\ub41c origins \ud5c8\uc6a9\n    allow_credentials=True,\n    allow_methods=[\"*\"],  # \ubaa8\ub4e0 \uba54\uc11c\ub4dc (GET, POST \ub4f1) \ud5c8\uc6a9\n    allow_headers=[\"*\"],  # \ubaa8\ub4e0 \ud5e4\ub354 \ud5c8\uc6a9\n)\n\n# --- \uc544\ub798\uc5d0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 ---\n@app.get(\"/\")\n# ...\n</code></pre> \uc774\uc81c API \uc11c\ubc84\ub294 \ud504\ub860\ud2b8\uc5d4\ub4dc\ub85c\ubd80\ud130 \uc694\uccad\uc744 \ubc1b\uc744 \uc900\ube44\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc801\uc6a9\ud558\ub824\uba74 <code>uvicorn</code>\uc744 \ub2e4\uc2dc \uc2dc\uc791\ud558\uc138\uc694!</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/2/#3","title":"3. \ubaa8\ub4e0 \ud568\uc120 \ubaa9\ub85d \uac00\uc838\uc624\uae30","text":"<p>\uc6b0\ub9ac \ud568\ub300\ub97c \ud45c\uc2dc\ud560 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ub9cc\ub4e4\uc5b4\ubd05\uc2dc\ub2e4.</p> <p>1\ub2e8\uacc4: <code>index.html</code> \uc5c5\ub370\uc774\ud2b8 <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ko\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\ud1b5\uc81c \uc13c\ud130 - \ud568\ub300 \uad00\ub9ac&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: sans-serif; }\n        .ship-list { list-style: none; padding: 0; }\n        .ship-list li { border: 1px solid #ccc; margin-bottom: 10px; padding: 15px; border-radius: 5px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\uc6b0\uc8fc \ud568\ub300 \uc81c\uc5b4\ud310&lt;/h1&gt;\n\n    &lt;button id=\"load-fleet-btn\"&gt;\ud568\ub300 \ub370\uc774\ud130 \uc694\uccad&lt;/button&gt;\n\n    &lt;h2&gt;\uae30\uae30 \ubaa9\ub85d:&lt;/h2&gt;\n    &lt;ul id=\"fleet-list\" class=\"ship-list\"&gt;\n        &lt;li&gt;\uba85\ub839 \ub300\uae30 \uc911...&lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt; &lt;!-- \uc678\ubd80 \uc2a4\ud06c\ub9bd\ud2b8 \uc5f0\uacb0 --&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>2\ub2e8\uacc4: <code>app.js</code> \uc0dd\uc131 <code>index.html</code> \uc606\uc5d0 <code>app.js</code> \ud30c\uc77c\uc744 \ub9cc\ub4dc\uc138\uc694. \uc5ec\uae30\uc5d0 \ubaa8\ub4e0 \ub85c\uc9c1\uc744 \ubc30\uce58\ud560 \uac83\uc785\ub2c8\ub2e4. <pre><code>// app.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // \uc6b0\ub9ac FastAPI \uc11c\ubc84\uc758 URL\n\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetList = document.getElementById('fleet-list');\n\n// \ud568\ub300 \ub85c\ub4dc \ubc0f \ud45c\uc2dc \ud568\uc218\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;\uc6d0\uaca9 \uce21\uc815 \ub85c\ub4dc \uc911...&lt;/li&gt;';\n\n        // /spaceships\ub85c GET \uc694\uccad \uc804\uc1a1\n        const response = await fetch(`${API_BASE_URL}/spaceships`);\n\n        if (!response.ok) {\n            throw new Error(`\ub124\ud2b8\uc6cc\ud06c \uc624\ub958: ${response.status}`);\n        }\n\n        const ships = await response.json(); // \ud568\uc120 \ubc30\uc5f4 \uac00\uc838\uc624\uae30\n\n        // \ubaa9\ub85d\uc744 \uc9c0\uc6b0\uace0 \ub370\uc774\ud130 \ud45c\uc2dc\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;\ub4f1\ub85d\ub41c \uae30\uae30\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            const listItem = document.createElement('li');\n            listItem.innerHTML = `\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                \uc720\ud615: ${ship.type}&lt;br&gt;\n                \ubc1c\uc0ac \uc5f0\ub3c4: ${ship.launch_year}&lt;br&gt;\n                \uc0c1\ud0dc: ${ship.status}\n            `;\n            fleetList.appendChild(listItem);\n        });\n\n    } catch (error) {\n        console.error('\ud568\ub300 \ub370\uc774\ud130\ub97c \ub85c\ub4dc\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4:', error);\n        fleetList.innerHTML = `&lt;li&gt;\uc624\ub958: ${error.message}&lt;/li&gt;`;\n    }\n}\n\n// \ubc84\ud2bc\uc5d0 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \ucd94\uac00\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\n</code></pre></p> <ul> <li>async/await: \uc6b0\ub9ac\ub294 \ud504\ub77c\ubbf8\uc2a4 \uc791\uc5c5\uc744 \uc704\ud55c \uc0c8\ub86d\uace0 \ub354 \ud3b8\ub9ac\ud55c \uad6c\ubb38\uc744 \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4. 4.5\uc7a5\uc5d0\uc11c \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc9c0\uae08\uc740 <code>await</code>\uac00 \ud398\uc774\uc9c0\ub97c \ucc28\ub2e8\ud558\uc9c0 \uc54a\uace0 \ud504\ub77c\ubbf8\uc2a4 \uc2e4\ud589\uc744 \"\uae30\ub2e4\ub9b0\ub2e4\"\ub294 \uac83\ub9cc \uc54c\uc544\ub450\uc138\uc694.</li> <li><code>try...catch</code>: \ube44\ub3d9\uae30 \ud568\uc218\uc5d0\uc11c \uc624\ub958\ub97c \ucc98\ub9ac\ud558\ub294 \uc88b\uc740 \ubc29\ubc95\uc785\ub2c8\ub2e4.</li> </ul> <p>3\ub2e8\uacc4: \ud14c\uc2a4\ud2b8 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c <code>index.html</code>\uc744 \uc5fd\ub2c8\ub2e4 (VS Code\uc758 Live Server \ud655\uc7a5 \uae30\ub2a5\uc744 \ud1b5\ud574 <code>http://127.0.0.1:5500</code>\uc5d0\uc11c \uc2e4\ud589\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4). \"\ud568\ub300 \ub370\uc774\ud130 \uc694\uccad\" \ubc84\ud2bc\uc744 \ud074\ub9ad\ud569\ub2c8\ub2e4. FastAPI\uc5d0\uc11c \uac00\uc838\uc628 \ud568\uc120 \ubaa9\ub85d\uc774 \ud398\uc774\uc9c0\uc5d0 \ud45c\uc2dc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4!</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/2/#4","title":"4. \ub2e8\uc77c \ud568\uc120 \ub370\uc774\ud130 \uac00\uc838\uc624\uae30","text":"<p>\uc774\uc81c \ud2b9\uc815 ID\ub85c \uc815\ubcf4\ub97c \uc694\uccad\ud558\ub294 \uc591\uc2dd\uc744 \ucd94\uac00\ud574\ubd05\uc2dc\ub2e4.</p> <p>1\ub2e8\uacc4: <code>index.html</code>\uc5d0 \uc591\uc2dd \ucd94\uac00 <pre><code>&lt;!-- index.html, \ubaa9\ub85d \ub4a4 --&gt;\n&lt;hr&gt;\n&lt;h2&gt;ID\ub85c \uc694\uccad&lt;/h2&gt;\n&lt;form id=\"ship-form\"&gt;\n    &lt;input type=\"number\" id=\"ship-id-input\" placeholder=\"\uae30\uae30 ID \uc785\ub825\" required&gt;\n    &lt;button type=\"submit\"&gt;\uae30\uae30 \ucc3e\uae30&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"ship-details\" class=\"ship-list\"&gt;&lt;/div&gt;\n</code></pre></p> <p>2\ub2e8\uacc4: <code>app.js</code>\uc5d0 \ub85c\uc9c1 \ucd94\uac00 <pre><code>// app.js, \ud30c\uc77c \ub05d\uc5d0\n\nconst shipForm = document.getElementById('ship-form');\nconst shipIdInput = document.getElementById('ship-id-input');\nconst shipDetails = document.getElementById('ship-details');\n\nasync function fetchShipById(event) {\n    event.preventDefault(); // \ud398\uc774\uc9c0 \uc0c8\ub85c\uace0\uce68 \ubc29\uc9c0\n    const shipId = shipIdInput.value;\n\n    if (!shipId) {\n        alert('ID\ub97c \uc785\ub825\ud574\uc8fc\uc138\uc694.');\n        return;\n    }\n\n    try {\n        shipDetails.innerHTML = '&lt;li&gt;\uae30\uae30 \uac80\uc0c9 \uc911...&lt;/li&gt;';\n\n        // /spaceships/{id}\ub85c GET \uc694\uccad \uc804\uc1a1\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`);\n\n        if (response.status === 404) {\n             throw new Error('\ud574\ub2f9 ID\uc758 \uae30\uae30\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.');\n        }\n        if (!response.ok) {\n            throw new Error(`\ub124\ud2b8\uc6cc\ud06c \uc624\ub958: ${response.status}`);\n        }\n\n        const ship = await response.json();\n\n        shipDetails.innerHTML = `\n            &lt;li&gt;\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                \uc720\ud615: ${ship.type}&lt;br&gt;\n                \ubc1c\uc0ac \uc5f0\ub3c4: ${ship.launch_year}&lt;br&gt;\n                \uc0c1\ud0dc: ${ship.status}\n            &lt;/li&gt;\n        `;\n    } catch (error) {\n        console.error(`\uae30\uae30 ${shipId} \uac80\uc0c9 \uc624\ub958:`, error);\n        shipDetails.innerHTML = `&lt;li&gt;\uc624\ub958: ${error.message}&lt;/li&gt;`;\n    }\n}\n\nshipForm.addEventListener('submit', fetchShipById);\n</code></pre></p> <ul> <li>\uc0ac\uc6a9\uc790\uc5d0\uac8c \ub354 \uba85\ud655\ud55c \uc624\ub958 \uba54\uc2dc\uc9c0\ub97c \uc81c\uacf5\ud558\uae30 \uc704\ud574 <code>404</code> \uc0c1\ud0dc\ub97c \ubcc4\ub3c4\ub85c \ucc98\ub9ac\ud588\uc2b5\ub2c8\ub2e4.</li> </ul> <p>3\ub2e8\uacc4: \ud14c\uc2a4\ud2b8 \ud398\uc774\uc9c0\ub97c \uc0c8\ub85c\uace0\uce68\ud558\uace0, \uae30\uc874 \ud568\uc120\uc758 ID(\uc608: 1)\ub97c \uc785\ub825\ud55c \ub2e4\uc74c \"\uae30\uae30 \ucc3e\uae30\"\ub97c \ud074\ub9ad\ud569\ub2c8\ub2e4. \ud574\ub2f9 \ub370\uc774\ud130\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 ID(\uc608: 99)\ub97c \uc785\ub825\ud574\ubcf4\uc138\uc694. \uc624\ub958 \uba54\uc2dc\uc9c0\uac00 \ud45c\uc2dc\ub420 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/2/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. \ube0c\ub77c\uc6b0\uc800\uc758 CORS \uc815\ucc45\uc774 \ud544\uc694\ud55c \uc774\uc720\ub294...</p>  a) \ud398\uc774\uc9c0 \ub85c\ub529 \uc18d\ub3c4 \ud5a5\uc0c1  b) \uc545\uc131 \uad50\ucc28 \uc0ac\uc774\ud2b8 \uc694\uccad\uc73c\ub85c\ubd80\ud130 \ubcf4\ud638  c) JSON \ub370\uc774\ud130 \uc555\ucd95 <p>2. `localhost:5500`\uc758 \ud504\ub7f0\ud2b8\uc5d4\ub4dc\uac00 FastAPI\uc5d0 \uc811\uadfc\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub824\uba74...</p>  a) FastAPI\uc5d0\uc11c `CORSMiddleware` \uc124\uc815  b) \ube0c\ub77c\uc6b0\uc800 \uc124\uc815 \ubcc0\uacbd  c) \uc544\ubb34\uac83\ub3c4 \ud544\uc694 \uc5c6\uc74c, \uae30\ubcf8\uc801\uc73c\ub85c \uc791\ub3d9\ud568 <p>3. ID=5\uc778 \ud2b9\uc815 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub97c \uc5bb\uc73c\ub824\uba74 \uc694\uccad URL\uc740 \ub2e4\uc74c\uacfc \uac19\uc544\uc57c \ud569\ub2c8\ub2e4:</p>  a) `/resources?id=5`  b) `/resources/5`  c) `/get/resources/5` <p>4. JavaScript\uc5d0\uc11c `await` \ud0a4\uc6cc\ub4dc\ub294 \ub2e4\uc74c\uc73c\ub85c \uc120\uc5b8\ub41c \ud568\uc218 \ub0b4\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:</p>  a) `function`  b) `promise`  c) `async` <p>5. \ud3fc \uc81c\ucd9c \ud578\ub4e4\ub7ec\uc5d0\uc11c `event.preventDefault()`\ub294 \ub2e4\uc74c\uc744 \uc704\ud574 \ud544\uc694\ud569\ub2c8\ub2e4:</p>  a) \ube0c\ub77c\uc6b0\uc800\uc758 \uae30\ubcf8 \ub3d9\uc791(\ud398\uc774\uc9c0 \uc0c8\ub85c\uace0\uce68) \ubc29\uc9c0  b) \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589 \uc911\uc9c0  c) \uc694\uccad \uc804\uc1a1 \ucde8\uc18c \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\"\uc9c0\uad6c\"\uc640 \"\uc6b0\uc8fc\" \uac04\uc758 \ud1b5\uc2e0 \ucc44\ub110\uc744 \uc131\uacf5\uc801\uc73c\ub85c \uc124\uc815\ud558\uace0 \uc6d0\uaca9 \uce21\uc815\uc744 \uc694\uccad\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4!</p> <ul> <li>\ud83d\udee1\ufe0f FastAPI \uc11c\ubc84\uc5d0 CORS\ub97c \uc124\uc815\ud558\uc5ec \"\ud589\uc131 \uac04 \uac04\uc12d\" \ubb38\uc81c\ub97c \ud574\uacb0\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\ud83d\udef0\ufe0f \ubaa8\ub4e0 \uc6b0\uc8fc\uc120 \ubaa9\ub85d\uc744 \uac00\uc838\uc640 \ud45c\uc2dc\ud558\ub294 \uae30\ub2a5\uc744 \uad6c\ud604\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\ud83d\udd2d ID\ub85c \ud2b9\uc815 \uc6b0\uc8fc\uc120\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub97c \uc694\uccad\ud558\ub294 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\uad00\uc81c \uc13c\ud130\uac00 \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4! \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \uc6b0\uc8fc\uc120\uc744 \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8 \ubc0f \uc0ad\uc81c\ud558\ub294 \uba85\ub839\uc744 \uc804\uc1a1\ud558\ub294 \ub4f1 \uc801\uadf9\uc801\uc778 \uc870\uce58\ub85c \ub118\uc5b4\uac08 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li><code>CORSMiddleware</code>\uac00 \uc124\uc815\ub41c \uc0c1\ud0dc\ub85c FastAPI \uc11c\ubc84\uac00 \uc2e4\ud589 \uc911\uc778\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> <li>\"\ub370\uc774\ud130 \uc694\uccad\" \ubc84\ud2bc\uc744 \ud074\ub9ad\ud560 \ub54c \ud398\uc774\uc9c0\uc5d0 \uc6b0\uc8fc\uc120 \ubaa9\ub85d\uc774 \ub098\ud0c0\ub098\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> <li>ID\ub85c \uac80\uc0c9\ud558\ub294 \ud3fc\uc774 \uae30\uc874 \uc6b0\uc8fc\uc120\uc744 \uc62c\ubc14\ub974\uac8c \ucc3e\uace0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uc6b0\uc8fc\uc120\uc5d0 \ub300\ud574 \uc624\ub958\ub97c \ubcf4\uace0\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> </ul> <p>\u26a0\ufe0f \uc624\ub958 \ubc1c\uc0dd \uc2dc:</p> <ul> <li>\ube0c\ub77c\uc6b0\uc800 \ucf58\uc194\uc758 CORS \uc624\ub958: <code>CORSMiddleware</code>\ub97c \ucd94\uac00\ud55c \ud6c4 <code>uvicorn</code>\uc744 \ub2e4\uc2dc \uc2dc\uc791\ud558\uc9c0 \uc54a\uc558\uac70\ub098, \ud504\ub7f0\ud2b8\uc5d4\ub4dc \uc8fc\uc18c(\uc608: <code>http://127.0.0.1:5500</code>)\uac00 <code>origins</code> \ubaa9\ub85d\uc5d0 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>Failed to fetch: FastAPI \uc11c\ubc84\uac00 \uc2e4\ud589 \uc911\uc774\uace0 <code>API_BASE_URL</code>\uc5d0 \uc9c0\uc815\ub41c \uc8fc\uc18c\ub85c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> </ul>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/3/","title":"\ucc55\ud130 4.3: POST/PUT/DELETE \uc694\uccad \ubcf4\ub0b4\uae30","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 1\uc2dc\uac04</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/3/#1","title":"1. \ub2a5\ub3d9\ud615 \uba85\ub839\uc5b4: \uc2e4\ud589\ubd80\ud130 \ud3d0\uae30\uae4c\uc9c0","text":"<p>\uc9c0\uae08\uae4c\uc9c0 \uc6b0\ub9ac \ud1b5\uc81c \uc13c\ud130\ub294 \uc815\ubcf4\ub9cc \uc694\uccad\ud588\uc2b5\ub2c8\ub2e4(<code>GET</code>). \uc774\uc81c \ub2a5\ub3d9\ud615 \uba85\ub839\uc5b4\ub97c \ubcf4\ub0b4\ub294 \ubc29\ubc95\uc744 \ubc30\uc6b8 \uac83\uc785\ub2c8\ub2e4:</p> <ul> <li>POST: \"\uc0c8 \uc704\uc131\uc744 \uada4\ub3c4\uc5d0 \ubc1c\uc0ac\ud558\ub77c!\"</li> <li>PUT: \"ISS \uc2dc\uc2a4\ud15c\uc744 \uc804\uba74 \ud604\ub300\ud654\ud558\ub77c!\"</li> <li>DELETE: \"\uc624\ub798\ub41c \uc7a5\uce58 <code>Debris-123</code>\uc744 \uada4\ub3c4\uc5d0\uc11c \uc774\ud0c8\uc2dc\ucf1c\ub77c!\"</li> </ul> <p>\uc774\ub97c \uc704\ud574 <code>fetch</code>\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, \uc774\ubc88\uc5d0\ub294 \uba85\ub839\uc5b4\ub97c \uc124\uba85\ud558\ub294 \ucd94\uac00 \ub9e4\uac1c\ubcc0\uc218\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</p> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p><code>GET</code>\uc774 \ub77c\ub514\uc624 \ubc29\uc1a1\uc744 \uc218\ub3d9\uc801\uc73c\ub85c \uccad\ucde8\ud558\ub294 \uac83\uc774\ub77c\uba74, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>\ub294 \ub2a5\ub3d9\uc801\uc73c\ub85c \uba85\ub839\uc5b4\ub97c \uc804\uc1a1\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574\uc11c\ub294 \"\uc8fc\ud30c\uc218\"(URL)\ubfd0\ub9cc \uc544\ub2c8\ub77c \uba85\ub839\uc5b4\uc758 \ub0b4\uc6a9(\uc694\uccad \ubcf8\ubb38)\uacfc \ud1b5\uc2e0 \ud504\ub85c\ud1a0\ucf5c(\ud5e4\ub354)\ub3c4 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/3/#2-post","title":"2. POST \uc694\uccad \ubcf4\ub0b4\uae30: \uc0c8 \uc6b0\uc8fc\uc120 \ubc1c\uc0ac","text":"<p>\uc0c8 \ub9ac\uc18c\uc2a4\ub97c \uc0dd\uc131\ud558\ub824\uba74 <code>POST</code> \uc694\uccad\uc744 \ubcf4\ub0c5\ub2c8\ub2e4. \uc5ec\uae30\uc11c \uac00\uc7a5 \uc911\uc694\ud55c \uac83\uc740 \uc0c8 \uac1d\uccb4\uc758 \ub370\uc774\ud130\ub97c \ub2f4\uc740 \uc694\uccad\uc758 \ubcf8\ubb38(body)\uc744 \uc804\ub2ec\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.</p> <p>1\ub2e8\uacc4: <code>index.html</code>\uc5d0 \uc0dd\uc131 \ud3fc \ucd94\uac00 \"ID\ub85c \uc694\uccad\" \ube14\ub85d \ub4a4\uc5d0 \ubc30\uce58\ud569\ub2c8\ub2e4. <pre><code>&lt;!-- index.html --&gt;\n&lt;hr&gt;\n&lt;h2&gt;\uc0c8 \uc7a5\uce58 \ubc1c\uc0ac&lt;/h2&gt;\n&lt;form id=\"create-ship-form\"&gt;\n    &lt;input type=\"text\" id=\"create-name\" placeholder=\"\uc774\ub984\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-type\" placeholder=\"\uc720\ud615\" required&gt;&lt;br&gt;\n    &lt;input type=\"number\" id=\"create-year\" placeholder=\"\ubc1c\uc0ac \uc5f0\ub3c4\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-status\" placeholder=\"\uc0c1\ud0dc\" required&gt;&lt;br&gt;\n    &lt;button type=\"submit\"&gt;\ubc1c\uc0ac&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"create-status-message\"&gt;&lt;/div&gt;\n</code></pre></p> <p>2\ub2e8\uacc4: <code>app.js</code>\uc5d0 \ub85c\uc9c1 \ucd94\uac00 <pre><code>// app.js, \ud30c\uc77c \ub05d \ubd80\ubd84\n\nconst createShipForm = document.getElementById('create-ship-form');\nconst createStatusMessage = document.getElementById('create-status-message');\n\nasync function createShip(event) {\n    event.preventDefault();\n\n    // 1. \ud3fc\uc758 \ub370\uc774\ud130\ub97c \uac1d\uccb4\ub85c \uc218\uc9d1\n    const shipData = {\n        name: document.getElementById('create-name').value,\n        type: document.getElementById('create-type').value,\n        launch_year: parseInt(document.getElementById('create-year').value),\n        status: document.getElementById('create-status').value\n    };\n\n    try {\n        createStatusMessage.textContent = '\ubc1c\uc0ac \uba85\ub839 \uc804\uc1a1 \uc911...';\n\n        // 2. \ub9e4\uac1c\ubcc0\uc218\uc640 \ud568\uaed8 fetch \uc694\uccad \ubcf4\ub0b4\uae30\n        const response = await fetch(`${API_BASE_URL}/spaceships`, {\n            method: 'POST', // \uba54\uc18c\ub4dc \uc9c0\uc815\n            headers: {\n                'Content-Type': 'application/json' // JSON\uc744 \ubcf4\ub0b8\ub2e4\uace0 \uc11c\ubc84\uc5d0 \uc54c\ub9bc\n            },\n            body: JSON.stringify(shipData) // JavaScript \uac1d\uccb4\ub97c JSON \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\n        });\n\n        if (!response.ok) {\n            // \uc11c\ubc84\uac00 \uc624\ub958\ub97c \ubc18\ud658\ud55c \uacbd\uc6b0, \ubcf8\ubb38\uc744 \uc77d\uc73c\ub824\uace0 \uc2dc\ub3c4\n            const errorData = await response.json();\n            throw new Error(errorData.detail || `\uc11c\ubc84 \uc624\ub958: ${response.status}`);\n        }\n\n        const newShip = await response.json();\n        createStatusMessage.textContent = `\ud83d\ude80 \uc131\uacf5\uc801\uc778 \ubc1c\uc0ac! \uc7a5\uce58\uc5d0 ID\uac00 \ud560\ub2f9\ub418\uc5c8\uc2b5\ub2c8\ub2e4: ${newShip.id}`;\n\n        createShipForm.reset(); // \ud3fc \ucd08\uae30\ud654\n        fetchAndDisplayFleet(); // \uc804\uccb4 \ud568\ub300 \ubaa9\ub85d \uc5c5\ub370\uc774\ud2b8\n\n    } catch (error) {\n        console.error('\uc7a5\uce58 \ubc1c\uc0ac \uc624\ub958:', error);\n        createStatusMessage.textContent = `\ud83d\udd34 \uc624\ub958: ${error.message}`;\n    }\n}\n\ncreateShipForm.addEventListener('submit', createShip);\n</code></pre> POST\ub97c \uc704\ud55c <code>fetch</code>\uc758 \uc8fc\uc694 \ud3ec\uc778\ud2b8:</p> <ul> <li><code>method: 'POST'</code>: HTTP \uba54\uc18c\ub4dc\ub97c \ubc18\ub4dc\uc2dc \uc9c0\uc815\ud569\ub2c8\ub2e4.</li> <li><code>headers: { 'Content-Type': 'application/json' }</code>: \ub9e4\uc6b0 \uc911\uc694\ud55c \ud5e4\ub354\uc785\ub2c8\ub2e4. \uc694\uccad \ubcf8\ubb38\uc5d0 JSON\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc73c\uba70 \uc774\ub97c \ud30c\uc2f1\ud574\uc57c \ud55c\ub2e4\uace0 FastAPI \uc11c\ubc84\uc5d0 \uc54c\ub824\uc90d\ub2c8\ub2e4.</li> <li><code>body: JSON.stringify(shipData)</code>: JavaScript \uac1d\uccb4\ub97c \uc9c1\uc811 \ubcf4\ub0bc \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. JSON \ubb38\uc790\uc5f4\ub85c \uc9c1\ub82c\ud654(\ubcc0\ud658)\ud574\uc57c \ud569\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/3/#3-delete","title":"3. DELETE \uc694\uccad \ubcf4\ub0b4\uae30: \uc7a5\uce58 \ud3d0\uae30","text":"<p>\uc0ad\uc81c \uc694\uccad\uc740 \ub354 \uac04\ub2e8\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ubcf8\ubb38\uc774 \ud544\uc694 \uc5c6\uc73c\uba70, \uac1d\uccb4\uc758 ID\uac00 \ud3ec\ud568\ub41c URL\ub9cc \uc788\uc73c\uba74 \ub429\ub2c8\ub2e4.</p> <p>1\ub2e8\uacc4: \uc6b0\ub9ac \uc6b0\uc8fc\uc120 \ubaa9\ub85d\uc5d0 \"\uc0ad\uc81c\" \ubc84\ud2bc \ucd94\uac00 <code>app.js</code>\uc758 <code>fetchAndDisplayFleet</code> \ud568\uc218\ub97c \uc218\uc815\ud558\uc5ec \uac01 \ud56d\ubaa9\uc5d0 \uc0ad\uc81c \ubc84\ud2bc\uc744 \ucd94\uac00\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. <pre><code>// app.js, fetchAndDisplayFleet \ud568\uc218 \ub0b4\ubd80\n\n// ...\nships.forEach(ship =&gt; {\n    const listItem = document.createElement('li');\n    // ID\ub97c \uc800\uc7a5\ud558\ub294 data-\uc18d\uc131\uc744 \uac00\uc9c4 \ubc84\ud2bc \ucd94\uac00\n    listItem.innerHTML = `\n        &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n        \uc720\ud615: ${ship.type} | \uc5f0\ub3c4: ${ship.launch_year} | \uc0c1\ud0dc: ${ship.status}&lt;br&gt;\n        &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;\uc7a5\uce58 \ud3d0\uae30&lt;/button&gt;\n    `;\n    fleetList.appendChild(listItem);\n});\n// ...\n</code></pre></p> <p>2\ub2e8\uacc4: \ubaa8\ub4e0 \"\uc0ad\uc81c\" \ubc84\ud2bc\uc5d0 \ub300\ud55c \ud578\ub4e4\ub7ec \ucd94\uac00 \uc6b0\ub9ac\ub294 \uc774\ubca4\ud2b8 \uc704\uc784\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc989, \uc804\uccb4 \ubaa9\ub85d\uc5d0 \ud558\ub098\uc758 \ud578\ub4e4\ub7ec\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. <pre><code>// app.js, \ud30c\uc77c \ub05d \ubd80\ubd84\n\nasync function deleteShip(shipId) {\n    if (!confirm(`ID ${shipId}\ub97c \uac00\uc9c4 \uc7a5\uce58\ub97c \ud3d0\uae30\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c? \uc774 \uc791\uc5c5\uc740 \ub418\ub3cc\ub9b4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.`)) {\n        return;\n    }\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`, {\n            method: 'DELETE' // \uba54\uc18c\ub4dc \uc9c0\uc815\n        });\n\n        if (!response.ok) {\n            throw new Error(`\uc7a5\uce58\ub97c \ud3d0\uae30\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4. \uc0c1\ud0dc: ${response.status}`);\n        }\n\n        alert(`ID ${shipId}\ub97c \uac00\uc9c4 \uc7a5\uce58\uac00 \uc131\uacf5\uc801\uc73c\ub85c \ud3d0\uae30\ub418\uc5c8\uc2b5\ub2c8\ub2e4.`);\n        fetchAndDisplayFleet(); // \ubaa9\ub85d \uc5c5\ub370\uc774\ud2b8\n\n    } catch (error) {\n        console.error('\ud3d0\uae30 \uc911 \uc624\ub958:', error);\n        alert(`\uc624\ub958: ${error.message}`);\n    }\n}\n\n// \uc774\ubca4\ud2b8 \uc704\uc784: \uc804\uccb4 \ubaa9\ub85d\uc758 \ud074\ub9ad\uc744 \uc218\uc2e0\nfleetList.addEventListener('click', (event) =&gt; {\n    // 'delete-btn' \ud074\ub798\uc2a4\ub97c \uac00\uc9c4 \ubc84\ud2bc\uc744 \ud074\ub9ad\ud588\ub294\uc9c0 \ud655\uc778\n    if (event.target.classList.contains('delete-btn')) {\n        const shipId = event.target.dataset.shipId; // data-\uc18d\uc131\uc5d0\uc11c ID \uac00\uc838\uc624\uae30\n        deleteShip(shipId);\n    }\n});\n</code></pre></p> <p>3\ub2e8\uacc4: Spaceship \ubaa8\ub378\uc5d0 ID \ucd94\uac00</p> <p><code>main.py</code> \ud30c\uc77c\uc758 \ubaa8\ub378 \ubc0f DB\uc5d0 ID \ucd94\uac00</p> <pre><code>class Spaceship(BaseModel):\n    id: int\n    # \ubaa8\ub378\uc758 \ub098\uba38\uc9c0 \ucf54\ub4dc...\n\ndb_spaceships = {\n    1: {\n        \"id\": 1,\n        # \uc694\uc18c 1\uc758 \ub370\uc774\ud130\n    },\n    2: {\n        \"id\": 2,\n        # \uc694\uc18c 2\uc758 \ub370\uc774\ud130\n    },\n    3: {\n        \"id\": 3,\n        # \uc694\uc18c 3\uc758 \ub370\uc774\ud130\n    }\n}\n</code></pre> <ul> <li><code>method: 'DELETE'</code>: \uba54\uc18c\ub4dc\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc11c\ub294 \ubcf8\ubb38\uacfc \ud5e4\ub354\uac00 \ud544\uc694 \uc5c6\uc2b5\ub2c8\ub2e4.</li> <li><code>confirm()</code>: \uc2e4\uc218\ub85c \uc911\uc694\ud55c \uac83\uc744 \uc0ad\uc81c\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub294 \uac04\ub2e8\ud55c \ub0b4\uc7a5 \ud655\uc778 \ucc3d\uc785\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/3/#4-put","title":"4. PUT \uc694\uccad \ubcf4\ub0b4\uae30 (\uc790\uc728 \uacfc\uc81c)","text":"<p>\uc5c5\ub370\uc774\ud2b8\ub97c \uc704\ud55c <code>PUT</code> \uc694\uccad \uad6c\ud604\uc740 <code>POST</code>\uc640 \ub9e4\uc6b0 \uc720\uc0ac\ud569\ub2c8\ub2e4.</p> <p>\ub2e4\uc74c \ubbf8\uc158\uc744 \uc218\ub77d\ud558\uc2dc\uaca0\ub2e4\uba74:</p> <ol> <li>\uac01 \uc6b0\uc8fc\uc120\uc5d0 \"\uc0ad\uc81c\" \ubc84\ud2bc \uc606\uc5d0 \"\uc218\uc815\" \ubc84\ud2bc\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4.</li> <li>\"\uc218\uc815\"\uc744 \ud074\ub9ad\ud558\uba74 \ud3fc(\uc0dd\uc131\uc6a9\uc73c\ub85c \uc0ac\uc6a9\ud55c \ud3fc\uc744 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5)\uc744 \ud604\uc7ac \uc6b0\uc8fc\uc120 \ub370\uc774\ud130\ub85c \ucc44\uc6c1\ub2c8\ub2e4.</li> <li>\"\ubc1c\uc0ac\" \ubc84\ud2bc\uc758 \ud14d\uc2a4\ud2b8\ub97c \"\uc5c5\ub370\uc774\ud2b8\"\ub85c \ubcc0\uacbd\ud569\ub2c8\ub2e4.</li> <li>\ud3fc\uc744 \uc81c\ucd9c\ud560 \ub54c, <code>/spaceships/{id}</code>\ub85c \uac1d\uccb4\uc758 \uc804\uccb4 \ubcf8\ubb38\uacfc \ud568\uaed8 <code>PUT</code> \uc694\uccad\uc744 \ubcf4\ub0c5\ub2c8\ub2e4.</li> <li>\uc131\uacf5\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ub41c \ud6c4\uc5d0\ub294 \ud568\ub300 \ubaa9\ub85d\uc744 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.</li> </ol> <p>\ud78c\ud2b8: <code>POST</code> \uc694\uccad\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c <code>method: 'PUT'</code>, <code>Content-Type</code> \ud5e4\ub354, <code>JSON.stringify()</code>\ub97c \ud3ec\ud568\ud558\ub294 <code>body</code>\uc640 \ud568\uaed8 <code>fetch</code>\uac00 \ud544\uc694\ud560 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/3/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. `fetch`\uc5d0\uc11c \uc694\uccad \ubcf8\ubb38\uc5d0 \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ub9e4\uac1c\ubcc0\uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) `data`  b) `body`  c) `payload` <p>2. `'Content-Type': 'application/json'` \ud5e4\ub354\ub294 \uc11c\ubc84\uc5d0 \ub2e4\uc74c\uc744 \uc54c\ub9bd\ub2c8\ub2e4...</p>  a) \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 JSON \ud615\uc2dd\uc758 \uc751\ub2f5\uc744 \ubc1b\uc744 \uac83\uc73c\ub85c \uc608\uc0c1\ud569\ub2c8\ub2e4.  b) \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 JSON \ud615\uc2dd\uc73c\ub85c \uc694\uccad \ubcf8\ubb38\uc5d0 \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud569\ub2c8\ub2e4.  c) \uc5f0\uacb0\uc774 \uc554\ud638\ud654\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. <p>3. JavaScript\uc758 `JSON.stringify(obj)` \ud568\uc218\ub294 \ubb34\uc5c7\uc744 \ud569\ub2c8\uae4c?</p>  a) JSON \ubb38\uc790\uc5f4\uc744 \uac1d\uccb4\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.  b) \uac1d\uccb4\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4.  c) JavaScript \uac1d\uccb4\ub97c JSON \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. <p>4. `fetch`\ub97c \uc0ac\uc6a9\ud558\uc5ec `DELETE` \uc694\uccad\uc744 \ubcf4\ub0b4\ub824\uba74 \ub2e4\uc74c\uc744 \ubc18\ub4dc\uc2dc \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4.</p>  a) \ube48 `body`  b) `method: 'DELETE'`  c) `Authorization` \ud5e4\ub354 <p>5. JavaScript\uc5d0\uc11c \uc774\ubca4\ud2b8 \uc704\uc784\uc774\ub780...</p>  a) \uc790\uc2dd \uc694\uc18c\uc5d0 \uc5ec\ub7ec \ud578\ub4e4\ub7ec\ub97c \ubd99\uc774\ub294 \ub300\uc2e0 \ubd80\ubaa8 \uc694\uc18c\uc5d0 \ud558\ub098\uc758 \ud578\ub4e4\ub7ec\ub97c \ubd99\uc774\ub294 \uac83\uc785\ub2c8\ub2e4.  b) \ud568\uc218 \uc2e4\ud589 \uad8c\ud55c\uc744 \ub2e4\ub978 \uc2a4\ud06c\ub9bd\ud2b8\uc5d0 \uc804\ub2ec\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.  c) \uc774\ubca4\ud2b8\uac00 \uc9c0\uc5f0\ub418\uc5b4 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\ub2f9\uc2e0\uc758 \ubbf8\uc158 \ud1b5\uc81c \uc13c\ud130\ub294 \uc774\uc81c \ud568\ub300\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 \ubaa8\ub4e0 \uba85\ub839\uc744 \uac16\ucd94\uc5c8\uc2b5\ub2c8\ub2e4!</p> <ul> <li>\u2705 \uc0c8\ub85c\uc6b4 \ub9ac\uc18c\uc2a4\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ubcf8\ubb38\uacfc \ud5e4\ub354\ub97c \ud3ec\ud568\ud55c <code>POST</code> \uc694\uccad\uc744 \ubcf4\ub0b4\ub294 \ubc29\ubc95\uc744 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4.</li> <li>\u2705 \uc624\ub798\ub41c \uc7a5\uce58\ub97c \ud3d0\uae30\ud558\uae30 \uc704\ud574 <code>DELETE</code> \uc694\uccad\uc744 \uad6c\ud604\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\u2705 <code>PUT</code> \uc694\uccad \uad6c\ud604 \uacfc\uc81c\ub97c \ubc1b\uc544 \uc9c0\uc2dd\uc744 \ud655\uace0\ud788 \ud588\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\uc644\ubcbd\ud55c \ud1b5\uc81c\uac00 \ud655\ub9bd\ub418\uc5c8\uc2b5\ub2c8\ub2e4! \ud558\uc9c0\ub9cc \uc5f0\uacb0\uc774 \ub04a\uae30\uac70\ub098 \uc11c\ubc84\uc5d0\uc11c \uc624\ub958\ub97c \ubcf4\uace0\ud558\uba74 \uc5b4\ub5bb\uac8c \ud574\uc57c \ud560\uae4c\uc694? \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \ud504\ub7f0\ud2b8\uc5d4\ub4dc\uc5d0\uc11c \uc911\uc559 \uc9d1\uc911\uc2dd \uc624\ub958 \ucc98\ub9ac \uc2dc\uc2a4\ud15c\uc744 \uad6c\ucd95\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li>\uc0c8\ub85c\uc6b4 \ud568\uc120 \uc0dd\uc131 \uc591\uc2dd\uc774 \uc791\ub3d9\ud558\uace0 \uc131\uacf5\uc801\uc73c\ub85c \uc0dd\uc131\ub41c \ud6c4 \ud398\uc774\uc9c0\uc758 \ubaa9\ub85d\uc774 \uc5c5\ub370\uc774\ud2b8\ub418\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li>\"\uc7a5\uce58 \ud3d0\uae30\" \ubc84\ud2bc\uc774 \uc791\ub3d9\ud558\uace0, \ud655\uc778\uc744 \uc694\uccad\ud558\uba70, \ubaa9\ub85d\uc5d0\uc11c \ud568\uc120\uc744 \uc0ad\uc81c\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li>\uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \ub370\uc774\ud130(\uc608: \ub9e4\uc6b0 \uc9e7\uc740 \uc774\ub984)\ub85c \ud568\uc120\uc744 \uc0dd\uc131\ud574\ubcf4\uace0 FastAPI \uc11c\ubc84\uac00 \ubc18\ud658\ud558\ub294 \uc624\ub958\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> </ul> <p>\u26a0\ufe0f \uc624\ub958 \ubc1c\uc0dd \uc2dc:</p> <ul> <li>\uc11c\ubc84\ub85c\ubd80\ud130\uc758 <code>422</code> \uc624\ub958: \uc544\ub9c8\ub3c4 \uc804\uc1a1\ud558\ub294 \ub370\uc774\ud130\uac00 Pydantic \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \ud1b5\uacfc\ud558\uc9c0 \ubabb\ud588\uc744 \uac83\uc785\ub2c8\ub2e4. \ube0c\ub77c\uc6b0\uc800 \ucf58\uc194\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624 \u2014 <code>errorData.detail</code>\uc774 \uc5b4\ub5a4 \ud544\ub4dc\uc5d0 \ubb38\uc81c\uac00 \uc788\ub294\uc9c0 \ubcf4\uc5ec\uc904 \uac83\uc785\ub2c8\ub2e4.</li> <li><code>415 Unsupported Media Type</code> \uc624\ub958: <code>'Content-Type': 'application/json'</code> \ud5e4\ub354\ub97c \ucd94\uac00\ud558\ub294 \uac83\uc744 \uc78a\uc5c8\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>\uc0ad\uc81c \ubc84\ud2bc\uc774 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc74c: \uc774\ubca4\ud2b8 \uc704\uc784\uc774 \uc62c\ubc14\ub974\uac8c \uc791\ub3d9\ud558\uace0 <code>data-ship-id</code>\uc5d0\uc11c <code>shipId</code>\ub97c \uc62c\ubc14\ub974\uac8c \uac00\uc838\uc624\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> </ul>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/4/","title":"4.4\uc7a5: \uc624\ub958 \ucc98\ub9ac","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 45\ubd84</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/4/#1","title":"1. \uc624\ub958 \ucc98\ub9ac: \uc6b0\uc8fc\uc120 \uad00\uc81c \uc13c\ud130\uc758 \ube44\uc0c1 \ud504\ub85c\ud1a0\ucf5c","text":"<p>\uc6b0\uc8fc\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \uac83\uc774 \uacc4\ud68d\ub300\ub85c \ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud0dc\uc591 \ud50c\ub808\uc5b4\uac00 \ud1b5\uc2e0\uc744 \ubc29\ud574\ud560 \uc218\ub3c4 \uc788\uace0, \uc6b0\uc8fc\uc120 \uc628\ubcf4\ub4dc \ucef4\ud4e8\ud130\uc5d0 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218\ub3c4 \uc788\uc73c\uba70, \uc9c0\uad6c\uc5d0\uc11c \ubcf4\ub0b4\ub294 \uba85\ub839\uc5d0 \uc798\ubabb\ub41c \uc88c\ud45c\uac00 \ud3ec\ud568\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ud504\ub860\ud2b8\uc5d4\ub4dc\uc5d0\uc11c\uc758 \uc624\ub958 \ucc98\ub9ac\ub294 \uc6b0\uc8fc\uc120 \uad00\uc81c \uc13c\ud130\uc758 \ube44\uc0c1 \ud504\ub85c\ud1a0\ucf5c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc544\uc57c \ud569\ub2c8\ub2e4:</p> <ul> <li>\ud83d\udea8 \ub2e8 \ud558\ub098\uc758 \uc2e4\ud328\ud55c \uba85\ub839\uc73c\ub85c \uc804\uccb4 \uc778\ud130\ud398\uc774\uc2a4\uac00 \"\ud3ed\ubc1c\"\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4.</li> <li>\ud83d\udce1 \uc6b4\uc601\uc790(\uc0ac\uc6a9\uc790)\uc5d0\uac8c \ubb34\uc5c7\uc774 \uc798\ubabb\ub418\uc5c8\ub294\uc9c0 \uba85\ud655\ud558\uac8c \uc54c\ub824\uc90d\ub2c8\ub2e4.</li> <li>\ud83d\udd27 \uac00\ub2a5\ud55c \ub2e4\uc74c \ub2e8\uacc4\ub97c \uc81c\uc548\ud569\ub2c8\ub2e4.</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>\uc6b0\uc8fc\uc120\uc5d0\uc11c <code>500 Internal Server Error</code> \uc2e0\ud638\uac00 \uc624\uba74, \uad00\uc81c \uc13c\ud130 \ub514\uc2a4\ud50c\ub808\uc774\uc5d0 \"57\ubc88\uc9f8 \uc904\uc5d0 \uce58\uba85\uc801\uc778 JavaScript \uc624\ub958 \ubc1c\uc0dd\"\uc774\ub77c\uace0 \ud45c\uc2dc\ub418\uc5b4\uc11c\ub294 \uc548 \ub429\ub2c8\ub2e4. \ub300\uc2e0 \"\ud83d\udea8 \uc6b0\uc8fc\uc120\uc5d0 \uc7a5\uc560 \ubc1c\uc0dd! \uc5d4\uc9c0\ub2c8\uc5b4\ub4e4\uc5d0\uac8c \uc774\ubbf8 \ud1b5\ubcf4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub098\uc911\uc5d0 \uba85\ub839\uc744 \ub2e4\uc2dc \uc2dc\ub3c4\ud574 \ubcf4\uc138\uc694.\"\ub77c\uace0 \ud45c\uc2dc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/4/#2","title":"2. \"\uc6b0\uc8fc \uc774\uc0c1 \ud604\uc0c1\"\uc758 \uc720\ud615","text":"<p>\ud504\ub860\ud2b8\uc5d4\ub4dc\uc5d0\uc11c \uc6b0\ub9ac\ub294 API \uc791\uc5c5 \uc2dc \uc138 \uac00\uc9c0 \uc8fc\uc694 \uc720\ud615\uc758 \uc624\ub958\uc5d0 \uc9c1\uba74\ud569\ub2c8\ub2e4:</p> <ol> <li>\ub124\ud2b8\uc6cc\ud06c \uc624\ub958: \uc11c\ubc84\uc640 \uc5f0\uacb0\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. \uc548\ud14c\ub098\uac00 \uc791\ub3d9\ud558\uc9c0 \uc54a\uac70\ub098 \ucf00\uc774\ube14\uc774 \ub04a\uc5b4\uc84c\uc2b5\ub2c8\ub2e4. <code>fetch</code>\ub294 <code>.catch()</code> \ube14\ub85d\uc73c\ub85c \"\ub5a8\uc5b4\uc9d1\ub2c8\ub2e4\".</li> <li>\ud074\ub77c\uc774\uc5b8\ud2b8 \uc624\ub958 (4xx): \uc9c0\uad6c\uc5d0\uc11c \ubcf4\ub0b8 \uba85\ub839\uc774 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. \uc798\ubabb\ub41c ID, \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958. \uc11c\ubc84\ub294 \uc751\ub2f5\ud558\uc9c0\ub9cc <code>4xx</code> \uc0c1\ud0dc\uc785\ub2c8\ub2e4.</li> <li>\uc11c\ubc84 \uc624\ub958 (5xx): \uc6b0\uc8fc\uc120 \uc790\uccb4\uc5d0 \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. API \ucf54\ub4dc\uc5d0 \ubb38\uc81c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ubc84\ub294 \uc751\ub2f5\ud558\uc9c0\ub9cc <code>500+</code> \uc0c1\ud0dc\uc785\ub2c8\ub2e4.</li> </ol> <p>\uc6b0\ub9ac\ub294 \uc774\ubbf8 <code>try...catch</code>\uc640 <code>response.ok</code> \ud655\uc778\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774\ub4e4\uc744 \ucc98\ub9ac\ud558\uae30 \uc2dc\uc791\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc911\uc559 \uc9d1\uc911\uc2dd\uc73c\ub85c \ucc98\ub9ac\ud574 \ubd05\uc2dc\ub2e4.</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/4/#3","title":"3. \uc911\uc559 \uc9d1\uc911\uc2dd \ucc98\ub9ac \ud568\uc218","text":"<p>\ubaa8\ub4e0 \ud568\uc218\uc5d0\uc11c \ub3d9\uc77c\ud55c <code>try...catch</code> \ucf54\ub4dc\ub97c \ubc18\ubcf5\ud558\ub294 \uac83\uc740 \uc88b\uc9c0 \uc54a\uc740 \uc2b5\uad00\uc785\ub2c8\ub2e4. <code>fetch</code> \uc694\uccad\uc744 \uc704\ud55c \ubc94\uc6a9 \"\ub798\ud37c\"\ub97c \ub9cc\ub4e4\uc5b4 \ubd05\uc2dc\ub2e4.</p> <p>\ub2e8\uacc4 1: <code>api.js</code> \uc0dd\uc131 <code>app.js</code> \uc606\uc5d0 \uc0c8\ub85c\uc6b4 <code>api.js</code> \ud30c\uc77c\uc744 \ub9cc\ub4dc\uc138\uc694. \uc5ec\uae30\uc5d0 API \uc0c1\ud638\uc791\uc6a9\uc758 \ubaa8\ub4e0 \ub85c\uc9c1\uc744 \ucd94\ucd9c\ud560 \uac83\uc785\ub2c8\ub2e4. <pre><code>// api.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\n/**\n * API \uc694\uccad\uc744 \uc2e4\ud589\ud558\uae30 \uc704\ud55c \ubc94\uc6a9 \ud568\uc218.\n * \uc624\ub958\ub97c \ucc98\ub9ac\ud558\uace0 JSON\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.\n * @param {string} endpoint - API \uc5d4\ub4dc\ud3ec\uc778\ud2b8, \uc608: '/spaceships'\n * @param {object} options - fetch\ub97c \uc704\ud55c \uc635\uc158 (method, headers, body)\n */\nasync function apiRequest(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n\n    try {\n        const response = await fetch(url, options);\n\n        // \uc751\ub2f5\uc774 JSON\uc774 \uc544\ub2c8\ub77c\uba74 \uc989\uc2dc \uc624\ub958\ub97c \ub358\uc9d1\ub2c8\ub2e4.\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n            // \ubcf8\ubb38\uc774 \uc5c6\ub294 \uc131\uacf5\uc801\uc778 DELETE \uc694\uccad\uc5d0 \ub300\ud55c \uc608\uc678\n            if (response.status === 204) return null;\n\n            throw new TypeError(`\uc11c\ubc84\uc5d0\uc11c \ube44-JSON \uc751\ub2f5\uc744 \ubc1b\uc558\uc2b5\ub2c8\ub2e4: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n\n        if (!response.ok) {\n            // \uc11c\ubc84\uac00 \uc624\ub958\uac00 \ud3ec\ud568\ub41c JSON\uc744 \ubc18\ud658\ud55c \uacbd\uc6b0 (\uc608: FastAPI\uc758 detail)\n            const errorMessage = data.detail || `HTTP \uc624\ub958! \uc0c1\ud0dc: ${response.status}`;\n            throw new Error(errorMessage);\n        }\n\n        return data;\n\n    } catch (error) {\n        console.error(`${endpoint}\uc5d0 \ub300\ud55c API \uc694\uccad \uc624\ub958:`, error);\n        // UI\uc5d0\uc11c \uc7a1\uc744 \uc218 \uc788\ub3c4\ub85d \uc624\ub958\ub97c \uacc4\uc18d \uc804\ud30c\ud569\ub2c8\ub2e4.\n        throw error;\n    }\n}\n</code></pre></p> <p>\ub2e8\uacc4 2: <code>index.html</code>\uc5d0 <code>api.js</code> \uc5f0\uacb0 <code>app.js</code>\uac00 \uc774 \ud568\uc218\ub4e4\uc744 \uc0ac\uc6a9\ud560 \uac83\uc774\ubbc0\ub85c <code>app.js</code> \uc774\uc804\uc5d0 \uc5f0\uacb0\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. <pre><code>&lt;!-- index.html --&gt;\n&lt;body&gt;\n    &lt;!-- ... --&gt;\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</code></pre></p> <p>\ub2e8\uacc4 3: <code>app.js</code> \ub9ac\ud329\ud1a0\ub9c1 \uc774\uc81c \uc0c8\ub85c\uc6b4 <code>apiRequest</code>\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud568\uc218\ub4e4\uc744 \ub2e4\uc2dc \uc791\uc131\ud574 \ubd05\uc2dc\ub2e4. <pre><code>// app.js\n\n// const API_BASE_URL = ...; // \uc774 \uc904\uc740 \uc774\uc81c api.js\uc5d0 \uc788\uc73c\ubbc0\ub85c \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n// ...\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;\ud154\ub808\uba54\ud2b8\ub9ac \ub85c\ub4dc \uc911...&lt;/li&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- \uc6b0\ub9ac\uc758 \ub798\ud37c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4!\n\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;\ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub41c \uae30\uae30\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; { /* ... \ub098\uba38\uc9c0 \ud45c\uc2dc \ucf54\ub4dc ... */ });\n    } catch (error) {\n        fleetList.innerHTML = `&lt;li&gt;\ud83d\udd34 \ud568\ub300 \ub85c\ub4dc \uc624\ub958: ${error.message}&lt;/li&gt;`;\n    }\n}\n\nasync function createShip(event) {\n    event.preventDefault();\n    const shipData = { /* ... \ud3fc\uc5d0\uc11c \ub370\uc774\ud130 \uc218\uc9d1 ... */ };\n\n    try {\n        createStatusMessage.textContent = '\ubc1c\uc0ac \uba85\ub839 \uc804\uc1a1 \uc911...';\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(shipData)\n        };\n        const newShip = await apiRequest('/spaceships', options); // &lt;-- \uc6b0\ub9ac\uc758 \ub798\ud37c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4!\n\n        createStatusMessage.textContent = `\ud83d\ude80 \uc131\uacf5\uc801\uc73c\ub85c \ubc1c\uc0ac\ub418\uc5c8\uc2b5\ub2c8\ub2e4! \uae30\uae30 ID: ${newShip.id}`;\n        createShipForm.reset();\n        fetchAndDisplayFleet();\n    } catch (error) {\n        createStatusMessage.textContent = `\ud83d\udd34 \uc624\ub958: ${error.message}`;\n    }\n}\n\n// \ub098\uba38\uc9c0 \ud568\uc218\ub4e4 (fetchShipById, deleteShip)\ub3c4 \uc720\uc0ac\ud558\uac8c \ub2e4\uc2dc \uc791\uc131\ud558\uc138\uc694!\n</code></pre> \uc774\uc81c \ub124\ud2b8\uc6cc\ud06c \uc624\ub958 \ucc98\ub9ac, <code>response.ok</code> \ud655\uc778, JSON \ud30c\uc2f1\uc758 \ubaa8\ub4e0 \ub85c\uc9c1\uc774 \ud55c \uacf3\uc5d0 \uc788\uc73c\uba70, <code>app.js</code>\uc758 \ucf54\ub4dc\uac00 \ud6e8\uc52c \ub354 \uae54\ub054\ud558\uace0 \uc77d\uae30 \uc27d\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/4/#4","title":"4. \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc624\ub958 \ud45c\uc2dc","text":"<p>\uc88b\uc740 \uc778\ud130\ud398\uc774\uc2a4\ub294 \ub2e8\uc21c\ud788 \uc624\ub958\ub97c \ucf58\uc194\uc5d0\ub9cc \uc4f0\ub294 \uac83\uc774 \uc544\ub2c8\ub77c \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc774\ud574\ud558\uae30 \uc26c\uc6b4 \ud615\ud0dc\ub85c \ubcf4\uc5ec\uc8fc\uc5b4\uc57c \ud569\ub2c8\ub2e4.</p> <p>\uc608\uc2dc: <code>createShip</code> \uac1c\uc120 \uc6b0\ub9ac \ucf54\ub4dc\ub294 \uc774\ubbf8 <code>createStatusMessage.textContent = ...</code>\uc640 \uac19\uc774 \ucc98\ub9ac\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc54c\ub9bc\uc744 \ud45c\uc2dc\ud558\uae30 \uc704\ud55c \ubc94\uc6a9 \ud568\uc218\ub97c \ub9cc\ub4e4\uc5b4 \ub354 \uc88b\uac8c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p><code>app.js</code>\uc5d0 \ucd94\uac00: <pre><code>// app.js\nfunction showNotification(message, isError = false) {\n    const notificationArea = document.getElementById('create-status-message'); // \ub610\ub294 \ub2e4\ub978 \uc694\uc18c\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? 'red' : 'green';\n}\n\n// createShip\uc5d0\uc11c \uc0ac\uc6a9:\nasync function createShip(event) {\n    // ...\n    try {\n        // ...\n        const newShip = await apiRequest('/spaceships', options);\n        showNotification(`\ud83d\ude80 \uc131\uacf5\uc801\uc73c\ub85c \ubc1c\uc0ac\ub418\uc5c8\uc2b5\ub2c8\ub2e4! ID: ${newShip.id}`);\n        // ...\n    } catch (error) {\n        showNotification(`\ud83d\udd34 \uc624\ub958: ${error.message}`, true);\n    }\n}\n</code></pre> \uc774\uc81c \uc131\uacf5 \uba54\uc2dc\uc9c0\uc640 \uc624\ub958 \uba54\uc2dc\uc9c0\ub97c \ubaa8\ub450 \ud45c\uc2dc\ud558\uae30 \uc704\ud55c \ub2e8\uc77c \uba54\ucee4\ub2c8\uc998\uc774 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/4/#_1","title":"\uac1c\ub150 \ud655\ub9bd \ud034\uc988","text":"<p>1. `fetch` Promise\uc758 `.catch()` \ube14\ub85d\uc740 \ub2e4\uc74c \uacbd\uc6b0\uc5d0 \uc791\ub3d9\ud569\ub2c8\ub2e4...</p>  a) \uc11c\ubc84\uac00 404 Not Found \uc624\ub958\ub97c \ubc18\ud658\ud55c \uacbd\uc6b0  b) \ub124\ud2b8\uc6cc\ud06c \uc624\ub958(\uc608: \uc778\ud130\ub137 \uc5c6\uc74c)\uac00 \ubc1c\uc0dd\ud55c \uacbd\uc6b0  c) \uc11c\ubc84\uac00 500 Internal Server Error\ub97c \ubc18\ud658\ud55c \uacbd\uc6b0 <p>2. API \uc694\uccad\uc744 \uc704\ud55c \uc911\uc559 \uc9d1\uc911\uc2dd \ucc98\ub9ac \ud568\uc218\uac00 \ud544\uc694\ud55c \uc774\uc720\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) \uc624\ub958 \ucc98\ub9ac \ucf54\ub4dc \uc911\ubcf5\uc744 \ud53c\ud558\uace0 UI \ub85c\uc9c1\uc744 \ub354 \uae54\ub054\ud558\uac8c \ub9cc\ub4e4\uae30 \uc704\ud568  b) \ubaa8\ub4e0 \uc694\uccad\uc774 \ub3d9\uc2dc\uc5d0 \uc804\uc1a1\ub418\ub3c4\ub85d \ud558\uae30 \uc704\ud568  c) \uc774\ub294 Fetch API \ud45c\uc900 \uc694\uad6c\uc0ac\ud56d\uc785\ub2c8\ub2e4 <p>3. `response.headers.get('content-type')`\ub294 \ub2e4\uc74c \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4...</p>  a) \ub098\uac00\ub294 \uc694\uccad\uc5d0 \ud5e4\ub354\ub97c \uc124\uc815\ud558\uae30 \uc704\ud568  b) \uc11c\ubc84\ub85c\ubd80\ud130 \ubc1b\uc740 \uc751\ub2f5\uc758 \ucf58\ud150\uce20 \uc720\ud615\uc744 \ud655\uc778\ud558\uae30 \uc704\ud568  c) \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \ucf58\ud150\uce20 \uc720\ud615\uc744 \uac00\uc838\uc624\uae30 \uc704\ud568 <p>4. `try...catch` \ub610\ub294 `.then()` \ub0b4\uc758 `throw new Error(...)`\ub294 \ub2e4\uc74c \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4...</p>  a) \ud398\uc774\uc9c0\uc758 \ubaa8\ub4e0 JavaScript \uc2e4\ud589\uc744 \uc911\uc9c0\ud558\uae30 \uc704\ud568  b) Promise\ub97c \"\uc2e4\ud328\"\uc2dc\ud0a4\uace0 \uac00\uc7a5 \uac00\uae4c\uc6b4 `.catch()` \ube14\ub85d\uc73c\ub85c \uc81c\uc5b4\ub97c \ub118\uae30\uae30 \uc704\ud568  c) `alert`\uc5d0 \uba54\uc2dc\uc9c0\ub97c \ud45c\uc2dc\ud558\uae30 \uc704\ud568 <p>5. \uc624\ub958\ub97c \ucf58\uc194\uc5d0\ub9cc \ud45c\uc2dc\ud558\uc9c0 \uc54a\uace0 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud45c\uc2dc\ud558\ub294 \uac83\uc774 \uc65c \uc911\uc694\ud569\ub2c8\uae4c?</p>  a) \ub300\ubd80\ubd84\uc758 \uc0ac\uc6a9\uc790\uac00 \ucf58\uc194\uc744 \ubcf4\uc9c0 \uc54a\uae30 \ub54c\ubb38  b) \uc778\ud130\ud398\uc774\uc2a4\uac00 \uc774\ud574\ud558\uae30 \uc27d\uace0 \uc608\uce21 \uac00\ub2a5\ud558\ub3c4\ub85d \ud558\uae30 \uc704\ud568  c) \ub450 \uc635\uc158 \ubaa8\ub450 \ub9de\uc74c \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \ube44\uc0c1 \ud504\ub85c\ud1a0\ucf5c\uc744 \uc0dd\uc131\ud558\uc5ec MCC\ub97c \uac15\ud654\ud588\uc2b5\ub2c8\ub2e4.</p> <ul> <li>\ud83d\udee1\ufe0f \ub124\ud2b8\uc6cc\ud06c, \ud074\ub77c\uc774\uc5b8\ud2b8, \uc11c\ubc84 \uc624\ub958\uc758 \ucc28\uc774\ub97c \uc774\ud574\ud569\ub2c8\ub2e4.</li> <li>\u2699\ufe0f \ubaa8\ub4e0 \uc694\uccad\uc744 \ucc98\ub9ac\ud558\ub294 \uc911\uc559 \uc9d1\uc911\uc2dd <code>apiRequest</code> \ud568\uc218\ub97c \uc0dd\uc131\ud558\uc5ec \ucf54\ub4dc \uc911\ubcf5\uc744 \ud53c\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\ud83d\udce1 \uc774\uc81c \uc778\ud130\ud398\uc774\uc2a4\uac00 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc624\ub958\ub97c \uc62c\ubc14\ub974\uac8c \ubcf4\uace0\ud558\uc5ec \ub354\uc6b1 \uc0ac\uc6a9\uc790 \uce5c\ud654\uc801\uc774\uace0 \uc2e0\ub8b0\ud560 \uc218 \uc788\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\ube44\uc0c1 \ubc29\ud328 \ud65c\uc131\ud654! \ud558\uc9c0\ub9cc <code>.then()</code> \uccb4\uc778\uacfc \ucd5c\uc2e0 <code>async/await</code> \uc911 \uc5b4\ub5a4 \uac83\uc774 \ub354 \uc88b\uc744\uae4c\uc694? \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \ub450 \uac00\uc9c0 \uc811\uadfc \ubc29\uc2dd\uc744 \ubaa8\ub450 \uc0b4\ud3b4\ubcf4\uace0 \uc5b8\uc81c \uc5b4\ub5a4 \uac83\uc744 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294\uc9c0 \uc774\ud574\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li><code>app.js</code>\uc758 \ucf54\ub4dc\uac00 \uc131\uacf5\uc801\uc73c\ub85c \ub9ac\ud329\ud1a0\ub9c1\ub418\uc5b4 \uc0c8 <code>apiRequest</code> \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li>FastAPI \uc11c\ubc84\ub97c \uc911\uc9c0\ud558\uace0 \"\ub370\uc774\ud130 \uc694\uccad\" \ubc84\ud2bc\uc744 \ub20c\ub7ec\ubcf4\uc2ed\uc2dc\uc624. \ud398\uc774\uc9c0\uc5d0 \uc5f0\uacb0 \uc624\ub958\uac00 \ud45c\uc2dc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.</li> <li>\uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \ub370\uc774\ud130\ub85c \uc120\ubc15\uc744 \uc0dd\uc131\ud574 \ubcf4\uc2ed\uc2dc\uc624. FastAPI\uc5d0\uc11c \uc628 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958 \uba54\uc2dc\uc9c0\uac00 \ud45c\uc2dc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.</li> </ul> <p>\u26a0\ufe0f \uc624\ub958 \ubc1c\uc0dd \uc2dc:</p> <ul> <li><code>apiRequest is not defined</code>: <code>index.html</code>\uc5d0 <code>api.js</code>\ub97c <code>app.js</code> \uc55e\uc5d0 \uc5f0\uacb0\ud588\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li>JavaScript\uc758 \ub2e4\ub978 \uad6c\ubb38 \uc624\ub958\uc5d0 \ub300\ud574 \ube0c\ub77c\uc6b0\uc800 \ucf58\uc194\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> </ul>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/5/","title":"\uc81c4.5\uc7a5: Async/await vs Promise","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 30\ubd84</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/5/#1","title":"1. \ube44\ub3d9\uae30\uc131: \"\uc6b0\uc8fc \ud1b5\uc2e0\"\uc744 \uad00\ub9ac\ud558\ub294 \ub450 \uac00\uc9c0 \ubc29\ubc95","text":"<p>\uc9c0\uc0c1 \uad00\uc81c \uc13c\ud130(\u0426\u0423\u041f)\uac00 \ud654\uc131\uc5d0 \uba85\ub839\uc744 \ubcf4\ub0b8\ub2e4\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. \uc751\ub2f5\uc740 \uba87 \ubd84 \ud6c4\uc5d0\ub098 \ub3c4\ucc29\ud560 \uac83\uc785\ub2c8\ub2e4. \uc774 \uc2dc\uac04 \ub3d9\uc548 \uc791\uc5c5\uc744 \uc5b4\ub5bb\uac8c \uad6c\uc131\ud574\uc57c \ud560\uae4c\uc694?</p> <p>\ubc29\ubc95 1: \"\ucf5c\ubc31 \ud504\ub85c\ud1a0\ucf5c\" (Promise\uc640 <code>.then()</code>) \uba85\ub839\uc744 \ubcf4\ub0b4\uace0 \uc9c0\uc2dc\ud569\ub2c8\ub2e4: \"\uc751\ub2f5\uc774 \uc62c \ub54c\ub9c8\ub2e4 \uc774 \ud568\uc218\ub97c \uc2e4\ud589\ud558\uc138\uc694.\" \uc774\ub294 \uc774\ubca4\ud2b8 \uccb4\uc778\uacfc \uc720\uc0ac\ud569\ub2c8\ub2e4.</p> <p>\ubc29\ubc95 2: \"\ub300\uae30 \ubaa8\ub4dc\" (Async/await) \"\uc774 \uba85\ub839\uc5d0 \ub300\ud55c \uc751\ub2f5\uc744 \uae30\ub2e4\ub9ac\uaca0\uc9c0\ub9cc, \ub2e4\ub978 \uc81c\uc5b4\ud310\uc744 \ucc28\ub2e8\ud558\uc9c0\ub294 \uc54a\uc744 \uac83\uc785\ub2c8\ub2e4.\" \ub77c\uace0 \ub9d0\ud558\ub294 \uac83\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc774 \ud2b9\uc815 \uc791\uc5c5\uc758 \uc2e4\ud589\uc744 \uc77c\uc2dc \uc911\uc9c0\ud558\uc5ec \ub098\uba38\uc9c0 \uc9c0\uc0c1 \uad00\uc81c \uc13c\ud130\uac00 \uacc4\uc18d \uc791\ub3d9\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 \uac83\uacfc \uac19\uc2b5\ub2c8\ub2e4.</p> <p>\ub450 \uac00\uc9c0 \ubc29\ubc95 \ubaa8\ub450 \ube44\ub3d9\uae30 \uc791\uc5c5 \uad00\ub9ac\ub77c\ub294 \ub3d9\uc77c\ud55c \ubb38\uc81c\ub97c \ud574\uacb0\ud569\ub2c8\ub2e4. <code>async/await</code>\ub294 Promise \uc704\uc5d0 \uad6c\ucd95\ub41c \ub354 \ud604\ub300\uc801\uc774\uace0 \uc77d\uae30 \uc26c\uc6b4 \uad6c\ubb38\uc77c \ubfd0\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <ul> <li>Promise\uc640 <code>.then()</code>: \uc774\uac83\uc740 \"\ud0d0\uc0ac\uc120\uc774 \uc0ac\uc9c4\uc744 \ubcf4\ub0b4\uba74 \ubd84\uc11d \ubd80\uc11c\ub85c \uc804\ub2ec\ud558\ub77c\"\uace0 \uc2a4\ud2f0\ucee4\uc5d0 \uc4f0\ub294 \uac83\uacfc \uac19\uc2b5\ub2c8\ub2e4.</li> <li>Async/await: \uc774\uac83\uc740 \uc870\uc218\uc5d0\uac8c \"\ud0d0\uc0ac\uc120\uc73c\ub85c\ubd80\ud130 \uc0ac\uc9c4\uc744 \uae30\ub2e4\ub824\uc918. \ub098\ub294 \uadf8\ub3d9\uc548 \uc0c8 \ub85c\ucf13 \ubc1c\uc0ac\ub97c \uc704\ud55c \uacc4\uc0b0\uc744 \ud560\uac8c.\"\ub77c\uace0 \ub9d0\ud558\ub294 \uac83\uacfc \uac19\uc2b5\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/5/#2-promise-then","title":"2. Promise\uc640 <code>.then()</code>: \uace0\uc804\uc801\uc778 \uba85\ub839 \uccb4\uc778","text":"<p>\uc774\uac83\uc740 JavaScript\uc5d0\uc11c \ube44\ub3d9\uae30\uc131\uc744 \ub2e4\ub8e8\ub294 \uae30\ubcf8\uc801\uc778 \ubc29\ubc95\uc774\uba70, \uc6b0\ub9ac\ub294 4.1\uc7a5\uc5d0\uc11c \uc774\ub97c \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4.</p> <p>\uccab \ubc88\uc9f8 \ucf54\ub4dc\ub97c \ub2e4\uc2dc \uc0b4\ud3b4\ubd05\uc2dc\ub2e4: <pre><code>function getIssPositionWithPromises() {\n    console.log('\"Promise\" \ud504\ub85c\ud1a0\ucf5c\ub85c \uc694\uccad\uc744 \ubcf4\ub0b4\ub294 \uc911...');\n\n    fetch('http://api.open-notify.org/iss-now.json')\n        .then(response =&gt; {\n            // \ub2e8\uacc4 1: \uc751\ub2f5 \uc218\uc2e0\n            if (!response.ok) {\n                throw new Error(`HTTP \uc624\ub958: ${response.status}`);\n            }\n            return response.json(); // \uc0c8 Promise \ubc18\ud658\n        })\n        .then(data =&gt; {\n            // \ub2e8\uacc4 2: \ub370\uc774\ud130 \ud30c\uc2f1\ub428\n            console.log('\"Promise\" \ud504\ub85c\ud1a0\ucf5c\ub85c \ub370\uc774\ud130 \uc218\uc2e0\ub428:', data.iss_position);\n        })\n        .catch(error =&gt; {\n            // \ub2e8\uacc4 3 (\uc624\ub958): \uc5b4\ub290 \ub2e8\uacc4\uc5d0\uc11c\ub4e0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4\n            console.error('\"Promise\" \ud504\ub85c\ud1a0\ucf5c \ud1b5\uc2e0 \uc2e4\ud328:', error);\n        });\n\n    console.log('...\uba85\ub839\uc774 \uc804\uc1a1\ub418\uc5c8\uc2b5\ub2c8\ub2e4, \uc9c0\uc0c1 \uad00\uc81c \uc13c\ud130\ub294 \uacc4\uc18d \uc791\ub3d9\ud569\ub2c8\ub2e4...');\n}\n</code></pre></p> <p>\uc7a5\uc810:</p> <ul> <li>\uba85\uc2dc\uc801\uc778 \uc791\uc5c5 \uccb4\uc778.</li> <li>\uac04\ub2e8\ud55c \uc21c\ucc28\uc801 \uc791\uc5c5\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4.</li> </ul> <p>\ub2e8\uc810:</p> <ul> <li>\"\ucf5c\ubc31 \ud5ec\" (Callback Hell): \uc911\ucca9\ub41c \ube44\ub3d9\uae30 \uc791\uc5c5\uc774 \ub9ce\uc744 \uacbd\uc6b0 \ucf54\ub4dc\uac00 \uc77d\uae30 \uc5b4\ub824\uc6b4 <code>.then()</code>\uc758 \"\uc0ac\ub2e4\ub9ac\" \ud615\ud0dc\ub85c \ubcc0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>\uc624\ub958 \ucc98\ub9ac\uac00 \ub35c \uc9c1\uad00\uc801\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/5/#3-asyncawait","title":"3. Async/await: \ud604\ub300\uc801\uc778 \ub3d9\uae30\uc2dd \uc2a4\ud0c0\uc77c","text":"<p><code>async/await</code>\ub294 Promise \uc704\uc5d0 \uc788\ub294 \"\ubb38\ubc95\uc801 \uc124\ud0d5\"\uc73c\ub85c, \ube44\ub3d9\uae30 \ucf54\ub4dc\ub97c \ub9c8\uce58 \ub3d9\uae30 \ucf54\ub4dc\ucc98\ub7fc \uc791\uc131\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4.</p> <p>\uc0ac\uc6a9 \uaddc\uce59:</p> <ol> <li>\ud0a4\uc6cc\ub4dc <code>await</code>\ub294 <code>async</code>\ub85c \ud45c\uc2dc\ub41c \ud568\uc218 \ub0b4\ubd80\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li><code>await</code>\ub294 Promise\ub97c \ubc18\ud658\ud558\ub294 \ud638\ucd9c(\uc608: <code>fetch()</code> \ub610\ub294 <code>response.json()</code>) \uc55e\uc5d0 \ub193\uc785\ub2c8\ub2e4.</li> <li><code>await</code>\ub294 Promise\uac00 \ud574\uacb0\ub420 \ub54c\uae4c\uc9c0 <code>async</code> \ud568\uc218\uc758 \uc2e4\ud589\uc744 \"\uc77c\uc2dc \uc911\uc9c0\"\ud558\uace0 \uadf8 \uacb0\uacfc\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.</li> </ol> <p>\ub3d9\uc77c\ud55c \ucf54\ub4dc\ub97c <code>async/await</code>\ub85c \ub2e4\uc2dc \uc791\uc131: <pre><code>async function getIssPositionWithAsyncAwait() {\n    console.log('\"Async/await\" \ud504\ub85c\ud1a0\ucf5c\ub85c \uc694\uccad\uc744 \ubcf4\ub0b4\ub294 \uc911...');\n\n    try {\n        // \ub2e8\uacc4 1: \uc11c\ubc84 \uc751\ub2f5 \ub300\uae30\n        const response = await fetch('http://api.open-notify.org/iss-now.json');\n\n        if (!response.ok) {\n            throw new Error(`HTTP \uc624\ub958: ${response.status}`);\n        }\n\n        // \ub2e8\uacc4 2: \uc751\ub2f5 \ubcf8\ubb38\uc774 JSON\uc73c\ub85c \ubcc0\ud658\ub420 \ub54c\uae4c\uc9c0 \ub300\uae30\n        const data = await response.json();\n\n        console.log('\"Async/await\" \ud504\ub85c\ud1a0\ucf5c\ub85c \ub370\uc774\ud130 \uc218\uc2e0\ub428:', data.iss_position);\n    } catch (error) {\n        // \ub2e8\uacc4 3 (\uc624\ub958): try \ube14\ub85d\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ubaa8\ub4e0 \uc624\ub958 \ud3ec\ucc29\n        console.error('\"Async/await\" \ud504\ub85c\ud1a0\ucf5c \ud1b5\uc2e0 \uc2e4\ud328:', error);\n    }\n\n    console.log('...\uba85\ub839\uc774 \uc804\uc1a1\ub418\uc5c8\uc2b5\ub2c8\ub2e4, \uc9c0\uc0c1 \uad00\uc81c \uc13c\ud130\ub294 \uacc4\uc18d \uc791\ub3d9\ud569\ub2c8\ub2e4...');\n}\n</code></pre></p> <p>\uc7a5\uc810:</p> <ul> <li>\uac00\ub3c5\uc131: \ucf54\ub4dc\uac00 \uac70\uc758 \uc77c\ubc18 \ub3d9\uae30 \ucf54\ub4dc\ucc98\ub7fc \ubcf4\uc5ec \uc704\uc5d0\uc11c \uc544\ub798\ub85c \uc77d\uae30 \uc27d\uc2b5\ub2c8\ub2e4.</li> <li>\uc624\ub958 \ucc98\ub9ac: \ud45c\uc900\uc801\uc774\uace0 \uc775\uc219\ud55c <code>try...catch</code> \ube14\ub85d\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.</li> <li>\ub514\ubc84\uae45: <code>await</code>\uac00 \uc788\ub294 \uac01 \uc904\uc5d0 \uc911\ub2e8\uc810(breakpoints)\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc5b4 \ub514\ubc84\uae45\uc774 \ud6e8\uc52c \uc27d\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\ub2e8\uc810:</p> <ul> <li><code>await</code> \ub610\ub294 <code>async</code>\ub97c \uc78a\uae30 \uc26c\uc6cc \uc624\ub958\ub85c \uc774\uc5b4\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/5/#4","title":"4. \uc5b4\ub5a4 \ud504\ub85c\ud1a0\ucf5c\uc744 \uc0ac\uc6a9\ud574\uc57c \ud560\uae4c\uc694?","text":"\uc0c1\ud669 \uad8c\uc7a5\ub418\ub294 \uc811\uadfc \ubc29\uc2dd \uc774\uc720? \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 <code>async/await</code> \ucf54\ub4dc\uac00 \ub354 \uae54\ub054\ud558\uace0 \uc77d\uace0 \ub514\ubc84\uae45\ud558\uae30 \uc27d\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc774 \ud604\ub300\uc801\uc778 \ud45c\uc900\uc785\ub2c8\ub2e4. \uac04\ub2e8\ud55c 1-2\ub2e8\uacc4 \uccb4\uc778 Promise\uc640 <code>.then()</code> \ucda9\ubd84\ud788 \uc801\ud569\ud558\uba70 \ucf54\ub4dc\uac00 \uac04\uacb0\ud558\uac8c \uc720\uc9c0\ub429\ub2c8\ub2e4. \uc5ec\ub7ec \uc694\uccad\uc758 \ubcd1\ub82c \uc2e4\ud589 <code>Promise.all()</code> \uc774 \uba54\uc11c\ub4dc\ub294 \uc5ec\ub7ec Promise\ub97c \ub3d9\uc2dc\uc5d0 \uc2dc\uc791\ud558\uace0 \ubaa8\ub450 \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9b4 \uc218 \uc788\uac8c \ud569\ub2c8\ub2e4. <code>async/await</code>\ub294 \uc774\uc640 \uc798 \uc5b4\uc6b8\ub9bd\ub2c8\ub2e4. <p><code>Promise.all()</code> \uc608\uc2dc: <pre><code>async function getParallelData() {\n    try {\n        // \ub450 \uc694\uccad\uc744 \ub3d9\uc2dc\uc5d0 \uc2dc\uc791\ud569\ub2c8\ub2e4.\n        const [shipsResponse, launchesResponse] = await Promise.all([\n            fetch('https://api.spacexdata.com/v4/rockets'),\n            fetch('https://api.spacexdata.com/v4/launches/latest')\n        ]);\n\n        if (!shipsResponse.ok || !launchesResponse.ok) {\n            throw new Error('\uc694\uccad \uc911 \ud558\ub098\uac00 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4!');\n        }\n\n        const rockets = await shipsResponse.json();\n        const latestLaunch = await launchesResponse.json();\n\n        console.log(`\ucd1d \ud568\ub300 \ub85c\ucf13 \uc218: ${rockets.length}`);\n        console.log(`\ucd5c\uc2e0 \ubc1c\uc0ac: ${latestLaunch.name}`);\n    } catch (error) {\n        console.error('\ubcd1\ub82c \ub370\uc774\ud130 \uac00\uc838\uc624\uae30 \uc624\ub958:', error);\n    }\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/5/#_1","title":"\uac1c\ub150 \ud655\uc778 \ud034\uc988","text":"<p>1. `async/await`\ub294...</p>  a) Promise\uc640\ub294 \ub2e4\ub974\uac8c \uc791\ub3d9\ud558\ub294 \ub300\uccb4 \ubc29\uc2dd  b) Promise\ub97c \ub2e4\ub8e8\uae30 \uc704\ud55c \ub354 \ud3b8\ub9ac\ud55c \uad6c\ubb38  c) JavaScript\ub97c \ub3d9\uae30\uc801\uc73c\ub85c \ub9cc\ub4dc\ub294 \ubc29\ubc95 <p>2. `await`\uac00 \uc0ac\uc6a9\ub418\ub294 \ud568\uc218 \ub0b4\ubd80\uc5d0 \ubc18\ub4dc\uc2dc \ud544\uc694\ud55c \ud0a4\uc6cc\ub4dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) `promise`  b) `function`  c) `async` <p>3. `.then()`\uc5d0 \ub300\ud55c `async/await`\uc758 \uc8fc\uc694 \uc774\uc810\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) \ub354 \ube60\ub978 \uc2e4\ud589 \uc18d\ub3c4  b) \ucf54\ub4dc \uac00\ub3c5\uc131 \ud5a5\uc0c1 \ubc0f `try...catch`\ub97c \ud1b5\ud55c \ud3b8\ub9ac\ud55c \uc624\ub958 \ucc98\ub9ac  c) \ud3f4\ub9ac\ud544 \uc5c6\uc774 \uad6c\ud615 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc791\ub3d9 <p>4. `async` \ud568\uc218 \ub0b4\uc5d0\uc11c `fetch()` \uc55e\uc5d0 `await`\ub97c \uc78a\uc73c\uba74 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?</p>  a) \ucf54\ub4dc\ub294 \uc624\ub958 \uc5c6\uc774 \uc2e4\ud589\ub418\uc9c0\ub9cc, \ubcc0\uc218\uc5d0\ub294 \uacb0\uacfc\uac00 \uc544\ub2cc Promise\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4.  b) JavaScript\uac00 \uad6c\ubb38 \uc624\ub958\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4.  c) \ud398\uc774\uc9c0\uac00 \uc751\ub2f5\uc744 \uae30\ub2e4\ub9ac\uba70 \"\uba48\ucda5\ub2c8\ub2e4\". <p>5. `Promise.all()`\uc740 \ubb34\uc5c7\uc744 \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\uae4c?</p>  a) Promise\ub97c \uc5c4\uaca9\ud558\uac8c \uc21c\uc11c\ub300\ub85c \uc2e4\ud589\ud558\uae30 \uc704\ud574  b) \uc5ec\ub7ec Promise\ub97c \ubcd1\ub82c\ub85c \uc2e4\ud589\ud558\uace0 \ubaa8\ub450 \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9ac\uae30 \uc704\ud574  c) \uc5ec\ub7ec Promise \uc911 \uac00\uc7a5 \ube60\ub978 \uac83\uc744 \uc120\ud0dd\ud558\uae30 \uc704\ud574 \ud655\uc778\ud558\uae30 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\ube44\ub3d9\uae30 \uc791\uc5c5\uc744 \uad00\ub9ac\ud558\uae30 \uc704\ud55c \ub450 \uac00\uc9c0 \uad6c\ubb38\uc744 \ud559\uc2b5\ud588\uc73c\uba70, \ub300\ubd80\ubd84\uc758 \ud604\ub300 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c <code>async/await</code>\uac00 \uc65c \uc120\ud638\ub418\ub294\uc9c0 \uc774\ud574\ud588\uc2b5\ub2c8\ub2e4.</p> <ul> <li>\ud83d\udd17 <code>Promise</code>\uc640 <code>.then()</code>\uc5d0 \ub300\ud55c \uc9c0\uc2dd\uc744 \ubcf5\uc2b5\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\ud83d\udee0\ufe0f <code>async/await</code>\uc758 \uc791\ub3d9 \ubc29\uc2dd\uacfc \uadf8 \uc7a5\uc810\uc744 \uae4a\uc774 \uc774\ud574\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\u26a1 \ubcd1\ub82c \uc694\uccad\uc744 \uc2e4\ud589\ud558\uae30 \uc704\ud55c <code>Promise.all</code>\uc5d0 \ub300\ud574 \uc54c\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\ud1b5\uc2e0 \ud504\ub85c\ud1a0\ucf5c \ud559\uc2b5 \uc644\ub8cc! \uc774 \uc139\uc158\uc758 \ub9c8\uc9c0\ub9c9 \uc7a5\uc5d0\uc11c \uc6b0\ub9ac\ub294 \ubaa8\ub4e0 \uc9c0\uc2dd\uc744 \ud55c\ub370 \ubaa8\uc544 \ubaa8\ub4e0 CRUD \uc791\uc5c5\uc5d0 \ub300\ud55c \uc644\uc804\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud558\uc5ec \uc6b0\ub9ac\uc758 \"\ube44\ud589 \uc81c\uc5b4 \uc13c\ud130\"\ub97c \uc644\uc131\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \uc5f0\uc2b5 \ubb38\uc81c:</p> <ul> <li>\ub2f9\uc2e0\uc758 <code>app.js</code> \ud30c\uc77c\uc5d0\uc11c \uc5ec\uc804\ud788 <code>.then()</code>\uc744 \uc0ac\uc6a9\ud558\ub294 \ubaa8\ub4e0 \ud568\uc218\ub97c <code>async/await</code> \uad6c\ubb38\uc73c\ub85c \ub2e4\uc2dc \uc791\uc131\ud558\uc138\uc694.</li> <li><code>Promise.all()</code>\uc5d0 \ub2e4\ub978 \uc694\uccad\uc744 \ucd94\uac00\ud574 \ubcf4\uc138\uc694(\uc608: <code>https://api.spacexdata.com/v4/starlink</code>\ub85c) \uadf8\ub9ac\uace0 \ub370\uc774\ud130\ub97c \ucd9c\ub825\ud558\uc138\uc694.</li> </ul> <p>\u26a0\ufe0f \uc624\ub958 \ubc1c\uc0dd \uc2dc:</p> <ul> <li><code>await is only valid in async functions</code>: <code>await</code>\ub97c \uc0ac\uc6a9\ud558\ub294 \ud568\uc218\uac00 <code>async</code>\ub85c \ud45c\uc2dc\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> <li>\ubcc0\uc218\uc5d0 <code>[object Promise]</code>\uac00 \ud3ec\ud568\ub428: \ud504\ub77c\ubbf8\uc2a4\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218 \uc55e\uc5d0 <code>await</code>\ub97c \ubd99\uc774\ub294 \uac83\uc744 \uc78a\uc73c\uc168\uc2b5\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/6/","title":"\uc81c4.6\uc7a5: API\ub97c \uc704\ud55c \uac04\ub2e8\ud55c \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ucd95","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 1\uc2dc\uac04 15\ubd84</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/6/#1","title":"1. \ucd5c\uc885 \uc870\ub9bd: \"\ube44\ud589 \uad00\uc81c \uc13c\ud130\" \uac00\ub3d9","text":"<p>\uc6b0\ub9ac\ub294 \ubaa8\ub4e0 \uc2dc\uc2a4\ud15c\uc744 \uac1c\ubcc4\uc801\uc73c\ub85c \ud559\uc2b5\ud588\uc2b5\ub2c8\ub2e4: \"\uc548\ud14c\ub098\"(<code>Fetch</code>)\ub97c \uc124\uc815\ud558\uace0, \"\uba85\ub839\"(<code>GET</code>, <code>POST</code>, <code>DELETE</code>)\uc744 \uc804\uc1a1\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6e0\uc73c\uba70, \"\ube44\uc0c1 \ud504\ub85c\ud1a0\ucf5c\"(\uc624\ub958 \ucc98\ub9ac)\uc744 \uac1c\ubc1c\ud588\uc2b5\ub2c8\ub2e4.</p> <p>\uc774\uc81c \ubaa8\ub4e0 \uad6c\uc131 \uc694\uc18c\ub97c \ud558\ub098\ub85c \ubaa8\uc544 \uc6b0\ub9ac\uc758 \ube44\ud589 \uad00\uc81c \uc13c\ud130(\u0426\u0423\u041f)\ub97c \uac00\ub3d9\ud560 \ub54c\uc785\ub2c8\ub2e4 \u2014 \uc6b0\uc8fc \ud568\ub300 \uad00\ub9ac\ub97c \uc704\ud55c \uc644\uc804\ud558\uace0 \uc778\ud130\ub799\ud2f0\ube0c\ud55c \uc778\ud130\ud398\uc774\uc2a4\uc785\ub2c8\ub2e4.</p> <p>\uc6b0\ub9ac\uc758 \ubaa9\ud45c:</p> <ul> <li>\ud1b5\uc77c\ub418\uace0, \uae54\ub054\ud558\uba70, \uc774\ud574\ud558\uae30 \uc26c\uc6b4 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ucd95\ud569\ub2c8\ub2e4.</li> <li>\uc120\ubc15 \uc0dd\uc131, \ud45c\uc2dc, \uc5c5\ub370\uc774\ud2b8, \uc0ad\uc81c\uc758 \uc644\uc804\ud55c CRUD \uc8fc\uae30\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4.</li> <li>\uc0ac\uc6a9\uc790\uc5d0\uac8c \uc2dc\uac01\uc801 \ud53c\ub4dc\ubc31(\ub85c\ub529, \uc131\uacf5, \uc624\ub958)\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4.</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>\uc6b0\ub9ac\ub294 \uac1c\ubcc4 \ud14c\uc2a4\ud2b8 \ucf58\uc194\uc5d0\uc11c \u0426\u0423\u041f\uc758 \uba54\uc778 \ud654\uba74\uc73c\ub85c \ub118\uc5b4\uac11\ub2c8\ub2e4. \uc774 \ud654\uba74\uc5d0\ub294 \ud55c \uba85\uc758 \uc6b4\uc601\uc790\uac00 \uc218\uc2ed \uac00\uc9c0 \ub2e4\ub978 \uc2dc\uc2a4\ud15c \uac04\uc5d0 \uc804\ud658\ud560 \ud544\uc694 \uc5c6\uc774 \uc804\uccb4 \ud568\ub300\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\ub3c4\ub85d \ud544\uc694\ud55c \ubaa8\ub4e0 \ubc84\ud2bc\uacfc \ud45c\uc2dc\uae30\uac00 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/6/#2","title":"2. \uc778\ud130\ud398\uc774\uc2a4 \uc124\uacc4: \"\ub300\uc2dc\ubcf4\ub4dc\"","text":"<p>\uc6b0\ub9ac\ub294 \ub354 \uad6c\uc870\ud654\ub41c HTML\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc120\ubc15\uc744 \ud45c\uc2dc\ud558\uae30 \uc704\ud574 \"\uce74\ub4dc\"\ub97c \uc0ac\uc6a9\ud558\uace0, \ud3b8\uc9d1\uc744 \uc704\ud574 \ubaa8\ub2ec \ucc3d\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p><code>index.html</code> \uc5c5\ub370\uc774\ud2b8: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ko\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u0426\u0423\u041f v2.0 - \ud568\ub300 \uad00\ub9ac&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt; &lt;!-- \uc2a4\ud0c0\uc77c \uc5f0\uacb0 --&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;\uc6b0\uc8fc \ud568\ub300 \uc81c\uc5b4 \ud328\ub110&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        &lt;section id=\"fleet-controls\"&gt;\n            &lt;button id=\"load-fleet-btn\"&gt;\ud568\ub300 \ubaa9\ub85d \uc0c8\ub85c\uace0\uce68&lt;/button&gt;\n            &lt;button id=\"show-create-form-btn\"&gt;\uc0c8 \uc7a5\uce58 \ubc1c\uc0ac&lt;/button&gt;\n        &lt;/section&gt;\n\n        &lt;section id=\"fleet-display\"&gt;\n            &lt;h2&gt;\ud604\uc7ac \ud568\ub300 \uad6c\uc131&lt;/h2&gt;\n            &lt;div id=\"fleet-list\" class=\"cards-container\"&gt;\n                &lt;!-- \uc120\ubc15 \uce74\ub4dc\ub4e4\uc774 \uc5ec\uae30\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4 --&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n\n    &lt;!-- \uc0dd\uc131/\ud3b8\uc9d1\uc744 \uc704\ud55c \ubaa8\ub2ec \ucc3d (\ucd08\uae30\uc5d0\ub294 \uc228\uae40) --&gt;\n    &lt;div id=\"modal\" class=\"modal-overlay\" style=\"display: none;\"&gt;\n        &lt;div class=\"modal-content\"&gt;\n            &lt;h2 id=\"modal-title\"&gt;\uc0c8 \uc7a5\uce58 \ubc1c\uc0ac&lt;/h2&gt;\n            &lt;form id=\"ship-form\"&gt;\n                &lt;input type=\"hidden\" id=\"ship-id\"&gt;\n                &lt;input type=\"text\" id=\"ship-name\" placeholder=\"\uc774\ub984\" required&gt;\n                &lt;input type=\"text\" id=\"ship-type\" placeholder=\"\uc720\ud615\" required&gt;\n                &lt;input type=\"number\" id=\"ship-year\" placeholder=\"\ubc1c\uc0ac \uc5f0\ub3c4\" required&gt;\n                &lt;input type=\"text\" id=\"ship-status\" placeholder=\"\uc0c1\ud0dc\" required&gt;\n                &lt;div class=\"modal-actions\"&gt;\n                    &lt;button type=\"submit\" id=\"save-btn\"&gt;\uc800\uc7a5&lt;/button&gt;\n                    &lt;button type=\"button\" id=\"cancel-btn\"&gt;\ucde8\uc18c&lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/form&gt;\n            &lt;div id=\"notification-area\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/6/#3-stylecss","title":"3. \"\uc6b0\uc8fc\" \ub514\uc790\uc778 \ucd94\uac00: <code>style.css</code>","text":"<p>\uc6b0\ub9ac\uc758 \u0426\u0423\u041f\uc774 \uba4b\uc9c0\uac8c \ubcf4\uc774\ub3c4\ub85d <code>style.css</code> \ud30c\uc77c\uc744 \ub9cc\ub4dc\uc138\uc694. <pre><code>/* style.css */\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background-color: #1a1a2e;\n    color: #e0e0e0;\n    margin: 0;\n    padding: 20px;\n}\nheader { text-align: center; margin-bottom: 20px; }\nbutton {\n    background-color: #4a4e69;\n    color: white;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\nbutton:hover { background-color: #6a6e94; }\n.cards-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 20px;\n}\n.card {\n    background-color: #2a2a4e;\n    border: 1px solid #4a4e69;\n    border-radius: 8px;\n    padding: 15px;\n}\n.card h3 { margin-top: 0; color: #9394a5; }\n.card-actions { margin-top: 15px; }\n\n/* \ubaa8\ub2ec \ucc3d \uc2a4\ud0c0\uc77c */\n.modal-overlay {\n    position: fixed;\n    top: 0; left: 0;\n    width: 100%; height: 100%;\n    background-color: rgba(0,0,0,0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.modal-content {\n    background: #1a1a2e;\n    padding: 20px;\n    border-radius: 8px;\n    border: 1px solid #4a4e69;\n    width: 90%;\n    max-width: 500px;\n}\n#ship-form input {\n    width: calc(100% - 20px);\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 4px;\n    border: 1px solid #4a4e69;\n    background-color: #2a2a4e;\n    color: white;\n}\n.modal-actions { text-align: right; }\n</code></pre></p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/6/#4-appjs","title":"4. \ub17c\ub9ac \uc804\uccb4 \uc7ac\uad6c\uc131: <code>app.js</code>","text":"<p>\uc774\uc81c \uc6b0\ub9ac\ub294 \ubaa8\ub4e0 \uc9c0\uc2dd\uc744 \ud1b5\ud569\ud558\uc5ec <code>app.js</code>\uc758 \ucd5c\uc885 \ubc84\uc804\uc744 \uc791\uc131\ud560 \uac83\uc785\ub2c8\ub2e4. <pre><code>// app.js\n\n// --- DOM \uc694\uc18c ---\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetListContainer = document.getElementById('fleet-list');\nconst modal = document.getElementById('modal');\nconst modalTitle = document.getElementById('modal-title');\nconst shipForm = document.getElementById('ship-form');\nconst saveBtn = document.getElementById('save-btn');\nconst cancelBtn = document.getElementById('cancel-btn');\nconst showCreateFormBtn = document.getElementById('show-create-form-btn');\nconst notificationArea = document.getElementById('notification-area');\n\n// --- UI \ud568\uc218 ---\n\nfunction showNotification(message, isError = false) {\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? '#ff6b6b' : '#6bff6b';\n}\n\nfunction openModalForCreate() {\n    shipForm.reset();\n    document.getElementById('ship-id').value = '';\n    modalTitle.textContent = '\uc0c8 \uc7a5\uce58 \uc2dc\uc791';\n    modal.style.display = 'flex';\n}\n\nfunction openModalForEdit(ship) {\n    shipForm.reset();\n    document.getElementById('ship-id').value = ship.id;\n    document.getElementById('ship-name').value = ship.name;\n    document.getElementById('ship-type').value = ship.type;\n    document.getElementById('ship-year').value = ship.launch_year;\n    document.getElementById('ship-status').value = ship.status;\n    modalTitle.textContent = `\ud3b8\uc9d1: ${ship.name}`;\n    modal.style.display = 'flex';\n}\n\nfunction closeModal() {\n    modal.style.display = 'none';\n    notificationArea.textContent = '';\n}\n\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;\uc720\ud615: ${ship.type}&lt;/p&gt;\n        &lt;p&gt;\ucd9c\uc2dc \uc5f0\ub3c4: ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;\uc0c1\ud0dc: ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;\uc218\uc815&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;\ud3d0\uae30&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n\n// --- API \ubc0f \ud45c\uc2dc \ub85c\uc9c1 ---\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;\ud154\ub808\uba54\ud2b8\ub9ac \ub85c\ub4dc \uc911...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships');\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;\ub4f1\ub85d\ub41c \uc7a5\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.&lt;/p&gt;';\n            return;\n        }\n        ships.forEach(ship =&gt; {\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;\ud50c\ub9bf \ub85c\ub4dc \uc624\ub958: ${error.message}&lt;/p&gt;`;\n    }\n}\n\nasync function handleSaveShip(event) {\n    event.preventDefault();\n    const shipId = document.getElementById('ship-id').value;\n    const shipData = {\n        name: document.getElementById('ship-name').value,\n        type: document.getElementById('ship-type').value,\n        launch_year: parseInt(document.getElementById('ship-year').value),\n        status: document.getElementById('ship-status').value\n    };\n\n    try {\n        let response;\n        if (shipId) {\n            // \uc5c5\ub370\uc774\ud2b8 (PUT)\n            response = await apiRequest(`/spaceships/${shipId}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`\uc7a5\uce58 \"${response.name}\"\uc774(\uac00) \uc131\uacf5\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4!`);\n        } else {\n            // \uc0dd\uc131 (POST)\n            response = await apiRequest('/spaceships', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`\uc7a5\uce58 \"${response.name}\"\uc774(\uac00) \uc131\uacf5\uc801\uc73c\ub85c \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\ub2e4! ID: ${response.id}`);\n        }\n\n        setTimeout(() =&gt; {\n            closeModal();\n            fetchAndDisplayFleet();\n        }, 1500);\n\n    } catch (error) {\n        showNotification(error.message, true);\n    }\n}\n\nasync function handleDeleteShip(shipId) {\n    if (!confirm(`ID ${shipId}\ub97c(\uc744) \uac00\uc9c4 \uc7a5\uce58\ub97c \ud3d0\uae30\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?`)) return;\n\n    try {\n        await apiRequest(`/spaceships/${shipId}`, { method: 'DELETE' });\n        alert('\uc7a5\uce58\uac00 \uc131\uacf5\uc801\uc73c\ub85c \ud3d0\uae30\ub418\uc5c8\uc2b5\ub2c8\ub2e4.');\n        fetchAndDisplayFleet();\n    } catch (error) {\n        alert(`\ud3d0\uae30 \uc911 \uc624\ub958 \ubc1c\uc0dd: ${error.message}`);\n    }\n}\n\n// --- \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec ---\n\ndocument.addEventListener('DOMContentLoaded', fetchAndDisplayFleet);\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\nshowCreateFormBtn.addEventListener('click', openModalForCreate);\ncancelBtn.addEventListener('click', closeModal);\nshipForm.addEventListener('submit', handleSaveShip);\n\nfleetListContainer.addEventListener('click', async (event) =&gt; {\n    const target = event.target;\n    if (target.classList.contains('delete-btn')) {\n        handleDeleteShip(target.dataset.shipId);\n    }\n    if (target.classList.contains('edit-btn')) {\n        try {\n            const ship = await apiRequest(`/spaceships/${target.dataset.shipId}`);\n            openModalForEdit(ship);\n        } catch (error) {\n            alert(`\ud3b8\uc9d1\uc744 \uc704\ud55c \ub370\uc774\ud130\ub97c \ub85c\ub4dc\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4: ${error.message}`);\n        }\n    }\n});\n</code></pre></p>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/6/#5","title":"5. \ucd5c\uc885 \ud14c\uc2a4\ud2b8","text":"<ol> <li>FastAPI \uc11c\ubc84 \uc2dc\uc791: <code>uvicorn main:app --reload</code></li> <li>\ube0c\ub77c\uc6b0\uc800(<code>Live Server</code>\ub97c \ud1b5\ud574)\uc5d0\uc11c <code>index.html</code>\uc744(\ub97c) \uc5fd\ub2c8\ub2e4.</li> <li>\uc804\uccb4 \uc8fc\uae30 \ud655\uc778:<ul> <li>\ud568\uc120 \ubaa9\ub85d\uc774 \uc790\ub3d9\uc73c\ub85c \ub85c\ub4dc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.</li> <li>\"\uc0c8 \uc7a5\uce58 \uc2dc\uc791\"\uc744 \ud074\ub9ad\ud558\uace0 \uc591\uc2dd\uc744 \uc791\uc131\ud55c \ud6c4 \uc800\uc7a5\ud569\ub2c8\ub2e4. \uc0c8 \ud568\uc120\uc774 \ubaa9\ub85d\uc5d0 \ub098\ud0c0\ub098\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li>\uc544\ubb34 \ud568\uc120\uc5d0\uc11c\ub098 \"\uc218\uc815\"\uc744 \ud074\ub9ad\ud558\uace0 \ub370\uc774\ud130\ub97c \ubcc0\uacbd\ud55c \ud6c4 \uc800\uc7a5\ud569\ub2c8\ub2e4. \uc815\ubcf4\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li>\uc544\ubb34 \ud568\uc120\uc5d0\uc11c\ub098 \"\ud3d0\uae30\"\ub97c \ud074\ub9ad\ud558\uace0 \uc791\uc5c5\uc744 \ud655\uc778\ud569\ub2c8\ub2e4. \ubaa9\ub85d\uc5d0\uc11c \uc0ac\ub77c\uc9c0\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li>\ubaa8\ub4e0 \uc624\ub958 \uc2dc\ub098\ub9ac\uc624(\uc798\ubabb\ub41c \ub370\uc774\ud130, \uc11c\ubc84 \uc911\uc9c0)\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> </ul> </li> </ol>"},{"location":"ko/%EC%A0%9C4%EC%9E%A5%20-%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20API%20%EC%82%AC%EC%9A%A9/6/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. \uc6f9 \uc778\ud130\ud398\uc774\uc2a4\uc758 \ubaa8\ub2ec \ucc3d\uc740...</p>  a) HTML6\uc758 \uc0c8\ub85c\uc6b4 \ud0dc\uadf8  b) \ub098\uba38\uc9c0 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ucc28\ub2e8\ud558\ub294 \ud31d\uc5c5 \ub300\ud654 \uc0c1\uc790  c) \ucf58\uc194 \uc624\ub958 \ud45c\uc2dc\ub97c \uc704\ud55c \ucc3d <p>2. `DOMContentLoaded` \uc774\ubca4\ud2b8\ub294 \ub2e4\uc74c\uc758 \uacbd\uc6b0\uc5d0 \ubc1c\uc0dd\ud569\ub2c8\ub2e4...</p>  a) \ubaa8\ub4e0 \uc774\ubbf8\uc9c0\uc640 \uc2a4\ud0c0\uc77c\uc774 \uc644\uc804\ud788 \ub85c\ub4dc\ub420 \ub54c  b) \ube0c\ub77c\uc6b0\uc800\uac00 HTML\uc5d0\uc11c DOM \ud2b8\ub9ac\ub97c \uad6c\ucd95\ud588\uc9c0\ub9cc, \ub9ac\uc18c\uc2a4\ub294 \uc544\uc9c1 \ub85c\ub4dc \uc911\uc77c \uc218 \uc788\uc744 \ub54c  c) \ud398\uc774\uc9c0 \ub85c\ub4dc \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc744 \ub54c <p>3. \ucd5c\uc885 \ubc84\uc804\uc5d0\uc11c \uc0dd\uc131\uacfc \ud3b8\uc9d1\uc5d0 \ud558\ub098\uc758 \uc591\uc2dd\uc744 \uc0ac\uc6a9\ud558\ub294 \uc774\uc720\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) HTML \ucf54\ub4dc \uc911\ubcf5\uc744 \ud53c\ud558\uace0 \ub85c\uc9c1\uc744 \ub2e8\uc21c\ud654\ud558\uae30 \uc704\ud574  b) \ube0c\ub77c\uc6b0\uc800\uac00 \ud55c \ud398\uc774\uc9c0\uc5d0 \ub450 \uac1c \uc774\uc0c1\uc758 \uc591\uc2dd\uc744 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0  c) \uc774\uac83\uc740 FastAPI\uc758 \uc694\uad6c \uc0ac\ud56d\uc785\ub2c8\ub2e4 <p>4. `data-ship-id=\"${ship.id}\"`\uc740(\ub294) \ub2e4\uc74c\uc758 \uc608\uc2dc\uc785\ub2c8\ub2e4...</p>  a) CSS \ud074\ub798\uc2a4  b) JavaScript \ubcc0\uc218  c) HTML\uc5d0 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud55c \uc0ac\uc6a9\uc790 \uc815\uc758 \ub370\uc774\ud130 \uc18d\uc131 <p>5. \ucf54\ub4dc \ub9ac\ud329\ud1a0\ub9c1(\uc608: `api.js`\ub85c \ub85c\uc9c1 \ubd84\ub9ac)\uc740 \ub2e4\uc74c\uc744 \uc704\ud574 \ud544\uc694\ud569\ub2c8\ub2e4...</p>  a) \ubcf5\uc0ac \ubc29\uc9c0\ub97c \uc704\ud574 \ucf54\ub4dc\ub97c \ubcf5\uc7a1\ud558\uac8c \ub9cc\ub4e4\uae30 \uc704\ud574  b) \ucf54\ub4dc\uc758 \uac00\ub3c5\uc131, \uc720\uc9c0\ubcf4\uc218\uc131 \ubc0f \uc7ac\uc0ac\uc6a9\uc131\uc744 \ud5a5\uc0c1\uc2dc\ud0a4\uae30 \uc704\ud574  c) \ucd5c\uc885 \ud30c\uc77c \ud06c\uae30\ub97c \uc904\uc774\uae30 \uc704\ud574 \ud655\uc778 <p>\ud83d\ude80 \ucc55\ud130 \uc694\uc57d</p> <p>\uadc0\ud558\ub294 \"\ube44\ud589 \uc81c\uc5b4 \uc13c\ud130\"\uc758 \uad6c\ucd95 \ubc0f \ucd9c\uc2dc\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uc644\ub8cc\ud588\uc2b5\ub2c8\ub2e4.</p> <ul> <li>\ud83d\udda5\ufe0f \uad6c\uc870\ud654\ub418\uace0 \uc2a4\ud0c0\uc77c\uc774 \uc801\uc6a9\ub41c HTML/CSS \uc778\ud130\ud398\uc774\uc2a4\ub97c \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4.</li> <li>\u2699\ufe0f \uc804\uccb4 CRUD \uc8fc\uae30\ub97c \uad6c\ud604\ud558\ub294 \uae54\ub054\ud558\uace0 \ubaa8\ub4c8\uc2dd JavaScript \ucf54\ub4dc\ub97c \uc791\uc131\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\ud83d\udef0\ufe0f \uc774\uc81c \uadc0\ud558\uc758 \ud504\ub7f0\ud2b8\uc5d4\ub4dc\ub294 FastAPI\ub85c \uc0dd\uc131\ub41c \ubc31\uc5d4\ub4dc\ub97c \uc644\ubcbd\ud558\uac8c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\ucc55\ud130 4\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uc644\ub8cc\ud558\uc2e0 \uac83\uc744 \ucd95\ud558\ub4dc\ub9bd\ub2c8\ub2e4! \uac04\ub2e8\ud55c <code>fetch</code> \uc694\uccad \uc804\uc1a1\ubd80\ud130 \uc790\uccb4 API\uc640 \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 \uc644\uc804\ud55c \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc0dd\uc131\uae4c\uc9c0 \ubaa8\ub4e0 \uacfc\uc815\uc744 \uac70\ucce4\uc2b5\ub2c8\ub2e4. ```</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/1/","title":"\uc81c5.1\uc7a5: Laravel\uc758 Blade \ud15c\ud50c\ub9bf","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 40\ubd84</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/1/#1-blade","title":"1. Blade\ub780? \ub2f9\uc2e0\uc758 \"\uc2a4\ub9c8\ud2b8\" \uc124\uacc4\ub3c4","text":"<p>\uc9c0\uae08\uae4c\uc9c0 \uc6b0\ub9ac\ub294 \ub450 \uac00\uc9c0 \uadf9\ub2e8\uc801\uc778 \uacbd\uc6b0\uc778 \uc21c\uc218\ud55c <code>index.html</code>\uacfc API\uc758 \uc21c\uc218\ud55c JSON \uc751\ub2f5\ub9cc \ub2e4\ub8e8\uc5c8\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ubc31\uc5d4\ub4dc\uc5d0\uc11c \ub370\uc774\ud130\ub97c \ub3d9\uc801\uc73c\ub85c \ud45c\uc2dc\ud558\ub294 \uc644\uc804\ud55c \uc6f9 \ud398\uc774\uc9c0\ub294 \uc5b4\ub5bb\uac8c \ub9cc\ub4e4\uae4c\uc694?</p> <p>Blade\ub294 Laravel\uc5d0 \ub0b4\uc7a5\ub41c \ud15c\ud50c\ub9bf \uc5d4\uc9c4\uc785\ub2c8\ub2e4. \uc77c\ubc18 HTML\uc744 \uc791\uc131\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\uc9c0\ub9cc, \"\ucd08\ub2a5\ub825\"\uc744 \ubd80\uc5ec\ud569\ub2c8\ub2e4:</p> <ul> <li>\ubcc0\uc218\ub97c \uc0bd\uc785\ud558\uace0 PHP \ucf54\ub4dc\ub97c \uc6b0\uc544\ud55c \uad6c\ubb38\uc73c\ub85c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>\uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud398\uc774\uc9c0 \"\ub808\uc774\uc544\uc6c3\"(\ud5e4\ub354, \ud478\ud130)\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>HTML \ucf54\ub4dc \ub0b4\uc5d0\uc11c \uc9c1\uc811 \ubc18\ubcf5\ubb38\uacfc \uc870\uac74\ubb38\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>XSS \uacf5\uaca9\uc73c\ub85c\ubd80\ud130 \uc790\ub3d9\uc73c\ub85c \ubcf4\ud638\ud569\ub2c8\ub2e4.</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>HTML\uc774 \uc6b0\uc8fc\uc120\uc758 \ub2e8\uc21c\ud55c \uc124\uacc4\ub3c4\ub77c\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. Blade\ub294 \uace0\uae09 CAD \uc2dc\uc2a4\ud15c\uc785\ub2c8\ub2e4. \ub2e8\uc21c\ud788 \uc120\uc744 \uadf8\ub9ac\ub294 \uac83\uc774 \uc544\ub2c8\ub77c \"\uc2a4\ub9c8\ud2b8\" \uac1d\uccb4\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. \"\uc5ec\uae30\ub294 \uc2b9\ubb34\uc6d0 \ubaa9\ub85d\uc774 \ub4e4\uc5b4\uac08 \uac70\uc57c\"\ub77c\uace0 \ub9d0\ud558\uba74 Blade\uac00 \uc790\ub3d9\uc73c\ub85c \ub370\uc774\ud130\ub97c \uc694\uccad\ud558\uc5ec \ucc44\uc6cc\uc90d\ub2c8\ub2e4. \"\uc5ec\uae30\ub294 \uba54\uc778 \ud654\uba74\uc774 \ub4e4\uc5b4\uac08 \uac70\uc57c\"\ub77c\uace0 \ub9d0\ud558\uba74 Blade\uac00 \ud45c\uc900 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0bd\uc785\ud569\ub2c8\ub2e4.</p> <p>\ubaa8\ub4e0 Blade \ud30c\uc77c\uc740 <code>.blade.php</code> \ud655\uc7a5\uc790\ub97c \uac00\uc9c0\uba70 <code>resources/views/</code> \ud3f4\ub354\uc5d0 \uc800\uc7a5\ub429\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/1/#2","title":"2. \uad6c\ubb38\uc758 \uae30\ucd08: \ub370\uc774\ud130 \ud45c\uc2dc","text":"<p>Blade\uac00 \ud558\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c \uc77c\uc740 \ub370\uc774\ud130\ub97c \ucd9c\ub825\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.</p> <p><code>{{ }}</code> \uad6c\ubb38</p> <p>\uc774 \uc774\uc911 \uc911\uad04\ud638\ub294 Blade\uc5d0\uac8c \"\ubcc0\uc218\ub97c \uac00\uc838\uc640\uc11c \uadf8 \ub0b4\uc6a9\uc744 \uc548\uc804\ud558\uac8c \ucd9c\ub825\ud558\ub77c\"\ub294 \uba85\ub839\uc785\ub2c8\ub2e4.</p> <p>\uc608\uc2dc:</p> <ol> <li> <p><code>routes/web.php</code>\uc758 \ub77c\uc6b0\ud2b8: <pre><code>&lt;?php\nRoute::get('/mission-briefing', function () {\n    $mission = '\u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 Kepler-186';\n    return view('briefing', ['mission_name' =&gt; $mission]);\n});\n</code></pre></p> <ul> <li><code>view('briefing', ...)</code>\uc740 Laravel\uc5d0\uac8c <code>resources/views/briefing.blade.php</code> \ud30c\uc77c\uc744 \ucc3e\uc73c\ub77c\uace0 \uc9c0\uc2dc\ud569\ub2c8\ub2e4.</li> <li><code>['mission_name' =&gt; $mission]</code>\uc740 \uc6b0\ub9ac\uac00 \ubdf0\uc5d0 \"\uc804\ub2ec\"\ud558\ub294 \ub370\uc774\ud130 \ubc30\uc5f4\uc785\ub2c8\ub2e4.</li> </ul> </li> <li> <p><code>resources/views/briefing.blade.php</code>\uc758 \ubdf0: <pre><code>&lt;h1&gt;\u0426\u0423\u041f \ubbf8\uc158&lt;/h1&gt;\n&lt;p&gt;\ud604\uc7ac \uc784\ubb34: {{ $mission_name }}&lt;/p&gt;\n</code></pre></p> </li> </ol> <p>\ube0c\ub77c\uc6b0\uc800\uc758 <code>/mission-briefing</code> \uc8fc\uc18c\uc5d0\uc11c\uc758 \uacb0\uacfc: <pre><code>&lt;h1&gt;\u0426\u0423\u041f \ubbf8\uc158&lt;/h1&gt;\n&lt;p&gt;\ud604\uc7ac \uc784\ubb34: \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 Kepler-186&lt;/p&gt;\n</code></pre></p> <p>\ud83d\udee1\ufe0f \uc911\uc694 \uc0ac\ud56d: Blade\ub294 <code>{{ }}</code> \ub0b4\ubd80\uc758 \ubaa8\ub4e0 \ub370\uc774\ud130\ub97c \uc790\ub3d9\uc73c\ub85c \uc774\uc2a4\ucf00\uc774\ud504 \ucc98\ub9ac\ud569\ub2c8\ub2e4. \uc774\ub294 \ubcc0\uc218\uc5d0 HTML \ud0dc\uadf8\ub098 \uc545\uc131 \uc2a4\ud06c\ub9bd\ud2b8\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\ub354\ub77c\ub3c4 \uc2e4\ud589\ub418\uc9c0 \uc54a\uace0 \uc77c\ubc18 \ud14d\uc2a4\ud2b8\ub85c \ucd9c\ub825\ub41c\ub2e4\ub294 \uc758\ubbf8\uc785\ub2c8\ub2e4. \uc774\ub294 XSS \uacf5\uaca9\uc73c\ub85c\ubd80\ud130\uc758 \ub0b4\uc7a5\ub41c \ubcf4\ud638 \uae30\ub2a5\uc785\ub2c8\ub2e4.</p> <p>\uc774\uc2a4\ucf00\uc774\ud504 \ucc98\ub9ac\ub418\uc9c0 \uc54a\uc740 HTML\uc744 \ucd9c\ub825\ud558\ub824\uba74 (\uc8fc\uc758\ud574\uc11c \uc0ac\uc6a9\ud558\uc138\uc694!) <code>{!! $variable !!}</code> \uad6c\ubb38\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/1/#3-html","title":"3. \ub514\ub809\ud2f0\ube0c: HTML\uc5d0 \ub85c\uc9c1 \ucd94\uac00\ud558\uae30","text":"<p>Blade \ub514\ub809\ud2f0\ube0c\ub294 <code>@</code> \uae30\ud638\ub85c \uc2dc\uc791\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ubc18\ubcf5\ubb38, \uc870\uac74\ubb38 \ub4f1\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\uc870\uac74\ubb38 (<code>@if</code>, <code>@else</code>): <pre><code>@if($planet-&gt;is_habitable)\n    &lt;p style=\"color: green;\"&gt;\uc774 \ud589\uc131\uc740 \uc0dd\uba85\uccb4\uac00 \uc0b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4!&lt;/p&gt;\n@else\n    &lt;p style=\"color: red;\"&gt;\uc6b0\uc8fc\ubcf5\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \ub300\uae30\uac00 \uc801\ub300\uc801\uc785\ub2c8\ub2e4.&lt;/p&gt;\n@endif\n</code></pre></p> <p>\ubc18\ubcf5\ubb38 (<code>@foreach</code>, <code>@forelse</code>):</p> <p><code>@forelse</code>\ub294 \ubc18\ubcf5\ubb38\uacfc \ube44\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uae30\ub2a5\uc744 \uacb0\ud569\ud55c \ub9e4\uc6b0 \ud3b8\ub9ac\ud55c \ub514\ub809\ud2f0\ube0c\uc785\ub2c8\ub2e4. <pre><code>&lt;h2&gt;\uc2dc\uc2a4\ud15c \ub0b4 \ud589\uc131 \ubaa9\ub85d:&lt;/h2&gt;\n&lt;ul&gt;\n    @forelse($planets as $planet)\n        &lt;li&gt;\n            {{ $loop-&gt;iteration }}. {{ $planet-&gt;name }}\n            &lt;!-- $loop - \ubc18\ubcf5\ubb38\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud2b9\ubcc4\ud55c \ubcc0\uc218 --&gt;\n        &lt;/li&gt;\n    @empty\n        &lt;li&gt;\uc774 \uc2dc\uc2a4\ud15c\uc5d0\uc11c\ub294 \ud589\uc131\uc774 \ubc1c\uacac\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.&lt;/li&gt;\n    @endforelse\n&lt;/ul&gt;\n</code></pre></p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/1/#4-dry","title":"4. \ub808\uc774\uc544\uc6c3\uacfc \uc139\uc158: \ubc18\ubcf5\ud558\uc9c0 \ub9c8\uc138\uc694 (DRY)","text":"<p>Blade\uc758 \uac00\uc7a5 \uac15\ub825\ud55c \uae30\ub2a5\uc740 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub808\uc774\uc544\uc6c3\uc744 \ub9cc\ub4dc\ub294 \uac83\uc785\ub2c8\ub2e4. \ubaa8\ub4e0 \ud398\uc774\uc9c0\uc5d0 \uc6f9\uc0ac\uc774\ud2b8\uc758 \ud5e4\ub354\uc640 \ud478\ud130\ub97c \ubcf5\uc0ac\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.</p> <p>1\ub2e8\uacc4: \ub9c8\uc2a4\ud130 \ub808\uc774\uc544\uc6c3(<code>layout</code>) \uc0dd\uc131</p> <p><code>resources/views/layouts/app.blade.php</code> \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uc138\uc694: <pre><code>&lt;?php\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;title&gt;\u0426\u0423\u041f - @yield('title')&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"{{ asset('css/style.css') }}\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;\uc740\ud558\uacc4 \ud568\ub300 \uc0ac\ub839\ubd80&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        @yield('content') &lt;!-- \uc5ec\uae30\uc5d0 \ud398\uc774\uc9c0\uc758 \uace0\uc720\ud55c \ub0b4\uc6a9\uc774 \ub4e4\uc5b4\uac11\ub2c8\ub2e4 --&gt;\n    &lt;/main&gt;\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command. \ubaa8\ub4e0 \uad8c\ub9ac \ubcf4\uc720.&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> -   <code>@yield('title')</code>\uacfc <code>@yield('content')</code>\ub294 \"\uc2ac\ub86f\" \ub610\ub294 \"\ud50c\ub808\uc774\uc2a4\ud640\ub354\"\uc785\ub2c8\ub2e4.</p> <p>2\ub2e8\uacc4: \ub808\uc774\uc544\uc6c3\uc744 \uc0ac\uc6a9\ud558\ub294 \uc790\uc2dd \ubdf0 \uc0dd\uc131</p> <p><code>resources/views/planets/index.blade.php</code> \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uc138\uc694: <pre><code>&lt;?php\n@extends('layouts.app') {{-- \uc6b0\ub9ac\uc758 \ub9c8\uc2a4\ud130 \ub808\uc774\uc544\uc6c3\uc744 \uc0c1\uc18d\ud569\ub2c8\ub2e4 --}}\n\n@section('title', '\ud589\uc131 \ubaa9\ub85d') {{-- 'title' \uc139\uc158\uc744 \ucc44\uc6c1\ub2c8\ub2e4 --}}\n\n@section('content') {{-- \uba54\uc778 'content' \uc139\uc158\uc744 \ucc44\uc6c1\ub2c8\ub2e4 --}}\n    &lt;h2&gt;\ub4f1\ub85d\ub41c \ud589\uc131&lt;/h2&gt;\n    &lt;p&gt;\uc774\uac83\uc740 \uc6b0\ub9ac\uac00 \uc54c\uace0 \uc788\ub294 \ubaa8\ub4e0 \ud589\uc131\uc758 \ubaa9\ub85d\uc785\ub2c8\ub2e4.&lt;/p&gt;\n    {{-- \uc5ec\uae30\uc5d0 \ud589\uc131\uc744 \ucd9c\ub825\ud558\ub294 @forelse \ubc18\ubcf5\ubb38\uc774 \uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4 --}}\n@endsection\n</code></pre></p> <p>\uc774\uc81c Laravel\uc774 <code>planets.index</code>\ub97c \ub80c\ub354\ub9c1\ud560 \ub54c, \uba3c\uc800 <code>layouts.app</code>\uc744 \uac00\uc838\uc628 \ub2e4\uc74c <code>@section</code> \uc139\uc158\uc758 \ub0b4\uc6a9\uc744 \uc0bd\uc785\ud560 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/1/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. Blade \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 \uc5b4\ub5a4 \ud655\uc7a5\uc790\ub97c \uac00\uc9d1\ub2c8\uae4c?</p>  a) .html  b) .blade.php  c) .php.blade <p>2. Blade\uc5d0\uc11c `$name` \ubcc0\uc218\ub97c \uc548\uc804\ud558\uac8c \ucd9c\ub825\ud558\ub294 \ubc29\ubc95\uc740?</p>  a)   b) {{ $name }}  c) [[$name]] <p>3. \ub9c8\uc2a4\ud130 \ub808\uc774\uc544\uc6c3\uc744 \uc0c1\uc18d\ud558\uae30 \uc704\ud574 \uc5b4\ub5a4 \ub514\ub809\ud2f0\ube0c\uac00 \uc0ac\uc6a9\ub429\ub2c8\uae4c?</p>  a) @include('layouts.app')  b) @layout('layouts.app')  c) @extends('layouts.app') <p>4. `@yield('content')` \ub514\ub809\ud2f0\ube0c\ub294 \ubb34\uc5c7\uc744 \ud569\ub2c8\uae4c?</p>  a) \ud50c\ub808\uc774\uc2a4\ud640\ub354(\ucf58\ud150\uce20 \uc0bd\uc785 \uc704\uce58)\ub97c \uc815\uc758\ud569\ub2c8\ub2e4.  b) `content.blade.php` \ud30c\uc77c\uc758 \ub0b4\uc6a9\uc744 \uc0bd\uc785\ud569\ub2c8\ub2e4.  c) \ucf58\ud150\uce20 \uc139\uc158\uc744 \uc885\ub8cc\ud569\ub2c8\ub2e4. <p>5. \ube44\uc5b4 \uc788\uc744 \uc218\ub3c4 \uc788\ub294 \ubc30\uc5f4\uc744 \ubc18\ubcf5\ud558\ub294 \ub370 \uac00\uc7a5 \uc801\ud569\ud55c \ub514\ub809\ud2f0\ube0c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) @foreach  b) @while  c) @forelse \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\ub3d9\uc801 \uc6f9 \ud398\uc774\uc9c0\ub97c \ub9cc\ub4e4\uae30 \uc704\ud55c \uac15\ub825\ud55c \ub3c4\uad6c\uc778 Blade\uc758 \uae30\ucd08\ub97c \ud559\uc2b5\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c \ub2e4\uc74c\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:</p> <ul> <li>XSS\ub85c\ubd80\ud130 \uc790\ub3d9 \ubcf4\ud638\ub418\ub294 \ub370\uc774\ud130\ub97c \ucd9c\ub825\ud569\ub2c8\ub2e4.</li> <li>\ub85c\uc9c1\uc744 \ucd94\uac00\ud558\uae30 \uc704\ud574 \ub514\ub809\ud2f0\ube0c(<code>@if</code>, <code>@forelse</code>)\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</li> <li><code>@extends</code>\uc640 <code>@yield</code>\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub808\uc774\uc544\uc6c3\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \uc6b0\ub9ac \uc6b0\uc8fc\uc120\uc758 \uc81c\uc5b4\ud310\uc744 \uc704\ud55c \"\uc124\uacc4\ub3c4\"\ub97c \uc900\ube44\ud588\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \uc6b0\ub9ac API\ub97c \uc704\ud55c \uad6c\uccb4\uc801\uc778 \"\ud328\ub110\"(\ubdf0)\uc744 \uc0dd\uc131\ud558\uace0 \uadf8 \uc704\uc5d0 \uc2e4\uc81c \ub370\uc774\ud130\ub97c \ud45c\uc2dc\ud560 \uac83\uc785\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/2/","title":"\uc81c5.2\uc7a5: API\ub97c \uc704\ud55c \uac04\ub2e8\ud55c \ubdf0 \uc0dd\uc131","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 45\ubd84</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/2/#1","title":"1. \ubaa9\ud45c: \ub370\uc774\ud130 \uc2dc\uac01\ud654","text":"<p>\uc81c2\uc7a5\uc5d0\uc11c \uc6b0\ub9ac API\ub294 JSON \ud615\uc2dd\uc73c\ub85c \ub370\uc774\ud130\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uae30\uacc4\uc5d0\ub294 \ud6cc\ub96d\ud558\uc9c0\ub9cc, \uc0ac\ub78c\ub4e4\uc740 \uc798 \uafb8\uba70\uc9c4 \uc6f9\ud398\uc774\uc9c0\uc5d0\uc11c \uc815\ubcf4\ub97c \ubcf4\ub294 \uac83\uc744 \uc120\ud638\ud569\ub2c8\ub2e4. \uc6b0\ub9ac\uc758 \ubaa9\ud45c\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ub450 \uac00\uc9c0 \ud398\uc774\uc9c0\ub97c \ub9cc\ub4dc\ub294 \uac83\uc785\ub2c8\ub2e4:</p> <ol> <li>\ubaa8\ub4e0 \ud589\uc131 \ubaa9\ub85d (<code>/planets</code>)</li> <li>\ub2e8\uc77c \ud589\uc131 \ud398\uc774\uc9c0 (<code>/planets/{id}</code>)</li> </ol> <p>\uc774\ub97c \uc704\ud574 \uc6b0\ub9ac\ub294 \"\uacbd\ub85c \u2192 \ucee8\ud2b8\ub864\ub7ec \u2192 \ubdf0\" \uc870\ud569\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>API\uc758 JSON\uc740 \uc6d0\uc2dc \ud154\ub808\uba54\ud2b8\ub9ac \ub370\uc774\ud130, \uc989 \ub2e8\uc21c\ud788 \uc22b\uc790\uc758 \ud750\ub984\uc774\ub77c\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. \uc624\ub298 \uc6b0\ub9ac\uc758 \uc784\ubb34\ub294 \uc6b0\uc8fc \uad00\uc81c \uc13c\ud130(\u0426\u0423\u041f)\uc5d0 \ub450 \uac1c\uc758 \ud654\uba74(\ub450 \uac1c\uc758 \"\ubdf0\")\uc744 \ub9cc\ub4dc\ub294 \uac83\uc785\ub2c8\ub2e4:</p> <ul> <li>\uc885\ud569 \ud654\uba74: \uc2dc\uc2a4\ud15c \ub0b4 \ubaa8\ub4e0 \uac1d\uccb4\uc758 \uc0c1\ud0dc\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4 (\ud589\uc131 \ubaa9\ub85d).</li> <li>\uc138\ubd80 \ud654\uba74: \uac1d\uccb4\ub97c \ud074\ub9ad\ud558\uba74 \ud574\ub2f9 \uac1d\uccb4\uc758 \ubaa8\ub4e0 \uc815\ubcf4\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4 (\ub2e8\uc77c \ud589\uc131 \ud398\uc774\uc9c0).</li> </ul>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/2/#2-1","title":"2. 1\ub2e8\uacc4: \uc6f9\ud398\uc774\uc9c0\uc6a9 \ucee8\ud2b8\ub864\ub7ec \uc0dd\uc131","text":"<p>\uae54\ub054\ud55c \uc544\ud0a4\ud14d\ucc98\ub97c \uc704\ud574 API \ub85c\uc9c1\uacfc \uc6f9\ud398\uc774\uc9c0 \ub85c\uc9c1\uc744 \ud558\ub098\uc758 \ucee8\ud2b8\ub864\ub7ec\uc5d0 \ud63c\ud569\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Blade \ubdf0\ub97c \ud45c\uc2dc\ud558\uae30 \uc704\ud55c \uc0c8\ub85c\uc6b4 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0dd\uc131\ud558\uaca0\uc2b5\ub2c8\ub2e4.</p> <p>\ud130\ubbf8\ub110\uc5d0\uc11c \uc2e4\ud589\ud558\uc138\uc694: <pre><code>php artisan make:controller Web/PlanetPageController\n</code></pre> API \ucee8\ud2b8\ub864\ub7ec\uc640 \ubd84\ub9ac\ud558\uae30 \uc704\ud574 <code>Web</code> \ud558\uc704 \ud3f4\ub354\uc5d0 \uc0dd\uc131\ud569\ub2c8\ub2e4.</p> <p>\uc0dd\uc131\ub41c \ud30c\uc77c <code>app/Http/Controllers/Web/PlanetPageController.php</code>\uc744(\ub97c) \uc5ec\uc138\uc694.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/2/#2","title":"2\ub2e8\uacc4: \ubaa8\ub4e0 \ud589\uc131 \ubaa9\ub85d \ud398\uc774\uc9c0","text":"<p>1. \ucee8\ud2b8\ub864\ub7ec\uc5d0 \uba54\uc11c\ub4dc \uc0dd\uc131: <code>PlanetPageController</code>\uc5d0 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ubaa8\ub4e0 \ud589\uc131\uc744 \uac00\uc838\uc640 \ubdf0\ub85c \uc804\ub2ec\ud558\ub294 <code>index</code> \uba54\uc11c\ub4dc\ub97c \ucd94\uac00\ud558\uc138\uc694. <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers\\Web;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Planet; // \ubaa8\ub378\uc744 \uc784\ud3ec\ud2b8\ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694\n\nclass PlanetPageController extends Controller\n{\n    /**\n     * \ubaa8\ub4e0 \ud589\uc131 \ubaa9\ub85d \ud398\uc774\uc9c0\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.\n     */\n    public function index()\n    {\n        // 1. DB\uc5d0\uc11c \ubaa8\ub4e0 \ud589\uc131\uc744 \uac00\uc838\uc635\ub2c8\ub2e4\n        $planets = Planet::all();\n\n        // 2. \ubdf0\ub97c \ubc18\ud658\ud558\uace0 \ub370\uc774\ud130\ub97c \uc804\ub2ec\ud569\ub2c8\ub2e4\n        return view('planets.index', ['planets' =&gt; $planets]);\n    }\n}\n</code></pre></p> <p>2. Blade \ubdf0 \uc0dd\uc131: <code>resources/views/planets/index.blade.php</code> \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uc138\uc694. \uc9c0\ub09c \uc7a5\uc5d0\uc11c \uc0dd\uc131\ud55c \ub808\uc774\uc544\uc6c3\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Planets&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n        }\n        .container {\n            max-width: 960px;\n            margin: 0 auto;\n        }\n        h2 {\n            color: #1a202c;\n        }\n        hr {\n            border: none;\n            border-top: 1px solid #e2e8f0;\n            margin: 1.5em 0;\n        }\n        .planet-list {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n            gap: 1.5em;\n        }\n        .planet-card {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 1.5em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n            transition: transform 0.2s;\n        }\n        .planet-card:hover {\n            transform: translateY(-5px);\n        }\n        .planet-card h3 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-card p {\n            margin-bottom: 0.5em;\n            color: #4a5568;\n        }\n        .planet-card a {\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .planet-card a:hover {\n            text-decoration: underline;\n        }\n        .no-planets {\n            color: #718096;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h2&gt;\uc54c\ub824\uc9c4 \ubaa8\ub4e0 \ud589\uc131 \ubaa9\ub85d&lt;/h2&gt;\n        &lt;hr&gt;\n        &lt;div class=\"planet-list\"&gt;\n            @forelse($planets as $planet)\n                &lt;div class=\"planet-card\"&gt;\n                    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n                    &lt;p&gt;\ud0dc\uc591\uacc4: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n                    &lt;p&gt;\uc9c1\uacbd: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n                    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;\ub354 \uc54c\uc544\ubcf4\uae30 &amp;rarr;&lt;/a&gt;\n                &lt;/div&gt;\n            @empty\n                &lt;p class=\"no-planets\"&gt;\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ud589\uc131\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \uc2dc\ub354\ub97c \uc2e4\ud589\ud574\uc8fc\uc138\uc694.&lt;/p&gt;\n            @endforelse\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li><code>number_format(...)</code>\uc740 \uc22b\uc790\ub97c \ubcf4\uae30 \uc88b\uac8c \uc11c\uc2dd \uc9c0\uc815\ud558\ub294 \uc77c\ubc18\uc801\uc778 PHP \ud568\uc218\uc785\ub2c8\ub2e4. Blade\uc5d0\uc11c \uc9c1\uc811 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul> <p>3. <code>routes/web.php</code>\uc5d0 \uacbd\ub85c \uc0dd\uc131: <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// ...\n\nRoute::get('/planets', [PlanetPageController::class, 'index']);\n</code></pre> \uc774\uc81c \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c <code>/planets</code> \uc8fc\uc18c\ub85c \uc774\ub3d9\ud558\uba74 \ud589\uc131 \ubaa9\ub85d \ud398\uc774\uc9c0\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4!</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/2/#4-3","title":"4. 3\ub2e8\uacc4: \ub2e8\uc77c \ud589\uc131 \ud398\uc774\uc9c0","text":"<p>1. \ucee8\ud2b8\ub864\ub7ec\uc5d0 \uba54\uc11c\ub4dc \uc0dd\uc131:</p> <p><code>PlanetPageController</code>\uc5d0 <code>show</code> \uba54\uc11c\ub4dc\ub97c \ucd94\uac00\ud558\uaca0\uc2b5\ub2c8\ub2e4. \uacbd\ub85c \ubaa8\ub378 \ubc14\uc778\ub529 \ub355\ubd84\uc5d0 Laravel\uc740 ID\ub85c \ud589\uc131\uc744 \uc790\ub3d9\uc73c\ub85c \ucc3e\uc544 \uba54\uc11c\ub4dc\ub85c \uc804\ub2ec\ud569\ub2c8\ub2e4.</p> <pre><code>&lt;?php\n// PlanetPageController \ud074\ub798\uc2a4 \ub0b4\ubd80\n/**\n * \ud2b9\uc815 \ud589\uc131\uc758 \ud398\uc774\uc9c0\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.\n */\npublic function show(Planet $planet)\n{\n    // Laravel\uc774 \uc774\ubbf8 \uc6b0\ub9ac\ub97c \uc704\ud574 \ud589\uc131\uc744 \ucc3e\uc558\uc2b5\ub2c8\ub2e4.\n    // \ucc3e\uc744 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc790\ub3d9\uc73c\ub85c 404 \uc624\ub958\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.\n\n    return view('planets.show', ['planet' =&gt; $planet]);\n}\n</code></pre> <p>2. Blade \ubdf0 \uc0dd\uc131:</p> <p><code>resources/views/planets/show.blade.php</code> \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uc138\uc694.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;{{ $planet-&gt;name }}&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n        }\n        .container {\n            max-width: 600px;\n            width: 100%;\n        }\n        .planet-detail {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 2em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n        }\n        .planet-detail h1 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-detail p {\n            margin-bottom: 1em;\n            color: #4a5568;\n            font-size: 1.1em;\n        }\n        .back-link {\n            display: inline-block;\n            margin-top: 1.5em;\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .back-link:hover {\n            text-decoration: underline;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"planet-detail\"&gt;\n            @if($planet-&gt;image_url)\n                &lt;img src=\"{{ $planet-&gt;image_url }}\" alt=\"{{ $planet-&gt;name }}\uc758 \uc774\ubbf8\uc9c0\" style=\"max-width: 100%; height: auto; border-radius: 0.5em; margin-bottom: 1em;\"&gt;\n            @endif\n            &lt;h1&gt;{{ $planet-&gt;name }}&lt;/h1&gt;\n            @if($planet-&gt;description)\n                &lt;p&gt;{{ $planet-&gt;description }}&lt;/p&gt;\n            @endif\n            &lt;p&gt;&lt;strong&gt;\ud0dc\uc591\uacc4:&lt;/strong&gt; {{ $planet-&gt;solar_system }}&lt;/p&gt;\n            &lt;p&gt;&lt;strong&gt;\uc9c1\uacbd:&lt;/strong&gt; {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n            &lt;a href=\"/planets\" class=\"back-link\"&gt;&amp;larr; \ud589\uc131 \ubaa9\ub85d\uc73c\ub85c \ub3cc\uc544\uac00\uae30&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>3. <code>routes/web.php</code>\uc5d0 \uacbd\ub85c \uc0dd\uc131: <pre><code>// \uc774 \uacbd\ub85c\ub97c /planets \uacbd\ub85c \ub4a4\uc5d0 \ucd94\uac00\ud558\uc138\uc694\nRoute::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n</code></pre> -   <code>{planet}</code> \ub9e4\uac1c\ubcc0\uc218 \uc774\ub984\uc740 \uacbd\ub85c \ubaa8\ub378 \ubc14\uc778\ub529\uc774 \uc62c\ubc14\ub974\uac8c \uc791\ub3d9\ud558\ub824\uba74 \ucee8\ud2b8\ub864\ub7ec \uba54\uc11c\ub4dc\uc758 \ubcc0\uc218 \uc774\ub984(<code>show(Planet $planet)</code>)\uacfc \uc77c\uce58\ud574\uc57c \ud569\ub2c8\ub2e4.</p> <p>\uc774\uc81c \ubaa9\ub85d \ud398\uc774\uc9c0\uc5d0\uc11c \"\ub354 \uc54c\uc544\ubcf4\uae30\" \ub9c1\ud06c\ub97c \ud074\ub9ad\ud558\uba74 \ud2b9\uc815 \ud589\uc131\uc758 \uc0c1\uc138 \ud398\uc774\uc9c0\ub85c \uc774\ub3d9\ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/2/#_1","title":"\ud655\uc778 \ud034\uc988","text":"<p>1. API \ubc0f \uc6f9 \ud398\uc774\uc9c0 \ub85c\uc9c1\uc744 \ubd84\ub9ac\ud558\ub294 \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) \ubaa8\ub4e0 \uac83\uc5d0 \ud558\ub098\uc758 \ucee8\ud2b8\ub864\ub7ec \uc0ac\uc6a9  b) \ubcc4\ub3c4\uc758 \ucee8\ud2b8\ub864\ub7ec \uc0dd\uc131 (\uc608: `Web` \ubc0f `Api` \ud3f4\ub354\uc5d0)  c) \ubaa8\ub4e0 \ub85c\uc9c1\uc744 \uacbd\ub85c \ud30c\uc77c\uc5d0 \ubc30\uce58 <p>2. return view('planets.index', ['planets' =&gt; $planets]);\ub294 \ubb34\uc5c7\uc744 \ud569\ub2c8\uae4c?</p>  a) \ud589\uc131 \ub370\uc774\ud130\uac00 \ud3ec\ud568\ub41c JSON \ubc30\uc5f4 \ubc18\ud658  b) resources/views/planets/index.blade.php \ud30c\uc77c\uc744 \ub80c\ub354\ub9c1\ud558\uace0 `$planets` \ubcc0\uc218\ub97c \uc804\ub2ec  c) /planets/index URL\ub85c \ub9ac\ub2e4\uc774\ub809\ud2b8 <p>3. `show(Planet $planet)` \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c Route Model Binding\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) Laravel\uc774 \uad6c\uc131\uc5d0\uc11c \uacbd\ub85c\ub97c \ubaa8\ub378\uc5d0 \uc218\ub3d9\uc73c\ub85c \ubc14\uc778\ub529  b) Laravel\uc774 URL (`{planet}`)\uc758 \ub9e4\uac1c\ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec DB\uc5d0\uc11c `Planet` \ub808\ucf54\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ucc3e\uc74c  c) Laravel\uc774 \ud589\uc131\uc744 \ucc3e\uc9c0 \ubabb\ud558\uba74 \uc0c8 \ud589\uc131\uc744 \uc0dd\uc131 <p>4. Blade\uc5d0\uc11c `created_at` \ud544\ub4dc\uc758 \ub0a0\uc9dc\ub97c \uc5b4\ub5bb\uac8c \ud3ec\ub9f7\ud560 \uc218 \uc788\uc2b5\ub2c8\uae4c?</p>  a) {{ $planet-&gt;created_at-&gt;format('Y-m-d') }}  b) {{ format_date($planet-&gt;created_at) }}  c) \ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c\ub9cc \uac00\ub2a5 <p>5. \uacbd\ub85c\uc5d0 `/posts/{post}`\uac00 \uc9c0\uc815\ub41c \uacbd\uc6b0, Route Model Binding\uc774 \uc791\ub3d9\ud558\ub824\uba74 \ucee8\ud2b8\ub864\ub7ec\uc758 \uba54\uc11c\ub4dc \uc2dc\uadf8\ub2c8\ucc98\uac00 \uc5b4\ub5bb\uac8c \ub418\uc5b4\uc57c \ud569\ub2c8\uae4c?</p>  a) public function show(Post $post)  b) public function show(Post $p)  c) public function show($post) \ud655\uc778 <p>\ud83d\ude80 \ucc55\ud130 \uc694\uc57d:</p> <p>Laravel MVC \uc544\ud0a4\ud14d\ucc98\ub97c \uc0ac\uc6a9\ud558\uc5ec API\uc758 \"\uc9c4\uc5f4\uc7a5\"\uc744 \uc131\uacf5\uc801\uc73c\ub85c \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\uc81c \ub2e4\uc74c\uc744 \uac16\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4:</p> <ul> <li>\uc6f9 \ud398\uc774\uc9c0 \ub85c\uc9c1\uc744 \uc704\ud55c \ubcc4\ub3c4\uc758 \ucee8\ud2b8\ub864\ub7ec.</li> <li>DB\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub294 \ubaa8\ub4e0 \ud589\uc131 \ubaa9\ub85d\uc774 \ud3ec\ud568\ub41c \ub3d9\uc801 \ud398\uc774\uc9c0.</li> <li>Route Model Binding\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac01 \ud589\uc131\uc5d0 \ub300\ud55c \uc0c1\uc138 \ud398\uc774\uc9c0.</li> <li>\uc774\ub7ec\ud55c \ud398\uc774\uc9c0\uc5d0 \uc561\uc138\uc2a4\ud558\uae30 \uc704\ud55c <code>routes/web.php</code>\uc758 \ub450 \uc6f9 \uacbd\ub85c.</li> </ul> <p>\uc6d0\uc2dc \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc774\ud574\ud558\uae30 \uc27d\uace0 \uc720\uc6a9\ud55c \uc815\ubcf4\ub85c \ubcc0\ud658\ud588\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ucc55\ud130\uc5d0\uc11c\ub294 \ud398\uc774\uc9c0\ub97c \ub2e4\uc2dc \ub85c\ub4dc\ud558\uc9c0 \uc54a\uace0 API\uc640 \uc0c1\ud638 \uc791\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d Blade \ubdf0\uc5d0 JavaScript\ub97c \ub0b4\uc7a5\ud558\uc5ec \uc0c1\ud638 \uc791\uc6a9\uc744 \ucd94\uac00\ud560 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/3/","title":"\uc81c5.3\uc7a5: Laravel \ubdf0\uc5d0 JavaScript \uc784\ubca0\ub529","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 50\ubd84</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/3/#1-javascript","title":"1. \uc6f9\uc5d0\uc11c JavaScript\ub97c \ub2e4\ub8e8\ub294 \ub450 \uac00\uc9c0 \uc811\uadfc \ubc29\uc2dd","text":"<p>\uc9c0\uae08\uae4c\uc9c0 \uc6b0\ub9ac\ub294 \uc11c\ubc84 \uce21 \ub80c\ub354\ub9c1(SSR)\uc73c\ub85c \uc791\uc5c5\ud588\uc2b5\ub2c8\ub2e4. \uc11c\ubc84(Laravel)\uac00 \uc644\uc131\ub41c HTML\uc744 \uc0dd\uc131(Blade\ub97c \ud1b5\ud574)\ud558\uc5ec \ube0c\ub77c\uc6b0\uc800\ub85c \uc804\uc1a1\ud558\ub294 \ubc29\uc2dd\uc785\ub2c8\ub2e4. \uc774\ub294 SEO\uc640 \ube60\ub978 \ucd08\uae30 \ub85c\ub529\uc5d0 \ub9e4\uc6b0 \uc88b\uc2b5\ub2c8\ub2e4.</p> <p>\uc774\uc81c \ud074\ub77c\uc774\uc5b8\ud2b8 \uce21 \uc0c1\ud638\uc791\uc6a9\uc744 \ucd94\uac00\ud560 \uac83\uc785\ub2c8\ub2e4. \ube0c\ub77c\uc6b0\uc800\ub294 \ud398\uc774\uc9c0\ub97c \ub85c\ub4dc\ud55c \ud6c4 JavaScript \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\uc5ec \ub2e4\uc74c\uc744 \uc218\ud589\ud569\ub2c8\ub2e4:</p> <ul> <li>\ud398\uc774\uc9c0\ub97c \uc0c8\ub85c\uace0\uce68\ud558\uc9c0 \uc54a\uace0 API\uc5d0 \uc694\uccad\uc744 \ubcf4\ub0c5\ub2c8\ub2e4.</li> <li>\ud398\uc774\uc9c0\uc758 \ud2b9\uc815 \ubd80\ubd84\uc744 \ub3d9\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4(\uc608: \ubaa9\ub85d\uc5d0 \uc0c8 \ud589\uc131 \ucd94\uac00).</li> <li>\uc54c\ub9bc \ubc0f \ubaa8\ub2ec \ucc3d\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>SSR\uc740 \uc6b0\uc8fc \ube44\ud589 \uad00\uc81c \uc13c\ud130(\uc11c\ubc84)\uc5d0\uc11c \uc778\uc1c4\ub41c \uc804\uccb4 \uc131\uacc4 \uc9c0\ub3c4\ub97c \ubc1b\ub294 \uac83\uc774\ub77c\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc778\uc1c4 \uc2dc\uc810\uc758 \ubaa8\ub4e0 \uac1c\uccb4\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ud074\ub77c\uc774\uc5b8\ud2b8 \uce21 JS\ub294 \uc704\uc131(API)\uacfc \uc2e4\uc2dc\uac04\uc73c\ub85c \ud1b5\uc2e0\ud558\uba70, \uc6b0\uc8fc \ube44\ud589 \uad00\uc81c \uc13c\ud130\uc5d0\uc11c \uc0c8\ub85c\uc6b4 \uc885\uc774 \uc9c0\ub3c4\ub97c \uc694\uccad\ud560 \ud544\uc694 \uc5c6\uc774 \uc9c0\ub3c4\uc0c1\uc758 \uac1d\uccb4 \uc704\uce58\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac1c\uc778 \ud0dc\ube14\ub9bf(\ube0c\ub77c\uc6b0\uc800)\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/3/#2-js","title":"2. JS \ucf54\ub4dc\ub97c \uc800\uc7a5\ud558\uace0 \uc5f0\uacb0\ud558\ub294 \ubc29\ubc95","text":"<p>\uc774\ubbf8 \ud655\uc778\ud588\ub4ef\uc774, \ubaa8\ub4e0 \uacf5\uac1c \uc790\uc0b0(CSS, JS, \uc774\ubbf8\uc9c0)\uc740 <code>public</code> \ud3f4\ub354\uc5d0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.</p> <p>\uc62c\ubc14\ub978 \uad6c\uc870:</p> <ol> <li>\uc6d0\ubcf8 \ud30c\uc77c: \ubaa8\ub4e0 \uc8fc\uc694 JS \ucf54\ub4dc\ub294 <code>public/js/</code>\uc5d0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, <code>public/js/planets.js</code>\uc640 \uac19\uc774\uc694.</li> <li>Blade\uc5d0\uc11c \uc5f0\uacb0: <code>asset()</code> \ud5ec\ud37c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc62c\ubc14\ub978 URL\uc744 \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624.</li> </ol> <p><code>layouts/app.blade.php</code> \ub808\uc774\uc544\uc6c3\uc5d0\uc11c \uc5f0\uacb0 \uc608\uc2dc: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    {{-- ... --}}\n&lt;/head&gt;\n&lt;body&gt;\n    {{-- ... \ud5e4\ub354 \ubc0f \uba54\uc778 ... --}}\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command.&lt;/p&gt;\n    &lt;/footer&gt;\n\n    {{-- \uc2a4\ud06c\ub9bd\ud2b8\ub294 \ud398\uc774\uc9c0 \ub80c\ub354\ub9c1 \uc18d\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 body \ud0dc\uadf8 \ub05d\uc5d0 \uc5f0\uacb0\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4 --}}\n    &lt;script src=\"{{ asset('js/planets.js') }}\"&gt;&lt;/script&gt;\n    @stack('scripts') {{-- \ud2b9\uc815 \ud398\uc774\uc9c0\uc758 \uc2a4\ud06c\ub9bd\ud2b8 \"\uc2ac\ub86f\" \uc0dd\uc131 --}}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <ul> <li><code>@stack('scripts')</code>\ub294 \uac15\ub825\ud55c Blade \uc9c0\uc2dc\ubb38\uc785\ub2c8\ub2e4. \uc774\ub294 \ud558\uc704 \ubdf0\uac00 \uc790\uc2e0\ub9cc\uc758 JS \ucf54\ub4dc\ub97c \uc774 \uc704\uce58\uc5d0 \"\ud478\uc2dc\"\ud560 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub294 \ud2b9\uc815 \ud398\uc774\uc9c0\uc5d0\ub294 \uace0\uc720\ud55c \uc2a4\ud06c\ub9bd\ud2b8\uac00 \ud544\uc694\ud558\uace0 \ub2e4\ub978 \ud398\uc774\uc9c0\uc5d0\ub294 \ud544\uc694\ud558\uc9c0 \uc54a\uc744 \ub54c \uc720\uc6a9\ud569\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/3/#3","title":"3. \uc608\uc2dc: \ud655\uc778\uc774 \ud544\uc694\ud55c \"\uc0ad\uc81c\" \ubc84\ud2bc","text":"<p>\ud589\uc131 \ubaa9\ub85d \ud398\uc774\uc9c0(<code>planets/index.blade.php</code>)\uc5d0 JavaScript\uc640 Fetch API\ub97c \ud1b5\ud574 \uc791\ub3d9\ud558\ub294 \uac01 \ud589\uc131\uc5d0 \ub300\ud55c \"\uc0ad\uc81c\" \ubc84\ud2bc\uc744 \ucd94\uac00\ud574 \ubd05\uc2dc\ub2e4.</p> <p>1\ub2e8\uacc4: <code>resources/views/planets/index.blade.php</code>\uc5d0 \ubc84\ud2bc \ucd94\uac00</p> <p>data-\uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud589\uc131 \uce74\ub4dc\uc5d0 \ubc84\ud2bc\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4: <pre><code>{{-- ... @forelse \ub8e8\ud504 \ub0b4\ubd80 ... --}}\n&lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n    &lt;p&gt;\ud0dc\uc591\uacc4: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n    &lt;p&gt;\uc9c1\uacbd: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;\ub354 \uc54c\uc544\ubcf4\uae30 &amp;rarr;&lt;/a&gt;\n    &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"/api/planets/{{ $planet-&gt;id }}\"&gt;\n        \ud3d0\uae30\n    &lt;/button&gt;\n&lt;/div&gt;\n&lt;!-- ... \ub2eb\ud788\ub294 body \ud0dc\uadf8 \uc55e ... --&gt;\n&lt;script src=\"{{ asset('js/planets.js') }}\" defer&gt;&lt;/script&gt;\n</code></pre></p> <ul> <li><code>id=\"planet-card-{{ $planet-&gt;id }}\"</code> \u2014 \uc804\uccb4 \uce74\ub4dc\uc5d0 \ub300\ud55c \uace0\uc720 ID\ub85c, DOM\uc5d0\uc11c \uc774 \uce74\ub4dc\ub97c \uc81c\uac70\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4.</li> <li><code>data-id</code> \ubc0f <code>data-url</code> \u2014 PHP (Blade)\uc5d0\uc11c JavaScript\ub85c \ub370\uc774\ud130\ub97c \uc804\ub2ec\ud558\ub294 \ud3b8\ub9ac\ud55c \ubc29\ubc95\uc785\ub2c8\ub2e4.</li> </ul> <p>2\ub2e8\uacc4: JavaScript \ub85c\uc9c1 \uc791\uc131</p> <p><code>public/js/planets.js</code> \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uace0 \ub2e4\uc74c \ucf54\ub4dc\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4: <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    // \ubaa8\ub4e0 \"\uc0ad\uc81c\" \ubc84\ud2bc \ucc3e\uae30\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            const planetId = event.target.dataset.id;\n            const apiUrl = event.target.dataset.url;\n\n            if (!confirm(`ID ${planetId}\uc758 \ud589\uc131\uc744 \ud3d0\uae30\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c? \uc774 \uc791\uc5c5\uc740 \ub418\ub3cc\ub9b4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.`)) {\n                return; // \uc0ac\uc6a9\uc790\uac00 \"\ucde8\uc18c\"\ub97c \ub20c\ub800\uc2b5\ub2c8\ub2e4\n            }\n\n            try {\n                // API\uc5d0 DELETE \uc694\uccad \ubcf4\ub0b4\uae30\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        // \ub098\uc911\uc5d0 \uc5ec\uae30\uc5d0 CSRF \ud1a0\ud070\uc744 \ucd94\uac00\ud560 \uac83\uc785\ub2c8\ub2e4\n                    }\n                });\n\n                if (response.status === 204) { // 204 No Content - \uc131\uacf5\uc801\uc778 \uc0ad\uc81c\n                    // \ud398\uc774\uc9c0\uc5d0\uc11c \ud589\uc131 \uce74\ub4dc \uc81c\uac70\n                    const cardToRemove = document.getElementById(`planet-card-${planetId}`);\n                    if (cardToRemove) {\n                        cardToRemove.remove();\n                    }\n                    alert('\ud589\uc131\uc774 \uc131\uacf5\uc801\uc73c\ub85c \ud3d0\uae30\ub418\uc5c8\uc2b5\ub2c8\ub2e4.');\n                } else {\n                    // API\uac00 \uc624\ub958\ub97c \ubc18\ud658\ud55c \uacbd\uc6b0\n                    const errorData = await response.json();\n                    alert(`\uc624\ub958: ${errorData.message || '\ud589\uc131\uc744 \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc5c8\uc2b5\ub2c8\ub2e4.'}`);\n                }\n            } catch (error) {\n                console.error('\uc694\uccad \uc804\uc1a1 \uc911 \uc624\ub958 \ubc1c\uc0dd:', error);\n                alert('\ub124\ud2b8\uc6cc\ud06c \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \uc2dc\ub3c4\ud574 \uc8fc\uc138\uc694.');\n            }\n        });\n    });\n});\n</code></pre></p> <p>\uc774\uc81c <code>/planets</code> \ud398\uc774\uc9c0\ub97c \uc0c8\ub85c\uace0\uce68\ud558\uba74 \"\ud3d0\uae30\" \ubc84\ud2bc\uc774 \ub098\ud0c0\ub098\uace0, \uc774 \ubc84\ud2bc\uc744 \ud074\ub9ad\ud558\uba74 JavaScript \ucf54\ub4dc\uac00 \uc2e4\ud589\ub429\ub2c8\ub2e4!</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/3/#4-blade-javascript","title":"4. Blade\uc5d0\uc11c JavaScript\ub85c \ub370\uc774\ud130 \uc804\ub2ec\ud558\uae30","text":"<p>\ub54c\ub85c\ub294 \ub2e8\uc21c\ud788 \ubb38\uc790\uc5f4\uc774 \uc544\ub2c8\ub77c \uc804\uccb4 \ubc30\uc5f4 \ub610\ub294 \uac1d\uccb4\ub97c JS\ub85c \uc804\ub2ec\ud574\uc57c \ud560 \ub54c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\uc798\ubabb\ub41c \ubc29\ubc95 (\ucde8\uc57d): <pre><code>let planets = {{ $planets }}; // \uc774\ub294 \uad6c\ubb38 \uc624\ub958\ub97c \uc720\ubc1c\ud558\uace0 \uc548\uc804\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4\n</code></pre></p> <p>\uc62c\ubc14\ub978 \ubc29\ubc95 (JSON\uc744 \ud1b5\ud574): <code>@json</code> \uc9c0\uc2dc\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. \uc774 \uc9c0\uc2dc\uc5b4\ub294 PHP \ubc30\uc5f4/\uac1d\uccb4\ub97c \uc720\ud6a8\ud55c JSON \uac1d\uccb4\ub85c \uc548\uc804\ud558\uac8c \ubcc0\ud658\ud569\ub2c8\ub2e4.</p> <p><code>planets/index.blade.php</code> \uc608\uc2dc: <pre><code>@extends('layouts.app')\n{{-- ... --}}\n@section('content')\n    {{-- ... --}}\n@endsection\n\n@push('scripts') {{-- \uc6b0\ub9ac \uc2a4\ud06c\ub9bd\ud2b8\ub97c \ub808\uc774\uc544\uc6c3\uc758 @stack('scripts') \uc2ac\ub86f\uc5d0 \"\ud478\uc2dc\"\ud569\ub2c8\ub2e4 --}}\n&lt;script&gt;\n    // Laravel\uc740 $planets \uceec\ub809\uc158\uc744 JSON \ubc30\uc5f4\ub85c \uc548\uc804\ud558\uac8c \ubcc0\ud658\ud569\ub2c8\ub2e4\n    const planetsData = @json($planets);\n\n    // \uc774\uc81c JS\uc5d0\uc11c \uc774 \ubc30\uc5f4\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4\n    console.log('Blade\uc5d0\uc11c \uc804\ub2ec\ub41c \ud589\uc131 \ub370\uc774\ud130:', planetsData);\n    alert(`${planetsData.length}\uac1c\uc758 \ud589\uc131\uc774 \ub85c\ub4dc\ub418\uc5c8\uc2b5\ub2c8\ub2e4!`);\n&lt;/script&gt;\n@endpush\n</code></pre></p> <ul> <li><code>@push('scripts')</code>\ub294 <code>layouts/app.blade.php</code>\uc758 <code>@stack('scripts')</code> \ub0b4\ubd80\uc5d0 \ub0b4\uc6a9\uc744 \ubc30\uce58\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc2a4\ud06c\ub9bd\ud2b8\uac00 \uc2e4\uc81c\ub85c \ud544\uc694\ud55c \ud398\uc774\uc9c0\uc5d0\ub9cc \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/3/#_1","title":"\ud655\uc778\uc744 \uc704\ud55c \ud034\uc988","text":"<p>1. Laravel \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uacf5\uac1c JS \ubc0f CSS \ud30c\uc77c\uc740 \uc5b4\ub514\uc5d0 \uc800\uc7a5\ub418\uc5b4\uc57c \ud569\ub2c8\uae4c?</p>  a) resources/js  b) storage/app/public  c) public/ <p>2. \uc790\uc0b0(JS, CSS)\uc758 \uc62c\ubc14\ub978 URL \uc0dd\uc131\uc744 \uc704\ud574 \uc5b4\ub5a4 Blade \ud5ec\ud37c\uac00 \uc0ac\uc6a9\ub429\ub2c8\uae4c?</p>  a) url()  b) asset()  c) public_path() <p>3. `@push('scripts')` / `@stack('scripts')` \uc9c0\uc2dc\ubb38 \uc30d\uc740 \ubb34\uc5c7\uc744 \ud569\ub2c8\uae4c?</p>  a) \ud558\uc704 \ubdf0\uac00 \uc790\uc2e0\ub9cc\uc758 JS \ucf54\ub4dc\ub97c \ubd80\ubaa8 \ub808\uc774\uc544\uc6c3\uc758 \ud2b9\uc815 \uc704\uce58\uc5d0 \ucd94\uac00\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4  b) \ubaa8\ub4e0 JS \ud30c\uc77c\uc744 \ud558\ub098\ub85c \ubcd1\ud569\ud569\ub2c8\ub2e4  c) JS \ucf54\ub4dc\ub97c \uc11c\ubc84\ub85c \ubcf4\ub0c5\ub2c8\ub2e4 <p>4. Blade\uc5d0\uc11c PHP \ubc30\uc5f4 `$data`\ub97c JavaScript\ub85c \uc548\uc804\ud558\uac8c \uc804\ub2ec\ud558\ub294 \ubc29\ubc95\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) let jsData = {{ $data }};  b) let jsData = '@php echo json_encode($data); @endphp';  c) let jsData = @json($data); <p>5. JS \uc2a4\ud06c\ub9bd\ud2b8\uac00 body \ud0dc\uadf8 \ub05d\uc5d0 \uc5f0\uacb0\ub418\ub294 \uac83\uc774 \uad8c\uc7a5\ub418\ub294 \uc774\uc720\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) \ud398\uc774\uc9c0\uc758 \uc8fc\uc694 HTML \ucf58\ud150\uce20 \ub80c\ub354\ub9c1\uc744 \ucc28\ub2e8\ud558\uc9c0 \uc54a\uae30 \uc704\ud574  b) \uc774\ub294 HTML5 \ud45c\uc900 \uc694\uad6c \uc0ac\ud56d\uc785\ub2c8\ub2e4  c) \uc774\ub807\uac8c \ud558\uba74 \uc2a4\ud06c\ub9bd\ud2b8\uac00 \ub354 \ube60\ub974\uac8c \uc2e4\ud589\ub429\ub2c8\ub2e4 \ud655\uc778 <p>\ud83d\ude80 \ucc55\ud130 \uc694\uc57d:</p> <p>\ub2f9\uc2e0\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub85c\uc9c1\uc744 \ucd94\uac00\ud558\uc5ec \uc815\uc801\uc778 Blade \ud398\uc774\uc9c0\uc5d0 \uc0dd\uba85\uc744 \ubd88\uc5b4\ub123\ub294 \ubc29\ubc95\uc744 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4. \ud575\uc2ec \uae30\uc220:</p> <ul> <li>Laravel \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c JS \ud30c\uc77c\uc744 \uc62c\ubc14\ub974\uac8c \uad6c\uc131\ud558\uace0 \uc5f0\uacb0\ud558\ub294 \ubc29\ubc95.</li> <li>HTML\uc5d0\uc11c JS\ub85c \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud558\uae30 \uc704\ud574 <code>data-*</code> \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95.</li> <li>\ud398\uc774\uc9c0\ub97c \uc0c8\ub85c \uace0\uce58\uc9c0 \uc54a\uace0 Fetch\ub97c \uc0ac\uc6a9\ud558\uc5ec API\uc640 \ub3d9\uc801\uc73c\ub85c \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 \ubc29\ubc95.</li> <li><code>@json</code> \uc9c0\uc2dc\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc5ec PHP \ubcc0\uc218\ub97c JavaScript\ub85c \uc548\uc804\ud558\uac8c \uc804\uc1a1\ud558\ub294 \ubc29\ubc95.</li> <li><code>@push</code> \ubc0f <code>@stack</code>\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uad6c\uc131\ud558\ub294 \ubc29\ubc95.</li> </ul> <p>\ub2f9\uc2e0\uc758 \"\uc81c\uc5b4\ud310\"\uc774 \uc774\uc81c \uc0c1\ud638\uc791\uc6a9 \uac00\ub2a5\ud574\uc84c\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc9c0\uae08 \uc6b0\ub9ac\uc758 \ubcc0\uacbd \uc694\uccad\ub4e4(POST, PUT, DELETE)\uc740 \ucde8\uc57d\ud569\ub2c8\ub2e4. \ub2e4\uc74c \ucc55\ud130\uc5d0\uc11c \uc6b0\ub9ac\ub294 \uac00\uc7a5 \uc911\uc694\ud55c \ubcf4\uc548 \uba54\ucee4\ub2c8\uc998\uc778 CSRF \ud1a0\ud070\uc744 \ucd94\uac00\ud560 \uac83\uc785\ub2c8\ub2e4. ```</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/4/","title":"\uc81c5.4\uc7a5: CSRF \ud1a0\ud070 \uc791\uc5c5","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 30\ubd84</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/4/#1-csrf","title":"1. CSRF \uacf5\uaca9\uc774\ub780 \ubb34\uc5c7\uc778\uac00? \ub2f9\uc2e0\uc758 \ud568\uc120 '\ub0a9\uce58'","text":"<p>\ub2f9\uc2e0\uc774 \uc6b0\uc8fc \ud568\ub300(<code>space-api.test</code>) \uc81c\uc5b4\ud310\uc5d0 \ub85c\uadf8\uc778\ub418\uc5b4 \uc788\ub2e4\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. \uc606 \ud0ed\uc5d0\uc11c \uace0\uc591\uc774 \uc0ac\uc9c4\uc774 \uc788\ub294 \ubb34\ud574\ud55c \uc6f9\uc0ac\uc774\ud2b8(<code>evil-cats.com</code>)\ub97c \uc5fd\ub2c8\ub2e4. \uc774 \uc6f9\uc0ac\uc774\ud2b8\uc5d0\ub294 \ub2f9\uc2e0\uc758 \uc6f9\uc0ac\uc774\ud2b8 \uc8fc\uc18c\uc778 <code>POST /api/planets/1/delete</code>\ub85c \uc790\ub3d9\uc73c\ub85c \uc694\uccad\uc744 \ubcf4\ub0b4\ub294 \uc228\uaca8\uc9c4 \uc591\uc2dd\uc774 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ub2f9\uc2e0\uc774 \uc774\ubbf8 <code>space-api.test</code>\uc5d0 \uc778\uc99d\ub418\uc5b4 \uc788\uc73c\ubbc0\ub85c, \ub2f9\uc2e0\uc758 \ube0c\ub77c\uc6b0\uc800\ub294 \uc774 \uc694\uccad\uc5d0 \ub2f9\uc2e0\uc758 \ubaa8\ub4e0 \ucfe0\ud0a4\ub97c \uce5c\uc808\ud558\uac8c \ucca8\ubd80\ud560 \uac83\uc785\ub2c8\ub2e4. Laravel \uc11c\ubc84\ub294 \uc720\ud6a8\ud55c \uc138\uc158\uc744 \ud655\uc778\ud558\uace0 \ub2f9\uc2e0\uc774 \uc9c1\uc811 \ud589\uc131\uc744 \ud3d0\uae30\ud558\uae30\ub85c \uacb0\uc815\ud588\ub2e4\uace0 \uc0dd\uac01\ud560 \uac83\uc785\ub2c8\ub2e4. \ub2f9\uc2e0\ub3c4 \ubaa8\ub974\ub294 \uc0ac\uc774\uc5d0 \ud589\uc131\uc774 \uc0ad\uc81c\ub420 \uac83\uc785\ub2c8\ub2e4.</p> <p>\uc774\uac83\uc774 \ubc14\ub85c CSRF (\uad50\ucc28 \uc0ac\uc774\ud2b8 \uc694\uccad \uc704\uc870)\uc785\ub2c8\ub2e4. \uc774\ub294 \uacf5\uaca9\uc790\uac00 \uc778\uc99d\ub41c \uc0ac\uc6a9\uc790\uc758 \ube0c\ub77c\uc6b0\uc800\ub85c \ud558\uc5ec\uae08 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uc6f9\uc0ac\uc774\ud2b8\uc5d0\uc11c \uc6d0\uce58 \uc54a\ub294 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub3c4\ub85d \uac15\uc81c\ud558\ub294 \uacf5\uaca9\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>\ub2f9\uc2e0\uc740 \ud568\uc120\uc758 \uc120\uc7a5\uc774\uba70, \ud0a4 \uce74\ub4dc(\uc138\uc158/\ucfe0\ud0a4)\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uacf5\uaca9\uc790\ub294 \ub2f9\uc2e0\uc758 \uce74\ub4dc\ub97c \ud6d4\uce60 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ub2f9\uc2e0\uc774 \ud55c\ub208\uc744 \ud310 \uc0ac\uc774\uc5d0 \uc790\uc6d0 \ud3d0\uae30 \ud130\ubbf8\ub110\uc5d0 \uce74\ub4dc\ub97c \ub300\ub3c4\ub85d \uc18d\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. CSRF \ud1a0\ud070\uc740 \uce74\ub4dc\uc640 \ud568\uaed8 \uc785\ub825\ud574\uc57c \ud558\ub294 PIN \ucf54\ub4dc\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uacf5\uaca9\uc790\ub294 PIN \ucf54\ub4dc\ub97c \ubaa8\ub974\ubbc0\ub85c, \uadf8\uc758 \uacf5\uaca9\uc740 \uc2e4\ud328\ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/4/#2-laravel-csrf","title":"2. Laravel\uc740 CSRF\ub85c\ubd80\ud130 \uc5b4\ub5bb\uac8c \ubcf4\ud638\ud558\ub294\uac00?","text":"<p>Laravel\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ubaa8\ub4e0 \"\uc548\uc804\ud558\uc9c0 \uc54a\uc740\" \uc6f9 \uc694\uccad(POST, PUT, PATCH, DELETE)\uc744 CSRF \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcf4\ud638\ud569\ub2c8\ub2e4.</p> <ol> <li>\ud398\uc774\uc9c0\ub97c \uc0dd\uc131\ud560 \ub54c Laravel\uc740 \uc0ac\uc6a9\uc790 \uc138\uc158\uc5d0 \ub300\ud574 \uace0\uc720\ud558\uace0 \ubb34\uc791\uc704\uc801\uc778 \ud1a0\ud070\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.</li> <li>\uc774 \ud1a0\ud070\uc740 HTML \uc591\uc2dd\uc5d0 \uc0bd\uc785\ub429\ub2c8\ub2e4.</li> <li>\uc591\uc2dd\uc744 \uc81c\ucd9c\ud560 \ub54c \ud1a0\ud070\uc740 \uc694\uccad\uacfc \ud568\uaed8 \uc804\uc1a1\ub429\ub2c8\ub2e4.</li> <li>\uc11c\ubc84\uc5d0\uc11c\ub294 <code>VerifyCsrfToken</code> \ubbf8\ub4e4\uc6e8\uc5b4\uac00 \uc694\uccad\uc758 \ud1a0\ud070\uacfc \uc138\uc158\uc5d0 \uc800\uc7a5\ub41c \ud1a0\ud070\uc744 \ube44\uad50\ud569\ub2c8\ub2e4.</li> <li>\ud1a0\ud070\uc774 \uc77c\uce58\ud558\uc9c0 \uc54a\uc73c\uba74 Laravel\uc740 419 \uc624\ub958(\uc138\uc158 \ub9cc\ub8cc/\ud398\uc774\uc9c0 \ub9cc\ub8cc)\uc640 \ud568\uaed8 \uc694\uccad\uc744 \uc911\ub2e8\ud569\ub2c8\ub2e4.</li> </ol> <p>\uc911\uc694: <code>routes/api.php</code>\uc758 API \uacbd\ub85c\ub294 \ucfe0\ud0a4 \uae30\ubc18 \uc138\uc158\uc774 \uc544\ub2cc \ub2e4\ub978 \uc778\uc99d \uba54\ucee4\ub2c8\uc998(\uc608: Sanctum \ud1a0\ud070)\uc744 \uac00\uc815\ud558\ubbc0\ub85c CSRF \ubcf4\ud638\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \ud604\uc7ac \uc6b0\ub9ac\uc758 \ubb38\uc81c\ub294 <code>routes/web.php</code>\uc5d0\uc11c \uc0dd\uc131\ud558\ub294 \uc6f9 \uacbd\ub85c \ubc0f \ud398\uc774\uc9c0\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/4/#3-html-csrf","title":"3. HTML \uc591\uc2dd\uc5d0\uc11c CSRF \ud1a0\ud070 \uc0ac\uc6a9","text":"<p>\uc774\uac83\uc740 \uac00\uc7a5 \uac04\ub2e8\ud55c \uc2dc\ub098\ub9ac\uc624\uc785\ub2c8\ub2e4. Laravel\uc740 \uc774\ub97c \uc704\ud574 \ud2b9\ubcc4\ud55c Blade \uc9c0\uc2dc\uc5b4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.</p> <p>\uc608\uc2dc: \ud589\uc131 \uc0dd\uc131 \uc591\uc2dd \uac04\ub2e8\ud55c \uc591\uc2dd\uc744 <code>resources/views/planets/create.blade.php</code> \ud30c\uc77c\uc5d0 \uc0dd\uc131\ud574 \ubd05\uc2dc\ub2e4:</p> <pre><code>&lt;h2&gt;\uc0c8 \ud589\uc131 \uc2dc\uc791 \uc591\uc2dd&lt;/h2&gt;\n&lt;form action=\"/planets\" method=\"POST\"&gt;\n    @csrf {{-- \ubc14\ub85c \uc774\uac83\uc774 \ub9c8\ubc95! --}}\n\n    &lt;label for=\"name\"&gt;\uc774\ub984:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;\n\n    &lt;label for=\"solar_system\"&gt;\ud0dc\uc591\uacc4:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"solar_system\" name=\"solar_system\" required&gt;\n\n    {{-- ... \uae30\ud0c0 \ud544\ub4dc ... --}}\n\n    &lt;button type=\"submit\"&gt;\uc2dc\uc791&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p><code>@csrf</code> \uc9c0\uc2dc\uc5b4\ub294 \uc591\uc2dd\uc5d0 \uc228\uaca8\uc9c4 \ud544\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4: <pre><code>&lt;input type=\"hidden\" name=\"_token\" value=\"j2aK3dLf4gH5...\uace0\uc720_\ud1a0\ud070...\"&gt;\n</code></pre></p> <p>\uc774\uac83\uc73c\ub85c \ud45c\uc900 HTML \uc591\uc2dd\uc744 \ubcf4\ud638\ud558\uae30\uc5d0 \ucda9\ubd84\ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/4/#4-ajaxfetch-csrf","title":"4. AJAX/Fetch \uc694\uccad\uc5d0\uc11c CSRF \ud1a0\ud070 \uc0ac\uc6a9","text":"<p>\uc9c0\ub09c \uc7a5\uc5d0\uc11c\ub294 JavaScript\ub97c \uc0ac\uc6a9\ud558\uc5ec <code>DELETE</code> \uc694\uccad\uc744 \ubcf4\ub0c8\uc2b5\ub2c8\ub2e4. \uc774\uc81c Laravel\uc740 419 \uc624\ub958\ub85c \uc774\ub97c \ucc28\ub2e8\ud560 \uac83\uc785\ub2c8\ub2e4. Fetch \uc694\uccad\uc758 \ud5e4\ub354\uc5d0 CSRF \ud1a0\ud070\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 1: JavaScript\uc5d0\uc11c \ud1a0\ud070\uc5d0 \uc811\uadfc \uac00\ub2a5\ud558\uac8c \ub9cc\ub4e4\uae30</p> <p>\ub9c8\uc2a4\ud130 \ub808\uc774\uc544\uc6c3 <code>resources/views/app.blade.php</code>\uc758 <code>&lt;head&gt;</code>\uc5d0 \ud1a0\ud070\uc774 \ud3ec\ud568\ub41c \uba54\ud0c0 \ud0dc\uadf8\ub97c \ucd94\uac00\ud558\uc138\uc694. \uc774\ub294 Laravel\uc758 \ud45c\uc900 \uad00\ud589\uc785\ub2c8\ub2e4.</p> <pre><code>&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n\n    {{-- \uba54\ud0c0 \ud0dc\uadf8\uc5d0 CSRF \ud1a0\ud070 \ucd94\uac00 --}}\n    &lt;meta name=\"csrf-token\" content=\"{{ csrf_token() }}\"&gt;\n\n    {{-- ... --}}\n&lt;/head&gt;\n</code></pre> <p><code>csrf_token()</code> \ud568\uc218\ub294 \ud604\uc7ac \ud1a0\ud070\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 2: \ud1a0\ud070 \uc804\uc1a1\uc744 \uc704\ud55c JavaScript \uc218\uc815</p> <p>\uc774\uc81c <code>public/js/planets.js</code>\uc5d0\uc11c \uc774 \ud1a0\ud070\uc744 \uc77d\uace0 \ubaa8\ub4e0 \"\uc548\uc804\ud558\uc9c0 \uc54a\uc740\" \uc694\uccad\uc758 \ud5e4\ub354\uc5d0 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <pre><code>// ... public/js/planets.js \ud30c\uc77c\uc5d0\uc11c ...\n\ndocument.addEventListener('DOMContentLoaded', () =&gt; {\n    // \uba54\ud0c0 \ud0dc\uadf8\uc5d0\uc11c \ud1a0\ud070 \uac00\uc838\uc624\uae30\n    const csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            // ... \ud655\uc778 \ub85c\uc9c1 ...\n\n            try {\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        'X-CSRF-TOKEN': csrfToken // &lt;-- \ud5e4\ub354\uc5d0 \ud1a0\ud070 \ucd94\uac00!\n                    }\n                });\n\n                // ... \uc751\ub2f5 \ucc98\ub9ac\uc758 \ub098\uba38\uc9c0 \ub85c\uc9c1 ...\n            } catch (error) {\n                // ...\n            }\n        });\n    });\n});\n</code></pre> <ul> <li>\ud5e4\ub354 \uc774\ub984 <code>X-CSRF-TOKEN</code>\uc740 Laravel\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \ud655\uc778\ud558\ub294 \ud45c\uc900\uc785\ub2c8\ub2e4.</li> </ul> <p>\uc774\uc81c \uc6b0\ub9ac\uc758 AJAX \uc694\uccad\ub3c4 \ubcf4\ud638\ub429\ub2c8\ub2e4. \ud589\uc131\uc744 \ub2e4\uc2dc \uc0ad\uc81c\ud574 \ubcf4\uc138\uc694. \uc774\ubc88\uc5d0\ub294 \uc694\uccad\uc774 \uc131\uacf5\uc801\uc73c\ub85c \ucc98\ub9ac\ub420 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/4/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. CSRF \ud1a0\ud070\uc740 \uc5b4\ub5a4 \uacf5\uaca9\uc744 \ubc29\uc9c0\ud569\ub2c8\uae4c?</p>  a) SQL \uc778\uc81d\uc158  b) \uad50\ucc28 \uc0ac\uc774\ud2b8 \uc2a4\ud06c\ub9bd\ud305  c) \uad50\ucc28 \uc0ac\uc774\ud2b8 \uc694\uccad \uc704\uc870 <p>2. \uc5b4\ub5a4 Blade \uc9c0\uc2dc\uc5b4\uac00 \uc591\uc2dd\uc5d0 CSRF \ud1a0\ud070\uc774 \ud3ec\ud568\ub41c \uc228\uaca8\uc9c4 \ud544\ub4dc\ub97c \ucd94\uac00\ud569\ub2c8\uae4c?</p>  a) @token  b) @csrf  c) @form_token <p>3. \uc6f9 \uacbd\ub85c\ub85c CSRF \ud1a0\ud070 \uc5c6\uc774 POST \uc694\uccad\uc744 \ubcf4\ub0b4\uba74 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?</p>  a) 500 \uc624\ub958 (\ub0b4\ubd80 \uc11c\ubc84 \uc624\ub958)  b) 403 \uc624\ub958 (\uae08\uc9c0\ub428)  c) 419 \uc624\ub958 (\ud398\uc774\uc9c0 \ub9cc\ub8cc / \uc138\uc158 \ub9cc\ub8cc) <p>4. AJAX \uc694\uccad\uc5d0\uc11c CSRF \ud1a0\ud070\uc744 \uc804\uc1a1\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ud45c\uc900 HTTP \ud5e4\ub354\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) Authorization  b) X-CSRF-TOKEN  c) Content-Type <p>5. API \uacbd\ub85c(`routes/api.php`)\uac00 \uae30\ubcf8\uc801\uc73c\ub85c CSRF \ubcf4\ud638\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uc774\uc720\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) \uc2a4\ud14c\uc774\ud2b8\ub9ac\uc2a4 \uc778\uc99d\uc744 \uc704\ud574 \uc124\uacc4\ub418\uc5c8\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4  b) Laravel\uc758 \uc624\ub958\uc774\uba70, \uc218\ub3d9\uc73c\ub85c \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4  c) API \uc694\uccad\uc740 \uc704\uc870\ub420 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4 \ud655\uc778\ud558\uae30 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\uc6b0\uc8fc\uc120\uc5d0 \"\uc544\uad70/\uc801\uad70 \uc2dd\ubcc4 \uc2dc\uc2a4\ud15c\"\uc744 \uc124\uce58\ud558\uc5ec CSRF \uacf5\uaca9\uc73c\ub85c\ubd80\ud130 \ubcf4\ud638\ud588\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud559\uc2b5\ud588\uc2b5\ub2c8\ub2e4:</p> <ul> <li>CSRF \uacf5\uaca9\uc758 \ubcf8\uc9c8\uacfc \uc704\ud5d8\uc131\uc744 \uc774\ud574\ud569\ub2c8\ub2e4.</li> <li><code>@csrf</code> \ub514\ub809\ud2f0\ube0c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud45c\uc900 HTML \ud3fc\uc744 \ubcf4\ud638\ud569\ub2c8\ub2e4.</li> <li>\uba54\ud0c0 \ud0dc\uadf8\ub97c \ud1b5\ud574 CSRF \ud1a0\ud070\uc744 JavaScript\ub85c \uc804\ub2ec\ud569\ub2c8\ub2e4.</li> <li>\uc131\uacf5\uc801\uc778 \uc2e4\ud589\uc744 \uc704\ud574 AJAX/Fetch \uc694\uccad \ud5e4\ub354\uc5d0 \ud1a0\ud070\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4.</li> </ul> <p>\uc774\uc81c \uc6f9 \uc778\ud130\ud398\uc774\uc2a4\ub294 \uc0c1\ud638\uc791\uc6a9\uc801\uc77c \ubfd0\ub9cc \uc544\ub2c8\ub77c \uc548\uc804\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \uc6f9 \ud398\uc774\uc9c0\uc758 \ub77c\uc6b0\ud305\uc744 \uc62c\ubc14\ub974\uac8c \uad6c\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubcf4\uba70 \uc6f9 \uc778\ud130\ud398\uc774\uc2a4 \uc0dd\uc131\uc744 \uc644\ub8cc\ud560 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/5/","title":"\uc81c5.5\uc7a5: \uc6f9 \ud398\uc774\uc9c0 \ub77c\uc6b0\ud305","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 40\ubd84</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/5/#1-routeswebphp-vs-routesapiphp","title":"1. <code>routes/web.php</code> vs <code>routes/api.php</code>: \ub450 \uac00\uc9c0 \ub2e4\ub978 \uc81c\uc5b4\ud310","text":"<p>\uadfc\ubcf8\uc801\uc778 \ucc28\uc774\ub97c \ub2e4\uc2dc \ud55c\ubc88 \ud655\uc2e4\ud788 \ud574\ub450\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4:</p> \ud2b9\uc131 <code>routes/web.php</code> (\uc6f9 \uc81c\uc5b4\ud310) <code>routes/api.php</code> (API \uc81c\uc5b4\ud310) \uc8fc\uc694 \ubaa9\uc801 HTML \ud398\uc774\uc9c0 \ud45c\uc2dc, \ud3fc \ucc98\ub9ac \ub2e4\ub978 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc704\ud55c JSON \ud615\uc2dd \ub370\uc774\ud130 \uc81c\uacf5 \uc0c1\ud0dc (State) Stateful (\uc0c1\ud0dc \uc720\uc9c0) \u2014 \uc138\uc158 \ubc0f \ucfe0\ud0a4 \uc0ac\uc6a9 Stateless (\ubb34\uc0c1\ud0dc) \u2014 \uac01 \uc694\uccad \ub3c5\ub9bd\uc801 \uae30\ubcf8 \ubbf8\ub4e4\uc6e8\uc5b4 <code>web</code> (\uc138\uc158, CSRF \ubcf4\ud638, \ucfe0\ud0a4 \uc554\ud638\ud654 \ud3ec\ud568) <code>api</code> (\"\uc2a4\ub85c\ud2c0\ub9c1\" \u2014 \uc694\uccad \ube48\ub3c4 \uc81c\ud55c \ud3ec\ud568) URL \uc811\ub450\uc0ac \uc5c6\uc74c (\uc0ac\uc774\ud2b8\uc758 \ub8e8\ud2b8) <code>/api/</code> (<code>RouteServiceProvider</code>\uc5d0\uc11c \uc124\uc815) \uc778\uc99d \uc77c\ubc18\uc801\uc73c\ub85c \uc138\uc158 \uc0ac\uc6a9 (\ub85c\uadf8\uc778/\ube44\ubc00\ubc88\ud638) \uc77c\ubc18\uc801\uc73c\ub85c \ud1a0\ud070 \uc0ac\uc6a9 (Sanctum, Passport) <p>\uc6b0\ub9ac\ub294 \uc2e4\uc81c \uc0ac\uc6a9\uc790\ub97c \uc704\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ucd95\ud558\uae30 \uc704\ud574 <code>routes/web.php</code>\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/5/#2","title":"2. \uc6f9\uc6a9 \ub9ac\uc18c\uc2a4 \ub77c\uc6b0\ud2b8","text":"<p><code>Route::apiResource</code>\uc640 \uc720\uc0ac\ud558\uac8c, \uc6f9\uc744 \uc704\ud55c <code>Route::resource</code>\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \uc0dd\uc131 \ubc0f \ud3b8\uc9d1 \ud3fc\uc744 \ud45c\uc2dc\ud558\ub294 \ud398\uc774\uc9c0\ub97c \ud3ec\ud568\ud558\uc5ec \uc804\uccb4 CRUD \uc0ac\uc774\ud074\uc744 \uc704\ud55c \ub77c\uc6b0\ud2b8\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.</p> <p>\uc6f9 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud1b5\ud574 \ud589\uc131\uc744 \uad00\ub9ac\ud558\uae30 \uc704\ud55c \uc804\uccb4 \ub77c\uc6b0\ud2b8 \uc138\ud2b8\ub97c \ub9cc\ub4e4\uc5b4 \ubd05\uc2dc\ub2e4.</p> <p>1\ub2e8\uacc4: <code>routes/web.php</code>\uc5d0 \ub77c\uc6b0\ud2b8 \uc0dd\uc131</p> <p>\uae30\uc874\uc758 <code>/planets</code> \ub77c\uc6b0\ud2b8\ub97c \uc8fc\uc11d \ucc98\ub9ac\ud558\uac70\ub098 \uc0ad\uc81c\ud558\uace0 \ud55c \uc904\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4:</p> <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// Route::get('/planets', [PlanetPageController::class, 'index']);\n// Route::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n\nRoute::resource('planets', PlanetPageController::class);\n</code></pre> <p>2\ub2e8\uacc4: \uc0dd\uc131\ub41c \ub0b4\uc6a9 \ud655\uc778 \ud130\ubbf8\ub110\uc5d0\uc11c <code>php artisan route:list --except-vendor</code> \uba85\ub839\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4:</p> <pre><code>+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| Method | URI       | Name                   | Action           | Middleware                                      |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| GET|HEAD | planets                | planets.index          | ...\\PlanetPageController@index                    | web        |\n| POST   | planets                | planets.store          | ...\\PlanetPageController@store                    | web        |\n| GET|HEAD | planets/create         | planets.create         | ...\\PlanetPageController@create                   | web        |\n| GET|HEAD | planets/{planet}       | planets.show           | ...\\PlanetPageController@show                     | web        |\n| PUT|PATCH | planets/{planet}       | planets.update         | ...\\PlanetPageController@update                   | web        |\n| DELETE | planets/{planet}       | planets.destroy        | ...\\PlanetPageController@destroy                  | web        |\n| GET|HEAD | planets/{planet}/edit  | planets.edit           | ...\\PlanetPageController@edit                     | web        |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n</code></pre> <p><code>Route::resource</code>\ub294 \ub2e4\uc74c\uc744 \ud3ec\ud568\ud558\uc5ec 7\uac1c\uc758 \ub77c\uc6b0\ud2b8\ub97c \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4:</p> <ul> <li><code>planets.create</code> (GET <code>/planets/create</code>): \uc0dd\uc131 \ud3fc\uc774 \uc788\ub294 \ud398\uc774\uc9c0.</li> <li><code>planets.store</code> (POST <code>/planets</code>): \uc774 \ud3fc \ucc98\ub9ac.</li> <li><code>planets.edit</code> (GET <code>/planets/{planet}/edit</code>): \ud3b8\uc9d1 \ud3fc\uc774 \uc788\ub294 \ud398\uc774\uc9c0.</li> <li><code>planets.update</code> (PUT/PATCH <code>/planets/{planet}</code>): \ud3b8\uc9d1 \ud3fc \ucc98\ub9ac.</li> <li><code>planets.destroy</code> (DELETE <code>/planets/{planet}</code>): \ub9ac\uc18c\uc2a4 \uc0ad\uc81c.</li> </ul>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/5/#3","title":"3. \uba85\uba85\ub41c \ub77c\uc6b0\ud2b8: \ud3b8\ub9ac\ud55c \"\uc6b0\uc8fc \uc88c\ud45c\"","text":"<p><code>Name</code> \uc5f4\uc5d0 \uc8fc\ubaa9\ud558\uc138\uc694. Laravel\uc740 \uac01 \ub77c\uc6b0\ud2b8\uc5d0 \uace0\uc720\ud55c \uc774\ub984(\uc608: <code>planets.index</code>)\uc744 \uc790\ub3d9\uc73c\ub85c \ud560\ub2f9\ud588\uc2b5\ub2c8\ub2e4. \ud558\ub4dc\ucf54\ub529\ub41c URL \ub300\uc2e0 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc785\ub2c8\ub2e4.</p> <p>\uc65c \uadf8\ub7f4\uae4c\uc694? URL\uc744 <code>/planets</code>\uc5d0\uc11c <code>/worlds</code>\ub85c \ubcc0\uacbd\ud558\uae30\ub85c \uacb0\uc815\ud558\ub354\ub77c\ub3c4, \ud15c\ud50c\ub9bf\uc758 \ubaa8\ub4e0 \ub9c1\ud06c\ub97c \ucc3e\uc544 \ubcc0\uacbd\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \ub77c\uc6b0\ud2b8 \ud30c\uc77c\uc758 \ud55c \uacf3\uc5d0\uc11c\ub9cc \ubcc0\uacbd\ud558\uba74 \ub418\uba70, \uc774\ub984\uc740 \uadf8\ub300\ub85c \uc720\uc9c0\ub429\ub2c8\ub2e4.</p> <p>Blade\uc5d0\uc11c \uc0ac\uc6a9 \uc608\uc2dc:</p> <p>\uc774\uc804\uc5d0\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud588\uc2b5\ub2c8\ub2e4:</p> <pre><code>&lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;\ub354 \uc54c\uc544\ubcf4\uae30 &amp;rarr;&lt;/a&gt;\n</code></pre> <p>\uc774\uc81c <code>route()</code> \ud5ec\ud37c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud560 \uac83\uc785\ub2c8\ub2e4: <pre><code>&lt;a href=\"{{ route('planets.show', ['planet' =&gt; $planet-&gt;id]) }}\"&gt;\ub354 \uc54c\uc544\ubcf4\uae30 &amp;rarr;&lt;/a&gt;\n</code></pre></p> <ul> <li><code>route('planets.show', ...)</code> \u2014 <code>planets.show</code>\ub77c\ub294 \uc774\ub984\uc758 \ub77c\uc6b0\ud2b8\uc5d0 \ub300\ud55c URL\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.</li> <li><code>['planet' =&gt; $planet-&gt;id]</code> \u2014 \ud544\uc694\ud55c \ub9e4\uac1c\ubcc0\uc218\ub97c URL\uc5d0 \uc804\ub2ec\ud569\ub2c8\ub2e4. Laravel\uc740 <code>{planet}</code>\uc5d0 ID\ub97c \uc790\ub3d9\uc73c\ub85c \ucc44\uc6cc\ub123\uc2b5\ub2c8\ub2e4. \ubaa8\ub378 \uc804\uccb4\ub97c \uc804\ub2ec\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4: <code>['planet' =&gt; $planet]</code>.</li> </ul>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/5/#4","title":"4. \ucee8\ud2b8\ub864\ub7ec\uc5d0 \ub204\ub77d\ub41c \uba54\uc11c\ub4dc \uad6c\ud604","text":"<p><code>Route::resource</code>\ub294 \ub77c\uc6b0\ud2b8\ub97c \uc0dd\uc131\ud588\uc9c0\ub9cc, <code>PlanetPageController</code>\uc5d0 \ud574\ub2f9\ud558\ub294 \uba54\uc11c\ub4dc\ub294 \uc6b0\ub9ac\uac00 \uc9c1\uc811 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4.</p> <p><code>app/Http/Controllers/Web/PlanetPageController.php</code>\ub97c \uc5f4\uace0 \ucd94\uac00\ud574 \ubd05\uc2dc\ub2e4.</p> <pre><code>&lt;?php\nuse Illuminate\\Http\\Request; // &lt;-- \ucd94\uac00\n\nclass PlanetPageController extends Controller\n{\n    // index()\uc640 show()\ub294 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4\n\n    /**\n     * \uc0c8 \ud589\uc131\uc744 \uc0dd\uc131\ud558\uae30 \uc704\ud55c \ud3fc\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.\n     */\n    public function create()\n    {\n        return view('planets.create'); // \ub2e8\uc21c\ud788 \ud3fc\uc774 \uc788\ub294 \ubdf0\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4\n    }\n\n    /**\n     * \uc0c8 \ud589\uc131\uc744 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4.\n     */\n    public function store(Request $request)\n    {\n        // \ud3fc \ub370\uc774\ud130 \uc720\ud6a8\uc131 \uac80\uc0ac\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets',\n            'solar_system' =&gt; 'required|string|max:100',\n            // ... \uae30\ud0c0 \uaddc\uce59\n        ]);\n\n        Planet::create($validated);\n\n        // \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc131\uacf5 \uba54\uc2dc\uc9c0\uc640 \ud568\uaed8 \ubaa9\ub85d \ud398\uc774\uc9c0\ub85c \ub9ac\ub514\ub809\uc158\ud569\ub2c8\ub2e4\n        return redirect()-&gt;route('planets.index')-&gt;with('success', '\ud589\uc131\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc0dd\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4!');\n    }\n\n    /**\n     * \ud589\uc131 \ud3b8\uc9d1 \ud3fc\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.\n     */\n    public function edit(Planet $planet)\n    {\n        return view('planets.edit', ['planet' =&gt; $planet]);\n    }\n\n    /**\n     * \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ud589\uc131 \ub370\uc774\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.\n     */\n    public function update(Request $request, Planet $planet)\n    {\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets,name,' . $planet-&gt;id,\n            'solar_system' =&gt; 'required|string|max:100',\n        ]);\n\n        $planet-&gt;update($validated);\n\n        return redirect()-&gt;route('planets.show', $planet)-&gt;with('success', '\ud589\uc131 \ub370\uc774\ud130\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4!');\n    }\n\n    /**\n     * \ud589\uc131\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.\n     */\n    public function destroy(Planet $planet)\n    {\n        $planet-&gt;delete();\n\n        return redirect()-&gt;route('planets.index')-&gt;with('success', '\ud589\uc131\uc774 \ud3d0\uae30\ub418\uc5c8\uc2b5\ub2c8\ub2e4.');\n    }\n}\n</code></pre> <ul> <li><code>redirect()-&gt;route(...)</code> \u2014 \uc0ac\uc6a9\uc790\ub97c \ub2e4\ub978 \uba85\uba85\ub41c \ub77c\uc6b0\ud2b8\ub85c \ub9ac\ub514\ub809\uc158\ud569\ub2c8\ub2e4.</li> <li><code>-&gt;with('success', '...')</code> \u2014 \uc138\uc158\uc5d0 \"\ud50c\ub798\uc2dc \uba54\uc2dc\uc9c0\"\ub97c \ucd94\uac00\ud558\uba70, \uc774 \uba54\uc2dc\uc9c0\ub294 \ub2e4\uc74c \ud398\uc774\uc9c0\uc5d0\uc11c \uc815\ud655\ud788 \ud55c \ubc88\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc2dc\uc9c0\ub97c Blade \ud15c\ud50c\ub9bf\uc5d0 \ud45c\uc2dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/5/#5","title":"5. \ub77c\uc6b0\ud2b8 \uadf8\ub8f9\ud654","text":"<p>\uacf5\ud1b5 \ud2b9\uc131\uc744 \uac00\uc9c4 \ub9ce\uc740 \ub77c\uc6b0\ud2b8(\uc608: \ubaa8\ub450 \uad00\ub9ac\uc790 \ud328\ub110\uc6a9\uc774\uba70 <code>/admin</code> \uc811\ub450\uc0ac\uc640 \ud2b9\ubcc4\ud55c \ubbf8\ub4e4\uc6e8\uc5b4\ub97c \uac00\uc838\uc57c \ud568)\uac00 \uc788\ub2e4\uba74, \uc774\ub4e4\uc744 \uadf8\ub8f9\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <pre><code>&lt;?php\nRoute::middleware(['auth', 'admin'])-&gt;prefix('admin')-&gt;name('admin.')-&gt;group(function () {\n    // \uc774 \uadf8\ub8f9 \ub0b4\uc758 \ubaa8\ub4e0 \ub77c\uc6b0\ud2b8\ub294 \ub2e4\uc74c\uc744 \uac00\uc9d1\ub2c8\ub2e4:\n    // 1. 'auth' \ubc0f 'admin' \ubbf8\ub4e4\uc6e8\uc5b4\n    // 2. URL \uc811\ub450\uc0ac '/admin' (\uc608: /admin/planets)\n    // 3. \uc774\ub984 \uc811\ub450\uc0ac 'admin.' (\uc608: admin.planets.index)\n\n    Route::resource('planets', PlanetPageController::class);\n    // Route::get('/dashboard', ...)-&gt;name('dashboard'); // -&gt; admin.dashboard\n});\n</code></pre>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/5/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. `routes/web.php` \ud30c\uc77c\uc5d0\uc11c \uc6f9 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc704\ud55c \uc644\uc804\ud55c CRUD \uacbd\ub85c \uc9d1\ud569\uc744 \uc0dd\uc131\ud558\ub294 \uba85\ub839\uc5b4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) Route::crud('planets', Controller::class)  b) Route::apiResource('planets', Controller::class)  c) Route::resource('planets', Controller::class) <p>2. \uba85\uba85\ub41c \uacbd\ub85c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc758 \uc8fc\uc694 \uc7a5\uc810\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) \uc9c1\uc811 URL\ubcf4\ub2e4 \ub354 \ube60\ub974\uac8c \uc791\ub3d9\ud569\ub2c8\ub2e4  b) \ud15c\ud50c\ub9bf\uc758 \ub9c1\ud06c\ub97c \uc190\uc0c1\uc2dc\ud0a4\uc9c0 \uc54a\uace0 \uacbd\ub85c \ud30c\uc77c\uc5d0\uc11c URL\uc744 \uc27d\uac8c \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4  c) \uc790\ub3d9\uc73c\ub85c CSRF\ub85c\ubd80\ud130 \ubcf4\ud638\ub429\ub2c8\ub2e4 <p>3. `Route::resource('articles', ...)`\uc5d0\uc11c `create()` \uba54\uc11c\ub4dc\ub97c \uc704\ud574 \uc5b4\ub5a4 \uacbd\ub85c\uac00 \uc0dd\uc131\ub429\ub2c8\uae4c?</p>  a) GET `/articles/new`  b) GET `/articles/create`  c) POST `/articles/create` <p>4. `redirect()-&gt;route('home')-&gt;with('status', 'OK')` \ucf54\ub4dc\ub294 \ubb34\uc5c7\uc744 \ud569\ub2c8\uae4c?</p>  a) `/home` URL\ub85c 'status' =&gt; 'OK'\ub97c \ud3ec\ud568\ud55c JSON\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4  b) `home` \uba85\uba85\ub41c \uacbd\ub85c\ub85c \ub9ac\ub514\ub809\uc158\ud558\uace0 \uc138\uc158\uc5d0 \uc77c\ud68c\uc131 'status' \uba54\uc2dc\uc9c0\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4  c) `$status` \ubcc0\uc218\uc640 \ud568\uaed8 `home.blade.php` \ubdf0\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4 <p>5. `Route::prefix('dashboard')`\ub294 \ubb34\uc5c7\uc744 \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\uae4c?</p>  a) \uadf8\ub8f9 \ub0b4\uc758 \ubaa8\ub4e0 URL\uc5d0 \uc811\ub450\uc0ac\ub97c \ucd94\uac00\ud558\uae30 \uc704\ud574  b) \uadf8\ub8f9 \ub0b4\uc758 \ubaa8\ub4e0 \uacbd\ub85c \uc774\ub984\uc5d0 \uc811\ub450\uc0ac\ub97c \ucd94\uac00\ud558\uae30 \uc704\ud574  c) `dashboard` \ubbf8\ub4e4\uc6e8\uc5b4\ub97c \uc801\uc6a9\ud558\uae30 \uc704\ud574 \ud655\uc778\ud558\uae30 <p>\ud83d\ude80 \ucc55\ud130 \uc694\uc57d:</p> <p>Laravel\uc5d0\uc11c \uc6f9 \uacbd\ub85c\ub97c \uad6c\uc131\ud558\ub294 \uad6c\uc870\ud654\ub418\uace0 \uc804\ubb38\uc801\uc778 \uc811\uadfc \ubc29\uc2dd\uc744 \ub9c8\uc2a4\ud130\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c \ub2e4\uc74c\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:</p> <ul> <li><code>web</code> \ubc0f <code>api</code> \uacbd\ub85c\uc640 \uadf8 \ubaa9\uc801\uc744 \uad6c\ubcc4\ud569\ub2c8\ub2e4.</li> <li><code>Route::resource</code>\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud45c\uc900 CRUD \uacbd\ub85c\ub97c \ube60\ub974\uac8c \uc0dd\uc131\ud569\ub2c8\ub2e4.</li> <li>\uc720\uc5f0\ud558\uace0 \uc720\uc9c0\ubcf4\uc218 \uac00\ub2a5\ud55c \ucf54\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \uba85\uba85\ub41c \uacbd\ub85c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</li> <li>\uc720\ud6a8\uc131 \uac80\uc0ac \ubc0f \ub9ac\ub514\ub809\uc158\uc744 \ud1b5\ud574 \ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c \uc644\uc804\ud55c CRUD \uc791\uc5c5\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.</li> <li>\uacf5\ud1b5 \uaddc\uce59\uc744 \uc801\uc6a9\ud558\uae30 \uc704\ud574 \uacbd\ub85c\ub97c \uadf8\ub8f9\ud654\ud569\ub2c8\ub2e4.</li> </ul> <p>\uc774\uc81c \ub2f9\uc2e0\uc758 \"\ud568\uc120\"\uc758 \ub0b4\ube44\uac8c\uc774\uc158 \uc2dc\uc2a4\ud15c\uc740 \uc624\ub958 \ud5c8\uc6a9\uc801\uc774\uba70 \ud655\uc7a5\uc744 \uc704\ud55c \uc900\ube44\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774 \uc139\uc158\uc758 \ub9c8\uc9c0\ub9c9 \ucc55\ud130\uc5d0\uc11c\ub294 \uc9c0\uae08\uae4c\uc9c0 \uc5bb\uc740 \ubaa8\ub4e0 \uc9c0\uc2dd\uc744 \ud1b5\ud569\ud558\uc5ec Fetch\ub97c \ud1b5\ud574 \uc5bb\uc740 \ud589\uc131 \ub370\uc774\ud130\ub97c \uc6b0\ub9ac\uc758 Blade \ud398\uc774\uc9c0\uc5d0 \ud45c\uc2dc\ud560 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/6/","title":"5.6\uc7a5: Blade + Fetch\ub97c \ud1b5\ud55c \ub370\uc774\ud130 \ud45c\uc2dc","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 50\ubd84</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/6/#1","title":"1. \ud558\uc774\ube0c\ub9ac\ub4dc \uc811\uadfc \ubc29\uc2dd: \ub450 \uc138\uacc4\uc758 \ucd5c\uace0","text":"<p>\uc6b0\ub9ac\ub294 \ud398\uc774\uc9c0\ub97c \ub450 \uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c \uad6c\ucd95\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:</p> <ol> <li>\uc804\uccb4 \uc11c\ubc84 \uce21 \ub80c\ub354\ub9c1 (SSR): Laravel\uc740 \ud589\uc131 \ubaa9\ub85d\uc744 \ud3ec\ud568\ud55c \ubaa8\ub4e0 HTML\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc5c5\ub370\uc774\ud2b8(\uc0ad\uc81c, \ucd94\uac00) \uc2dc \ud398\uc774\uc9c0\uac00 \uc644\uc804\ud788 \ub2e4\uc2dc \ub85c\ub4dc\ub429\ub2c8\ub2e4.</li> <li>\uc804\uccb4 \ud074\ub77c\uc774\uc5b8\ud2b8 \uce21 \ub80c\ub354\ub9c1 (CSR): Laravel\uc740 \ube48 HTML \"\uc178\"\uc744 \ubc18\ud658\ud558\uace0, JavaScript\ub294 API\uc5d0\uc11c \ubaa8\ub4e0 \ub370\uc774\ud130\ub97c \uc694\uccad\ud558\uc5ec \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4. (\uc774\ub294 \ub2e8\uc77c \ud398\uc774\uc9c0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 - SPA \uc811\uadfc \ubc29\uc2dd\uc785\ub2c8\ub2e4.)</li> </ol> <p>\uc6b0\ub9ac\uc758 \uc120\ud0dd\uc740 \ud558\uc774\ube0c\ub9ac\ub4dc \uc811\uadfc \ubc29\uc2dd\uc785\ub2c8\ub2e4:</p> <ul> <li>\uccab \ub85c\ub4dc (SSR): Laravel\uc740 \uc900\ube44\ub41c \ud589\uc131 \ubaa9\ub85d\uc774 \ud3ec\ud568\ub41c \ud398\uc774\uc9c0\ub97c \uc989\uc2dc \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ub294 \ube60\ub974\uace0 SEO\uc5d0 \uc88b\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\ub294 \uc989\uc2dc \ucf58\ud150\uce20\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>\ud6c4\uc18d \uc791\uc5c5 (CSR): JavaScript\ub294 \uc0ac\uc6a9\uc790 \uc791\uc5c5(\ubc84\ud2bc \ud074\ub9ad)\uc744 \uac00\ub85c\ucc44\uace0 API\uc640 \uc0c1\ud638 \uc791\uc6a9\ud558\uc5ec \uc804\uccb4 \ud398\uc774\uc9c0\ub97c \ub2e4\uc2dc \ub85c\ub4dc\ud558\uc9c0 \uc54a\uace0 \ud398\uc774\uc9c0\uc758 \ud544\uc694\ud55c \ubd80\ubd84\ub9cc \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>\ub2e4\ub9ac\uc5d0 \ub4e4\uc5b4\uc11c\uba74 \uc911\uc559 \uad00\uc81c \uc13c\ud130(SSR)\uc5d0\uc11c \uc778\uc1c4\ub41c \uc8fc\uc694 \ud56d\ud574 \uc9c0\ub3c4\uac00 \uc989\uc2dc \uc81c\uacf5\ub429\ub2c8\ub2e4. \uc774\ubbf8 \uc190\uc5d0 \uc788\uc73c\ubbc0\ub85c \uae30\ub2e4\ub9b4 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uadf8 \ud6c4 \ud0dc\ube14\ub9bf\uc5d0\uc11c \"\uc2e4\uc2dc\uac04 \ubaa8\ub4dc\"(CSR)\ub97c \ud65c\uc131\ud654\ud558\uba74 \uc704\uc131\uc73c\ub85c\ubd80\ud130 \uc2e4\uc2dc\uac04 \uc5c5\ub370\uc774\ud2b8\ub97c \ubc1b\uae30 \uc2dc\uc791\ud558\uc5ec \uc9c0\ub3c4\uc5d0 \uc788\ub294 \uac1d\uccb4\ub97c \ub2e4\uc2dc \uadf8\ub9bd\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/6/#2-1","title":"2. 1\ub2e8\uacc4: \ud398\uc774\uc9c0 \uc900\ube44","text":"<p>\uc6b0\ub9ac\ub294 \ud589\uc131 \ubaa9\ub85d \ud398\uc774\uc9c0\uc778 <code>resources/views/planets/index.blade.php</code>\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc791\uc5c5\ud560 \uac83\uc785\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0\ub294 \ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c \uc804\ub2ec\ub41c \ub370\uc774\ud130\ub97c \uc774\ubbf8 \ud45c\uc2dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc6b0\ub9ac\ub294 JS\ub97c \ud1b5\ud574 \uc791\ub3d9\ud560 \uc81c\uc5b4 \uc694\uc18c\ub97c \ucd94\uac00\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\"\ubaa9\ub85d \uc0c8\ub85c\uace0\uce68\" \ubc84\ud2bc\uacfc \uc54c\ub9bc \ucee8\ud14c\uc774\ub108\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4: <pre><code>    &lt;div class=\"controls\"&gt;\n        &lt;h2&gt;\uc54c\ub824\uc9c4 \ubaa8\ub4e0 \ud589\uc131 \ubaa9\ub85d&lt;/h2&gt;\n        &lt;button id=\"refresh-btn\"&gt;API\ub97c \ud1b5\ud574 \uc0c8\ub85c\uace0\uce68&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div id=\"notification-area\" class=\"notification\"&gt;&lt;/div&gt;\n    &lt;hr&gt;\n    {{-- \uc774 div\ub294 \ub3d9\uc801 \uc5c5\ub370\uc774\ud2b8\ub97c \uc704\ud55c \uc6b0\ub9ac\uc758 \ucee8\ud14c\uc774\ub108\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4 --}}\n    &lt;div id=\"planet-list-container\" class=\"planet-list\"&gt;\n        {{-- \ucd08\uae30 \ubaa9\ub85d\uc744 \ub80c\ub354\ub9c1\ud558\ub294 \"\uc790\uc2dd\" \ubdf0\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4 --}}\n        @include('planets.partials.list', ['planets' =&gt; $planets])\n    &lt;/div&gt;\n</code></pre></p> <p><code>@include('planets.partials.list', ...)</code>\uc5d0 \uc8fc\ubaa9\ud558\uc138\uc694. \uc6b0\ub9ac\ub294 \ubaa9\ub85d \ud45c\uc2dc \ub85c\uc9c1\uc744 \ubcc4\ub3c4\uc758 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud30c\uc77c\ub85c \ubd84\ub9ac\ud588\uc2b5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/6/#2-partial","title":"2\ub2e8\uacc4: \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \"\ubd80\ubd84\" \ubdf0 (Partial) \uc0dd\uc131","text":"<p>\ubc18\ubcf5\ub418\ub294 \ubd80\ubd84\uc744 \ubcc4\ub3c4\uc758 \ud30c\uc77c\ub85c \ubd84\ub9ac\ud558\ub294 \uac83\uc740 \uc88b\uc740 \uc2b5\uad00\uc785\ub2c8\ub2e4.</p> <p><code>resources/views/planets/partials/list.blade.php</code> \ud30c\uc77c\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4:</p> <pre><code>@forelse($planets as $planet)\n    &lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n        &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n        &lt;p&gt;\ud0dc\uc591\uacc4: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n        &lt;p&gt;\uc9c1\uacbd: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n        &lt;a href=\"{{ route('planets.show', $planet) }}\"&gt;\uc790\uc138\ud788 \uc54c\uc544\ubcf4\uae30 &amp;rarr;&lt;/a&gt;\n        &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"{{ route('api.planets.destroy', $planet) }}\"&gt;\n            \ud3d0\uae30\n        &lt;/button&gt;\n    &lt;/div&gt;\n@empty\n    &lt;p&gt;\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ud589\uc131\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.&lt;/p&gt;\n@endforelse\n</code></pre> <ul> <li>\uc911\uc694: \uc0ad\uc81c \ubc84\ud2bc\uc758 URL\uc774 \uc774\uc81c API \uacbd\ub85c\ub97c \uc704\ud574 \uc0dd\uc131\ub41c\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud558\uc2ed\uc2dc\uc624: <code>route('api.planets.destroy', $planet)</code>. \uc774\ub97c \uc704\ud574\uc11c\ub294 <code>routes/api.php</code>\uc5d0 \ub2e4\uc74c \uc774\ub984\uc774 \uc9c0\uc815\ub41c \ub9ac\uc18c\uc2a4\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624: <code>Route::apiResource('planets', ...)-&gt;name('api.planets');</code></li> </ul>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/6/#3-javascript","title":"3\ub2e8\uacc4: \ub3d9\uc801 \uc5c5\ub370\uc774\ud2b8\ub97c \uc704\ud55c JavaScript \uc791\uc131","text":"<p>\uc774\uc81c \uac00\uc7a5 \ud765\ubbf8\ub85c\uc6b4 \ubd80\ubd84\uc785\ub2c8\ub2e4. \ubc84\ud2bc\uc744 \ud1b5\ud574 API\uc5d0\uc11c \ucd5c\uc2e0 \ud589\uc131 \ubaa9\ub85d\uc744 \uc694\uccad\ud558\uace0 \uc774\ub97c \ub2e4\uc2dc \ub80c\ub354\ub9c1\ud558\ub294 JavaScript\ub97c \ub9cc\ub4e4 \uac83\uc785\ub2c8\ub2e4.</p> <p><code>public/js/planet-manager.js</code> \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uace0 <code>layouts/app.blade.php</code>\uc5d0 \uc5f0\uacb0\ud569\ub2c8\ub2e4.</p> <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    const refreshBtn = document.getElementById('refresh-btn');\n    const planetListContainer = document.getElementById('planet-list-container');\n    const notificationArea = document.getElementById('notification-area');\n\n    // \uc54c\ub9bc \ud45c\uc2dc \ud568\uc218\n    function showNotification(message, isError = false) {\n        notificationArea.textContent = message;\n        notificationArea.className = isError ? 'notification error' : 'notification success';\n        setTimeout(() =&gt; {\n            notificationArea.textContent = '';\n            notificationArea.className = 'notification';\n        }, 3000);\n    }\n\n    // \ud589\uc131 \uce74\ub4dc \ud558\ub098\ub97c \ub80c\ub354\ub9c1\ud558\ub294 \ud568\uc218\n    function createPlanetCardHtml(planet) {\n        // \uc911\uc694: \uc6b0\ub9ac\ub294 partial \ubdf0\uc5d0\uc11c\uc640 \ub3d9\uc77c\ud55c HTML\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4\n        return `\n            &lt;div class=\"planet-card\" id=\"planet-card-${planet.id}\"&gt;\n                &lt;h3&gt;${planet.name}&lt;/h3&gt;\n                &lt;p&gt;\ud0dc\uc591\uacc4: ${planet.solar_system}&lt;/p&gt;\n                &lt;p&gt;\uc9c1\uacbd: ${new Intl.NumberFormat().format(planet.size_km)} km&lt;/p&gt;\n                &lt;a href=\"/planets/${planet.id}\"&gt;\uc790\uc138\ud788 \uc54c\uc544\ubcf4\uae30 &amp;rarr;&lt;/a&gt;\n                &lt;button class=\"delete-btn\" data-id=\"${planet.id}\" data-url=\"/api/planets/${planet.id}\"&gt;\n                    \ud3d0\uae30 (JS)\n                &lt;/button&gt;\n            &lt;/div&gt;\n        `;\n    }\n\n    // \ud589\uc131 \ubaa9\ub85d\uc744 \uc694\uccad\ud558\uace0 \ub2e4\uc2dc \ub80c\ub354\ub9c1\ud558\ub294 \ud568\uc218\n    async function fetchAndRenderPlanets() {\n        showNotification('\uada4\ub3c4 \uc704\uc131\uc5d0\uc11c \ucd5c\uc2e0 \ub370\uc774\ud130\ub97c \uc694\uccad \uc911...');\n        try {\n            const response = await fetch('/api/planets', {\n                headers: { 'Accept': 'application/json' }\n            });\n\n            if (!response.ok) {\n                throw new Error('\ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub294 \uc911 \ub124\ud2b8\uc6cc\ud06c \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.');\n            }\n\n            const planets = await response.json(); // Laravel\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ud398\uc774\uc9c0\uac00 \ub9e4\uaca8\uc9c4 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud574 { data: [...] }\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.\n\n            planetListContainer.innerHTML = ''; // \uc774\uc804 \ubaa9\ub85d \uc9c0\uc6b0\uae30\n\n            if (planets.data.length === 0) {\n                planetListContainer.innerHTML = '&lt;p&gt;\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ud589\uc131\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.&lt;/p&gt;';\n            } else {\n                planets.data.forEach(planet =&gt; {\n                    const cardHtml = createPlanetCardHtml(planet);\n                    planetListContainer.innerHTML += cardHtml;\n                });\n            }\n            showNotification('\ub370\uc774\ud130\uac00 \uc131\uacf5\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4!', false);\n        } catch (error) {\n            console.error('\ud589\uc131 \ubaa9\ub85d \uc5c5\ub370\uc774\ud2b8 \uc911 \uc624\ub958 \ubc1c\uc0dd:', error);\n            showNotification(error.message, true);\n        }\n    }\n\n    // \ubc84\ud2bc\uc5d0 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uc5f0\uacb0\n    if (refreshBtn) {\n        refreshBtn.addEventListener('click', fetchAndRenderPlanets);\n    }\n\n    // \uc5ec\uae30\ub85c \uc774\uc804 \uc7a5\uc758 \uc0ad\uc81c \ub85c\uc9c1\uc744 \uc62e\uaca8\uc640\uc11c\n    // \ubaa8\ub4e0 JS\uac00 \ud55c \uacf3\uc5d0 \uc788\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n});\n</code></pre>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/6/#3","title":"3. \ucd5c\uc885 \ud655\uc778","text":"<ol> <li>\uc11c\ubc84\ub97c \uc2dc\uc791\ud569\ub2c8\ub2e4 (<code>php artisan serve</code>\ub97c \uc2e4\ud589\ud558\uac70\ub098 Herd\uac00 \uc791\ub3d9\ud558\ub294\uc9c0 \ud655\uc778).</li> <li>\ud544\uc694\ud558\ub2e4\uba74 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud569\ub2c8\ub2e4: <code>php artisan migrate:fresh --seed</code>.</li> <li>\ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c /planets \ud398\uc774\uc9c0\ub97c \uc5fd\ub2c8\ub2e4.<ul> <li>\uc11c\ubc84\uc5d0\uc11c \uc0dd\uc131\ub41c \ud589\uc131 \ubaa9\ub85d\uc744 \uc989\uc2dc \ubcfc \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.</li> </ul> </li> <li>\"API\ub97c \ud1b5\ud574 \uc0c8\ub85c\uace0\uce68\" \ubc84\ud2bc\uc744 \ud074\ub9ad\ud569\ub2c8\ub2e4.<ul> <li>\ub85c\ub529 \uc54c\ub9bc\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4.</li> <li>\ubaa9\ub85d\uc774 \uc7a0\uc2dc \uc0ac\ub77c\uc84c\ub2e4\uac00 \ub2e4\uc2dc \ub098\ud0c0\ub098\uc57c \ud558\uba70, \uc774\ubc88\uc5d0\ub294 API\uc5d0\uc11c \ubc1b\uc740 \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c JavaScript\uc5d0 \uc758\ud574 \uc0dd\uc131\ub420 \uac83\uc785\ub2c8\ub2e4.</li> </ul> </li> </ol> <p>\ud558\uc774\ube0c\ub9ac\ub4dc \ubaa8\ub378\uc744 \uc131\uacf5\uc801\uc73c\ub85c \uad6c\ud604\ud588\uc2b5\ub2c8\ub2e4!</p>"},{"location":"ko/%EC%A0%9C5%EC%9E%A5%20-%20Laravel%EA%B3%BC%EC%9D%98%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20%ED%86%B5%ED%95%A9/6/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. \ud558\uc774\ube0c\ub9ac\ub4dc \ub80c\ub354\ub9c1 \ubc29\uc2dd(SSR + CSR)\uc774\ub780 \ubb34\uc5c7\uc778\uac00\uc694?</p>  a) \uba3c\uc800 \ube48 \ud398\uc774\uc9c0\uac00 \ub80c\ub354\ub9c1\ub41c \ub2e4\uc74c, JS\uac00 \ubaa8\ub4e0 \ucf58\ud150\uce20\ub97c \ub85c\ub4dc\ud569\ub2c8\ub2e4.  b) \uc11c\ubc84\uac00 \uc644\uc804\ud788 \uc900\ube44\ub41c \ud398\uc774\uc9c0\ub97c \uc81c\uacf5\ud558\uace0, \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub294 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.  c) \uc11c\ubc84\uac00 \ube60\ub978 \uccab \ub85c\ub4dc\ub97c \uc704\ud574 \uc900\ube44\ub41c \ud398\uc774\uc9c0\ub97c \uc81c\uacf5\ud558\uace0, \uc774\ud6c4 \uc5c5\ub370\uc774\ud2b8\ub294 JS\ub97c \ud1b5\ud574 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4. <p>2. \ucd08\uae30 \uc11c\ubc84 \ub80c\ub354\ub9c1(SSR)\uc758 \uc8fc\uc694 \uc7a5\uc810\uc740 \ubb34\uc5c7\uc778\uac00\uc694?</p>  a) \uc11c\ubc84 \ubd80\ud558 \uac10\uc18c  b) \uc0ac\uc6a9\uc790\uc5d0\uac8c \ube60\ub978 \uccab \ucf58\ud150\uce20 \ub80c\ub354\ub9c1 \ubc0f \uc6b0\uc218\ud55c SEO \uc0c9\uc778 \uc0dd\uc131  c) JavaScript \ucf54\ub4dc \uac04\uc18c\ud654 <p>3. \uc608\uc81c\uc5d0\uc11c `@include('planets.partials.list')`\ub97c \uc0ac\uc6a9\ud558\ub294 \uc774\uc720\ub294 \ubb34\uc5c7\uc778\uac00\uc694?</p>  a) Blade\uc758 \ubc18\ubcf5\ubb38 \uc694\uad6c\uc0ac\ud56d\uc785\ub2c8\ub2e4.  b) \ucf54\ub4dc \uc7ac\uc0ac\uc6a9 \ubc0f \ubaa9\ub85d \ud45c\uc2dc \ub85c\uc9c1 \ubd84\ub9ac  c) \ud398\uc774\uc9c0 \uc77c\ubd80\uc758 \ube44\ub3d9\uae30 \ub85c\ub4dc\ub97c \uc704\ud574 <p>4. JavaScript \ucf54\ub4dc\uc5d0\uc11c \uce74\ub4dc HTML \uad6c\uc870\ub97c \uc911\ubcf5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud53c\ud560 \uc218 \uc788\ub294 \ub354 \ubc1c\uc804\ub41c \ubc29\ubc95\uc740 \ubb34\uc5c7\uc77c\uae4c\uc694?</p>  a) API\uc5d0 JSON \ub300\uc2e0, \uc774\ubbf8 \ub80c\ub354\ub9c1\ub41c \ub2e8\uc77c \uce74\ub4dc HTML\uc744 \uc694\uccad\ud569\ub2c8\ub2e4.  b) JavaScript \ud15c\ud50c\ub9bf \uc5d4\uc9c4(Mustache, Handlebars \ub4f1) \ub610\ub294 \ud504\ub808\uc784\uc6cc\ud06c(Vue, React)\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.  c) \ub450 \uac00\uc9c0 \ubaa8\ub450 \uc815\ub2f5\uc785\ub2c8\ub2e4. <p>5. API(`/api/planets`)\uc640 JavaScript \ucf54\ub4dc(`createPlanetCardHtml`)\uac00 \uc77c\uad00\ub41c \ub370\uc774\ud130/HTML\uc744 \uc0dd\uc131\ud558\ub294 \uac83\uc774 \uc65c \uc911\uc694\ud55c\uac00\uc694?</p>  a) \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 API\ub97c \ud1b5\ud574 \uc5c5\ub370\uc774\ud2b8\ub420 \ub54c \uc0ac\uc6a9\uc790\uac00 \uc778\ud130\ud398\uc774\uc2a4\uc758 \"\uc810\ud504\" \ub610\ub294 \ubcc0\uacbd\uc744 \ubcf4\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4.  b) Fetch API \uc0ac\uc591\uc758 \uc694\uad6c\uc0ac\ud56d\uc785\ub2c8\ub2e4.  c) \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 Laravel\uc774 500 \uc624\ub958\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ud655\uc778 <p>\ud83d\ude80 5\uc7a5 \uc644\ub8cc\ub97c \ucd95\ud558\ud569\ub2c8\ub2e4!</p> <p>Blade\uc758 \uae30\ucd08\ubd80\ud130 \ub300\ud654\ud615 \ud558\uc774\ube0c\ub9ac\ub4dc \ud398\uc774\uc9c0 \uc0dd\uc131\uc5d0 \uc774\ub974\uae30\uae4c\uc9c0 \uae34 \uc5ec\uc815\uc744 \uac70\ucce4\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4:</p> <ul> <li>Blade \ud15c\ud50c\ub9bf \ubc0f \ub808\uc774\uc544\uc6c3 \uc0dd\uc131 \ubc0f \uc0ac\uc6a9.</li> <li>CRUD \uc791\uc5c5\uc744 \uc704\ud55c \uc6f9 \uacbd\ub85c \ubc0f \ucee8\ud2b8\ub864\ub7ec \uad6c\uc131.</li> <li>CSRF \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6f9 \ud3fc \ubc0f AJAX \uc694\uccad \ubcf4\ud638.</li> <li>\ud398\uc774\uc9c0\ub97c \uc0c8\ub85c \uace0\uce58\uc9c0 \uc54a\uace0 API\uc640 \ub3d9\uc801\uc73c\ub85c \uc0c1\ud638 \uc791\uc6a9\ud558\ub3c4\ub85d JavaScript \ud1b5\ud569.</li> </ul> <p>\ub2f9\uc2e0\uc758 \ube44\ud589 \uc81c\uc5b4 \uc13c\ud130\ub294 \uc774\uc81c \uc644\ubcbd\ud558\uac8c \uc791\ub3d9\ud558\uace0, \uc548\uc804\ud558\uba70, \ub300\ud654\ud615\uc785\ub2c8\ub2e4. \uc774\uc81c \ub2e4\uc74c \ud070 \ub2e8\uacc4\uc778 \uc774 \uc811\uadfc \ubc29\uc2dd\uc744 \ub2e4\ub978 \ud504\ub808\uc784\uc6cc\ud06c\uc640 \ube44\uad50\ud558\uace0 \ud504\ub85c\ub355\uc158\uc5d0 \ub300\ud55c \ubaa8\ubc94 \uc0ac\ub840\ub97c \ubc30\uc6b0\ub294 \uc900\ube44\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/1/","title":"6.1\uc7a5: FastAPI\uc640 \ud504\ub860\ud2b8\uc5d4\ub4dc \uc5f0\uacb0\ud558\uae30","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 30\ubd84</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/1/#1","title":"1. '\ud558\uc774\ud37c \ub4dc\ub77c\uc774\ube0c'\ub85c\uc758 \ubcf5\uadc0: \ud504\ub85c\ud1a0\ucf5c \ube44\uad50","text":"<p>\uc9c0\ub09c \uc7a5\uc5d0\uc11c\ub294 \uc6b0\ub9ac \uad00\uc81c \uc13c\ud130(\ud504\ub860\ud2b8\uc5d4\ub4dc)\ub97c 'ISS'(Laravel API)\uc640 \ub3c4\ud0b9\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc6b0\ub9ac\ub294 \ucd08\uad11\uc18d \uc804\ud22c\uae30(FastAPI)\ub85c \ub3cc\uc544\uac00 \ub3d9\uc77c\ud55c \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uac83\uc785\ub2c8\ub2e4.</p> <p>\uc774 \uc7a5\uc758 \ubaa9\ud45c\ub294 \ub2e8\uc21c\ud788 \uc791\uc5c5\uc744 \ubc18\ubcf5\ud558\ub294 \uac83\uc774 \uc544\ub2c8\ub77c \ub450 \uac00\uc9c0 \uc811\uadfc \ubc29\uc2dd\uc744 \ube44\uad50\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub9c8\uce58 \ub3d9\uc77c\ud55c \ub4dc\ub798\uace4 \uc6b0\uc8fc\uc120\uc774 \uba3c\uc800 ISS\uc640 \ub3c4\ud0b9\ud55c \ub2e4\uc74c, \uc911\uad6d\uc758 '\ud188\uad81' \uc6b0\uc8fc\uc815\uac70\uc7a5\uacfc \ub3c4\ud0b9\ud558\ub294 \uac83\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ub3c4\ud0b9 \ub178\ub4dc\ub294 \ub3d9\uc77c\ud558\uc9c0\ub9cc(REST), \uc808\ucc28\uc640 \ud3ec\ud2b8 \uc704\uce58\uc5d0 \ubbf8\ubb18\ud55c \ucc28\uc774\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>\uacfc\uc815\uc740 \ub3d9\uc77c\ud569\ub2c8\ub2e4: \uc811\uadfc\ud558\uace0, \uc815\ub82c\ud558\uace0, \ub3c4\ud0b9\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc 'ISS'\uc758 \uacbd\uc6b0 <code>/api/planets</code> \ud3ec\ud2b8\ub97c \uc0ac\uc6a9\ud574\uc57c \ud588\uace0, '\ud188\uad81'\uc758 \uacbd\uc6b0 <code>/spaceships</code> \ud3ec\ud2b8\ub97c \uc0ac\uc6a9\ud574\uc57c \ud588\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac \uad00\uc81c \uc13c\ud130\uc758 \uc6b4\uc601\uc790\ub294 \uc784\ubb34\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uc218\ud589\ud558\uae30 \uc704\ud574 \uc774\ub7ec\ud55c \uc138\ubd80 \uc0ac\ud56d\uc744 \uc54c\uc544\uc57c \ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/1/#2-fastapi","title":"2. \uc804\ud22c\uae30(FastAPI) \ub3c4\ud0b9 \uc900\ube44","text":"<p>\uc774 \uc791\uc5c5\uc740 4.2\uc7a5\uc5d0\uc11c \uc774\ubbf8 \ud588\uc9c0\ub9cc, \ubaa8\ub4e0 \uac83\uc774 \uc81c\uc790\ub9ac\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778\ud574\ubd05\uc2dc\ub2e4.</p> <p>1\ub2e8\uacc4: FastAPI \uc11c\ubc84 \uc2dc\uc791</p> <ol> <li>Laravel \uc11c\ubc84\uac00 \uc2e4\ud589 \uc911\uc778 \uacbd\uc6b0 \uc911\uc9c0\ud569\ub2c8\ub2e4 (\ud3ec\ud2b8 \ucda9\ub3cc \ubc29\uc9c0).</li> <li>FastAPI \ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354\uc5d0\uc11c \ud130\ubbf8\ub110\uc744 \uc5fd\ub2c8\ub2e4.</li> <li> <p>\uac00\uc0c1 \ud658\uacbd\uc744 \ud65c\uc131\ud654\ud569\ub2c8\ub2e4:</p> <ul> <li>Windows: <code>.\\venv\\Scripts\\Activate.ps1</code></li> <li>macOS / Linux: <code>source venv/bin/activate</code></li> </ul> </li> <li> <p>\uc11c\ubc84\ub97c \uc2dc\uc791\ud569\ub2c8\ub2e4:     <pre><code>uvicorn main:app --reload\n</code></pre>     \uc11c\ubc84\ub294 <code>http://127.0.0.1:8000</code> \uc8fc\uc18c\uc5d0\uc11c \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> </li> </ol> <p>2\ub2e8\uacc4: <code>main.py</code>\uc5d0\uc11c CORS \uc124\uc815 \ud655\uc778</p> <p>FastAPI \ud504\ub85c\uc81d\ud2b8\uc5d0 \uc774\uc804\uc5d0 \ucd94\uac00\ud55c <code>CORSMiddleware</code>\uac00 \uc124\uc815\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ud504\ub860\ud2b8\uc5d4\ub4dc \uc8fc\uc18c\ub85c\ubd80\ud130\uc758 \uc694\uccad\uc744 \ud5c8\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. <pre><code># main.py\nfrom fastapi.middleware.cors import CORSMiddleware\n\n# ...\n\norigins = [\n    \"http://127.0.0.1:5500\", # Live Server \uc8fc\uc18c\n    \"null\", # file:///\uc744 \uc704\ud568\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n# ...\n</code></pre> \ubaa8\ub4e0 \uac83\uc774 \uc81c\uc790\ub9ac\uc5d0 \uc788\ub2e4\uba74, FastAPI \uc11c\ubc84\ub294 \uc644\uc804\ud788 \uc900\ube44\ub418\uc5c8\uc2b5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/1/#3-fastapi","title":"3. \uad00\uc81c \uc13c\ud130\uc758 '\uc548\ud14c\ub098'\ub97c FastAPI\ub85c \uc7ac\uc124\uc815","text":"<p>\uc774\uc81c \uac00\uc7a5 \ud765\ubbf8\ub85c\uc6b4 \ubd80\ubd84\uc785\ub2c8\ub2e4. JavaScript\uc5d0 FastAPI\uc640 \ub2e4\uc2dc \uc791\ub3d9\ud558\ub3c4\ub85d \ud574\uc57c \ud560 \ucd5c\uc18c\ud55c\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc785\ub2c8\ub2e4.</p> <p>1\ub2e8\uacc4: \uae30\ubcf8 URL \ubcc0\uacbd</p> <p><code>api.js</code>\ub97c \uc5f4\uace0 <code>API_BASE_URL</code>\uc744 \uc6d0\ub798 \uac12\uc73c\ub85c \ub418\ub3cc\ub9bd\ub2c8\ub2e4. <pre><code>// api.js\n\n// \uc6b0\ub9ac FastAPI API\uc758 URL\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // &lt;-- /api \uc5c6\uc74c!\n\n// ... \ub098\uba38\uc9c0 apiRequest \ucf54\ub4dc ...\n</code></pre></p> <p>2\ub2e8\uacc4: FastAPI \uc751\ub2f5 \uad6c\uc870\uc5d0 \ub9de\uac8c \uc870\uc815</p> <p>FastAPI\uc758 <code>GET /spaceships</code>\uac00 \ud398\uc774\uc9c0\ub124\uc774\uc158\uc774 \uc788\ub294 \uac1d\uccb4\uac00 \uc544\ub2cc \ub2e8\uc21c \ubc30\uc5f4\uc744 \ubc18\ud658\ud55c\ub2e4\ub294 \uac83\uc744 \uae30\uc5b5\ud569\uc2dc\ub2e4. \uc774\ub294 <code>fetchAndDisplayFleet</code> \ucf54\ub4dc\ub97c \uc6d0\ub798 \ud615\ud0dc\ub85c \ub418\ub3cc\ub824\uc57c \ud568\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4.</p> <p><code>app.js</code>\uc758 <code>fetchAndDisplayFleet</code> \ud568\uc218\ub97c \uc218\uc815\ud558\uc138\uc694: <pre><code>// app.js\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;FastAPI\uc5d0\uc11c \uc6d0\uaca9 \uce21\uc815 \ub370\uc774\ud130\ub97c \ub85c\ub4dc \uc911...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- /spaceships\ub85c \uc694\uccad\n\n        // FastAPI\uc5d0\uc11c\ub294 \ub2e8\uc21c \ubc30\uc5f4\uc774\ubbc0\ub85c .data \ud0a4\uac00 \ud544\uc694 \uc5c6\uc2b5\ub2c8\ub2e4!\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;\ub4f1\ub85d\ub41c \uae30\uae30\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.&lt;/p&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            // \uce74\ub4dc \uc0dd\uc131\uc744 \uc704\ud55c \uc6d0\ub798 \ud568\uc218\ub85c \ub418\ub3cc\ub9bd\ub2c8\ub2e4\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;\ud568\ub300 \ub85c\ub4dc \uc624\ub958: ${error.message}&lt;/p&gt;`;\n    }\n}\n\n// \ud568\uc120 \uce74\ub4dc \uc0dd\uc131\uc744 \uc704\ud55c \uc6d0\ub798 \ud568\uc218\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;\uc720\ud615: ${ship.type}&lt;/p&gt;\n        &lt;p&gt;\ubc1c\uc0ac \uc5f0\ub3c4: ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;\uc0c1\ud0dc: ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;\uc218\uc815&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;\ud3d0\uae30&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n</code></pre></p> <p>3\ub2e8\uacc4: CRUD \uc791\uc5c5 \ud655\uc778</p> <p>FastAPI\uc758 Pydantic \ubaa8\ub378\uacfc HTML \ud3fc \ud544\ub4dc(<code>name</code>, <code>type</code>, <code>launch_year</code>, <code>status</code>)\uac00 \uc77c\uce58\ud558\ubbc0\ub85c, <code>handleSaveShip</code> \ubc0f <code>handleDeleteShip</code> \ud568\uc218\ub294 <code>/spaceships</code> \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub300\uc0c1\uc73c\ub85c \uc774\ubbf8 \uc791\ub3d9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc788\uc73c\ubbc0\ub85c \ubcc0\uacbd \uc5c6\uc774 \uc791\ub3d9\ud574\uc57c \ud569\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/1/#4","title":"4. \ube44\uad50 \uacb0\uacfc: \ud504\ub860\ud2b8\uc5d4\ub4dc \uac1c\ubc1c\uc790\uc5d0\uac8c \uc774\uac83\uc740 \ubb34\uc5c7\uc744 \uc758\ubbf8\ud558\ub294\uac00?","text":"<ul> <li>REST\uc758 \ubcf4\ud3b8\uc131: \ubc31\uc5d4\ub4dc\uac00 REST \uc6d0\uce59\uc744 \ub530\ub978\ub2e4\uba74 \ud504\ub860\ud2b8\uc5d4\ub4dc\uc5d0\uac8c\ub294 \ubc31\uc5d4\ub4dc\uac00 \ubb34\uc5c7\uc73c\ub85c \uc791\uc131\ub418\uc5c8\ub294\uc9c0(PHP/Laravel \ub610\ub294 Python/FastAPI) \uc911\uc694\ud558\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc744 \ubd84\uba85\ud788 \ud655\uc778\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\ubb38\uc11c\uc758 \uc911\uc694\uc131: \uc8fc\uc694 \ucc28\uc774\uc810\uc740 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 URL\uacfc JSON \uc751\ub2f5 \uad6c\uc870\uc5d0 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc774 \ubc14\ub85c API \ubb38\uc11c\uc5d0 \uc124\uba85\ub418\uc5b4\uc57c \ud560 \ub0b4\uc6a9\uc785\ub2c8\ub2e4. \ubb38\uc11c\uac00 \uc5c6\ub2e4\uba74 \ud504\ub860\ud2b8\uc5d4\ub4dc \uac1c\ubc1c\uc790\ub294 '\ub9f9\ubaa9\uc801\uc73c\ub85c' \uc791\uc5c5\ud558\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4.</li> <li>\ud504\ub860\ud2b8\uc5d4\ub4dc\uc758 \uc720\uc5f0\uc131: JavaScript \ucf54\ub4dc\ub294 \ub2e4\uc591\ud55c \ub370\uc774\ud130 \ud615\uc2dd(\uc608: <code>data</code> \ud0a4\uac00 \uc788\ub294\uc9c0 \ub610\ub294 \ub2e8\uc21c \ubc30\uc5f4\uc778\uc9c0 \ud655\uc778\ud558\ub294 \ub4f1)\uc5d0 \uc27d\uac8c \uc801\uc751\ud560 \uc218 \uc788\uc744 \ub9cc\ud07c \ucda9\ubd84\ud788 \uc720\uc5f0\ud574\uc57c \ud569\ub2c8\ub2e4.</li> </ul> <p>\uacb0\ub860: REST API \uc791\uc5c5 \ub2a5\ub825\uc740 \ubaa8\ub4e0 \ud604\ub300\uc801\uc778 \ubc31\uc5d4\ub4dc\uc640\uc758 \uc0c1\ud638 \uc791\uc6a9 \ubb38\uc744 \uc5ec\ub294 \ubcf4\ud3b8\uc801\uc778 \uc5f4\uc1e0\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/1/#_1","title":"\uc815\ub9ac \ud034\uc988","text":"<p>1. \uc6b0\ub9ac Laravel API\uc640 FastAPI API \uac04\uc758 URL\uc5d0\uc11c \uc8fc\uc694 \ucc28\uc774\uc810\uc740 \ubb34\uc5c7\uc774\uc5c8\uc2b5\ub2c8\uae4c?</p>  a) \ub2e4\ub978 \ud3ec\ud2b8 \uc0ac\uc6a9  b) Laravel\uc5d0 `/api` \uc811\ub450\uc0ac \uc874\uc7ac  c) FastAPI\uc5d0\uc11c HTTPS \uc0ac\uc6a9 <p>2. Laravel\uc758 \ud398\uc774\uc9c0\ub124\uc774\uc158 \uc751\ub2f5\uc5d0\uc11c FastAPI\uc758 \ub2e8\uc21c \ubc30\uc5f4\ub85c \uc804\ud658\ud560 \ub54c JS \ucf54\ub4dc\uc5d0 \ud544\uc694\ud55c \uc8fc\uc694 \ubcc0\uacbd \uc0ac\ud56d\uc740 \ubb34\uc5c7\uc774\uc5c8\uc2b5\ub2c8\uae4c?</p>  a) `responseData.data`\uc5d0 \uc811\uadfc\ud558\ub294 \uac83\uc744 \uba48\ucd94\uace0 `responseData`\ub97c \uc9c1\uc811 \uc0ac\uc6a9  b) \ub2e4\ub978 `fetch` \uba54\uc11c\ub4dc \uc0ac\uc6a9  c) \ud5e4\ub354\uc5d0\uc11c `Content-Type` \ubcc0\uacbd <p>3. \uc774 \uc2e4\ud5d8\uc740 \ud504\ub860\ud2b8\uc5d4\ub4dc \uac1c\ubc1c\uc790\uc5d0\uac8c \ubb34\uc5c7\uc744 \uc99d\uba85\ud569\ub2c8\uae4c?</p>  a) PHP\uc640 Python\uc744 \ubaa8\ub450 \uc544\ub294 \uac83\uc774 \uc911\uc694\ud558\ub2e4  b) REST \uc6d0\uce59\uc744 \uc774\ud574\ud558\uace0 API \ubb38\uc11c\ub97c \uc77d\ub294 \ub2a5\ub825\uc774 \uc911\uc694\ud558\ub2e4  c) Laravel\uacfc FastAPI\ub294 \uc644\uc804\ud788 \ub3d9\uc77c\ud558\ub2e4 <p>4. CORS \uc124\uc815\uc740 \ub204\uad6c\uc758 \uc791\uc5c5\uc785\ub2c8\uae4c?</p>  a) \ud504\ub860\ud2b8\uc5d4\ub4dc \uac1c\ubc1c\uc790  b) \uc2dc\uc2a4\ud15c \uad00\ub9ac\uc790  c) \ubc31\uc5d4\ub4dc \uac1c\ubc1c\uc790 <p>5. FastAPI\uc5d0\uc11c\ub3c4 Laravel\ucc98\ub7fc \ud398\uc774\uc9c0\ub124\uc774\uc158\uc744 \uc0ac\uc6a9\ud588\ub2e4\uba74, \ud504\ub860\ud2b8\uc5d4\ub4dc\uc5d0\uc11c \ubb34\uc5c7\uc744 \ud574\uc57c \ud588\uc744\uae4c\uc694?</p>  a) \uc544\ubb34\uac83\ub3c4 \uc548 \ud574\ub3c4 \ub41c\ub2e4, \ucf54\ub4dc\uac00 \uc2a4\uc2a4\ub85c \uc791\ub3d9\ud588\uc744 \uac83\uc774\ub2e4  b) `data`(\ub610\ub294 \uc720\uc0ac\ud55c) \ud0a4\uc5d0\uc11c \ubc30\uc5f4\uc744 \ucd94\ucd9c\ud558\ub3c4\ub85d \ub85c\uc9c1\uc744 \ub2e4\uc2dc \ubcc0\uacbd\ud574\uc57c \ud55c\ub2e4  c) `fetch`\uc5d0\uc11c Axios \ub77c\uc774\ube0c\ub7ec\ub9ac\ub85c \uc804\ud658\ud574\uc57c \ud55c\ub2e4 \ud655\uc778 <p>\ud83d\ude80 \ucc55\ud130 \uc694\uc57d:</p> <p>\ub2f9\uc2e0\uc740 \uc131\uacf5\uc801\uc73c\ub85c CUC\uc758 \"\ud1b5\uc2e0 \ud504\ub85c\ud1a0\ucf5c\"\uc744 \uc804\ud658\ud588\uace0, \ub450 \uac00\uc9c0 \ub2e4\ub978 \ubc31\uc5d4\ub4dc \uc2dc\uc2a4\ud15c\uacfc\uc758 \uc791\uc5c5\uc744 \uc2e4\uc9c8\uc801\uc73c\ub85c \ube44\uad50\ud588\uc2b5\ub2c8\ub2e4.</p> <ul> <li>\u2705 \uc11c\ubc84 \uac04 \uc804\ud658\uc744 \uc704\ud55c <code>API_BASE_URL</code> \uc124\uc815 \uae30\uc220\uc744 \uc775\ud614\uc2b5\ub2c8\ub2e4.</li> <li>\u2705 \uc751\ub2f5 \uad6c\uc870(<code>data</code> \ub300 \ub2e8\uc21c \ubc30\uc5f4)\uc758 \uc911\uc694\uc131\uacfc \uc774\uc5d0 \ud504\ub860\ud2b8\uc5d4\ub4dc\ub97c \uc5b4\ub5bb\uac8c \uc801\uc6a9\ud574\uc57c \ud558\ub294\uc9c0 \uc774\ud574\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\u2705 \uc88b\uc740 \ud504\ub860\ud2b8\uc5d4\ub4dc \uac1c\ubc1c\uc790\ub294 \uc5b4\ub5a4 RESTful API\uc640\ub3c4 \uc791\uc5c5\ud560 \uc900\ube44\uac00 \ub418\uc5b4 \uc788\uc5b4\uc57c \ud558\uba70, \ud574\ub2f9 \ubb38\uc11c\ub97c \uc8fc\uc758 \uae4a\uac8c \uc5f0\uad6c\ud574\uc57c \ud55c\ub2e4\ub294 \uac83\uc744 \uae68\ub2ec\uc558\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\ubc94\uc6a9 \uc5f0\uacb0 \uae30\uc220\uc744 \uc2b5\ub4dd\ud588\uc2b5\ub2c8\ub2e4! \uc774\uc81c \uae30\ubcf8\uc801\uc778 \uc5f0\uacb0\uc744 \uc124\uc815\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc558\uc73c\ub2c8, CORS, \uc778\uc99d, \ubcf4\uc548\uacfc \uac19\uc740 \ub354 \ubcf5\uc7a1\ud55c \ud504\ub85c\ud1a0\ucf5c\uc5d0 \ub300\ud574 \uc774\uc57c\uae30\ud560 \ucc28\ub840\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li>FastAPI \uc11c\ubc84\uac00 \uc2e4\ud589 \uc911\uc778\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li><code>app.js</code>\uc758 <code>API_BASE_URL</code>\uacfc \uc751\ub2f5 \ucc98\ub9ac \ub85c\uc9c1\uc744 FastAPI\uc6a9\uc73c\ub85c \ub418\ub3cc\ub838\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li>\ud504\ub860\ud2b8\uc5d4\ub4dc\uac00 FastAPI \ubc31\uc5d4\ub4dc\uc640 \ubaa8\ub4e0 CRUD \uc791\uc5c5\uc744 \ub2e4\uc2dc \uc62c\ubc14\ub974\uac8c \uc218\ud589\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> </ul> <p>\u26a0\ufe0f \uc624\ub958 \ubc1c\uc0dd \uc2dc:</p> <ul> <li>CORS \uc624\ub958: FastAPI \uc11c\ubc84\uac00 \uc62c\ubc14\ub978 CORS \uc124\uc815\uc73c\ub85c \uc2e4\ud589 \uc911\uc778\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.</li> <li><code>Cannot read properties of undefined (reading 'length')</code> \uc624\ub958: <code>responseData</code>\uc5d0\uc11c <code>.data</code>\uc5d0 \ub300\ud55c \uc811\uadfc\uc744 \uc81c\uac70\ud558\ub294 \uac83\uc744 \uc78a\uc5c8\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>404 Not Found: <code>API_BASE_URL</code>\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624 \u2014 FastAPI\uc5d0\ub294 <code>/api</code> \uc811\ub450\uc0ac\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/2/","title":"\uc139\uc158 6.2: CORS \uc124\uc815","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 30\ubd84</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/2/#1-cors","title":"1. CORS: \ubb34\uc5c7\uc774\uba70 \uc65c \ud544\uc694\ud55c\uac00?","text":"<p>\uc6b0\ub9ac\uac00 \uc54c\uc544\ub0c8\ub4ef\uc774, CORS (Cross-Origin Resource Sharing)\ub294 \ube0c\ub77c\uc6b0\uc800\uc758 \ubcf4\uc548 \uc815\ucc45\uc785\ub2c8\ub2e4. \uc774\ub294 \uc545\uc131 \uc0ac\uc774\ud2b8 <code>evil-site.com</code>\uc774 \uc0ac\uc6a9\uc790 \ub300\uc2e0(\uc0ac\uc6a9\uc790\uc758 \ucfe0\ud0a4\ub97c \uc0ac\uc6a9\ud558\uc5ec) <code>your-bank.com</code>\uc5d0 \uc694\uccad\uc744 \ubcf4\ub0b4 \ub370\uc774\ud130\ub97c \ud6d4\uce58\ub294 \uc0c1\ud669\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4.</p> <p>\uc791\ub3d9 \ubc29\uc2dd\uc740?</p> <ol> <li>\ub3c4\uba54\uc778 <code>A</code>\uc758 \ud504\ub860\ud2b8\uc5d4\ub4dc (\ube0c\ub77c\uc6b0\uc800)\uac00 \ub3c4\uba54\uc778 <code>B</code>\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub824 \ud569\ub2c8\ub2e4.</li> <li>\ube0c\ub77c\uc6b0\uc800\ub294 \ub3c4\uba54\uc778 <code>B</code>\uc5d0 <code>OPTIONS</code> \uba54\uc11c\ub4dc\ub85c \ud2b9\ubcc4\ud55c \"\uc0ac\uc804\" \uc694\uccad(preflight request)\uc744 \ubcf4\ub0b4 \"\ub3c4\uba54\uc778 <code>B</code>\ub2d8, \ub3c4\uba54\uc778 <code>A</code>\uc778 \uc81c\uac00 <code>GET</code> \uc694\uccad\uc744 \ubcf4\ub0b4\ub3c4 \ub420\uae4c\uc694?\"\ub77c\uace0 \ubb3b\uc2b5\ub2c8\ub2e4.</li> <li>\ubc31\uc5d4\ub4dc (\ub3c4\uba54\uc778 <code>B</code>\uc758 \uc11c\ubc84)\ub294 \ud2b9\ubcc4\ud55c HTTP \ud5e4\ub354, \uc608\ub97c \ub4e4\uc5b4 <code>Access-Control-Allow-Origin: A</code>\ub85c \uc751\ub2f5\ud574\uc57c \ud569\ub2c8\ub2e4.</li> <li>\uc11c\ubc84 \uc751\ub2f5\uc774 \uc694\uccad\uc744 \ud5c8\uc6a9\ud558\uba74 \ube0c\ub77c\uc6b0\uc800\ub294 \uae30\ubcf8 <code>GET</code> \uc694\uccad\uc744 \ubcf4\ub0c5\ub2c8\ub2e4. \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uc73c\uba74 \uc694\uccad\uc744 \ucc28\ub2e8\ud558\uace0 CORS \uc624\ub958\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4.</li> </ol> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <p>\ud568\uc7a5\uc744 \uc678\uacc4 \uc2a4\ud14c\uc774\uc158\uc73c\ub85c \uc21c\uac04 \uc774\ub3d9\uc2dc\ud0a4\uae30 \uc804\uc5d0 (<code>POST</code> \uc694\uccad\uc744 \ubcf4\ub0b4\uae30 \uc804\uc5d0), \ud568\uc120(\ube0c\ub77c\uc6b0\uc800)\uc740 \ub4dc\ub860(<code>OPTIONS</code> \uc694\uccad)\uc744 \ubcf4\ub0b4 \"\uc2a4\ud14c\uc774\uc158, '\uc5d4\ud130\ud504\ub77c\uc774\uc988' \ud568\uc120\uc73c\ub85c\ubd80\ud130\uc758 \uc21c\uac04 \uc774\ub3d9\uc744 \ud5c8\uc6a9\ud558\uc2ed\ub2c8\uae4c?\"\ub77c\uace0 \ubb3b\uc2b5\ub2c8\ub2e4. \uc2a4\ud14c\uc774\uc158(API)\uc740 \"\uc608, '\uc5d4\ud130\ud504\ub77c\uc774\uc988'\ub85c\ubd80\ud130\uc758 \uc218\uc2e0\uc774 \ud5c8\uc6a9\ub429\ub2c8\ub2e4\"(<code>Access-Control-Allow-Origin</code> \ud5e4\ub354)\ub77c\uace0 \uc751\ub2f5\ud569\ub2c8\ub2e4. \uadf8 \ud6c4\uc5d0\uc57c \uc21c\uac04 \uc774\ub3d9\uc774 \uc2dc\uc791\ub429\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/2/#2-laravel-cors-laravel-11","title":"2. Laravel\uc5d0\uc11c CORS \uc124\uc815 (Laravel 11+\uc758 \ud604\ub300\uc801\uc778 \uc811\uadfc \ubc29\uc2dd)","text":"<p>Laravel 11+\uc5d0\uc11c\ub294 CORS \uad6c\uc131\uc774 \ud6e8\uc52c \uac04\ub2e8\ud574\uc84c\uc73c\uba70, \uae30\ubcf8 \uc124\uc815\ub9cc \ud544\uc694\ud558\ub2e4\uba74 <code>config/cors.php</code> \ud30c\uc77c\uc744 \uac8c\uc2dc\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uac83\uc740 <code>.env</code> \ud30c\uc77c\uacfc <code>bootstrap/app.php</code>\ub97c \ud1b5\ud574 \uad00\ub9ac\ub429\ub2c8\ub2e4.</p> <p>1\ub2e8\uacc4: \ud658\uacbd \ubcc0\uc218\ub97c \ud1b5\ud55c \uc124\uc815</p> <p><code>.env</code> \ud30c\uc77c\uc744 \uc5fd\ub2c8\ub2e4. Laravel\uc740 \uae30\ubcf8\uc801\uc73c\ub85c API\uc758 CORS \uad00\ub9ac\ub97c \uc704\ud55c \ubcc0\uc218\ub97c \uc774\ubbf8 \uc81c\uacf5\ud569\ub2c8\ub2e4.</p> <pre><code># .env\n\n# ... \uae30\ud0c0 \ubcc0\uc218\n\n# CORS\uac00 \uc801\uc6a9\ub420 \uacbd\ub85c\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4.\n# 'api/*' - \ubaa8\ub4e0 API \uacbd\ub85c\uc5d0 \ub300\ud55c \ud45c\uc900 \uac12.\nCORS_PATHS=api/*\n\n# \ud5c8\uc6a9\ub41c \ucd9c\ucc98(\ub3c4\uba54\uc778)\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4.\n# \uac1c\ubc1c\uc6a9\uc73c\ub85c \ud504\ub860\ud2b8\uc5d4\ub4dc\uc758 \uc8fc\uc18c\ub97c \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624.\n# \uc27c\ud45c\ub85c \uad6c\ubd84\ud560 \uc218 \uc788\uc73c\uba70 \uacf5\ubc31\uc740 \uc5c6\uc2b5\ub2c8\ub2e4.\nCORS_ALLOWED_ORIGINS=http://localhost:5500,http://127.0.0.1:5500\n\n# \uae30\ud0c0 \uc124\uc815 (\uc77c\ubc18\uc801\uc73c\ub85c \uae30\ubcf8\uac12 \uc720\uc9c0 \uac00\ub2a5)\nCORS_ALLOWED_METHODS=*\nCORS_ALLOWED_HEADERS=*\nCORS_EXPOSED_HEADERS=\nCORS_MAX_AGE=0\nCORS_SUPPORTS_CREDENTIALS=false\n</code></pre> <p>\uc8fc\uc694 \ubcc0\uc218:</p> <ul> <li><code>CORS_ALLOWED_ORIGINS</code>: \uac00\uc7a5 \uc911\uc694\ud55c \ubcc0\uc218. \uc5ec\uae30\uc5d0 \uc694\uccad\uc774 \ud5c8\uc6a9\ub418\ub294 \ub3c4\uba54\uc778\ub4e4\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4. <code>*</code>\ub294 \ubaa8\ub450\uc5d0\uac8c \ud5c8\uc6a9\ud558\uc9c0\ub9cc, \uc774\ub294</li> </ul> <p>\ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c\ub294 \uadf9\ud788 \uc548\uc804\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.</p> <ul> <li><code>CORS_PATHS</code>: \uc774 \uaddc\uce59\uc774 \uc801\uc6a9\ub418\ub294 \uacbd\ub85c. <code>api/*</code>\ub294 <code>/api/</code>\ub85c \uc2dc\uc791\ud558\ub294 \ubaa8\ub4e0 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4.</li> </ul> <p><code>php artisan serve</code>\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, <code>.env</code> \ubcc0\uacbd \ud6c4 \uc11c\ubc84\ub97c \uc7ac\uc2dc\uc791\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \ubcc0\uacbd \uc0ac\ud56d\uc740 \uc790\ub3d9\uc73c\ub85c \ubc18\uc601\ub429\ub2c8\ub2e4.</p> <p>2\ub2e8\uacc4 (\uc120\ud0dd \uc0ac\ud56d): <code>bootstrap/app.php</code>\uc758 \uace0\uae09 \uc124\uc815</p> <p>\ub354 \ubcf5\uc7a1\ud55c \ub85c\uc9c1(\uc608: \ud328\ud134\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub3c4\uba54\uc778 \ud5c8\uc6a9)\uc774 \ud544\uc694\ud55c \uacbd\uc6b0, \uad6c\uc131 \ud30c\uc77c\uc744 \uac8c\uc2dc\ud558\uace0 \ubbf8\ub4e4\uc6e8\uc5b4\ub97c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 95%\uc758 \uacbd\uc6b0\uc5d0\ub294 <code>.env</code> \ud30c\uc77c\ub9cc\uc73c\ub85c \ucda9\ubd84\ud569\ub2c8\ub2e4.</p> <p><code>php artisan install:api</code> \uba85\ub839\uc5b4\ub294 <code>bootstrap/app.php</code> \ud30c\uc77c\uc5d0\uc11c API \uacbd\ub85c\uc5d0 \ub300\ud55c \uae30\ubcf8 CORS \ubbf8\ub4e4\uc6e8\uc5b4\ub97c \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:</p> <pre><code>// bootstrap/app.php\n-&gt;withMiddleware(function (Middleware $middleware) {\n    // \uc774 \uc904\uc740 install:api \uba85\ub839\uc5b4\ub97c \ud1b5\ud574 \uc774\ubbf8 \ucd94\uac00\ub420 \uac83\uc785\ub2c8\ub2e4.\n    // \uc774\ub294 \ubaa8\ub4e0 API \uacbd\ub85c\uc5d0 \ub300\ud55c CORS \ucc98\ub9ac\ub97c \ud65c\uc131\ud654\ud569\ub2c8\ub2e4.\n    $middleware-&gt;api(base_path('routes/api.php'));\n})\n</code></pre> <p><code>-&gt;api()</code> \ub0b4\ubd80\uc5d0\uc11c Laravel\uc740 \uc774\ubbf8 <code>.env</code> \ud30c\uc77c\uc5d0\uc11c \uc124\uc815\uc744 \uc77d\ub294 <code>HandleCors</code> \ubbf8\ub4e4\uc6e8\uc5b4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uac83\uc774 \uac04\ub2e8\ud558\uace0 \uc989\uc2dc \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4.</p> <p>\u26a0\ufe0f \uc911\uc694! API\uac00 \uc644\uc804\ud788 \uacf5\uac1c\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub2e4\uba74 \ud504\ub85c\ub355\uc158 \uc11c\ubc84\uc5d0\uc11c <code>CORS_ALLOWED_ORIGINS='*'</code>\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. \uc774\ub294 \uc7a0\uc7ac\uc801\uc778 \ucde8\uc57d\uc810\uc744 \uc57c\uae30\ud569\ub2c8\ub2e4. \ud56d\uc0c1 \ud504\ub860\ud2b8\uc5d4\ub4dc\uc758 \ud2b9\uc815 \ub3c4\uba54\uc778\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/2/#3-fastapi-cors","title":"3. FastAPI\uc5d0\uc11c CORS \uc124\uc815","text":"<p>FastAPI\ub294 CORS\uc640 \uac19\uc740 \uad50\ucc28 \uc791\uc5c5\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \ubbf8\ub4e4\uc6e8\uc5b4 \uac1c\ub150\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</p> <p>1\ub2e8\uacc4: \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uba54\uc778 \ud30c\uc77c \uc5f4\uae30</p> <p>\uc774 \ud30c\uc77c\uc740 FastAPI \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 \ud30c\uc77c\uc785\ub2c8\ub2e4 (\uc77c\ubc18\uc801\uc73c\ub85c <code>main.py</code>).</p> <p>2\ub2e8\uacc4: <code>CORSMiddleware</code> \ucd94\uac00</p> <p>FastAPI\ub294 CORS \uc124\uc815\uc744 \uc704\ud55c \uc900\ube44\ub41c \ubbf8\ub4e4\uc6e8\uc5b4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware # 1. \ubbf8\ub4e4\uc6e8\uc5b4 \uc784\ud3ec\ud2b8\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"API for managing planets in the galaxy\",\n    version=\"1.0.0\"\n)\n\n# 2. \ud5c8\uc6a9\ub41c \ucd9c\ucc98(origins) \ubaa9\ub85d\norigins = [\n    \"http://localhost:5500\",\n    \"http://127.0.0.1:5500\",\n    # \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c\ub294 \uc5ec\uae30\uc5d0 \ud504\ub860\ud2b8\uc5d4\ub4dc\uc758 \ub3c4\uba54\uc778\uc774 \uc62c \uac83\uc785\ub2c8\ub2e4.\n    # \"https://my-awesome-app.com\",\n]\n\n# 3. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ubbf8\ub4e4\uc6e8\uc5b4 \ucd94\uac00\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # \uc9c0\uc815\ub41c \ucd9c\ucc98 \ud5c8\uc6a9\n    allow_credentials=True, # \ucfe0\ud0a4 \ud5c8\uc6a9 (\uc778\uc99d\uc5d0 \ud544\uc694\ud560 \uc218 \uc788\uc74c)\n    allow_methods=[\"*\"],    # \ubaa8\ub4e0 \uba54\uc11c\ub4dc \ud5c8\uc6a9 (GET, POST \ub4f1)\n    allow_headers=[\"*\"],    # \ubaa8\ub4e0 \ud5e4\ub354 \ud5c8\uc6a9\n)\n\n# ... \uc5ec\uae30\uc5d0 \ub77c\uc6b0\ud130 \ubc0f \ub098\uba38\uc9c0 \ucf54\ub4dc\n</code></pre> <p>3\ub2e8\uacc4: Uvicorn \uc11c\ubc84 \uc7ac\uc2dc\uc791 Uvicorn \uc11c\ubc84\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ucf54\ub4dc \ubcc0\uacbd \uc2dc \uc790\ub3d9\uc73c\ub85c \uc7ac\uc2dc\uc791\ub429\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \uc218\ub3d9\uc73c\ub85c \uc7ac\uc2dc\uc791\ud558\uc2ed\uc2dc\uc624. \uc774\uc81c FastAPI \uc11c\ubc84\ub294 \ud504\ub860\ud2b8\uc5d4\ub4dc\ub85c\ubd80\ud130\uc758 <code>OPTIONS</code> \uc694\uccad\uc5d0 \uc62c\ubc14\ub974\uac8c \uc751\ub2f5\ud560 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/2/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. \ube0c\ub77c\uc6b0\uc800\uac00 CORS \ud655\uc778\uc744 \uc704\ud574 \uc8fc\uc694 \uc694\uccad \uc804\uc5d0 \ubcf4\ub0b4\ub294 \uc694\uccad\uc740 \ub2e4\uc74c \uc911 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) CHECK \uc694\uccad  b) Preflight \uc694\uccad  c) Handshake \uc694\uccad <p>2. \ucd5c\uc2e0 Laravel (11+)\uc5d0\uc11c CORS\uc758 \uae30\ubcf8 \uc124\uc815\uc740 \uc8fc\ub85c \ub2e4\uc74c \uc911 \uc5b4\ub514\uc5d0\uc11c \uc9c0\uc815\ub429\ub2c8\uae4c?</p>  a) bootstrap/app.php \ud30c\uc77c  b) .env \ud30c\uc77c  c) routes/api.php \ud30c\uc77c <p>3. FastAPI\uc5d0\uc11c CORS \uc124\uc815\uc744 \uc704\ud574 \uc0ac\uc6a9\ub418\ub294 \uac83\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) @app.cors() \ub370\ucf54\ub808\uc774\ud130  b) \ub0b4\uc7a5 Security \ud074\ub798\uc2a4  c) \ubbf8\ub4e4\uc6e8\uc5b4 (`Middleware`) <p>4. \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c CORS_ALLOWED_ORIGINS\uc758 \uac12\uc73c\ub85c \uac00\uc7a5 \uc548\uc804\ud55c \uac83\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?</p>  a) CORS_ALLOWED_ORIGINS='*'  b) CORS_ALLOWED_ORIGINS=http://my-frontend.com,https://my-frontend.com`  c) \uc774 \ubcc0\uc218\ub97c \uc124\uc815\ud558\uc9c0 \uc54a\uc74c \ud655\uc778\ud558\uae30 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\uc774\uc81c \ub2f9\uc2e0\uc740 \"\uc131\uac04 \ud1b5\uc2e0 \uc678\uad50\uad00\"\uc774 \ub418\uc5c8\uc2b5\ub2c8\ub2e4! \uadc0\ud558\uc758 API\ub294 \uc774\uc81c \ud604\ub300\uc801\uc774\uace0 \uc62c\ubc14\ub978 \uc811\uadfc \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc678\ubd80 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \uc548\uc804\ud558\uac8c \uc0c1\ud638 \uc791\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. - \u2705 CORS \ubc0f \uc0ac\uc804 \uc694\uccad\uc758 \uc791\ub3d9 \uc6d0\ub9ac\ub97c \uc774\ud574\ud588\uc2b5\ub2c8\ub2e4. - \ud83d\udd27 <code>.env</code> \ud30c\uc77c\uc744 \ud1b5\ud574 Laravel 11+\uc6a9 CORS\ub97c \uc124\uc815\ud588\uc2b5\ub2c8\ub2e4. - \u2699\ufe0f <code>CORSMiddleware</code>\ub97c \uc0ac\uc6a9\ud558\uc5ec FastAPI\uc6a9 CORS\ub97c \uc124\uc815\ud588\uc2b5\ub2c8\ub2e4. - \ud83d\udef0\ufe0f \ud504\ub7f0\ud2b8\uc5d4\ub4dc\uc640 \ubc31\uc5d4\ub4dc \uac04\uc758 \uc5f0\uacb0\uc744 \uc131\uacf5\uc801\uc73c\ub85c \uc124\uc815\ud588\uc2b5\ub2c8\ub2e4.</p> <p>\ud1b5\uc2e0 \ube0c\ub9bf\uc9c0\uac00 \uad6c\ucd95\ub418\uc5c8\uace0 \ubcf4\ud638\ub429\ub2c8\ub2e4. \uc774\uc81c \uc774 \ube0c\ub9bf\uc9c0\ub97c \ud1b5\ud574 \"\uc778\uac00\ub41c \uc9c1\uc6d0\"\ub9cc \ud5c8\uc6a9\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc0dd\uac01\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li>\uc131\uacf5\uc758 \uc8fc\uc694 \uae30\uc900\uc740 \ud504\ub7f0\ud2b8\uc5d4\ub4dc\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uc694\uccad\ud560 \ub54c \ube0c\ub77c\uc6b0\uc800 \ucf58\uc194\uc5d0 CORS \uc624\ub958\uac00 \uc5c6\ub294 \uac83\uc785\ub2c8\ub2e4.</li> <li>\uac1c\ubc1c\uc790 \ub3c4\uad6c\uc758 \"\ub124\ud2b8\uc6cc\ud06c\" \ud0ed\uc5d0\uc11c API\uc5d0 \ub300\ud55c \ub450 \uac00\uc9c0 \uc694\uccad\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4: \uccab \ubc88\uc9f8\ub294 <code>OPTIONS</code> \uba54\uc11c\ub4dc (\uc0c1\ud0dc 200/204)\ub97c \uc0ac\uc6a9\ud558\ub294 \uc694\uccad\uc774\uace0, \ub450 \ubc88\uc9f8\ub294 <code>GET</code> \uba54\uc11c\ub4dc (\uc0c1\ud0dc 200)\ub97c \uc0ac\uc6a9\ud558\ub294 \uc694\uccad\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 CORS \uc791\ub3d9 \ubc29\uc2dd\uc758 \uba85\ud655\ud55c \uc99d\uac70\uc785\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/3/","title":"6.3\uc7a5: \uae30\ubcf8 \uc778\uc99d","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 1\uc2dc\uac04</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/3/#1-api","title":"1. API \uc778\uc99d: \uc784\ubb34 \ud1b5\uc81c \uc13c\ud130 \uc785\uc7a5 \ud5c8\uac00\uc99d","text":"<p>\uc778\uc99d \u2014 \uc0ac\uc6a9\uc790 \uc2e0\uc6d0\uc744 \ud655\uc778\ud558\ub294 \uacfc\uc815\uc785\ub2c8\ub2e4. \uc138\uc158 \ubc0f \ucfe0\ud0a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uc6f9\uc0ac\uc774\ud2b8\uc640 \ub2ec\ub9ac, \uc2a4\ud14c\uc774\ud2b8\ub9ac\uc2a4(\uc0c1\ud0dc \ube44\uc800\uc7a5) API\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.</p> <p>\uacfc\uc815\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:</p> <ol> <li>\uc0ac\uc6a9\uc790\ub294 \uc790\uc2e0\uc758 \ub85c\uadf8\uc778 \uc815\ubcf4\uc640 \ube44\ubc00\ubc88\ud638\ub97c \ud2b9\uc815 \uc5d4\ub4dc\ud3ec\uc778\ud2b8(\uc608: <code>/login</code>)\ub85c \uc804\uc1a1\ud569\ub2c8\ub2e4.</li> <li>\uc11c\ubc84\ub294 \uc774\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uac83\uc774 \uc62c\ubc14\ub974\uba74 \uc11c\ubc84\ub294 \uace0\uc720\ud558\uac8c \uc554\ud638\ud654\ub41c \ud1a0\ud070(\uae34 \ubb38\uc790\uc5f4)\uc744 \uc0dd\uc131\ud558\uc5ec \ub2e4\uc2dc \ubcf4\ub0c5\ub2c8\ub2e4.</li> <li>\ubcf4\ud638\ub41c \ub9ac\uc18c\uc2a4(\uc608: <code>POST /planets</code>)\uc5d0 \ub300\ud55c \ud6c4\uc18d \uc694\uccad \uc2dc \uc0ac\uc6a9\uc790\ub294 <code>Authorization</code> \ud5e4\ub354\uc5d0 \uc774 \ud1a0\ud070\uc744 \ucca8\ubd80\ud574\uc57c \ud569\ub2c8\ub2e4.</li> <li>\uc11c\ubc84\ub294 \ud1a0\ud070\uc758 \uc720\ud6a8\uc131\uc744 \ud655\uc778\ud558\uace0, \ud1a0\ud070\uc774 \uc62c\ubc14\ub974\uba74 \uc694\uccad\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4.</li> </ol> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <ul> <li>\ub85c\uadf8\uc778/\ube44\ubc00\ubc88\ud638 = \ucd9c\uc785\uc99d \ubc1c\uae09\uc744 \uc704\ud55c \uc0dd\uccb4 \uc2a4\uce94.</li> <li>\ud1a0\ud070 = \uc784\ubb34 \ud1b5\uc81c \uc13c\ud130 \uc785\uad6c\uc5d0\uc11c \ubc1b\ub294 \uc804\uc790 \ucd9c\uc785\uc99d(ID \uce74\ub4dc).</li> <li><code>Authorization: Bearer &lt;\ud1a0\ud070&gt;</code> \ud5e4\ub354 = \ubaa8\ub4e0 \ubcf4\ud638\ub41c \ubb38\uc5d0\uc11c \ub9ac\ub354\uae30\uc5d0 \ucd9c\uc785\uc99d\uc744 \uac16\ub2e4 \ub311\ub2c8\ub2e4.</li> <li>\ubcf4\ud638\ub41c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 (POST, PUT, DELETE) = \uc11c\ubc84\uc2e4 \ub610\ub294 \ubc1c\uc0ac \uc81c\uc5b4 \ucf58\uc194\ub85c \ud5a5\ud558\ub294 \ubb38.</li> </ul>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/3/#2-laravel-sanctum","title":"2. Laravel\uc5d0\uc11c\uc758 \uc778\uc99d: Sanctum","text":"<p>Laravel\uc740 API \uc778\uc99d\uc744 \uc704\ud55c \uc6b0\uc544\ud55c \uc194\ub8e8\uc158\uc778 Laravel Sanctum\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 SPA(\ub2e8\uc77c \ud398\uc774\uc9c0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158), \ubaa8\ubc14\uc77c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc0f \uac04\ub2e8\ud55c \ud1a0\ud070 \uae30\ubc18 API\uc5d0 \uc774\uc0c1\uc801\uc785\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 1: Sanctum \uc124\uce58 \ubc0f \uad6c\uc131</p> <p>Sanctum\uc740 \ud45c\uc900 Laravel \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc774\ubbf8 \uc124\uce58\ub418\uc5b4 \uc788\uc9c0\ub9cc, \uad6c\uc131\uc744 \ud655\uc778\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.</p> <ol> <li>\uad6c\uc131 \ubc1c\ud589 (\uc544\uc9c1 \ud558\uc9c0 \uc54a\uc558\ub2e4\uba74): <pre><code>php artisan vendor:publish --provider=\"Laravel\\Sanctum\\SanctumServiceProvider\"\n</code></pre></li> <li>\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc2e4\ud589 (<code>personal_access_tokens</code> \ud14c\uc774\ube14 \uc0dd\uc131): <pre><code>php artisan migrate\n</code></pre></li> <li>User \ubaa8\ub378\uc5d0 \ud2b8\ub808\uc774\ud2b8 \ucd94\uac00: <code>app/Models/User.php</code>\ub97c \uc5f4\uace0 <code>HasApiTokens</code> \ud2b8\ub808\uc774\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.     <pre><code>// app/Models/User.php\nuse Laravel\\Sanctum\\HasApiTokens;\n\nclass User extends Authenticatable\n{\n    use HasApiTokens, HasFactory, Notifiable;\n    // ...\n}\n</code></pre></li> </ol> <p>\ub2e8\uacc4 2: \ud1a0\ud070 \ubc1c\uae09\uc744 \uc704\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc0dd\uc131 \uc0ac\uc6a9\uc790\uac00 \ub85c\uadf8\uc778/\ube44\ubc00\ubc88\ud638\ub97c \ubcf4\ub0bc \ub77c\uc6b0\ud2b8\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.</p> <p><code>routes/api.php</code>\uc5d0 \ucd94\uac00: <pre><code>// routes/api.php\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Models\\User;\nuse Illuminate\\Validation\\ValidationException;\n\nRoute::post('/login', function (Request $request) {\n    $request-&gt;validate([\n        'email' =&gt; 'required|email',\n        'password' =&gt; 'required',\n    ]);\n\n    $user = User::where('email', $request-&gt;email)-&gt;first();\n\n    if (! $user || ! Hash::check($request-&gt;password, $user-&gt;password)) {\n        throw ValidationException::withMessages([\n            'email' =&gt; ['\ub85c\uadf8\uc778 \uc815\ubcf4\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4.'],\n        ]);\n    }\n\n    // \ud1a0\ud070 \ubc18\ud658\n    return response()-&gt;json([\n        'token' =&gt; $user-&gt;createToken('api-token')-&gt;plainTextToken\n    ]);\n});\n</code></pre></p> <p>\ud14c\uc2a4\ud2b8\ub97c \uc704\ud574 \uc2dc\ub354(seeder) \ub610\ub294 Tinker\ub97c \ud1b5\ud574 \uc0ac\uc6a9\uc790\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 3: \ub77c\uc6b0\ud2b8 \ubcf4\ud638 \uc774\uc81c CRUD \uc791\uc5c5\uc744 \ubcf4\ud638\ud558\uaca0\uc2b5\ub2c8\ub2e4. <code>routes/api.php</code>\ub97c \ubcc0\uacbd\ud569\ub2c8\ub2e4:</p> <pre><code>// routes/api.php\nuse App\\Http\\Controllers\\PlanetController;\n\n// \ud589\uc131 \ubcf4\uae30\ub97c \uc704\ud55c \uacf5\uac1c \ub77c\uc6b0\ud2b8\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// \ubcf4\ud638\ub41c \ub77c\uc6b0\ud2b8 \uadf8\ub8f9\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n\n    // \ub85c\uadf8\uc544\uc6c3(\ud1a0\ud070 \uc0ad\uc81c)\uc744 \uc704\ud55c \ub77c\uc6b0\ud2b8\n    Route::post('/logout', function (Request $request) {\n        $request-&gt;user()-&gt;currentAccessToken()-&gt;delete();\n        return response()-&gt;json(['message' =&gt; '\uc131\uacf5\uc801\uc73c\ub85c \ub85c\uadf8\uc544\uc6c3\ub418\uc5c8\uc2b5\ub2c8\ub2e4'], 200);\n    });\n});\n</code></pre> <p>\ubbf8\ub4e4\uc6e8\uc5b4 <code>auth:sanctum</code>\uc740 <code>Authorization</code> \ud5e4\ub354\uc5d0 \uc720\ud6a8\ud55c \ud1a0\ud070\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uac83\uc785\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/3/#3-fastapi-oauth2-jwt","title":"3. FastAPI\uc5d0\uc11c\uc758 \uc778\uc99d: OAuth2 \ubc0f JWT","text":"<p>FastAPI\uc5d0\ub294 \ub0b4\uc7a5\ub41c \uc778\uc99d \uc2dc\uc2a4\ud15c\uc774 \uc5c6\uc9c0\ub9cc, \uc774\ub97c \uad6c\ud604\ud558\uae30 \uc704\ud55c \uac15\ub825\ud55c \ub3c4\uad6c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc2e4\uc0c1\uc758 \ud45c\uc900\uc740 JWT \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud55c OAuth2\uc785\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 1: \uc885\uc18d\uc131 \uc124\uce58 <pre><code>pip install \"python-jose[cryptography]\" \"passlib[bcrypt]\" \"python-multipart\"\n</code></pre></p> <ul> <li><code>python-jose</code>: JWT \ud1a0\ud070 \uc0dd\uc131 \ubc0f \ud655\uc778\uc6a9.</li> <li><code>passlib</code>: \ube44\ubc00\ubc88\ud638 \ud574\uc2f1 \ubc0f \ud655\uc778\uc6a9.</li> <li><code>python-multipart</code>: \ud3fc \ub370\uc774\ud130(<code>username</code> \ubc0f <code>password</code>) \ucc98\ub9ac\uc6a9.</li> </ul> <p>\ub2e8\uacc4 2: \ubcf4\uc548 \ubaa8\ub4c8 \uc0dd\uc131 (<code>security.py</code>) \ubaa8\ub4e0 \uc778\uc99d \ub85c\uc9c1\uc744 \ubcc4\ub3c4\uc758 \ud30c\uc77c\ub85c \ubd84\ub9ac\ud558\ub294 \uac83\uc774 \uc88b\uc740 \ubc29\ubc95\uc785\ub2c8\ub2e4.</p> <p><code>security.py</code> \ud30c\uc77c \uc0dd\uc131:</p> <pre><code># security.py\nfrom fastapi import Depends, HTTPException, status\nfrom fastapi.security import OAuth2PasswordBearer\nfrom jose import JWTError, jwt\nfrom passlib.context import CryptContext\nfrom datetime import datetime, timedelta, timezone\n\n# --- \uc124\uc815 ---\nSECRET_KEY = \"your-super-secret-key-that-is-long-and-random\" # \u26a0\ufe0f \ubcf8\uc778\uc758 \ud0a4\ub85c \uad50\uccb4\ud558\uc138\uc694!\nALGORITHM = \"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES = 30\n\n# --- \uc720\ud2f8\ub9ac\ud2f0 ---\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/api/v1/login\")\n\n# --- \ud568\uc218 ---\ndef verify_password(plain_password, hashed_password):\n    return pwd_context.verify(plain_password, hashed_password)\n\ndef get_password_hash(password):\n    return pwd_context.hash(password)\n\ndef create_access_token(data: dict):\n    to_encode = data.copy()\n    expire = datetime.now(timezone.utc) + timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    to_encode.update({\"exp\": expire})\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n    return encoded_jwt\n\n# --- \ud1a0\ud070 \ud655\uc778\uc744 \uc704\ud55c \uc758\uc874\uc131 \ud568\uc218 ---\ndef get_current_user(token: str = Depends(oauth2_scheme)):\n    credentials_exception = HTTPException(\n        status_code=status.HTTP_401_UNAUTHORIZED,\n        detail=\"\ub85c\uadf8\uc778 \uc815\ubcf4\ub97c \ud655\uc778\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4\",\n        headers={\"WWW-Authenticate\": \"Bearer\"},\n    )\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\n        username: str = payload.get(\"sub\")\n        if username is None:\n            raise credentials_exception\n    except JWTError:\n        raise credentials_exception\n    # \uc5ec\uae30\uc11c DB\uc5d0\uc11c \uc0ac\uc6a9\uc790\ub97c \ubc18\ud658\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc9c0\uae08\uc740 \ub2e8\uc21c\ud788 \uc774\ub984\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4\n    return {\"username\": username}\n</code></pre> <p>\ub2e8\uacc4 3: <code>main.py</code>\uc5d0 \ud1b5\ud569 \uc774\uc81c \uc774\uac83\uc744 \uc6b0\ub9ac \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc5f0\uacb0\ud558\uaca0\uc2b5\ub2c8\ub2e4.</p> <ol> <li> <p><code>/login</code> \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc0dd\uc131: <pre><code># main.py\nfrom fastapi.security import OAuth2PasswordRequestForm\nfrom fastapi import Depends, APIRouter\nfrom . import security # \uc6b0\ub9ac \ubaa8\ub4c8\uc744 \uc784\ud3ec\ud2b8\ud569\ub2c8\ub2e4\n\n# ... \ub2f9\uc2e0\uc758 FastAPI \ucf54\ub4dc ...\nrouter = APIRouter(prefix=\"/api/v1\")\n\n@router.post(\"/login\")\ndef login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):\n    # \uc5ec\uae30\uc5d0 DB \uc0ac\uc6a9\uc790 \uac80\uc99d \ub85c\uc9c1\uc774 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4\n    # \uc608\ub97c \ub4e4\uc5b4, \ud558\ub098\uc758 \ud14c\uc2a4\ud2b8 \uc0ac\uc6a9\uc790\uac00 \uc788\uc2b5\ub2c8\ub2e4\n    is_user_valid = (form_data.username == \"testuser\" and\n                     security.verify_password(\"testpass\", security.get_password_hash(\"testpass\")))\n\n    if not is_user_valid:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"\uc798\ubabb\ub41c \uc0ac\uc6a9\uc790 \uc774\ub984 \ub610\ub294 \ube44\ubc00\ubc88\ud638\",\n        )\n    access_token = security.create_access_token(data={\"sub\": form_data.username})\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\n\n# ...\napp.include_router(router)\n</code></pre></p> </li> <li> <p>\uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubcf4\ud638:</p> <p>\uc6b0\ub9ac \uc758\uc874\uc131 <code>get_current_user</code>\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. <pre><code># main.py \ub610\ub294 \ub2f9\uc2e0\uc758 \ud589\uc131 \ub77c\uc6b0\ud130\uc5d0\uc11c\n\n@router.post(\"/planets\", status_code=status.HTTP_201_CREATED)\ndef create_planet(\n    planet: PlanetCreate,\n    current_user: dict = Depends(security.get_current_user) # &lt;-- \ubcf4\ud638!\n):\n    // \ud589\uc131 \uc0dd\uc131 \ub85c\uc9c1...\n    print(f\"\uc0ac\uc6a9\uc790 {current_user['username']}\uc774(\uac00) \ud589\uc131\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.\")\n    // ...\n    return new_planet\n\n// PUT \ubc0f DELETE\ub3c4 \ubcf4\ud638\ud569\ub2c8\ub2e4\n</code></pre></p> </li> </ol>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/3/#4","title":"4. \ud504\ub7f0\ud2b8\uc5d4\ub4dc\uc5d0\uc11c \ud1a0\ud070 \uc0ac\uc6a9","text":"<p>\uc774\uc81c \uc6b0\ub9ac \ud504\ub7f0\ud2b8\uc5d4\ub4dc\ub294 \uba3c\uc800 \ud1a0\ud070\uc744 \uc5bb\uace0, \uadf8\uac83\uc744 \uc800\uc7a5\ud558\uace0(\uc608: <code>localStorage</code>\uc5d0), \uac01 \ubcf4\ud638\ub41c \uc694\uccad\uc5d0 \ucca8\ubd80\ud574\uc57c \ud569\ub2c8\ub2e4.</p> <p>JavaScript (<code>fetch</code>) \uc608\uc2dc: <pre><code>// 1. \ub85c\uadf8\uc778\nasync function login(email, password) {\n    const response = await fetch('http://localhost:8001/api/login', { // Laravel API \uc8fc\uc18c\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({email, password})\n    });\n    const data = await response.json();\n\n    if (data.token) {\n        localStorage.setItem('api_token', data.token); // \ud1a0\ud070 \uc800\uc7a5\n    }\n}\n\n// 2. \ubcf4\ud638\ub41c \uc694\uccad \uc218\ud589\nasync function createPlanet(planetData) {\n    const token = localStorage.getItem('api_token');\n\n    const response = await fetch('http://localhost:8001/api/planets', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` // &lt;--- \ud1a0\ud070 \ucca8\ubd80!\n        },\n        body: JSON.stringify(planetData)\n    });\n    // ...\n}\n</code></pre></p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/3/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. Stateless API\ub294 \uc8fc\ub85c \uc778\uc99d\uc5d0 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4:</p>  a) \uc138\uc158 \ubc0f \ucfe0\ud0a4  b) \ud1a0\ud070 (\uc608: JWT)  c) IP \uc8fc\uc18c <p>2. Laravel\uc5d0\uc11c \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub77c\uc6b0\ud2b8\ub97c \ubcf4\ud638\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ubbf8\ub4e4\uc6e8\uc5b4\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:</p>  a) auth:api  b) auth:sanctum  c) verified <p>3. FastAPI\uc5d0\uc11c \ub85c\uadf8\uc778 \ud3fc \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uc885\uc18d\uc131\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:</p>  a) Body()  b) Form()  c) OAuth2PasswordRequestForm = Depends() <p>4. \ubcf4\ud638\ub41c \uc694\uccad\uc5d0\uc11c \ud1a0\ud070\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc11c\ubc84\ub85c \uc5b4\ub5bb\uac8c \uc804\ub2ec\ub429\ub2c8\uae4c?</p>  a) URL \ub9e4\uac1c\ubcc0\uc218 `?token=...` \ub0b4  b) \uc694\uccad \ubcf8\ubb38 \ub0b4  c) HTTP \ud5e4\ub354 `Authorization: Bearer &lt;\ud1a0\ud070&gt;` \ub0b4 \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>API\uc5d0 \"\uc561\uc138\uc2a4 \uc81c\uc5b4 \uc2dc\uc2a4\ud15c\"\uc744 \uad6c\ucd95\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c \ub204\uad6c\ub098 \ub2f9\uc2e0\uc758 \"\uc740\ud558\uacc4 \ub370\uc774\ud130\ubca0\uc774\uc2a4\"\ub97c \uc218\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.</p> <ul> <li>\u2705 \ud1a0\ud070 \uae30\ubc18 \uc778\uc99d\uc758 \uc6d0\ub9ac\ub97c \uc774\ud574\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\ud83d\udd10 Laravel Sanctum\uc5d0\uc11c \ud1a0\ud070 \ubc1c\uae09 \ubc0f \ub77c\uc6b0\ud2b8 \ubcf4\ud638\ub97c \uad6c\ud604\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\u2699\ufe0f FastAPI\uc5d0\uc11c OAuth2 \ubc0f JWT \uae30\ubc18 \uc778\uc99d\uc744 \uc124\uc815\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\ud83d\udef0\ufe0f \ud504\ub860\ud2b8\uc5d4\ub4dc\uac00 \ud1a0\ud070\uc744 \uc800\uc7a5\ud558\uace0 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\ub2f9\uc2e0\uc758 API\ub294 \uae30\ub2a5\uc801\uc77c \ubfd0\ub9cc \uc544\ub2c8\ub77c \uc548\uc804\ud574\uc84c\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub2e4\ub978 \uac1c\ubc1c\uc790\ub4e4\uc774 \uc774\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \"\uc0ac\uc6a9 \uc124\uba85\uc11c\"\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li>Postman \ub610\ub294 Insomnia\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud1a0\ud070 \uc5c6\uc774 <code>/api/planets</code> (Laravel) \ub610\ub294 <code>/api/v1/planets</code> (FastAPI)\uc5d0 <code>POST</code> \uc694\uccad\uc744 \uc2dc\ub3c4\ud574\ubcf4\uc2ed\uc2dc\uc624. <code>401 Unauthorized</code> \uc624\ub958\ub97c \ubc1b\uc544\uc57c \ud569\ub2c8\ub2e4.</li> <li><code>/login</code>\uc5d0 \uc694\uccad\uc744 \ubcf4\ub0b4 \ud1a0\ud070\uc744 \ubc1b\uace0, \uc774\ub97c <code>Authorization</code> \ud5e4\ub354\uc5d0 \ucd94\uac00\ud55c \ub2e4\uc74c <code>POST</code> \uc694\uccad\uc744 \ub2e4\uc2dc \uc2dc\ub3c4\ud574\ubcf4\uc2ed\uc2dc\uc624. \uc694\uccad\uc774 \uc131\uacf5\uc801\uc73c\ub85c \uc644\ub8cc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.</li> </ul>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/4/","title":"\uc81c6.4\uc7a5: API \ubb38\uc11c\ud654","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 30\ubd84</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/4/#1-api","title":"1. API \ubb38\uc11c\ud654\uac00 \uc65c \ud544\uc694\ud55c\uac00\uc694?","text":"<p>\ubc84\ud2bc\uc5d0 \uc544\ubb34\ub7f0 \uc124\uba85\ub3c4 \uc5c6\ub294 \ubcf5\uc7a1\ud55c \uc6b0\uc8fc\uc120 \uc81c\uc5b4\ud310\uc744 \ubc1b\uc558\ub2e4\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. \ubd88\uc744 \ucf1c\ub294 \ub300\uc2e0 \ube44\uc0c1 \ud0c8\ucd9c \uc7a5\uce58\ub97c \uc791\ub3d9\uc2dc\ud0ac \uc704\ud5d8\uc744 \uac10\uc218\ud558\uba70 \ubb34\uc791\uc704\ub85c \ubc84\ud2bc\uc744 \ub204\ub974\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4. API \ubb38\uc11c\ub294 \ubc14\ub85c \uc774\ub7ec\ud55c \uc124\uba85\uacfc \uc9c0\uce68\uc785\ub2c8\ub2e4.</p> <p>\uc88b\uc740 \ubb38\uc11c\ud654\ub294:</p> <ul> <li>\uc2dc\uac04\uc744 \uc808\uc57d\ud569\ub2c8\ub2e4: \uac1c\ubc1c\uc790\uac00 \uc5b4\ub5a4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc788\uace0, \uc5b4\ub5a4 \ub9e4\uac1c\ubcc0\uc218\ub97c \ubc1b\uc73c\uba70, \ubb34\uc5c7\uc744 \ubc18\ud658\ud558\ub294\uc9c0 \ucd94\uce21\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.</li> <li>\uc624\ub958\ub97c \uc904\uc785\ub2c8\ub2e4: \uba85\ud655\ud55c \ub370\uc774\ud130 \ud615\uc2dd \ubc0f \uc624\ub958 \ucf54\ub4dc \uc124\uba85\uc740 API\uc758 \uc798\ubabb\ub41c \uc0ac\uc6a9\uc744 \ubc29\uc9c0\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4.</li> <li>\ud1b5\ud569\uc744 \uac04\uc18c\ud654\ud569\ub2c8\ub2e4: \ud504\ub860\ud2b8\uc5d4\ub4dc \ud300\uc740 \ubb38\uc11c\ub97c \uacc4\uc57d\uc11c\ucc98\ub7fc \ud65c\uc6a9\ud558\uc5ec \ubc31\uc5d4\ub4dc \ud300\uacfc \ubcd1\ub82c\ub85c \uc791\uc5c5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>\ub2f9\uc2e0\uc758 \uc720\uc0b0\uc785\ub2c8\ub2e4: 6\uac1c\uc6d4 \ud6c4\uc5d0 \ud504\ub85c\uc81d\ud2b8\ub85c \ub3cc\uc544\uc654\uc744 \ub54c \uc2a4\uc2a4\ub85c\uc5d0\uac8c \uace0\ub9d9\ub2e4\uace0 \ub9d0\ud558\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4.</li> </ul> <p>\ud83d\udca1 \uc6b0\uc8fc \ube44\uc720:</p> <ul> <li>API = \ubcf5\uc7a1\ud55c \uc6b0\uc8fc \uc815\uac70\uc7a5 \uc81c\uc5b4 \uc2dc\uc2a4\ud15c.</li> <li>API \ubb38\uc11c\ud654 = \uc6b0\uc8fc \ube44\ud589\uc0ac\ub97c \uc704\ud55c \ub9e4\ub274\uc5bc. \uc5ec\uae30\uc5d0\ub294 \ub2e4\uc74c\uc774 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4:</li> <li>\uc5d0\uc5b4\ub85d\uc744 \uc5f4\uae30 \uc704\ud574 \uc5b4\ub5a4 \uba85\ub839(<code>\uc5d4\ub4dc\ud3ec\uc778\ud2b8</code>)\uc744 \ubcf4\ub0bc\uc9c0.</li> <li>\uc0dd\uba85 \uc720\uc9c0 \uc2dc\uc2a4\ud15c\uc744 \uc124\uc815\ud558\uae30 \uc704\ud574 \uc5b4\ub5a4 \ub9e4\uac1c\ubcc0\uc218(<code>\uc694\uccad \ubcf8\ubb38</code>)\ub97c \uc804\ub2ec\ud560\uc9c0.</li> <li>\uc751\ub2f5\uc73c\ub85c \uc5b4\ub5a4 \uc2e0\ud638(<code>API \uc751\ub2f5</code>)\ub97c \uae30\ub300\ud560\uc9c0.</li> </ul>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/4/#2-fastapi","title":"2. FastAPI\uc5d0\uc11c\uc758 \ubb38\uc11c\ud654: \uc790\ub3d9 \ub9c8\ubc95","text":"<p>FastAPI\ub294 \ubb38\uc11c\ud654\ub97c \ub180\ub78d\ub3c4\ub85d \uac04\ub2e8\ud558\uac8c \ub9cc\ub4ed\ub2c8\ub2e4. FastAPI\ub294 OpenAPI \ubc0f Swagger UI \ud45c\uc900\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucf54\ub4dc\ub97c \uae30\ubc18\uc73c\ub85c \ub300\ud654\ud615 \ubb38\uc11c\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 1: \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uba54\ud0c0\ub370\uc774\ud130 \ucd94\uac00</p> <p><code>main.py</code> \ud30c\uc77c\uc5d0 \ubb38\uc11c\uc5d0 \ud45c\uc2dc\ub420 \uc124\uba85\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel, Field\n\n# ... (FastAPI \ucf54\ub4dc)\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"\"\"\n\uc740\ud558\uacc4 \ud0d0\uc0ac\ub97c \uc704\ud55c API. \ud83d\ude80\n\n\ub2e4\uc74c\uacfc \uac19\uc740 \uc791\uc5c5\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:\n* **\ud589\uc131 \ubcf4\uae30**.\n* **\uc0c8\ub85c\uc6b4 \ud589\uc131 \ucd94\uac00** (\uc778\uc99d \ud544\uc694).\n    \"\"\",\n    version=\"1.0.0\",\n    contact={\n        \"name\": \"\uad00\uc81c \uc13c\ud130 \uc218\uc11d \uc5d4\uc9c0\ub2c8\uc5b4\",\n        \"url\": \"https://example.com/contact\",\n        \"email\": \"engineer@example.com\",\n    },\n)\n</code></pre> <p>\ub2e8\uacc4 2: \ubaa8\ub378 \ubc0f \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc124\uba85</p> <p>Pydantic \ubaa8\ub378\uacfc \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub9e4\uac1c\ubcc0\uc218\ub97c \uc790\uc138\ud788 \uc124\uba85\ud560\uc218\ub85d \ubb38\uc11c\uac00 \ub354 \uc88b\uc544\uc9d1\ub2c8\ub2e4.</p> <pre><code># Pydantic \ubaa8\ub378 \ud30c\uc77c \ub610\ub294 main.py\uc5d0\uc11c\n\nclass PlanetBase(BaseModel):\n    name: str = Field(..., example=\"\uc9c0\uad6c\", description=\"\ud589\uc131 \uc774\ub984\")\n    description: str = Field(..., example=\"\ub2e4\uc591\ud55c \uc0dd\uba85\uccb4\uac00 \uc788\ub294 \ud478\ub978 \ud589\uc131\", description=\"\uac04\ub7b5\ud55c \uc124\uba85\")\n    # ...\n\nclass Planet(PlanetBase):\n    id: int\n    is_habitable: bool\n\n    class Config:\n        orm_mode = True # \ub610\ub294 Pydantic v2\uc5d0\uc11c\ub294 from_attributes = True\n\n# \ub77c\uc6b0\ud2b8 \ud30c\uc77c\uc5d0\uc11c\n@router.get(\n    \"/planets\",\n    response_model=list[Planet],\n    summary=\"\ubaa8\ub4e0 \ud589\uc131 \ubaa9\ub85d \uac00\uc838\uc624\uae30\",\n    description=\"(\ud5a5\ud6c4) \ud398\uc774\uc9c0\ub124\uc774\uc158\uacfc \ud568\uaed8 \uc54c\ub824\uc9c4 \ubaa8\ub4e0 \ud589\uc131 \ubaa9\ub85d\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.\"\n)\ndef get_planets():\n    # ...\n\n@router.post(\n    \"/planets\",\n    # ...\n    summary=\"\uc0c8 \ud589\uc131 \uc0dd\uc131\",\n    responses={\n        401: {\"description\": \"\uc0ac\uc6a9\uc790 \uc778\uc99d\ub418\uc9c0 \uc54a\uc74c\"},\n        422: {\"description\": \"\ub370\uc774\ud130 \uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958\"}\n    }\n)\ndef create_planet(planet: PlanetCreate, ...):\n    # ...\n</code></pre> <ul> <li><code>Field(..., example=\"...\")</code>: \ubb38\uc11c\uc5d0 \uc608\uc2dc\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4.</li> <li><code>summary</code>: \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \uac04\ub7b5\ud55c \uc124\uba85.</li> <li><code>description</code>: \uc790\uc138\ud55c \uc124\uba85.</li> <li><code>responses</code>: \uc131\uacf5\uc801\uc778 \uc751\ub2f5\uc744 \uc81c\uc678\ud55c \uac00\ub2a5\ud55c \uc751\ub2f5 \ucf54\ub4dc \uc124\uba85.</li> </ul> <p>\ub2e8\uacc4 3: \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ubb38\uc11c \uc5f4\uae30</p> <p>FastAPI \uc11c\ubc84\ub97c \uc2dc\uc791\ud558\uace0 \ub450 \uac1c\uc758 \ub9c8\ubc95 \uac19\uc740 URL\uc744 \uc5fd\ub2c8\ub2e4:</p> <ol> <li><code>http://127.0.0.1:8000/docs</code> \u2014 Swagger UI \ub300\ud654\ud615 \ubb38\uc11c\ub97c \uc5fd\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\uc11c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc77d\uc744 \uc218 \uc788\uc744 \ubfd0\ub9cc \uc544\ub2c8\ub77c \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc9c1\uc811 \ud14c\uc2a4\ud2b8\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4!</li> <li><code>http://127.0.0.1:8000/redoc</code> \u2014 ReDoc\uc758 \ub300\uccb4 \ubb38\uc11c \ubcf4\uae30\ub97c \uc5fd\ub2c8\ub2e4. \uc774 \ubcf4\uae30\ub294 \uc0c1\ud638 \uc791\uc6a9\uc131\uc774 \ub5a8\uc5b4\uc9c0\uc9c0\ub9cc \uc885\uc885 \ub354 \uc77d\uae30 \uc27d\uc2b5\ub2c8\ub2e4.</li> </ol>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/4/#3-laravel","title":"3. Laravel\uc5d0\uc11c\uc758 \ubb38\uc11c\ud654: \uc11c\ub4dc\ud30c\ud2f0 \ud328\ud0a4\uc9c0 \uc0ac\uc6a9","text":"<p>FastAPI\uc640 \ub2ec\ub9ac Laravel\uc740 \"\uae30\ubcf8\uc801\uc73c\ub85c\" \ubb38\uc11c\ub97c \uc0dd\uc131\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ucf54\ub4dc\ub97c \ubd84\uc11d\ud558\uc5ec \uc774\ub97c \uc218\ud589\ud558\ub294 \ud6cc\ub96d\ud55c \ud328\ud0a4\uc9c0\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uac83\uc740 Scribe\uc785\ub2c8\ub2e4.</p> <p>\ub2e8\uacc4 1: Scribe \uc124\uce58 <pre><code>composer require --dev \"knuckleswtf/scribe\"\n</code></pre> <pre><code>php artisan vendor:publish --tag=scribe-config\nphp artisan scribe:generate\n</code></pre></p> <p>\ub2e8\uacc4 2: DocBlock\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc124\uba85</p> <p>Scribe\ub294 \ucee8\ud2b8\ub864\ub7ec \uba54\uc11c\ub4dc \uc704\uc5d0 \uc788\ub294 PHP DocBlock(\ub313\uae00 \ud615\uc2dd: <code>/** ... */</code>)\uc744 \uc77d\uc2b5\ub2c8\ub2e4.</p> <p><code>app/Http/Controllers/PlanetController.php</code>\ub97c \uc5fd\ub2c8\ub2e4:</p> <pre><code>// app/Http/Controllers/PlanetController.php\n\n/**\n * @group \ud589\uc131\n * \ud589\uc131 \uad00\ub9ac\ub97c \uc704\ud55c API\n */\nclass PlanetController extends Controller\n{\n    /**\n     * \ud589\uc131 \ubaa9\ub85d \uac00\uc838\uc624\uae30\n     *\n     * \uc740\ud558\uacc4\uc758 \ubaa8\ub4e0 \ud589\uc131\uc758 \ud398\uc774\uc9c0\ub124\uc774\uc158\ub41c \ubaa9\ub85d\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.\n     *\n     * @unauthenticated\n     */\n    public function index()\n    {\n        // ...\n    }\n\n    /**\n     * \uc0c8 \ud589\uc131 \uc0dd\uc131\n     *\n     * @authenticated\n     *\n     * @bodyParam name string required \ud589\uc131 \uc774\ub984. Example: Kepler-186f\n     * @bodyParam description string required \ud589\uc131 \uc124\uba85.\n     * @bodyParam size_km integer required \uc9c1\uacbd (\ud0ac\ub85c\ubbf8\ud130). Example: 14000\n     * @bodyParam is_habitable boolean \ud589\uc131\uc774 \uac70\uc8fc \uac00\ub2a5\ud55c\uc9c0 \uc5ec\ubd80. Example: true\n     *\n     * @response 201 {\n     *  \"id\": 4,\n     *  \"name\": \"Kepler-186f\",\n     *  \"description\": \"\ub2e4\ub978 \ubcc4\uc758 \uac70\uc8fc \uac00\ub2a5 \uad6c\uc5ed\uc5d0\uc11c \ud655\uc778\ub41c \ucd5c\ucd08\uc758 \uc9c0\uad6c \ud06c\uae30 \ud589\uc131\uc785\ub2c8\ub2e4.\",\n     *  \"size_km\": 14000,\n     *  \"is_habitable\": true,\n     *  \"created_at\": \"2023-10-27T12:00:00.000000Z\",\n     *  \"updated_at\": \"2023-10-27T12:00:00.000000Z\"\n     * }\n     */\n    public function store(Request $request)\n    {\n        // ...\n    }\n    // ... \uae30\ud0c0 \ub2e4\ub978 \uba54\uc11c\ub4dc\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\n}\n</code></pre> <p>Scribe \uc8fc\uc694 \ud0dc\uadf8:</p> <ul> <li><code>@group</code>: \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uadf8\ub8f9\ud654\ud569\ub2c8\ub2e4.</li> <li><code>@unauthenticated</code> / <code>@authenticated</code>: \ud1a0\ud070\uc774 \ud544\uc694\ud55c\uc9c0 \uc5ec\ubd80\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4.</li> <li><code>@bodyParam</code>: \uc694\uccad \ubcf8\ubb38\uc758 \ub9e4\uac1c\ubcc0\uc218\ub97c \uc124\uba85\ud569\ub2c8\ub2e4.</li> <li><code>@response</code>: \uc131\uacf5\uc801\uc778 \uc751\ub2f5 \uc608\uc2dc.</li> </ul> <p>\ub2e8\uacc4 3: \ubb38\uc11c \uc0dd\uc131 \ubc0f \ubcf4\uae30</p> <p>DocBlock\uc744 \ubcc0\uacbd\ud560 \ub54c\ub9c8\ub2e4 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4:</p> <p><pre><code>php artisan scribe:generate\n</code></pre> Scribe\ub294 \ubb38\uc11c\uac00 \ud3ec\ud568\ub41c \uc815\uc801 HTML \ud398\uc774\uc9c0\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uc8fc\uc18c\ub85c \uc5fd\ub2c8\ub2e4: <code>http://your-app-url/docs</code>.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/4/#_1","title":"\uc815\ub9ac \ud034\uc988","text":"<p>1. FastAPI\ub294 \ub2e4\uc74c \ud45c\uc900\uc744 \uae30\ubc18\uc73c\ub85c \ubb38\uc11c\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4:</p>  a) GraphQL  b) OpenAPI (Swagger)  c) WSDL <p>2. FastAPI\uc5d0\uc11c \uae30\ubcf8\uc801\uc73c\ub85c Swagger UI\ub97c \uc5ec\ub294 URL\uc740 \ubb34\uc5c7\uc778\uac00\uc694?</p>  a) /api/docs  b) /swagger  c) /docs <p>3. Laravel\uc5d0\uc11c \ubb38\uc11c \uc0dd\uc131\uc744 \uc704\ud55c \uc778\uae30 \uc788\ub294 \ud328\ud0a4\uc9c0\ub294:</p>  a) Telescope  b) Scribe  c) Horizon <p>4. Scribe\uc5d0\uc11c \uc694\uccad \ubcf8\ubb38\uc758 \ub9e4\uac1c\ubcc0\uc218\ub97c \uc124\uba85\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ud0dc\uadf8\ub294:</p>  a) @param  b) @bodyParam  c) @request \ud655\uc778 <p>\ud83d\ude80 \uc7a5 \uc694\uc57d:</p> <p>\ub2f9\uc2e0\uc740 \"\ube14\ub799\ubc15\uc2a4\"\uc600\ub358 API\ub97c \uc774\ud574\ud558\uae30 \uc27d\uace0 \ud3b8\ub9ac\ud55c \ub3c4\uad6c\ub85c \ubc14\uafb8\uc5b4 \uc804\ubb38\uc801\uc778 \ubb38\uc11c\ub97c \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4.</p> <ul> <li>\u2705 API \ubb38\uc11c\ud654\uc758 \uc911\uc694\uc131\uc744 \uc774\ud574\ud588\uc2b5\ub2c8\ub2e4.</li> <li>\ud83e\ude84 FastAPI\uc5d0\uc11c \ubb38\uc11c \uc790\ub3d9 \uc0dd\uc131 \uc0ac\uc6a9\ubc95\uc744 \uc775\ud614\uc2b5\ub2c8\ub2e4.</li> <li>\u2699\ufe0f Laravel\uc5d0\uc11c API\ub97c \ubb38\uc11c\ud654\ud558\uae30 \uc704\ud55c Scribe \ud328\ud0a4\uc9c0\uc758 \uae30\ucd08\ub97c \uc775\ud614\uc2b5\ub2c8\ub2e4.</li> <li>\ud83d\udef0\ufe0f \uc88b\uc740 \ubb38\uc11c\ud654\uac00 \ubaa8\ub4e0 \uac1c\ubc1c\uc790\uc5d0\uac8c \ucd5c\uace0\uc758 \uc870\ub825\uc790\uc784\uc744 \ud655\uc2e0\ud588\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\uc774\uc81c \ub2f9\uc2e0\uc758 API\ub294 \uc791\ub3d9\ud558\uace0 \ubcf4\ud638\ub420 \ubfd0\ub9cc \uc544\ub2c8\ub77c, \ub2e4\ub978 \ud300\uc6d0\ub4e4\uc774 \uc0ac\uc6a9\ud558\uae30\uc5d0 \uc644\uc804\ud788 \uc900\ube44\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9\uc774\uc790 \uac00\uc7a5 \uc911\uc694\ud55c \ub2e8\uacc4\ub294 \ucd5c\uc885 \ubcf4\uc548 \uac80\uc0ac\uc785\ub2c8\ub2e4.</p> <p>\ud83d\udccc \ud655\uc778:</p> <ul> <li>FastAPI\uc758 \uacbd\uc6b0: \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c <code>/docs</code>\ub97c \uc5f4\uace0 Swagger UI \uc778\ud130\ud398\uc774\uc2a4\uc5d0\uc11c \uc9c1\uc811 \ud589\uc131 \ubaa9\ub85d\uc5d0 \ub300\ud55c <code>GET</code> \uc694\uccad\uc744 \uc2dc\ub3c4\ud574 \ubcf4\uc138\uc694.</li> <li>Laravel\uc758 \uacbd\uc6b0: <code>php artisan scribe:generate</code>\ub97c \uc2e4\ud589\ud558\uace0 <code>/docs</code>\ub97c \uc5ec\uc138\uc694. \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uadf8\ub8f9\ud654\ub418\uc5b4 \uc788\uace0, <code>store</code> \uba54\uc11c\ub4dc\uc5d0 \ud30c\ub77c\ubbf8\ud130 \uc124\uba85\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694.</li> </ul>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/5/","title":"\uc81c6.5\uc7a5: API \ubcf4\uc548 \uae30\ucd08","text":"<p>\ud559\uc2b5 \uc2dc\uac04: 45\ubd84</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/5/#1-api","title":"1. API \ubcf4\uc548: \ub2e4\ub2e8\uacc4 \ubc29\uc5b4 \uccb4\uacc4","text":"<p>\uc5ec\ub7ec\ubd84\uc758 \uc6b0\uc8fc \uc815\uac70\uc7a5(API)\uc774 \uc801\ub300\uc801\uc778 \uc6b0\uc8fc \uad6c\uc5ed\uc5d0 \uc788\ub2e4\uace0 \uc0c1\uc0c1\ud574 \ubcf4\uc138\uc694. \ud558\ub098\uc758 \ubcf4\ud638\ub9c9(\uc778\uc99d)\ub9cc\uc73c\ub85c\ub294 \ubd80\uc871\ud569\ub2c8\ub2e4. \ubcf5\ud569\uc801\uc778 \ubc29\uc5b4 \uc2dc\uc2a4\ud15c\uc774 \ud544\uc694\ud569\ub2c8\ub2e4:</p> <ul> <li>\ubcf4\ud638\ub9c9 (HTTPS): \ubaa8\ub4e0 \ud2b8\ub798\ud53d \uc554\ud638\ud654.</li> <li>\uc774\uc0c1 \uac10\uc9c0 \uc13c\uc11c (Rate Limiting): \uacfc\ub3c4\ud55c \uc694\uccad\uc73c\ub85c\ubd80\ud130 \ubcf4\ud638.</li> <li>\ub0b4\ubd80 \uaca9\ubcbd (\uad8c\ud55c \ubd80\uc5ec): \uc811\uadfc \uad8c\ud55c \ubd84\ub9ac.</li> <li>\ud654\ubb3c \uac80\uc0ac (\uc720\ud6a8\uc131 \uac80\uc0ac): \ubaa8\ub4e0 \ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\ub97c \uc2e0\ub8b0\ud558\uc9c0 \uc54a\uc74c.</li> <li>\ube44\ubc00 \uae08\uace0 (\ud658\uacbd \ubcc0\uc218): \ud0a4\ub97c \uc548\uc804\ud558\uac8c \uc800\uc7a5.</li> </ul> <p>\uac01\uac01\uc758 \ubc29\uc5b4 \ub2e8\uacc4\ub97c \uc124\uc815\ud574 \ubd05\uc2dc\ub2e4.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/5/#2-https","title":"2. \ubcf4\ud638\ub9c9: \ud56d\uc0c1 HTTPS \uc0ac\uc6a9","text":"<p>\ubb34\uc5c7\uc778\uac00\uc694? HTTPS(HyperText Transfer Protocol Secure)\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84 \uac04\uc758 \ubaa8\ub4e0 \ub370\uc774\ud130\ub97c \uc554\ud638\ud654\ud558\ub294 HTTP \ud504\ub85c\ud1a0\ucf5c\uc758 \ubc84\uc804\uc785\ub2c8\ub2e4. HTTPS\uac00 \uc5c6\uc73c\uba74 \ub124\ud2b8\uc6cc\ud06c\ub97c \"\uc5ff\ub4e3\ub294\" \uc0ac\ub78c(\uc608: \uacf5\uc6a9 Wi-Fi\uc5d0\uc11c)\uc740 \ub85c\uadf8\uc778, \uc554\ud638 \ubc0f \ud1a0\ud070\uc744 \uac00\ub85c\ucc4c \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\uc5b4\ub5bb\uac8c \uad6c\ud604\ud558\ub098\uc694?</p> <ul> <li>\ud504\ub85c\ub355\uc158\uc5d0\uc11c\ub294 \ud544\uc218\uc785\ub2c8\ub2e4. \uc2e4\uc81c \uc11c\ubc84(Heroku, DigitalOcean \ub4f1)\uc5d0 API\ub97c \ubc30\ud3ec\ud560 \ub54c, \uc6f9 \uc11c\ubc84(Nginx, Apache)\ub97c SSL \uc778\uc99d\uc11c\uc640 \ud568\uaed8 \uc791\ub3d9\ud558\ub3c4\ub85d \uc124\uc815\ud558\uc138\uc694. Let's Encrypt\uc640 \uac19\uc740 \uc11c\ube44\uc2a4\ub294 \ubb34\ub8cc \uc778\uc99d\uc11c\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.</li> <li>\ub85c\uceec \uac1c\ubc1c\uc5d0\uc11c\ub294 \ub35c \uc911\uc694\ud558\uc9c0\ub9cc, Laravel Herd \ub610\ub294 mkcert\uc640 \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \ub85c\uceec HTTPS\ub97c \uc27d\uac8c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\ud83d\udca1 API \ubcf4\uc548 \uaddc\uce59 #1: HTTPS\uac00 \uc5c6\uc73c\uba74 \ubcf4\uc548\ub3c4 \uc5c6\uc2b5\ub2c8\ub2e4.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/5/#3-rate-limiting","title":"3. \uc774\uc0c1 \uac10\uc9c0 \uc13c\uc11c: \uc694\uccad \ube48\ub3c4 \uc81c\ud55c (Rate Limiting)","text":"<p>\ubb34\uc5c7\uc778\uac00\uc694? \ubb34\ucc28\ubcc4 \ub300\uc785 \uacf5\uaca9(\uacf5\uaca9\uc790\uac00 \ucd08\ub2f9 \uc218\ucc9c \uac1c\uc758 \uc694\uccad\uc744 \ubcf4\ub0b4 \ube44\ubc00\ubc88\ud638\ub97c \ucd94\uce21\ud558\ub824\ub294 \uacbd\uc6b0) \ubc0f DoS \uacf5\uaca9(\uc11c\ubc84\uac00 \uc694\uccad\uc73c\ub85c \"\uacfc\ubd80\ud558\"\ub418\uc5b4 \uc751\ub2f5\ud558\uc9c0 \ubabb\ud558\uac8c \ub418\ub294 \uacbd\uc6b0)\uc73c\ub85c\ubd80\ud130 \ubcf4\ud638\ud569\ub2c8\ub2e4. Rate Limiting\uc740 \ud55c \uc0ac\uc6a9\uc790(\ub610\ub294 IP \uc8fc\uc18c)\uac00 \ud2b9\uc815 \uc2dc\uac04 \ub3d9\uc548 \ubcf4\ub0bc \uc218 \uc788\ub294 \uc694\uccad \uc218\ub97c \uc81c\ud55c\ud569\ub2c8\ub2e4.</p> <p>\uc5b4\ub5bb\uac8c \uad6c\ud604\ud558\ub098\uc694?</p> <ul> <li> <p>Laravel: \uc81c\ud55c\uc6a9 \ubbf8\ub4e4\uc6e8\uc5b4\ub294 \uc774\ubbf8 \ub0b4\uc7a5\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4!   <code>app/Http/Kernel.php</code>\ub97c \uc5f4\uace0 <code>middlewareGroups['api']</code> \ud0a4\ub97c \ud655\uc778\ud574 \ubcf4\uc138\uc694. \uc774\ubbf8 <code>'throttle:api'</code>\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc81c\ud55c \uc124\uc815\uc740 <code>app/Providers/RouteServiceProvider.php</code>\uc758 <code>configureRateLimiting()</code> \uba54\uc11c\ub4dc\uc5d0 \uc788\uc2b5\ub2c8\ub2e4.   <pre><code>// app/Providers/RouteServiceProvider.php\nprotected function configureRateLimiting()\n{\n    RateLimiter::for('api', function (Request $request) {\n        return Limit::perMinute(60)-&gt;by($request-&gt;user()?-&gt;id ?: $request-&gt;ip());\n    });\n}\n</code></pre>   \uc774\ub294 \uc0ac\uc6a9\uc790\ub2f9(\uc778\uc99d\ub41c \uacbd\uc6b0) \ub610\ub294 IP \uc8fc\uc18c\ub2f9 \ubd84\ub2f9 60\uac1c\uc758 \uc694\uccad\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4.</p> </li> <li> <p>FastAPI: \uc608\ub97c \ub4e4\uc5b4, <code>slowapi</code>\uc640 \uac19\uc740 \uc11c\ub4dc\ud30c\ud2f0 \ud328\ud0a4\uc9c0\uac00 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.</p> </li> <li> <p>\uc124\uce58: <code>pip install slowapi</code></p> </li> <li><code>main.py</code>\uc5d0 \ud1b5\ud569:       <pre><code># main.py\nfrom slowapi import Limiter, _rate_limit_exceeded_handler\nfrom slowapi.util import get_remote_address\nfrom slowapi.errors import RateLimitExceeded\n\nlimiter = Limiter(key_func=get_remote_address)\napp = FastAPI(...)\n\n# \uc624\ub958 \ud578\ub4e4\ub7ec\uc640 \ub9ac\ubbf8\ud130\ub97c \uc5f0\uacb0\ud569\ub2c8\ub2e4.\napp.state.limiter = limiter\napp.add_exception_handler(RateLimitExceeded, _rate_limit_exceeded_handler)\n\n# \ud2b9\uc815 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc801\uc6a9\ud569\ub2c8\ub2e4.\n@router.get(\"/planets\")\n@limiter.limit(\"5/minute\") # \ubd84\ub2f9 5\uac1c \uc694\uccad\ndef get_planets(request: Request):\n    # ...\n</code></pre></li> </ul>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/5/#4","title":"4. \ub0b4\ubd80 \uaca9\ubcbd: \uad8c\ud55c \ubd80\uc5ec (\uc778\uc99d\uacfc \ud63c\ub3d9\ud558\uc9c0 \ub9c8\uc138\uc694!)","text":"<p>\ubb34\uc5c7\uc778\uac00\uc694?</p> <ul> <li>\uc778\uc99d\uc740 \"\ub2f9\uc2e0\uc740 \ub204\uad6c\uc778\uac00\uc694?\"\ub77c\ub294 \uc9c8\ubb38\uc5d0 \ub2f5\ud569\ub2c8\ub2e4.</li> <li>\uad8c\ud55c \ubd80\uc5ec\ub294 \"\ubb34\uc5c7\uc744 \ud560 \uc218 \uc788\ub098\uc694?\"\ub77c\ub294 \uc9c8\ubb38\uc5d0 \ub2f5\ud569\ub2c8\ub2e4.</li> </ul> <p>\uc608\ub97c \ub4e4\uc5b4, \uc77c\ubc18 \uc0ac\uc6a9\uc790\ub294 \ud589\uc131\uc744 \ubcfc \uc218 \uc788\uc9c0\ub9cc, \"\uad00\ub9ac\uc790\" \uc5ed\ud560\uc744 \uac00\uc9c4 \uc0ac\uc6a9\uc790\ub9cc \ud589\uc131\uc744 \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\uc5b4\ub5bb\uac8c \uad6c\ud604\ud558\ub098\uc694?</p> <ul> <li> <p>Laravel: Policies(\uc815\ucc45) \ub610\ub294 Gates(\uac8c\uc774\ud2b8)\uac00 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.</p> </li> <li> <p>\uc815\ucc45 \uc0dd\uc131: <code>php artisan make:policy PlanetPolicy --model=Planet</code></p> </li> <li><code>app/Policies/PlanetPolicy.php</code>\uc5d0 \uaddc\uce59 \uc815\uc758:       <pre><code>class PlanetPolicy\n{\n    // 'admin' \uc5ed\ud560\uc744 \uac00\uc9c4 \uc0ac\uc6a9\uc790\uc5d0\uac8c\ub9cc \uc0ad\uc81c \ud5c8\uc6a9\n    public function delete(User $user, Planet $planet): bool\n    {\n        return $user-&gt;role === 'admin';\n    }\n}\n</code></pre></li> <li> <p><code>PlanetController.php</code> \ucee8\ud2b8\ub864\ub7ec\uc5d0 \uc815\ucc45 \uc801\uc6a9:       <pre><code>public function destroy(Planet $planet)\n{\n    // \ud604\uc7ac \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc0ad\uc81c \uad8c\ud55c\uc774 \uc788\ub294\uc9c0 \ud655\uc778\n    $this-&gt;authorize('delete', $planet);\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre></p> </li> <li> <p>FastAPI: \uad8c\ud55c \ubd80\uc5ec \ub85c\uc9c1\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ud1a0\ud070\uc5d0\uc11c \uc5bb\uc740 \uc0ac\uc6a9\uc790 \uc815\ubcf4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub0b4\uc5d0\uc11c \uc218\ub3d9\uc73c\ub85c \uc791\uc131\ub429\ub2c8\ub2e4.</p> </li> </ul> <pre><code># (\ud1a0\ud070\uc5d0 'roles' \ud544\ub4dc\uac00 \uc788\ub2e4\uace0 \uac00\uc815)\ndef get_current_active_user(token: str = Depends(oauth2_scheme)):\n    # ... \ud1a0\ud070\uc744 \ub514\ucf54\ub529\ud558\uace0 DB\uc5d0\uc11c \uc5ed\ud560\uacfc \ud568\uaed8 \uc0ac\uc6a9\uc790 \uac00\uc838\uc624\uae30\n    # user = get_user_from_db(username)\n    return user # \uc0ac\uc6a9\uc790 \uac1d\uccb4 \ubc18\ud658\n\n@router.delete(\"/planets/{planet_id}\")\ndef delete_planet(\n    planet_id: int,\n    current_user: User = Depends(get_current_active_user)\n):\n    if \"admin\" not in current_user.roles:\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail=\"\uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uad8c\ud55c\uc774 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\",\n        )\n    # ... \uc0ad\uc81c \ub85c\uc9c1 ...\n</code></pre>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/5/#5","title":"5. \ud654\ubb3c \uac80\uc0ac \ubc0f \ube44\ubc00 \uae08\uace0: \uc720\ud6a8\uc131 \uac80\uc0ac \ubc0f \ud658\uacbd \ubcc0\uc218","text":"<p>\uc774 \ub450 \uac00\uc9c0\ub294 \uc774\ubbf8 \uad6c\ud604\ud588\uc9c0\ub9cc, \ubcf4\uc548\uc5d0\uc11c\uc758 \uc911\uc694\uc131\uc744 \uac15\uc870\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4.</p> <ul> <li> <p>\ub4e4\uc5b4\uc624\ub294 \ub370\uc774\ud130\ub97c \uc808\ub300 \uc2e0\ub8b0\ud558\uc9c0 \ub9c8\uc138\uc694 (\uc720\ud6a8\uc131 \uac80\uc0ac):</p> </li> <li> <p>\uc6b0\ub9ac\ub294 Laravel\uc5d0\uc11c <code>$request-&gt;validate()</code>\ub97c \uc0ac\uc6a9\ud588\uace0 FastAPI\uc5d0\uc11c Pydantic \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc6b0\ub9ac\ub97c SQL \uc778\uc81d\uc158(Eloquent/SQLAlchemy \uc0ac\uc6a9 \uc2dc)\uacfc \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc190\uc0c1\uc2dc\ud0ac \uc218 \uc788\ub294 \uc798\ubabb\ub41c \ub370\uc774\ud130\ub85c\ubd80\ud130 \ubcf4\ud638\ud569\ub2c8\ub2e4. \uc678\ubd80\uc5d0\uc11c \ub4e4\uc5b4\uc624\ub294 \ubaa8\ub4e0 \uac83\uc744 \ud56d\uc0c1 \uc720\ud6a8\uc131 \uac80\uc0ac\ud558\uc138\uc694!</p> </li> <li> <p>\ube44\ubc00\uc744 <code>.env</code>\uc5d0 \uc800\uc7a5\ud558\uc138\uc694 (\ud658\uacbd \ubcc0\uc218):</p> </li> <li> <p>\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud0a4, JWT\uc6a9 \ube44\ubc00 \ud0a4(<code>SECRET_KEY</code>), \uc11c\ub4dc\ud30c\ud2f0 \uc11c\ube44\uc2a4 \ud0a4 \ub4f1 \uc774 \ubaa8\ub4e0 \uac83\uc740 \ubc84\uc804 \uad00\ub9ac \uc2dc\uc2a4\ud15c(Git)\uc5d0 \uc808\ub300 \ud3ec\ud568\ub418\uc5b4\uc11c\ub294 \uc548 \ub429\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 <code>.gitignore</code>\uc5d0 \ucd94\uac00\ub418\ub294 <code>.env</code> \ud30c\uc77c\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4.</p> </li> </ul>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/5/#_1","title":"\ubcf5\uc2b5 \ud034\uc988","text":"<p>1. \uacf5\uc6a9 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \ub370\uc774\ud130 \uac00\ub85c\ucc44\uae30\ub97c \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \ub2e4\uc74c\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4:</p>  a) \uc694\uccad \ube48\ub3c4 \uc81c\ud55c (Rate Limiting)  b) HTTPS  c) CORS <p>2. \uc694\uccad \ube48\ub3c4 \uc81c\ud55c(Rate Limiting)\uc740 \uc8fc\ub85c \ub2e4\uc74c\uc73c\ub85c\ubd80\ud130 \ubcf4\ud638\ud569\ub2c8\ub2e4:</p>  a) SQL \uc778\uc81d\uc158  b) \ubb34\ucc28\ubcc4 \ub300\uc785 \ubc0f DoS \uacf5\uaca9  c) \ud06c\ub85c\uc2a4 \uc0ac\uc774\ud2b8 \uc2a4\ud06c\ub9bd\ud305 (XSS) <p>3. \"\uc774 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubb34\uc5c7\uc744 \ud560 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294\uac00?\"\ub77c\ub294 \uc9c8\ubb38\uc5d0 \ub2f5\ud558\ub294 \uac83\uc740:</p>  a) \uc778\uc99d  b) \uad8c\ud55c \ubd80\uc5ec  c) \uc720\ud6a8\uc131 \uac80\uc0ac <p>4. API \ube44\ubc00 \ud0a4\uc640 DB \ube44\ubc00\ubc88\ud638\ub294 \ub2e4\uc74c\uc5d0 \uc800\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4:</p>  a) \ud3b8\uc758\ub97c \uc704\ud574 \ucf54\ub4dc\uc5d0 \uc9c1\uc811  b) GitHub \uacf5\uac1c \uc800\uc7a5\uc18c\uc5d0  c) Git\uc5d0\uc11c \uc81c\uc678\ub41c `.env` \ud30c\uc77c\uc5d0 \ud655\uc778\ud558\uae30 <p>\ud83d\ude80 \ucf54\uc2a4 \uc644\ub8cc \ucd95\ud558\ud569\ub2c8\ub2e4, \uc0ac\ub839\uad00\ub2d8! \ubaa8\ub4e0 \uc784\ubb34\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uc644\ub8cc\ud588\uc2b5\ub2c8\ub2e4.</p> <p>\ub2f9\uc2e0\uc740 API\uc5d0 \ub300\ud574 \ub4e4\uc5b4\ubcf8 \uc801\ub9cc \uc788\ub294 \ucd08\ubcf4\uc790\uc5d0\uc11c, \uc790\uccb4 \uc0dd\ud0dc\uacc4\uc5d0\uc11c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \ub450 \uac00\uc9c0 \uae30\uc220\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc644\uc804\ud55c \uc6f9 \uc11c\ube44\uc2a4\ub97c \ub3c5\ub9bd\uc801\uc73c\ub85c \uc124\uacc4, \uac1c\ubc1c, \ubb38\uc11c\ud654, \ubcf4\ud638 \ubc0f \ud14c\uc2a4\ud2b8\ud560 \uc218 \uc788\ub294 \uc5d4\uc9c0\ub2c8\uc5b4\ub85c \uc131\uc7a5\ud588\uc2b5\ub2c8\ub2e4.</p> <p>\ub2f9\uc2e0\uc740 \ubc94\uc6a9 REST \uc5b8\uc5b4\ub97c \ub9c8\uc2a4\ud130\ud558\uace0 Laravel\uacfc FastAPI\ub97c \ubc30\uc6e0\uc73c\uba70, \uc21c\uc218 JavaScript\ub85c \uc774\ub4e4\uc744 \uc704\ud55c \"\ube44\ud589 \uad00\uc81c \uc13c\ud130\"\ub97c \uad6c\ucd95\ud588\uc2b5\ub2c8\ub2e4.</p> <p>\uc774\uac83\uc740 \uc5c4\uccad\ub09c \uc131\uacfc\uc785\ub2c8\ub2e4. \uc774\uc81c API \uac1c\ubc1c\uc758 \uc138\uacc4\uac00 \ub2f9\uc2e0\uc5d0\uac8c \uc5f4\ub838\uc2b5\ub2c8\ub2e4. \uacc4\uc18d\ud574\uc11c \ud0d0\uad6c\ud558\uace0, \ubc30\uc6b0\uace0, \ub180\ub77c\uc6b4 \uac83\ub4e4\uc744 \ub9cc\ub4e4\uc5b4 \ub098\uac00\uc2ed\uc2dc\uc624.</p>"},{"location":"ko/%EC%A0%9C6%EC%9E%A5%20-%20%ED%86%B5%ED%95%A9%20%EB%B0%8F%20%EC%B5%9C%EC%84%A0%EC%9D%98%20%EC%8B%A4%EC%B2%9C%20%EC%82%AC%EB%A1%80/5/#_2","title":"\ud1b5\uc2e0 \uc885\ub8cc. \ud83d\ude80\u2604 \ubbf8\uc158 \uc9c0\uc6d0\ud558\uae30","text":"<p>\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc744 \ub9cc\ub4dc\ub294 \uac83\uc740 \ub9ce\uc740 \uc2dc\uac04\uacfc \uc5d0\ub108\uc9c0\ub97c \ud544\uc694\ub85c \ud558\ub294 \uae38\uace0 \ubcf5\uc7a1\ud55c \ube44\ud589\uc785\ub2c8\ub2e4. \uc774 \uc790\ub8cc\uac00 \uc720\uc6a9\ud558\ub2e4\uace0 \uc0dd\uac01\ub418\uc2dc\uba74, \uc800\ud76c \ud0d0\ud5d8\ub300\uc758 \uc5f0\ub8cc \ud0f1\ud06c\ub97c \ucc44\uc6b0\ub294 \ub370 \ub3c4\uc6c0\uc744 \uc8fc\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc9c0\uc6d0\uc740 \uc0c8\ub85c\uc6b4 \uc720\uc6a9\ud55c \uc790\ub8cc\ub97c \ud5a5\ud55c \ub610 \ud558\ub098\uc758 \uada4\ub3c4 \uc9c4\uc785\uc785\ub2c8\ub2e4.</p> <p></p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/1/","title":"Cap\u00edtulo 1.1: O que \u00e9 uma API e por que voc\u00ea precisa dela?","text":"<p>Tempo de estudo: 30 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/1/#1-introducao-api-como-um-no-de-acoplamento-espacial","title":"1. Introdu\u00e7\u00e3o: API como um \"n\u00f3 de acoplamento espacial\"","text":"<p>Imagine que voc\u00ea \u00e9 o comandante de uma nave espacial. Para conectar sua nave \u00e0 ISS, voc\u00ea precisa de um n\u00f3 de acoplamento padr\u00e3o. Sem ele, \u00e9 imposs\u00edvel acoplar, mesmo que a nave e a esta\u00e7\u00e3o se encaixem perfeitamente.</p> <p>API (Interface de Programa\u00e7\u00e3o de Aplica\u00e7\u00f5es) \u2014 \u00e9 um \"n\u00f3 de acoplamento\" semelhante para programas. - \u00c9 um conjunto de regras que permite que diferentes aplica\u00e7\u00f5es troquem dados e trabalhem juntas. - Exemplo: quando um aplicativo m\u00f3vel exibe a previs\u00e3o do tempo, ele usa a API de um servi\u00e7o meteorol\u00f3gico.</p> <p>\ud83d\udca1 Analogia espacial: Uma API \u00e9 como um protocolo de comunica\u00e7\u00e3o entre a Terra e um rover marciano. O rover recebe comandos em um formato compreens\u00edvel para ele (por exemplo, \"tirar foto da cratera\"), executa a tarefa e envia os dados de volta.</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/1/#2-por-que-as-apis-sao-necessarias","title":"2. Por que as APIs s\u00e3o necess\u00e1rias?","text":"<ol> <li> <p>Simplifica\u00e7\u00e3o do desenvolvimento    Em vez de criar tudo do zero, voc\u00ea usa uma API pronta, como a SpaceX API.    <pre><code># Exemplo: Obten\u00e7\u00e3o de dados sobre os lan\u00e7amentos da SpaceX\nimport requests\nresponse = requests.get(\"https://api.spacexdata.com/v3/missions\")\nprint(response.json()[0])  # Exibi\u00e7\u00e3o dos dados\n</code></pre></p> </li> <li> <p>Automa\u00e7\u00e3o de processos    Uma API permite que rob\u00f4s-sonda transmitam dados automaticamente para a Terra sem interven\u00e7\u00e3o manual.</p> </li> <li> <p>Integra\u00e7\u00e3o de sistemas    Como o acoplamento de m\u00f3dulos da ISS: a API conecta sua aplica\u00e7\u00e3o a sistemas de pagamento, bancos de dados ou at\u00e9 mesmo telesc\u00f3pios!</p> </li> <li> <p>Acesso a dados \u00fanicos    Por exemplo, a SpaceX API fornece dados reais sobre lan\u00e7amentos de foguetes.</p> </li> </ol>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/1/#3-como-funciona-uma-api","title":"3. Como funciona uma API?","text":"<ul> <li>O Cliente (seu programa) envia uma requisi\u00e7\u00e3o HTTP para o servidor.</li> <li>O Servidor (por exemplo, NASA) processa a requisi\u00e7\u00e3o e retorna uma resposta no formato JSON.</li> <li>Os Dados \u2014 s\u00e3o \"tesouros espaciais\": coordenadas da ISS, fotos de gal\u00e1xias, lista de exoplanetas.</li> </ul> <p>\u26a1 Exemplo de requisi\u00e7\u00e3o \u00e0 API \"Open Notify\" (ISS): <pre><code>curl \"http://api.open-notify.org/iss-now.json\"\n</code></pre> Resposta: <pre><code>{\n  \"message\": \"success\",\n  \"timestamp\": 1725431234,\n  \"iss_position\": {\n    \"latitude\": \"51.1234\",\n    \"longitude\": \"-120.5678\"\n  }\n}\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/1/#4-tipos-de-api-visao-geral-breve","title":"4. Tipos de API (Vis\u00e3o Geral Breve)","text":"Tipo Exemplo espacial Onde \u00e9 usado REST Comunica\u00e7\u00e3o padr\u00e3o \"Centro de Controle \u2194 sat\u00e9lite\" Servi\u00e7os web (90% dos casos) GraphQL \"Requisi\u00e7\u00e3o personalizada\" (por exemplo, \"d\u00ea apenas o tamanho e a massa do planeta\") Sistemas complexos SOAP Como a criptografia de r\u00e1dio em miss\u00f5es antigas Aplica\u00e7\u00f5es corporativas <p>Neste tutorial, vamos focar nas APIs REST \u2014 o formato mais popular.</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/1/#5-exemplos-de-apis-espaciais","title":"5. Exemplos de APIs espaciais","text":"<ol> <li>NASA Open API: Dados sobre asteroides, fotos do telesc\u00f3pio Hubble.</li> <li>SpaceX API: Informa\u00e7\u00f5es sobre lan\u00e7amentos, foguetes, naves Dragon.</li> <li>Open Notify: Posi\u00e7\u00e3o atual da ISS, n\u00famero de pessoas no espa\u00e7o.</li> </ol>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/1/#quiz-interativo","title":"Quiz interativo","text":"<p>1. API \u2014 \u00e9...</p>  a) Intelig\u00eancia Artificial  b) Um conjunto de regras para intera\u00e7\u00e3o de programas  c) Uma linguagem de programa\u00e7\u00e3o <p>2. Por que usar uma API em vez de escrever seu pr\u00f3prio c\u00f3digo?</p>  a) Para economizar tempo  b) Para obter acesso a dados \u00fanicos  c) Ambas as op\u00e7\u00f5es <p>3. Qual formato de dados uma API geralmente retorna?</p>  a) XML  b) JSON  c) TXT Verificar <p>\ud83d\ude80 Resumo do cap\u00edtulo:</p> <p>A API \u00e9 a base para trabalhar com dados de fontes externas. Assim como um astronauta n\u00e3o pode trabalhar sem comunica\u00e7\u00e3o com o Centro de Controle da Miss\u00e3o, um desenvolvedor n\u00e3o pode construir uma aplica\u00e7\u00e3o complexa sem uma API. No pr\u00f3ximo cap\u00edtulo, aprenderemos como enviar \"comandos\" para o servidor usando m\u00e9todos HTTP!</p> <p>\ud83d\udccc Dica: Tente fazer uma requisi\u00e7\u00e3o \u00e0 Open Notify API e descubra onde a ISS est\u00e1 agora! (Isso pode ser feito at\u00e9 mesmo usando um console simples)</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/2/","title":"Cap\u00edtulo 1.2: M\u00e9todos HTTP e C\u00f3digos de Status","text":"<p>Tempo de estudo: 40 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/2/#1-http-a-linguagem-de-comunicacao-no-espaco","title":"1. HTTP: A Linguagem de Comunica\u00e7\u00e3o no Espa\u00e7o","text":"<p>Imagine que voc\u00ea \u00e9 o Centro de Controle da Miss\u00e3o (MCC) e o servidor da API \u00e9 uma nave espacial. HTTP (HyperText Transfer Protocol) \u00e9 a comunica\u00e7\u00e3o por r\u00e1dio entre voc\u00eas.</p> <p>Cada mensagem cont\u00e9m:</p> <ul> <li> <p>M\u00e9todo \u2192 O que fazer (por exemplo, \"enviar uma sonda\")</p> </li> <li> <p>C\u00f3digo de Status \u2192 O resultado da opera\u00e7\u00e3o (\"sonda lan\u00e7ada com sucesso!\")</p> </li> </ul> <p>\ud83d\udca1 Analogia Espacial: <code>GET /stars</code> = \"MCC \u2192 Nave: D\u00ea-me as coordenadas das estrelas!\" <code>200 OK</code> = \"Nave \u2192 MCC: Coordenadas transmitidas!\"</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/2/#2-metodos-http-principais","title":"2. M\u00e9todos HTTP Principais","text":"<p>Cada m\u00e9todo \u00e9 como um tipo de comando para uma miss\u00e3o espacial:</p> M\u00e9todo An\u00e1logo no Espa\u00e7o Exemplo de Solicita\u00e7\u00e3o Descri\u00e7\u00e3o GET Solicita\u00e7\u00e3o de dados (telesc\u00f3pio) <code>GET /planets</code> Obter uma lista de planetas POST Envio de um novo objeto (lan\u00e7amento de foguete) <code>POST /satellites</code> Criar um novo sat\u00e9lite PUT Atualiza\u00e7\u00e3o completa de um objeto (corre\u00e7\u00e3o de \u00f3rbita) <code>PUT /satellites/iss</code> Atualizar dados da ISS DELETE Destrui\u00e7\u00e3o de um objeto (sa\u00edda de \u00f3rbita) <code>DELETE /debris/123</code> Excluir lixo espacial <p>\u26a1 Exemplo de C\u00f3digo (Python): <pre><code>import requests\n\n# GET: Obter dados do foguete Falcon 9\n# Usamos um endpoint real da API SpaceX\nresponse = requests.get(\"https://api.spacexdata.com/v4/rockets/5e9d0d95eda69973a809d1ec\")\nprint(response.status_code, response.json()['name']) # 200 Falcon 9\n\n# POST: Criar uma nova postagem em uma API de teste\n# Usamos o servi\u00e7o sandbox jsonplaceholder\nnew_post = {\"title\": \"Artemis Mission\", \"body\": \"Ready for launch\", \"userId\": 1}\nresponse = requests.post(\"https://jsonplaceholder.typicode.com/posts\", json=new_post)\nprint(response.status_code, response.json()['id'])  # 201 101 (ou outro ID)\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/2/#3-codigos-de-status-importantes","title":"3. C\u00f3digos de Status Importantes","text":"<p>A resposta do servidor \u00e9 como um sinal da nave espacial:</p> Grupo C\u00f3digo An\u00e1logo no Espa\u00e7o Descri\u00e7\u00e3o <code>2xx</code> 200 \u2705 \"Tarefa conclu\u00edda!\" Sucesso 201 \ud83d\ude80 \"Foguete lan\u00e7ado!\" Objeto criado <code>3xx</code> 301 \ud83c\udf0d \"MCC movido para um novo endere\u00e7o\" Redirecionamento <code>4xx</code> 400 \u274c \"Coordenadas incorretas na solicita\u00e7\u00e3o!\" Erro do cliente 404 \ud83e\ude90 \"Planeta n\u00e3o encontrado!\" Recurso n\u00e3o existe <code>5xx</code> 500 \ud83d\udd25 \"Falha no sistema de propuls\u00e3o!\" Erro do servidor"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/2/#4-pratica-tratamento-de-codigos-de-status","title":"4. Pr\u00e1tica: Tratamento de C\u00f3digos de Status","text":"<p>Sempre verifique a resposta da API! Exemplo de tratamento de erros: <pre><code>import requests\n\ndef get_post_data(post_id):\n    \"\"\"Fun\u00e7\u00e3o para obter dados de postagem com tratamento de c\u00f3digos de status.\"\"\"\n    try:\n        response = requests.get(f\"https://jsonplaceholder.typicode.com/posts/{post_id}\")\n\n        # Verifica o c\u00f3digo de status da resposta\n        if response.status_code == 200:\n            print(f\"\u2705 Dados para a postagem {post_id} recebidos com sucesso!\")\n            return response.json()\n        elif response.status_code == 404:\n            print(f\"\u26a0\ufe0f Recurso para a postagem {post_id} n\u00e3o encontrado!\")\n            return None\n        else:\n            # Tratamento de outros erros do cliente (4xx) ou do servidor (5xx)\n            print(f\"\ud83d\udea8 Ocorreu um erro! C\u00f3digo de status: {response.status_code}\")\n            return None\n\n    except requests.exceptions.RequestException as e:\n        # Tratamento de erros de conex\u00e3o (por exemplo, sem internet)\n        print(f\"\ud83d\udd25 Erro de conex\u00e3o: {e}\")\n        return None\n\n# --- Testamos nossa fun\u00e7\u00e3o ---\nprint(\"--- Buscando postagem existente ---\")\nget_post_data(1)\n\nprint(\"\\n--- Buscando postagem inexistente ---\")\nget_post_data(9999) # Esta postagem n\u00e3o existe, esperamos 404\n</code></pre></p> <p>\ud83d\udd2d Exemplo de uma API real (SpaceX): Solicita\u00e7\u00e3o: <code>GET https://api.spacexdata.com/v4/ships/OCISLY</code> Resposta: <code>200 OK</code> + dados da nave Solicita\u00e7\u00e3o: <code>GET https://api.spacexdata.com/v4/ships/UNICORN</code> Resposta: <code>404 Not Found</code></p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/2/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. Qual m\u00e9todo usar para obter dados sobre as estrelas?</p>  a) POST  b) PUT  c) GET <p>2. O status `201 Created` significa:</p>  a) Objeto exclu\u00eddo  b) Objeto criado  c) Erro do servidor <p>3. M\u00e9todo para atualiza\u00e7\u00e3o completa dos dados do sat\u00e9lite:</p>  a) PATCH  b) DELETE  c) PUT <p>4. O que significa o status `500 Internal Server Error`?</p>  a) Erro na solicita\u00e7\u00e3o do cliente  b) Falha no servidor  c) Execu\u00e7\u00e3o bem-sucedida Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo: M\u00e9todos HTTP s\u00e3o seus comandos para miss\u00f5es espaciais, e c\u00f3digos de status s\u00e3o os relat\u00f3rios de sua execu\u00e7\u00e3o. Lembre-se:</p> <p><code>GET</code> = \"D\u00ea-me dados\", <code>POST</code> = \"Crie algo novo\", <code>PUT</code> = \"Atualize tudo\", <code>DELETE</code> = \"Destrua\" <code>2xx</code> = Sucesso, <code>4xx</code> = Seu erro, <code>5xx</code> = Problema no servidor</p> <p>Prepare-se para o lan\u00e7amento! No pr\u00f3ximo cap\u00edtulo, decifraremos as \"telecomunica\u00e7\u00f5es\" do servidor \u2013 o formato JSON.</p> <p>\ud83d\udccc Pr\u00e1tica: Use a SpaceX API para enviar um <code>GET /launches/latest</code> e estudar os c\u00f3digos de resposta!</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/3/","title":"Cap\u00edtulo 1.3: Formato JSON","text":"<p>Tempo de estudo: 35 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/3/#1-json-a-linguagem-da-comunicacao-espacial","title":"1. JSON: A Linguagem da Comunica\u00e7\u00e3o Espacial","text":"<p>Imagine que uma sonda espacial e o Centro de Controle da Miss\u00e3o falem idiomas diferentes. JSON (JavaScript Object Notation) \u00e9 uma linguagem de dados universal, compreendida por humanos e m\u00e1quinas. Como a linguagem internacional dos astronautas!</p> <p>Principais propriedades:</p> <ul> <li>\ud83e\udeb6 Leve: transmiss\u00e3o r\u00e1pida mesmo com sinal fraco</li> <li>\ud83d\udc40 Leg\u00edvel por humanos: a estrutura \u00e9 vis\u00edvel a olho nu</li> <li>\ud83d\udd04 Universal: suportado por todas as linguagens de programa\u00e7\u00e3o</li> </ul> <p>\ud83d\udca1 Analogia Espacial:</p> <p>JSON \u00e9 como um telegrama digital com dados sobre estrelas. Em vez de c\u00f3digo Morse, estruturas claras <code>{chave: valor}</code>.</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/3/#2-anatomia-de-uma-mensagem-json","title":"2. Anatomia de uma Mensagem JSON","text":"<p>JSON consiste em dois tipos de estruturas:</p> <p>A. Objetos (Naves Espaciais) <pre><code>{\n  \"name\": \"Voyager-1\",\n  \"launch_year\": 1977,\n  \"is_active\": true,\n  \"position\": [-19.1, 42.7, 0.3]\n}\n</code></pre></p> <p>B. Arrays (Aglomerados Estelares) <pre><code>[\n  {\"name\": \"Sirius\", \"magnitude\": -1.46},\n  {\"name\": \"Canopus\", \"magnitude\": -0.74},\n  {\"name\": \"Arcturus\", \"magnitude\": -0.05}\n]\n</code></pre></p> <p>\u26a1 Regras de sintaxe:</p> <ul> <li>Chaves entre aspas <code>\" \"</code></li> <li>Valores: strings, n\u00fameros, booleanos (<code>true</code>/<code>false</code>), <code>null</code></li> <li>Dados separados por v\u00edrgulas</li> <li>Chaves <code>{}</code> para objetos, colchetes <code>[]</code> para arrays</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/3/#3-json-vs-xml-a-batalha-dos-formatos","title":"3. JSON vs XML: A Batalha dos Formatos","text":"Par\u00e2metro JSON (Sat\u00e9lite Moderno) XML (Telesc\u00f3pio Antigo) Legibilidade Alta (acesso direto aos campos) Baixa (tags <code>&lt;planet&gt;...&lt;/planet&gt;</code>) Tamanho Compacto Volumoso (+30% ao tamanho) Processamento R\u00e1pido Lento Exemplo <code>{\"planet\": \"Mars\"}</code> <code>&lt;planet&gt;Mars&lt;/planet&gt;</code> <p>\ud83d\udd2d Por que JSON venceu no espa\u00e7o?</p> <p>APIs da NASA, SpaceX e ESA usam JSON \u2014 \u00e9 ideal para transmiss\u00e3o de dados!</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/3/#4-trabalhando-com-json-em-codigo","title":"4. Trabalhando com JSON em C\u00f3digo","text":"<p>Exemplo Python (obtendo dados sobre a Lua): <pre><code>import requests\nimport json\n\n# Usamos uma API real, por exemplo, para obter dados do Sistema Solar\n# da The Solar System OpenData API\ntry:\n    response = requests.get(\"https://api.le-systeme-solaire.net/rest/bodies/terre\")\n    response.raise_for_status() # Verifica por erros HTTP (4xx, 5xx)\n\n    planet_data = response.json()\n\n    print(f\"Nome: {planet_data['englishName']}\")\n    print(f\"Luas: {[moon['moon'] for moon in planet_data['moons']]}\")\n\n    # Converte o dicion\u00e1rio Python em uma string JSON para salvar\n    planet_json_str = json.dumps(planet_data, indent=2, ensure_ascii=False) # ensure_ascii=False para caracteres cir\u00edlicos\n    print(\"\\n--- JSON Formatado ---\")\n    print(planet_json_str)\n\nexcept requests.exceptions.RequestException as e:\n    print(f\"Erro na requisi\u00e7\u00e3o: {e}\")\n</code></pre></p> <p>Exemplo JavaScript (processamento de dados do telesc\u00f3pio): <pre><code>const Data = `{\n  \"id\": \"terre\",\n  \"name\": \"La Terre\",\n  \"englishName\": \"Earth\",\n  \"isPlanet\": true,\n  \"moons\": [\n    {\n      \"moon\": \"La Lune\",\n      \"rel\": \"https://api.le-systeme-solaire.net/rest/bodies/lune\"\n    }\n  ],\n  \"semimajorAxis\": 149598023,\n  \"perihelion\": 147095000,\n  \"aphelion\": 152100000,\n  \"eccentricity\": 0.0167,\n  \"inclination\": 0,\n  \"mass\": {\n    \"massValue\": 5.97237,\n    \"massExponent\": 24\n  },\n  \"vol\": {\n    \"volValue\": 1.08321,\n    \"volExponent\": 12\n  },\n  \"density\": 5.5136,\n  \"gravity\": 9.8,\n  \"escape\": 11190,\n  \"meanRadius\": 6371.0084,\n  \"equaRadius\": 6378.1366,\n  \"polarRadius\": 6356.8,\n  \"flattening\": 0.00335,\n  \"dimension\": \"\",\n  \"sideralOrbit\": 365.256,\n  \"sideralRotation\": 23.9345,\n  \"aroundPlanet\": null,\n  \"discoveredBy\": \"\",\n  \"discoveryDate\": \"\",\n  \"alternativeName\": \"\",\n  \"axialTilt\": 23.4393,\n  \"avgTemp\": 288,\n  \"mainAnomaly\": 358.617,\n  \"argPeriapsis\": 85.901,\n  \"longAscNode\": 18.272,\n  \"bodyType\": \"Planet\"\n}`;\n\nconst dataObj = JSON.parse(Data);\nconsole.log(dataObj.target);\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/3/#5-validacao-json-verificando-o-sinal","title":"5. Valida\u00e7\u00e3o JSON: Verificando o \"Sinal\"","text":"<p>Antes de usar os dados, certifique-se de que o JSON:</p> <ol> <li> <p>Tem a estrutura correta (verifique os par\u00eanteses/chaves!)</p> </li> <li> <p>Cont\u00e9m os campos esperados</p> </li> <li> <p>N\u00e3o possui erros de sintaxe</p> </li> </ol> <p>Ferramentas: - JSONLint (como um detector de lixo espacial para JSON) - Parsers de linguagem integrados (ir\u00e3o lan\u00e7ar um erro se o formato estiver incorreto)</p> <p>\u26a0\ufe0f Exemplo de erro:</p> <p><code>{\"planet\": \"Mars\"</code> \u2192 Sem chave de fechamento!</p> <p>Solu\u00e7\u00e3o: Sempre use <code>json.loads()</code> no Python ou <code>JSON.parse()</code> no JS para verifica\u00e7\u00e3o.</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/3/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. JSON significa...</p>  a) Java Space Object Notation  b) JavaScript Object Notation  c) Jupiter's Satellite Orbital Network <p>2. Como um objeto \u00e9 representado em JSON:</p>  a) ()  b) {}  c) [] <p>3. O que N\u00c3O \u00e9 um valor v\u00e1lido em JSON?</p>  a) \"name\": \"Saturn\"  b) \"radius_km\": 58232  c) \"has_rings\": undefined <p>4. Por que JSON \u00e9 melhor que XML para APIs espaciais?</p>  a) Menor tamanho e alta velocidade  b) Suporte a codifica\u00e7\u00f5es alien\u00edgenas  c) Capacidade de armazenar v\u00eddeo <p>5. Como converter uma string JSON em um objeto Python?</p>  a) json.parse()  b) json.to_object()  c) json.loads() Verificar <p>\ud83d\ude80 Resumo do cap\u00edtulo:</p> <p>JSON \u00e9 o \"Esperanto espacial\" do mundo das APIs. Conhecendo sua estrutura, voc\u00ea ser\u00e1 capaz de:</p> <ul> <li> <p>\ud83d\udce1 Receber dados de telesc\u00f3pios e sondas</p> </li> <li> <p>\ud83d\udd27 Converter informa\u00e7\u00f5es entre sistemas</p> </li> <li> <p>\ud83d\udef0\ufe0f Salvar dados cient\u00edficos em arquivos</p> </li> </ul> <p>Prepare-se para a acoplagem! No pr\u00f3ximo cap\u00edtulo, exploraremos a arquitetura REST API \u2014 o sistema de gerenciamento da \"esta\u00e7\u00e3o espacial\" do seu servidor.</p> <p>\ud83d\udccc Pr\u00e1tica: Acesse NASA Open APIs, encontre a API de asteroides (Asteroids NeoWs) e estude a estrutura JSON na resposta!</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/4/","title":"Cap\u00edtulo 1.4: Estrutura da API REST","text":"<p>Tempo de estudo: 45 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/4/#1-api-rest-arquitetura-da-estacao-espacial","title":"1. API REST: Arquitetura da esta\u00e7\u00e3o espacial","text":"<p>Imagine uma esta\u00e7\u00e3o espacial, onde cada m\u00f3dulo tem:</p> <ul> <li> <p>Porta de acoplamento padr\u00e3o (interface \u00fanica)</p> </li> <li> <p>Especializa\u00e7\u00e3o clara (compartimento de habita\u00e7\u00e3o, laborat\u00f3rio, armazenamento)</p> </li> <li> <p>Sistema de coordenadas (localiza\u00e7\u00e3o precisa)</p> </li> </ul> <p>A API REST (Representational State Transfer) funciona com os mesmos princ\u00edpios:</p> <ul> <li> <p>Interface \u00fanica para todos os recursos</p> </li> <li> <p>Separa\u00e7\u00e3o clara de componentes</p> </li> <li> <p>Endere\u00e7amento via URI (coordenadas espaciais)</p> </li> </ul> <p>\ud83d\udca1 Ideia chave:</p> <p>Cada recurso (planetas, foguetes, astronautas) tem um URL \u00fanico e interage atrav\u00e9s de m\u00e9todos HTTP.</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/4/#2-6-principios-rest-na-analogia-espacial","title":"2. 6 princ\u00edpios REST na analogia espacial","text":"Princ\u00edpio REST An\u00e1logo na ISS Significado para a API Interface \u00fanica N\u00f3s de acoplamento padr\u00e3o Regras id\u00eanticas para todas as requisi\u00e7\u00f5es Stateless Cada comando \u00e9 autossuficiente O servidor n\u00e3o armazena o estado do cliente Cache Reservas locais de provis\u00f5es Armazenamento de respostas frequentes Cliente-servidor Separa\u00e7\u00e3o clara: MCC \u2194 Esta\u00e7\u00e3o Desenvolvimento independente de componentes Multicamadas Sat\u00e9lites retransmissores Proxies, balanceadores de carga C\u00f3digo sob demanda Download de software para experimentos (Opcional) Transmiss\u00e3o de scripts"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/4/#3-recursos-e-uri-coordenadas-espaciais","title":"3. Recursos e URI: Coordenadas espaciais","text":"<p>Cada objeto na API \u00e9 um recurso com um endere\u00e7o \u00fanico: <pre><code>https://api.spacexdata.com/v4/    \u2190 URL Base\n          rockets/            \u2190 Cole\u00e7\u00e3o de foguetes\n          rockets/5e9d0d95eda69973a809d1ec \u2190 Foguete espec\u00edfico (por ID)\n</code></pre></p> <p>Exemplos de recursos espaciais:</p> <ul> <li><code>GET /stars</code> \u2192 Lista de estrelas</li> <li><code>GET /stars/sirius</code> \u2192 Dados sobre S\u00edrius</li> <li><code>POST /satellites</code> \u2192 Lan\u00e7ar um novo sat\u00e9lite</li> <li><code>PUT /missions/artemis</code> \u2192 Atualizar miss\u00e3o</li> </ul> <p>Esquema de hierarquia URI: <pre><code>[URL Base]\n\u251c\u2500\u2500 /planets          \u2192 Cole\u00e7\u00e3o de planetas\n\u2502   \u251c\u2500\u2500 /mars         \u2192 Recurso \"Marte\"\n\u2502   \u2514\u2500\u2500 /venus        \u2192 Recurso \"V\u00eanus\"\n\u2514\u2500\u2500 /launches         \u2192 Cole\u00e7\u00e3o de lan\u00e7amentos\n    \u251c\u2500\u2500 /upcoming     \u2192 Subcole\u00e7\u00e3o\n    \u2514\u2500\u2500 /latest       \u2192 Recurso\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/4/#4-operacoes-crud-via-metodos-http","title":"4. Opera\u00e7\u00f5es CRUD via m\u00e9todos HTTP","text":"Opera\u00e7\u00e3o M\u00e9todo HTTP Exemplo (Esta\u00e7\u00e3o espacial) Resposta do servidor Create <code>POST</code> Enviar novo m\u00f3dulo <code>201 Created</code> Read <code>GET</code> Solicitar dados sobre o m\u00f3dulo <code>200 OK</code> Update <code>PUT</code> Reconfigurar m\u00f3dulo <code>200 OK</code> Delete <code>DELETE</code> Desacoplar m\u00f3dulo antigo <code>204 No Content</code> <p>\u26a1 Exemplo de c\u00f3digo (Adicionar sat\u00e9lite): <pre><code>import requests\n\n# Usamos um servi\u00e7o de teste que simula a cria\u00e7\u00e3o de um recurso\nnew_post = {\n    \"title\": \"New Telescope Launch\",\n    \"body\": \"Hubble-2 is ready for deployment.\",\n    \"userId\": 1\n}\n\n# Chave API condicional para demonstra\u00e7\u00e3o de cabe\u00e7alhos\nheaders = {\n    \"Authorization\": \"Bearer YOUR_DEMO_KEY\",\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n}\n\nresponse = requests.post(\n    \"https://jsonplaceholder.typicode.com/posts\",\n    json=new_post,\n    headers=headers\n)\n\nif response.status_code == 201:\n    print(\"\u2705 Postagem sobre o novo sat\u00e9lite criada com sucesso!\")\n    print(\"Resposta do servidor:\")\n    print(response.json())\nelse:\n    print(f\"\u274c Erro! Status: {response.status_code}\")\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/4/#5-versionamento-da-api-evolucao-da-estacao","title":"5. Versionamento da API: Evolu\u00e7\u00e3o da esta\u00e7\u00e3o","text":"<p>Assim como a ISS \u00e9 atualizada (M\u00f3dulo \"Zarya\" \u2192 \"Nauka\"), a API muda de vers\u00e3o:</p> <ul> <li>No URL: <code>https://api.spacex.com/v4/rockets</code></li> <li>Nos cabe\u00e7alhos: <code>Accept: application/vnd.spacex-v5+json</code></li> </ul> <p>Por que \u00e9 importante:</p> <ul> <li>v1: Funcionalidade b\u00e1sica</li> <li>v2: Novos campos adicionados</li> <li>v3: Estrutura das respostas alterada</li> </ul> <p>\u26a0\ufe0f Dica: Sempre especifique a vers\u00e3o nas requisi\u00e7\u00f5es, caso contr\u00e1rio, a \"acoplagem\" pode falhar!</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/4/#6-hipermidia-hateoas-navegacao-no-espaco","title":"6. Hiperm\u00eddia (HATEOAS): Navega\u00e7\u00e3o no espa\u00e7o","text":"<p>A resposta da API cont\u00e9m links para recursos relacionados \u2014 como um mapa da esta\u00e7\u00e3o: <pre><code>{\n  \"id\": \"iss\",\n  \"name\": \"Esta\u00e7\u00e3o Espacial Internacional\",\n  \"crew\": 7,\n  \"_links\": {\n    \"self\": { \"href\": \"/stations/iss\" },\n    \"modules\": { \"href\": \"/stations/iss/modules\" },\n    \"schedule\": { \"href\": \"/stations/iss/schedule\" }\n  }\n}\n</code></pre></p> <p>Quiz para fixa\u00e7\u00e3o</p> <p>1. REST significa:</p>  a) Rocket Engine System Transfer  b) Representational State Transfer  c) Remote Space Technology <p>2. O princ\u00edpio \"Stateless\" significa:</p>  a) O servidor armazena o hist\u00f3rico de requisi\u00e7\u00f5es  b) Cada requisi\u00e7\u00e3o \u00e9 autossuficiente  c) Os dados s\u00e3o transmitidos apenas via SSL <p>3. URI para obter dados sobre o foguete Falcon Heavy:</p>  a) POST /rockets/falcon-heavy  b) GET /falcon-heavy  c) GET /rockets/falcon-heavy <p>4. M\u00e9todo para atualiza\u00e7\u00e3o completa de um recurso:</p>  a) PATCH  b) POST  c) PUT <p>5. HATEOAS na API \u00e9:</p>  a) Um sistema de links para recursos relacionados  b) Um protocolo de criptografia  c) Uma linguagem de consulta Verificar <p>\ud83d\ude80 Conclus\u00e3o do cap\u00edtulo:</p> <p>A API REST \u00e9 uma \"arquitetura de esta\u00e7\u00e3o espacial\" padronizada para servi\u00e7os web. Lembre-se:</p> <ul> <li>Recursos = Objetos (foguetes, planetas)</li> <li>URI = Coordenadas de objetos</li> <li>M\u00e9todos HTTP = Comandos de controle</li> <li>Vers\u00f5es = Moderniza\u00e7\u00f5es da esta\u00e7\u00e3o</li> </ul> <p>Final da prepara\u00e7\u00e3o! No pr\u00f3ximo cap\u00edtulo, lan\u00e7aremos uma \"sonda de teste\" \u2014 aprenderemos a testar APIs via Postman.</p> <p>\ud83d\udccc Pr\u00e1tica: Estude a estrutura da API SpaceX e tente executar:</p> <p><code>GET https://api.spacexdata.com/v4/launches/latest</code> \u2014 observe o URI e a estrutura JSON!</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/5/","title":"Cap\u00edtulo 1.5: Teste de API com Postman","text":"<p>Tempo de estudo: 50 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/5/#1-por-que-testar-apis-verificacao-pre-lancamento","title":"1. Por que testar APIs? Verifica\u00e7\u00e3o Pr\u00e9-lan\u00e7amento","text":"<p>Imagine: antes de lan\u00e7ar um foguete, os engenheiros realizam testes de ativa\u00e7\u00e3o dos sistemas. Pule a verifica\u00e7\u00e3o \u2014 e a miss\u00e3o pode falhar!</p> <p>Teste de API \u2014 seus testes de controle:</p> <ul> <li> <p>\u2705 Verificar a operacionalidade dos \"n\u00f3s de acoplamento\"</p> </li> <li> <p>\ud83d\udee1\ufe0f Detectar vulnerabilidades antes do uso em combate</p> </li> <li> <p>\ud83d\udcca Garantir que os dados sejam transmitidos sem distor\u00e7\u00f5es</p> </li> </ul> <p>\ud83d\udca1 Analogia espacial: Postman \u2014 como um console de teste do Centro de Controle de Miss\u00f5es (CCM) para simular todos os cen\u00e1rios: \"E se solicitarmos dados de um planeta inexistente? O servidor aguentar\u00e1 1000 requisi\u00e7\u00f5es/seg?\"</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/5/#2-postman-centro-de-controle-de-voos-para-api","title":"2. Postman: \"Centro de Controle de Voos\" para API","text":"<p>Funcionalidades:</p> <ul> <li> <p>\ud83d\udce1 Envio de quaisquer requisi\u00e7\u00f5es HTTP (GET, POST, PUT, DELETE)</p> </li> <li> <p>\ud83d\udd0d An\u00e1lise de respostas (c\u00f3digos de status, cabe\u00e7alhos, corpo JSON)</p> </li> <li> <p>\ud83e\uddea Escrita de testes autom\u00e1ticos (JavaScript)</p> </li> <li> <p>\ud83c\udf10 Trabalho com vari\u00e1veis de ambiente (teste vs produ\u00e7\u00e3o)</p> </li> </ul> <p>\ud83d\udc49 Baixar Postman</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/5/#3-primeira-execucao-testando-a-api-de-planetas","title":"3. Primeira execu\u00e7\u00e3o: Testando a API de planetas","text":"<p>Passo 1: Criar uma requisi\u00e7\u00e3o</p> <ol> <li> <p>Abrir Postman \u2192 New \u2192 Request</p> </li> <li> <p>Inserir URL: <code>https://api.spacexdata.com/v4/rockets</code></p> </li> <li> <p>Selecionar m\u00e9todo: GET</p> </li> </ol> <p>Passo 2: Enviar o \"sinal\" <pre><code>[CCM] -- GET /planetas --&gt; [Servidor SpaceX]\n</code></pre></p> <p>Passo 3: Analisar a telemetria: - Status: <code>200 OK</code> - Corpo da resposta (JSON): lista de foguetes com par\u00e2metros <pre><code>[\n  {\n    \"name\": \"Falcon 1\",\n    \"type\": \"rocket\",\n    \"active\": false,\n    \"stages\": 2,\n    \"id\": \"5e9d0d95eda69955f709d1eb\"\n  },\n  {\n    \"name\": \"Falcon 9\",\n    \"type\": \"rocket\",\n    \"active\": true,\n    \"id\": \"5e9d0d95eda69973a809d1ec\"\n  }\n]\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/5/#4-diagrama-componentes-do-postman","title":"4. Diagrama: Componentes do Postman","text":"<pre><code>[Espa\u00e7o de trabalho]\n\u251c\u2500\u2500 Aba \"Params\" (Par\u00e2metros de consulta)\n\u251c\u2500\u2500 Aba \"Headers\" (Cabe\u00e7alhos)\n\u251c\u2500\u2500 Aba \"Body\" (Corpo da requisi\u00e7\u00e3o para POST/PUT)\n\u251c\u2500\u2500 Aba \"Tests\" (Scripts para verifica\u00e7\u00f5es)\n\u2514\u2500\u2500 Painel de resposta (Status, Time, Size, Body)\n</code></pre>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/5/#5-criar-um-cenario-complexo-lancamento-de-missao","title":"5. Criar um cen\u00e1rio complexo: Lan\u00e7amento de miss\u00e3o","text":"<p>Teste: Adicionar um novo planeta ao cat\u00e1logo</p> <ol> <li> <p>M\u00e9todo: POST</p> </li> <li> <p>URL: <code>https://jsonplaceholder.typicode.com/posts</code> (exemplo)</p> </li> <li> <p>Em Headers:    <pre><code> { \"Content-Type\": \"application/json\" }\n</code></pre></p> </li> <li>Em Body (raw \u2192 JSON):    <pre><code>{\n \"title\": \"New Exoplanet Found\",\n \"body\": \"Proxima Centauri b shows signs of a stable atmosphere.\",\n \"userId\": 1\n }\n</code></pre></li> </ol> <p>Verifica\u00e7\u00e3o autom\u00e1tica em Tests: <pre><code>// Verifica\u00e7\u00e3o de status\npm.test(\"Post created successfully\", () =&gt; {\n    pm.response.to.have.status(201);\n});\n\n// Verifica\u00e7\u00e3o da estrutura e dados da resposta\npm.test(\"Response contains the new post data\", () =&gt; {\n    const response = pm.response.json();\n    pm.expect(response).to.have.property(\"id\"); // Verifica se o servidor atribuiu um ID\n    pm.expect(response.title).to.eql(\"New Exoplanet Found\");\n});\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/5/#6-variaveis-de-ambiente-terra-vs-marte","title":"6. Vari\u00e1veis de ambiente: Terra vs Marte","text":"<p>Como testar em diferentes servidores (teste/produ\u00e7\u00e3o)?</p> <ol> <li>Crie ambientes:</li> <li><code>Local</code> \u2192 <code>http://localhost:3000</code></li> <li> <p><code>Production</code> \u2192 <code>https://api.nasa.gov</code></p> </li> <li> <p>Nas requisi\u00e7\u00f5es, use vari\u00e1veis:    <pre><code>{{base_url}}/planetas  # Ir\u00e1 substituir pela URL atual\n</code></pre></p> </li> </ol> <p>\u26a0\ufe0f Importante! Nunca teste <code>DELETE</code> em um servidor de produ\u00e7\u00e3o!</p>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/5/#7-colecoes-biblioteca-de-missoes-espaciais","title":"7. Cole\u00e7\u00f5es: Biblioteca de miss\u00f5es espaciais","text":"<p>Agrupe as requisi\u00e7\u00f5es: <pre><code>    \ud83d\udcc2 Cole\u00e7\u00e3o \"NASA\"\n    \u251c\u2500\u2500 GET Planetas\n    \u251c\u2500\u2500 POST Novo planeta\n    \u2514\u2500\u2500 DELETE Planeta (modo de teste)\n</code></pre> Vantagens:</p> <ul> <li>\ud83d\ude80 Execu\u00e7\u00e3o de todos os testes com um \u00fanico bot\u00e3o</li> <li>\ud83d\udce4 Exporta\u00e7\u00e3o/importa\u00e7\u00e3o de configura\u00e7\u00f5es</li> <li>\ud83d\udc68\u200d\ud83d\ude80 Colabora\u00e7\u00e3o em equipe</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/5/#8-automacao-verificacoes-regulares-de-satelites","title":"8. Automa\u00e7\u00e3o: Verifica\u00e7\u00f5es regulares de sat\u00e9lites","text":"<p>Configure o monitoramento de API atrav\u00e9s do Postman:</p> <ol> <li> <p>Schedule \u2192 A cada 2 horas</p> </li> <li> <p>Testes:    <pre><code>pm.test(\"Sat\u00e9lite online\", () =&gt; {\n  pm.response.to.have.status(200);\n  pm.expect(pm.response.json().signal).above(50); // Sinal &gt;50%\n});\n</code></pre></p> </li> <li> <p>Notifica\u00e7\u00f5es no Slack/e-mail em caso de falha</p> </li> </ol>"},{"location":"pt/Cap%C3%ADtulo%201%20-%20No%C3%A7%C3%B5es%20b%C3%A1sicas%20da%20API/5/#questionario-para-fixacao","title":"Question\u00e1rio para fixa\u00e7\u00e3o","text":"<p>1. Postman \u00e9 usado para:</p>  a) Enviar e-mail  b) Testar APIs  c) Criar bancos de dados <p>2. Qual status esperar ao criar um objeto com sucesso?</p>  a) 200 OK  b) 201 Created  c) 404 Not Found <p>3. Onde escrever testes autom\u00e1ticos no Postman?</p>  a) Aba \"Body\"  b) Aba \"Tests\"  c) Aba \"Cookies\" <p>4. Vari\u00e1veis de ambiente s\u00e3o necess\u00e1rias para:</p>  a) Alternar entre o servidor de teste e o de produ\u00e7\u00e3o  b) Armazenar senhas em texto claro  c) Gerar dados aleat\u00f3rios <p>5. O que as monitorias regulares verificam?</p>  a) Estabilidade do funcionamento da API  b) Velocidade da internet  c) Atualidade da documenta\u00e7\u00e3o Verificar <p>\ud83d\ude80 Resumo do cap\u00edtulo: Postman \u2014 seu \"console de controle\" universal para testar APIs. Com ele voc\u00ea ir\u00e1: - Verificar o funcionamento dos \"sistemas de bordo\" antes do lan\u00e7amento - Criar uma biblioteca de cen\u00e1rios de teste - Automatizar o monitoramento de servi\u00e7os espaciais</p> <p>\ud83d\udccc Tarefa pr\u00e1tica:</p> <ol> <li>Instale o Postman</li> <li>Crie uma requisi\u00e7\u00e3o para a API da SpaceX: <code>GET https://api.spacexdata.com/v4/launches/latest</code></li> <li>Escreva um teste que verifique que:</li> <li>O status da resposta \u00e9 <code>200</code></li> <li>O campo <code>name</code> cont\u00e9m a palavra \"Falcon\"</li> <li>O tempo de resposta \u00e9 &lt; 500 ms</li> </ol> <p>Parab\u00e9ns pela conclus\u00e3o do Cap\u00edtulo 1!</p> <p>Voc\u00ea dominou os fundamentos do trabalho com APIs. Nos pr\u00f3ximos cap\u00edtulos, construiremos nossa pr\u00f3pria \"nave espacial\" \u2014 uma aplica\u00e7\u00e3o web que usa APIs espaciais!</p> <p>\ud83c\udf0c Recursos adicionais:</p> <ul> <li>Documenta\u00e7\u00e3o da API SpaceX</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/","title":"Cap\u00edtulo 2.1: Preparando o Ambiente Laravel","text":""},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/#tempo-de-estudo-1-2-horas","title":"Tempo de Estudo: 1-2 horas","text":""},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/#1-por-que-um-ambiente-local-e-necessario","title":"1. Por que um Ambiente Local \u00e9 Necess\u00e1rio?","text":"<p>Imagine que voc\u00ea est\u00e1 construindo uma sonda espacial. Antes de lan\u00e7\u00e1-la no espa\u00e7o, voc\u00ea testa todos os sistemas na Terra. Um ambiente local \u00e9 o seu \"laborat\u00f3rio de controle\" para o c\u00f3digo:</p> <ul> <li>Experimentos seguros sem impacto no servidor de produ\u00e7\u00e3o</li> <li>Implanta\u00e7\u00e3o r\u00e1pida de depend\u00eancias</li> <li>F\u00e1cil altern\u00e2ncia entre vers\u00f5es de software</li> </ul> <p>\ud83d\udca1 Analogia Espacial: Herd = Complexo de Lan\u00e7amento M\u00f3vel Docker = Simulador de Esta\u00e7\u00e3o Espacial XAMPP = Banco de Testes Estacion\u00e1rio</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/#2-instalacao-do-herd","title":"2. Instala\u00e7\u00e3o do Herd","text":"<p>Herd \u2014 uma ferramenta moderna para gerenciar o ambiente PHP (an\u00e1logo ao Laravel Valet).</p> <p>Passos de Instala\u00e7\u00e3o:</p> <ol> <li>Baixe o instalador: herd.laravel.com</li> <li>Execute <code>Herd Installer.exe</code> \u2192 Next \u2192 Install</li> <li>Ap\u00f3s a instala\u00e7\u00e3o:<ul> <li>Abra o Herd no menu Iniciar. O \u00edcone do aplicativo aparecer\u00e1 na bandeja do sistema (perto do rel\u00f3gio).</li> <li>Clique no \u00edcone do Herd: certifique-se de que o Nginx e a vers\u00e3o de PHP desejada (por exemplo, 8.3) estejam em execu\u00e7\u00e3o (marcados com um ponto verde).</li> <li>V\u00e1 para Herd Paths e adicione a pasta onde seus projetos ser\u00e3o armazenados (por exemplo, C:\\Users\\YourUser\\Code). O Herd criar\u00e1 automaticamente um dom\u00ednio bonito do tipo nome-da-pasta.test para cada subdiret\u00f3rio nesta pasta.</li> </ul> </li> </ol> <p>\u26a0\ufe0f Importante! Durante a instala\u00e7\u00e3o: - Permita o acesso \u00e0 rede (se o firewall solicitar) - Verifique o caminho no PATH: <code>C:\\Program Files\\Herd\\bin</code></p> <p>Verifica\u00e7\u00e3o de Opera\u00e7\u00e3o:</p> <ol> <li>Clique no \u00edcone do Herd na bandeja do sistema.</li> <li>Certifique-se de que os servi\u00e7os Nginx e PHP estejam ativos (indicadores verdes).</li> <li>Na sua pasta de projetos (por exemplo, C:\\Users\\YourUser\\Code), crie uma pasta test e dentro dela um arquivo index.php com o conte\u00fado <code>&lt;?php phpinfo(); ?&gt;</code>.</li> <li>No Herd, atrav\u00e9s da aba \"sites\", especifique o caminho para a pasta test e clique em \"Add site\".</li> <li>Abra o endere\u00e7o http://test.test no navegador. Voc\u00ea dever\u00e1 ver a p\u00e1gina com informa\u00e7\u00f5es sobre o PHP.</li> </ol>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/#3-metodos-alternativos-brevemente","title":"3. M\u00e9todos Alternativos (brevemente)","text":"Ferramenta Para quem Pr\u00f3s Contras Laravel Sail (Docker) Para todos os n\u00edveis Isolamento completo, repetibilidade do ambiente, suporte oficial do Laravel Requer instala\u00e7\u00e3o do Docker, consome mais recursos XAMPP Iniciantes Tudo em um instalador (All-in-One) Volumoso, mais dif\u00edcil de gerenciar vers\u00f5es de software, polui o sistema Laragon Desenvolvedores Windows R\u00e1pido, f\u00e1cil de alternar vers\u00f5es, configura\u00e7\u00e3o autom\u00e1tica de hosts Requer rein\u00edcio manual do servidor web ao adicionar um novo projeto <p>Exemplo com Docker (Laravel Sail): <pre><code># Ap\u00f3s a instala\u00e7\u00e3o do Docker\n./vendor/bin/sail up\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/#4-instalacao-do-php-e-composer","title":"4. Instala\u00e7\u00e3o do PHP e Composer","text":"<p>Se n\u00e3o estiver usando o Herd:</p> <ol> <li>PHP:<ul> <li>Baixe o PHP 8.3 para Windows</li> <li>Descompacte em <code>C:\\PHP</code></li> <li>Adicione ao PATH:  <pre><code># Recomenda-se executar no PowerShell como administrador\n[Environment]::SetEnvironmentVariable(\"Path\", \"$env:Path;C:\\PHP\", \"User\")\n</code></pre></li> </ul> </li> <li>Composer:<ul> <li>Execute Composer-Setup.exe</li> <li>Verifica\u00e7\u00e3o:  <pre><code>php -v\ncomposer --version\n</code></pre></li> </ul> </li> </ol>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/#5-instalacao-do-postgresql","title":"5. Instala\u00e7\u00e3o do PostgreSQL","text":"<p>Para trabalhar com bancos de dados:</p> <ol> <li>Baixe o PostgreSQL 15</li> <li>Execute o instalador:</li> <li>Senha para o superusu\u00e1rio: <code>admin</code> (ou sua pr\u00f3pria)</li> <li>Porta: <code>5432</code> (padr\u00e3o)</li> <li>Ap\u00f3s a instala\u00e7\u00e3o:</li> <li>Abra o pgAdmin 4 (cliente gr\u00e1fico) <p>Voc\u00ea pode usar qualquer outro cliente para trabalhar com o banco de dados, por exemplo, DBeaver, DataGrip ou at\u00e9 mesmo a linha de comando. Eu prefiro DBeaver - mas \u00e9 uma quest\u00e3o de gosto</p> </li> <li>Crie um banco de dados para o projeto: <code>space_api</code></li> </ol>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/#6-instalacao-do-laravel","title":"6. Instala\u00e7\u00e3o do Laravel","text":"<ol> <li> <p>Via Composer: <pre><code>composer create-project laravel/laravel space-api\ncd space-api\n</code></pre></p> </li> <li> <p>Inicializa\u00e7\u00e3o do Git (opcional): <pre><code>git init\ngit add .\ngit commit -m \"In\u00edcio do projeto espacial\"\n</code></pre></p> </li> <li> <p>Iniciando e Verificando o Servidor:</p> <p>Se voc\u00ea estiver usando Herd: Certifique-se de que seu projeto space-api esteja na pasta que voc\u00ea adicionou ao Herd. Abra no navegador o endere\u00e7o: http://space-api.test Voc\u00ea dever\u00e1 ver a p\u00e1gina inicial do Laravel. O servidor j\u00e1 est\u00e1 funcionando gra\u00e7as ao Herd!</p> </li> </ol> <p>Se voc\u00ea N\u00c3O estiver usando Herd (instala\u00e7\u00e3o manual): <pre><code>php artisan serve\n</code></pre> Abra no navegador: http://localhost:8000 \u2192 A p\u00e1gina inicial do Laravel dever\u00e1 aparecer!</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/#ao-criar-um-projeto-no-herd","title":"Ao criar um projeto no Herd:","text":"<p>Basta seguir as instru\u00e7\u00f5es na tela. Para facilitar, o nome do projeto ser\u00e1 <code>space-api</code>. Starter kit - qualquer um, mas eu prefiro React.</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/#certifique-se-de-incluir-o-phpunit-ele-nos-sera-util-mais-adiante","title":"Certifique-se de incluir o phpunit - ele nos ser\u00e1 \u00fatil mais adiante","text":""},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/#7-configuracao-do-projeto","title":"7. Configura\u00e7\u00e3o do Projeto","text":"<p>Arquivos Importantes:</p> <ul> <li><code>.env</code> \u2014 configura\u00e7\u00f5es de ambiente (chaves, bancos de dados)</li> <li><code>config/database.php</code> \u2014 configura\u00e7\u00e3o do SGBD</li> <li><code>composer.json</code> \u2014 depend\u00eancias PHP</li> </ul> <p>Conex\u00e3o do BD ao Projeto:</p> <p>Adicione em <code>.env</code>:</p> <pre><code>DB_CONNECTION=pgsql\nDB_HOST=127.0.0.1\nDB_PORT=5432\nDB_DATABASE=space_api\nDB_USERNAME=postgres # Login para postgres\nDB_PASSWORD=admin # Senha para postgres\n</code></pre> <p>Primeiros comandos Artisan: <pre><code>php artisan key:generate  # Gera\u00e7\u00e3o da chave da aplica\u00e7\u00e3o\nphp artisan migrate:fresh # Migra\u00e7\u00e3o do banco de dados (Ao mudar para postgres)\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/#quiz-para-fixacao","title":"Quiz para Fixa\u00e7\u00e3o","text":"<p>1. Herd \u00e9...</p>  a) Uma ferramenta para gerenciar o ambiente PHP  b) Um editor de c\u00f3digo  c) Um sistema operacional <p>2. Qual ferramenta o Laravel usa para gerenciar as depend\u00eancias do PHP?</p>  a) npm  b) Composer  c) Artisan <p>3. Porta padr\u00e3o para PostgreSQL:</p>  a) 3306  b) 5432  c) 8000 <p>4. Comando para criar um projeto Laravel via Composer:</p>  a) composer create-laravel  b) laravel new  c) composer create-project laravel/laravel <p>5. Arquivo com as configura\u00e7\u00f5es de ambiente?</p>  a) .env  b) config.php  c) settings.ini Verificar"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/1/#resumo-do-capitulo","title":"\ud83d\ude80 Resumo do Cap\u00edtulo","text":"<p>Voc\u00ea implantou o \"ponto de partida\" para a API espacial! Agora voc\u00ea tem:</p> <ul> <li>\ud83d\udee0\ufe0f Ambiente local (Herd ou instala\u00e7\u00e3o manual) com PHP e Nginx</li> <li>\ud83d\udc18 Servidor de banco de dados PostgreSQL instalado</li> <li>\ud83d\ude80 Projeto Laravel <code>space-api</code></li> <li>\ud83d\udd0c Conex\u00e3o configurada ao banco de dados</li> </ul> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>Se voc\u00ea est\u00e1 com Herd: Certifique-se de que o site abre no endere\u00e7o <code>http://space-api.test</code>.</li> <li>Se sem Herd: Certifique-se de que o comando <code>php artisan serve</code> funciona e o site abre no endere\u00e7o <code>http://localhost:8000</code>.</li> <li>De qualquer forma, verifique se o banco de dados <code>space_api</code> criado est\u00e1 vis\u00edvel no <code>pgAdmin 4</code>.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/2/","title":"Cap\u00edtulo 2.2: Criando o Modelo Planet","text":"<p>Tempo de estudo: 45 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/2/#1-o-modelo-no-laravel-planta-de-um-objeto-espacial","title":"1. O Modelo no Laravel: Planta de um Objeto Espacial","text":"<p>Na arquitetura MVC (Model-View-Controller), o modelo \u00e9:</p> <ul> <li>\ud83d\udce6 Um cont\u00eainer para dados (par\u00e2metros de planetas)</li> <li>\ud83d\udd0c Uma interface para interagir com o banco de dados</li> <li>\ud83d\udee1\ufe0f O centro da l\u00f3gica de neg\u00f3cios da aplica\u00e7\u00e3o</li> </ul> <p>\ud83d\udca1 Analogia Espacial: O modelo <code>Planet</code> = A planta de um planeta no computador do Centro de Controle da Miss\u00e3o (CCM). Com ele, voc\u00ea pode:</p> <ul> <li>Criar um novo planeta no cat\u00e1logo (<code>INSERT</code>)</li> <li>Obter dados sobre Marte (<code>SELECT</code>)</li> <li>Atualizar informa\u00e7\u00f5es sobre a atmosfera (<code>UPDATE</code>)</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/2/#2-criando-o-modelo-e-a-migracao","title":"2. Criando o Modelo e a Migra\u00e7\u00e3o","text":"<p>Laravel usa o Artisan CLI \u2014 seu \"painel de controle\" do projeto.</p> <p>Passo 1: Gerando o modelo com a migra\u00e7\u00e3o <pre><code>php artisan make:model Planet -m\n</code></pre></p> <p>O que foi criado: <pre><code>app/\n  \u2514\u2500\u2500 Models/\n      \u2514\u2500\u2500 Planet.php    \u2190 Modelo\ndatabase/\n  \u2514\u2500\u2500 migrations/\n      \u2514\u2500\u2500 2025_08_04_000000_create_planets_table.php  \u2190 Migra\u00e7\u00e3o\n</code></pre></p> <p>Flags do Artisan:</p> <ul> <li><code>-m</code> \u2192 Criar uma migra\u00e7\u00e3o</li> <li><code>-c</code> \u2192 Criar um controller</li> <li><code>-r</code> \u2192 Um controller de recursos</li> </ul> <p>\ud83d\udca1 Dica Profissional: Essas flags podem ser combinadas para m\u00e1xima efici\u00eancia. O comando <code>php artisan make:model Planet -mcr</code> criar\u00e1 imediatamente o modelo, a migra\u00e7\u00e3o e um controller de recursos para gerenciar esse modelo. Isso economiza muito tempo.</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/2/#3-configurando-o-modelo-planet","title":"3. Configurando o Modelo Planet","text":"<p>Abra <code>app/Models/Planet.php</code>: <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Planet extends Model\n{\n    // Nome da tabela (por padr\u00e3o: 'planets')\n    // O Laravel assume automaticamente que o nome da tabela \u00e9 o plural do nome do modelo em snake_case (Planet -&gt; planets).\n     // Portanto, esta propriedade n\u00e3o \u00e9 obrigat\u00f3ria aqui, mas \u00e9 \u00fatil para clareza.\n    protected $table = 'planets';\n\n    // Campos permitidos para preenchimento em massa\n    protected $fillable = [\n        'name',\n        'description',\n        'size_km',\n        'solar_system',\n        'image_url'\n    ];\n\n    // Tipos de dados para convers\u00e3o autom\u00e1tica\n    protected $casts = [\n        'size_km' =&gt; 'integer'\n    ];\n}\n</code></pre></p> <p>Explica\u00e7\u00e3o das Propriedades:</p> Propriedade Valor Exemplo de Dados <code>$table</code> Nome da tabela no BD <code>planets</code> <code>$fillable</code> Campos para preenchimento em massa <code>name</code>, <code>size_km</code> <code>$casts</code> Convers\u00e3o autom\u00e1tica de tipos <code>size_km: integer</code>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/2/#4-design-da-tabela-de-planetas","title":"4. Design da Tabela de Planetas","text":"<p>Antes de editar a migra\u00e7\u00e3o, vamos definir a estrutura de um \"planeta\":</p> Campo Tipo de Dados Descri\u00e7\u00e3o Exemplo de Valor <code>id</code> BIGINT (PK) ID \u00danico 1 <code>name</code> VARCHAR(255) Nome do planeta \"Marte\" <code>description</code> TEXT Descri\u00e7\u00e3o \"Planeta vermelho...\" <code>size_km</code> INTEGER Di\u00e2metro em km 6779 <code>solar_system</code> VARCHAR(100) Sistema Solar \"Sistema Solar\" <code>image_url</code> VARCHAR(2048) URL da foto (pode ser nulo) \"https://...\" <code>created_at</code> TIMESTAMP Data de cria\u00e7\u00e3o 2025-08-04 12:00:00 <code>updated_at</code> TIMESTAMP Data de atualiza\u00e7\u00e3o 2025-08-05 09:30:00"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/2/#5-editando-a-migracao","title":"5. Editando a Migra\u00e7\u00e3o","text":"<p>Abra o arquivo de migra\u00e7\u00e3o em <code>database/migrations/..._create_planets_table.php</code>:</p> <pre><code>&lt;?php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreatePlanetsTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('planets', function (Blueprint $table) {\n            $table-&gt;id(); // BIGINT auto-incremento\n\n            $table-&gt;string('name')-&gt;unique();\n            $table-&gt;text('description');\n            $table-&gt;integer('size_km');\n            $table-&gt;string('solar_system', 100);\n            $table-&gt;string('image_url', 2048)-&gt;nullable();\n\n            $table-&gt;timestamps(); // created_at + updated_at\n        });\n    }\n\n    public function down()\n    {\n        Schema::dropIfExists('planets');\n    }\n}\n</code></pre> <p>Pontos Chave:</p> <ul> <li><code>-&gt;unique()</code> \u2192 Garante a unicidade dos nomes</li> <li><code>-&gt;nullable()</code> \u2192 O campo pode ser nulo</li> <li><code>timestamps()</code> \u2192 Gerenciamento autom\u00e1tico de datas</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/2/#6-executando-a-migracao-previa","title":"6. Executando a Migra\u00e7\u00e3o (Pr\u00e9via)","text":"<p>Embora a execu\u00e7\u00e3o ser\u00e1 no Cap\u00edtulo 2.3, vamos ver como ser\u00e1: <pre><code>php artisan migrate\n</code></pre></p> <p>Sa\u00edda Esperada: <pre><code>Migrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (32.15ms)\n</code></pre></p> <p>Verifica\u00e7\u00e3o no pgAdmin 4:</p> <ol> <li>Abra o banco de dados <code>space_api</code> \u2192 Schemas \u2192 Tables</li> <li>A tabela <code>planets</code> deve aparecer com seus campos</li> </ol>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/2/#7-abordagem-alternativa-geradores-de-codigo","title":"7. Abordagem Alternativa: Geradores de C\u00f3digo","text":"<p>Para acelerar o desenvolvimento, voc\u00ea pode usar pacotes:</p> <ul> <li>Laravel Blueprint - cria modelos/migra\u00e7\u00f5es a partir de uma descri\u00e7\u00e3o YAML</li> <li>InfyOm Laravel Generator - gerador baseado em um esquema de BD</li> </ul> <p>Exemplo de Blueprint: <pre><code>models:\n  Planet:\n    name: string:255\n    description: text\n    size_km: integer\n    solar_system: string:100\n    image_url: string:2048? # O caractere '?' significa que o campo pode ser nulo\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/2/#quiz-para-consolidacao","title":"Quiz para Consolida\u00e7\u00e3o","text":"<p>1. Comando Artisan para criar um modelo e sua migra\u00e7\u00e3o associada:</p>  a) php artisan make:model Planet -m  b) php artisan create:model Planet  c) php artisan model:new Planet --m <p>2. A propriedade `$fillable` no modelo \u00e9 usada para</p>  a) Prote\u00e7\u00e3o contra atribui\u00e7\u00e3o em massa  b) Criptografia autom\u00e1tica de dados  c) Descri\u00e7\u00e3o de chaves estrangeiras <p>3. `nullable()` na migra\u00e7\u00e3o significa:</p>  a) O campo \u00e9 obrigat\u00f3rio  b) O campo pode ser nulo  c) O campo ser\u00e1 exclu\u00eddo <p>4. Tipo de campo para uma longa descri\u00e7\u00e3o do planeta:</p>  a) string  b) text  c) varchar <p>5. O m\u00e9todo `timestamps()` cria:</p>  a) Apenas created_at  b) created_at e updated_at  c) id, created_at, updated_at Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo: Voc\u00ea criou um \"g\u00eameo digital\" do planeta! Agora seu projeto tem:</p> <ul> <li>\ud83e\ude90 Modelo <code>Planet</code> com l\u00f3gica de neg\u00f3cios</li> <li>\ud83d\udcca Migra\u00e7\u00e3o para a tabela <code>planets</code> no PostgreSQL</li> <li>\ud83d\udee0\ufe0f Propriedades do modelo configuradas (<code>fillable</code>, <code>casts</code>)</li> </ul> <p>Prepare o banco de dados! No pr\u00f3ximo cap\u00edtulo, executaremos a migra\u00e7\u00e3o e preencheremos o universo com os primeiros planetas.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <p>Certifique-se de que os arquivos <code>Planet.php</code> e <code>..._create_planets_table.php</code> foram criados nos diret\u00f3rios corretos.</p> <p>\u26a0\ufe0f Se o Artisan reclamar:</p> <ul> <li>Verifique se voc\u00ea est\u00e1 na pasta do projeto</li> <li>Certifique-se de que as depend\u00eancias est\u00e3o instaladas (<code>composer install</code>)</li> <li>Para Windows: adicione PHP e Composer ao PATH</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/3/","title":"Cap\u00edtulo 2.3: Migra\u00e7\u00f5es de Banco de Dados","text":"<p>Tempo de estudo: 50 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/3/#1-migracoes-construindo-uma-estacao-espacial","title":"1. Migra\u00e7\u00f5es: Construindo uma Esta\u00e7\u00e3o Espacial","text":"<p>Migra\u00e7\u00f5es no Laravel s\u00e3o um sistema de controle de vers\u00e3o para o seu banco de dados.</p> <p>Imagine que voc\u00ea est\u00e1:</p> <ol> <li>\ud83c\udfd7\ufe0f Criando um projeto de esta\u00e7\u00e3o (migra\u00e7\u00e3o <code>create_planets_table</code>)</li> <li>\ud83d\ude80 Implantando m\u00f3dulos (executando migra\u00e7\u00f5es)</li> <li>\ud83d\udd27 Modernizando a constru\u00e7\u00e3o (novas migra\u00e7\u00f5es)</li> <li>\u23ea Pode reverter para uma vers\u00e3o anterior (rollback)</li> </ol> <p>\ud83d\udca1 Importante: As migra\u00e7\u00f5es permitem que a equipe trabalhe de forma consistente \u2013 como engenheiros em diferentes continentes construindo a ISS!</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/3/#2-executando-migracoes","title":"2. Executando Migra\u00e7\u00f5es","text":"<p>Ap\u00f3s criar a migra\u00e7\u00e3o no cap\u00edtulo 2.2, execute: <pre><code>php artisan migrate\n</code></pre></p> <p>Sa\u00edda no terminal: <pre><code>Migration table created successfully.\nMigrating: 2014_10_12_000000_create_users_table\nMigrated:  2014_10_12_000000_create_users_table (25.12ms)\nMigrating: 2014_10_12_100000_create_password_reset_tokens_table\nMigrated:  2014_10_12_100000_create_password_reset_tokens_table (18.07ms)\nMigrating: 2019_08_19_000000_create_failed_jobs_table\nMigrated:  2019_08_19_000000_create_failed_jobs_table (21.33ms)\nMigrating: 2019_12_14_000001_create_personal_access_tokens_table\nMigrated:  2019_12_14_000001_create_personal_access_tokens_table (30.45ms)\nMigrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (15.67ms)  # Sua tabela!\n</code></pre></p> <p>Verifica\u00e7\u00e3o no pgAdmin 4:</p> <ol> <li>Abra o banco de dados <code>space_api</code> \u2192 Schemas \u2192 Tables</li> <li>Certifique-se de que apareceram:   - <code>planets</code>   - <code>users</code>   - <code>password_reset_tokens</code></li> </ol>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/3/#3-revertendo-migracoes-retorno-de-emergencia","title":"3. Revertendo Migra\u00e7\u00f5es: Retorno de Emerg\u00eancia","text":"<p>Se precisar corrigir a estrutura: <pre><code>php artisan migrate:rollback  # Reverte o \u00faltimo lote de migra\u00e7\u00f5es\n</code></pre> <pre><code>php artisan migrate:reset    # Reverte todas as migra\u00e7\u00f5es completamente\n</code></pre></p> <ul> <li><code>php artisan migrate:fresh</code> \u2014 a comando mais \u00fatil no desenvolvimento! Ele remove todas as tabelas e executa novamente todas as migra\u00e7\u00f5es.</li> <li><code>php artisan migrate:fresh --seed</code> \u2014 faz o mesmo que <code>fresh</code>, mas ap\u00f3s as migra\u00e7\u00f5es, executa imediatamente os seeders. Este \u00e9 um comando para \"recriar\" completamente o banco de dados do zero.</li> </ul> <p>Cen\u00e1rio de uso: <pre><code># Passo 1: Percebemos que h\u00e1 um erro na migra\u00e7\u00e3o. Recriamos completamente o banco de dados.\nphp artisan migrate:fresh\n# Passo 2: Editamos a migra\u00e7\u00e3o\n# Passo 3: Recriamos novamente o banco de dados com a migra\u00e7\u00e3o j\u00e1 corrigida\nphp artisan migrate:fresh\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/3/#4-adicionando-novos-campos-modernizando-a-estacao","title":"4. Adicionando Novos Campos: Modernizando a Esta\u00e7\u00e3o","text":"<p>Exemplo: Adicionaremos o campo <code>is_habitable</code> (se o planeta \u00e9 habit\u00e1vel).</p> <p>Passo 1: Criamos uma nova migra\u00e7\u00e3o <pre><code>php artisan make:migration add_is_habitable_to_planets_table\n</code></pre></p> <p>Passo 2: Editamos o arquivo <code>database/migrations/..._add_is_habitable_to_planets_table.php</code> <pre><code>&lt;?php\npublic function up()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;boolean('is_habitable')\n              -&gt;default(false);\n    });\n}\n\npublic function down()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;dropColumn('is_habitable');\n    });\n}\n</code></pre></p> <p>Passo 3: Executamos a atualiza\u00e7\u00e3o <pre><code>php artisan migrate\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/3/#5-preenchendo-o-banco-de-dados-primeiros-planetas","title":"5. Preenchendo o Banco de Dados: Primeiros Planetas","text":"<p>Criamos um seeder \u2014 um script para gerar dados de teste.</p> <p>Passo 1: Gera\u00e7\u00e3o do seeder <pre><code>php artisan make:seeder PlanetSeeder\n</code></pre></p> <p>Passo 2: Editamos <code>database/seeders/PlanetSeeder.php</code> <pre><code>&lt;?php\nuse App\\Models\\Planet; // Importamos o modelo do planeta - Sem ele, voc\u00ea receber\u00e1 um erro!\n\n\nclass PlanetSeeder extends Seeder\n{\n    public function run()\n    {\n        Planet::create([\n            'name' =&gt; 'Terra',\n            'description' =&gt; 'Planeta azul com vida diversa',\n            'size_km' =&gt; 12742,\n            'solar_system' =&gt; 'Sistema Solar',\n            'image_url' =&gt; 'https://example.com/earth.jpg',\n            'is_habitable' =&gt; true\n        ]);\n\n        Planet::create([\n            'name' =&gt; 'Marte',\n            'description' =&gt; 'Planeta vermelho, alvo de futuras coloniza\u00e7\u00f5es',\n            'size_km' =&gt; 6779,\n            'solar_system' =&gt; 'Sistema Solar',\n            'is_habitable' =&gt; false\n        ]);\n    }\n}\n</code></pre></p> <p>Passo 3: Registramos o seeder em <code>database/seeders/DatabaseSeeder.php</code> <pre><code>&lt;?php\npublic function run()\n{\n    $this-&gt;call([\n        PlanetSeeder::class\n    ]);\n}\n</code></pre></p> <p>Passo 4: Executando o preenchimento <pre><code>php artisan db:seed\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/3/#6-trabalhando-com-postgresql-especificidades","title":"6. Trabalhando com PostgreSQL: Especificidades","text":"<p>Caracter\u00edsticas do tipo de dados:</p> Funcionalidade PostgreSQL MySQL Coment\u00e1rio Laravel Tipo Booleano <code>boolean</code> (verdadeiro <code>true</code>/<code>false</code>) <code>tinyint(1)</code> (armazena <code>0</code>/<code>1</code>) <code>$table-&gt;boolean('...')</code> funciona para ambos JSON <code>jsonb</code> (bin\u00e1rio, index\u00e1vel) <code>json</code> (textual) <code>$table-&gt;jsonb('...')</code> - muito poderoso no PG Arrays <code>text[]</code>, <code>integer[]</code> (arrays nativos) N\u00e3o (emulado via JSON ou strings) <code>$table-&gt;array('...')</code> (exclusivo para PG) Ordem das colunas N\u00e3o pode ser controlado (<code>after()</code> n\u00e3o funciona) Pode ser controlado (<code>after()</code>) Laravel abstrai isso, mas \u00e9 importante saber da limita\u00e7\u00e3o <p>Exemplo de cria\u00e7\u00e3o de \u00edndice: <pre><code>// Na migra\u00e7\u00e3o\n$table-&gt;index('solar_system');\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/3/#7-verificando-dados-no-psql","title":"7. Verificando dados no psql","text":"<p>Voc\u00ea pode usar qualquer cliente gr\u00e1fico e selecionar <code>space_api</code> l\u00e1 para visualiza\u00e7\u00e3o.</p> <p>Ao usar o console: <pre><code>psql -U postgres -d space_api\n# O terminal pode pedir a senha que voc\u00ea definiu durante a instala\u00e7\u00e3o do PostgreSQL.\n</code></pre> <pre><code>SELECT * FROM planets;\n</code></pre></p> <p>De qualquer forma, a sa\u00edda deve ser a seguinte:</p> id name description size_km solar_system image_url is_habitable 1 Terra Planeta azul com vida diversa 12742 Sistema Solar ... true 2 Marte Planeta vermelho, alvo de coloniza\u00e7\u00f5es 6779 Sistema Solar null false"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/3/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. Comando para executar migra\u00e7\u00f5es:</p>  a) php artisan migrate:run  b) php artisan migrate  c) php artisan db:migrate <p>2. Como reverter a \u00faltima migra\u00e7\u00e3o?</p>  a) migrate:undo  b) migrate:rollback  c) migrate:reset <p>3. Seeders s\u00e3o usados para:</p>  a) Excluir tabelas  b) Preencher o BD com dados de teste  c) Criar modelos <p>4. M\u00e9todo para adicionar uma coluna a uma tabela existente:</p>  a) Schema::addColumn()  b) Schema::table()  c) Schema::modify() <p>5. Onde os seeders s\u00e3o registrados?</p>  a) DatabaseSeeder.php  b) .env  c) config/database.php Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea dominou a \"constru\u00e7\u00e3o de infraestrutura espacial\":</p> <ul> <li>\u2705 Criou e executou migra\u00e7\u00f5es</li> <li>\ud83d\udd27 Modernizou a estrutura da tabela</li> <li>\ud83c\udf0d Preencheu o BD com os primeiros planetas</li> <li>\u2699\ufe0f Aprendeu a trabalhar com PostgreSQL</li> </ul> <p>Seu universo ganhou os primeiros mundos! Agora voc\u00ea pode prosseguir para a cria\u00e7\u00e3o de interfaces API para gerenciar planetas.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ol> <li>Execute <code>php artisan tinker</code></li> <li>Execute <code>App\\Models\\Planet::all()</code></li> <li>Certifique-se de que v\u00ea a Terra e Marte</li> </ol>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/4/","title":"Cap\u00edtulo 2.4: Controlador API PlanetController","text":"<p>Tempo de estudo: 1 hora</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/4/#1-controlador-centro-de-controle-de-objetos-espaciais","title":"1. Controlador: Centro de Controle de Objetos Espaciais","text":"<p>Na arquitetura MVC, o controlador \u00e9 o intermedi\u00e1rio entre os modelos e as requisi\u00e7\u00f5es:</p> <ul> <li>\ud83d\udce1 Aceita requisi\u00e7\u00f5es HTTP (GET, POST, PUT, DELETE)</li> <li>\ud83d\udd0d Extrai dados do banco atrav\u00e9s dos modelos</li> <li>\ud83d\udce6 Formata respostas JSON para a API</li> </ul> <p>\ud83d\udca1 Analogia Espacial: <code>PlanetController</code> = Centro de Controle da Miss\u00e3o:</p> <ul> <li>Recebe requisi\u00e7\u00f5es da Terra (<code>GET /planets</code>)</li> <li>D\u00e1 comandos \u00e0s \"sondas\" (modelos)</li> <li>Retorna telemetria em formato JSON</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/4/#2-criacao-de-um-controlador-de-recurso","title":"2. Cria\u00e7\u00e3o de um Controlador de Recurso","text":"<p>Um controlador de recurso inclui automaticamente m\u00e9todos para opera\u00e7\u00f5es CRUD.</p> <p>Passo 1: Gera\u00e7\u00e3o do Controlador <pre><code>php artisan make:controller PlanetController --api --model=Planet\n</code></pre></p> <p>O que ser\u00e1 criado em <code>app/Http/Controllers/PlanetController.php</code>: <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Planet;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Validation\\Rule; // N\u00e3o se esque\u00e7a de adicionar esta importa\u00e7\u00e3o\n\nclass PlanetController extends Controller\n{\n    // Mostrar lista de planetas\n    public function index(Request $request) {}\n\n    // Criar um novo planeta\n    public function store(Request $request) {}\n\n    // Mostrar um planeta espec\u00edfico\n    public function show(Planet $planet) {}\n\n    // Atualizar um planeta\n    public function update(Request $request, Planet $planet) {}\n\n    // Excluir um planeta\n    public function destroy(Planet $planet) {}\n}\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/4/#3-implementacao-dos-metodos-da-api","title":"3. Implementa\u00e7\u00e3o dos M\u00e9todos da API","text":"<p>A. <code>index()</code> - Obten\u00e7\u00e3o da lista de planetas <pre><code>&lt;?php\npublic function index(Request $request)\n{\n    // Obt\u00e9m os planetas com pagina\u00e7\u00e3o, 15 por p\u00e1gina\n    $planets = Planet::paginate($request-&gt;get('per_page', 15));\n    return response()-&gt;json($planets); // Automaticamente 200 OK\n}\n</code></pre></p> <p>B. <code>store()</code> - Cria\u00e7\u00e3o de um novo planeta <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    $planet = Planet::create($data);\n    return response()-&gt;json($planet, 201); // 201 Created\n}\n</code></pre></p> <p>C. <code>show()</code> - Visualiza\u00e7\u00e3o de um planeta <pre><code>&lt;?php\npublic function show(Planet $planet)\n{\n    return response()-&gt;json($planet); // Automaticamente 200 OK\n}\n</code></pre></p> <p>D. <code>update()</code> - Atualiza\u00e7\u00e3o de um planeta <pre><code>&lt;?php\npublic function update(Request $request, Planet $planet)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; [\n            'string',\n            'max:255',\n            Rule::unique('planets')-&gt;ignore($planet-&gt;id),\n        ],\n        'description' =&gt; 'sometimes|string', // 'sometimes' - validar, apenas se o campo for fornecido\n        'size_km' =&gt; 'sometimes|integer|min:100',\n        'solar_system' =&gt; 'sometimes|string|max:100',\n        'image_url' =&gt; 'sometimes|nullable|url',\n        'is_habitable' =&gt; 'sometimes|boolean'\n    ]);\n\n    $planet-&gt;update($data);\n    return response()-&gt;json($planet); // 200 OK\n}\n</code></pre></p> <p>E. <code>destroy()</code> - Exclus\u00e3o de um planeta <pre><code>&lt;?php\npublic function destroy(Planet $planet)\n{\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204); // 204 No Content\n}\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/4/#4-vinculacao-de-modelo-route-model-binding","title":"4. Vincula\u00e7\u00e3o de Modelo (Route Model Binding)","text":"<p>O Laravel automaticamente injeta o objeto do planeta pelo ID: <pre><code>// Na rota: GET /planets/{planet}\n// No m\u00e9todo: show(Planet $planet)\n</code></pre></p> <ul> <li>Se o planeta n\u00e3o for encontrado \u2192 automaticamente 404</li> <li>N\u00e3o h\u00e1 necessidade de requisi\u00e7\u00f5es manuais <code>findOrFail()</code></li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/4/#5-formatacao-de-respostas","title":"5. Formata\u00e7\u00e3o de Respostas","text":"<p>Exemplo de resposta aprimorada para <code>index()</code>: <pre><code>&lt;?php\npublic function index()\n{\n    return response()-&gt;json([\n        'success' =&gt; true,\n        'data' =&gt; Planet::all(),\n        'message' =&gt; 'Planetas obtidos com sucesso'\n    ]);\n}\n</code></pre></p> <p>Resposta em caso de erro 404 (automaticamente): <pre><code>{\n    \"message\": \"No query results for model [App\\\\Models\\\\Planet] 123\",\n    \"exception\": \"Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\NotFoundHttpException\"\n}\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/4/#questionario-para-fixacao","title":"Question\u00e1rio para fixa\u00e7\u00e3o","text":"<p>1. Flag para criar um controlador API:</p>  a) --api  b) --resource  c) --model <p>2. Qual status retornar em caso de cria\u00e7\u00e3o bem-sucedida?</p>  a) 200 OK  b) 201 Created  c) 204 No Content <p>3. O Route Model Binding permite:</p>  a) Obter automaticamente o objeto por ID  b) Gerar formul\u00e1rios HTML  c) Armazenar em cache as requisi\u00e7\u00f5es <p>4. Ao excluir um planeta, retornamos:</p>  a) JSON com os dados do planeta  b) null com c\u00f3digo 204  c) Uma string vazia <p>5. $request-&gt;validate() \u00e9 usado para:</p>  a) Valida\u00e7\u00e3o de dados de entrada  b) Criptografia de requisi\u00e7\u00f5es  c) Armazenamento em cache de respostas Verificar <p>\ud83d\ude80 Resumo do cap\u00edtulo:</p> <p>Voc\u00ea criou um \"painel de controle\" para o sistema planet\u00e1rio! Agora seu controlador consegue:</p> <ul> <li>\ud83c\udf0c Mostrar a lista de planetas (<code>index</code>)</li> <li>\ud83e\ude90 Criar novos mundos (<code>store</code>)</li> <li>\ud83d\udd2d Detalhar os dados de um planeta (<code>show</code>)</li> <li>\ud83d\udee0\ufe0f Atualizar informa\u00e7\u00f5es (<code>update</code>)</li> <li>\ud83d\udca5 Destruir planetas (<code>destroy</code>)</li> </ul> <p>Resta definir as rotas! No pr\u00f3ximo cap\u00edtulo, conectaremos o controlador \u00e0s rotas da API.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <p>Certifique-se de que <code>app/Http/Controllers</code> cont\u00e9m <code>PlanetController.php</code> com 5 m\u00e9todos.</p> <p>\u26a0\ufe0f Se houver erros:</p> <ul> <li>Verifique o nome do modelo: <code>use App\\Models\\Planet;</code></li> <li>Verifique as importa\u00e7\u00f5es</li> <li>Para PostgreSQL: certifique-se de que <code>Planet::all()</code> retorna dados</li> <li>Em caso de problemas com o Tinker: execute <code>composer dump-autoload</code></li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/5/","title":"Cap\u00edtulo 2.5: Rotas da API","text":"<p>Tempo de estudo: 45 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/5/#1-o-que-e-uma-rota-uma-explicacao-simples","title":"1. O que \u00e9 uma rota? Uma explica\u00e7\u00e3o simples","text":"<p>Imagine que seu controlador (<code>PlanetController</code>) \u00e9 um grande centro de escrit\u00f3rios, e cada um de seus m\u00e9todos (<code>index</code>, <code>store</code>, <code>show</code>) \u00e9 um departamento que realiza seu trabalho.</p> <p>Uma Rota (Route) \u00e9 uma placa de endere\u00e7o na entrada do edif\u00edcio. Ela diz:</p> <ul> <li>\"Se algu\u00e9m chegou ao endere\u00e7o <code>/planets</code> pelo m\u00e9todo GET \u2014 envie-o para o departamento <code>index</code> (mostrar tudo).\"</li> <li>\"Se algu\u00e9m chegou ao endere\u00e7o <code>/planets</code> pelo m\u00e9todo POST com uma encomenda (dados) \u2014 envie-o para o departamento <code>store</code> (criar novo).\"</li> </ul> <p>Sem rotas, nenhuma requisi\u00e7\u00e3o do mundo exterior encontrar\u00e1 o departamento necess\u00e1rio em seu c\u00f3digo. O arquivo principal para essas \"placas de endere\u00e7o\" na API \u00e9 <code>routes/api.php</code>.</p> <p>No Laravel 11+, por padr\u00e3o, n\u00e3o h\u00e1 um \"livro de endere\u00e7os da API\". N\u00f3s o criamos executando o comando <code>php artisan install:api</code>. Agora temos o arquivo <code>routes/api.php</code> \u2014 este \u00e9 o principal centro de controle para todas as rotas da nossa API.</p> <p>A principal diferen\u00e7a de <code>api.php</code> para <code>web.php</code>:</p> <ul> <li>Prefixo /api: O Laravel adiciona automaticamente <code>/api</code> a todas as URLs deste arquivo. A rota <code>/planets</code> se torna <code>/api/planets</code>.</li> <li>\"Sem estado\" (Stateless): N\u00e3o h\u00e1 sess\u00f5es nem cookies aqui, como na web normal. Cada requisi\u00e7\u00e3o \u00e9 independente e deve conter todas as informa\u00e7\u00f5es de autentica\u00e7\u00e3o (geralmente um token de API nos cabe\u00e7alhos).</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/5/#2-caminho-do-iniciante-criando-uma-rota-manualmente","title":"2. Caminho do Iniciante: Criando uma rota manualmente","text":"<p>Vamos criar uma \u00fanica rota manualmente para entender o princ\u00edpio. Nosso objetivo \u00e9 fazer com que a URL <code>/api/planets</code> mostre uma lista de todos os planetas.</p> <p>Abra <code>routes/api.php</code> e escreva:</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController; // Indicamos onde est\u00e1 nosso controlador\n\n//                    (1)           (2)                     (3)\nRoute::get(      '/planets',    [PlanetController::class, 'index']     );\n//   ^               ^                       ^\n// (M\u00e9todo HTTP)   (Endere\u00e7o URL)          (Qual controlador e m\u00e9todo chamar)\n</code></pre> <p>Vamos analisar esta linha em partes:</p> <ol> <li><code>Route::get(...)</code> \u2014 dizemos: \"Esta rota funciona apenas para requisi\u00e7\u00f5es GET\".</li> <li><code>'/planets'</code> \u2014 esta \u00e9 a URL que o Laravel vai escutar. Considerando o prefixo <code>/api</code>, o endere\u00e7o completo ser\u00e1 <code>http://space-api.test/api/planets</code>.</li> <li><code>[PlanetController::class, 'index']</code> \u2014 este \u00e9 o \"destino\". Dizemos: \"Quando a requisi\u00e7\u00e3o chegar, encontre a classe <code>PlanetController</code> e chame o m\u00e9todo <code>index()</code> nela\".</li> </ol> <p>Agora est\u00e1 tudo conectado! Requisi\u00e7\u00e3o -&gt; Rota -&gt; Controlador -&gt; M\u00e9todo.</p> <p>E se precisarmos obter um planeta pelo seu ID? Por exemplo, <code>/api/planets/5</code>.</p> <pre><code>// Rota para obter um planeta espec\u00edfico\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n</code></pre> <p>Aqui <code>{planet}</code> \u00e9 um \"modelo\" ou vari\u00e1vel. O Laravel entende que neste lugar pode haver qualquer coisa (ID, slug). Ent\u00e3o ele passa esse valor para o m\u00e9todo <code>show(Planet $planet)</code>. Essa \"m\u00e1gica\", onde o Laravel encontra o planeta pelo ID, \u00e9 chamada de Route Model Binding.</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/5/#3-caminho-do-mestre-apiresource-uma-linha-para-governar-todos","title":"3. Caminho do Mestre: <code>apiResource</code> \u2014 uma linha para governar todos","text":"<p>Criar cada rota manualmente (para <code>index</code>, <code>show</code>, <code>store</code>, <code>update</code>, <code>destroy</code>) \u00e9 cansativo. Os desenvolvedores do Laravel entendem isso, por isso criaram um poderoso auxiliar \u2014 <code>apiResource</code>.</p> <p>Apague tudo o que escrevemos e substitua por uma \u00fanica linha:</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController;\n\nRoute::apiResource('planets', PlanetController::class);\n</code></pre> <p>O que esta \u00fanica linha faz por baixo dos panos? Ela cria automaticamente um conjunto completo de rotas para as opera\u00e7\u00f5es CRUD padr\u00e3o que j\u00e1 implementamos no controlador.</p> M\u00e9todo URL Encaminha para o m\u00e9todo Prop\u00f3sito GET <code>/api/planets</code> <code>index()</code> Obter lista de todos os planetas POST <code>/api/planets</code> <code>store()</code> Criar novo planeta GET <code>/api/planets/{planet}</code> <code>show()</code> Mostrar um planeta espec\u00edfico PUT/PATCH <code>/api/planets/{planet}</code> <code>update()</code> Atualizar um planeta existente DELETE <code>/api/planets/{planet}</code> <code>destroy()</code> Deletar planeta <p>Voc\u00ea pode verificar isso por si mesmo. Execute o comando no terminal:</p> <pre><code>php artisan route:list --path=api\n</code></pre> <p>Voc\u00ea ver\u00e1 uma tabela com todas as rotas criadas. <code>apiResource</code> \u00e9 seu melhor amigo para economizar tempo ao criar APIs padr\u00e3o.</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/5/#4-missoes-especiais-e-ordem-das-rotas","title":"4. Miss\u00f5es especiais e ordem das rotas","text":"<p>E se precisarmos de uma rota n\u00e3o padr\u00e3o que n\u00e3o est\u00e1 no <code>apiResource</code>? Por exemplo, obter um planeta aleat\u00f3rio no endere\u00e7o <code>/api/planets/random</code>.</p> <p>Vamos adicion\u00e1-la. Mas h\u00e1 uma armadilha mortalmente importante aqui, na qual 9 em cada 10 iniciantes caem.</p> <p>Ordem incorreta (N\u00c3O FUNCIONA!): <pre><code>Route::apiResource('planets', PlanetController::class);\nRoute::get('/planets/random', [PlanetController::class, 'random']); // &lt;-- N\u00c3O FUNCIONAR\u00c1\n</code></pre> Por qu\u00ea? O Laravel l\u00ea as rotas de cima para baixo. Ele ver\u00e1 <code>Route::apiResource</code>, que criou a rota <code>GET /planets/{planet}</code>. Quando voc\u00ea requisitar <code>/planets/random</code>, o Laravel pensar\u00e1 que \"random\" \u00e9 o ID do planeta e tentar\u00e1 encontrar no banco de dados um planeta com o ID \"random\" e voc\u00ea receber\u00e1 um erro.</p> <p>Ordem correta (FUNCIONA!): <pre><code>&lt;?php\nuse App\\Http\\Controllers\\PlanetController;\nuse Illuminate\\Support\\Facades\\Route;\n\n// 1. Primeiro declaramos as rotas ESPEC\u00cdFICAS\nRoute::get('/planets/random', [PlanetController::class, 'random']);\n\n// 2. E s\u00f3 depois declaramos as rotas GERAIS com vari\u00e1veis\nRoute::apiResource('planets', PlanetController::class);\n</code></pre></p> <p>Regra: Sempre declare rotas mais espec\u00edficas (como <code>/random</code>) antes de rotas mais gerais e com par\u00e2metros (como <code>/{planet}</code>).</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/5/#importante","title":"\u26a0\ufe0f Importante!","text":"<p>Para testar a rota api/planets/random, voc\u00ea precisa adicionar um novo manipulador ao PlanetController:</p> <pre><code>&lt;?php\npublic function random(Request $request)\n{\n   $planet = Planet::inRandomOrder()-&gt;first();\n   return response()-&gt;json($planet);\n}\n</code></pre>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/5/#5-agrupamento-organizando","title":"5. Agrupamento: Organizando","text":"<p>Quando h\u00e1 muitas rotas, elas podem e devem ser agrupadas.</p> <p>A. Versionamento da API Para n\u00e3o quebrar futuras aplica\u00e7\u00f5es que usam sua API, \u00e9 comum adicionar uma vers\u00e3o na URL, por exemplo <code>/api/v1/...</code>.</p> <pre><code>&lt;?php\nRoute::prefix('v1')-&gt;group(function () {\n    // Todas as rotas dentro deste grupo receber\u00e3o o prefixo /v1\n    // URL final: /api/v1/planets\n    Route::get('/planets/random', [PlanetController::class, 'random']);\n    Route::apiResource('planets', PlanetController::class);\n});\n</code></pre> <p>B. Prote\u00e7\u00e3o de rotas (Middleware) Imagine que qualquer um pode ver os planetas, mas criar, atualizar e deletar \u2014 apenas usu\u00e1rios autorizados.</p> <pre><code>&lt;?php\n// Rotas p\u00fablicas, acess\u00edveis a todos\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// Grupo de rotas que requer \"passe\" (autentica\u00e7\u00e3o)\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n});\n</code></pre> <p>Aqui <code>middleware('auth:sanctum')</code> \u00e9 como um guarda que verifica o \"passe\" de todos que tentam acessar as rotas dentro do grupo.</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/5/#6-testando-via-postman","title":"6. Testando via Postman","text":"<p>Agora que todas as rotas foram definidas, \u00e9 hora de test\u00e1-las.</p> <ol> <li>Se voc\u00ea usa o Herd: Seu site j\u00e1 est\u00e1 funcionando em um endere\u00e7o como <code>http://space-api.test</code>.</li> <li>Se n\u00e3o: Inicie o servidor local com o comando <code>php artisan serve</code>. O endere\u00e7o ser\u00e1 <code>http://localhost:8000</code>.</li> </ol> <p>Abra o Postman e envie as requisi\u00e7\u00f5es:</p> <ul> <li><code>GET http://space-api.test/api/planets</code></li> <li><code>GET http://space-api.test/api/planets/random</code></li> <li><code>POST http://space-api.test/api/planets</code> (n\u00e3o se esque\u00e7a de adicionar o corpo da requisi\u00e7\u00e3o JSON na aba <code>Body</code> -&gt; <code>raw</code> -&gt; <code>JSON</code>).</li> </ul> <p>Exemplo de requisi\u00e7\u00e3o POST: <pre><code>{\n    \"name\": \"Kepler-186f\",\n    \"description\": \"Primeiro planeta do tamanho da Terra na zona habit\u00e1vel\",\n    \"size_km\": 15000,\n    \"solar_system\": \"Kepler-186\",\n    \"is_habitable\": true\n}\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/5/#8-erros-comuns-de-roteamento","title":"8. Erros comuns de roteamento","text":"<ol> <li>404 N\u00e3o Encontrado</li> <li>URL incorreta (<code>/api/planet</code> em vez de <code>/api/planets</code>)</li> <li>Esqueceu <code>php artisan serve</code></li> <li>405 M\u00e9todo N\u00e3o Permitido</li> <li>M\u00e9todo HTTP incorreto (por exemplo, GET em vez de POST)</li> <li>Controlador Ausente</li> <li>Erro de digita\u00e7\u00e3o no nome do controlador (<code>PlanetControler</code>)</li> <li>Colis\u00e3o de Nome de Rota</li> <li>Nomes de rota duplicados</li> </ol>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/5/#quiz-para-fixacao","title":"Quiz para Fixa\u00e7\u00e3o","text":"<p>1. Arquivo para rotas de API no Laravel:</p>  a) routes/web.php  b) routes/api.php  c) routes/console.php <p>2. Prefixo autom\u00e1tico para rotas de API:</p>  a) /admin  b) /api  c) /v1 <p>3. M\u00e9todo para criar 5 rotas CRUD:</p>  a) Route::api()  b) Route::resource()  c) Route::apiResource() <p>4. Route::prefix('v1') \u00e9 usado para:</p>  a) Autentica\u00e7\u00e3o  b) Versionamento da API  c) Cache <p>5. Visualiza\u00e7\u00e3o de todas as rotas:</p>  a) php artisan route:list  b) php artisan list:routes  c) php routes Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea construiu as \"rotas hiperespaciais\" para a API espacial! Agora:</p> <ul> <li>\ud83d\uddfa\ufe0f Todos os endpoints est\u00e3o acess\u00edveis via <code>/api/...</code></li> <li>\ud83d\udd17 Rotas de recurso est\u00e3o conectadas ao controlador</li> <li>\ud83d\udee1\ufe0f Rotas personalizadas para opera\u00e7\u00f5es especiais foram adicionadas</li> <li>\u2705 Rotas testadas via Postman</li> </ul> <p>O universo est\u00e1 aberto para requisi\u00e7\u00f5es! A seguir, adicionaremos prote\u00e7\u00e3o contra \"lixo espacial\" \u2014 a valida\u00e7\u00e3o de dados.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ol> <li>Execute <code>php artisan route:list</code></li> <li>Certifique-se de ver 5+ rotas para planets</li> <li>Verifique o funcionamento de GET /api/planets no navegador/Postman</li> </ol> <p>\u26a0\ufe0f Se erro 404:</p> <ul> <li>Verifique a exist\u00eancia de <code>Route::apiResource</code> em <code>routes/api.php</code></li> <li>Certifique-se de que o servidor est\u00e1 em execu\u00e7\u00e3o (<code>php artisan serve</code>)</li> <li>Para Windows: permita a porta 8000 no firewall</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/6/","title":"Cap\u00edtulo 2.6: Valida\u00e7\u00e3o de Dados","text":"<p>Tempo de estudo: 50 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/6/#1-validacao-um-escudo-de-escala-cosmica","title":"1. Valida\u00e7\u00e3o: Um escudo de escala c\u00f3smica","text":"<p>Valida\u00e7\u00e3o - \u00e9 a verifica\u00e7\u00e3o de dados de entrada quanto \u00e0 conformidade com as regras. Sem ela:</p> <ul> <li>\ud83d\ude80 Dados incorretos podem \"destruir\" sua base</li> <li>\ud83c\udf0c Atacantes podem injetar c\u00f3digo malicioso</li> <li>\ud83e\ude90 Usu\u00e1rios receber\u00e3o erros incompreens\u00edveis</li> </ul> <p>\ud83d\udca1 Analogia c\u00f3smica: Valida\u00e7\u00e3o = Sistema de prote\u00e7\u00e3o de uma esta\u00e7\u00e3o espacial:</p> <ul> <li>Verifica a \"carga\" (dados) antes da acoplagem</li> <li>Rejeita objetos perigosos</li> <li>Filtra o lixo espacial</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/6/#2-onde-validar-em-uma-api-laravel","title":"2. Onde validar em uma API Laravel","text":"<p>Abordagens principais:</p> <ol> <li>No controlador (r\u00e1pido, mas polui o c\u00f3digo)</li> <li>Form Request (recomendado, arquitetura limpa)</li> </ol>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/6/#3-validacao-no-controlador","title":"3. Valida\u00e7\u00e3o no controlador","text":"<p>Usamos o m\u00e9todo <code>validate()</code> do objeto Request: <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $validated = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    // ... cria\u00e7\u00e3o do planeta\n}\n</code></pre></p> <p>Regras de valida\u00e7\u00e3o populares:</p> Regra Descri\u00e7\u00e3o Exemplo <code>required</code> Campo obrigat\u00f3rio <code>'name' =&gt; 'required'</code> <code>string</code> Valor de string <code>'description' =&gt; 'string'</code> <code>integer</code> N\u00famero inteiro <code>'size_km' =&gt; 'integer'</code> <code>min:value</code> Valor/comprimento m\u00ednimo <code>'size_km' =&gt; 'min:100'</code> <code>max:value</code> Valor/comprimento m\u00e1ximo <code>'name' =&gt; 'max:255'</code> <code>unique:table,column</code> Unicidade na tabela <code>'name' =&gt; 'unique:planets'</code> <code>url</code> URL correto <code>'image_url' =&gt; 'url'</code> <code>boolean</code> true/false/1/0 <code>'is_habitable' =&gt; 'boolean'</code>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/6/#4-mensagens-de-erro-personalizadas","title":"4. Mensagens de erro personalizadas","text":"<p>Mudamos os textos de erro padr\u00e3o: <pre><code>&lt;?php\n$validated = $request-&gt;validate(\n    [\n        'name' =&gt; 'required|unique:planets',\n        'size_km' =&gt; 'min:1000'\n    ],\n    [\n        'name.required' =&gt; 'O nome do planeta \u00e9 obrigat\u00f3rio!',\n        'name.unique' =&gt; 'Um planeta com esse nome j\u00e1 existe no cat\u00e1logo',\n        'size_km.min' =&gt; 'O di\u00e2metro do planeta n\u00e3o pode ser menor que 1000 km'\n    ]\n);\n</code></pre></p> <p>Exemplo de resposta em caso de erro (automaticamente 422 Unprocessable Entity): <pre><code>{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"name\": [\"Um planeta com esse nome j\u00e1 existe no cat\u00e1logo\"],\n        \"size_km\": [\"O di\u00e2metro do planeta n\u00e3o pode ser menor que 1000 km\"]\n    }\n}\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/6/#5-criacao-de-um-form-request","title":"5. Cria\u00e7\u00e3o de um Form Request","text":"<p>Para valida\u00e7\u00e3o complexa, criamos uma classe separada:</p> <p>Passo 1: Gera\u00e7\u00e3o <pre><code>php artisan make:request StorePlanetRequest\n</code></pre></p> <p>Passo 2: Editamos <code>app/Http/Requests/StorePlanetRequest.php</code> <pre><code>&lt;?php\npublic function authorize()\n{\n    return true; // Para API, geralmente true\n}\n\npublic function rules()\n{\n    return [\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ];\n}\n\npublic function messages()\n{\n    return [\n        'name.unique' =&gt; 'Um planeta com esse nome j\u00e1 existe!',\n        'size_km.min' =&gt; 'O di\u00e2metro n\u00e3o pode ser menor que 100 km'\n    ];\n}\n</code></pre></p> <p>Passo 3: Usamos no controlador <pre><code>&lt;?php\nuse App\\Http\\Requests\\StorePlanetRequest;\n\npublic function store(StorePlanetRequest $request)\n{\n    // Os dados j\u00e1 foram validados!\n    $validated = $request-&gt;validated();\n    $planet = Planet::create($validated);\n    return response()-&gt;json($planet, 201);\n}\n</code></pre></p> <p>Entendido. A tarefa \u00e9 alinhar o cap\u00edtulo com o Laravel 10/11/12, removendo todas as men\u00e7\u00f5es a conceitos e flags obsoletos, em particular <code>--invokable</code>, e mantendo apenas o c\u00f3digo atualizado. Sem tocar em nada desnecess\u00e1rio.</p> <p>Aceito. Aqui est\u00e1 a vers\u00e3o corrigida da Se\u00e7\u00e3o 6, que reflete com precis\u00e3o a realidade das vers\u00f5es modernas do framework.</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/6/#6-regras-de-validacao-personalizadas","title":"6. Regras de valida\u00e7\u00e3o personalizadas","text":"<p>Vamos criar uma regra para verificar a \"sensatez\" do nome do planeta. As regras padr\u00e3o do Laravel n\u00e3o podem verificar se um nome \u00e9 \"proibido\", ent\u00e3o vamos escrever nossa pr\u00f3pria l\u00f3gica.</p> <p>Passo 1: Gera\u00e7\u00e3o da regra</p> <p>O Laravel fornece um comando Artisan para criar um \"esqueleto\" de classe de regra. Vamos execut\u00e1-lo no terminal:</p> <pre><code>php artisan make:rule ValidPlanetName\n</code></pre> <p>Passo 2: Editamos <code>app/Rules/ValidPlanetName.php</code></p> <p>Abra o arquivo criado. Sua estrutura \u00e9 simples e clara. Nossa tarefa \u00e9 implementar a l\u00f3gica dentro do m\u00e9todo <code>validate</code>.</p> <pre><code>&lt;?php\n\nnamespace App\\Rules;\n\nuse Closure;\nuse Illuminate\\Contracts\\Validation\\ValidationRule;\n\nclass ValidPlanetName implements ValidationRule\n{\n    /**\n     * Executa a regra de valida\u00e7\u00e3o.\n     *\n     * @param  \\Closure(string): \\Illuminate\\Translation\\PotentiallyTranslatedString  $fail\n     */\n    public function validate(string $attribute, mixed $value, Closure $fail): void\n    {\n        // Nossa \"lista negra\" de nomes\n        $forbidden = ['\u0417\u0435\u043c\u043b\u044f 2.0', '\u041d\u0438\u0431\u0438\u0440\u0443', '\u041f\u043b\u0430\u043d\u0435\u0442\u0430 X'];\n\n        // Verificamos se o valor inserido est\u00e1 em nossa lista,\n        // ignorando o caso das letras.\n        if (in_array(strtolower($value), array_map('strtolower', $forbidden))) {\n            // Se a valida\u00e7\u00e3o falhar, chamamos a fun\u00e7\u00e3o $fail\n            // com o texto do erro que o usu\u00e1rio ver\u00e1.\n            $fail('Este nome de planeta \u00e9 proibido de usar!');\n        }\n    }\n}\n</code></pre> <p>Passo 3: Usamos no Form Request</p> <p>Agora nossa regra personalizada est\u00e1 pronta para uso. Podemos inclu\u00ed-la em qualquer Form Request, simplesmente criando uma nova inst\u00e2ncia de nossa classe.</p> <p>Vamos abrir <code>app/Http/Requests/StorePlanetRequest.php</code> e adicionar <code>new ValidPlanetName</code> ao array de regras para o campo <code>name</code>.</p> <p><pre><code>&lt;?php\n// app/Http/Requests/StorePlanetRequest.php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Rules\\ValidPlanetName; // &lt;-- N\u00e3o se esque\u00e7a de importar a classe\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass StorePlanetRequest extends FormRequest\n{\n    // ... (m\u00e9todo authorize)\n\n    public function rules(): array\n    {\n        return [\n            'name' =&gt; [\n                'sometimes',\n                'string',\n                'max:255',\n                'unique:planets',\n                new ValidPlanetName, // &lt;-- Aqui est\u00e1 nossa regra personalizada\n            ],\n            'description' =&gt; 'sometimes|string',\n            'size_km' =&gt; 'sometimes|integer|min:100|max:500000',\n            'solar_system' =&gt; 'sometimes|string|max:100',\n            'image_url' =&gt; 'nullable|url|max:2048',\n            'is_habitable' =&gt; 'sometimes|boolean'\n        ];\n    }\n\n    // ... (m\u00e9todo messages)\n}\n</code></pre> Pronto. Agora, ao criar um planeta, o Laravel aplicar\u00e1 sequencialmente todas as regras ao campo <code>name</code> e, ao chegar a <code>new ValidPlanetName</code>, executar\u00e1 nossa l\u00f3gica personalizada.</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/6/#7-validacao-para-atualizacao-update","title":"7. Valida\u00e7\u00e3o para atualiza\u00e7\u00e3o (Update)","text":"<p>Particularidades ao atualizar dados:</p> <p>Ao atualizar um registro, as regras de valida\u00e7\u00e3o frequentemente diferem. A principal caracter\u00edstica \u00e9 a verifica\u00e7\u00e3o de unicidade, que deve ignorar o registro atualmente sendo atualizado.</p> <p>Passo 1: Criamos um Form Request separado para atualiza\u00e7\u00e3o <pre><code>php artisan make:request UpdatePlanetRequest\n</code></pre> Passo 2: Editamos <code>app/Http/Requests/UpdatePlanetRequest.php</code> <pre><code>&lt;?php\nuse Illuminate\\Validation\\Rule;\n\npublic function authorize(): bool\n{\n    return true;\n}\npublic function rules(): array\n{\n    $planet = $this-&gt;route('planet'); // Obtemos o modelo da rota\n\n     return [\n         'name' =&gt; [\n             'sometimes', // Verifica, somente se o campo veio na requisi\u00e7\u00e3o\n             'required',\n             'string',\n             'max:255',\n             Rule::unique('planets')-&gt;ignore($planetId),\n         ],\n         'description'  =&gt; 'sometimes|required|string',\n         'size_km'      =&gt; 'sometimes|required|integer|min:100|max:500000',\n         // ... outros campos com 'sometimes'\n     ];\n }\n</code></pre> Passo 3: Usamos no controlador <pre><code>&lt;?php\n use App\\Http\\Requests\\UpdatePlanetRequest;\n\n public function update(UpdatePlanetRequest $request, Planet $planet)\n {\n     $validated = $request-&gt;validated();\n     $planet-&gt;update($validated);\n     return response()-&gt;json($planet);\n }\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/6/#8-testando-a-validacao-no-postman","title":"8. Testando a valida\u00e7\u00e3o no Postman","text":"<p>Cen\u00e1rio 1: Erro de unicidade do nome <pre><code>POST /api/planets\n{\n    \"name\": \"\u041c\u0430\u0440\u0441\",\n    \"description\": \"Planeta vermelho, alvo de futuras coloniza\u00e7\u00f5es\",\n    \"size_km\": 6779,\n    \"solar_system\": \"Solar System\",\n    \"is_habitable\": false\n}\n</code></pre> Resposta esperada: <pre><code>{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"name\": [\"Um planeta com esse nome j\u00e1 existe!\"]\n    }\n}\n</code></pre></p> <p>Cen\u00e1rio 2: Di\u00e2metro incorreto <pre><code>{\n    \"name\": \"Planeta-Ervilha\",\n    \"size_km\": 50 // &lt; min:100\n}\n</code></pre> Resposta esperada: <pre><code>\"errors\": {\n    \"size_km\": [\"O di\u00e2metro n\u00e3o pode ser menor que 100 km\"]\n}\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/6/#questionario-para-fixacao","title":"Question\u00e1rio para fixa\u00e7\u00e3o","text":"<p>1. Status HTTP em caso de erros de valida\u00e7\u00e3o:</p>  a) 400 Bad Request  b) 422 Unprocessable Entity  c) 500 Internal Server Error <p>2. Regra para verifica\u00e7\u00e3o de unicidade:</p>  a) unique:table  b) distinct  c) only:table <p>3. Onde \u00e9 melhor colocar regras de valida\u00e7\u00e3o complexas?</p>  a) No controlador  b) No modelo  c) No Form Request <p>4. O m\u00e9todo `authorize()` no Form Request deve retornar:</p>  a) false  b) true  c) null <p>5. A regra sometimes significa:</p>  a) Campo obrigat\u00f3rio  b) O campo \u00e9 verificado apenas se estiver presente  c) O campo \u00e9 ignorado Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea estabeleceu um poderoso sistema de defesa para sua API espacial:</p> <ul> <li>\ud83d\udee1\ufe0f Regras de valida\u00e7\u00e3o b\u00e1sicas e customizadas</li> <li>\ud83d\udcdd Mensagens de erro leg\u00edveis</li> <li>\ud83e\udde9 Form Request para cen\u00e1rios complexos</li> <li>\u2699\ufe0f Regras exclusivas para atualiza\u00e7\u00e3o de dados</li> </ul> <p>Seu universo est\u00e1 agora sob prote\u00e7\u00e3o! Em seguida, aprenderemos a lidar com \"acidentes espaciais\" - erros de servidor.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ol> <li>Crie um Form Request para atualizar planetas</li> <li>Adicione uma regra de valida\u00e7\u00e3o customizada para o nome</li> <li>Teste os erros via Postman</li> </ol> <p>\u26a0\ufe0f Se a valida\u00e7\u00e3o n\u00e3o funcionar:</p> <ul> <li>Verifique a conex\u00e3o do Form Request no controlador</li> <li>Certifique-se de que <code>authorize()</code> retorne true</li> <li>Para unicidade na atualiza\u00e7\u00e3o, use <code>Rule::unique</code></li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/7/","title":"Cap\u00edtulo 2.7: Tratamento de Erros","text":"<p>Tempo de estudo: 40 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/7/#1-por-que-erros-padrao-sao-ruins","title":"1. Por que erros padr\u00e3o s\u00e3o ruins?","text":"<p>Se ocorrer um erro em sua aplica\u00e7\u00e3o Laravel (por exemplo, um registro n\u00e3o encontrado no banco de dados) e voc\u00ea n\u00e3o o tratar de nenhuma forma, o usu\u00e1rio ver\u00e1 uma enorme p\u00e1gina HTML com informa\u00e7\u00f5es de depura\u00e7\u00e3o ou uma mensagem n\u00e3o informativa de \"Server Error\".</p> <p>Para APIs, isso \u00e9 uma cat\u00e1strofe. Seu aplicativo frontend espera receber JSON, n\u00e3o HTML. Nossa tarefa \u00e9 interceptar qualquer erro e transform\u00e1-lo em uma resposta JSON estruturada.</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/7/#2-dispatcher-central-de-erros-bootstrapappphp","title":"2. Dispatcher Central de Erros: <code>bootstrap/app.php</code>","text":"<p>Em vers\u00f5es antigas do Laravel, havia um arquivo volumoso <code>App\\Exceptions\\Handler.php</code>. No Laravel 11/12, tudo se tornou muito mais simples e elegante. O centro de gerenciamento de erros agora est\u00e1 localizado diretamente no arquivo de configura\u00e7\u00e3o do seu aplicativo \u2014 <code>bootstrap/app.php</code>.</p> <p>Abra <code>bootstrap/app.php</code>. No final, voc\u00ea ver\u00e1 o bloco <code>.withExceptions(...)</code>. Este \u00e9 o nosso \"dispatcher central\".</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    -&gt;withRouting(\n        web: __DIR__.'/../routes/web.php',\n        api: __DIR__.'/../routes/api.php',\n        commands: __DIR__.'/../routes/console.php',\n        health: '/up',\n    )\n    -&gt;withMiddleware(function (Middleware $middleware) {\n        // ...\n    })\n    -&gt;withExceptions(function (Exceptions $exceptions) {\n        // &lt;-- \u00c9 AQUI QUE VAMOS TRABALHAR\n    })-&gt;create();\n</code></pre>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/7/#3-lidando-com-o-erro-mais-comum-nao-encontrado-404","title":"3. Lidando com o erro mais comum: \"N\u00e3o Encontrado\" (404)","text":"<p>O erro mais comum em uma API \u00e9 quando o usu\u00e1rio solicita um recurso que n\u00e3o existe (por exemplo, <code>GET /api/planets/999</code>). O Laravel, neste caso, gera uma exce\u00e7\u00e3o <code>ModelNotFoundException</code> ou <code>NotFoundHttpException</code>. Vamos intercept\u00e1-las.</p> <p>Adicione o seguinte c\u00f3digo dentro de <code>.withExceptions(...)</code>:</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // Interceptamos a exce\u00e7\u00e3o quando o modelo n\u00e3o \u00e9 encontrado no banco de dados\n    $exceptions-&gt;render(function (ModelNotFoundException $e, Request $request) {\n        // Verificamos se a requisi\u00e7\u00e3o veio especificamente para nossa API\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; 'O recurso solicitado n\u00e3o foi encontrado em nossa gal\u00e1xia.'\n            ], 404);\n        }\n    });\n\n    // Interceptamos a exce\u00e7\u00e3o quando a pr\u00f3pria rota n\u00e3o \u00e9 encontrada\n    $exceptions-&gt;render(function (NotFoundHttpException $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; 'Essa rota espacial n\u00e3o existe.'\n            ], 404);\n        }\n    });\n\n})-&gt;create();\n</code></pre> O que fizemos?</p> <ol> <li><code>$exceptions-&gt;render(...)</code> \u2014 registramos um \"handler\" (manipulador). Ele diz: \"Se ocorrer uma exce\u00e7\u00e3o do tipo <code>ModelNotFoundException</code>, execute este c\u00f3digo\".</li> <li><code>if ($request-&gt;is('api/*'))</code> \u2014 esta \u00e9 uma verifica\u00e7\u00e3o importante. Ela garante que nossa bela resposta JSON ser\u00e1 enviada apenas para requisi\u00e7\u00f5es de API, sem afetar p\u00e1ginas web comuns.</li> <li><code>return response()-&gt;json(...)</code> \u2014 criamos e retornamos uma resposta JSON padronizada com c\u00f3digo 404.</li> </ol> <p>Agora, se voc\u00ea solicitar um planeta inexistente, em vez de uma p\u00e1gina HTML feia, voc\u00ea receber\u00e1 um JSON limpo.</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/7/#4-excecoes-personalizadas-criando-nossos-proprios-sinais-de-alarme","title":"4. Exce\u00e7\u00f5es Personalizadas: Criando nossos pr\u00f3prios \"sinais de alarme\"","text":"<p>\u00c0s vezes, as exce\u00e7\u00f5es padr\u00e3o n\u00e3o s\u00e3o suficientes. Imagine que temos uma regra de neg\u00f3cio: \"n\u00e3o \u00e9 poss\u00edvel deletar o planeta 'Terra'\". Se algu\u00e9m tentar fazer isso, devemos retornar um erro significativo.</p> <p>Passo 1: Criando nossa classe de exce\u00e7\u00e3o Executaremos no terminal: <pre><code>php artisan make:exception CannotDeleteEarthException\n</code></pre></p> <p>Passo 2: Usando-o no controller Abriremos <code>PlanetController.php</code> e modificaremos o m\u00e9todo <code>destroy</code>:</p> <p><pre><code>&lt;?php\n// app/Http/Controllers/PlanetController.php\nuse App\\Exceptions\\CannotDeleteEarthException; // &lt;-- Importamos nossa exce\u00e7\u00e3o\nuse App\\Models\\Planet;\n\npublic function destroy(Planet $planet)\n{\n    // Nossa nova regra de neg\u00f3cio\n    if (strtolower($planet-&gt;name) === '\u0437\u0435\u043c\u043b\u044f') {\n        throw new CannotDeleteEarthException('A exclus\u00e3o do planeta Terra \u00e9 proibida pelo C\u00f3digo Gal\u00e1ctico.');\n    }\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre> Agora, se algu\u00e9m tentar executar <code>DELETE /api/planets/1</code> (onde 1 \u00e9 o ID da Terra), nosso c\u00f3digo lan\u00e7ar\u00e1 uma exce\u00e7\u00e3o <code>CannotDeleteEarthException</code>.</p> <p>Passo 3: Ensinando o Laravel a tratar nossa \"emerg\u00eancia\" de forma elegante Voltaremos a <code>bootstrap/app.php</code> e adicionaremos um novo handler para nossa exce\u00e7\u00e3o.</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // Nosso novo handler\n    $exceptions-&gt;render(function (CannotDeleteEarthException $e, Request $request) {\n        return response()-&gt;json([\n            'message' =&gt; 'Opera\u00e7\u00e3o proibida.',\n            'details' =&gt; $e-&gt;getMessage() // Obtemos a mensagem que passamos no throw\n        ], 403); // 403 Forbidden - \"Acesso Proibido\"\n    });\n\n    // ... (outros handlers para 404)\n\n})-&gt;create();\n</code></pre> Pronto! Criamos nossa pr\u00f3pria exce\u00e7\u00e3o nomeada, que torna o c\u00f3digo do controller mais limpo, e ensinamos o Laravel a transform\u00e1-la em uma resposta JSON bonita e significativa com o status HTTP correto.</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/7/#5-tratamento-de-todas-as-outras-falhas-500-internal-server-error","title":"5. Tratamento de todas as outras falhas (500 Internal Server Error)","text":"<p>O que fazer com todas as outras falhas inesperadas? Por exemplo, se o banco de dados cair ou houver um erro de sintaxe no c\u00f3digo. Para isso, podemos registrar um handler \"universal\" para o tipo de erro mais geral \u2014 <code>Throwable</code>.</p> <p>Importante: Este handler deve ser o \u00faltimo, para n\u00e3o interceptar exce\u00e7\u00f5es mais espec\u00edficas que definimos acima.</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // ... (handlers para CannotDeleteEarthException e 404)\n\n    // HANDLER UNIVERSAL (no final)\n    $exceptions-&gt;render(function (Throwable $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            // Em modo de depura\u00e7\u00e3o, a mensagem de erro real pode ser exibida\n            $message = config('app.debug')\n                ? 'Ocorreu um erro: ' . $e-&gt;getMessage()\n                : 'Uma falha inesperada ocorreu a bordo. Os engenheiros j\u00e1 foram chamados.';\n\n            return response()-&gt;json(['message' =&gt; $message], 500);\n        }\n    });\n\n})-&gt;create();\n</code></pre> <p>Agora, qualquer exce\u00e7\u00e3o \"desconhecida\" ser\u00e1 cuidadosamente interceptada e transformada em JSON com c\u00f3digo 500, sem quebrar sua API ou mostrar informa\u00e7\u00f5es desnecess\u00e1rias ao usu\u00e1rio.</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/7/#6-log-de-erros-caixa-preta-da-nave-espacial","title":"6. Log de Erros: Caixa preta da nave espacial","text":"<p>Configura\u00e7\u00f5es de log em <code>config/logging.php</code>: <pre><code>&lt;?php\n'channels' =&gt; [\n    'space_api' =&gt; [\n        'driver' =&gt; 'daily',\n        'path' =&gt; storage_path('logs/space_api.log'),\n        'level' =&gt; 'error',\n        'days' =&gt; 14,\n    ],\n],\n</code></pre></p> <p>Adicionando um registro ao log: <pre><code>&lt;?php\ntry {\n    // C\u00f3digo com risco de erro\n} catch (Exception $e) {\n    Log::channel('space_api')-&gt;error('Erro de acesso aos planetas', [\n        'exception' =&gt; $e,\n        'request' =&gt; request()-&gt;all(),\n        'user_id' =&gt; auth()-&gt;id()\n    ]);\n    throw $e;\n}\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/7/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. Status HTTP para \"Planeta n\u00e3o encontrado\":</p>  a) 400  b) 404  c) 500 <p>2. Classe para tratamento global de erros:</p>  a) Handler.php  b) ErrorController.php  c) Middleware/Error.php <p>3. M\u00e9todo para criar uma exce\u00e7\u00e3o personalizada:</p>  a) php artisan make:exception  b) php artisan exception:create  c) php artisan generate:exception <p>4. Canal para log separado de erros da API:</p>  a) Configura\u00e7\u00e3o em config/logging.php  b) Par\u00e2metro em .env  c) Indica\u00e7\u00e3o no controller <p>5. Principal vantagem de criar exce\u00e7\u00f5es personalizadas:</p>  a) Aumento de desempenho  b) Cria\u00e7\u00e3o de erros semanticamente compreens\u00edveis para cen\u00e1rios de neg\u00f3cios espec\u00edficos  c) Adi\u00e7\u00e3o autom\u00e1tica ao .env Verificar <p>\ud83d\ude80 Resumo do cap\u00edtulo:</p> <p>Voc\u00ea equipou sua API com um sistema de recupera\u00e7\u00e3o robusto:</p> <ul> <li>\ud83d\udedf Intercepta\u00e7\u00e3o global de erros padr\u00e3o</li> <li>\ud83e\ude90 Exce\u00e7\u00f5es personalizadas com c\u00f3digos claros</li> <li>\ud83d\udcdd Formato JSON unificado para todos os erros</li> <li>\ud83d\udd0d Log com detalhes do incidente</li> <li>\ud83d\udce1 Integra\u00e7\u00e3o com sistemas de monitoramento</li> </ul> <p>A nave espacial est\u00e1 pronta para emerg\u00eancias! No cap\u00edtulo final da se\u00e7\u00e3o, testaremos todos os sistemas.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ol> <li>Crie uma exce\u00e7\u00e3o <code>PlanetNotFoundException</code></li> <li>Adicione o tratamento de erros 404 em <code>-&gt;withExceptions</code></li> <li>Teste uma requisi\u00e7\u00e3o para um planeta inexistente</li> </ol> <p>\u26a0\ufe0f Se os erros n\u00e3o forem interceptados:</p> <ul> <li>Certifique-se de que <code>is('api/*')</code> corresponde \u00e0s suas rotas</li> <li>Verifique a ordem dos manipuladores em <code>register()</code></li> <li>Para exce\u00e7\u00f5es personalizadas, use <code>throw new</code></li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/8/","title":"Cap\u00edtulo 2.8: Teste de API","text":"<p>Tempo de estudo: 1 hora</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/8/#1-por-que-os-testes-sao-necessarios","title":"1. Por que os testes s\u00e3o necess\u00e1rios?","text":"<p>Imagine que voc\u00ea construiu uma nave espacial. Antes de envi\u00e1-la para Marte, voc\u00ea realiza milhares de verifica\u00e7\u00f5es na Terra. Testes em programa\u00e7\u00e3o s\u00e3o a mesma coisa. Eles:</p> <ul> <li>D\u00e3o confian\u00e7a: Voc\u00ea pode alterar o c\u00f3digo, e se os testes passarem \u2014 significa que voc\u00ea n\u00e3o quebrou nada.</li> <li>Economizam tempo: Em vez de \"clicar\" manualmente em tudo no Postman ap\u00f3s cada altera\u00e7\u00e3o, voc\u00ea executa um \u00fanico comando, e ele verifica tudo para voc\u00ea em segundos.</li> <li>Servem como documenta\u00e7\u00e3o: Bons testes mostram como sua API deve funcionar.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/8/#2-configurando-o-laboratorio-de-teste","title":"2. Configurando o \"Laborat\u00f3rio\" de Teste","text":"<p>Laravel torna a configura\u00e7\u00e3o de testes incrivelmente simples. Por padr\u00e3o, ele usa uma configura\u00e7\u00e3o separada para n\u00e3o afetar seu banco de dados principal.</p> <p>Banco de dados para testes: Por padr\u00e3o, Laravel usa um banco de dados em mem\u00f3ria (<code>:memory:</code>). Esta \u00e9 a maneira mais r\u00e1pida, porque n\u00e3o h\u00e1 necessidade de escrever nada no disco. O banco de dados \u00e9 criado antes dos testes e destru\u00eddo depois deles. Nem precisamos configurar nada para isso!</p> <p>Cria\u00e7\u00e3o de arquivo de teste: Vamos criar um arquivo especial para testes relacionados a planetas.</p> <pre><code>php artisan make:test PlanetApiTest\n</code></pre> <p>Este comando criar\u00e1 o arquivo <code>tests/Feature/PlanetApiTest.php</code>. A palavra <code>Feature</code> significa que vamos testar a funcionalidade como um todo (por exemplo, \"o usu\u00e1rio pode criar um planeta?\"), e n\u00e3o uma pequena classe individual.</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/8/#3-anatomia-de-um-teste-preparacao-acao-verificacao","title":"3. Anatomia de um teste: Prepara\u00e7\u00e3o, A\u00e7\u00e3o, Verifica\u00e7\u00e3o","text":"<p>Abra <code>tests/Feature/PlanetApiTest.php</code>. Dentro dele, escreveremos nosso primeiro teste. Um bom teste sempre consiste em tr\u00eas partes (Arrange, Act, Assert).</p> <p><pre><code>&lt;?php\n\nnamespace Tests\\Feature;\n\nuse App\\Models\\Planet; // N\u00e3o se esque\u00e7a de importar o modelo\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase; // Ferramenta crucial!\nuse Tests\\TestCase;\n\nclass PlanetApiTest extends TestCase\n{\n    // Este trait \"magicamente\" limpa e recria\n    // nosso banco de dados de teste antes de cada teste.\n    // Isso garante que os testes n\u00e3o afetem uns aos outros.\n    use RefreshDatabase;\n\n    /**\n     * Teste: o endpoint para obter a lista de planetas funciona corretamente.\n     * Os nomes dos testes devem ser significativos!\n     */\n    public function test_can_get_all_planets(): void\n    {\n        // 1. PREPARA\u00c7\u00c3O (Arrange)\n        // Criamos 3 planetas falsos em nosso banco de dados de teste\n        // usando a factory que criamos anteriormente.\n        Planet::factory()-&gt;count(3)-&gt;create();\n\n        // 2. A\u00c7\u00c3O (Act)\n        // Simulamos uma requisi\u00e7\u00e3o GET real para nossa API.\n        $response = $this-&gt;getJson('/api/planets');\n\n        // 3. VERIFICA\u00c7\u00c3O (Assert)\n        // Verificamos se tudo correu como deveria.\n        $response-&gt;assertStatus(200); // Esperamos que o servidor responda \"200 OK\"\n        $response-&gt;assertJsonCount(3); // Esperamos que haja exatamente 3 planetas na resposta\n    }\n}\n</code></pre> Pontos-chave:</p> <ul> <li><code>use RefreshDatabase</code>: Este trait \u00e9 seu melhor amigo. Ele garante que cada teste comece com uma \"folha em branco\", com um banco de dados vazio.</li> <li><code>Planet::factory()</code>: As factories s\u00e3o ideais para criar dados de teste.</li> <li><code>$this-&gt;getJson()</code>: Este \u00e9 um m\u00e9todo especial do Laravel para enviar requisi\u00e7\u00f5es de API dentro dos testes.</li> <li><code>assert...()</code>: Estas s\u00e3o \"asser\u00e7\u00f5es\" ou \"verifica\u00e7\u00f5es\". Se pelo menos uma delas n\u00e3o for satisfeita, o teste falhar\u00e1.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/8/#4-testando-operacoes-basicas-crud","title":"4. Testando opera\u00e7\u00f5es b\u00e1sicas (CRUD)","text":"<p>Vamos escrever testes para criar, atualizar e excluir planetas.</p> <p>A. Teste para cria\u00e7\u00e3o de planeta (POST)</p> <pre><code>&lt;?php\npublic function test_can_create_a_planet(): void\n{\n    // 1. Prepara\u00e7\u00e3o: preparamos os dados para o novo planeta\n    $planetData = [\n        'name' =&gt; 'Kepler-186f',\n        'description' =&gt; 'Primeiro exoplaneta do tamanho da Terra na zona habit\u00e1vel.',\n        'size_km' =&gt; 14000,\n        'solar_system' =&gt; 'Kepler-186'\n    ];\n\n    // 2. A\u00e7\u00e3o: enviamos uma requisi\u00e7\u00e3o POST com os dados\n    $response = $this-&gt;postJson('/api/planets', $planetData);\n\n    // 3. Verifica\u00e7\u00e3o\n    $response-&gt;assertStatus(201); // Esperamos o status \"201 Created\"\n    $response-&gt;assertJsonFragment(['name' =&gt; 'Kepler-186f']); // Verificamos se o nome criado est\u00e1 na resposta\n\n    // A verifica\u00e7\u00e3o mais importante: os dados realmente foram para o banco de dados?\n    $this-&gt;assertDatabaseHas('planets', [\n        'name' =&gt; 'Kepler-186f'\n    ]);\n}\n</code></pre> <p>B. Teste para exclus\u00e3o de planeta (DELETE) <pre><code>&lt;?php\npublic function test_can_delete_a_planet(): void\n{\n    // 1. Prepara\u00e7\u00e3o: criamos o planeta que vamos excluir\n    $planet = Planet::factory()-&gt;create();\n\n    // 2. A\u00e7\u00e3o: enviamos uma requisi\u00e7\u00e3o DELETE\n    $response = $this-&gt;deleteJson(\"/api/planets/{$planet-&gt;id}\");\n\n    // 3. Verifica\u00e7\u00e3o\n    $response-&gt;assertStatus(204); // Esperamos \"204 No Content\" - exclus\u00e3o bem-sucedida\n\n    // Verificamos se o registro realmente desapareceu do banco de dados\n    $this-&gt;assertDatabaseMissing('planets', [\n        'id' =&gt; $planet-&gt;id\n    ]);\n}\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/8/#5-testando-cenarios-ruins","title":"5. Testando cen\u00e1rios \"ruins\"","text":"<p>Testar casos de sucesso \u00e9 bom. Mas \u00e9 ainda mais importante testar erros!</p> <p>A. Teste para erro de valida\u00e7\u00e3o <pre><code>&lt;?php\npublic function test_creation_fails_with_invalid_data(): void\n{\n    // 2. A\u00e7\u00e3o: enviamos dados intencionalmente incorretos\n    $response = $this-&gt;postJson('/api/planets', ['name' =&gt; '']); // Nome vazio\n\n    // 3. Verifica\u00e7\u00e3o\n    $response-&gt;assertStatus(422); // Esperamos \"422 Unprocessable Entity\"\n    $response-&gt;assertJsonValidationErrors('name'); // Esperamos que o erro seja especificamente no campo 'name'\n}\n</code></pre></p> <p>B. Teste para \"n\u00e3o encontrado\" (404) <pre><code>&lt;?php\npublic function test_returns_404_for_non_existent_planet(): void\n{\n    // 2. A\u00e7\u00e3o: solicitamos um planeta com um ID inexistente\n    $response = $this-&gt;getJson('/api/planets/99999');\n\n    // 3. Verifica\u00e7\u00e3o\n    $response-&gt;assertStatus(404); // Esperamos \"404 Not Found\"\n}\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/8/#6-executando-os-testes","title":"6. Executando os testes","text":"<p>Agora que os testes est\u00e3o escritos, execut\u00e1-los \u00e9 muito simples. Execute no terminal:</p> <pre><code>php artisan test\n</code></pre> <p>Laravel encontrar\u00e1 todos os seus testes e os executar\u00e1 um por um. Se tudo ocorrer bem, voc\u00ea ver\u00e1 uma sa\u00edda verde. Se algum teste falhar, voc\u00ea ver\u00e1 uma sa\u00edda vermelha com uma descri\u00e7\u00e3o detalhada do erro, o que permitir\u00e1 que voc\u00ea o corrija rapidamente.</p> <p>Para executar apenas um arquivo espec\u00edfico: <pre><code>php artisan test tests/Feature/PlanetApiTest.php\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/8/#8-cobertura-de-codigo-code-coverage","title":"8. Cobertura de C\u00f3digo (Code Coverage)","text":"<p>Passo 1: Instala\u00e7\u00e3o do Xdebug</p> <p>Para coletar informa\u00e7\u00f5es de cobertura de c\u00f3digo, a extens\u00e3o PHP \u2014 Xdebug \u00e9 necess\u00e1ria.</p> <p>Envie seu <code>php -i</code> para o wizard e siga as instru\u00e7\u00f5es.</p> <p>Passo 2: Configura\u00e7\u00e3o de <code>phpunit.xml</code> <pre><code>&lt;phpunit ... &gt;\n    &lt;coverage processUncoveredFiles=\"true\"&gt;\n        &lt;include&gt;\n            &lt;directory suffix=\".php\"&gt;./app&lt;/directory&gt;\n        &lt;/include&gt;\n    &lt;/coverage&gt;\n&lt;/phpunit&gt;\n</code></pre></p> <p>Passo 3: Execu\u00e7\u00e3o com relat\u00f3rio <pre><code>php artisan test --coverage-html=coverage\n</code></pre> Relat\u00f3rio: Abra <code>coverage/index.html</code> no navegador</p>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/8/#9-integracao-com-postman","title":"9. Integra\u00e7\u00e3o com Postman","text":"<p>Automa\u00e7\u00e3o via Newman:</p> <ol> <li>Exporte a cole\u00e7\u00e3o do Postman para <code>tests/Postman/SpaceApi.postman_collection.json</code></li> <li>Instale o Newman: <pre><code>npm install -g newman\n</code></pre></li> <li>Adicione o script em <code>composer.json</code>: <pre><code>\"scripts\": {\n    \"test:postman\": \"newman run tests/Postman/SpaceApi.postman_collection.json\"\n}\n</code></pre></li> <li>Execu\u00e7\u00e3o: <pre><code>composer test:postman\n</code></pre></li> </ol>"},{"location":"pt/Cap%C3%ADtulo%202%20-%20Cria%C3%A7%C3%A3o%20de%20API%20no%20Laravel/8/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. Comando para criar uma classe de teste:</p>  a) php artisan make:test  b) php artisan generate:test  c) php artisan test:create <p>2. O trait RefreshDatabase \u00e9 usado para:</p>  a) Limpar o BD ap\u00f3s os testes  b) Preencher o BD com dados de teste  c) Criar a estrutura do BD <p>3. M\u00e9todo para verificar a estrutura JSON:</p>  a) assertJsonFormat()  b) assertJsonStructure()  c) assertJsonSchema() <p>4. As factories no Laravel s\u00e3o necess\u00e1rias para:</p>  a) Gera\u00e7\u00e3o de dados de teste  b) Cria\u00e7\u00e3o de migra\u00e7\u00f5es  c) Tratamento de erros <p>5. Ferramenta para executar cole\u00e7\u00f5es Postman a partir da CLI:</p>  a) Newman  b) Postman CLI  c) Artisan Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea realizou um ciclo completo de testes de pr\u00e9-voo! Agora seu API ir\u00e1:</p> <ul> <li>\u2705 Configurar o ambiente de teste sem esfor\u00e7o extra</li> <li>\ud83d\udee1\ufe0f Escrever testes seguindo o princ\u00edpio \"Prepara\u00e7\u00e3o-A\u00e7\u00e3o-Verifica\u00e7\u00e3o\".</li> <li>\ud83d\udcca Testar tanto cen\u00e1rios de sucesso (CRUD) quanto erros (valida\u00e7\u00e3o, 404).</li> <li>\ud83d\udd01 Executar testes com um \u00fanico comando e ter confian\u00e7a no seu c\u00f3digo.</li> </ul> <p>A nave espacial est\u00e1 pronta para o lan\u00e7amento! Voc\u00ea concluiu a se\u00e7\u00e3o sobre a cria\u00e7\u00e3o de API com Laravel.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o final:</p> <ol> <li>Execute <code>php artisan test</code></li> <li>Certifique-se de que todos os testes passem (luz verde!)</li> <li>Verifique o relat\u00f3rio de cobertura</li> </ol> <p>\u26a0\ufe0f Se os testes falharem:</p> <ul> <li>Verifique o funcionamento da API via Postman</li> <li>Certifique-se de que o BD de teste esteja configurado</li> <li>Use <code>dd($response-&gt;content())</code> para depura\u00e7\u00e3o</li> </ul> <p>Parab\u00e9ns pela conclus\u00e3o do Cap\u00edtulo 2! Voc\u00ea n\u00e3o apenas criou uma API, mas tamb\u00e9m construiu uma \"nave espacial\" confi\u00e1vel e testada, pronta para futuras miss\u00f5es.</p> <p>\ud83c\udf0c Pr\u00f3ximos passos:</p> <ol> <li>Configura\u00e7\u00e3o de autentica\u00e7\u00e3o (Sanctum)</li> <li>Documenta\u00e7\u00e3o da API com Swagger</li> <li>Implanta\u00e7\u00e3o no servidor (Forge, VPS)</li> <li>Desenvolvimento do frontend com Vue/React</li> </ol> <p>Sucesso no lan\u00e7amento da sua miss\u00e3o espacial! No pr\u00f3ximo cap\u00edtulo, exploraremos a escrita de uma API do zero \ud83d\ude80</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/1/","title":"Cap\u00edtulo 3.1: Instala\u00e7\u00e3o do FastAPI e Configura\u00e7\u00e3o do Ambiente","text":"<p>Tempo de estudo: 45 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/1/#1-o-que-e-fastapi-o-hipermotor-para-apis","title":"1. O que \u00e9 FastAPI? O Hipermotor para APIs","text":"<p>Se Flask \u00e9 uma sonda de reconhecimento manobr\u00e1vel e Django \u00e9 uma enorme nave-m\u00e3e, ent\u00e3o FastAPI \u00e9 um ca\u00e7a supers\u00f4nico.</p> <p>FastAPI \u00e9 um framework web moderno e de alto desempenho para a cria\u00e7\u00e3o de APIs em Python 3.7+. Suas principais vantagens s\u00e3o:</p> <ul> <li>Velocidade: Um dos frameworks Python mais r\u00e1pidos, compar\u00e1vel a NodeJS e Go.</li> <li>Simplicidade: Sintaxe minimalista e intuitiva.</li> <li>Auto-documenta\u00e7\u00e3o: Gera automaticamente documenta\u00e7\u00e3o interativa para sua API.</li> <li>Tipagem: Utiliza dicas de tipo padr\u00e3o do Python para valida\u00e7\u00e3o, autocompletar e documenta\u00e7\u00e3o.</li> </ul> <p>\ud83d\udca1 Analogia Espacial:</p> <p>FastAPI \u00e9 como o \"hipermotor\" para sua nave-API. Ele \u00e9 baseado em duas tecnologias:</p> <ul> <li>Starlette (chassi do ca\u00e7a) \u2014 oferece assincronicidade e alt\u00edssimo desempenho.</li> <li>Pydantic (computador de bordo) \u2014 respons\u00e1vel pela valida\u00e7\u00e3o de dados e configura\u00e7\u00f5es.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/1/#2-preparando-a-plataforma-de-lancamento-ambiente-virtual","title":"2. Preparando a Plataforma de Lan\u00e7amento: Ambiente Virtual","text":"<p>Antes de construir nosso ca\u00e7a, precisamos criar um laborat\u00f3rio de montagem est\u00e9ril. Em Python, isso \u00e9 feito usando ambientes virtuais.</p> <p>Por que isso \u00e9 necess\u00e1rio? Para que as depend\u00eancias do nosso projeto (motores, sistemas de navega\u00e7\u00e3o) n\u00e3o entrem em conflito com outros projetos no seu computador.</p> <p>Passo 1: Criando o ambiente virtual Abra o terminal na pasta do seu projeto (por exemplo, <code>C:\\Projects\\FastAPI_Fleet</code>) e execute:</p> <p><pre><code>python -m venv venv\n</code></pre> Este comando criar\u00e1 uma pasta <code>venv</code> com uma vers\u00e3o isolada do Python.</p> <p>Passo 2: Ativando o \"campo de for\u00e7a\" do laborat\u00f3rio</p> <ul> <li>Windows (PowerShell):</li> </ul> <p><pre><code>.\\venv\\Scripts\\Activate.ps1\n</code></pre> (Se ocorrer um erro, talvez seja necess\u00e1rio permitir a execu\u00e7\u00e3o de scripts: <code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process</code>)</p> <ul> <li>Windows (CMD):</li> </ul> <pre><code>.\\venv\\Scripts\\activate.bat\n</code></pre> <ul> <li>macOS / Linux:</li> </ul> <p><pre><code>source venv/bin/activate\n</code></pre> Ap\u00f3s a ativa\u00e7\u00e3o, <code>(venv)</code> aparecer\u00e1 no in\u00edcio da linha do terminal. Isso significa que voc\u00ea est\u00e1 dentro do seu laborat\u00f3rio!</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/1/#3-instalacao-do-motor-fastapi-e-uvicorn","title":"3. Instala\u00e7\u00e3o do Motor: FastAPI e Uvicorn","text":"<p>Agora vamos instalar dois componentes chave:</p> <ul> <li>fastapi: O pr\u00f3prio framework.</li> <li>uvicorn: Um servidor ASGI ultrarr\u00e1pido que ir\u00e1 \"ligar\" nosso motor.</li> </ul> <p>Execute no ambiente ativado: <pre><code>pip install \"fastapi[all]\"\n</code></pre></p> <p>\ud83d\udca1 Por que <code>[all]</code>? Isso instalar\u00e1 <code>fastapi</code>, <code>uvicorn</code> e outros pacotes \u00fateis (por exemplo, para suporte a websockets e Jinja2), que ser\u00e3o \u00fateis em miss\u00f5es futuras.</p> <p>Verifica\u00e7\u00e3o da instala\u00e7\u00e3o: <pre><code>pip freeze\n</code></pre> Voc\u00ea dever\u00e1 ver <code>fastapi</code>, <code>pydantic</code>, <code>starlette</code>, <code>uvicorn</code> e outros pacotes na lista.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/1/#4-primeiro-contato-o-arquivo-mainpy","title":"4. Primeiro Contato: O Arquivo <code>main.py</code>","text":"<p>Crie um arquivo <code>main.py</code> na raiz do projeto \u2014 este ser\u00e1 o painel de controle central da nossa API.</p> <p>Adicione o seguinte c\u00f3digo a <code>main.py</code>: <pre><code>from fastapi import FastAPI\n\n# Criamos uma inst\u00e2ncia da nossa \"nave espacial\" API\napp = FastAPI()\n\n# Definimos o primeiro \"n\u00f3 de acoplagem\" (endpoint)\n# Este \u00e9 o URL raiz: /\n@app.get(\"/\")\ndef read_root():\n    \"\"\"\n    Esta \u00e9 a mensagem do Centro de Comando, vis\u00edvel para todos\n    que se conectam \u00e0 porta principal.\n    \"\"\"\n    return {\"message\": \"Bem-vindo ao Centro de Comando da Frota Espacial!\"}\n</code></pre> - <code>@app.get(\"/\")</code>: Este \u00e9 um decorador que informa ao FastAPI que a fun\u00e7\u00e3o <code>read_root</code> deve lidar com requisi\u00e7\u00f5es <code>GET</code> para o URL raiz (<code>/</code>).</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/1/#5-ignicao-iniciando-o-servidor","title":"5. Igni\u00e7\u00e3o! Iniciando o Servidor","text":"<p>Chegou a hora de ligar nosso hipermotor! No terminal (com o <code>venv</code> ativo), execute: <pre><code>uvicorn main:app --reload\n</code></pre> Decodifica\u00e7\u00e3o do comando:</p> <ul> <li><code>uvicorn</code>: Iniciamos o servidor Uvicorn.</li> <li><code>main</code>: O arquivo <code>main.py</code> (sem o <code>.py</code>).</li> <li><code>app</code>: O objeto <code>app = FastAPI()</code>, criado dentro de <code>main.py</code>.</li> <li><code>--reload</code>: \"Piloto autom\u00e1tico\". O servidor ser\u00e1 reiniciado automaticamente a cada altera\u00e7\u00e3o no c\u00f3digo.</li> </ul> <p>Sa\u00edda esperada no terminal: <pre><code>INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [12345]\nINFO:     Started server process [12346]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/1/#6-verificacao-de-conexao-com-o-centro-de-comando","title":"6. Verifica\u00e7\u00e3o de Conex\u00e3o com o Centro de Comando","text":"<p>Sua API est\u00e1 agora online e escutando na porta <code>8000</code>!</p> <p>Passo 1: Verifica\u00e7\u00e3o no navegador</p> <p>Abra o endere\u00e7o <code>http://127.0.0.1:8000</code> no navegador. Voc\u00ea dever\u00e1 ver: <pre><code>{\n  \"message\": \"Bem-vindo ao Centro de Comando da Frota Espacial!\"\n}\n</code></pre></p> <p>Passo 2: Olhando para o futuro (auto-documenta\u00e7\u00e3o)</p> <p>FastAPI j\u00e1 criou dois presentes para voc\u00ea. Abra estes URLs:</p> <ul> <li><code>http://127.0.0.1:8000/docs</code>: Documenta\u00e7\u00e3o interativa Swagger UI.</li> <li><code>http://127.0.0.1:8000/redoc</code>: Documenta\u00e7\u00e3o alternativa ReDoc.</li> </ul> <p>Voc\u00ea ver\u00e1 seu primeiro endpoint, que pode ser testado diretamente do navegador!</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/1/#quiz-para-fixacao","title":"Quiz para Fixa\u00e7\u00e3o","text":"<p>1. FastAPI \u00e9 conhecido por sua...</p>  a) Opera\u00e7\u00e3o lenta, mas confi\u00e1vel  b) Alta performance e velocidade  c) Integra\u00e7\u00e3o apenas com bancos de dados Microsoft <p>2. Para que serve um ambiente virtual (`venv`)?</p>  a) Para acelerar o trabalho do Python  b) Para isolar as depend\u00eancias do projeto  c) Para escrever testes automaticamente <p>3. Qual servidor \u00e9 usado para iniciar o FastAPI nesta li\u00e7\u00e3o?</p>  a) Apache  b) Gunicorn  c) Uvicorn <p>4. O comando `uvicorn main:app --reload` significa:</p>  a) Iniciar o arquivo `app.py` com o objeto `main`  b) Iniciar o objeto `app` no arquivo `main.py` e reiniciar a cada altera\u00e7\u00e3o  c) Reiniciar o computador e iniciar a aplica\u00e7\u00e3o <p>5. O que o decorador `@app.get(\"/\")` faz no FastAPI?</p>  a) Obt\u00e9m dados do arquivo `app.py`  b) Envia uma requisi\u00e7\u00e3o GET para um servidor externo  c) Associa a fun\u00e7\u00e3o a uma requisi\u00e7\u00e3o GET para o URL raiz Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea montou e iniciou com sucesso o \"hipermotor\" da sua nova API! Agora voc\u00ea tem: - \ud83d\udee0\ufe0f Ambiente de desenvolvimento isolado (<code>venv</code>) - \ud83d\ude80 FastAPI e servidor Uvicorn instalados - \ud83d\udef0\ufe0f API em funcionamento com um endpoint - \ud83d\udcca Documenta\u00e7\u00e3o gerada automaticamente</p> <p>Todos os sistemas em ordem! No pr\u00f3ximo cap\u00edtulo, criaremos nosso primeiro endpoint completo, que retornar\u00e1 uma lista de naves espaciais.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>No terminal, o ambiente <code>(venv)</code> est\u00e1 ativo</li> <li>O servidor <code>uvicorn</code> est\u00e1 rodando sem erros</li> <li>O endere\u00e7o <code>http://127.0.0.1:8000/docs</code> abre no navegador</li> </ul> <p>\u26a0\ufe0f Em caso de erros:</p> <ul> <li><code>command not found</code>: Certifique-se de que ativou o ambiente virtual.</li> <li><code>Port ... is already in use</code>: Outro programa est\u00e1 usando a porta 8000. Pare-o ou inicie o uvicorn em outra porta: <code>uvicorn main:app --reload --port 8001</code>.</li> <li>Erros ao ativar <code>venv</code> no PowerShell: Verifique a pol\u00edtica de execu\u00e7\u00e3o de scripts.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/2/","title":"Cap\u00edtulo 3.2: Criando seu primeiro endpoint de API","text":"<p>Tempo de estudo: 30 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/2/#1-endpoint-porta-de-acoplagem-para-dados","title":"1. Endpoint: Porta de Acoplagem para Dados","text":"<p>Imagine que nossa API \u00e9 uma esta\u00e7\u00e3o espacial. Um Endpoint (ponto final) \u00e9 uma porta de acoplagem espec\u00edfica, projetada para um determinado tipo de nave.</p> <ul> <li>Porta n\u00ba1 \u2014 para naves de carga (dados sobre planetas).</li> <li>Porta n\u00ba2 \u2014 para sondas de explora\u00e7\u00e3o (dados sobre miss\u00f5es).</li> <li>Porta n\u00ba3 \u2014 para \u00f4nibus espaciais de passageiros (dados sobre astronautas).</li> </ul> <p>Cada endpoint \u00e9 uma URL \u00fanica, respons\u00e1vel por uma opera\u00e7\u00e3o espec\u00edfica com um recurso espec\u00edfico.</p> <p>\ud83d\udca1 Analogia Espacial: <code>GET /spaceships</code> \u2014 \u00e9 o comando \"Centro de Controle \u2192 Esta\u00e7\u00e3o: Relate a lista de todas as naves acopladas\". Este endpoint retorna uma cole\u00e7\u00e3o de recursos.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/2/#2-criando-a-frota-espacial","title":"2. Criando a \"Frota Espacial\"","text":"<p>Enquanto n\u00e3o temos um banco de dados, criaremos uma \"simula\u00e7\u00e3o\" \u2014 uma lista simples de naves espaciais na forma de um dicion\u00e1rio Python.</p> <p>Abra <code>main.py</code> e adicione este c\u00f3digo antes da defini\u00e7\u00e3o de <code>app</code>: <pre><code># main.py\n\n# Passo 1: Criamos uma simula\u00e7\u00e3o de banco de dados\ndb_spaceships = {\n    1: {\n        \"name\": \"Voyager-1\",\n        \"type\": \"Sonda\",\n        \"launch_year\": 1977,\n        \"status\": \"Ativo\"\n    },\n    2: {\n        \"name\": \"Hubble Space Telescope\",\n        \"type\": \"Telesc\u00f3pio\",\n        \"launch_year\": 1990,\n        \"status\": \"Ativo\"\n    },\n    3: {\n        \"name\": \"ISS\",\n        \"type\": \"Esta\u00e7\u00e3o\",\n        \"launch_year\": 1998,\n        \"status\": \"Em \u00d3rbita\"\n    }\n}\n\n# ... aqui o c\u00f3digo app = FastAPI()\n</code></pre> Este \u00e9 o nosso \"registro de naves espaciais\", com o qual trabalharemos.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/2/#3-primeiro-endpoint-lista-de-naves","title":"3. Primeiro endpoint: Lista de Naves","text":"<p>Agora, vamos criar um endpoint que retornar\u00e1 toda a nossa frota.</p> <p>Adicione este c\u00f3digo em <code>main.py</code> ap\u00f3s <code>@app.get(\"/\")</code>: <pre><code># main.py\n\n# ... c\u00f3digo com db_spaceships, FastAPI, app e read_root() ...\n\n@app.get(\"/spaceships\")\ndef get_spaceships():\n    \"\"\"\n    Retorna uma lista de todas as naves espaciais no registro.\n    \"\"\"\n    return db_spaceships\n</code></pre></p> <ul> <li><code>@app.get(\"/spaceships\")</code>: Criamos uma nova rota. Agora, as requisi\u00e7\u00f5es <code>GET</code> para a URL <code>/spaceships</code> ser\u00e3o processadas pela fun\u00e7\u00e3o <code>get_spaceships</code>.</li> <li><code>return db_spaceships</code>: O FastAPI converter\u00e1 automaticamente o dicion\u00e1rio Python em uma resposta JSON v\u00e1lida.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/2/#4-testando-a-nova-porta-de-acoplagem","title":"4. Testando a Nova Porta de Acoplagem","text":"<p>Se o seu servidor <code>uvicorn</code> ainda estiver em execu\u00e7\u00e3o com a flag <code>--reload</code>, ele j\u00e1 recarregou e est\u00e1 pronto para uso. Caso contr\u00e1rio \u2014 inicie-o novamente: <pre><code>uvicorn main:app --reload\n</code></pre></p> <p>Passo 1: Verifica\u00e7\u00e3o no navegador</p> <p>Abra o endere\u00e7o <code>http://127.0.0.1:8000/spaceships</code> no seu navegador. Voc\u00ea deve ver a lista completa de suas naves em formato JSON: <pre><code>{\n  \"1\": {\n    \"name\": \"Voyager-1\",\n    \"type\": \"Sonda\",\n    \"launch_year\": 1977,\n    \"status\": \"Ativo\"\n  },\n  \"2\": {\n    \"name\": \"Hubble Space Telescope\",\n    \"type\": \"Telesc\u00f3pio\",\n    \"launch_year\": 1990,\n    \"status\": \"Ativo\"\n  },\n  \"3\": {\n    \"name\": \"ISS\",\n    \"type\": \"Esta\u00e7\u00e3o\",\n    \"launch_year\": 1998,\n    \"status\": \"Em \u00d3rbita\"\n  }\n}\n</code></pre></p> <p>Passo 2: Verifica\u00e7\u00e3o na documenta\u00e7\u00e3o autom\u00e1tica</p> <p>V\u00e1 para <code>http://127.0.0.1:8000/docs</code>. Voc\u00ea ver\u00e1 que uma nova se\u00e7\u00e3o para o endpoint <code>GET /spaceships</code> apareceu na documenta\u00e7\u00e3o. Voc\u00ea pode clicar em \"Try it out\" e \"Execute\" para test\u00e1-lo diretamente de l\u00e1!</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/2/#5-endpoint-com-parametro-dados-sobre-uma-nave-especifica","title":"5. Endpoint com Par\u00e2metro: Dados sobre uma Nave Espec\u00edfica","text":"<p>E se precisarmos dos dados apenas do \"Voyager-1\"? Para isso, criaremos um endpoint com um par\u00e2metro de caminho (path parameter).</p> <p>Adicione este c\u00f3digo em <code>main.py</code>: <pre><code># main.py\n\n# ... o resto do c\u00f3digo ...\n\n@app.get(\"/spaceships/{ship_id}\")\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    Retorna dados sobre uma nave espacial espec\u00edfica pelo seu ID.\n    \"\"\"\n    return db_spaceships.get(ship_id)\n</code></pre></p> <ul> <li><code>\"/spaceships/{ship_id}\"</code>: As chaves <code>{}</code> dizem ao FastAPI que <code>ship_id</code> \u00e9 uma vari\u00e1vel que ser\u00e1 passada da URL.</li> <li><code>ship_id: int</code>: Esta \u00e9 uma sugest\u00e3o de tipo (type hint). O FastAPI verificar\u00e1 automaticamente se o ID passado \u00e9 um n\u00famero inteiro. Se algu\u00e9m solicitar <code>/spaceships/voyager</code>, o FastAPI retornar\u00e1 um erro de valida\u00e7\u00e3o <code>422 Unprocessable Entity</code>. Isso \u00e9 magia!</li> </ul> <p>Verifica\u00e7\u00e3o:</p> <p>Abra <code>http://127.0.0.1:8000/spaceships/2</code>. Voc\u00ea deve receber dados apenas sobre o telesc\u00f3pio \"Hubble\". E se abrir <code>http://127.0.0.1:8000/spaceships/99</code> \u2014 receber\u00e1 <code>null</code>, pois n\u00e3o existe tal nave.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/2/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. Um endpoint em uma API \u00e9...</p>  a) O ponto final do Universo  b) Uma URL \u00fanica para uma opera\u00e7\u00e3o espec\u00edfica com um recurso  c) O nome do banco de dados <p>2. O que o decorator `@app.get(\"/users\")` faz?</p>  a) Cria um novo usu\u00e1rio  b) Associa uma fun\u00e7\u00e3o a uma requisi\u00e7\u00e3o GET para `/users`  c) Obt\u00e9m uma lista de todos os decorators <p>3. O que significa a entrada `\"/items/{item_id}\"` no caminho?</p>  a) Que voc\u00ea deve procurar uma pasta com o nome `{item_id}`  b) Que `item_id` \u00e9 um par\u00e2metro que ser\u00e1 obtido da URL  c) \u00c9 um coment\u00e1rio que ser\u00e1 ignorado <p>4. Por que a sugest\u00e3o de tipo `ship_id: int` \u00e9 necess\u00e1ria na fun\u00e7\u00e3o?</p>  a) Para que o Python funcione mais r\u00e1pido  b) Para que o FastAPI valide automaticamente que o ID \u00e9 um n\u00famero  c) Para que a vari\u00e1vel seja vis\u00edvel fora da fun\u00e7\u00e3o <p>5. Se voc\u00ea solicitar `/spaceships/abc`, mas o FastAPI espera `int`, o que acontecer\u00e1?</p>  a) O servidor \"cair\u00e1\" com um erro 500  b) O FastAPI retornar\u00e1 um erro 422  c) O FastAPI tentar\u00e1 converter \"abc\" em um n\u00famero Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea criou com sucesso duas \"portas de acoplagem\" em sua esta\u00e7\u00e3o espacial API:</p> <ul> <li>\ud83d\udef0\ufe0f Uma para obter a lista de todas as naves (<code>/spaceships</code>)</li> <li>\ud83d\udd2d Uma segunda para obter dados sobre uma nave espec\u00edfica (<code>/spaceships/{ship_id}</code>)</li> </ul> <p>Voc\u00ea tamb\u00e9m viu o poder da valida\u00e7\u00e3o autom\u00e1tica de tipos do FastAPI, que protege sua API contra requisi\u00e7\u00f5es incorretas.</p> <p>O sistema de navega\u00e7\u00e3o est\u00e1 configurado! No pr\u00f3ximo cap\u00edtulo, criaremos \"plantas\" para nossas naves espaciais usando Pydantic, para tornar nossa API ainda mais inteligente e robusta.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o: - O servidor <code>uvicorn</code> est\u00e1 a funcionar. - O URL <code>http://127.0.0.1:8000/spaceships</code> retorna JSON com uma lista de naves espaciais. - O URL <code>http://127.0.0.1:8000/spaceships/1</code> retorna dados sobre a \"Voyager-1\". - O URL <code>http://127.0.0.1:8000/docs</code> mostra dois novos endpoints.</p> <p>\u26a0\ufe0f Em caso de erros:</p> <ul> <li>404 Not Found: Verifique se o URL foi digitado corretamente no navegador e no decorador <code>@app.get(...)</code>.</li> <li>Erro no c\u00f3digo: Verifique cuidadosamente a sintaxe, especialmente a indenta\u00e7\u00e3o em Python e as v\u00edrgulas no dicion\u00e1rio.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/3/","title":"Cap\u00edtulo 3.3: Modelos de Dados com Pydantic","text":"<p>Tempo de estudo: 50 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/3/#1-pydantic-a-planta-digital-da-nave-espacial","title":"1. Pydantic: A \"Planta Digital\" da nave espacial","text":"<p>Imagine que voc\u00ea est\u00e1 construindo uma nave espacial. Voc\u00ea n\u00e3o pode simplesmente soldar peda\u00e7os de metal aleatoriamente. Voc\u00ea precisa de uma planta detalhada que defina:</p> <ul> <li>Nome da nave (tipo: <code>string</code>, comprimento m\u00e1x.: 50 caracteres)</li> <li>Ano de lan\u00e7amento (tipo: <code>n\u00famero inteiro</code>)</li> <li>Presen\u00e7a de hipermotor (tipo: <code>sim/n\u00e3o</code>)</li> </ul> <p>Pydantic \u00e9 uma biblioteca que permite criar essas \"plantas digitais\" para seus dados em Python. No FastAPI, ela desempenha tr\u00eas fun\u00e7\u00f5es chave:</p> <ol> <li>Declara\u00e7\u00e3o da estrutura: Descreve claramente quais campos seus dados cont\u00eam.</li> <li>Valida\u00e7\u00e3o de dados: Verifica automaticamente se os dados de entrada correspondem \u00e0 planta.</li> <li>Documenta\u00e7\u00e3o: O FastAPI usa essas plantas para gerar documenta\u00e7\u00e3o detalhada e interativa.</li> </ol> <p>\ud83d\udca1 Analogia espacial: Um modelo Pydantic \u00e9 a ficha t\u00e9cnica de um objeto. Qualquer \"carga\" (dados) que chega \u00e0 esta\u00e7\u00e3o deve corresponder \u00e0 especifica\u00e7\u00e3o na ficha t\u00e9cnica. Caso contr\u00e1rio, o computador de bordo (Pydantic) a rejeitar\u00e1.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/3/#2-criando-a-primeira-planta-modelo-spaceship","title":"2. Criando a primeira planta: Modelo <code>Spaceship</code>","text":"<p>Vamos criar um modelo que descrever\u00e1 nossa nave espacial.</p> <p>Passo 1: Importamos <code>BaseModel</code> do Pydantic Pydantic j\u00e1 est\u00e1 instalado junto com <code>fastapi[all]</code>. Precisamos apenas importar a classe base para nossos modelos.</p> <p>Adicione no <code>main.py</code> no topo, ao lado de outras importa\u00e7\u00f5es: <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n</code></pre></p> <p>Passo 2: Descrevemos o modelo <code>Spaceship</code> Crie uma classe que herda de <code>BaseModel</code>. Dentro da classe, defina os campos e seus tipos, usando as anota\u00e7\u00f5es de tipo padr\u00e3o do Python.</p> <p>Adicione este c\u00f3digo em <code>main.py</code> (pode ser depois das importa\u00e7\u00f5es): <pre><code>class Spaceship(BaseModel):\n    \"\"\"\n    Ficha t\u00e9cnica (modelo) da nave espacial.\n    \"\"\"\n    name: str\n    type: str\n    launch_year: int\n    status: str\n</code></pre> \u00c9 isso! Voc\u00ea acabou de criar a \"planta\". Pydantic agora sabe que qualquer objeto do tipo <code>Spaceship</code> deve ter quatro campos com os tipos especificados.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/3/#3-aplicando-o-modelo-melhoramos-nossos-endpoints","title":"3. Aplicando o modelo: Melhoramos nossos endpoints","text":"<p>Agora, vamos usar nosso novo modelo para tornar a API \"mais inteligente\".</p> <p>A. Modelo como resposta (Response Model) Podemos informar ao FastAPI que nosso endpoint deve retornar dados que correspondam ao modelo <code>Spaceship</code>. Isso garante que a resposta sempre ter\u00e1 a estrutura correta.</p> <p>Modifique o endpoint <code>/spaceships/{ship_id}</code> da seguinte forma: <pre><code># main.py\n\n# ... c\u00f3digo com db_spaceships e o modelo Spaceship ...\n\n# Usamos `response_model` para especificar a \"planta\" da resposta\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    Retorna os dados da nave, correspondentes ao modelo Spaceship.\n    \"\"\"\n    ship = db_spaceships.get(ship_id)\n    return ship\n</code></pre> - <code>response_model=Spaceship</code>: Dizemos ao FastAPI: \"A resposta desta fun\u00e7\u00e3o deve corresponder \u00e0 estrutura <code>Spaceship</code>. Filtre todos os campos extras e certifique-se de que os tipos est\u00e3o corretos\".</p> <p>O que isso oferece?</p> <ul> <li>Filtragem de dados: Se <code>db_spaceships</code> tivesse campos extras (por exemplo, <code>\"secret_code\"</code>), eles n\u00e3o seriam inclu\u00eddos no JSON final.</li> <li>Garantia de estrutura: O cliente da API pode ter certeza de que sempre receber\u00e1 uma resposta no formato esperado.</li> <li>Documenta\u00e7\u00e3o: Em <code>/docs</code> agora ser\u00e1 exibido um exemplo exato da resposta (Example Value).</li> </ul> <p>B. Modelos para cole\u00e7\u00f5es E quanto ao endpoint <code>/spaceships</code>, que retorna uma lista de naves? Para isso, precisamos usar <code>list</code> do m\u00f3dulo <code>typing</code>.</p> <p>Modifique as importa\u00e7\u00f5es e o endpoint <code>/spaceships</code>: <pre><code># main.py no topo\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom typing import List  # &lt;-- Importamos List\n\n# ... c\u00f3digo ...\n\n# Indicamos que a resposta \u00e9 uma lista (List) de objetos do tipo Spaceship\n@app.get(\"/spaceships\", response_model=List[Spaceship])\ndef get_spaceships():\n    \"\"\"\n    Retorna uma lista de naves. Cada item da lista\n    \u00e9 verificado de acordo com o modelo Spaceship.\n    \"\"\"\n    # Pydantic n\u00e3o pode trabalhar com um dicion\u00e1rio cujas chaves s\u00e3o IDs.\n    # Convertemos nosso dicion\u00e1rio em uma lista simples.\n    return list(db_spaceships.values())\n</code></pre></p> <ul> <li><code>response_model=List[Spaceship]</code>: Indicamos que a resposta ser\u00e1 uma lista, onde cada elemento \u00e9 um objeto que corresponde ao modelo <code>Spaceship</code>.</li> <li><code>return list(db_spaceships.values())</code>: Uma mudan\u00e7a importante! Pydantic espera um objeto iter\u00e1vel (uma lista), e n\u00e3o um dicion\u00e1rio onde as chaves s\u00e3o IDs. Convertemos os valores do nosso \"simulador de BD\" em uma lista.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/3/#4-verificando-a-api-aprimorada","title":"4. Verificando a API aprimorada","text":"<p>Certifique-se de que o servidor <code>uvicorn</code> esteja em execu\u00e7\u00e3o com <code>--reload</code>.</p> <ol> <li>Verifique <code>http://127.0.0.1:8000/spaceships</code>: Agora a resposta \u00e9 um array JSON, e n\u00e3o um objeto. Esta \u00e9 uma estrutura mais correta e padr\u00e3o para cole\u00e7\u00f5es.     <pre><code>[\n  { \"name\": \"Voyager-1\", \"type\": \"Sonda\", ... },\n  { \"name\": \"Hubble Space Telescope\", ... }\n]\n</code></pre></li> <li>Verifique <code>http://127.0.0.1:8000/spaceships/1</code>: A resposta n\u00e3o mudou, mas agora est\u00e1 garantida para corresponder ao modelo.</li> <li>D\u00ea uma olhada em <code>/docs</code>: Na se\u00e7\u00e3o \"Schemas\" na parte inferior da p\u00e1gina, seu modelo <code>Spaceship</code> apareceu. E nos exemplos de resposta para os endpoints, agora \u00e9 exibido um esquema de dados bonito e estruturado.</li> </ol>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/3/#5-validacao-avancada-o-computador-de-bordo-em-acao","title":"5. Valida\u00e7\u00e3o avan\u00e7ada: O \"computador de bordo\" em a\u00e7\u00e3o","text":"<p>Pydantic pode fazer muito mais do que apenas verificar tipos.</p> <p>Vamos adicionar valida\u00e7\u00e3o ao nosso modelo <code>Spaceship</code>: <pre><code>from pydantic import BaseModel, Field\n\nclass Spaceship(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50, description=\"Nome da nave\")\n    type: str\n    launch_year: int = Field(..., gt=1950, description=\"O ano de lan\u00e7amento deve ser depois de 1950\")\n    status: str\n</code></pre></p> <ul> <li><code>Field(...)</code>: Usado para adicionar regras de valida\u00e7\u00e3o adicionais.</li> <li><code>...</code> (Ellipsis): Significa que o campo \u00e9 obrigat\u00f3rio.</li> <li><code>min_length</code>, <code>max_length</code>: Restri\u00e7\u00f5es para strings.</li> <li><code>gt</code>: \"Greater Than\" (maior que).</li> </ul> <p>Embora ainda n\u00e3o estejamos criando novas naves (isso ser\u00e1 na pr\u00f3xima se\u00e7\u00e3o), essas regras j\u00e1 ser\u00e3o refletidas na documenta\u00e7\u00e3o e entrar\u00e3o em vigor quando implementarmos as solicita\u00e7\u00f5es <code>POST</code>.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/3/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. Pydantic no FastAPI \u00e9 usado para...</p>  a) Enviar mensagens de e-mail  b) Declara\u00e7\u00e3o, valida\u00e7\u00e3o e documenta\u00e7\u00e3o de modelos de dados  c) Conex\u00e3o direta com bancos de dados <p>2. Para criar um modelo de dados, voc\u00ea precisa herdar a classe de...</p>  a) `FastAPI`  b) `pydantic.Field`  c) `pydantic.BaseModel` <p>3. O par\u00e2metro `response_model` no decorador `@app.get` \u00e9 necess\u00e1rio para...</p>  a) Definir o modelo para a requisi\u00e7\u00e3o de entrada  b) Indicar a qual estrutura a resposta da API deve corresponder  c) Acelerar a resposta do servidor <p>4. Como indicar que um endpoint retorna uma *lista* de objetos do tipo `Item`?</p>  a) `response_model=Item[]`  b) `response_model=List[Item]` (importando `List` de `typing`)  c) `response_model=(Item)` <p>5. `Field(..., gt=0)` em um modelo Pydantic significa que o campo...</p>  a) \u00c9 opcional e deve ser igual a 0  b) \u00c9 obrigat\u00f3rio e deve ser maior que 0  c) \u00c9 opcional e tem o tipo `float` Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea projetou os \"projetos digitais\" para os dados da sua API. Agora ela n\u00e3o apenas funciona, mas funciona de forma previs\u00edvel e confi\u00e1vel.</p> <ul> <li>\ud83d\udcdd Modelo <code>Spaceship</code> criado usando Pydantic.</li> <li>\ud83d\udee1\ufe0f A API agora valida e filtra os dados de sa\u00edda usando <code>response_model</code>.</li> <li>\ud83d\udcca A documenta\u00e7\u00e3o tornou-se muito mais informativa, mostrando esquemas de dados precisos.</li> </ul> <p>Os projetos est\u00e3o prontos e aprovados! No pr\u00f3ximo cap\u00edtulo, passaremos da leitura de dados para a cria\u00e7\u00e3o \u2014 implementaremos opera\u00e7\u00f5es CRUD completas para a nossa frota.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>Certifique-se de que o esquema do modelo <code>Spaceship</code> apareceu em <code>/docs</code>.</li> <li>Verifique se o endpoint <code>/spaceships</code> agora retorna um array JSON (<code>[...]</code>), e n\u00e3o um objeto (<code>{...}</code>).</li> <li>Certifique-se de que n\u00e3o h\u00e1 erros de sintaxe no c\u00f3digo ap\u00f3s adicionar os modelos.</li> </ul> <p>\u26a0\ufe0f Se houver erros:</p> <ul> <li><code>NameError: name 'BaseModel' is not defined</code>: Verifique se voc\u00ea importou <code>BaseModel</code> de <code>pydantic</code>.</li> <li><code>NameError: name 'List' is not defined</code>: Verifique se voc\u00ea importou <code>List</code> de <code>typing</code>.</li> <li>A resposta para <code>/spaceships</code> est\u00e1 vazia (<code>[]</code>): Certifique-se de que voc\u00ea alterou <code>return db_spaceships</code> para <code>return list(db_spaceships.values())</code>.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/4/","title":"Cap\u00edtulo 3.4: Opera\u00e7\u00f5es CRUD para Naves Espaciais","text":"<p>Tempo de estudo: 1 hora</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/4/#1-crud-ciclo-completo-de-gerenciamento-de-missoes-espaciais","title":"1. CRUD: Ciclo Completo de Gerenciamento de Miss\u00f5es Espaciais","text":"<p>At\u00e9 agora, apenas lemos dados (<code>Read</code>). Mas um verdadeiro Centro de Controle de Miss\u00f5es deve ser capaz de tudo:</p> <ul> <li>Create (Criar): Lan\u00e7ar um novo sat\u00e9lite em \u00f3rbita.</li> <li>Read (Ler): Solicitar o status de uma nave existente.</li> <li>Update (Atualizar): Corrigir uma \u00f3rbita ou atualizar software.</li> <li>Delete (Excluir): Remover um sat\u00e9lite antigo da \u00f3rbita.</li> </ul> <p>Essas quatro opera\u00e7\u00f5es \u2014 CRUD \u2014 formam a base da maioria das APIs. Neste cap\u00edtulo, implementaremos o ciclo completo para gerenciar nossa frota.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/4/#2-create-lancando-uma-nova-nave-post","title":"2. Create: Lan\u00e7ando uma Nova Nave (POST)","text":"<p>Para criar uma nova nave espacial, usaremos o m\u00e9todo <code>POST</code>. Os dados para a nova nave ser\u00e3o transmitidos no corpo da requisi\u00e7\u00e3o em formato JSON.</p> <p>Passo 1: Criando um novo modelo Pydantic para dados de entrada Por que \u00e9 necess\u00e1rio um novo modelo? Porque ao criar uma nave, n\u00e3o sabemos seu <code>id</code> \u2014 ele deve ser atribu\u00eddo pelo servidor.</p> <p>Adicione este modelo ao <code>main.py</code>: <pre><code># main.py\nfrom pydantic import BaseModel, Field\n\nclass SpaceshipCreate(BaseModel):\n    \"\"\"Modelo para criar uma nova nave (sem ID).\"\"\"\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n</code></pre> Este modelo \u00e9 quase id\u00eantico a <code>Spaceship</code>, mas ser\u00e1 usado para valida\u00e7\u00e3o de dados de entrada.</p> <p>Passo 2: Implementando o endpoint <code>POST /spaceships</code> <pre><code># main.py\nimport random # Adicione esta importa\u00e7\u00e3o no in\u00edcio do arquivo\n\n# ... restante do c\u00f3digo ...\n\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201)\ndef create_spaceship(ship: SpaceshipCreate):\n    \"\"\"\n    Adiciona uma nova nave espacial ao registro.\n    \"\"\"\n    # Geramos um novo ID exclusivo para a nave\n    new_id = max(db_spaceships.keys() or [0]) + 1\n\n    # Criamos um objeto de nave, correspondente ao modelo completo Spaceship\n    new_ship = Spaceship(id=new_id, **ship.dict())\n\n    # Salvamos em nossa \"base de dados\"\n    db_spaceships[new_id] = new_ship.dict()\n\n    return new_ship\n</code></pre> Decifrando:</p> <ul> <li><code>@app.post(...)</code>: Usamos o decorador para requisi\u00e7\u00f5es <code>POST</code>.</li> <li><code>status_code=201</code>: Indicamos que, em caso de cria\u00e7\u00e3o bem-sucedida, deve-se retornar o status <code>201 Created</code>.</li> <li><code>ship: SpaceshipCreate</code>: A\u00ed est\u00e1 a m\u00e1gica! O FastAPI pegar\u00e1 automaticamente o corpo da requisi\u00e7\u00e3o (JSON), o validar\u00e1 de acordo com o modelo <code>SpaceshipCreate</code> e o passar\u00e1 para a fun\u00e7\u00e3o como um objeto <code>ship</code>.</li> <li><code>new_id = ...</code>: L\u00f3gica simples para gerar um novo ID.</li> <li><code>**ship.dict()</code>: \"Desempacotamos\" os dados do modelo <code>ship</code> recebido para o nosso modelo completo.</li> <li><code>response_model=Spaceship</code>: A resposta corresponder\u00e1 ao modelo completo, incluindo o <code>id</code>.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/4/#3-update-correcao-de-rota-put","title":"3. Update: Corre\u00e7\u00e3o de Rota (PUT)","text":"<p>Para uma atualiza\u00e7\u00e3o completa de um recurso existente, o m\u00e9todo <code>PUT</code> \u00e9 usado.</p> <p>Implementando o endpoint <code>PUT /spaceships/{ship_id}</code>: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # Atualize a importa\u00e7\u00e3o\n\n# ... restante do c\u00f3digo ...\n\n@app.put(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef update_spaceship(ship_id: int, ship_update: SpaceshipCreate):\n    \"\"\"\n    Atualiza completamente os dados de uma nave espacial.\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"Nave espacial n\u00e3o encontrada\")\n\n    updated_ship = Spaceship(id=ship_id, **ship_update.dict())\n    db_spaceships[ship_id] = updated_ship.dict()\n\n    return updated_ship\n</code></pre></p> <ul> <li><code>ship_update: SpaceshipCreate</code>: Usamos novamente nosso modelo para valida\u00e7\u00e3o dos dados de entrada.</li> <li><code>HTTPException</code>: Se uma nave com tal <code>id</code> n\u00e3o for encontrada, \"lan\u00e7amos\" uma exce\u00e7\u00e3o padr\u00e3o do FastAPI, que se transformar\u00e1 em uma bela resposta JSON com o c\u00f3digo <code>404</code>.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/4/#4-delete-desorbitando-delete","title":"4. Delete: Desorbitando (DELETE)","text":"<p>Para excluir um recurso, o m\u00e9todo <code>DELETE</code> \u00e9 usado. Geralmente, tal endpoint n\u00e3o retorna um corpo de resposta.</p> <p>Implementando o endpoint <code>DELETE /spaceships/{ship_id}</code>: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException, Response, status # Atualize a importa\u00e7\u00e3o\n\n# ... restante do c\u00f3digo ...\n\n@app.delete(\"/spaceships/{ship_id}\", status_code=status.HTTP_204_NO_CONTENT)\ndef delete_spaceship(ship_id: int):\n    \"\"\"\n    Exclui uma nave espacial do registro.\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"Nave espacial n\u00e3o encontrada\")\n\n    del db_spaceships[ship_id]\n\n    # Retorna uma resposta vazia com status 204\n    return Response(status_code=status.HTTP_204_NO_CONTENT)\n</code></pre></p> <ul> <li><code>status_code=status.HTTP_204_NO_CONTENT</code>: N\u00f3s explicitamente indicamos o status <code>204 No Content</code>.</li> <li><code>del db_spaceships[ship_id]</code>: Exclu\u00edmos o registro do nosso dicion\u00e1rio.</li> <li><code>return Response(...)</code>: Retornamos uma resposta vazia, pois o cliente n\u00e3o precisa de dados sobre o objeto exclu\u00eddo.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/4/#5-testando-o-ciclo-completo-em-docs","title":"5. Testando o Ciclo Completo em <code>/docs</code>","text":"<p>Seu <code>uvicorn</code> deve ter sido reiniciado.</p> <ol> <li>Abra <code>http://127.0.0.1:8000/docs</code>. Agora voc\u00ea tem o conjunto completo de opera\u00e7\u00f5es CRUD!</li> <li>POST: Expanda o endpoint <code>POST /spaceships</code>, clique em \"Try it out\", preencha o corpo JSON (por exemplo, crie o \"Telesc\u00f3pio Espacial James Webb\") e clique em \"Execute\". Voc\u00ea deve receber uma resposta <code>201</code> com os dados do novo telesc\u00f3pio.</li> <li>GET: Agora execute <code>GET /spaceships</code>. Seu novo telesc\u00f3pio deve aparecer na lista.</li> <li>PUT: Use o ID do novo telesc\u00f3pio para atualizar seus dados via <code>PUT /spaceships/{ship_id}</code>. Por exemplo, altere seu status.</li> <li>DELETE: Use o mesmo ID para excluir o telesc\u00f3pio via <code>DELETE /spaceships/{ship_id}</code>. Voc\u00ea deve receber uma resposta vazia com status <code>204</code>.</li> <li>Verifica\u00e7\u00e3o: Execute <code>GET /spaceships</code> novamente para confirmar que o telesc\u00f3pio foi exclu\u00eddo da lista.</li> </ol>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/4/#questionario-para-consolidacao","title":"Question\u00e1rio para Consolida\u00e7\u00e3o","text":"<p>1. Qual m\u00e9todo HTTP \u00e9 usado para criar um novo recurso?</p>  a) GET  b) PUT  c) POST <p>2. O c\u00f3digo de status de sucesso padr\u00e3o para a opera\u00e7\u00e3o `DELETE` \u00e9:</p>  a) 200 OK  b) 204 No Content  c) 404 Not Found <p>3. Como o FastAPI obt\u00e9m dados do corpo de uma requisi\u00e7\u00e3o POST?</p>  a) Atrav\u00e9s da vari\u00e1vel global `$_POST`  b) Automaticamente, se um modelo Pydantic for especificado no argumento da fun\u00e7\u00e3o  c) \u00c9 necess\u00e1rio ler manualmente o fluxo `request.body` <p>4. `raise HTTPException(status_code=404)` \u00e9 usado para:</p>  a) Gerar um erro fatal do servidor (500)  b) Retornar uma resposta HTTP de erro correta ao cliente  c) Registrar o erro em um arquivo <p>5. Por que criamos um modelo `SpaceshipCreate` separado para a cria\u00e7\u00e3o de um recurso (`POST`)?</p>  a) Porque o objeto a ser criado ainda n\u00e3o possui um `id`  b) Porque o FastAPI exige nomes de modelos diferentes para cada endpoint  c) Para acelerar a valida\u00e7\u00e3o Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea implementou o ciclo completo de CRUD e transformou sua API de um simples \"painel de informa\u00e7\u00f5es\" em um completo Centro de Controle de Frota!</p> <ul> <li>\u2705 Create: <code>POST /spaceships</code> para lan\u00e7ar novas naves.</li> <li>\u2705 Read: <code>GET /spaceships</code> e <code>GET /spaceships/{id}</code> para obter dados.</li> <li>\u2705 Update: <code>PUT /spaceships/{id}</code> para atualizar miss\u00f5es.</li> <li>\u2705 Delete: <code>DELETE /spaceships/{id}</code> para desativar naves.</li> </ul> <p>Sua frota est\u00e1 sob controle total! No pr\u00f3ximo cap\u00edtulo, veremos como o FastAPI gerou automaticamente para n\u00f3s um \"manual de opera\u00e7\u00f5es\" detalhado \u2013 a documenta\u00e7\u00e3o interativa do Swagger.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>Todos os 5 endpoints (<code>GET</code> (2), <code>POST</code>, <code>PUT</code>, <code>DELETE</code>) est\u00e3o vis\u00edveis e funcionando em <code>/docs</code>.</li> <li>Voc\u00ea pode criar, ler, atualizar e excluir um recurso com sucesso.</li> <li>Ao solicitar um ID inexistente, um erro <code>404</code> \u00e9 retornado.</li> </ul> <p>\u26a0\ufe0f Se houver erros:</p> <ul> <li><code>NameError</code>: Verifique se voc\u00ea importou <code>HTTPException</code>, <code>Response</code>, <code>status</code>.</li> <li><code>KeyError</code>: Provavelmente, voc\u00ea est\u00e1 tentando acessar um ID que j\u00e1 foi exclu\u00eddo.</li> <li>Funcionamento incorreto de <code>PUT</code> ou <code>POST</code>: Certifique-se de estar usando o modelo Pydantic correto no argumento da fun\u00e7\u00e3o (<code>SpaceshipCreate</code>).</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/5/","title":"Cap\u00edtulo 3.5: Documenta\u00e7\u00e3o Autom\u00e1tica Swagger","text":"<p>Tempo de Estudo: 30 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/5/#1-documentacao-da-api-manual-de-operacoes-de-uma-estacao-espacial","title":"1. Documenta\u00e7\u00e3o da API: Manual de Opera\u00e7\u00f5es de uma Esta\u00e7\u00e3o Espacial","text":"<p>Imagine que voc\u00ea \u00e9 um novo astronauta chegando \u00e0 ISS. Como voc\u00ea saberia qual bot\u00e3o faz o qu\u00ea e como operar o bra\u00e7o rob\u00f3tico? Voc\u00ea precisaria de um manual detalhado e atualizado.</p> <p>A documenta\u00e7\u00e3o da API \u00e9 o mesmo tipo de manual para desenvolvedores. Ela explica:</p> <ul> <li>Quais \"portas de acoplamento\" (endpoints) est\u00e3o dispon\u00edveis.</li> <li>Quais \"comandos\" (m\u00e9todos HTTP) podem ser enviados.</li> <li>Qual \"carga\" (dados) precisa ser transmitida.</li> <li>Qual \"telemetria\" (respostas) esperar.</li> </ul> <p>O problema \u00e9 que escrever a documenta\u00e7\u00e3o manualmente \u00e9 demorado, tedioso e quase sempre se torna desatualizado.</p> <p>\ud83d\udca1 Analogia espacial:</p> <p>A documenta\u00e7\u00e3o manual s\u00e3o projetos em papel que ficam no arquivo e n\u00e3o s\u00e3o atualizados ap\u00f3s a moderniza\u00e7\u00e3o da esta\u00e7\u00e3o. A documenta\u00e7\u00e3o autom\u00e1tica do FastAPI \u00e9 um monitor interativo no Centro de Controle de Miss\u00f5es, que \u00e9 atualizado em tempo real ap\u00f3s cada mudan\u00e7a na esta\u00e7\u00e3o.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/5/#2-a-magia-do-fastapi-como-funciona","title":"2. A Magia do FastAPI: Como Funciona?","text":"<p>O FastAPI faz todo o \"trabalho sujo\" para voc\u00ea, com base no seu pr\u00f3prio c\u00f3digo. Ele escaneia:</p> <ol> <li>Rotas: Todos os decoradores <code>@app.get</code>, <code>@app.post</code>, etc.</li> <li>Par\u00e2metros: Par\u00e2metros de caminho (<code>ship_id: int</code>) e de consulta.</li> <li>Modelos Pydantic: Seus \"projetos\" (<code>Spaceship</code>, <code>SpaceshipCreate</code>).</li> <li>Docstrings: Descri\u00e7\u00f5es que voc\u00ea escreve entre aspas triplas.</li> </ol> <p>Com base nesses dados, o FastAPI gera um esquema de acordo com o padr\u00e3o OpenAPI (anteriormente conhecido como Swagger) e depois o exibe atrav\u00e9s de duas interfaces bonitas.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/5/#3-explorando-o-monitor-do-ccm-swagger-ui","title":"3. Explorando o \"Monitor do CCM\": Swagger UI","text":"<p>Swagger UI \u00e9 uma interface interativa que permite n\u00e3o apenas ler a documenta\u00e7\u00e3o, mas tamb\u00e9m testar a API diretamente do navegador.</p> <p>Abra <code>http://127.0.0.1:8000/docs</code></p> <p>Voc\u00ea ver\u00e1:</p> <ul> <li>Lista de endpoints: Agrupados por tags (por padr\u00e3o, pelo nome do recurso) e coloridos com as cores dos m\u00e9todos HTTP.</li> <li>Descri\u00e7\u00f5es: Textos das suas docstrings (<code>\"\"\"...\"\"\"</code>) s\u00e3o exibidos como descri\u00e7\u00f5es dos endpoints.</li> <li>Par\u00e2metros: Mostra quais par\u00e2metros (como <code>ship_id</code>) o endpoint espera, seu tipo e obrigatoriedade.</li> <li>Corpo da Requisi\u00e7\u00e3o (Request Body): Para <code>POST</code> e <code>PUT</code>, mostra o esquema JSON gerado a partir do seu modelo Pydantic (<code>SpaceshipCreate</code>).</li> <li>Respostas (Responses): Mostra os poss\u00edveis c\u00f3digos de status e esquemas de resposta, baseados em <code>response_model</code>.</li> <li>Bot\u00e3o \"Try it out\": Permite preencher os par\u00e2metros e enviar uma requisi\u00e7\u00e3o real para o seu servidor.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/5/#4-melhorando-a-documentacao-tags-e-descricoes","title":"4. Melhorando a Documenta\u00e7\u00e3o: Tags e Descri\u00e7\u00f5es","text":"<p>Vamos tornar nossa documenta\u00e7\u00e3o ainda mais profissional.</p> <p>Passo 1: Adicionar metadados ao <code>FastAPI</code> Ao criar <code>app</code>, voc\u00ea pode passar informa\u00e7\u00f5es gerais sobre sua API.</p> <p>Altere a linha <code>app = FastAPI()</code> em <code>main.py</code>: <pre><code># main.py\n\napp = FastAPI(\n    title=\"Fleet Management API\",\n    description=\"API para gerenciamento de frota de naves espaciais.\",\n    version=\"1.0.0\",\n)\n</code></pre> Agora, o t\u00edtulo e a descri\u00e7\u00e3o aparecer\u00e3o no topo da sua documenta\u00e7\u00e3o.</p> <p>Passo 2: Agrupar endpoints usando tags Voc\u00ea pode adicionar tags a cada endpoint para agrup\u00e1-los por significado.</p> <p>Adicione o par\u00e2metro <code>tags</code> aos decoradores: <pre><code># GET /spaceships\n@app.get(\"/spaceships\", response_model=List[Spaceship], tags=[\"Naves Espaciais\"])\n# ...\n\n# GET /spaceships/{ship_id}\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"Naves Espaciais\"])\n# ...\n\n# POST /spaceships\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201, tags=[\"Naves Espaciais\"])\n# ...\n\n# e assim por diante para PUT e DELETE\n</code></pre> Agora, todas as suas opera\u00e7\u00f5es CRUD ser\u00e3o agrupadas ordenadamente sob o t\u00edtulo \"Naves Espaciais\".</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/5/#5-visao-alternativa-redoc","title":"5. Vis\u00e3o Alternativa: ReDoc","text":"<p>O FastAPI fornece outra interface para documenta\u00e7\u00e3o \"pronta para uso\" \u2014 ReDoc. Ela \u00e9 menos interativa, mas \u00e9 frequentemente considerada mais leg\u00edvel e excelente para documenta\u00e7\u00e3o est\u00e1tica.</p> <p>Abra <code>http://127.0.0.1:8000/redoc</code></p> <p>Voc\u00ea ver\u00e1 um layout de tr\u00eas colunas com navega\u00e7\u00e3o, descri\u00e7\u00f5es de endpoints e esquemas de dados. Esta \u00e9 uma \u00f3tima maneira de fornecer documenta\u00e7\u00e3o aos seus \"clientes\" (por exemplo, a equipe de frontend).</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/5/#quiz-para-fixacao","title":"Quiz para Fixa\u00e7\u00e3o","text":"<p>1. O FastAPI gera documenta\u00e7\u00e3o com base em...</p>  a) Arquivos `.html` separados que precisam ser criados manualmente  b) Seu c\u00f3digo Python: rotas, modelos Pydantic e docstrings  c) Coment\u00e1rios que come\u00e7am com `#` <p>2. Qual padr\u00e3o est\u00e1 na base da autodocumenta\u00e7\u00e3o do FastAPI?</p>  a) GraphQL  b) XML-RPC  c) OpenAPI (Swagger) <p>3. Qual \u00e9 o URL padr\u00e3o para acessar a documenta\u00e7\u00e3o interativa Swagger UI?</p>  a) `/admin`  b) `/docs`  c) `/api/help` <p>4. O par\u00e2metro `tags` no decorador `@app.get` \u00e9 usado para:</p>  a) Adicionar meta-tags ao HTML  b) Agrupar endpoints na documenta\u00e7\u00e3o  c) Marcar um endpoint como obsoleto <p>5. ReDoc \u00e9...</p>  a) Uma ferramenta para editar c\u00f3digo no navegador  b) Uma interface alternativa, mais est\u00e1tica, para a documenta\u00e7\u00e3o da API  c) Um sistema para detec\u00e7\u00e3o de c\u00f3digo \"vermelho\" (n\u00e3o funcional) Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea viu uma das \"superpot\u00eancias\" mais poderosas do FastAPI \u2014 a cria\u00e7\u00e3o de documenta\u00e7\u00e3o sem nenhum esfor\u00e7o.</p> <ul> <li>\ud83d\udcd6 Sua API agora tem dois tipos de documenta\u00e7\u00e3o atualizada: Swagger UI e ReDoc.</li> <li>\ud83d\udd2c A documenta\u00e7\u00e3o \u00e9 interativa e permite testar a API em tempo real.</li> <li>\ud83c\udff7\ufe0f Voc\u00ea aprendeu a aprimor\u00e1-la com metadados e tags.</li> </ul> <p>O manual de opera\u00e7\u00f5es est\u00e1 pronto e sempre atualizado! No cap\u00edtulo final desta se\u00e7\u00e3o, aprenderemos a lidar com \"anomalias espaciais\" \u2014 erros e dados incorretos.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>Certifique-se de que o t\u00edtulo, a descri\u00e7\u00e3o e os endpoints agrupados por tags s\u00e3o exibidos em <code>http://127.0.0.1:8000/docs</code>.</li> <li>Verifique se seu modelo <code>Spaceship</code> est\u00e1 vis\u00edvel na se\u00e7\u00e3o \"Schemas\".</li> <li>Abra <code>http://127.0.0.1:8000/redoc</code> e avalie a vis\u00e3o alternativa.</li> </ul> <p>\u26a0\ufe0f Se as altera\u00e7\u00f5es n\u00e3o aparecerem:</p> <ul> <li>Certifique-se de que salvou o arquivo <code>main.py</code>.</li> <li>Verifique que o servidor <code>uvicorn</code> est\u00e1 executando com a flag <code>--reload</code> e recarregou com sucesso.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/6/","title":"Cap\u00edtulo 3.6: Tratamento de Erros e Valida\u00e7\u00e3o","text":"<p>Tempo de estudo: 50 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/6/#1-tratamento-de-erros-escudos-de-emergencia-da-nave-espacial","title":"1. Tratamento de Erros: \"Escudos de Emerg\u00eancia\" da Nave Espacial","text":"<p>Mesmo na nave mais perfeita, situa\u00e7\u00f5es imprevistas podem ocorrer:</p> <ul> <li>Comando incorreto do Centro de Controle da Miss\u00e3o (CCM): O cliente enviou dados incorretos.</li> <li>Perda de comunica\u00e7\u00e3o com o m\u00f3dulo: Recurso n\u00e3o encontrado no banco de dados.</li> <li>Falha no reator: Erro interno do servidor.</li> </ul> <p>O tratamento adequado de erros \u00e9 um sistema de \"escudos de emerg\u00eancia\". Ele impede que a nave se desintegre e, em vez disso, envia um sinal claro ao CCM sobre o que deu errado.</p> <p>\ud83d\udca1 Analogia espacial:</p> <p>Em vez de simplesmente transmitir um sinal de \"AVARIA!\" ao CCM, um bom computador de bordo enviar\u00e1 um relat\u00f3rio estruturado: <pre><code>{\n  \"error_code\": \"ENGINE_OVERHEAT\",\n  \"message\": \"A temperatura do motor N\u00ba2 excedeu o normal\",\n  \"suggested_action\": \"Ligar o sistema de refrigera\u00e7\u00e3o\"\n}\n</code></pre> Isso permite que os engenheiros na Terra entendam rapidamente o problema e tomem medidas.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/6/#2-validacao-pydantic-o-computador-de-bordo-integrado","title":"2. Valida\u00e7\u00e3o Pydantic: O \"Computador de Bordo\" Integrado","text":"<p>J\u00e1 encontramos a magia do Pydantic. Se voc\u00ea tentar criar uma nave com um tipo de dado inv\u00e1lido (por exemplo, <code>launch_year</code> como uma string), o FastAPI retornar\u00e1 automaticamente um erro <code>422 Unprocessable Entity</code> com uma descri\u00e7\u00e3o detalhada de qual campo e por que a valida\u00e7\u00e3o falhou.</p> <p>Exemplo de requisi\u00e7\u00e3o para <code>POST /spaceships</code>: <pre><code>{\n  \"name\": \"X-Wing\",\n  \"type\": \"Ca\u00e7a\",\n  \"launch_year\": \"h\u00e1 muito tempo\",  // &lt;-- Tipo inv\u00e1lido!\n  \"status\": \"Em opera\u00e7\u00e3o\"\n}\n</code></pre></p> <p>Resposta autom\u00e1tica do FastAPI: <pre><code>{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"body\",\n        \"launch_year\"\n      ],\n      \"msg\": \"value is not a valid integer\",\n      \"type\": \"type_error.integer\"\n    }\n  ]\n}\n</code></pre> Isso \u00e9 incrivelmente poderoso! Voc\u00ea n\u00e3o precisa escrever c\u00f3digo para verificar tipos \u2014 FastAPI e Pydantic fazem isso por voc\u00ea.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/6/#3-tratamento-de-recurso-nao-encontrado-excecao-httpexception","title":"3. Tratamento de \"Recurso n\u00e3o Encontrado\": Exce\u00e7\u00e3o <code>HTTPException</code>","text":"<p>J\u00e1 usamos isso em opera\u00e7\u00f5es CRUD. <code>HTTPException</code> \u00e9 a maneira padr\u00e3o do FastAPI de interromper a execu\u00e7\u00e3o de uma requisi\u00e7\u00e3o e retornar imediatamente uma resposta de erro ao cliente.</p> <p>Vamos relembrar o c\u00f3digo de <code>GET /spaceships/{ship_id}</code>: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # Certifique-se de que HTTPException esteja importado\n\n# ...\n\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"Naves Espaciais\"])\ndef get_spaceship(ship_id: int):\n    ship = db_spaceships.get(ship_id)\n    if not ship:\n        # Se a nave n\u00e3o for encontrada, \"lan\u00e7amos\" a exce\u00e7\u00e3o 404\n        raise HTTPException(status_code=404, detail=f\"Nave espacial com ID {ship_id} n\u00e3o encontrada\")\n    return ship\n</code></pre></p> <ul> <li><code>raise HTTPException(...)</code>: Esta chamada interrompe a execu\u00e7\u00e3o da fun\u00e7\u00e3o.</li> <li><code>status_code=404</code>: Define o status HTTP da resposta.</li> <li><code>detail</code>: Mensagem que ser\u00e1 enviada ao cliente no corpo da resposta JSON.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/6/#4-validadores-personalizados-verificacoes-especiais-antes-do-lancamento","title":"4. Validadores Personalizados: \"Verifica\u00e7\u00f5es Especiais\" antes do Lan\u00e7amento","text":"<p>E se quisermos adicionar nossa pr\u00f3pria l\u00f3gica de neg\u00f3cio, mais complexa? Por exemplo, proibir o lan\u00e7amento de naves com o nome \"Estrela da Morte\".</p> <p>Para isso, o Pydantic oferece uma ferramenta poderosa \u2014 validadores.</p> <p>Passo 1: Adicionar o validador ao modelo <code>SpaceshipCreate</code> <pre><code># main.py\nfrom pydantic import BaseModel, Field, validator\n\nclass SpaceshipCreate(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n\n    @validator('name')\n    def name_must_not_be_forbidden(cls, v):\n        \"\"\"Verifica se o nome da nave n\u00e3o est\u00e1 na lista de proibidos.\"\"\"\n        if 'Death Star' in v:\n            raise ValueError('Nomes como \"Estrela da Morte\" s\u00e3o proibidos por decreto Imperial!')\n        return v.title() # De quebra, convertemos o nome para mai\u00fasculas\n</code></pre></p> <ul> <li><code>@validator('name')</code>: Decorador que \"vincula\" esta fun\u00e7\u00e3o ao campo <code>name</code>.</li> <li><code>cls, v</code>: O m\u00e9todo recebe a pr\u00f3pria classe (<code>cls</code>) e o valor do campo (<code>v</code>).</li> <li><code>raise ValueError(...)</code>: Se a verifica\u00e7\u00e3o falhar, levantamos uma exce\u00e7\u00e3o Python padr\u00e3o. O FastAPI a interceptar\u00e1 e a transformar\u00e1 em um belo erro <code>422</code>.</li> <li><code>return v.title()</code>: Se tudo estiver bem, devemos obrigatoriamente retornar o valor. Podemos at\u00e9 modific\u00e1-lo em tempo real (por exemplo, padroniz\u00e1-lo).</li> </ul> <p>Passo 2: Testar Reinicie o <code>uvicorn</code> e tente criar uma nave com um nome proibido via <code>/docs</code>. Voc\u00ea receber\u00e1 um erro <code>422</code> com sua mensagem personalizada!</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/6/#5-tratamento-global-de-erros-protocolo-de-emergencia-da-estacao","title":"5. Tratamento Global de Erros: \"Protocolo de Emerg\u00eancia\" da Esta\u00e7\u00e3o","text":"<p>\u00c0s vezes, \u00e9 necess\u00e1rio interceptar erros inesperados (por exemplo, falha na conex\u00e3o com um banco de dados real) e retornar um formato de resposta unificado e padronizado.</p> <p>Para isso, o decorador <code>@app.exception_handler</code> \u00e9 utilizado.</p> <p>Exemplo: Intercepta\u00e7\u00e3o de todos os erros <code>ValueError</code> <pre><code># main.py\nfrom fastapi import FastAPI, Request\nfrom fastapi.responses import JSONResponse\n\n# ...\n\n@app.exception_handler(ValueError)\nasync def value_error_exception_handler(request: Request, exc: ValueError):\n    \"\"\"\n    Manipulador global para todos os erros ValueError,\n    para retornar JSON padronizado.\n    \"\"\"\n    return JSONResponse(\n        status_code=400,\n        content={\"message\": f\"Erro nos dados: {str(exc)}\"},\n    )\n</code></pre></p> <ul> <li><code>@app.exception_handler(ValueError)</code>: Informa ao FastAPI que esta fun\u00e7\u00e3o deve lidar com todos os <code>ValueError</code> que n\u00e3o foram interceptados anteriormente.</li> <li><code>async def ...</code>: Manipuladores de exce\u00e7\u00e3o devem ser ass\u00edncronos (<code>async</code>).</li> <li><code>JSONResponse</code>: Permite controle total sobre o corpo e o status da resposta.</li> </ul> <p>Agora, quando nosso validador personalizado for acionado, a resposta ter\u00e1 um formato mais amig\u00e1vel que definimos.</p>"},{"location":"pt/Cap%C3%ADtulo%203%20-%20API%20em%20Python%20FastAPI/6/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. Se o cliente enviar dados de tipo incorreto (string em vez de n\u00famero), o FastAPI retornar\u00e1 automaticamente o status...</p>  a) 500 Internal Server Error  b) 404 Not Found  c) 422 Unprocessable Entity <p>2. `raise HTTPException(status_code=404)` \u00e9 usado para...</p>  a) Encerrar o servidor inteiro  b) Interromper a execu\u00e7\u00e3o da requisi\u00e7\u00e3o e retornar um erro 404 ao cliente  c) Registrar o erro, mas continuar a execu\u00e7\u00e3o <p>3. O decorador `@validator('field_name')` no Pydantic \u00e9 necess\u00e1rio para:</p>  a) Criar l\u00f3gica de valida\u00e7\u00e3o personalizada para um campo espec\u00edfico  b) Indicar que o campo \u00e9 obrigat\u00f3rio  c) Criptografar o valor do campo <p>4. O que a fun\u00e7\u00e3o validadora no Pydantic deve fazer se os dados estiverem corretos?</p>  a) N\u00e3o retornar nada (None)  b) Obrigatoriamente retornar o valor (possivelmente modificado)  c) Retornar `True` <p>5. `@app.exception_handler()` permite...</p>  a) Criar novos tipos de exce\u00e7\u00f5es  b) Interceptar exce\u00e7\u00f5es globalmente e definir uma resposta personalizada para elas  c) Ignorar todos os erros e sempre retornar o status 200 Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea instalou em sua nave API um poderoso sistema de prote\u00e7\u00e3o e protocolos de emerg\u00eancia. Agora ela \u00e9 capaz de:</p> <ul> <li>\ud83d\udee1\ufe0f Rejeitar automaticamente ataques de \"dados inv\u00e1lidos\" usando Pydantic.</li> <li>\ud83d\udea8 Notificar corretamente a aus\u00eancia de recursos (<code>404 Not Found</code>) atrav\u00e9s de <code>HTTPException</code>.</li> <li>\u2699\ufe0f Realizar \"verifica\u00e7\u00f5es especiais\" com validadores personalizados.</li> <li>\ud83e\uddef Interceptar globalmente falhas inesperadas e fornecer respostas padronizadas.</li> </ul> <p>Seu \"hipermotor\" n\u00e3o \u00e9 apenas r\u00e1pido, mas tamb\u00e9m incrivelmente confi\u00e1vel!</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>Tente criar uma nave com o nome \"Death Star\" e verifique se voc\u00ea recebe um erro <code>400</code> com sua mensagem personalizada.</li> <li>Tente solicitar <code>GET /spaceships/999</code> e verifique se voc\u00ea recebe um erro <code>404</code>.</li> <li>Tente enviar uma solicita\u00e7\u00e3o <code>POST</code> com <code>launch_year</code> como uma string e verifique se voc\u00ea recebe um erro <code>422</code>.</li> </ul> <p>\u26a0\ufe0f Se houver erros:</p> <ul> <li>Certifique-se de que todos os m\u00f3dulos necess\u00e1rios (<code>HTTPException</code>, <code>validator</code>, <code>Request</code>, <code>JSONResponse</code>) foram importados.</li> <li>Verifique se os decoradores <code>@validator</code> e <code>@app.exception_handler</code> foram escritos sem erros de digita\u00e7\u00e3o.</li> </ul> <p>Parab\u00e9ns por completar o Cap\u00edtulo 3! Voc\u00ea construiu e lan\u00e7ou do zero uma API poderosa, documentada e segura com FastAPI. Voc\u00ea est\u00e1 pronto para realizar miss\u00f5es espaciais reais</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/1/","title":"Cap\u00edtulo 4.1: Fundamentos da Fetch API","text":"<p>Tempo de estudo: 45 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/1/#1-fetch-api-a-antena-principal-do-cop","title":"1. Fetch API: A \"Antena Principal\" do C.O.P.","text":"<p>Imagine que em seu Centro de Opera\u00e7\u00f5es de Voo (C.O.P.) h\u00e1 uma enorme antena de r\u00e1dio para se comunicar com as espa\u00e7onaves. Voc\u00ea pode sintoniz\u00e1-la na frequ\u00eancia certa, enviar um comando e esperar uma resposta.</p> <p>A Fetch API \u00e9 uma \"antena embutida\" semelhante nos navegadores modernos. \u00c9 uma interface JavaScript padr\u00e3o para fazer requisi\u00e7\u00f5es HTTP a servidores. Ela permite:</p> <ul> <li>\ud83d\udce1 Enviar \"comandos\" (GET, POST, PUT, DELETE) para nossa API.</li> <li>\ud83d\udef0\ufe0f Receber \"telemetria\" (dados JSON) do servidor.</li> <li>\u2699\ufe0f Trabalhar assincronamente, sem \"congelar\" a interface do usu\u00e1rio enquanto aguarda uma resposta.</li> </ul> <p>\ud83d\udca1 Analogia espacial:</p> <p><code>fetch()</code> \u00e9 o comando \"Antena, estabelecer comunica\u00e7\u00e3o!\". Voc\u00ea a alimenta com:</p> <ul> <li>Coordenadas do alvo (URL da nossa API).</li> <li>Tipo de comando (m\u00e9todo: GET, POST).</li> <li>Conte\u00fado do comando (corpo da requisi\u00e7\u00e3o, cabe\u00e7alhos).</li> </ul> <p>Em resposta, voc\u00ea n\u00e3o recebe os dados em si, mas uma promessa (Promise) de que os dados chegar\u00e3o.</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/1/#2-assincronicidade-comunicacao-em-velocidades-de-luz","title":"2. Assincronicidade: Comunica\u00e7\u00e3o em velocidades de luz","text":"<p>A comunica\u00e7\u00e3o com uma nave espacial distante leva tempo. Voc\u00ea n\u00e3o pode simplesmente parar todo o trabalho do C.O.P. e esperar a resposta. Voc\u00ea envia um comando e continua trabalhando, e quando a resposta chega, o sistema o notifica.</p> <p>Isso \u00e9 a assincronicidade. O JavaScript n\u00e3o bloqueia a execu\u00e7\u00e3o do restante do c\u00f3digo enquanto espera uma resposta do servidor. Para gerenciar esse processo, a Fetch API usa Promises.</p> <p>Uma Promise \u00e9 um \"recibo\" de que voc\u00ea enviou uma requisi\u00e7\u00e3o. Ela tem tr\u00eas estados:</p> <ul> <li><code>pending</code> (pendente): O sinal ainda est\u00e1 a caminho.</li> <li><code>fulfilled</code> (cumprida): A resposta foi recebida com sucesso!</li> <li><code>rejected</code> (rejeitada): Ocorreu um erro (por exemplo, sem conex\u00e3o).</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/1/#3-primeira-requisicao-descobrir-onde-esta-a-iss","title":"3. Primeira requisi\u00e7\u00e3o: Descobrir onde est\u00e1 a ISS","text":"<p>Vamos enviar nossa primeira requisi\u00e7\u00e3o usando <code>fetch</code>. Usaremos um arquivo HTML simples e tags <code>&lt;script&gt;</code>.</p> <p>Passo 1: Criar <code>index.html</code> Crie um arquivo <code>index.html</code> em uma nova pasta (por exemplo, <code>frontend_fleet_control</code>). <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"pt\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;C.O.P. - Fetch API&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Status de comunica\u00e7\u00e3o com a ISS&lt;/h1&gt;\n    &lt;div id=\"iss-status\"&gt;Aguardando dados...&lt;/div&gt;\n\n    &lt;script&gt;\n        // Nosso c\u00f3digo JavaScript estar\u00e1 aqui\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Passo 2: Escrever c\u00f3digo com <code>fetch</code> Dentro da tag <code>&lt;script&gt;</code>, adicionaremos nossa primeira requisi\u00e7\u00e3o <code>fetch</code> para a API p\u00fablica Open Notify. <pre><code>// index.html -&gt; &lt;script&gt;\n\nconst issApiUrl = 'http://api.open-notify.org/iss-now.json';\nconst statusDiv = document.getElementById('iss-status');\n\nconsole.log('Enviando solicita\u00e7\u00e3o para obter as coordenadas da ISS...');\n\nfetch(issApiUrl)\n    .then(response =&gt; {\n        // O primeiro .then() lida com a pr\u00f3pria resposta HTTP\n        console.log('Resposta recebida do servidor!', response);\n        // Convertemos o corpo da resposta em JSON, isso tamb\u00e9m \u00e9 uma opera\u00e7\u00e3o ass\u00edncrona\n        return response.json();\n    })\n    .then(data =&gt; {\n        // O segundo .then() recebe os dados JSON j\u00e1 parseados\n        console.log('Dados convertidos para JSON com sucesso!', data);\n        const position = data.iss_position;\n        statusDiv.innerHTML = `A ISS est\u00e1 atualmente aqui:\n                               &lt;strong&gt;Latitude:&lt;/strong&gt; ${position.latitude},\n                               &lt;strong&gt;Longitude:&lt;/strong&gt; ${position.longitude}`;\n    })\n    .catch(error =&gt; {\n        // .catch() ser\u00e1 ativado se ocorrer um erro de rede\n        console.error('Erro de comunica\u00e7\u00e3o com a ISS!', error);\n        statusDiv.textContent = 'N\u00e3o foi poss\u00edvel obter os dados. Verifique a conex\u00e3o.';\n    });\n</code></pre></p> <ul> <li><code>fetch(url)</code>: Envia uma requisi\u00e7\u00e3o GET. Retorna uma Promise.</li> <li><code>.then(callback)</code>: Executado quando a Promise \u00e9 resolvida com sucesso (<code>fulfilled</code>). O primeiro <code>.then</code> recebe um objeto <code>Response</code>.</li> <li><code>response.json()</code>: M\u00e9todo que l\u00ea o corpo da resposta e o analisa como JSON. Ele tamb\u00e9m retorna uma Promise!</li> <li><code>.catch(callback)</code>: Executado se a Promise for rejeitada (<code>rejected</code>), por exemplo, devido a um erro de rede.</li> </ul> <p>Passo 3: Abrir no navegador Basta abrir o arquivo <code>index.html</code> em seu navegador. Voc\u00ea deve ver \"Aguardando dados...\" ser substitu\u00eddo pelas coordenadas atuais da ISS. Abra o console do desenvolvedor (F12) para ver os logs.</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/1/#4-e-se-tratamento-de-erros-do-servidor","title":"4. \"E se...\": Tratamento de erros do servidor","text":"<p>E se solicitarmos uma URL inexistente? <code>fetch('http://api.open-notify.org/non-existent-endpoint')</code></p> <p>O <code>fetch</code> \u00e9 constru\u00eddo de tal forma que <code>.catch()</code> s\u00f3 ser\u00e1 ativado em erros de rede (sem internet, DNS n\u00e3o encontrado). No entanto, respostas com c\u00f3digos <code>404</code> ou <code>500</code> para o <code>fetch</code> s\u00e3o uma resposta recebida com sucesso! Simplesmente cont\u00e9m um c\u00f3digo de erro.</p> <p>Maneira correta de verificar: <pre><code>fetch('http://api.open-notify.org/non-existent-endpoint')\n    .then(response =&gt; {\n        // Verificamos a propriedade .ok, que \u00e9 true para status 200-299\n        if (!response.ok) {\n            // Se a resposta n\u00e3o for \"OK\", criamos nosso pr\u00f3prio erro para cair no .catch()\n            throw new Error(`Erro HTTP! Status: ${response.status}`);\n        }\n        return response.json();\n    })\n    .then(data =&gt; {\n        console.log(data);\n    })\n    .catch(error =&gt; {\n        console.error('Ocorreu um erro ao executar a solicita\u00e7\u00e3o:', error);\n    });\n</code></pre></p> <ul> <li><code>response.ok</code>: Este \u00e9 o seu principal indicador de sucesso.</li> <li><code>throw new Error()</code>: \"Falhamos\" manualmente a cadeia de Promises para cair no bloco <code>.catch</code>.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/1/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. A Fetch API \u00e9...</p>  a) Uma biblioteca externa que precisa ser baixada  b) Uma interface integrada ao navegador para requisi\u00e7\u00f5es HTTP  c) Uma linguagem de programa\u00e7\u00e3o para trabalhar com a rede <p>2. O que a chamada `fetch(url)` retorna?</p>  a) Imediatamente dados JSON  b) Um objeto `Promise` (promessa)  c) Uma p\u00e1gina HTML <p>3. O m\u00e9todo `.then()` em uma cadeia de promises \u00e9 chamado quando...</p>  a) Ocorre um erro de rede  b) A requisi\u00e7\u00e3o \u00e9 conclu\u00edda com sucesso  c) O usu\u00e1rio fecha a aba <p>4. O m\u00e9todo `response.json()` \u00e9 usado para...</p>  a) Converter o corpo da resposta em um objeto JavaScript  b) Verificar se a resposta \u00e9 um JSON v\u00e1lido  c) Enviar dados para o servidor no formato JSON <p>5. Como verificar corretamente se o servidor n\u00e3o retornou um erro (por exemplo, 404)?</p>  a) Verificar a propriedade `response.ok`  b) Verificar se o bloco `.catch()` ser\u00e1 ativado  c) Verificar se `response.status` \u00e9 igual a \"OK\" Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea configurou a \"antena principal\" do seu MCC e aprendeu a enviar requisi\u00e7\u00f5es e receber respostas.</p> <ul> <li>\ud83d\udce1 Voc\u00ea dominou a sintaxe b\u00e1sica de <code>fetch()</code>.</li> <li>\ud83d\udef0\ufe0f Entendeu o que s\u00e3o Promises e como trabalhar com <code>.then()</code> e <code>.catch()</code>.</li> <li>\u2699\ufe0f Aprendeu a processar corretamente as respostas do servidor, verificando <code>response.ok</code>.</li> </ul> <p>Conex\u00e3o estabelecida! No pr\u00f3ximo cap\u00edtulo, conectaremos nosso MCC \u00e0 API da frota espacial que criamos no FastAPI, e aprenderemos a obter e exibir a lista de nossas naves.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>Certifique-se de que seu arquivo <code>index.html</code> exibe corretamente as coordenadas da ISS.</li> <li>Tente quebrar intencionalmente a URL e veja no console do desenvolvedor qual erro ser\u00e1 exibido.</li> </ul> <p>\u26a0\ufe0f Se o c\u00f3digo n\u00e3o funcionar:</p> <ul> <li>Erro CORS: Se voc\u00ea tentar fazer uma requisi\u00e7\u00e3o para sua API local do FastAPI (por exemplo, <code>http://127.0.0.1:8000</code>) a partir de um arquivo aberto como <code>file:///...</code>, o navegador bloquear\u00e1 a requisi\u00e7\u00e3o devido \u00e0 pol\u00edtica de seguran\u00e7a CORS. Resolveremos este problema no pr\u00f3ximo cap\u00edtulo. Por enquanto, estamos usando APIs p\u00fablicas que permitem isso.</li> <li>HTTP/HTTPS: <code>http://api.open-notify.org</code> funciona via HTTP. Alguns navegadores podem avisar sobre isso. Se voc\u00ea estiver trabalhando em um site HTTPS, as requisi\u00e7\u00f5es para recursos HTTP podem ser bloqueadas.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/2/","title":"Cap\u00edtulo 4.2: Envio de Requisi\u00e7\u00f5es GET","text":"<p>Tempo de estudo: 45 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/2/#1-get-requisicao-de-telemetria-da-frota-espacial","title":"1. GET: Requisi\u00e7\u00e3o de Telemetria da Frota Espacial","text":"<p>Uma requisi\u00e7\u00e3o GET \u00e9 o comando principal para obter dados. Em nosso Centro de Controle de Miss\u00e3o (CCM), isso \u00e9 equivalente \u00e0 pergunta: \"Centro de Controle da Frota, relate a situa\u00e7\u00e3o!\"</p> <p>Usaremos <code>fetch</code> para enviar dois tipos de requisi\u00e7\u00f5es GET ao nosso servidor FastAPI:</p> <ol> <li>Obten\u00e7\u00e3o de toda a cole\u00e7\u00e3o: \"Mostre-me toda a minha frota\".</li> <li>Obten\u00e7\u00e3o de um \u00fanico recurso: \"Forne\u00e7a informa\u00e7\u00f5es detalhadas sobre a nave com ID 2\".</li> </ol> <p>\ud83d\udca1 Analogia espacial:</p> <p><code>GET /spaceships</code> \u2014 \u00e9 uma requisi\u00e7\u00e3o de broadcast para toda a frota solicitando seus indicativos de chamada.</p> <p><code>GET /spaceships/3</code> \u2014 \u00e9 uma requisi\u00e7\u00e3o direcionada a uma nave espec\u00edfica (ISS) solicitando a transmiss\u00e3o de dados completos de seus sistemas.</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/2/#2-problema-cors-interferencia-interplanetaria","title":"2. Problema CORS: \"Interfer\u00eancia Interplanet\u00e1ria\"","text":"<p>Antes de enviarmos a requisi\u00e7\u00e3o, precisamos resolver um problema importante. Por padr\u00e3o, por raz\u00f5es de seguran\u00e7a, os navegadores impedem que uma p\u00e1gina web (nosso CCM), carregada de um \"dom\u00ednio\" (<code>file:///...</code> ou <code>http://localhost:5500</code>), fa\u00e7a requisi\u00e7\u00f5es a uma API em outro \"dom\u00ednio\" (<code>http://127.0.0.1:8000</code>).</p> <p>Essa pol\u00edtica \u00e9 chamada de CORS (Compartilhamento de Recursos de Origem Cruzada).</p> <p>Para permitir que nosso frontend se comunique com o backend, \u00e9 preciso configurar o servidor FastAPI para que ele diga ao navegador: \"Est\u00e1 tudo bem, confio nas requisi\u00e7\u00f5es deste endere\u00e7o\".</p> <p>Passo 1: Instalar <code>python-multipart</code> Isso \u00e9 necess\u00e1rio para o funcionamento correto do middleware. <pre><code>pip install python-multipart\n</code></pre></p> <p>Passo 2: Configurar CORS em <code>main.py</code> Abra seu arquivo <code>main.py</code> do projeto FastAPI e adicione o seguinte c\u00f3digo: <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware  # &lt;-- Importamos o middleware\n\n# ... seu restante do c\u00f3digo (modelos, db_spaceships) ...\n\napp = FastAPI(\n    title=\"Fleet Management API\",\n    # ...\n)\n\n# --- CONFIGURA\u00c7\u00c3O CORS ---\n# Indicamos quais \"dom\u00ednios\" (origens) podem enviar requisi\u00e7\u00f5es\norigins = [\n    \"http://localhost\",\n    \"http://localhost:8080\",\n    \"http://127.0.0.1:5500\",  # Endere\u00e7o para Live Server no VS Code\n    \"null\"  # Para requisi\u00e7\u00f5es de arquivos locais file:///\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # Permite as origens especificadas\n    allow_credentials=True,\n    allow_methods=[\"*\"],  # Permite todos os m\u00e9todos (GET, POST, etc.)\n    allow_headers=[\"*\"],  # Permite todos os cabe\u00e7alhos\n)\n\n# --- SEUS ENDPOINTS ABAIXO ---\n@app.get(\"/\")\n# ...\n</code></pre> Agora nosso servidor API est\u00e1 pronto para aceitar requisi\u00e7\u00f5es do frontend. Reinicie o <code>uvicorn</code> para que as altera\u00e7\u00f5es entrem em vigor!</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/2/#3-obtendo-a-lista-de-todas-as-naves","title":"3. Obtendo a lista de todas as naves","text":"<p>Criaremos uma interface para exibir nossa frota.</p> <p>Passo 1: Atualizar <code>index.html</code> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"pt\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;CCM - Gerenciamento de Frota&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: sans-serif; }\n        .ship-list { list-style: none; padding: 0; }\n        .ship-list li { border: 1px solid #ccc; margin-bottom: 10px; padding: 15px; border-radius: 5px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Painel de Controle da Frota Espacial&lt;/h1&gt;\n\n    &lt;button id=\"load-fleet-btn\"&gt;Requisitar dados da frota&lt;/button&gt;\n\n    &lt;h2&gt;Lista de aparelhos:&lt;/h2&gt;\n    &lt;ul id=\"fleet-list\" class=\"ship-list\"&gt;\n        &lt;li&gt;Aguardando comando...&lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt; &lt;!-- Conectando script externo --&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Passo 2: Criar <code>app.js</code> Ao lado de <code>index.html</code>, crie o arquivo <code>app.js</code>. Nele, extrairemos toda a l\u00f3gica. <pre><code>// app.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // URL do nosso servidor FastAPI\n\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetList = document.getElementById('fleet-list');\n\n// Fun\u00e7\u00e3o para carregar e exibir a frota\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;Carregando telemetria...&lt;/li&gt;';\n\n        // Enviando requisi\u00e7\u00e3o GET para /spaceships\n        const response = await fetch(`${API_BASE_URL}/spaceships`);\n\n        if (!response.ok) {\n            throw new Error(`Erro de rede: ${response.status}`);\n        }\n\n        const ships = await response.json(); // Obtemos o array de naves\n\n        // Limpamos a lista e exibimos os dados\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;Nenhum aparelho encontrado no registro.&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            const listItem = document.createElement('li');\n            listItem.innerHTML = `\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                Tipo: ${ship.type}&lt;br&gt;\n                Ano de lan\u00e7amento: ${ship.launch_year}&lt;br&gt;\n                Status: ${ship.status}\n            `;\n            fleetList.appendChild(listItem);\n        });\n\n    } catch (error) {\n        console.error('N\u00e3o foi poss\u00edvel carregar os dados da frota:', error);\n        fleetList.innerHTML = `&lt;li&gt;Erro: ${error.message}&lt;/li&gt;`;\n    }\n}\n\n// Adiciona o manipulador de evento ao bot\u00e3o\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\n</code></pre></p> <ul> <li>async/await: Usamos uma nova e mais conveniente sintaxe para trabalhar com Promises. Abordaremos isso em detalhes no Cap\u00edtulo 4.5. Por enquanto, saiba apenas que <code>await</code> \"espera\" a execu\u00e7\u00e3o de uma Promise sem bloquear a p\u00e1gina.</li> <li><code>try...catch</code>: Uma excelente maneira de lidar com erros em fun\u00e7\u00f5es <code>async</code>.</li> </ul> <p>Passo 3: Testar Abra <code>index.html</code> no navegador (preferencialmente via extens\u00e3o Live Server no VS Code, que o executar\u00e1 em <code>http://127.0.0.1:5500</code>). Clique no bot\u00e3o \"Requisitar dados da frota\". A lista das suas naves do FastAPI dever\u00e1 aparecer na p\u00e1gina!</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/2/#4-obtendo-dados-de-uma-unica-nave","title":"4. Obtendo dados de uma \u00fanica nave","text":"<p>Agora adicionaremos um formul\u00e1rio para requisitar informa\u00e7\u00f5es por um ID espec\u00edfico.</p> <p>Passo 1: Adicionar formul\u00e1rio em <code>index.html</code> <pre><code>&lt;!-- index.html, ap\u00f3s a lista --&gt;\n&lt;hr&gt;\n&lt;h2&gt;Requisi\u00e7\u00e3o por ID&lt;/h2&gt;\n&lt;form id=\"ship-form\"&gt;\n    &lt;input type=\"number\" id=\"ship-id-input\" placeholder=\"Digite o ID do aparelho\" required&gt;\n    &lt;button type=\"submit\"&gt;Encontrar aparelho&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"ship-details\" class=\"ship-list\"&gt;&lt;/div&gt;\n</code></pre></p> <p>Passo 2: Adicionar l\u00f3gica em <code>app.js</code> <pre><code>// app.js, no final do arquivo\n\nconst shipForm = document.getElementById('ship-form');\nconst shipIdInput = document.getElementById('ship-id-input');\nconst shipDetails = document.getElementById('ship-details');\n\nasync function fetchShipById(event) {\n    event.preventDefault(); // Impede o recarregamento da p\u00e1gina\n    const shipId = shipIdInput.value;\n\n    if (!shipId) {\n        alert('Por favor, insira o ID.');\n        return;\n    }\n\n    try {\n        shipDetails.innerHTML = '&lt;li&gt;Buscando aparelho...&lt;/li&gt;';\n\n        // Enviando requisi\u00e7\u00e3o GET para /spaceships/{id}\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`);\n\n        if (response.status === 404) {\n             throw new Error('Aparelho com este ID n\u00e3o encontrado no registro.');\n        }\n        if (!response.ok) {\n            throw new Error(`Erro de rede: ${response.status}`);\n        }\n\n        const ship = await response.json();\n\n        shipDetails.innerHTML = `\n            &lt;li&gt;\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                Tipo: ${ship.type}&lt;br&gt;\n                Ano de lan\u00e7amento: ${ship.launch_year}&lt;br&gt;\n                Status: ${ship.status}\n            &lt;/li&gt;\n        `;\n    } catch (error) {\n        console.error(`Erro ao buscar aparelho ${shipId}:`, error);\n        shipDetails.innerHTML = `&lt;li&gt;Erro: ${error.message}&lt;/li&gt;`;\n    }\n}\n\nshipForm.addEventListener('submit', fetchShipById);\n</code></pre></p> <ul> <li>Adicionamos um tratamento separado para o status <code>404</code> para fornecer ao usu\u00e1rio uma mensagem de erro mais clara.</li> </ul> <p>Passo 3: Testar Atualize a p\u00e1gina, insira o ID de uma nave existente (por exemplo, 1) e clique em \"Encontrar aparelho\". Voc\u00ea dever\u00e1 ver seus dados. Tente inserir um ID inexistente (por exemplo, 99) \u2014 voc\u00ea ver\u00e1 uma mensagem de erro.</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/2/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. A pol\u00edtica CORS no navegador \u00e9 necess\u00e1ria para...</p>  a) Acelerar o carregamento de p\u00e1ginas  b) Proteger contra requisi\u00e7\u00f5es cross-site maliciosas  c) Compactar dados JSON <p>2. Para permitir que o frontend em `localhost:5500` acesse o FastAPI, \u00e9 preciso...</p>  a) Configurar `CORSMiddleware` no FastAPI  b) Alterar as configura\u00e7\u00f5es do navegador  c) Nada \u00e9 preciso, isso funciona por padr\u00e3o <p>3. Para obter dados de um recurso espec\u00edfico com ID=5, a URL da requisi\u00e7\u00e3o ser\u00e1 assim:</p>  a) `/resources?id=5`  b) `/resources/5`  c) `/get/resources/5` <p>4. A palavra-chave `await` em JavaScript pode ser usada apenas dentro de uma fun\u00e7\u00e3o declarada com...</p>  a) `function`  b) `promise`  c) `async` <p>5. `event.preventDefault()` no manipulador de envio do formul\u00e1rio \u00e9 necess\u00e1rio para...</p>  a) Prevenir o comportamento padr\u00e3o do navegador (recarregamento da p\u00e1gina)  b) Parar a execu\u00e7\u00e3o do script  c) Cancelar o envio da requisi\u00e7\u00e3o Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea configurou com sucesso o canal de comunica\u00e7\u00e3o entre a \"Terra\" e o \"espa\u00e7o\" e aprendeu a solicitar telemetria!</p> <ul> <li>\ud83d\udee1\ufe0f Voc\u00ea resolveu o problema de \"interfer\u00eancia interplanet\u00e1ria\" configurando o CORS em seu servidor FastAPI.</li> <li>\ud83d\udef0\ufe0f Implementou a fun\u00e7\u00e3o para obter e exibir a lista completa de espa\u00e7onaves.</li> <li>\ud83d\udd2d Criou uma interface para solicitar dados sobre uma nave espec\u00edfica pelo seu ID.</li> </ul> <p>O MCC est\u00e1 recebendo dados! No pr\u00f3ximo cap\u00edtulo, passaremos para a\u00e7\u00f5es ativas: enviaremos comandos para criar, atualizar e excluir nossas naves espaciais.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>Certifique-se de que seu servidor FastAPI esteja rodando com o <code>CORSMiddleware</code> configurado.</li> <li>Verifique se, ao clicar no bot\u00e3o \"Solicitar dados\", uma lista de naves aparece na p\u00e1gina.</li> <li>Certifique-se de que o formul\u00e1rio de busca por ID encontra corretamente as naves existentes e reporta um erro para as n\u00e3o existentes.</li> </ul> <p>\u26a0\ufe0f Se houver erros:</p> <ul> <li>Erro de CORS no console do navegador: Ou voc\u00ea n\u00e3o reiniciou o <code>uvicorn</code> ap\u00f3s adicionar o <code>CORSMiddleware</code>, ou o endere\u00e7o do seu frontend (por exemplo, <code>http://127.0.0.1:5500</code>) n\u00e3o foi adicionado \u00e0 lista de <code>origins</code>.</li> <li>Failed to fetch: Verifique se seu servidor FastAPI est\u00e1 rodando e acess\u00edvel no endere\u00e7o especificado em <code>API_BASE_URL</code>.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/3/","title":"Cap\u00edtulo 4.3: Envio de requisi\u00e7\u00f5es POST/PUT/DELETE","text":"<p>Tempo de estudo: 1 hora</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/3/#1-comandos-ativos-do-lancamento-a-desativacao","title":"1. Comandos Ativos: Do Lan\u00e7amento \u00e0 Desativa\u00e7\u00e3o","text":"<p>At\u00e9 agora, nosso Centro de Controle da Miss\u00e3o apenas solicitava informa\u00e7\u00f5es (<code>GET</code>). Agora aprenderemos a enviar comandos ativos:</p> <ul> <li>POST: \"Lan\u00e7ar um novo sat\u00e9lite em \u00f3rbita!\"</li> <li>PUT: \"Realizar uma moderniza\u00e7\u00e3o completa dos sistemas na ISS!\"</li> <li>DELETE: \"Retirar da \u00f3rbita a antiga nave <code>Debris-123</code>!\"</li> </ul> <p>Para isso, usaremos <code>fetch</code>, mas com par\u00e2metros adicionais que descrevem nosso comando.</p> <p>\ud83d\udca1 Analogia Espacial:</p> <p>Se <code>GET</code> \u00e9 a escuta passiva da transmiss\u00e3o de r\u00e1dio, ent\u00e3o <code>POST</code>, <code>PUT</code> e <code>DELETE</code> s\u00e3o a transmiss\u00e3o ativa de comandos. Para isso, precisamos n\u00e3o apenas especificar a \"frequ\u00eancia\" (URL), mas tamb\u00e9m o conte\u00fado do comando (corpo da requisi\u00e7\u00e3o) e o protocolo de comunica\u00e7\u00e3o (cabe\u00e7alhos).</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/3/#2-envio-de-requisicao-post-lancamento-de-uma-nova-nave","title":"2. Envio de requisi\u00e7\u00e3o POST: Lan\u00e7amento de uma nova nave","text":"<p>Para criar um novo recurso, enviamos uma requisi\u00e7\u00e3o <code>POST</code>. O mais importante aqui \u00e9 passar o corpo (body) da requisi\u00e7\u00e3o com os dados do novo objeto.</p> <p>Passo 1: Adicionar o formul\u00e1rio de cria\u00e7\u00e3o em <code>index.html</code> Vamos coloc\u00e1-lo ap\u00f3s o bloco \"Requisi\u00e7\u00e3o por ID\". <pre><code>&lt;!-- index.html --&gt;\n&lt;hr&gt;\n&lt;h2&gt;Lan\u00e7ar nova nave&lt;/h2&gt;\n&lt;form id=\"create-ship-form\"&gt;\n    &lt;input type=\"text\" id=\"create-name\" placeholder=\"Nome\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-type\" placeholder=\"Tipo\" required&gt;&lt;br&gt;\n    &lt;input type=\"number\" id=\"create-year\" placeholder=\"Ano de Lan\u00e7amento\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-status\" placeholder=\"Status\" required&gt;&lt;br&gt;\n    &lt;button type=\"submit\"&gt;Lan\u00e7ar&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"create-status-message\"&gt;&lt;/div&gt;\n</code></pre></p> <p>Passo 2: Adicionar a l\u00f3gica em <code>app.js</code> <pre><code>// app.js, no final do arquivo\n\nconst createShipForm = document.getElementById('create-ship-form');\nconst createStatusMessage = document.getElementById('create-status-message');\n\nasync function createShip(event) {\n    event.preventDefault();\n\n    // 1. Coletamos os dados do formul\u00e1rio em um objeto\n    const shipData = {\n        name: document.getElementById('create-name').value,\n        type: document.getElementById('create-type').value,\n        launch_year: parseInt(document.getElementById('create-year').value),\n        status: document.getElementById('create-status').value\n    };\n\n    try {\n        createStatusMessage.textContent = 'Enviando comando de lan\u00e7amento...';\n\n        // 2. Enviamos uma requisi\u00e7\u00e3o fetch com par\u00e2metros\n        const response = await fetch(`${API_BASE_URL}/spaceships`, {\n            method: 'POST', // Especifica o m\u00e9todo\n            headers: {\n                'Content-Type': 'application/json' // Dizemos ao servidor que estamos enviando JSON\n            },\n            body: JSON.stringify(shipData) // Transforma o objeto JavaScript em uma string JSON\n        });\n\n        if (!response.ok) {\n            // Se o servidor retornou um erro, tentamos ler o corpo\n            const errorData = await response.json();\n            throw new Error(errorData.detail || `Erro do servidor: ${response.status}`);\n        }\n\n        const newShip = await response.json();\n        createStatusMessage.textContent = `\ud83d\ude80 Lan\u00e7amento bem-sucedido! ID atribu\u00eddo \u00e0 nave: ${newShip.id}`;\n\n        createShipForm.reset(); // Limpa o formul\u00e1rio\n        fetchAndDisplayFleet(); // Atualiza a lista geral da frota\n\n    } catch (error) {\n        console.error('Erro ao lan\u00e7ar a nave:', error);\n        createStatusMessage.textContent = `\ud83d\udd34 Erro: ${error.message}`;\n    }\n}\n\ncreateShipForm.addEventListener('submit', createShip);\n</code></pre> Pontos chave do <code>fetch</code> para POST:</p> <ul> <li><code>method: 'POST'</code>: Obrigat\u00f3rio especificar o m\u00e9todo HTTP.</li> <li><code>headers: { 'Content-Type': 'application/json' }</code>: Cabe\u00e7alho crucial. Ele informa ao nosso servidor FastAPI que o corpo da requisi\u00e7\u00e3o cont\u00e9m JSON, e que precisa ser interpretado.</li> <li><code>body: JSON.stringify(shipData)</code>: N\u00e3o podemos enviar um objeto JavaScript diretamente. Ele precisa ser serializado (transformado) em uma string JSON.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/3/#3-envio-de-requisicao-delete-desativacao-de-uma-nave","title":"3. Envio de requisi\u00e7\u00e3o DELETE: Desativa\u00e7\u00e3o de uma nave","text":"<p>A requisi\u00e7\u00e3o de exclus\u00e3o \u00e9 mais simples \u2014 geralmente n\u00e3o precisa de corpo, apenas a URL com o ID do objeto.</p> <p>Passo 1: Adicionar o bot\u00e3o \"Excluir\" \u00e0 nossa lista de naves Modificaremos a fun\u00e7\u00e3o <code>fetchAndDisplayFleet</code> em <code>app.js</code> para que ela adicione um bot\u00e3o de exclus\u00e3o para cada item. <pre><code>// app.js, dentro da fun\u00e7\u00e3o fetchAndDisplayFleet\n\n// ...\nships.forEach(ship =&gt; {\n    const listItem = document.createElement('li');\n    // Adiciona um bot\u00e3o com um atributo data que armazena o ID\n    listItem.innerHTML = `\n        &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n        Tipo: ${ship.type} | Ano: ${ship.launch_year} | Status: ${ship.status}&lt;br&gt;\n        &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;Desativar nave&lt;/button&gt;\n    `;\n    fleetList.appendChild(listItem);\n});\n// ...\n</code></pre></p> <p>Passo 2: Adicionar um manipulador para todos os bot\u00f5es \"Excluir\" Usamos delega\u00e7\u00e3o de eventos \u2014 um \u00fanico manipulador para toda a lista. <pre><code>// app.js, no final do arquivo\n\nasync function deleteShip(shipId) {\n    if (!confirm(`Tem certeza de que deseja desativar a nave com ID ${shipId}? Esta a\u00e7\u00e3o \u00e9 irrevers\u00edvel.`)) {\n        return;\n    }\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`, {\n            method: 'DELETE' // Especifica o m\u00e9todo\n        });\n\n        if (!response.ok) {\n            throw new Error(`N\u00e3o foi poss\u00edvel desativar a nave. Status: ${response.status}`);\n        }\n\n        alert(`Nave com ID ${shipId} desativada com sucesso.`);\n        fetchAndDisplayFleet(); // Atualiza a lista\n\n    } catch (error) {\n        console.error('Erro ao desativar:', error);\n        alert(`Erro: ${error.message}`);\n    }\n}\n\n// Delega\u00e7\u00e3o de eventos: escuta cliques em toda a lista\nfleetList.addEventListener('click', (event) =&gt; {\n    // Verifica se o clique foi em um bot\u00e3o com a classe 'delete-btn'\n    if (event.target.classList.contains('delete-btn')) {\n        const shipId = event.target.dataset.shipId; // Obt\u00e9m o ID do atributo data\n        deleteShip(shipId);\n    }\n});\n</code></pre></p> <p>Passo 3: Adicionar id ao modelo Spaceship</p> <p>Adiciona id ao modelo e ao banco de dados no arquivo <code>main.py</code></p> <pre><code>class Spaceship(BaseModel):\n    id: int\n    # Restante do c\u00f3digo do modelo...\n\ndb_spaceships = {\n    1: {\n        \"id\": 1,\n        # Dados do elemento 1\n    },\n    2: {\n        \"id\": 2,\n        # Dados do elemento 2\n    },\n    3: {\n        \"id\": 3,\n        # Dados do elemento 3\n    }\n}\n</code></pre> <ul> <li><code>method: 'DELETE'</code>: Especifica o m\u00e9todo. Corpo e cabe\u00e7alhos n\u00e3o s\u00e3o necess\u00e1rios aqui.</li> <li><code>confirm()</code>: Uma janela de confirma\u00e7\u00e3o integrada simples para evitar a exclus\u00e3o acidental de algo importante.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/3/#4-envio-de-requisicao-put-tarefa-autonoma","title":"4. Envio de requisi\u00e7\u00e3o PUT (Tarefa Aut\u00f4noma)","text":"<p>A implementa\u00e7\u00e3o da requisi\u00e7\u00e3o <code>PUT</code> para atualiza\u00e7\u00e3o \u00e9 muito semelhante \u00e0 <code>POST</code>.</p> <p>Sua miss\u00e3o, se decidir aceit\u00e1-la:</p> <ol> <li>Adicionar um bot\u00e3o \"Editar\" ao lado do bot\u00e3o \"Excluir\" para cada nave.</li> <li>Ao clicar em \"Editar\", preencher o formul\u00e1rio (pode-se usar o mesmo de cria\u00e7\u00e3o) com os dados atuais da nave.</li> <li>Mudar o texto do bot\u00e3o \"Lan\u00e7ar\" para \"Atualizar\".</li> <li>Ao enviar o formul\u00e1rio, enviar uma requisi\u00e7\u00e3o <code>PUT</code> para <code>/spaceships/{id}</code> com o corpo completo do objeto.</li> <li>Ap\u00f3s a atualiza\u00e7\u00e3o bem-sucedida, atualizar a lista da frota.</li> </ol> <p>Dica: Voc\u00ea precisar\u00e1 de <code>fetch</code> com <code>method: 'PUT'</code>, cabe\u00e7alhos <code>Content-Type</code> e <code>body</code> com <code>JSON.stringify()</code>, exatamente como na requisi\u00e7\u00e3o POST.</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/3/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. Qual par\u00e2metro `fetch` \u00e9 usado para enviar dados no corpo da requisi\u00e7\u00e3o?</p>  a) `data`  b) `body`  c) `payload` <p>2. O cabe\u00e7alho `'Content-Type': 'application/json'` informa ao servidor que...</p>  a) O cliente espera receber uma resposta em formato JSON  b) O cliente est\u00e1 enviando dados no corpo da requisi\u00e7\u00e3o em formato JSON  c) A conex\u00e3o deve ser criptografada <p>3. A fun\u00e7\u00e3o `JSON.stringify(obj)` em JavaScript faz o qu\u00ea?</p>  a) Converte uma string JSON em um objeto  b) Verifica a validade de um objeto  c) Converte um objeto JavaScript em uma string JSON <p>4. Para enviar uma requisi\u00e7\u00e3o `DELETE` usando `fetch`, \u00e9 obrigat\u00f3rio especificar:</p>  a) Um `body` vazio  b) `method: 'DELETE'`  c) O cabe\u00e7alho `Authorization` <p>5. Delega\u00e7\u00e3o de eventos em JavaScript \u00e9 quando...</p>  a) N\u00f3s anexamos um \u00fanico manipulador a um elemento pai em vez de v\u00e1rios aos elementos filhos  b) N\u00f3s transferimos o direito de executar uma fun\u00e7\u00e3o para outro script  c) O evento ocorre com um atraso Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Seu Centro de Controle da Miss\u00e3o (CCM) agora possui um conjunto completo de comandos para gerenciar a frota!</p> <ul> <li>\u2705 Voc\u00ea aprendeu a enviar <code>POST</code>-requisi\u00e7\u00f5es com corpo e cabe\u00e7alhos para criar novos recursos.</li> <li>\u2705 Voc\u00ea implementou <code>DELETE</code>-requisi\u00e7\u00f5es para desativar equipamentos obsoletos.</li> <li>\u2705 Voc\u00ea recebeu a tarefa de implementar uma <code>PUT</code>-requisi\u00e7\u00e3o, consolidando seu conhecimento.</li> </ul> <p>Controle total estabelecido! Mas o que fazer se a conex\u00e3o for perdida ou o servidor relatar um erro? No pr\u00f3ximo cap\u00edtulo, criaremos um sistema centralizado de tratamento de erros no frontend.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>Certifique-se de que o formul\u00e1rio de cria\u00e7\u00e3o de nova nave funcione e que a lista na p\u00e1gina seja atualizada ap\u00f3s a cria\u00e7\u00e3o bem-sucedida.</li> <li>Verifique se o bot\u00e3o \"Desativar Equipamento\" funciona, solicita confirma\u00e7\u00e3o e remove a nave da lista.</li> <li>Tente criar uma nave com dados inv\u00e1lidos (por exemplo, com um nome muito curto) e veja o erro que seu servidor FastAPI retornar\u00e1.</li> </ul> <p>\u26a0\ufe0f Se houver erros:</p> <ul> <li>Erro <code>422</code> do servidor: Provavelmente, os dados que voc\u00ea est\u00e1 enviando n\u00e3o passam pela valida\u00e7\u00e3o do Pydantic. Verifique o console do navegador \u2014 <code>errorData.detail</code> mostrar\u00e1 em qual campo est\u00e1 o problema.</li> <li>Erro <code>415 Unsupported Media Type</code>: Voc\u00ea se esqueceu de adicionar o cabe\u00e7alho <code>'Content-Type': 'application/json'</code>.</li> <li>Os bot\u00f5es de exclus\u00e3o n\u00e3o funcionam: Verifique se a delega\u00e7\u00e3o de eventos est\u00e1 funcionando corretamente e se voc\u00ea est\u00e1 obtendo o <code>shipId</code> do <code>data-ship-id</code>.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/4/","title":"Cap\u00edtulo 4.4: Tratamento de Erros","text":"<p>Tempo de estudo: 45 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/4/#1-tratamento-de-erros-protocolos-de-emergencia-do-centro-de-controle-de-missao-ccm","title":"1. Tratamento de Erros: Protocolos de Emerg\u00eancia do Centro de Controle de Miss\u00e3o (CCM)","text":"<p>No espa\u00e7o, nem tudo pode sair como planeado: uma explos\u00e3o solar pode interromper a comunica\u00e7\u00e3o, o computador de bordo da nave pode falhar, e a equipa da Terra pode enviar coordenadas incorretas.</p> <p>O tratamento de erros no frontend s\u00e3o os protocolos de emerg\u00eancia do seu CCM. Eles devem:</p> <ul> <li>\ud83d\udea8 Evitar que toda a interface \"expluda\" devido a um \u00fanico comando falho.</li> <li>\ud83d\udce1 Comunicar claramente ao operador (utilizador) o que exatamente deu errado.</li> <li>\ud83d\udd27 Sugerir poss\u00edveis a\u00e7\u00f5es futuras.</li> </ul> <p>\ud83d\udca1 Analogia espacial:</p> <p>Se a nave envia um sinal <code>500 Internal Server Error</code>, o ecr\u00e3 do CCM n\u00e3o deve mostrar \"Erro Cr\u00edtico de JavaScript na linha 57\". Em vez disso, deve aparecer: \"\ud83d\udea8 Falha a bordo da nave! Os engenheiros j\u00e1 foram notificados. Tente repetir o comando mais tarde.\"</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/4/#2-tipos-de-anomalias-espaciais","title":"2. Tipos de \"Anomalias Espaciais\"","text":"<p>No frontend, deparamo-nos com tr\u00eas tipos principais de erros ao trabalhar com a API:</p> <ol> <li>Erros de Rede: A comunica\u00e7\u00e3o com o servidor n\u00e3o foi estabelecida. A antena n\u00e3o funciona, o cabo est\u00e1 cortado. <code>fetch</code> \"cair\u00e1\" no bloco <code>.catch()</code>.</li> <li>Erros de Cliente (4xx): O comando da Terra estava incorreto. ID inv\u00e1lido, erro de valida\u00e7\u00e3o. O servidor responde, mas com o status <code>4xx</code>.</li> <li>Erros de Servidor (5xx): Falha na pr\u00f3pria nave. Problema no c\u00f3digo da API. O servidor responde, mas com o status <code>500+</code>.</li> </ol> <p>J\u00e1 come\u00e7\u00e1mos a trat\u00e1-los com <code>try...catch</code> e a verifica\u00e7\u00e3o de <code>response.ok</code>. Agora, vamos fazer isso de forma centralizada.</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/4/#3-funcao-centralizada-de-manipulacao","title":"3. Fun\u00e7\u00e3o Centralizada de Manipula\u00e7\u00e3o","text":"<p>Repetir o mesmo c\u00f3digo <code>try...catch</code> em cada fun\u00e7\u00e3o \u00e9 uma m\u00e1 pr\u00e1tica. Vamos criar um \"wrapper\" universal para as nossas requisi\u00e7\u00f5es <code>fetch</code>.</p> <p>Passo 1: Criar <code>api.js</code> Crie um novo ficheiro <code>api.js</code> ao lado de <code>app.js</code>. Nele, moveremos toda a l\u00f3gica de intera\u00e7\u00e3o com a API. <pre><code>// api.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\n/**\n * Fun\u00e7\u00e3o universal para executar requisi\u00e7\u00f5es \u00e0 API.\n * Lida com erros e retorna JSON.\n * @param {string} endpoint - Endpoint da API, por exemplo, '/spaceships'\n * @param {object} options - Par\u00e2metros para fetch (method, headers, body)\n */\nasync function apiRequest(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n\n    try {\n        const response = await fetch(url, options);\n\n        // Se a resposta n\u00e3o for JSON, lan\u00e7a um erro imediatamente\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n            // Exce\u00e7\u00e3o para requisi\u00e7\u00f5es DELETE bem-sucedidas que n\u00e3o t\u00eam corpo\n            if (response.status === 204) return null;\n\n            throw new TypeError(`Resposta n\u00e3o-JSON recebida do servidor: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n\n        if (!response.ok) {\n            // Se o servidor retornou JSON com um erro (por exemplo, detail do FastAPI)\n            const errorMessage = data.detail || `Erro HTTP! Status: ${response.status}`;\n            throw new Error(errorMessage);\n        }\n\n        return data;\n\n    } catch (error) {\n        console.error(`Erro na requisi\u00e7\u00e3o API para ${endpoint}:`, error);\n        // Propaga o erro para que possa ser capturado na UI\n        throw error;\n    }\n}\n</code></pre></p> <p>Passo 2: Conectar <code>api.js</code> no <code>index.html</code> \u00c9 importante conect\u00e1-lo ANTES de <code>app.js</code>, pois <code>app.js</code> usar\u00e1 as suas fun\u00e7\u00f5es. <pre><code>&lt;!-- index.html --&gt;\n&lt;body&gt;\n    &lt;!-- ... --&gt;\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</code></pre></p> <p>Passo 3: Refatorar <code>app.js</code> Agora, vamos reescrever as nossas fun\u00e7\u00f5es usando o novo <code>apiRequest</code>. <pre><code>// app.js\n\n// const API_BASE_URL = ...; // Esta linha pode ser removida, agora est\u00e1 em api.js\n\n// ...\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;Carregando telemetria...&lt;/li&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- Usamos nosso wrapper!\n\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;N\u00e3o h\u00e1 nenhuma nave no registro.&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; { /* ... restante do c\u00f3digo de exibi\u00e7\u00e3o ... */ });\n    } catch (error) {\n        fleetList.innerHTML = `&lt;li&gt;\ud83d\udd34 Erro ao carregar a frota: ${error.message}&lt;/li&gt;`;\n    }\n}\n\nasync function createShip(event) {\n    event.preventDefault();\n    const shipData = { /* ... coleta de dados do formul\u00e1rio ... */ };\n\n    try {\n        createStatusMessage.textContent = 'Enviando comando para lan\u00e7amento...';\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(shipData)\n        };\n        const newShip = await apiRequest('/spaceships', options); // &lt;-- Usamos nosso wrapper!\n\n        createStatusMessage.textContent = `\ud83d\ude80 Lan\u00e7amento bem-sucedido! ID atribu\u00eddo \u00e0 nave: ${newShip.id}`;\n        createShipForm.reset();\n        fetchAndDisplayFleet();\n    } catch (error) {\n        createStatusMessage.textContent = `\ud83d\udd34 Erro: ${error.message}`;\n    }\n}\n\n// Reescreva as outras fun\u00e7\u00f5es (fetchShipById, deleteShip) de forma an\u00e1loga!\n</code></pre> Agora, toda a l\u00f3gica de tratamento de erros de rede, verifica\u00e7\u00e3o de <code>response.ok</code> e parsing de JSON est\u00e1 num \u00fanico lugar, e o c\u00f3digo em <code>app.js</code> tornou-se muito mais limpo e leg\u00edvel.</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/4/#4-exibicao-de-erros-ao-usuario","title":"4. Exibi\u00e7\u00e3o de Erros ao Usu\u00e1rio","text":"<p>Uma boa interface n\u00e3o deve apenas registar o erro na consola, mas tamb\u00e9m mostr\u00e1-lo ao utilizador de forma compreens\u00edvel.</p> <p>Exemplo: Melhoria de <code>createShip</code> O nosso c\u00f3digo j\u00e1 faz isso: <code>createStatusMessage.textContent = ...</code>. Mas podemos fazer ainda melhor, criando uma fun\u00e7\u00e3o universal para exibir notifica\u00e7\u00f5es.</p> <p>Adicionando em <code>app.js</code>: <pre><code>// app.js\nfunction showNotification(message, isError = false) {\n    const notificationArea = document.getElementById('create-status-message'); // ou outro elemento\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? 'red' : 'green';\n}\n\n// Usando em createShip:\nasync function createShip(event) {\n    // ...\n    try {\n        // ...\n        const newShip = await apiRequest('/spaceships', options);\n        showNotification(`\ud83d\ude80 Lan\u00e7amento bem-sucedido! ID: ${newShip.id}`);\n        // ...\n    } catch (error) {\n        showNotification(`\ud83d\udd34 Erro: ${error.message}`, true);\n    }\n}\n</code></pre> Agora temos um mecanismo unificado para exibir tanto mensagens de sucesso quanto erros.</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/4/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. O bloco `.catch()` em uma promessa `fetch` ser\u00e1 acionado se...</p>  a) O servidor retornou um erro 404 Not Found  b) Ocorreu um erro de rede (por exemplo, sem internet)  c) O servidor retornou um erro 500 Internal Server Error <p>2. Por que \u00e9 necess\u00e1ria uma fun\u00e7\u00e3o de tratamento centralizada para requisi\u00e7\u00f5es API?</p>  a) Para evitar a duplica\u00e7\u00e3o de c\u00f3digo de tratamento de erros e tornar a l\u00f3gica da UI mais limpa  b) Para que todas as requisi\u00e7\u00f5es sejam enviadas simultaneamente  c) \u00c9 um requisito do padr\u00e3o Fetch API <p>3. `response.headers.get('content-type')` \u00e9 usado para...</p>  a) Definir o cabe\u00e7alho na requisi\u00e7\u00e3o de sa\u00edda  b) Verificar o tipo de conte\u00fado na resposta recebida do servidor  c) Obter todos os tipos de conte\u00fado dispon\u00edveis <p>4. `throw new Error(...)` dentro de `try...catch` ou `.then()` \u00e9 usado para...</p>  a) Interromper a execu\u00e7\u00e3o de todo o JavaScript na p\u00e1gina  b) \"Falhar\" a promessa e passar o controle para o bloco `.catch()` mais pr\u00f3ximo  c) Exibir uma mensagem em `alert` <p>5. Por que \u00e9 importante exibir os erros para o usu\u00e1rio, e n\u00e3o apenas no console?</p>  a) Porque a maioria dos usu\u00e1rios n\u00e3o olha o console  b) Para que a interface seja compreens\u00edvel e previs\u00edvel  c) Ambas as op\u00e7\u00f5es est\u00e3o corretas Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea fortaleceu seu Centro de Controle de Miss\u00f5es, criando protocolos de emerg\u00eancia robustos.</p> <ul> <li>\ud83d\udee1\ufe0f Voc\u00ea entende a diferen\u00e7a entre erros de rede, de cliente e de servidor.</li> <li>\u2699\ufe0f Voc\u00ea criou uma fun\u00e7\u00e3o <code>apiRequest</code> centralizada para lidar com todas as requisi\u00e7\u00f5es, evitando duplica\u00e7\u00e3o de c\u00f3digo.</li> <li>\ud83d\udce1 Sua interface agora \u00e9 capaz de informar corretamente o usu\u00e1rio sobre os erros, tornando-a mais amig\u00e1vel e confi\u00e1vel.</li> </ul> <p>Escudos de emerg\u00eancia levantados! Mas o que \u00e9 melhor: cadeias <code>.then()</code> ou o moderno <code>async/await</code>? No pr\u00f3ximo cap\u00edtulo, analisaremos ambas as abordagens e entenderemos quando usar cada uma.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>Verifique se o seu c\u00f3digo em <code>app.js</code> foi refatorado com sucesso e usa a nova fun\u00e7\u00e3o <code>apiRequest</code>.</li> <li>Tente parar o servidor FastAPI e clique no bot\u00e3o \"Solicitar Dados\". Voc\u00ea dever\u00e1 ver um erro de conex\u00e3o na p\u00e1gina.</li> <li>Tente criar uma nave com dados inv\u00e1lidos. Voc\u00ea dever\u00e1 ver uma mensagem de erro de valida\u00e7\u00e3o que veio do FastAPI.</li> </ul> <p>\u26a0\ufe0f Se houver erros:</p> <ul> <li><code>apiRequest is not defined</code>: Certifique-se de que voc\u00ea conectou <code>api.js</code> em <code>index.html</code> antes de <code>app.js</code>.</li> <li>Verifique o console do navegador para outras ocorr\u00eancias de erros de sintaxe em JavaScript.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/5/","title":"Cap\u00edtulo 4.5: Async/await vs Promise","text":"<p>Tempo de estudo: 30 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/5/#1-assincronicidade-duas-maneiras-de-gerenciar-a-comunicacao-espacial","title":"1. Assincronicidade: Duas maneiras de gerenciar a \"comunica\u00e7\u00e3o espacial\"","text":"<p>Imagine que o Centro de Controle da Miss\u00e3o (CCM) envie um comando para Marte. A resposta s\u00f3 chegar\u00e1 em alguns minutos. Como organizar o trabalho durante esse tempo?</p> <p>Maneira 1: \"Protocolo de Retorno de Chamada\" (Promise com <code>.then()</code>) Voc\u00ea envia um comando e d\u00e1 uma instru\u00e7\u00e3o: \"QUANDO a resposta chegar, ENT\u00c3O execute esta fun\u00e7\u00e3o\". Isso \u00e9 parecido com uma cadeia de eventos.</p> <p>Maneira 2: \"Modo de Espera\" (Async/await) Voc\u00ea diz: \"Eu VOU ESPERAR a resposta para este comando, mas n\u00e3o vou bloquear outros consoles de controle\". \u00c9 como se voc\u00ea pausasse a execu\u00e7\u00e3o desta tarefa espec\u00edfica, permitindo que o resto do CCM continue trabalhando.</p> <p>Ambas as maneiras resolvem a mesma tarefa \u2014 gerenciar opera\u00e7\u00f5es ass\u00edncronas. <code>async/await</code> \u00e9 simplesmente uma sintaxe mais moderna e leg\u00edvel que funciona \"em cima\" das promises.</p> <p>\ud83d\udca1 Analogia espacial:</p> <ul> <li>Promise com <code>.then()</code>: \u00c9 como escrever num post-it: \"Quando o rover de Marte enviar a foto, encaminh\u00e1-la para o departamento de an\u00e1lise\".</li> <li>Async/await: \u00c9 como dizer ao assistente: \"Espere pela foto do rover de Marte, enquanto isso vou fazer os c\u00e1lculos para o lan\u00e7amento de um novo foguete\".</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/5/#2-promise-com-then-cadeia-de-comandos-classica","title":"2. Promise com <code>.then()</code>: Cadeia de comandos cl\u00e1ssica","text":"<p>Esta \u00e9 a maneira fundamental de trabalhar com assincronicidade em JavaScript, que usamos no Cap\u00edtulo 4.1.</p> <p>Vamos relembrar nosso primeiro c\u00f3digo: <pre><code>function getIssPositionWithPromises() {\n    console.log('Enviando solicita\u00e7\u00e3o via protocolo \"Promise\"...');\n\n    fetch('http://api.open-notify.org/iss-now.json')\n        .then(response =&gt; {\n            // Etapa 1: Resposta recebida\n            if (!response.ok) {\n                throw new Error(`Erro HTTP: ${response.status}`);\n            }\n            return response.json(); // Retornamos uma nova promise\n        })\n        .then(data =&gt; {\n            // Etapa 2: Dados analisados\n            console.log('Dados via protocolo \"Promise\" recebidos:', data.iss_position);\n        })\n        .catch(error =&gt; {\n            // Etapa 3 (Erro): Algo deu errado em qualquer uma das etapas\n            console.error('Falha de comunica\u00e7\u00e3o via protocolo \"Promise\":', error);\n        });\n\n    console.log('...comando enviado, CCM continua trabalhando...');\n}\n</code></pre></p> <p>Vantagens:</p> <ul> <li>Cadeia expl\u00edcita de a\u00e7\u00f5es.</li> <li>Adequado para opera\u00e7\u00f5es sequenciais simples.</li> </ul> <p>Desvantagens:</p> <ul> <li>\"Inferno de Callbacks\" (Callback Hell): Com um grande n\u00famero de opera\u00e7\u00f5es ass\u00edncronas aninhadas, o c\u00f3digo pode se transformar numa \"escadaria\" de <code>.then()</code>, o que dificulta a leitura.</li> <li>O tratamento de erros pode ser menos intuitivo.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/5/#3-asyncawait-estilo-sincrono-moderno","title":"3. Async/await: Estilo s\u00edncrono moderno","text":"<p><code>async/await</code> \u00e9 \"a\u00e7\u00facar sint\u00e1tico\" sobre promises, que permite escrever c\u00f3digo ass\u00edncrono como se fosse s\u00edncrono.</p> <p>Regras de uso:</p> <ol> <li>A palavra-chave <code>await</code> pode ser usada apenas dentro de uma fun\u00e7\u00e3o marcada como <code>async</code>.</li> <li><code>await</code> \u00e9 colocado antes de uma chamada que retorna uma promise (por exemplo, <code>fetch()</code> ou <code>response.json()</code>).</li> <li><code>await</code> \"pausa\" a execu\u00e7\u00e3o da fun\u00e7\u00e3o <code>async</code> at\u00e9 que a promise seja resolvida, e retorna o seu resultado.</li> </ol> <p>O mesmo c\u00f3digo, reescrito com <code>async/await</code>: <pre><code>async function getIssPositionWithAsyncAwait() {\n    console.log('Enviando solicita\u00e7\u00e3o via protocolo \"Async/await\"...');\n\n    try {\n        // Etapa 1: Esperando resposta do servidor\n        const response = await fetch('http://api.open-notify.org/iss-now.json');\n\n        if (!response.ok) {\n            throw new Error(`Erro HTTP: ${response.status}`);\n        }\n\n        // Etapa 2: Esperando que o corpo da resposta seja convertido para JSON\n        const data = await response.json();\n\n        console.log('Dados via protocolo \"Async/await\" recebidos:', data.iss_position);\n    } catch (error) {\n        // Etapa 3 (Erro): Capturamos qualquer erro do bloco try\n        console.error('Falha de comunica\u00e7\u00e3o via protocolo \"Async/await\":', error);\n    }\n\n    console.log('...comando enviado, CCM continua trabalhando...');\n}\n</code></pre></p> <p>Vantagens:</p> <ul> <li>Legibilidade: O c\u00f3digo parece quase um c\u00f3digo s\u00edncrono comum, \u00e9 f\u00e1cil de ler de cima para baixo.</li> <li>Tratamento de erros: Usa o bloco <code>try...catch</code> padr\u00e3o e familiar.</li> <li>Depura\u00e7\u00e3o: Muito mais f\u00e1cil de depurar, pois voc\u00ea pode colocar pontos de interrup\u00e7\u00e3o (breakpoints) em cada linha com <code>await</code>.</li> </ul> <p>Desvantagens:</p> <ul> <li>F\u00e1cil esquecer <code>await</code> ou <code>async</code>, o que levar\u00e1 a erros.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/5/#4-quando-usar-qual-protocolo","title":"4. Quando usar qual protocolo?","text":"Situa\u00e7\u00e3o Abordagem recomendada Porqu\u00ea? Maioria dos casos <code>async/await</code> O c\u00f3digo \u00e9 mais limpo, mais f\u00e1cil de ler e depurar. Este \u00e9 o padr\u00e3o moderno. Cadeia simples de 1-2 a\u00e7\u00f5es Promise com <code>.then()</code> Totalmente adequado, o c\u00f3digo permanece compacto. Execu\u00e7\u00e3o paralela de v\u00e1rias requisi\u00e7\u00f5es <code>Promise.all()</code> Este m\u00e9todo permite executar v\u00e1rias promises simultaneamente e esperar que todas sejam conclu\u00eddas. <code>async/await</code> combina perfeitamente com ele. <p>Exemplo com <code>Promise.all()</code>: <pre><code>async function getParallelData() {\n    try {\n        // Executamos ambas as requisi\u00e7\u00f5es simultaneamente\n        const [shipsResponse, launchesResponse] = await Promise.all([\n            fetch('https://api.spacexdata.com/v4/rockets'),\n            fetch('https://api.spacexdata.com/v4/launches/latest')\n        ]);\n\n        if (!shipsResponse.ok || !launchesResponse.ok) {\n            throw new Error('Uma das requisi\u00e7\u00f5es falhou!');\n        }\n\n        const rockets = await shipsResponse.json();\n        const latestLaunch = await launchesResponse.json();\n\n        console.log(`Total de foguetes na frota: ${rockets.length}`);\n        console.log(`\u00daltimo lan\u00e7amento: ${latestLaunch.name}`);\n    } catch (error) {\n        console.error('Erro ao obter dados paralelos:', error);\n    }\n}\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/5/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. `async/await` \u00e9...</p>  a) Uma substitui\u00e7\u00e3o para promises que funciona de forma diferente  b) Uma sintaxe mais conveniente para trabalhar com promises  c) Uma maneira de tornar o JavaScript s\u00edncrono <p>2. Qual palavra-chave \u00e9 obrigat\u00f3ria para uma fun\u00e7\u00e3o dentro da qual `await` \u00e9 usado?</p>  a) `promise`  b) `function`  c) `async` <p>3. A principal vantagem de `async/await` sobre `.then()`:</p>  a) Maior velocidade de execu\u00e7\u00e3o  b) Melhor legibilidade do c\u00f3digo e tratamento de erros conveniente via `try...catch`  c) Funciona em navegadores antigos sem polyfills <p>4. O que acontece se voc\u00ea esquecer `await` antes de `fetch()` dentro de uma fun\u00e7\u00e3o `async`?</p>  a) O c\u00f3digo ser\u00e1 executado sem erros, mas a vari\u00e1vel conter\u00e1 uma promise, n\u00e3o o resultado  b) JavaScript ir\u00e1 emitir um erro de sintaxe  c) A p\u00e1gina \"travar\u00e1\" esperando a resposta <p>5. `Promise.all()` \u00e9 usado para:</p>  a) Executar promises estritamente em ordem  b) Iniciar v\u00e1rias promises em paralelo e esperar por todas elas  c) Escolher a promise mais r\u00e1pida entre v\u00e1rias Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea aprendeu duas sintaxes para gerenciar opera\u00e7\u00f5es ass\u00edncronas e entendeu por que <code>async/await</code> \u00e9 prefer\u00edvel na maioria dos projetos modernos.</p> <ul> <li>\ud83d\udd17 Voc\u00ea revisou seus conhecimentos sobre Promise com <code>.then()</code>.</li> <li>\ud83d\udee0\ufe0f Voc\u00ea compreendeu profundamente como funciona <code>async/await</code> e suas vantagens.</li> <li>\u26a1 Voc\u00ea aprendeu sobre <code>Promise.all</code> para executar requisi\u00e7\u00f5es paralelas.</li> </ul> <p>Protocolos de comunica\u00e7\u00e3o aprendidos! No cap\u00edtulo final desta se\u00e7\u00e3o, reuniremos todo o nosso conhecimento e construiremos nosso \"Centro de Controle de Voo\", criando uma interface completa para todas as opera\u00e7\u00f5es CRUD.</p> <p>\ud83d\udccc Pr\u00e1tica:</p> <ul> <li>Reescreva todas as fun\u00e7\u00f5es em seu <code>app.js</code> que ainda usam <code>.then()</code>, para a sintaxe <code>async/await</code>.</li> <li>Tente adicionar mais uma requisi\u00e7\u00e3o a <code>Promise.all()</code> (por exemplo, para <code>https://api.spacexdata.com/v4/starlink</code>) e exiba os dados.</li> </ul> <p>\u26a0\ufe0f Se houver erros:</p> <ul> <li><code>await is only valid in async functions</code>: Certifique-se de que a fun\u00e7\u00e3o onde voc\u00ea usa <code>await</code> esteja marcada como <code>async</code>.</li> <li><code>A vari\u00e1vel cont\u00e9m [object Promise]</code>: Voc\u00ea esqueceu de colocar <code>await</code> antes da fun\u00e7\u00e3o que retorna uma promise.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/6/","title":"Cap\u00edtulo 4.6: Cria\u00e7\u00e3o de uma Interface Simples para API","text":"<p>Tempo de estudo: 1 hora e 15 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/6/#1-montagem-final-lancamento-do-centro-de-controle-de-missoes","title":"1. Montagem Final: Lan\u00e7amento do \"Centro de Controle de Miss\u00f5es\"","text":"<p>Estudamos todos os sistemas separadamente: configuramos a \"antena\" (<code>Fetch</code>), aprendemos a enviar \"comandos\" (<code>GET</code>, <code>POST</code>, <code>DELETE</code>), desenvolvemos \"protocolos de emerg\u00eancia\" (tratamento de erros).</p> <p>Chegou a hora de juntar todos os componentes e lan\u00e7ar o nosso CCM \u2014 uma interface completa e interativa para gerenciar a frota espacial.</p> <p>Nosso objetivo:</p> <ul> <li>Criar uma interface unificada, limpa e clara.</li> <li>Implementar o ciclo CRUD completo: cria\u00e7\u00e3o, exibi\u00e7\u00e3o, atualiza\u00e7\u00e3o e exclus\u00e3o de naves.</li> <li>Adicionar feedback visual para o usu\u00e1rio (carregando, sucesso, erro).</li> </ul> <p>\ud83d\udca1 Analogia Espacial:</p> <p>Estamos a passar de consoles de teste individuais para o ecr\u00e3 principal do CCM. Deve ter todos os bot\u00f5es e indicadores necess\u00e1rios para que um \u00fanico operador possa gerir toda a frota sem ter de alternar entre dezenas de sistemas diferentes.</p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/6/#2-design-da-interface-painel-de-controle","title":"2. Design da Interface: \"Painel de Controle\"","text":"<p>Precisaremos de um HTML mais estruturado. Usaremos \"cart\u00f5es\" para exibir as naves e uma janela modal para edit\u00e1-las.</p> <p>Atualizando <code>index.html</code>: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;CCM v2.0 - Gerenciamento de Frota&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt; &lt;!-- Conectando estilos --&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Painel de controle da frota espacial&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        &lt;section id=\"fleet-controls\"&gt;\n            &lt;button id=\"load-fleet-btn\"&gt;Atualizar lista da frota&lt;/button&gt;\n            &lt;button id=\"show-create-form-btn\"&gt;Lan\u00e7ar nova nave&lt;/button&gt;\n        &lt;/section&gt;\n\n        &lt;section id=\"fleet-display\"&gt;\n            &lt;h2&gt;Composi\u00e7\u00e3o atual da frota&lt;/h2&gt;\n            &lt;div id=\"fleet-list\" class=\"cards-container\"&gt;\n                &lt;!-- Os cart\u00f5es das naves estar\u00e3o aqui --&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n\n    &lt;!-- Janela modal para cria\u00e7\u00e3o/edi\u00e7\u00e3o (inicialmente oculta) --&gt;\n    &lt;div id=\"modal\" class=\"modal-overlay\" style=\"display: none;\"&gt;\n        &lt;div class=\"modal-content\"&gt;\n            &lt;h2 id=\"modal-title\"&gt;Lan\u00e7ar nova nave&lt;/h2&gt;\n            &lt;form id=\"ship-form\"&gt;\n                &lt;input type=\"hidden\" id=\"ship-id\"&gt;\n                &lt;input type=\"text\" id=\"ship-name\" placeholder=\"Nome\" required&gt;\n                &lt;input type=\"text\" id=\"ship-type\" placeholder=\"Tipo\" required&gt;\n                &lt;input type=\"number\" id=\"ship-year\" placeholder=\"Ano de lan\u00e7amento\" required&gt;\n                &lt;input type=\"text\" id=\"ship-status\" placeholder=\"Status\" required&gt;\n                &lt;div class=\"modal-actions\"&gt;\n                    &lt;button type=\"submit\" id=\"save-btn\"&gt;Salvar&lt;/button&gt;\n                    &lt;button type=\"button\" id=\"cancel-btn\"&gt;Cancelar&lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/form&gt;\n            &lt;div id=\"notification-area\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/6/#3-adicionando-design-espacial-stylecss","title":"3. Adicionando design \"espacial\": <code>style.css</code>","text":"<p>Crie o arquivo <code>style.css</code> para que o nosso CCM tenha uma apar\u00eancia digna. <pre><code>/* style.css */\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background-color: #1a1a2e;\n    color: #e0e0e0;\n    margin: 0;\n    padding: 20px;\n}\nheader { text-align: center; margin-bottom: 20px; }\nbutton {\n    background-color: #4a4e69;\n    color: white;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\nbutton:hover { background-color: #6a6e94; }\n.cards-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 20px;\n}\n.card {\n    background-color: #2a2a4e;\n    border: 1px solid #4a4e69;\n    border-radius: 8px;\n    padding: 15px;\n}\n.card h3 { margin-top: 0; color: #9394a5; }\n.card-actions { margin-top: 15px; }\n\n/* Estilos para a janela modal */\n.modal-overlay {\n    position: fixed;\n    top: 0; left: 0;\n    width: 100%; height: 100%;\n    background-color: rgba(0,0,0,0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.modal-content {\n    background: #1a1a2e;\n    padding: 20px;\n    border-radius: 8px;\n    border: 1px solid #4a4e69;\n    width: 90%;\n    max-width: 500px;\n}\n#ship-form input {\n    width: calc(100% - 20px);\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 4px;\n    border: 1px solid #4a4e69;\n    background-color: #2a2a4e;\n    color: white;\n}\n.modal-actions { text-align: right; }\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/6/#4-recompilacao-completa-da-logica-appjs","title":"4. Recompila\u00e7\u00e3o completa da l\u00f3gica: <code>app.js</code>","text":"<p>Agora escreveremos a vers\u00e3o final de <code>app.js</code>, unindo todo o nosso conhecimento. <pre><code>// app.js\n\n// --- Elementos DOM ---\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetListContainer = document.getElementById('fleet-list');\nconst modal = document.getElementById('modal');\nconst modalTitle = document.getElementById('modal-title');\nconst shipForm = document.getElementById('ship-form');\nconst saveBtn = document.getElementById('save-btn');\nconst cancelBtn = document.getElementById('cancel-btn');\nconst showCreateFormBtn = document.getElementById('show-create-form-btn');\nconst notificationArea = document.getElementById('notification-area');\n\n// --- Fun\u00e7\u00f5es para UI ---\n\nfunction showNotification(message, isError = false) {\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? '#ff6b6b' : '#6bff6b';\n}\n\nfunction openModalForCreate() {\n    shipForm.reset();\n    document.getElementById('ship-id').value = '';\n    modalTitle.textContent = 'Lan\u00e7ar nova espa\u00e7onave';\n    modal.style.display = 'flex';\n}\n\nfunction openModalForEdit(ship) {\n    shipForm.reset();\n    document.getElementById('ship-id').value = ship.id;\n    document.getElementById('ship-name').value = ship.name;\n    document.getElementById('ship-type').value = ship.type;\n    document.getElementById('ship-year').value = ship.launch_year;\n    document.getElementById('ship-status').value = ship.status;\n    modalTitle.textContent = `Edi\u00e7\u00e3o: ${ship.name}`;\n    modal.style.display = 'flex';\n}\n\nfunction closeModal() {\n    modal.style.display = 'none';\n    notificationArea.textContent = '';\n}\n\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;Tipo: ${ship.type}&lt;/p&gt;\n        &lt;p&gt;Ano de lan\u00e7amento: ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;Status: ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;Editar&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;Desativar&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n\n// --- L\u00f3gica da API e Exibi\u00e7\u00e3o ---\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;Carregando telemetria...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships');\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;Nenhuma espa\u00e7onave no registro.&lt;/p&gt;';\n            return;\n        }\n        ships.forEach(ship =&gt; {\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;Erro ao carregar frota: ${error.message}&lt;/p&gt;`;\n    }\n}\n\nasync function handleSaveShip(event) {\n    event.preventDefault();\n    const shipId = document.getElementById('ship-id').value;\n    const shipData = {\n        name: document.getElementById('ship-name').value,\n        type: document.getElementById('ship-type').value,\n        launch_year: parseInt(document.getElementById('ship-year').value),\n        status: document.getElementById('ship-status').value\n    };\n\n    try {\n        let response;\n        if (shipId) {\n            // Atualiza\u00e7\u00e3o (PUT)\n            response = await apiRequest(`/spaceships/${shipId}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`Espa\u00e7onave \"${response.name}\" atualizada com sucesso!`);\n        } else {\n            // Cria\u00e7\u00e3o (POST)\n            response = await apiRequest('/spaceships', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`Espa\u00e7onave \"${response.name}\" lan\u00e7ada com sucesso! ID: ${response.id}`);\n        }\n\n        setTimeout(() =&gt; {\n            closeModal();\n            fetchAndDisplayFleet();\n        }, 1500);\n\n    } catch (error) {\n        showNotification(error.message, true);\n    }\n}\n\nasync function handleDeleteShip(shipId) {\n    if (!confirm(`Tem certeza de que deseja desativar a espa\u00e7onave com ID ${shipId}?`)) return;\n\n    try {\n        await apiRequest(`/spaceships/${shipId}`, { method: 'DELETE' });\n        alert('Espa\u00e7onave desativada com sucesso.');\n        fetchAndDisplayFleet();\n    } catch (error) {\n        alert(`Erro ao desativar: ${error.message}`);\n    }\n}\n\n// --- Manipuladores de Eventos ---\n\ndocument.addEventListener('DOMContentLoaded', fetchAndDisplayFleet);\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\nshowCreateFormBtn.addEventListener('click', openModalForCreate);\ncancelBtn.addEventListener('click', closeModal);\nshipForm.addEventListener('submit', handleSaveShip);\n\nfleetListContainer.addEventListener('click', async (event) =&gt; {\n    const target = event.target;\n    if (target.classList.contains('delete-btn')) {\n        handleDeleteShip(target.dataset.shipId);\n    }\n    if (target.classList.contains('edit-btn')) {\n        try {\n            const ship = await apiRequest(`/spaceships/${target.dataset.shipId}`);\n            openModalForEdit(ship);\n        } catch (error) {\n            alert(`N\u00e3o foi poss\u00edvel carregar os dados para edi\u00e7\u00e3o: ${error.message}`);\n        }\n    }\n});\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/6/#5-testes-finais","title":"5. Testes Finais","text":"<ol> <li>Inicie o servidor FastAPI: <code>uvicorn main:app --reload</code></li> <li>Abra <code>index.html</code> no navegador (via Live Server).</li> <li>Verifique o ciclo completo:<ul> <li>A lista de naves deve carregar automaticamente.</li> <li>Clique em \"Lan\u00e7ar nova espa\u00e7onave\", preencha o formul\u00e1rio e salve. Certifique-se de que a nova espa\u00e7onave aparece na lista.</li> <li>Clique em \"Editar\" em qualquer espa\u00e7onave, altere os dados e salve. Certifique-se de que a informa\u00e7\u00e3o foi atualizada.</li> <li>Clique em \"Desativar\" em qualquer espa\u00e7onave, confirme a a\u00e7\u00e3o. Certifique-se de que ela desapareceu da lista.</li> <li>Verifique todos os cen\u00e1rios de erro (dados inv\u00e1lidos, servidor parado).</li> </ul> </li> </ol>"},{"location":"pt/Cap%C3%ADtulo%204%20-%20Trabalhando%20com%20a%20API%20do%20front-end/6/#questionario-de-fixacao","title":"Question\u00e1rio de Fixa\u00e7\u00e3o","text":"<p>1. Uma janela modal em uma interface web \u00e9...</p>  a) Uma nova tag em HTML6  b) Um di\u00e1logo pop-up que bloqueia o restante da interface  c) Uma janela para exibir erros do console <p>2. O evento `DOMContentLoaded` ocorre quando...</p>  a) Todas as imagens e estilos foram totalmente carregados  b) O navegador construiu a \u00e1rvore DOM a partir do HTML, mas os recursos ainda podem estar carregando  c) Ocorreu um erro ao carregar a p\u00e1gina <p>3. Por que na vers\u00e3o final usamos um \u00fanico formul\u00e1rio tanto para cria\u00e7\u00e3o quanto para edi\u00e7\u00e3o?</p>  a) Para evitar duplica\u00e7\u00e3o de c\u00f3digo HTML e simplificar a l\u00f3gica  b) Porque o navegador n\u00e3o permite ter mais de um formul\u00e1rio na p\u00e1gina  c) \u00c9 um requisito do FastAPI <p>4. `data-ship-id=\"${ship.id}\"` \u00e9 um exemplo de...</p>  a) Uma classe CSS  b) Uma vari\u00e1vel JavaScript  c) Um atributo de dados personalizado para armazenar dados em HTML <p>5. A refatora\u00e7\u00e3o do c\u00f3digo (por exemplo, mover a l\u00f3gica para `api.js`) \u00e9 necess\u00e1ria para...</p>  a) Dificultar o c\u00f3digo para prote\u00e7\u00e3o contra c\u00f3pia  b) Melhorar a legibilidade, manutenibilidade e reutiliza\u00e7\u00e3o do c\u00f3digo  c) Reduzir o tamanho do arquivo final Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo</p> <p>Voc\u00ea concluiu com sucesso a constru\u00e7\u00e3o e o lan\u00e7amento do seu \"Centro de Controle de Voos\".</p> <ul> <li>\ud83d\udda5\ufe0f Voc\u00ea criou uma interface HTML/CSS estruturada e estilizada.</li> <li>\u2699\ufe0f Voc\u00ea escreveu c\u00f3digo JavaScript limpo e modular, implementando um ciclo CRUD completo.</li> <li>\ud83d\udef0\ufe0f Seu frontend agora pode gerenciar totalmente o backend criado com FastAPI.</li> </ul> <p>Parab\u00e9ns pela conclus\u00e3o bem-sucedida do Cap\u00edtulo 4! Voc\u00ea percorreu todo o caminho, desde o envio de uma simples solicita\u00e7\u00e3o <code>fetch</code> at\u00e9 a cria\u00e7\u00e3o de um aplicativo web completo que interage com sua pr\u00f3pria API.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/1/","title":"Cap\u00edtulo 5.1: Modelos Blade no Laravel","text":"<p>Tempo de estudo: 40 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/1/#1-o-que-e-blade-seu-projeto-inteligente","title":"1. O que \u00e9 Blade? Seu \"projeto\" inteligente","text":"<p>At\u00e9 agora, trabalhamos com dois extremos: um <code>index.html</code> puro e uma resposta JSON pura de uma API. Mas como criar p\u00e1ginas web completas que exibem dados dinamicamente do nosso backend?</p> <p>Blade \u2014 \u00e9 o motor de templates integrado do Laravel. Ele nos permite escrever HTML comum, mas com \"superpoderes\":</p> <ul> <li>Inserir vari\u00e1veis e executar c\u00f3digo PHP com uma sintaxe elegante.</li> <li>Criar \"layouts\" de p\u00e1ginas reutiliz\u00e1veis (cabe\u00e7alhos, rodap\u00e9s).</li> <li>Usar loops e condi\u00e7\u00f5es diretamente no c\u00f3digo HTML.</li> <li>Proteger automaticamente contra ataques XSS.</li> </ul> <p>\ud83d\udca1 Analogia espacial:</p> <p>Imagine que HTML \u00e9 um projeto simples de uma nave espacial. Blade \u00e9 um sistema CAD avan\u00e7ado. Voc\u00ea n\u00e3o apenas desenha linhas, voc\u00ea adiciona objetos \"inteligentes\". Voc\u00ea diz: \"Aqui estar\u00e1 a lista da tripula\u00e7\u00e3o\", e Blade automaticamente solicita os dados e os preenche. \"Aqui estar\u00e1 a tela principal\", e Blade insere a interface padr\u00e3o.</p> <p>Todos os arquivos Blade t\u00eam a extens\u00e3o <code>.blade.php</code> e s\u00e3o armazenados na pasta <code>resources/views/</code>.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/1/#2-fundamentos-da-sintaxe-exibicao-de-dados","title":"2. Fundamentos da Sintaxe: Exibi\u00e7\u00e3o de Dados","text":"<p>A coisa mais simples que o Blade faz \u00e9 exibir dados.</p> <p>Sintaxe <code>{{ }}</code></p> <p>Estas chaves duplas s\u00e3o o comando para o Blade \"pegar uma vari\u00e1vel e exibir seu conte\u00fado de forma segura\".</p> <p>Exemplo:</p> <ol> <li> <p>Rota em <code>routes/web.php</code>: <pre><code>&lt;?php\nRoute::get('/mission-briefing', function () {\n    $mission = 'Explorar o sistema Kepler-186';\n    return view('briefing', ['mission_name' =&gt; $mission]);\n});\n</code></pre></p> <ul> <li><code>view('briefing', ...)</code> diz ao Laravel para encontrar o arquivo <code>resources/views/briefing.blade.php</code>.</li> <li><code>['mission_name' =&gt; $mission]</code> \u2014 \u00e9 um array de dados que \"passamos\" para nossa view.</li> </ul> </li> <li> <p>View em <code>resources/views/briefing.blade.php</code>: <pre><code>&lt;h1&gt;Miss\u00e3o Centro de Comando&lt;/h1&gt;\n&lt;p&gt;Tarefa atual: {{ $mission_name }}&lt;/p&gt;\n</code></pre></p> </li> </ol> <p>Resultado no navegador em <code>/mission-briefing</code>: <pre><code>&lt;h1&gt;Miss\u00e3o Centro de Comando&lt;/h1&gt;\n&lt;p&gt;Tarefa atual: Explorar o sistema Kepler-186&lt;/p&gt;\n</code></pre></p> <p>\ud83d\udee1\ufe0f Importante saber: Blade escapa automaticamente todos os dados dentro de <code>{{ }}</code>. Isso significa que, se uma vari\u00e1vel contiver tags HTML ou um script malicioso, eles ser\u00e3o exibidos como texto comum, e n\u00e3o executados. Esta \u00e9 uma prote\u00e7\u00e3o integrada contra ataques XSS.</p> <p>Para exibir HTML n\u00e3o escapado (fa\u00e7a isso com cautela!) usa-se a sintaxe <code>{!! $variable !!}</code>.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/1/#3-diretivas-adicionando-logica-ao-html","title":"3. Diretivas: Adicionando L\u00f3gica ao HTML","text":"<p>As diretivas Blade come\u00e7am com o s\u00edmbolo <code>@</code>. Elas permitem usar loops, condi\u00e7\u00f5es e muito mais.</p> <p>Condi\u00e7\u00f5es (<code>@if</code>, <code>@else</code>): <pre><code>@if($planet-&gt;is_habitable)\n    &lt;p style=\"color: green;\"&gt;Planeta habit\u00e1vel!&lt;/p&gt;\n@else\n    &lt;p style=\"color: red;\"&gt;Requer traje espacial. Atmosfera hostil.&lt;/p&gt;\n@endif\n</code></pre></p> <p>Loops (<code>@foreach</code>, <code>@forelse</code>):</p> <p><code>@forelse</code> \u2014 \u00e9 uma diretiva muito conveniente que combina um loop e uma verifica\u00e7\u00e3o de vazio. <pre><code>&lt;h2&gt;Lista de planetas no sistema:&lt;/h2&gt;\n&lt;ul&gt;\n    @forelse($planets as $planet)\n        &lt;li&gt;\n            {{ $loop-&gt;iteration }}. {{ $planet-&gt;name }}\n            &lt;!-- $loop - vari\u00e1vel especial dispon\u00edvel no loop --&gt;\n        &lt;/li&gt;\n    @empty\n        &lt;li&gt;Nenhum planeta foi detectado neste sistema.&lt;/li&gt;\n    @endforelse\n&lt;/ul&gt;\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/1/#4-layouts-e-secoes-nao-se-repita-dry","title":"4. Layouts e Se\u00e7\u00f5es: N\u00e3o Se Repita (DRY)","text":"<p>A funcionalidade mais poderosa do Blade \u00e9 a cria\u00e7\u00e3o de layouts reutiliz\u00e1veis. Voc\u00ea n\u00e3o precisa copiar o cabe\u00e7alho e o rodap\u00e9 do site para cada p\u00e1gina.</p> <p>Passo 1: Criar um layout mestre (<code>layout</code>)</p> <p>Crie o arquivo <code>resources/views/layouts/app.blade.php</code>: <pre><code>&lt;?php\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"pt\"&gt;\n&lt;head&gt;\n    &lt;title&gt;Centro de Comando - @yield('title')&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"{{ asset('css/style.css') }}\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Centro de Comando da Frota Gal\u00e1ctica&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        @yield('content') &lt;!-- O conte\u00fado exclusivo da p\u00e1gina vir\u00e1 aqui --&gt;\n    &lt;/main&gt;\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command. Todos os direitos reservados.&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> -   <code>@yield('title')</code> e <code>@yield('content')</code> \u2014 s\u00e3o \"slots\" ou \"marcadores de posi\u00e7\u00e3o\".</p> <p>Passo 2: Criar uma view filha que usa o layout</p> <p>Crie o arquivo <code>resources/views/planets/index.blade.php</code>: <pre><code>&lt;?php\n@extends('layouts.app') {{-- Herdamos nosso layout mestre --}}\n\n@section('title', 'Lista de planetas') {{-- Preenchemos a se\u00e7\u00e3o 'title' --}}\n\n@section('content') {{-- Preenchemos a se\u00e7\u00e3o principal 'content' --}}\n    &lt;h2&gt;Planetas Registrados&lt;/h2&gt;\n    &lt;p&gt;Esta \u00e9 uma lista de todos os mundos conhecidos por n\u00f3s.&lt;/p&gt;\n    {{-- Seu loop @forelse para exibir planetas pode vir aqui --}}\n@endsection\n</code></pre></p> <p>Agora, quando o Laravel renderizar <code>planets.index</code>, ele primeiro pegar\u00e1 <code>layouts.app</code> e ent\u00e3o inserir\u00e1 o conte\u00fado das se\u00e7\u00f5es <code>@section</code> nele.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/1/#quiz-para-fixacao","title":"Quiz para Fixa\u00e7\u00e3o","text":"<p>1. Qual \u00e9 a extens\u00e3o dos arquivos de template Blade?</p>  a) .html  b) .blade.php  c) .php.blade <p>2. Como exibir com seguran\u00e7a a vari\u00e1vel `$name` no Blade?</p>  a)   b) {{ $name }}  c) [[$name]] <p>3. Qual diretiva \u00e9 usada para herdar um layout mestre?</p>  a) @include('layouts.app')  b) @layout('layouts.app')  c) @extends('layouts.app') <p>4. O que a diretiva `@yield('content')` faz?</p>  a) Define um placeholder (local para inserir conte\u00fado)  b) Insere o conte\u00fado do arquivo `content.blade.php`  c) Finaliza a se\u00e7\u00e3o de conte\u00fado <p>5. Qual diretiva \u00e9 ideal para iterar sobre um array que pode estar vazio?</p>  a) @foreach  b) @while  c) @forelse Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea aprendeu os fundamentos do Blade \u2014 uma ferramenta poderosa para criar p\u00e1ginas web din\u00e2micas. Agora voc\u00ea sabe:</p> <ul> <li>Exibir dados com prote\u00e7\u00e3o autom\u00e1tica contra XSS.</li> <li>Usar diretivas para adicionar l\u00f3gica (<code>@if</code>, <code>@forelse</code>).</li> <li>Criar layouts reutiliz\u00e1veis usando <code>@extends</code> e <code>@yield</code>. N\u00f3s preparamos \"projetos\" para os pain\u00e9is de controle da nossa nave. No pr\u00f3ximo cap\u00edtulo, n\u00f3s criaremos \"pain\u00e9is\" (vis\u00f5es) espec\u00edficos para a nossa API e exibiremos dados reais neles.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/2/","title":"Cap\u00edtulo 5.2: Criando Vis\u00f5es Simples para API","text":"<p>Tempo de estudo: 45 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/2/#1-tarefa-visualizar-dados","title":"1. Tarefa: Visualizar dados","text":"<p>Nossa API no Cap\u00edtulo 2 \u00e9 capaz de fornecer dados no formato JSON. Isso \u00e9 excelente para m\u00e1quinas, mas as pessoas preferem ver as informa\u00e7\u00f5es em p\u00e1ginas web bem projetadas. Nosso objetivo \u00e9 criar duas dessas p\u00e1ginas:</p> <ol> <li>Lista de todos os planetas (<code>/planets</code>)</li> <li>P\u00e1gina de um \u00fanico planeta (<code>/planets/{id}</code>)</li> </ol> <p>Para isso, usaremos a combina\u00e7\u00e3o \"Rota \u2192 Controlador \u2192 Vis\u00e3o\".</p> <p>\ud83d\udca1 Analogia espacial:</p> <p>Imagine que o JSON da API s\u00e3o dados brutos de telemetria, apenas um fluxo de n\u00fameros. Nossa tarefa hoje \u00e9 criar dois monitores (duas \"vis\u00f5es\") no Centro de Controle de Miss\u00e3o:</p> <ul> <li>Tela geral: mostra o status de todos os objetos no sistema (lista de planetas).</li> <li>Tela detalhada: ao clicar em um objeto, exibe todas as informa\u00e7\u00f5es sobre ele (p\u00e1gina de um planeta).</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/2/#2-passo-1-criando-um-controlador-para-paginas-web","title":"2. Passo 1: Criando um controlador para p\u00e1ginas web","text":"<p>Para a pureza da arquitetura, n\u00e3o se deve misturar a l\u00f3gica da API e a l\u00f3gica das p\u00e1ginas web em um \u00fanico controlador. Criaremos um novo controlador especificamente para exibir nossas views Blade.</p> <p>Execute no terminal: <pre><code>php artisan make:controller Web/PlanetPageController\n</code></pre> Estamos criando-o na subpasta <code>Web</code> para separ\u00e1-lo dos controladores de API.</p> <p>Abra o arquivo criado <code>app/Http/Controllers/Web/PlanetPageController.php</code>.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/2/#passo-2-pagina-com-a-lista-de-todos-os-planetas","title":"Passo 2: P\u00e1gina com a lista de todos os planetas","text":"<p>1. Criando um m\u00e9todo no controlador: Em <code>PlanetPageController</code>, adicione o m\u00e9todo <code>index</code>, que obter\u00e1 todos os planetas do banco de dados e os passar\u00e1 para a view. <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers\\Web;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Planet; // N\u00e3o se esque\u00e7a de importar o modelo\n\nclass PlanetPageController extends Controller\n{\n    /**\n     * Mostra a p\u00e1gina com a lista de todos os planetas.\n     */\n    public function index()\n    {\n        // 1. Obt\u00e9m todos os planetas do BD\n        $planets = Planet::all();\n\n        // 2. Retorna a view e passa os dados para ela\n        return view('planets.index', ['planets' =&gt; $planets]);\n    }\n}\n</code></pre></p> <p>2. Criando uma view Blade: Crie o arquivo <code>resources/views/planets/index.blade.php</code>. Usaremos o layout criado no cap\u00edtulo anterior.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Planets&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n        }\n        .container {\n            max-width: 960px;\n            margin: 0 auto;\n        }\n        h2 {\n            color: #1a202c;\n        }\n        hr {\n            border: none;\n            border-top: 1px solid #e2e8f0;\n            margin: 1.5em 0;\n        }\n        .planet-list {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n            gap: 1.5em;\n        }\n        .planet-card {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 1.5em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n            transition: transform 0.2s;\n        }\n        .planet-card:hover {\n            transform: translateY(-5px);\n        }\n        .planet-card h3 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-card p {\n            margin-bottom: 0.5em;\n            color: #4a5568;\n        }\n        .planet-card a {\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .planet-card a:hover {\n            text-decoration: underline;\n        }\n        .no-planets {\n            color: #718096;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h2&gt;Lista de todos os planetas conhecidos&lt;/h2&gt;\n        &lt;hr&gt;\n        &lt;div class=\"planet-list\"&gt;\n            @forelse($planets as $planet)\n                &lt;div class=\"planet-card\"&gt;\n                    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n                    &lt;p&gt;Sistema Solar: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n                    &lt;p&gt;Di\u00e2metro: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n                    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;Saber mais &amp;rarr;&lt;/a&gt;\n                &lt;/div&gt;\n            @empty\n                &lt;p class=\"no-planets\"&gt;N\u00e3o h\u00e1 nenhum planeta no banco de dados. Por favor, execute os seeders.&lt;/p&gt;\n            @endforelse\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li><code>number_format(...)</code> \u2014 \u00e9 uma fun\u00e7\u00e3o PHP comum para formatar n\u00fameros de forma elegante. Pode ser usada diretamente no Blade.</li> </ul> <p>3. Criando uma rota em <code>routes/web.php</code>: <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// ...\n\nRoute::get('/planets', [PlanetPageController::class, 'index']);\n</code></pre> Agora, se voc\u00ea navegar para <code>/planets</code> no navegador, voc\u00ea ver\u00e1 a p\u00e1gina com a lista de planetas!</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/2/#4-passo-3-pagina-de-um-unico-planeta","title":"4. Passo 3: P\u00e1gina de um \u00fanico planeta","text":"<p>1. Criando um m\u00e9todo no controlador:</p> <p>Em <code>PlanetPageController</code>, adicionaremos o m\u00e9todo <code>show</code>. Gra\u00e7as ao Route Model Binding, Laravel encontrar\u00e1 automaticamente o planeta pelo ID e o passar\u00e1 para o m\u00e9todo.</p> <pre><code>&lt;?php\n// Dentro da classe PlanetPageController\n/**\n * Mostra a p\u00e1gina de um planeta espec\u00edfico.\n */\npublic function show(Planet $planet)\n{\n    // O Laravel j\u00e1 encontrou o planeta para n\u00f3s.\n    // Se n\u00e3o for encontrado, ele retornar\u00e1 automaticamente um erro 404.\n\n    return view('planets.show', ['planet' =&gt; $planet]);\n}\n</code></pre> <p>2. Criando uma view Blade:</p> <p>Crie o arquivo <code>resources/views/planets/show.blade.php</code>.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;{{ $planet-&gt;name }}&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n        }\n        .container {\n            max-width: 600px;\n            width: 100%;\n        }\n        .planet-detail {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 2em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n        }\n        .planet-detail h1 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-detail p {\n            margin-bottom: 1em;\n            color: #4a5568;\n            font-size: 1.1em;\n        }\n        .back-link {\n            display: inline-block;\n            margin-top: 1.5em;\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .back-link:hover {\n            text-decoration: underline;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"planet-detail\"&gt;\n            @if($planet-&gt;image_url)\n                &lt;img src=\"{{ $planet-&gt;image_url }}\" alt=\"Image of {{ $planet-&gt;name }}\" style=\"max-width: 100%; height: auto; border-radius: 0.5em; margin-bottom: 1em;\"&gt;\n            @endif\n            &lt;h1&gt;{{ $planet-&gt;name }}&lt;/h1&gt;\n            @if($planet-&gt;description)\n                &lt;p&gt;{{ $planet-&gt;description }}&lt;/p&gt;\n            @endif\n            &lt;p&gt;&lt;strong&gt;Sistema Solar:&lt;/strong&gt; {{ $planet-&gt;solar_system }}&lt;/p&gt;\n            &lt;p&gt;&lt;strong&gt;Di\u00e2metro:&lt;/strong&gt; {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n            &lt;a href=\"/planets\" class=\"back-link\"&gt;&amp;larr; Voltar para a lista de planetas&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>3. Criando uma rota em <code>routes/web.php</code>: <pre><code>// Adicione esta rota ap\u00f3s a rota para /planets\nRoute::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n</code></pre> -   O nome do par\u00e2metro <code>{planet}</code> deve corresponder ao nome da vari\u00e1vel no m\u00e9todo do controlador (<code>show(Planet $planet)</code>) para que o Route Model Binding funcione corretamente.</p> <p>Agora, ao clicar no link \"Saber mais\" na p\u00e1gina da lista, voc\u00ea ser\u00e1 direcionado para a p\u00e1gina detalhada de um planeta espec\u00edfico.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/2/#quiz-para-consolidacao","title":"Quiz para consolida\u00e7\u00e3o","text":"<p>1. Qual abordagem \u00e9 a melhor pr\u00e1tica para separar a l\u00f3gica da API e das p\u00e1ginas web?</p>  a) Usar um \u00fanico controlador para tudo  b) Criar controladores separados (por exemplo, nas pastas `Web` e `Api`)  c) Colocar toda a l\u00f3gica no arquivo de rotas <p>2. O que faz return view('planets.index', ['planets' =&gt; $planets]);?</p>  a) Retorna um array JSON com dados sobre os planetas  b) Renderiza o arquivo resources/views/planets/index.blade.php e passa a vari\u00e1vel `$planets` para ele  c) Redireciona para a URL /planets/index <p>3. O que \u00e9 Route Model Binding no contexto de `show(Planet $planet)`?</p>  a) Laravel liga manualmente a rota ao modelo na configura\u00e7\u00e3o  b) Laravel encontra automaticamente um registro `Planet` no BD pelo par\u00e2metro da URL (`{planet}`)  c) Laravel cria um novo planeta se ele n\u00e3o for encontrado <p>4. Como \u00e9 poss\u00edvel formatar a data do campo `created_at` no Blade?</p>  a) {{ $planet-&gt;created_at-&gt;format('Y-m-d') }}  b) {{ format_date($planet-&gt;created_at) }}  c) Isso s\u00f3 pode ser feito no controlador <p>5. Se a rota especifica `/posts/{post}`, como deve ser a assinatura do m\u00e9todo no controlador para que o Route Model Binding funcione?</p>  a) public function show(Post $post)  b) public function show(Post $p)  c) public function show($post) Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea criou com sucesso uma \"vitrine\" para sua API, usando a arquitetura Laravel MVC. Agora voc\u00ea tem:</p> <ul> <li>Um controlador separado para a l\u00f3gica das p\u00e1ginas web.</li> <li>Uma p\u00e1gina din\u00e2mica com uma lista de todos os planetas, obtendo dados do BD.</li> <li>Uma p\u00e1gina de detalhes para cada planeta usando Route Model Binding.</li> <li>Duas rotas web em <code>routes/web.php</code> para acessar essas p\u00e1ginas.</li> </ul> <p>Voc\u00ea transformou dados brutos em informa\u00e7\u00f5es compreens\u00edveis e \u00fateis para o usu\u00e1rio. No pr\u00f3ximo cap\u00edtulo, adicionaremos interatividade, incorporando JavaScript em nossas views Blade para interagir com a API sem recarregar a p\u00e1gina.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/3/","title":"Cap\u00edtulo 5.3: Incorporando JavaScript em Laravel Views","text":"<p>Tempo de estudo: 50 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/3/#1-duas-abordagens-para-javascript-na-web","title":"1. Duas abordagens para JavaScript na Web","text":"<p>At\u00e9 agora, trabalhamos com Server-Side Rendering (SSR) \u2014 o servidor (Laravel) gerava o HTML pronto (via Blade) e o enviava para o navegador. Isso \u00e9 excelente para SEO e carregamento r\u00e1pido da primeira p\u00e1gina.</p> <p>Agora adicionaremos Client-Side Interactions \u2014 o navegador, ap\u00f3s carregar a p\u00e1gina, executar\u00e1 c\u00f3digo JavaScript para:</p> <ul> <li>Enviar requisi\u00e7\u00f5es \u00e0 nossa API sem recarregar a p\u00e1gina.</li> <li>Atualizar dinamicamente partes da p\u00e1gina (por exemplo, adicionando um novo planeta \u00e0 lista).</li> <li>Exibir notifica\u00e7\u00f5es e janelas modais.</li> </ul> <p>\ud83d\udca1 Analogia Espacial:</p> <p>Imagine que SSR \u00e9 receber um mapa completo do sistema estelar, impresso no Centro de Controle de Miss\u00f5es (servidor). Voc\u00ea v\u00ea todos os objetos no momento da impress\u00e3o.</p> <p>Client-Side JS \u00e9 o seu tablet pessoal (navegador), que se comunica em tempo real com os sat\u00e9lites (API) e atualiza a posi\u00e7\u00e3o dos objetos no seu mapa, sem solicitar um novo mapa em papel do CCM.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/3/#2-onde-armazenar-e-como-incluir-o-codigo-js","title":"2. Onde armazenar e como incluir o c\u00f3digo JS","text":"<p>Como j\u00e1 descobrimos, todos os ativos p\u00fablicos (CSS, JS, imagens) devem estar na pasta <code>public</code>.</p> <p>Estrutura Correta:</p> <ol> <li>Arquivos Originais: Todo o seu c\u00f3digo JS principal deve estar em <code>public/js/</code>. Por exemplo, <code>public/js/planets.js</code>.</li> <li>Inclus\u00e3o no Blade: Use o helper <code>asset()</code> para gerar o URL correto.</li> </ol> <p>Exemplo de inclus\u00e3o no layout <code>layouts/app.blade.php</code>: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    {{-- ... --}}\n&lt;/head&gt;\n&lt;body&gt;\n    {{-- ... header e main ... --}}\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command.&lt;/p&gt;\n    &lt;/footer&gt;\n\n    {{-- Scripts s\u00e3o melhores para incluir no final do body para acelerar a renderiza\u00e7\u00e3o da p\u00e1gina --}}\n    &lt;script src=\"{{ asset('js/planets.js') }}\"&gt;&lt;/script&gt;\n    @stack('scripts') {{-- Criamos um \"slot\" para scripts de uma p\u00e1gina espec\u00edfica --}}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <ul> <li><code>@stack('scripts')</code> \u2014 esta \u00e9 uma diretiva Blade poderosa. Ela permite que as views filhas \"empurrem\" seu pr\u00f3prio c\u00f3digo JS para este local. Isso \u00e9 \u00fatil quando uma p\u00e1gina precisa de um script exclusivo e outra n\u00e3o.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/3/#3-exemplo-botao-excluir-com-confirmacao","title":"3. Exemplo: Bot\u00e3o \"Excluir\" com confirma\u00e7\u00e3o","text":"<p>Vamos adicionar \u00e0 p\u00e1gina de lista de planetas (<code>planets/index.blade.php</code>) um bot\u00e3o \"Excluir\" para cada planeta, que funcionar\u00e1 via JavaScript e Fetch API.</p> <p>Passo 1: Adicione o bot\u00e3o em <code>resources/views/planets/index.blade.php</code></p> <p>Modifique o cart\u00e3o do planeta, adicionando um bot\u00e3o com data-atributos: <pre><code>{{-- ... dentro do ciclo @forelse ... --}}\n&lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n    &lt;p&gt;Sistema Solar: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n    &lt;p&gt;Di\u00e2metro: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;Saber mais &amp;rarr;&lt;/a&gt;\n    &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"/api/planets/{{ $planet-&gt;id }}\"&gt;\n        Descomissionar\n    &lt;/button&gt;\n&lt;/div&gt;\n&lt;!-- ... Antes da tag de fechamento do body ... --&gt;\n&lt;script src=\"{{ asset('js/planets.js') }}\" defer&gt;&lt;/script&gt;\n</code></pre></p> <ul> <li><code>id=\"planet-card-{{ $planet-&gt;id }}\"</code> \u2014 ID \u00fanico para o cart\u00e3o inteiro, para que possamos remov\u00ea-lo do DOM.</li> <li><code>data-id</code> e <code>data-url</code> \u2014 uma maneira conveniente de passar dados do PHP (Blade) para o JavaScript.</li> </ul> <p>Passo 2: Escreva a l\u00f3gica JavaScript</p> <p>Crie o arquivo <code>public/js/planets.js</code> e adicione o seguinte c\u00f3digo: <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    // Encontra todos os bot\u00f5es \"Excluir\"\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            const planetId = event.target.dataset.id;\n            const apiUrl = event.target.dataset.url;\n\n            if (!confirm(`Tem certeza de que deseja descomissionar o planeta com ID ${planetId}? Esta a\u00e7\u00e3o \u00e9 irrevers\u00edvel.`)) {\n                return; // O usu\u00e1rio clicou em \"Cancelar\"\n            }\n\n            try {\n                // Envia uma requisi\u00e7\u00e3o DELETE para nossa API\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        // Mais tarde adicionaremos o token CSRF aqui\n                    }\n                });\n\n                if (response.status === 204) { // 204 No Content - exclus\u00e3o bem-sucedida\n                    // Remove o cart\u00e3o do planeta da p\u00e1gina\n                    const cardToRemove = document.getElementById(`planet-card-${planetId}`);\n                    if (cardToRemove) {\n                        cardToRemove.remove();\n                    }\n                    alert('Planeta descomissionado com sucesso.');\n                } else {\n                    // Se a API retornou um erro\n                    const errorData = await response.json();\n                    alert(`Erro: ${errorData.message || 'N\u00e3o foi poss\u00edvel descomissionar o planeta.'}`);\n                }\n            } catch (error) {\n                console.error('Erro ao enviar a requisi\u00e7\u00e3o:', error);\n                alert('Ocorreu um erro de rede. Tente novamente.');\n            }\n        });\n    });\n});\n</code></pre></p> <p>Agora, se voc\u00ea atualizar a p\u00e1gina <code>/planets</code>, aparecer\u00e3o os bot\u00f5es \"Descomissionar\", e ao clicar neles, nosso c\u00f3digo JavaScript ser\u00e1 executado!</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/3/#4-passando-dados-de-blade-para-javascript","title":"4. Passando dados de Blade para JavaScript","text":"<p>\u00c0s vezes \u00e9 necess\u00e1rio passar para o JS n\u00e3o apenas uma string, mas um array ou objeto inteiro.</p> <p>Maneira incorreta (vulner\u00e1vel): <pre><code>let planets = {{ $planets }}; // Isso levar\u00e1 a um erro de sintaxe e \u00e9 inseguro\n</code></pre></p> <p>Maneira correta (via JSON): Use a diretiva <code>@json</code>. Ela converte com seguran\u00e7a um array/objeto PHP em um objeto JSON v\u00e1lido.</p> <p>Exemplo em <code>planets/index.blade.php</code>: <pre><code>@extends('layouts.app')\n{{-- ... --}}\n@section('content')\n    {{-- ... --}}\n@endsection\n\n@push('scripts') {{-- \"Empurra\" nosso script para o slot @stack('scripts') no layout --}}\n&lt;script&gt;\n    // Laravel converte com seguran\u00e7a a cole\u00e7\u00e3o $planets em um array JSON\n    const planetsData = @json($planets);\n\n    // Agora podemos trabalhar com este array em JS\n    console.log('Dados dos planetas passados do Blade:', planetsData);\n    alert(`Carregados ${planetsData.length} planetas!`);\n&lt;/script&gt;\n@endpush\n</code></pre></p> <ul> <li><code>@push('scripts')</code> insere o conte\u00fado dentro de <code>@stack('scripts')</code> em <code>layouts/app.blade.php</code>. Isso permite adicionar scripts apenas nas p\u00e1ginas onde eles s\u00e3o realmente necess\u00e1rios.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/3/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. Onde os arquivos JS e CSS p\u00fablicos devem ser armazenados em um projeto Laravel?</p>  a) resources/js  b) storage/app/public  c) public/ <p>2. Qual helper do Blade \u00e9 usado para a gera\u00e7\u00e3o correta de URLs para ativos (JS, CSS)?</p>  a) url()  b) asset()  c) public_path() <p>3. O que o par de diretivas `@push('scripts')` / `@stack('scripts')` faz?</p>  a) Permite que uma view filha adicione seu c\u00f3digo JS em um local espec\u00edfico no layout pai  b) Combina todos os arquivos JS em um s\u00f3  c) Envia o c\u00f3digo JS para o servidor <p>4. Como passar com seguran\u00e7a um array PHP `$data` para JavaScript do Blade?</p>  a) let jsData = {{ $data }};  b) let jsData = '@php echo json_encode($data); @endphp';  c) let jsData = @json($data); <p>5. Por que \u00e9 recomendado incluir scripts JS no final da tag body?</p>  a) Para que n\u00e3o bloqueiem a renderiza\u00e7\u00e3o do conte\u00fado HTML principal da p\u00e1gina  b) \u00c9 um requisito do padr\u00e3o HTML5  c) Assim os scripts s\u00e3o executados mais rapidamente Verificar <p>\ud83d\ude80 Resumo do cap\u00edtulo:</p> <p>Voc\u00ea aprendeu a dar vida a p\u00e1ginas Blade est\u00e1ticas, adicionando l\u00f3gica do lado do cliente. Habilidades essenciais:</p> <ul> <li>Organiza\u00e7\u00e3o e conex\u00e3o corretas de arquivos JS em um projeto Laravel.</li> <li>Uso de atributos <code>data-*</code> para transferir dados de HTML para JS.</li> <li>Intera\u00e7\u00e3o din\u00e2mica com API usando Fetch sem recarregar a p\u00e1gina.</li> <li>Transfer\u00eancia segura de vari\u00e1veis PHP para JavaScript usando a diretiva <code>@json</code>.</li> <li>Organiza\u00e7\u00e3o de scripts usando <code>@push</code> e <code>@stack</code>.</li> </ul> <p>Seus \"pain\u00e9is de controle\" tornaram-se interativos. No entanto, nossas requisi\u00e7\u00f5es de modifica\u00e7\u00e3o (POST, PUT, DELETE) est\u00e3o vulner\u00e1veis agora. No pr\u00f3ximo cap\u00edtulo, adicionaremos um mecanismo de prote\u00e7\u00e3o crucial \u2014 tokens CSRF.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/4/","title":"Cap\u00edtulo 5.4: Trabalhando com Tokens CSRF","text":"<p>Tempo de estudo: 30 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/4/#1-o-que-e-um-ataque-csrf-o-sequestro-da-sua-nave","title":"1. O que \u00e9 um ataque CSRF? O \"Sequestro\" da sua nave","text":"<p>Imagine que voc\u00ea est\u00e1 logado no painel de controle da sua frota espacial (<code>space-api.test</code>). Em uma aba vizinha, voc\u00ea abre um site inofensivo de gatinhos (<code>evil-cats.com</code>). Neste site, h\u00e1 um formul\u00e1rio oculto que envia automaticamente uma requisi\u00e7\u00e3o para o seu site no endere\u00e7o <code>POST /api/planets/1/delete</code>.</p> <p>Como voc\u00ea j\u00e1 est\u00e1 autenticado em <code>space-api.test</code>, seu navegador gentilmente anexar\u00e1 todos os seus cookies a essa requisi\u00e7\u00e3o. O servidor Laravel ver\u00e1 uma sess\u00e3o v\u00e1lida e pensar\u00e1 que foi voc\u00ea quem decidiu desativar o planeta. O planeta ser\u00e1 exclu\u00eddo sem o seu conhecimento.</p> <p>Isso \u00e9 CSRF (Cross-Site Request Forgery) \u2014 um ataque no qual um invasor for\u00e7a o navegador de um usu\u00e1rio autenticado a executar uma a\u00e7\u00e3o indesejada em um site confi\u00e1vel.</p> <p>\ud83d\udca1 Analogia espacial:</p> <p>Voc\u00ea \u00e9 o capit\u00e3o da nave e tem um cart\u00e3o-chave (sess\u00e3o/cookie). O invasor n\u00e3o pode roubar seu cart\u00e3o. Mas ele pode, por engano, fazer voc\u00ea pass\u00e1-lo em um terminal de descarte de recursos enquanto voc\u00ea est\u00e1 distra\u00eddo. O token CSRF \u00e9 como um c\u00f3digo PIN que precisa ser inserido junto com o cart\u00e3o. O invasor n\u00e3o sabe o c\u00f3digo PIN, e seu ataque falha.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/4/#2-como-o-laravel-protege-contra-csrf","title":"2. Como o Laravel protege contra CSRF?","text":"<p>Por padr\u00e3o, o Laravel protege todas as requisi\u00e7\u00f5es web \"inseguras\" (POST, PUT, PATCH, DELETE) usando um token CSRF.</p> <ol> <li>Ao gerar uma p\u00e1gina, o Laravel cria um token \u00fanico e aleat\u00f3rio para a sess\u00e3o do usu\u00e1rio.</li> <li>Este token \u00e9 incorporado nos formul\u00e1rios HTML.</li> <li>Ao enviar o formul\u00e1rio, o token \u00e9 enviado junto com a requisi\u00e7\u00e3o.</li> <li>No servidor, o middleware <code>VerifyCsrfToken</code> compara o token da requisi\u00e7\u00e3o com o token armazenado na sess\u00e3o.</li> <li>Se os tokens n\u00e3o coincidirem, o Laravel interrompe a requisi\u00e7\u00e3o com um erro 419 (Sess\u00e3o Expirada/P\u00e1gina Expirada).</li> </ol> <p>Importante: As rotas de API em <code>routes/api.php</code> n\u00e3o s\u00e3o protegidas por CSRF, pois elas presumem um mecanismo de autentica\u00e7\u00e3o diferente (por exemplo, tokens Sanctum), e n\u00e3o sess\u00f5es baseadas em cookies. Nosso problema atual refere-se especificamente \u00e0s rotas web e p\u00e1ginas que criamos em <code>routes/web.php</code>.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/4/#3-usando-o-token-csrf-em-formularios-html","title":"3. Usando o Token CSRF em Formul\u00e1rios HTML","text":"<p>Este \u00e9 o cen\u00e1rio mais simples. O Laravel fornece uma diretiva Blade especial para isso.</p> <p>Exemplo: Formul\u00e1rio para criar um planeta Vamos criar um formul\u00e1rio simples no arquivo <code>resources/views/planets/create.blade.php</code>:</p> <pre><code>&lt;h2&gt;Formul\u00e1rio para Lan\u00e7amento de um Novo Planeta&lt;/h2&gt;\n&lt;form action=\"/planets\" method=\"POST\"&gt;\n    @csrf {{-- Aqui est\u00e1 a m\u00e1gica! --}}\n\n    &lt;label for=\"name\"&gt;Nome:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;\n\n    &lt;label for=\"solar_system\"&gt;Sistema Solar:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"solar_system\" name=\"solar_system\" required&gt;\n\n    {{-- ... outros campos ... --}}\n\n    &lt;button type=\"submit\"&gt;Lan\u00e7ar&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>A diretiva <code>@csrf</code> gerar\u00e1 automaticamente um campo oculto no formul\u00e1rio: <pre><code>&lt;input type=\"hidden\" name=\"_token\" value=\"j2aK3dLf4gH5...token_\u00fanico...\"&gt;\n</code></pre></p> <p>Isso \u00e9 suficiente para proteger formul\u00e1rios HTML padr\u00e3o.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/4/#4-usando-o-token-csrf-em-requisicoes-ajaxfetch","title":"4. Usando o Token CSRF em Requisi\u00e7\u00f5es AJAX/Fetch","text":"<p>No cap\u00edtulo anterior, enviamos uma requisi\u00e7\u00e3o <code>DELETE</code> usando JavaScript. Agora, o Laravel a bloquear\u00e1 com um erro 419. Precisamos adicionar o token CSRF aos cabe\u00e7alhos da nossa requisi\u00e7\u00e3o Fetch.</p> <p>Passo 1: Tornar o token dispon\u00edvel para JavaScript</p> <p>Adicione uma meta tag com o token na <code>&lt;head&gt;</code> do seu layout mestre <code>resources/views/app.blade.php</code>. Esta \u00e9 uma pr\u00e1tica padr\u00e3o no Laravel.</p> <pre><code>&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n\n    {{-- Adicionamos o token CSRF na meta tag --}}\n    &lt;meta name=\"csrf-token\" content=\"{{ csrf_token() }}\"&gt;\n\n    {{-- ... --}}\n&lt;/head&gt;\n</code></pre> <p>A fun\u00e7\u00e3o <code>csrf_token()</code> retorna o token atual.</p> <p>Passo 2: Modificar o JavaScript para enviar o token</p> <p>Agora, em nosso <code>public/js/planets.js</code>, podemos ler este token e adicion\u00e1-lo aos cabe\u00e7alhos de todas as requisi\u00e7\u00f5es \"inseguras\".</p> <pre><code>// ... no arquivo public/js/planets.js ...\n\ndocument.addEventListener('DOMContentLoaded', () =&gt; {\n    // Obtenha o token da meta tag\n    const csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            // ... l\u00f3gica de confirma\u00e7\u00e3o ...\n\n            try {\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        'X-CSRF-TOKEN': csrfToken // &lt;-- Adicionamos o token nos cabe\u00e7alhos!\n                    }\n                });\n\n                // ... o resto da l\u00f3gica de processamento da resposta ...\n            } catch (error) {\n                // ...\n            }\n        });\n    });\n});\n</code></pre> <ul> <li>O nome do cabe\u00e7alho <code>X-CSRF-TOKEN</code> \u00e9 um padr\u00e3o que o Laravel verifica por padr\u00e3o.</li> </ul> <p>Agora nossas requisi\u00e7\u00f5es AJAX tamb\u00e9m est\u00e3o protegidas. Tente excluir um planeta novamente \u2014 desta vez, a requisi\u00e7\u00e3o ser\u00e1 bem-sucedida.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/4/#questionario-para-fixacao","title":"Question\u00e1rio para Fixa\u00e7\u00e3o","text":"<p>1. Qual ataque o token CSRF previne?</p>  a) Inje\u00e7\u00f5es SQL  b) Cross-site scripting  c) Falsifica\u00e7\u00e3o de requisi\u00e7\u00e3o entre sites <p>2. Qual diretiva Blade adiciona um campo oculto com o token CSRF a um formul\u00e1rio?</p>  a) @token  b) @csrf  c) @form_token <p>3. O que acontece se uma requisi\u00e7\u00e3o POST for enviada para uma rota web sem o token CSRF?</p>  a) Erro 500 (Erro Interno do Servidor)  b) Erro 403 (Proibido)  c) Erro 419 (P\u00e1gina Expirada / Sess\u00e3o Expirada) <p>4. Qual cabe\u00e7alho HTTP padr\u00e3o \u00e9 usado para enviar o token CSRF em requisi\u00e7\u00f5es AJAX?</p>  a) Authorization  b) X-CSRF-TOKEN  c) Content-Type <p>5. Por que as rotas de API (`routes/api.php`) n\u00e3o usam prote\u00e7\u00e3o CSRF por padr\u00e3o?</p>  a) Porque s\u00e3o projetadas para autentica\u00e7\u00e3o sem estado  b) \u00c9 um erro no Laravel, elas precisam ser ativadas manualmente  c) Porque requisi\u00e7\u00f5es de API n\u00e3o podem ser falsificadas Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea instalou um \"sistema de identifica\u00e7\u00e3o amigo ou inimigo\" em sua nave espacial, protegendo-a de ataques CSRF. Voc\u00ea aprendeu a:</p> <ul> <li>Compreender a natureza e o perigo dos ataques CSRF.</li> <li>Proteger formul\u00e1rios HTML padr\u00e3o usando a diretiva <code>@csrf</code>.</li> <li>Passar o token CSRF para JavaScript via meta tag.</li> <li>Incluir o token nos cabe\u00e7alhos de requisi\u00e7\u00f5es AJAX/Fetch para sua execu\u00e7\u00e3o bem-sucedida.</li> </ul> <p>Suas interfaces web agora n\u00e3o s\u00e3o apenas interativas, mas tamb\u00e9m seguras. No pr\u00f3ximo cap\u00edtulo, concluiremos a cria\u00e7\u00e3o de nossa interface web, abordando como organizar corretamente o roteamento para p\u00e1ginas web.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/5/","title":"Cap\u00edtulo 5.5: Roteamento para P\u00e1ginas Web","text":"<p>Tempo de estudo: 40 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/5/#1-routeswebphp-vs-routesapiphp-dois-paineis-de-controle-diferentes","title":"1. <code>routes/web.php</code> vs <code>routes/api.php</code>: Dois Pain\u00e9is de Controle Diferentes","text":"<p>\u00c9 importante refor\u00e7ar novamente a diferen\u00e7a fundamental:</p> Caracter\u00edstica <code>routes/web.php</code> (Painel Web) <code>routes/api.php</code> (Painel API) Tarefa Principal Exibi\u00e7\u00e3o de p\u00e1ginas HTML, processamento de formul\u00e1rios Fornecimento de dados em formato JSON para outras aplica\u00e7\u00f5es Estado (State) Stateful (com estado) \u2014 usa sess\u00f5es e cookies Stateless (sem estado) \u2014 cada requisi\u00e7\u00e3o \u00e9 independente Middleware padr\u00e3o <code>web</code> (inclui sess\u00f5es, prote\u00e7\u00e3o CSRF, criptografia de cookies) <code>api</code> (inclui \"throttling\" \u2014 limita\u00e7\u00e3o de frequ\u00eancia de requisi\u00e7\u00f5es) Prefixo da URL Nenhum (raiz do seu site) <code>/api/</code> (configur\u00e1vel em <code>RouteServiceProvider</code>) Autentica\u00e7\u00e3o Geralmente via sess\u00f5es (Login/Senha) Geralmente via tokens (Sanctum, Passport) <p>Trabalhamos com <code>routes/web.php</code> para construir a interface para um ser humano.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/5/#2-rotas-de-recurso-para-a-web","title":"2. Rotas de Recurso para a Web","text":"<p>Similar a <code>Route::apiResource</code>, para a web existe <code>Route::resource</code>. Ele cria rotas para o ciclo CRUD completo, incluindo p\u00e1ginas para exibir formul\u00e1rios de cria\u00e7\u00e3o e edi\u00e7\u00e3o.</p> <p>Vamos criar um conjunto completo de rotas para gerenciar nossos planetas atrav\u00e9s da interface web.</p> <p>Passo 1: Criamos a rota em <code>routes/web.php</code></p> <p>Comente ou exclua as rotas antigas para <code>/planets</code> e substitua-as por uma \u00fanica linha:</p> <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// Route::get('/planets', [PlanetPageController::class, 'index']);\n// Route::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n\nRoute::resource('planets', PlanetPageController::class);\n</code></pre> <p>Passo 2: Verificamos o que foi criado Execute no terminal o comando <code>php artisan route:list --except-vendor</code>:</p> <pre><code>+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| Method | URI       | Name                   | Action           | Middleware                                      |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| GET|HEAD | planets                | planets.index          | ...\\PlanetPageController@index                    | web        |\n| POST   | planets                | planets.store          | ...\\PlanetPageController@store                    | web        |\n| GET|HEAD | planets/create         | planets.create         | ...\\PlanetPageController@create                   | web        |\n| GET|HEAD | planets/{planet}       | planets.show           | ...\\PlanetPageController@show                     | web        |\n| PUT|PATCH | planets/{planet}       | planets.update         | ...\\PlanetPageController@update                   | web        |\n| DELETE | planets/{planet}       | planets.destroy        | ...\\PlanetPageController@destroy                  | web        |\n| GET|HEAD | planets/{planet}/edit  | planets.edit           | ...\\PlanetPageController@edit                     | web        |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n</code></pre> <p><code>Route::resource</code> criou 7 rotas para n\u00f3s, incluindo:</p> <ul> <li><code>planets.create</code> (GET <code>/planets/create</code>): p\u00e1gina com formul\u00e1rio de cria\u00e7\u00e3o.</li> <li><code>planets.store</code> (POST <code>/planets</code>): processamento deste formul\u00e1rio.</li> <li><code>planets.edit</code> (GET <code>/planets/{planet}/edit</code>): p\u00e1gina com formul\u00e1rio de edi\u00e7\u00e3o.</li> <li><code>planets.update</code> (PUT/PATCH <code>/planets/{planet}</code>): processamento do formul\u00e1rio de edi\u00e7\u00e3o.</li> <li><code>planets.destroy</code> (DELETE <code>/planets/{planet}</code>): exclus\u00e3o do recurso.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/5/#3-rotas-nomeadas-convenientes-coordenadas-cosmicas","title":"3. Rotas Nomeadas: Convenientes \"Coordenadas C\u00f3smicas\"","text":"<p>Observe a coluna <code>Name</code>. O Laravel atribuiu automaticamente a cada rota um nome \u00fanico (por exemplo, <code>planets.index</code>). Usar nomes em vez de URLs hardcoded \u00e9 a melhor pr\u00e1tica.</p> <p>Por qu\u00ea? Se voc\u00ea decidir alterar a URL de <code>/planets</code> para <code>/worlds</code>, n\u00e3o precisar\u00e1 procurar e alterar todos os links em seus templates. Voc\u00ea simplesmente o altera em um \u00fanico lugar \u2014 no arquivo de rotas, e os nomes permanecem os mesmos.</p> <p>Exemplo de uso no Blade:</p> <p>Antes escrev\u00edamos assim:</p> <pre><code>&lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n</code></pre> <p>Agora escreveremos assim, usando o helper <code>route()</code>: <pre><code>&lt;a href=\"{{ route('planets.show', ['planet' =&gt; $planet-&gt;id]) }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n</code></pre></p> <ul> <li><code>route('planets.show', ...)</code> \u2014 gera a URL para a rota com o nome <code>planets.show</code>.</li> <li><code>['planet' =&gt; $planet-&gt;id]</code> \u2014 passa os par\u00e2metros necess\u00e1rios para a URL. O Laravel ir\u00e1 preencher o ID em <code>{planet}</code>. Voc\u00ea pode at\u00e9 passar o modelo completo: <code>['planet' =&gt; $planet]</code>.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/5/#4-implementacao-dos-metodos-faltantes-no-controller","title":"4. Implementa\u00e7\u00e3o dos M\u00e9todos Faltantes no Controller","text":"<p><code>Route::resource</code> criou as rotas, mas precisamos criar os m\u00e9todos correspondentes em <code>PlanetPageController</code> n\u00f3s mesmos.</p> <p>Abra <code>app/Http/Controllers/Web/PlanetPageController.php</code> e os adicionaremos.</p> <pre><code>&lt;?php\nuse Illuminate\\Http\\Request; // &lt;-- Adicionar\n\nclass PlanetPageController extends Controller\n{\n    // index() e show() n\u00f3s j\u00e1 temos\n\n    /**\n     * Mostra o formul\u00e1rio para criar um novo planeta.\n     */\n    public function create()\n    {\n        return view('planets.create'); // Apenas retornamos a view com o formul\u00e1rio\n    }\n\n    /**\n     * Salva um novo planeta no banco de dados.\n     */\n    public function store(Request $request)\n    {\n        // Valida\u00e7\u00e3o dos dados do formul\u00e1rio\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets',\n            'solar_system' =&gt; 'required|string|max:100',\n            // ... outras regras\n        ]);\n\n        Planet::create($validated);\n\n        // Redirecionamos o usu\u00e1rio para a p\u00e1gina da lista com uma mensagem de sucesso\n        return redirect()-&gt;route('planets.index')-&gt;with('success', 'Planeta criado com sucesso!');\n    }\n\n    /**\n     * Mostra o formul\u00e1rio para editar um planeta.\n     */\n    public function edit(Planet $planet)\n    {\n        return view('planets.edit', ['planet' =&gt; $planet]);\n    }\n\n    /**\n     * Atualiza os dados do planeta no banco de dados.\n     */\n    public function update(Request $request, Planet $planet)\n    {\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets,name,' . $planet-&gt;id,\n            'solar_system' =&gt; 'required|string|max:100',\n        ]);\n\n        $planet-&gt;update($validated);\n\n        return redirect()-&gt;route('planets.show', $planet)-&gt;with('success', 'Dados do planeta atualizados!');\n    }\n\n    /**\n     * Exclui um planeta.\n     */\n    public function destroy(Planet $planet)\n    {\n        $planet-&gt;delete();\n\n        return redirect()-&gt;route('planets.index')-&gt;with('success', 'Planeta removido.');\n    }\n}\n</code></pre> <ul> <li><code>redirect()-&gt;route(...)</code> \u2014 redireciona o usu\u00e1rio para outra rota nomeada.</li> <li><code>-&gt;with('success', '...')</code> \u2014 adiciona uma \"mensagem flash\" \u00e0 sess\u00e3o, que estar\u00e1 dispon\u00edvel na pr\u00f3xima p\u00e1gina exatamente uma vez. Podemos exibi-la em nosso template Blade.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/5/#5-agrupamento-de-rotas","title":"5. Agrupamento de Rotas","text":"<p>Se voc\u00ea tiver muitas rotas com caracter\u00edsticas comuns (por exemplo, todas elas s\u00e3o para o painel de administra\u00e7\u00e3o e devem ter o prefixo <code>/admin</code> e um middleware especial), elas podem ser agrupadas.</p> <pre><code>&lt;?php\nRoute::middleware(['auth', 'admin'])-&gt;prefix('admin')-&gt;name('admin.')-&gt;group(function () {\n    // Todas as rotas dentro deste grupo ter\u00e3o:\n    // 1. Middleware 'auth' e 'admin'\n    // 2. Prefixo da URL '/admin' (por exemplo, /admin/planets)\n    // 3. Prefixo do nome 'admin.' (por exemplo, admin.planets.index)\n\n    Route::resource('planets', PlanetPageController::class);\n    // Route::get('/dashboard', ...)-&gt;name('dashboard'); // -&gt; admin.dashboard\n});\n</code></pre>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/5/#quiz-para-fixacao","title":"Quiz para Fixa\u00e7\u00e3o","text":"<p>1. Qual comando em `routes/web.php` criar\u00e1 um conjunto completo de rotas CRUD para a interface web?</p>  a) Route::crud('planets', Controller::class)  b) Route::apiResource('planets', Controller::class)  c) Route::resource('planets', Controller::class) <p>2. Qual \u00e9 a principal vantagem de usar rotas nomeadas?</p>  a) Elas funcionam mais r\u00e1pido do que URLs diretas  b) Permitem mudar facilmente a URL no arquivo de rotas, sem quebrar os links nos templates  c) Elas s\u00e3o automaticamente protegidas por CSRF <p>3. Qual rota ser\u00e1 gerada para o m\u00e9todo `create()` em `Route::resource('articles', ...)`?</p>  a) GET `/articles/new`  b) GET `/articles/create`  c) POST `/articles/create` <p>4. O que o c\u00f3digo `redirect()-&gt;route('home')-&gt;with('status', 'OK')` faz?</p>  a) Retorna JSON com 'status' =&gt; 'OK' para a URL `/home`  b) Redireciona para a rota nomeada `home` e adiciona uma mensagem 'status' flash \u00e0 sess\u00e3o  c) Exibe a view `home.blade.php` com a vari\u00e1vel `$status` <p>5. Para que `Route::prefix('dashboard')` \u00e9 usado?</p>  a) Para adicionar um prefixo a todas as URLs dentro do grupo  b) Para adicionar um prefixo a todos os nomes de rotas dentro do grupo  c) Para aplicar o middleware `dashboard` Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea dominou uma abordagem estruturada e profissional para a organiza\u00e7\u00e3o de rotas web no Laravel. Agora voc\u00ea \u00e9 capaz de:</p> <ul> <li>Distinguir as rotas <code>web</code> e <code>api</code> e seus prop\u00f3sitos.</li> <li>Usar <code>Route::resource</code> para gerar rapidamente rotas CRUD padr\u00e3o.</li> <li>Aplicar rotas nomeadas para criar um c\u00f3digo flex\u00edvel e de f\u00e1cil manuten\u00e7\u00e3o.</li> <li>Criar opera\u00e7\u00f5es CRUD completas no controlador com valida\u00e7\u00e3o e redirecionamentos.</li> <li>Agrupar rotas para aplicar regras comuns.</li> </ul> <p>O sistema de navega\u00e7\u00e3o da sua \"nave\" agora \u00e9 tolerante a falhas e est\u00e1 pronto para expans\u00e3o. No cap\u00edtulo final desta se\u00e7\u00e3o, combinaremos todo o conhecimento adquirido e exibiremos os dados dos planetas, obtidos via Fetch, em nossa p\u00e1gina Blade.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/6/","title":"Cap\u00edtulo 5.6: Exibi\u00e7\u00e3o de Dados via Blade + Fetch","text":"<p>Tempo de estudo: 50 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/6/#1-abordagem-hibrida-o-melhor-de-dois-mundos","title":"1. Abordagem H\u00edbrida: O Melhor de Dois Mundos","text":"<p>Podemos construir uma p\u00e1gina de duas maneiras:</p> <ol> <li>Renderiza\u00e7\u00e3o Completa no Servidor (SSR): Laravel gera todo o HTML, incluindo a lista de planetas. Para qualquer atualiza\u00e7\u00e3o (exclus\u00e3o, adi\u00e7\u00e3o), a p\u00e1gina \u00e9 completamente recarregada.</li> <li>Renderiza\u00e7\u00e3o Completa no Cliente (CSR): Laravel entrega um \"esqueleto\" HTML vazio, e o JavaScript solicita todos os dados da API e os renderiza no cliente. (Esta \u00e9 a abordagem Single Page Application - SPA).</li> </ol> <p>Nossa escolha \u2014 a abordagem h\u00edbrida:</p> <ul> <li>Primeira carga (SSR): Laravel entrega imediatamente a p\u00e1gina com a lista de planetas j\u00e1 pronta. Isso \u00e9 r\u00e1pido e bom para SEO. O usu\u00e1rio v\u00ea o conte\u00fado imediatamente.</li> <li>A\u00e7\u00f5es subsequentes (CSR): O JavaScript intercepta as a\u00e7\u00f5es do usu\u00e1rio (cliques de bot\u00f5es) e interage com a API, atualizando apenas as partes necess\u00e1rias da p\u00e1gina, sem recarga completa.</li> </ul> <p>\ud83d\udca1 Analogia Espacial:</p> <p>Ao entrar na ponte de comando, voc\u00ea recebe imediatamente o mapa de navega\u00e7\u00e3o principal, impresso no Centro de Controle da Miss\u00e3o (SSR). Ele j\u00e1 est\u00e1 em suas m\u00e3os, n\u00e3o h\u00e1 necessidade de esperar. Mas ent\u00e3o voc\u00ea ativa o \"modo ao vivo\" em seu tablet (CSR), e ele come\u00e7a a receber atualiza\u00e7\u00f5es dos sat\u00e9lites em tempo real, redesenhando os objetos em seu mapa.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/6/#2-passo-1-preparacao-da-pagina","title":"2. Passo 1: Prepara\u00e7\u00e3o da P\u00e1gina","text":"<p>Trabalharemos com nossa p\u00e1gina de lista de planetas <code>resources/views/planets/index.blade.php</code>. Ela j\u00e1 \u00e9 capaz de exibir dados passados do controlador. Agora adicionaremos a ela elementos de controle que funcionar\u00e3o via JS.</p> <p>Adicione um bot\u00e3o \"Atualizar lista\" e um cont\u00eainer para notifica\u00e7\u00f5es: <pre><code>    &lt;div class=\"controls\"&gt;\n        &lt;h2&gt;Lista de todos os planetas conhecidos&lt;/h2&gt;\n        &lt;button id=\"refresh-btn\"&gt;Atualizar via API&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div id=\"notification-area\" class=\"notification\"&gt;&lt;/div&gt;\n    &lt;hr&gt;\n    {{-- Esta div ser\u00e1 nosso cont\u00eainer para atualiza\u00e7\u00e3o din\u00e2mica --}}\n    &lt;div id=\"planet-list-container\" class=\"planet-list\"&gt;\n        {{-- Inclui a view \"filha\" que renderiza a lista inicial --}}\n        @include('planets.partials.list', ['planets' =&gt; $planets])\n    &lt;/div&gt;\n</code></pre></p> <p>Observe <code>@include('planets.partials.list', ...)</code>. Extra\u00edmos a l\u00f3gica de exibi\u00e7\u00e3o da lista para um arquivo separado e reutiliz\u00e1vel.</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/6/#passo-2-criacao-de-uma-view-parcial-reutilizavel-partial","title":"Passo 2: Cria\u00e7\u00e3o de uma View \"Parcial\" Reutiliz\u00e1vel (Partial)","text":"<p>Extrair partes repetidas para arquivos separados \u00e9 uma boa pr\u00e1tica.</p> <p>Crie o arquivo <code>resources/views/planets/partials/list.blade.php</code>:</p> <pre><code>@forelse($planets as $planet)\n    &lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n        &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n        &lt;p&gt;Sistema Solar: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n        &lt;p&gt;Di\u00e2metro: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} km&lt;/p&gt;\n        &lt;a href=\"{{ route('planets.show', $planet) }}\"&gt;Saber mais &amp;rarr;&lt;/a&gt;\n        &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"{{ route('api.planets.destroy', $planet) }}\"&gt;\n            Desativar\n        &lt;/button&gt;\n    &lt;/div&gt;\n@empty\n    &lt;p&gt;N\u00e3o h\u00e1 nenhum planeta no banco de dados.&lt;/p&gt;\n@endforelse\n</code></pre> <ul> <li>Importante: Observe que a URL para o bot\u00e3o de exclus\u00e3o agora \u00e9 gerada para a rota da API: <code>route('api.planets.destroy', $planet)</code>. Para isso, certifique-se de que em <code>routes/api.php</code> voc\u00ea tenha um recurso nomeado: <code>Route::apiResource('planets', ...)-&gt;name('api.planets');</code></li> </ul>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/6/#passo-3-escrita-de-javascript-para-atualizacao-dinamica","title":"Passo 3: Escrita de JavaScript para Atualiza\u00e7\u00e3o Din\u00e2mica","text":"<p>Agora o mais interessante. Criaremos um JavaScript que, ao clicar em um bot\u00e3o, solicitar\u00e1 uma lista atualizada de planetas da API e a redesenhar\u00e1.</p> <p>Crie o arquivo <code>public/js/planet-manager.js</code> e inclua-o em <code>layouts/app.blade.php</code>.</p> <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    const refreshBtn = document.getElementById('refresh-btn');\n    const planetListContainer = document.getElementById('planet-list-container');\n    const notificationArea = document.getElementById('notification-area');\n\n    // Fun\u00e7\u00e3o para exibir notifica\u00e7\u00f5es\n    function showNotification(message, isError = false) {\n        notificationArea.textContent = message;\n        notificationArea.className = isError ? 'notification error' : 'notification success';\n        setTimeout(() =&gt; {\n            notificationArea.textContent = '';\n            notificationArea.className = 'notification';\n        }, 3000);\n    }\n\n    // Fun\u00e7\u00e3o para renderizar um \u00fanico cart\u00e3o de planeta\n    function createPlanetCardHtml(planet) {\n        // IMPORTANTE: Geramos o mesmo HTML que em nossa view parcial\n        return `\n            &lt;div class=\"planet-card\" id=\"planet-card-${planet.id}\"&gt;\n                &lt;h3&gt;${planet.name}&lt;/h3&gt;\n                &lt;p&gt;Sistema Solar: ${planet.solar_system}&lt;/p&gt;\n                &lt;p&gt;Di\u00e2metro: ${new Intl.NumberFormat().format(planet.size_km)} km&lt;/p&gt;\n                &lt;a href=\"/planets/${planet.id}\"&gt;Saber mais &amp;rarr;&lt;/a&gt;\n                &lt;button class=\"delete-btn\" data-id=\"${planet.id}\" data-url=\"/api/planets/${planet.id}\"&gt;\n                    Desativar (JS)\n                &lt;/button&gt;\n            &lt;/div&gt;\n        `;\n    }\n\n    // Fun\u00e7\u00e3o para solicitar e redesenhar a lista de planetas\n    async function fetchAndRenderPlanets() {\n        showNotification('Solicitando novos dados de sat\u00e9lites orbitais...');\n        try {\n            const response = await fetch('/api/planets', {\n                headers: { 'Accept': 'application/json' }\n            });\n\n            if (!response.ok) {\n                throw new Error('Erro de rede ao obter dados.');\n            }\n\n            const planets = await response.json(); // Laravel por padr\u00e3o retornar\u00e1 { data: [...] } para um recurso paginado\n\n            planetListContainer.innerHTML = ''; // Limpa a lista antiga\n\n            if (planets.data.length === 0) {\n                planetListContainer.innerHTML = '&lt;p&gt;N\u00e3o h\u00e1 nenhum planeta no banco de dados.&lt;/p&gt;';\n            } else {\n                planets.data.forEach(planet =&gt; {\n                    const cardHtml = createPlanetCardHtml(planet);\n                    planetListContainer.innerHTML += cardHtml;\n                });\n            }\n            showNotification('Dados atualizados com sucesso!', false);\n        } catch (error) {\n            console.error('Erro ao atualizar a lista de planetas:', error);\n            showNotification(error.message, true);\n        }\n    }\n\n    // Adiciona o manipulador de eventos ao bot\u00e3o\n    if (refreshBtn) {\n        refreshBtn.addEventListener('click', fetchAndRenderPlanets);\n    }\n\n    // A l\u00f3gica de exclus\u00e3o do cap\u00edtulo anterior pode ser movida para c\u00e1,\n    // para que todo o JS esteja em um s\u00f3 lugar.\n});\n</code></pre>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/6/#3-verificacao-final","title":"3. Verifica\u00e7\u00e3o Final","text":"<ol> <li>Inicie o servidor (<code>php artisan serve</code> ou certifique-se de que o Herd esteja funcionando).</li> <li>Recrie o banco de dados, se necess\u00e1rio: <code>php artisan migrate:fresh --seed</code>.</li> <li>Abra a p\u00e1gina <code>/planets</code> no navegador.<ul> <li>Voc\u00ea deve ver imediatamente a lista de planetas, gerada pelo servidor.</li> </ul> </li> <li>Clique no bot\u00e3o \"Atualizar via API\".<ul> <li>Voc\u00ea ver\u00e1 uma notifica\u00e7\u00e3o de carregamento.</li> <li>A lista deve desaparecer por um momento e reaparecer, mas desta vez ser\u00e1 gerada por JavaScript com base nos dados obtidos da API.</li> </ul> </li> </ol> <p>Voc\u00ea implementou com sucesso o modelo h\u00edbrido!</p>"},{"location":"pt/Cap%C3%ADtulo%205%20-%20Integra%C3%A7%C3%A3o%20do%20front-end%20com%20Laravel/6/#quiz-para-fixacao","title":"Quiz para Fixa\u00e7\u00e3o","text":"<p>1. O que \u00e9 uma abordagem de renderiza\u00e7\u00e3o h\u00edbrida (SSR + CSR)?</p>  a) Primeiro, uma p\u00e1gina vazia \u00e9 renderizada, depois o JS carrega todo o conte\u00fado  b) O servidor entrega uma p\u00e1gina totalmente pronta, e ela nunca muda no cliente  c) O servidor entrega uma p\u00e1gina pronta para um carregamento inicial r\u00e1pido, e as atualiza\u00e7\u00f5es subsequentes ocorrem no cliente via JS <p>2. Qual \u00e9 a principal vantagem da renderiza\u00e7\u00e3o inicial no servidor (SSR)?</p>  a) Redu\u00e7\u00e3o da carga no servidor  b) Renderiza\u00e7\u00e3o r\u00e1pida do conte\u00fado inicial para o usu\u00e1rio e boa indexa\u00e7\u00e3o SEO  c) Simplifica\u00e7\u00e3o do c\u00f3digo JavaScript <p>3. Por que `@include('planets.partials.list')` \u00e9 usado no exemplo?</p>  a) \u00c9 um requisito do Blade para loops  b) Para reutiliza\u00e7\u00e3o de c\u00f3digo e separa\u00e7\u00e3o da l\u00f3gica de exibi\u00e7\u00e3o da lista  c) Para carregamento ass\u00edncrono de parte da p\u00e1gina <p>4. No c\u00f3digo JavaScript, duplicamos a estrutura HTML do cart\u00e3o. Qual seria uma maneira mais avan\u00e7ada de evitar isso?</p>  a) Solicitar \u00e0 API n\u00e3o JSON, mas sim HTML j\u00e1 renderizado para um \u00fanico cart\u00e3o  b) Usar motores de template JavaScript (como Mustache, Handlebars) ou frameworks (Vue, React)  c) Ambas as op\u00e7\u00f5es est\u00e3o corretas <p>5. Por que \u00e9 importante que a API (`/api/planets`) e o c\u00f3digo JavaScript (`createPlanetCardHtml`) gerem dados/HTML consistentes?</p>  a) Caso contr\u00e1rio, o usu\u00e1rio ver\u00e1 um \"salto\" ou mudan\u00e7a na interface ao atualizar via API  b) Isso \u00e9 exigido pela especifica\u00e7\u00e3o da Fetch API  c) Caso contr\u00e1rio, o Laravel retornar\u00e1 um erro 500 Verificar <p>\ud83d\ude80 Parab\u00e9ns pela conclus\u00e3o do Cap\u00edtulo 5!</p> <p>Voc\u00ea percorreu um longo caminho, desde os fundamentos do Blade at\u00e9 a cria\u00e7\u00e3o de p\u00e1ginas h\u00edbridas interativas. Voc\u00ea aprendeu a:</p> <ul> <li>Criar e usar templates e layouts Blade.</li> <li>Organizar rotas da web e controladores para opera\u00e7\u00f5es CRUD.</li> <li>Proteger formul\u00e1rios da web e requisi\u00e7\u00f5es AJAX com tokens CSRF.</li> <li>Integrar JavaScript para intera\u00e7\u00e3o din\u00e2mica com a API sem recarregar a p\u00e1gina.</li> </ul> <p>Seu Centro de Controle de Voo est\u00e1 totalmente funcional, seguro e interativo. Voc\u00ea est\u00e1 pronto para a pr\u00f3xima grande etapa \u2014 comparar esta abordagem com outros frameworks e aprender as melhores pr\u00e1ticas para produ\u00e7\u00e3o.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/1/","title":"Cap\u00edtulo 6.1: Conectando o FastAPI ao Frontend","text":"<p>Tempo de estudo: 30 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/1/#1-retorno-ao-hipermotor-comparacao-de-protocolos","title":"1. Retorno ao \"hipermotor\": Compara\u00e7\u00e3o de Protocolos","text":"<p>No cap\u00edtulo anterior, acoplamos nosso MCC (frontend) \u00e0 \"ISS\" (Laravel API). Agora, retornaremos ao nosso ca\u00e7a superluminal (FastAPI) e realizaremos a mesma opera\u00e7\u00e3o.</p> <p>O objetivo deste cap\u00edtulo n\u00e3o \u00e9 apenas repetir as a\u00e7\u00f5es, mas comparar duas abordagens. \u00c9 como se a mesma nave Dragon se acoplasse primeiro \u00e0 ISS e depois \u00e0 esta\u00e7\u00e3o chinesa \"Tiangong\". O mecanismo de acoplagem \u00e9 o mesmo (REST), mas podem existir nuances nos procedimentos e na localiza\u00e7\u00e3o das portas.</p> <p>\ud83d\udca1 Analogia Espacial:</p> <p>O processo \u00e9 o mesmo: aproximar-se, alinhar-se, acoplar-se. Mas para a \"ISS\" era necess\u00e1rio usar a porta <code>/api/planets</code>, e para a \"Tiangong\", a porta <code>/spaceships</code>. Nosso operador no MCC deve conhecer esses detalhes para que a miss\u00e3o seja bem-sucedida.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/1/#2-preparando-o-caca-fastapi-para-o-acoplamento","title":"2. Preparando o \"ca\u00e7a\" (FastAPI) para o acoplamento","text":"<p>J\u00e1 fizemos isso no Cap\u00edtulo 4.2, mas vamos garantir que tudo esteja no lugar.</p> <p>Passo 1: Iniciando o servidor FastAPI</p> <ol> <li>Pare o servidor Laravel, se estiver em execu\u00e7\u00e3o (para evitar conflito de portas).</li> <li>Abra o terminal na pasta do seu projeto FastAPI.</li> <li> <p>Ative o ambiente virtual:</p> <ul> <li>Windows: <code>.\\venv\\Scripts\\Activate.ps1</code></li> <li>macOS / Linux: <code>source venv/bin/activate</code></li> </ul> </li> <li> <p>Inicie o servidor:     <pre><code>uvicorn main:app --reload\n</code></pre>     O servidor estar\u00e1 dispon\u00edvel em <code>http://127.0.0.1:8000</code>.</p> </li> </ol> <p>Passo 2: Verificando as configura\u00e7\u00f5es CORS em <code>main.py</code></p> <p>Certifique-se de que seu projeto FastAPI possui o <code>CORSMiddleware</code> configurado, que adicionamos anteriormente. Ele deve permitir requisi\u00e7\u00f5es do endere\u00e7o do seu frontend. <pre><code># main.py\nfrom fastapi.middleware.cors import CORSMiddleware\n\n# ...\n\norigins = [\n    \"http://127.0.0.1:5500\", # Endere\u00e7o do Live Server\n    \"null\", # Para file:///\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n# ...\n</code></pre> Se tudo estiver no lugar, seu servidor FastAPI est\u00e1 completamente pronto.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/1/#3-reconfigurando-a-antena-do-mcc-de-volta-para-o-fastapi","title":"3. Reconfigurando a \"antena\" do MCC de volta para o FastAPI","text":"<p>Agora, o mais interessante \u2014 as mudan\u00e7as m\u00ednimas que precisamos fazer em nosso JavaScript para que ele funcione novamente com o FastAPI.</p> <p>Passo 1: Alterando a URL base</p> <p>Abra <code>api.js</code> e retorne <code>API_BASE_URL</code> ao seu valor original. <pre><code>// api.js\n\n// Especificamos a URL da nossa API FastAPI\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // &lt;-- Sem /api!\n\n// ... o restante do c\u00f3digo apiRequest ...\n</code></pre></p> <p>Passo 2: Adapta\u00e7\u00e3o \u00e0 estrutura de resposta do FastAPI</p> <p>Lembre-se que nosso <code>GET /spaceships</code> no FastAPI retorna um array simples, e n\u00e3o um objeto com pagina\u00e7\u00e3o. Isso significa que precisamos reverter o c\u00f3digo de <code>fetchAndDisplayFleet</code> para sua forma original.</p> <p>Altere a fun\u00e7\u00e3o <code>fetchAndDisplayFleet</code> em <code>app.js</code>: <pre><code>// app.js\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;Carregando telemetria do FastAPI...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- Requisi\u00e7\u00e3o para /spaceships\n\n        // No FastAPI, temos um array simples, ent\u00e3o a chave .data n\u00e3o \u00e9 necess\u00e1ria!\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;N\u00e3o h\u00e1 naves registradas.&lt;/p&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            // Revertendo para nossa fun\u00e7\u00e3o original para criar cart\u00f5es\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;Erro ao carregar a frota: ${error.message}&lt;/p&gt;`;\n    }\n}\n\n// Fun\u00e7\u00e3o original para criar cart\u00f5es de naves\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;Tipo: ${ship.type}&lt;/p&gt;\n        &lt;p&gt;Ano de Lan\u00e7amento: ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;Status: ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;Editar&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;Desativar&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n</code></pre></p> <p>Passo 3: Verifica\u00e7\u00e3o das opera\u00e7\u00f5es CRUD</p> <p>Como nossos modelos Pydantic no FastAPI e os campos no formul\u00e1rio HTML coincidem (<code>name</code>, <code>type</code>, <code>launch_year</code>, <code>status</code>), as fun\u00e7\u00f5es <code>handleSaveShip</code> e <code>handleDeleteShip</code> devem funcionar sem altera\u00e7\u00f5es, pois j\u00e1 est\u00e3o direcionadas para o endpoint <code>/spaceships</code>.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/1/#4-conclusoes-da-comparacao-o-que-isso-significa-para-o-desenvolvedor-frontend","title":"4. Conclus\u00f5es da compara\u00e7\u00e3o: O que isso significa para o desenvolvedor frontend?","text":"<ul> <li>Universalidade do REST: Voc\u00ea viu claramente que, para o frontend, n\u00e3o importa em qual tecnologia o backend foi escrito (PHP/Laravel ou Python/FastAPI), desde que ele siga os princ\u00edpios REST.</li> <li>Import\u00e2ncia da documenta\u00e7\u00e3o: As principais diferen\u00e7as estavam nas URLs dos endpoints e na estrutura das respostas JSON. \u00c9 exatamente isso que deve ser descrito na documenta\u00e7\u00e3o da API. Sem ela, o desenvolvedor frontend trabalhar\u00e1 \"\u00e0s cegas\".</li> <li>Flexibilidade do frontend: Seu c\u00f3digo JavaScript deve ser flex\u00edvel o suficiente para se adaptar facilmente a diferentes formatos de dados (por exemplo, verificar se existe uma chave <code>data</code>, ou se \u00e9 apenas um array).</li> </ul> <p>Conclus\u00e3o: A habilidade de trabalhar com a API REST \u00e9 uma chave universal que abre portas para a intera\u00e7\u00e3o com qualquer backend moderno.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/1/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. A principal diferen\u00e7a na URL entre nossa API Laravel e a API FastAPI foi em...</p>  a) No uso de portas diferentes  b) Na presen\u00e7a do prefixo `/api` no Laravel  c) No uso de HTTPS pelo FastAPI <p>2. Qual foi a principal mudan\u00e7a no c\u00f3digo JS necess\u00e1ria ao alternar da resposta paginada do Laravel para um array simples do FastAPI?</p>  a) Parar de acessar `responseData.data` e usar `responseData` diretamente  b) Usar outro m\u00e9todo `fetch`  c) Alterar o `Content-Type` nos cabe\u00e7alhos <p>3. Este experimento prova que, para o desenvolvedor frontend...</p>  a) \u00c9 importante conhecer tanto PHP quanto Python  b) \u00c9 importante entender os princ\u00edpios REST e saber ler a documenta\u00e7\u00e3o da API  c) Laravel e FastAPI s\u00e3o absolutamente id\u00eanticos <p>4. A configura\u00e7\u00e3o do CORS \u00e9 uma tarefa...</p>  a) Do desenvolvedor frontend  b) Do administrador de sistemas  c) Do desenvolvedor backend <p>5. Se o FastAPI usasse pagina\u00e7\u00e3o, como no Laravel, o que ter\u00edamos que fazer no frontend?</p>  a) Nada, o c\u00f3digo funcionaria sozinho  b) Mudar a l\u00f3gica novamente para extrair o array da chave `data` (ou similar)  c) Mudar de `fetch` para a biblioteca Axios Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea conseguiu alternar os \"protocolos de comunica\u00e7\u00e3o\" do seu Centro de Controle de Miss\u00e3o (CCM) e comparar na pr\u00e1tica o trabalho com dois sistemas de backend diferentes.</p> <ul> <li>\u2705 Voc\u00ea consolidou a habilidade de configurar <code>API_BASE_URL</code> para alternar entre servidores.</li> <li>\u2705 Voc\u00ea entendeu a import\u00e2ncia da estrutura da resposta (<code>data</code> vs array simples) e como adaptar o frontend a ela.</li> <li>\u2705 Voc\u00ea percebeu que um bom desenvolvedor frontend deve estar preparado para trabalhar com qualquer API RESTful, estudando cuidadosamente sua documenta\u00e7\u00e3o.</li> </ul> <p>Habilidade de conex\u00e3o universal adquirida! Agora que sabemos como configurar a comunica\u00e7\u00e3o b\u00e1sica, \u00e9 hora de falar sobre protocolos mais complexos \u2014 CORS, autentica\u00e7\u00e3o e seguran\u00e7a.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>Certifique-se de que seu servidor FastAPI esteja rodando.</li> <li>Certifique-se de ter retornado <code>API_BASE_URL</code> e a l\u00f3gica de tratamento de resposta em <code>app.js</code> para a variante do FastAPI.</li> <li>Verifique se seu frontend est\u00e1 novamente executando corretamente todas as opera\u00e7\u00f5es CRUD com o backend FastAPI.</li> </ul> <p>\u26a0\ufe0f Em caso de erros:</p> <ul> <li>CORS error: Certifique-se de que o servidor FastAPI esteja rodando com as configura\u00e7\u00f5es CORS corretas.</li> <li>Erro <code>Cannot read properties of undefined (reading 'length')</code>: Possivelmente, voc\u00ea esqueceu de remover a chamada a <code>.data</code> de <code>responseData</code>.</li> <li>404 Not Found: Verifique <code>API_BASE_URL</code> \u2014 o FastAPI n\u00e3o tem o prefixo <code>/api</code>.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/2/","title":"Cap\u00edtulo 6.2: Configura\u00e7\u00f5es CORS","text":"<p>Tempo de estudo: 30 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/2/#1-cors-o-que-e-e-para-que-serve","title":"1. CORS: O que \u00e9 e para que serve?","text":"<p>Como descobrimos, CORS (Cross-Origin Resource Sharing) \u2014 \u00e9 uma pol\u00edtica de seguran\u00e7a do navegador. Ela previne situa\u00e7\u00f5es em que um site malicioso <code>evil-site.com</code>, em seu nome (usando seus cookies), faz requisi\u00e7\u00f5es para <code>your-bank.com</code> e rouba dados.</p> <p>Como funciona?</p> <ol> <li>O Frontend (navegador) do dom\u00ednio <code>A</code> quer obter dados do dom\u00ednio <code>B</code>.</li> <li>O navegador envia para o dom\u00ednio <code>B</code> uma requisi\u00e7\u00e3o \"pr\u00e9via\" especial (preflight request) com o m\u00e9todo <code>OPTIONS</code>, perguntando: \"Ei, dom\u00ednio <code>B</code>, posso eu, dom\u00ednio <code>A</code>, fazer uma requisi\u00e7\u00e3o <code>GET</code> para voc\u00ea?\"</li> <li>O Backend (servidor no dom\u00ednio <code>B</code>) deve responder com cabe\u00e7alhos HTTP especiais, por exemplo: <code>Access-Control-Allow-Origin: A</code>.</li> <li>Se a resposta do servidor permitir a requisi\u00e7\u00e3o, o navegador envia a requisi\u00e7\u00e3o <code>GET</code> principal. Caso contr\u00e1rio, ele a bloqueia e exibe um erro CORS.</li> </ol> <p>\ud83d\udca1 Analogia espacial:</p> <p>Antes de teletransportar o capit\u00e3o para uma esta\u00e7\u00e3o alien\u00edgena (enviar uma requisi\u00e7\u00e3o <code>POST</code>), a nave (navegador) envia um drone (requisi\u00e7\u00e3o <code>OPTIONS</code>) com a pergunta: \"Esta\u00e7\u00e3o, voc\u00eas aceitam teletransporte da nave 'Enterprise'?\". A esta\u00e7\u00e3o (API) responde: \"Sim, a recep\u00e7\u00e3o da 'Enterprise' \u00e9 permitida\" (cabe\u00e7alho <code>Access-Control-Allow-Origin</code>). Somente depois disso o teletransporte come\u00e7a.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/2/#2-configuracao-cors-no-laravel-abordagem-moderna-para-laravel-11","title":"2. Configura\u00e7\u00e3o CORS no Laravel (Abordagem moderna para Laravel 11+)","text":"<p>No Laravel 11+, a configura\u00e7\u00e3o CORS tornou-se significativamente mais simples e n\u00e3o exige a publica\u00e7\u00e3o do arquivo <code>config/cors.php</code>, se voc\u00ea precisar de configura\u00e7\u00f5es b\u00e1sicas. Tudo \u00e9 gerenciado atrav\u00e9s do arquivo <code>.env</code> e <code>bootstrap/app.php</code>.</p> <p>Passo 1: Configura\u00e7\u00e3o via vari\u00e1veis de ambiente</p> <p>Abra seu arquivo <code>.env</code>. O Laravel j\u00e1 fornece vari\u00e1veis padr\u00e3o para gerenciar o CORS para a API.</p> <pre><code># .env\n\n# ... outras vari\u00e1veis\n\n# Especifique os caminhos para os quais o CORS ser\u00e1 aplicado.\n# 'api/*' - valor padr\u00e3o para todas as rotas de API.\nCORS_PATHS=api/*\n\n# Especifique as origens (dom\u00ednios) permitidas.\n# Para desenvolvimento, especifique o endere\u00e7o do seu frontend.\n# Podem ser listados separados por v\u00edrgulas, sem espa\u00e7os.\nCORS_ALLOWED_ORIGINS=http://localhost:5500,http://127.0.0.1:5500\n\n# Outras configura\u00e7\u00f5es (geralmente podem ser deixadas como padr\u00e3o)\nCORS_ALLOWED_METHODS=*\nCORS_ALLOWED_HEADERS=*\nCORS_EXPOSED_HEADERS=\nCORS_MAX_AGE=0\nCORS_SUPPORTS_CREDENTIALS=false\n</code></pre> <p>Vari\u00e1veis chave:</p> <ul> <li><code>CORS_ALLOWED_ORIGINS</code>: A vari\u00e1vel mais importante. Aqui voc\u00ea lista os dom\u00ednios dos quais as requisi\u00e7\u00f5es s\u00e3o permitidas. <code>*</code> permite a todos, mas isso \u00e9</li> </ul> <p>extremamente inseguro para produ\u00e7\u00e3o.</p> <ul> <li><code>CORS_PATHS</code>: Caminhos aos quais estas regras se aplicam. <code>api/*</code> significa tudo que come\u00e7a com <code>/api/</code>.</li> </ul> <p>Ap\u00f3s alterar o <code>.env</code> n\u00e3o \u00e9 necess\u00e1rio reiniciar o servidor, se voc\u00ea estiver usando <code>php artisan serve</code>. As altera\u00e7\u00f5es ser\u00e3o carregadas automaticamente.</p> <p>Passo 2 (Opcional): Configura\u00e7\u00e3o avan\u00e7ada em <code>bootstrap/app.php</code></p> <p>Se voc\u00ea precisar de uma l\u00f3gica mais complexa (por exemplo, permitir subdom\u00ednios usando padr\u00f5es), ainda precisar\u00e1 publicar o arquivo de configura\u00e7\u00e3o e configurar o middleware. Mas para 95% dos casos, o arquivo <code>.env</code> \u00e9 suficiente.</p> <p>O comando <code>php artisan install:api</code> configura automaticamente o middleware CORS b\u00e1sico para rotas de API no arquivo <code>bootstrap/app.php</code>. Fica assim:</p> <pre><code>// bootstrap/app.php\n-&gt;withMiddleware(function (Middleware $middleware) {\n    // Esta linha j\u00e1 ser\u00e1 adicionada pelo comando install:api\n    // Ela inclui o tratamento CORS para todas as rotas de API\n    $middleware-&gt;api(base_path('routes/api.php'));\n})\n</code></pre> <p>Dentro de <code>-&gt;api()</code>, o Laravel j\u00e1 utiliza o middleware <code>HandleCors</code>, que l\u00ea as configura\u00e7\u00f5es do seu <code>.env</code>. \u00c9 simples e funciona \"out of the box\".</p> <p>\u26a0\ufe0f Importante! N\u00e3o use <code>CORS_ALLOWED_ORIGINS='*'</code> em um servidor de produ\u00e7\u00e3o, se sua API n\u00e3o for totalmente p\u00fablica. Isso abre uma potencial vulnerabilidade. Sempre liste os dom\u00ednios espec\u00edficos do seu frontend.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/2/#3-configuracao-cors-no-fastapi","title":"3. Configura\u00e7\u00e3o CORS no FastAPI","text":"<p>FastAPI usa o conceito de Middleware (software intermedi\u00e1rio) para lidar com tarefas transversais como CORS.</p> <p>Passo 1: Abra o arquivo principal da sua aplica\u00e7\u00e3o</p> <p>Este \u00e9 o arquivo onde voc\u00ea cria uma inst\u00e2ncia do FastAPI (geralmente <code>main.py</code>).</p> <p>Passo 2: Adicione <code>CORSMiddleware</code></p> <p>FastAPI fornece um middleware pronto para configurar o CORS.</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware # 1. Importa o middleware\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"API para gerenciar planetas na gal\u00e1xia\",\n    version=\"1.0.0\"\n)\n\n# 2. Lista de origens permitidas\norigins = [\n    \"http://localhost:5500\",\n    \"http://127.0.0.1:5500\",\n    # Em produ\u00e7\u00e3o, aqui estar\u00e1 o dom\u00ednio do seu frontend\n    # \"https://my-awesome-app.com\",\n]\n\n# 3. Adiciona o middleware \u00e0 aplica\u00e7\u00e3o\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # Permite as origens especificadas\n    allow_credentials=True, # Permite cookies (necess\u00e1rio para autentica\u00e7\u00e3o)\n    allow_methods=[\"*\"],    # Permite todos os m\u00e9todos (GET, POST, etc.)\n    allow_headers=[\"*\"],    # Permite todos os cabe\u00e7alhos\n)\n\n# ... aqui seus roteadores e o restante do c\u00f3digo\n</code></pre> <p>Passo 3: Reinicie o servidor Uvicorn O servidor Uvicorn geralmente recarrega automaticamente quando o c\u00f3digo \u00e9 alterado. Se n\u00e3o, reinicie-o manualmente. Agora, seu servidor FastAPI responder\u00e1 corretamente \u00e0s requisi\u00e7\u00f5es <code>OPTIONS</code> do frontend.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/2/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. A requisi\u00e7\u00e3o que o navegador envia antes da principal para verificar o CORS \u00e9 chamada de:</p>  a) CHECK request  b) Preflight request  c) Handshake request <p>2. No Laravel moderno (11+), as configura\u00e7\u00f5es b\u00e1sicas de CORS s\u00e3o definidas principalmente em:</p>  a) Arquivo bootstrap/app.php  b) Arquivo .env  c) Arquivo routes/api.php <p>3. No FastAPI, para configurar o CORS, utiliza-se:</p>  a) O decorador @app.cors()  b) A classe Security embutida  c) O Middleware <p>4. Qual valor para CORS_ALLOWED_ORIGINS \u00e9 o mais seguro para produ\u00e7\u00e3o?</p>  a) CORS_ALLOWED_ORIGINS='*'  b) CORS_ALLOWED_ORIGINS=http://my-frontend.com,https://my-frontend.com`  c) N\u00e3o definir esta vari\u00e1vel Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea se tornou um \"diplomata de comunica\u00e7\u00f5es interestelares\"! Suas APIs agora podem interagir com seguran\u00e7a com aplicativos externos, utilizando abordagens modernas e corretas. - \u2705 Entendemos o mecanismo de funcionamento do CORS e das solicita\u00e7\u00f5es preflight. - \ud83d\udd27 Configuramos o CORS para Laravel 11+ atrav\u00e9s do arquivo <code>.env</code>. - \u2699\ufe0f Configuramos o CORS para FastAPI usando <code>CORSMiddleware</code>. - \ud83d\udef0\ufe0f Estabelecemos com sucesso a comunica\u00e7\u00e3o entre o frontend e o backend.</p> <p>A ponte de comunica\u00e7\u00e3o est\u00e1 constru\u00edda e protegida. Agora podemos pensar em como permitir a passagem nesta ponte apenas de \"pessoal autorizado\".</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>O principal crit\u00e9rio de sucesso \u00e9 a aus\u00eancia de erros CORS no console do navegador ao solicitar dados do frontend.</li> <li>Na aba \"Network\" (Rede) nas ferramentas do desenvolvedor, voc\u00ea pode ver duas solicita\u00e7\u00f5es para sua API: a primeira com o m\u00e9todo <code>OPTIONS</code> (status 200/204) e a segunda com o m\u00e9todo <code>GET</code> (status 200). Esta \u00e9 uma demonstra\u00e7\u00e3o clara do funcionamento do CORS.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/3/","title":"Cap\u00edtulo 6.3: Autentica\u00e7\u00e3o B\u00e1sica","text":"<p>Tempo de estudo: 1 hora</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/3/#1-autenticacao-de-api-passe-para-o-mcc","title":"1. Autentica\u00e7\u00e3o de API: Passe para o MCC","text":"<p>Autentica\u00e7\u00e3o \u00e9 o processo de verificar a identidade de um usu\u00e1rio. Ao contr\u00e1rio de sites com sess\u00f5es e cookies, APIs stateless (que n\u00e3o mant\u00eam estado) geralmente usam tokens.</p> <p>O processo \u00e9 o seguinte:</p> <ol> <li>O usu\u00e1rio envia seu login e senha para um endpoint especial (por exemplo, <code>/login</code>).</li> <li>O servidor os verifica. Se tudo estiver correto, ele gera um token \u00fanico, criptografado (uma string longa) e o envia de volta.</li> <li>A cada requisi\u00e7\u00e3o subsequente a recursos protegidos (por exemplo, <code>POST /planets</code>), o usu\u00e1rio deve anexar este token no cabe\u00e7alho <code>Authorization</code>.</li> <li>O servidor verifica a validade do token e, se estiver correto, executa a requisi\u00e7\u00e3o.</li> </ol> <p>\ud83d\udca1 Analogia Espacial:</p> <ul> <li>Login/senha = Seu scan biom\u00e9trico para obter um passe.</li> <li>Token = Passe eletr\u00f4nico (cart\u00e3o de identifica\u00e7\u00e3o) que voc\u00ea recebe na entrada do MCC.</li> <li>Cabe\u00e7alho <code>Authorization: Bearer &lt;token&gt;</code> = Voc\u00ea encosta seu passe no leitor em cada porta protegida.</li> <li>Endpoints protegidos (POST, PUT, DELETE) = Portas para a sala do servidor ou para o painel de controle de lan\u00e7amento.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/3/#2-autenticacao-no-laravel-sanctum","title":"2. Autentica\u00e7\u00e3o no Laravel: Sanctum","text":"<p>Laravel oferece uma solu\u00e7\u00e3o elegante para autentica\u00e7\u00e3o de API \u2014 Laravel Sanctum. \u00c9 ideal para SPA (Single Page Applications), aplicativos m\u00f3veis e APIs simples baseadas em token.</p> <p>Passo 1: Instala\u00e7\u00e3o e Configura\u00e7\u00e3o do Sanctum</p> <p>O Sanctum j\u00e1 vem instalado na aplica\u00e7\u00e3o Laravel padr\u00e3o, mas vamos verificar a configura\u00e7\u00e3o.</p> <ol> <li>Publica\u00e7\u00e3o da configura\u00e7\u00e3o (se ainda n\u00e3o o fez): <pre><code>php artisan vendor:publish --provider=\"Laravel\\Sanctum\\SanctumServiceProvider\"\n</code></pre></li> <li>Execu\u00e7\u00e3o das migra\u00e7\u00f5es (criar\u00e1 a tabela <code>personal_access_tokens</code>): <pre><code>php artisan migrate\n</code></pre></li> <li>Adi\u00e7\u00e3o da trait ao modelo <code>User</code>:     Abra <code>app/Models/User.php</code> e certifique-se de que ele usa a trait <code>HasApiTokens</code>.     <pre><code>// app/Models/User.php\nuse Laravel\\Sanctum\\HasApiTokens;\n\nclass User extends Authenticatable\n{\n    use HasApiTokens, HasFactory, Notifiable;\n    // ...\n}\n</code></pre></li> </ol> <p>Passo 2: Cria\u00e7\u00e3o de um endpoint para emiss\u00e3o de tokens Precisamos de uma rota onde o usu\u00e1rio enviar\u00e1 seu login/senha.</p> <p>Adicione em <code>routes/api.php</code>:` <pre><code>// routes/api.php\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Models\\User;\nuse Illuminate\\Validation\\ValidationException;\n\nRoute::post('/login', function (Request $request) {\n    $request-&gt;validate([\n        'email' =&gt; 'required|email',\n        'password' =&gt; 'required',\n    ]);\n\n    $user = User::where('email', $request-&gt;email)-&gt;first();\n\n    if (! $user || ! Hash::check($request-&gt;password, $user-&gt;password)) {\n        throw ValidationException::withMessages([\n            'email' =&gt; ['As credenciais est\u00e3o incorretas.'],\n        ]);\n    }\n\n    // Retorna o token\n    return response()-&gt;json([\n        'token' =&gt; $user-&gt;createToken('api-token')-&gt;plainTextToken\n    ]);\n});\n</code></pre></p> <p>Para teste, voc\u00ea pode criar um usu\u00e1rio via seeder ou Tinker.</p> <p>Passo 3: Prote\u00e7\u00e3o de rotas Agora vamos proteger nossas opera\u00e7\u00f5es CRUD. Modifique <code>routes/api.php</code>:`</p> <pre><code>// routes/api.php\nuse App\\Http\\Controllers\\PlanetController;\n\n// Rota p\u00fablica para visualiza\u00e7\u00e3o de planetas\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// Grupo de rotas protegidas\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n\n    // Rota para logout (exclus\u00e3o do token)\n    Route::post('/logout', function (Request $request) {\n        $request-&gt;user()-&gt;currentAccessToken()-&gt;delete();\n        return response()-&gt;json(['message' =&gt; 'Voc\u00ea saiu com sucesso'], 200);\n    });\n});\n</code></pre> <p>O Middleware <code>auth:sanctum</code> verificar\u00e1 a presen\u00e7a de um token v\u00e1lido no cabe\u00e7alho <code>Authorization</code>.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/3/#3-autenticacao-no-fastapi-oauth2-e-jwt","title":"3. Autentica\u00e7\u00e3o no FastAPI: OAuth2 e JWT","text":"<p>No FastAPI, n\u00e3o h\u00e1 um sistema de autentica\u00e7\u00e3o embutido, mas existem ferramentas poderosas para implement\u00e1-lo. O padr\u00e3o de fato \u00e9 o OAuth2 com tokens JWT.</p> <p>Passo 1: Instala\u00e7\u00e3o das depend\u00eancias <pre><code>pip install \"python-jose[cryptography]\" \"passlib[bcrypt]\" \"python-multipart\"\n</code></pre></p> <ul> <li><code>python-jose</code>: para criar e verificar tokens JWT.</li> <li><code>passlib</code>: para hashing e verifica\u00e7\u00e3o de senhas.</li> <li><code>python-multipart</code>: para processar dados de formul\u00e1rio (<code>username</code> e <code>password</code>).</li> </ul> <p>Passo 2: Cria\u00e7\u00e3o do m\u00f3dulo de seguran\u00e7a (<code>security.py</code>) \u00c9 uma boa pr\u00e1tica mover toda a l\u00f3gica de autentica\u00e7\u00e3o para um arquivo separado.</p> <p>Crie o arquivo <code>security.py</code>:</p> <pre><code># security.py\nfrom fastapi import Depends, HTTPException, status\nfrom fastapi.security import OAuth2PasswordBearer\nfrom jose import JWTError, jwt\nfrom passlib.context import CryptContext\nfrom datetime import datetime, timedelta, timezone\n\n# --- Configura\u00e7\u00f5es ---\nSECRET_KEY = \"your-super-secret-key-that-is-long-and-random\" # \u26a0\ufe0f Substitua pela sua chave!\nALGORITHM = \"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES = 30\n\n# --- Utilit\u00e1rios ---\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/api/v1/login\")\n\n# --- Fun\u00e7\u00f5es ---\ndef verify_password(plain_password, hashed_password):\n    return pwd_context.verify(plain_password, hashed_password)\n\ndef get_password_hash(password):\n    return pwd_context.hash(password)\n\ndef create_access_token(data: dict):\n    to_encode = data.copy()\n    expire = datetime.now(timezone.utc) + timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    to_encode.update({\"exp\": expire})\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n    return encoded_jwt\n\n# --- Fun\u00e7\u00e3o de depend\u00eancia para verificar o token ---\ndef get_current_user(token: str = Depends(oauth2_scheme)):\n    credentials_exception = HTTPException(\n        status_code=status.HTTP_401_UNAUTHORIZED,\n        detail=\"N\u00e3o foi poss\u00edvel validar as credenciais\",\n        headers={\"WWW-Authenticate\": \"Bearer\"},\n    )\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\n        username: str = payload.get(\"sub\")\n        if username is None:\n            raise credentials_exception\n    except JWTError:\n        raise credentials_exception\n    # Aqui voc\u00ea pode retornar o usu\u00e1rio do DB, por enquanto apenas retornamos o nome\n    return {\"username\": username}\n</code></pre> <p>Passo 3: Integra\u00e7\u00e3o no <code>main.py</code> Agora vamos conectar isso \u00e0 nossa aplica\u00e7\u00e3o.</p> <ol> <li> <p>Vamos criar o endpoint <code>/login</code>: <pre><code># main.py\nfrom fastapi.security import OAuth2PasswordRequestForm\nfrom fastapi import Depends, APIRouter\nfrom . import security # Importamos nosso m\u00f3dulo\n\n# ... seu c\u00f3digo FastAPI ...\nrouter = APIRouter(prefix=\"/api/v1\")\n\n@router.post(\"/login\")\ndef login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):\n    # Aqui deve haver a verifica\u00e7\u00e3o do usu\u00e1rio no DB\n    # Por exemplo, temos um usu\u00e1rio de teste\n    is_user_valid = (form_data.username == \"testuser\" and\n                     security.verify_password(\"testpass\", security.get_password_hash(\"testpass\")))\n\n    if not is_user_valid:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"Nome de usu\u00e1rio ou senha inv\u00e1lidos\",\n        )\n    access_token = security.create_access_token(data={\"sub\": form_data.username})\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\n\n# ...\napp.include_router(router)\n</code></pre></p> </li> <li> <p>Vamos proteger os endpoints:</p> <p>Usamos nossa depend\u00eancia <code>get_current_user</code>. <pre><code># main.py ou no seu roteador de planetas\n\n@router.post(\"/planets\", status_code=status.HTTP_201_CREATED)\ndef create_planet(\n    planet: PlanetCreate,\n    current_user: dict = Depends(security.get_current_user) # &lt;-- Prote\u00e7\u00e3o!\n):\n    # L\u00f3gica de cria\u00e7\u00e3o de planetas...\n    print(f\"O usu\u00e1rio {current_user['username']} est\u00e1 criando um planeta.\")\n    # ...\n    return new_planet\n\n# Protegemos PUT e DELETE tamb\u00e9m\n</code></pre></p> </li> </ol>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/3/#4-uso-de-tokens-no-frontend","title":"4. Uso de tokens no frontend","text":"<p>Nosso frontend agora deve primeiro obter o token, salv\u00e1-lo (por exemplo, em <code>localStorage</code>) e anex\u00e1-lo a cada requisi\u00e7\u00e3o protegida.</p> <p>Exemplo em JavaScript (<code>fetch</code>): <pre><code>// 1. Fazendo login\nasync function login(email, password) {\n    const response = await fetch('http://localhost:8001/api/login', { // Endere\u00e7o da API Laravel\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({email, password})\n    });\n    const data = await response.json();\n\n    if (data.token) {\n        localStorage.setItem('api_token', data.token); // Salva o token\n    }\n}\n\n// 2. Fazendo uma requisi\u00e7\u00e3o protegida\nasync function createPlanet(planetData) {\n    const token = localStorage.getItem('api_token');\n\n    const response = await fetch('http://localhost:8001/api/planets', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` // &lt;--- Anexa o token!\n        },\n        body: JSON.stringify(planetData)\n    });\n    // ...\n}\n</code></pre></p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/3/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. APIs sem estado geralmente usam para autentica\u00e7\u00e3o:</p>  a) Sess\u00f5es e cookies  b) Tokens (por exemplo, JWT)  c) Endere\u00e7os IP <p>2. No Laravel, o middleware usado para proteger rotas com tokens \u00e9:</p>  a) auth:api  b) auth:sanctum  c) verified <p>3. No FastAPI, a depend\u00eancia usada para obter dados do formul\u00e1rio de login \u00e9:</p>  a) Body()  b) Form()  c) OAuth2PasswordRequestForm = Depends() <p>4. Como o token \u00e9 transmitido do cliente para o servidor em uma requisi\u00e7\u00e3o protegida?</p>  a) No par\u00e2metro URL `?token=...`  b) No corpo da requisi\u00e7\u00e3o  c) No cabe\u00e7alho HTTP `Authorization: Bearer ` Verificar <p>\ud83d\ude80 Resumo do Cap\u00edtulo:</p> <p>Voc\u00ea instalou um \"sistema de controle de acesso\" nas suas APIs. Agora, nem todo mundo pode fazer altera\u00e7\u00f5es no seu \"banco de dados gal\u00e1ctico\".</p> <ul> <li>\u2705 Entendeu o princ\u00edpio da autentica\u00e7\u00e3o baseada em token.</li> <li>\ud83d\udd10 Implementou a emiss\u00e3o de tokens e a prote\u00e7\u00e3o de rotas no Laravel Sanctum.</li> <li>\u2699\ufe0f Configurou a autentica\u00e7\u00e3o baseada em OAuth2 e JWT no FastAPI.</li> <li>\ud83d\udef0\ufe0f Aprendeu como o frontend deve armazenar e usar o token.</li> </ul> <p>Suas APIs se tornaram n\u00e3o apenas funcionais, mas tamb\u00e9m seguras. No entanto, para que outros desenvolvedores possam us\u00e1-las, eles precisam de \"instru\u00e7\u00f5es de opera\u00e7\u00e3o\".</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>Tente fazer uma requisi\u00e7\u00e3o <code>POST</code> para <code>/api/planets</code> (no Laravel) ou <code>/api/v1/planets</code> (no FastAPI) sem um token usando Postman ou Insomnia. Voc\u00ea deve receber um erro <code>401 Unauthorized</code>.</li> <li>Fa\u00e7a uma requisi\u00e7\u00e3o para <code>/login</code>, obtenha o token, adicione-o ao cabe\u00e7alho <code>Authorization</code> e repita a requisi\u00e7\u00e3o <code>POST</code>. Ela deve ser executada com sucesso.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/4/","title":"Cap\u00edtulo 6.4: Documenta\u00e7\u00e3o da API","text":"<p>Tempo de estudo: 30 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/4/#1-por-que-a-documentacao-da-api-e-necessaria","title":"1. Por que a documenta\u00e7\u00e3o da API \u00e9 necess\u00e1ria?","text":"<p>Imagine que lhe deram um controle remoto de uma nave espacial complexa sem uma \u00fanica etiqueta nos bot\u00f5es. Voc\u00ea os pressionaria aleatoriamente, arriscando lan\u00e7ar a catapulta em vez de ligar a luz. A documenta\u00e7\u00e3o da API s\u00e3o essas mesmas etiquetas e instru\u00e7\u00f5es.</p> <p>Boa documenta\u00e7\u00e3o:</p> <ul> <li>Economiza tempo: Os desenvolvedores n\u00e3o precisam adivinhar quais endpoints existem, quais par\u00e2metros eles aceitam e o que retornam.</li> <li>Reduz erros: Uma descri\u00e7\u00e3o clara dos formatos de dados e c\u00f3digos de erro ajuda a evitar o uso incorreto da API.</li> <li>Simplifica a integra\u00e7\u00e3o: A equipe de frontend pode trabalhar em paralelo com a equipe de backend, baseando-se na documenta\u00e7\u00e3o como um contrato.</li> <li>\u00c9 o seu legado: Daqui a seis meses, voc\u00ea mesmo se agradecer\u00e1 quando voltar ao projeto.</li> </ul> <p>\ud83d\udca1 Analogia espacial:</p> <ul> <li>API = Sistema complexo de controle de uma esta\u00e7\u00e3o espacial.</li> <li>Documenta\u00e7\u00e3o da API = Manual para astronautas. Descreve:</li> <li>Qual comando (<code>endpoint</code>) enviar para abrir a eclusa.</li> <li>Quais par\u00e2metros (<code>corpo da requisi\u00e7\u00e3o</code>) passar para configurar o sistema de suporte \u00e0 vida.</li> <li>Quais sinais (<code>respostas da API</code>) esperar em resposta.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/4/#2-documentacao-no-fastapi-magia-automatica","title":"2. Documenta\u00e7\u00e3o no FastAPI: Magia Autom\u00e1tica","text":"<p>FastAPI torna a documenta\u00e7\u00e3o incrivelmente simples. Ele gera automaticamente documenta\u00e7\u00e3o interativa com base no seu c\u00f3digo, usando os padr\u00f5es OpenAPI e Swagger UI.</p> <p>Passo 1: Adicione metadados \u00e0 sua aplica\u00e7\u00e3o</p> <p>Em <code>main.py</code>, voc\u00ea pode adicionar descri\u00e7\u00f5es que aparecer\u00e3o na documenta\u00e7\u00e3o.</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel, Field\n\n# ... (c\u00f3digo FastAPI)\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"\"\"\nAPI para explora\u00e7\u00e3o da gal\u00e1xia. \ud83d\ude80\n\nVoc\u00ea poder\u00e1:\n* **Visualizar planetas**.\n* **Adicionar novos mundos** (autentica\u00e7\u00e3o necess\u00e1ria).\n    \"\"\",\n    version=\"1.0.0\",\n    contact={\n        \"name\": \"Engenheiro Chefe do Centro de Controle da Miss\u00e3o\",\n        \"url\": \"https://example.com/contact\",\n        \"email\": \"engineer@example.com\",\n    },\n)\n</code></pre> <p>Passo 2: Descreva seus modelos e endpoints</p> <p>Quanto mais detalhadamente voc\u00ea descrever os modelos Pydantic e os par\u00e2metros dos endpoints, melhor ser\u00e1 a documenta\u00e7\u00e3o.</p> <pre><code># No arquivo de modelos Pydantic ou em main.py\n\nclass PlanetBase(BaseModel):\n    name: str = Field(..., example=\"Terra\", description=\"Nome do planeta\")\n    description: str = Field(..., example=\"Planeta azul com vida diversa\", description=\"Breve descri\u00e7\u00e3o\")\n    # ...\n\nclass Planet(PlanetBase):\n    id: int\n    is_habitable: bool\n\n    class Config:\n        orm_mode = True # ou from_attributes = True no Pydantic v2\n\n# No arquivo de rotas\n@router.get(\n    \"/planets\",\n    response_model=list[Planet],\n    summary=\"Obter lista de todos os planetas\",\n    description=\"Retorna uma lista de todos os planetas conhecidos com pagina\u00e7\u00e3o (futuramente).\"\n)\ndef get_planets():\n    # ...\n\n@router.post(\n    \"/planets\",\n    # ...\n    summary=\"Criar novo planeta\",\n    responses={\n        401: {\"description\": \"Usu\u00e1rio n\u00e3o autorizado\"},\n        422: {\"description\": \"Erro de valida\u00e7\u00e3o de dados\"}\n    }\n)\ndef create_planet(planet: PlanetCreate, ...):\n    # ...\n</code></pre> <ul> <li><code>Field(..., example=\"...\")</code>: Adiciona exemplos \u00e0 documenta\u00e7\u00e3o.</li> <li><code>summary</code>: Breve descri\u00e7\u00e3o do endpoint.</li> <li><code>description</code>: Descri\u00e7\u00e3o detalhada.</li> <li><code>responses</code>: Descri\u00e7\u00e3o de poss\u00edveis c\u00f3digos de resposta, al\u00e9m do sucesso.</li> </ul> <p>Passo 3: Abra a documenta\u00e7\u00e3o no navegador</p> <p>Inicie seu servidor FastAPI e abra duas URLs m\u00e1gicas:</p> <ol> <li><code>http://127.0.0.1:8000/docs</code> \u2014 abrir\u00e1 a documenta\u00e7\u00e3o interativa Swagger UI. Aqui voc\u00ea pode n\u00e3o apenas ler, mas tamb\u00e9m testar seus endpoints diretamente do navegador!</li> <li><code>http://127.0.0.1:8000/redoc</code> \u2014 abrir\u00e1 uma vis\u00e3o alternativa da documenta\u00e7\u00e3o ReDoc. \u00c9 menos interativa, mas frequentemente mais leg\u00edvel.</li> </ol>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/4/#3-documentacao-no-laravel-usando-pacotes-de-terceiros","title":"3. Documenta\u00e7\u00e3o no Laravel: Usando pacotes de terceiros","text":"<p>Ao contr\u00e1rio do FastAPI, Laravel n\u00e3o gera documenta\u00e7\u00e3o \"out-of-the-box\". No entanto, existem excelentes pacotes que fazem isso, analisando seu c\u00f3digo. O mais popular \u00e9 o Scribe.</p> <p>Passo 1: Instala\u00e7\u00e3o do Scribe <pre><code>composer require --dev \"knuckleswtf/scribe\"\n</code></pre> <pre><code>php artisan vendor:publish --tag=scribe-config\nphp artisan scribe:generate\n</code></pre></p> <p>Passo 2: Descrevendo endpoints usando DocBlocks</p> <p>Scribe l\u00ea os PHP DocBlocks (coment\u00e1rios do tipo <code>/** ... */</code>) acima dos m\u00e9todos do seu controlador.</p> <p>Abra <code>app/Http/Controllers/PlanetController.php</code>:</p> <pre><code>// app/Http/Controllers/PlanetController.php\n\n/**\n * @group Planetas\n * API para gerenciamento de planetas\n */\nclass PlanetController extends Controller\n{\n    /**\n     * Obter lista de planetas\n     *\n     * Retorna uma lista paginada de todos os planetas na gal\u00e1xia.\n     *\n     * @unauthenticated\n     */\n    public function index()\n    {\n        // ...\n    }\n\n    /**\n     * Criar um novo planeta\n     *\n     * @authenticated\n     *\n     * @bodyParam name string required Nome do planeta. Example: Kepler-186f\n     * @bodyParam description string required Descri\u00e7\u00e3o do planeta.\n     * @bodyParam size_km integer required Di\u00e2metro em quil\u00f4metros. Example: 14000\n     * @bodyParam is_habitable boolean Se o planeta \u00e9 habit\u00e1vel. Example: true\n     *\n     * @response 201 {\n     *  \"id\": 4,\n     *  \"name\": \"Kepler-186f\",\n     *  \"description\": \"Primeiro planeta confirmado do tamanho da Terra na zona habit\u00e1vel de outra estrela.\",\n     *  \"size_km\": 14000,\n     *  \"is_habitable\": true,\n     *  \"created_at\": \"2023-10-27T12:00:00.000000Z\",\n     *  \"updated_at\": \"2023-10-27T12:00:00.000000Z\"\n     * }\n     */\n    public function store(Request $request)\n    {\n        // ...\n    }\n    // ... e assim por diante para outros m\u00e9todos\n}\n</code></pre> <p>Tags chave do Scribe:</p> <ul> <li><code>@group</code>: Agrupa endpoints.</li> <li><code>@unauthenticated</code> / <code>@authenticated</code>: Indica se um token \u00e9 necess\u00e1rio.</li> <li><code>@bodyParam</code>: Descreve um par\u00e2metro no corpo da requisi\u00e7\u00e3o.</li> <li><code>@response</code>: Exemplo de resposta de sucesso.</li> </ul> <p>Passo 3: Gera\u00e7\u00e3o e visualiza\u00e7\u00e3o da documenta\u00e7\u00e3o</p> <p>Cada vez que fizer altera\u00e7\u00f5es nos DocBlocks, execute o comando:</p> <p><pre><code>php artisan scribe:generate\n</code></pre> Scribe criar\u00e1 uma p\u00e1gina HTML est\u00e1tica com sua documenta\u00e7\u00e3o. Abra-a no endere\u00e7o: <code>http://your-app-url/docs</code>.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/4/#quiz-para-fixacao","title":"Quiz para fixa\u00e7\u00e3o","text":"<p>1. FastAPI gera documenta\u00e7\u00e3o com base no padr\u00e3o:</p>  a) GraphQL  b) OpenAPI (Swagger)  c) WSDL <p>2. Qual URL abre o Swagger UI no FastAPI por padr\u00e3o?</p>  a) /api/docs  b) /swagger  c) /docs <p>3. Pacote popular para gera\u00e7\u00e3o de documenta\u00e7\u00e3o no Laravel:</p>  a) Telescope  b) Scribe  c) Horizon <p>4. No Scribe, a tag usada para descrever par\u00e2metros do corpo da requisi\u00e7\u00e3o \u00e9:</p>  a) @param  b) @bodyParam  c) @request Verificar <p>\ud83d\ude80 Conclus\u00e3o do cap\u00edtulo:</p> <p>Voc\u00ea criou documenta\u00e7\u00e3o profissional, transformando suas APIs de \"caixas-pretas\" em ferramentas compreens\u00edveis e f\u00e1ceis de usar.</p> <ul> <li>\u2705 Entendeu a import\u00e2ncia cr\u00edtica de documentar APIs.</li> <li>\ud83e\ude84 Aprendeu a usar a gera\u00e7\u00e3o autom\u00e1tica de documenta\u00e7\u00e3o no FastAPI.</li> <li>\u2699\ufe0f Dominou os fundamentos do pacote Scribe para documentar APIs no Laravel.</li> <li>\ud83d\udef0\ufe0f Confirmou que uma boa documenta\u00e7\u00e3o \u00e9 o melhor auxiliar para qualquer desenvolvedor.</li> </ul> <p>Suas APIs agora n\u00e3o s\u00f3 funcionam e est\u00e3o protegidas, mas tamb\u00e9m est\u00e3o totalmente prontas para serem usadas por outros membros da equipe. Resta o \u00faltimo, mas mais importante passo \u2014 a verifica\u00e7\u00e3o de seguran\u00e7a final.</p> <p>\ud83d\udccc Verifica\u00e7\u00e3o:</p> <ul> <li>Para FastAPI: abra <code>/docs</code> no navegador e tente executar uma requisi\u00e7\u00e3o <code>GET</code> para a lista de planetas diretamente da interface Swagger UI.</li> <li>Para Laravel: execute <code>php artisan scribe:generate</code> e abra <code>/docs</code>. Certifique-se de que os endpoints est\u00e3o agrupados e que o m\u00e9todo <code>store</code> tem uma descri\u00e7\u00e3o de par\u00e2metros.</li> </ul>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/5/","title":"Cap\u00edtulo 6.5: Fundamentos de Seguran\u00e7a da API","text":"<p>Tempo de estudo: 45 minutos</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/5/#1-seguranca-da-api-defesa-multinivel-da-estacao","title":"1. Seguran\u00e7a da API: Defesa Multin\u00edvel da Esta\u00e7\u00e3o","text":"<p>Imagine que sua esta\u00e7\u00e3o espacial (API) est\u00e1 em um setor hostil do espa\u00e7o. Um \u00fanico campo de for\u00e7a (autentica\u00e7\u00e3o) n\u00e3o \u00e9 suficiente. Voc\u00ea precisa de um sistema de defesa abrangente:</p> <ul> <li>Escudos (HTTPS): Criptografia de todo o tr\u00e1fego.</li> <li>Sensores de Anomalias (Rate Limiting): Prote\u00e7\u00e3o contra solicita\u00e7\u00f5es excessivamente frequentes.</li> <li>Compartimentos Internos (Autoriza\u00e7\u00e3o): Separa\u00e7\u00e3o de direitos de acesso.</li> <li>Verifica\u00e7\u00e3o de Cargas (Valida\u00e7\u00e3o): N\u00e3o confiar em nenhum dado de entrada.</li> <li>Cofre Secreto (Vari\u00e1veis de Ambiente): Armazenamento seguro de chaves.</li> </ul> <p>Vamos configurar cada um desses n\u00edveis.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/5/#2-escudos-sempre-use-https","title":"2. Escudos: Sempre use HTTPS","text":"<p>O que \u00e9? HTTPS (HyperText Transfer Protocol Secure) \u00e9 uma vers\u00e3o do protocolo HTTP que criptografa todos os dados entre o cliente e o servidor. Sem ele, qualquer pessoa que esteja \"escutando\" a rede (por exemplo, em um Wi-Fi p\u00fablico) pode interceptar logins, senhas e tokens.</p> <p>Como implementar?</p> <ul> <li>Em produ\u00e7\u00e3o \u2014 obrigat\u00f3rio. Ao implantar sua API em um servidor real (Heroku, DigitalOcean, etc.), configure o servidor web (Nginx, Apache) para trabalhar com um certificado SSL. Servi\u00e7os como o Let's Encrypt fornecem certificados gratuitos.</li> <li>No desenvolvimento local \u00e9 menos cr\u00edtico, mas ferramentas como Laravel Herd ou mkcert permitem configurar facilmente o HTTPS local.</li> </ul> <p>\ud83d\udca1 Regra n\u00ba1 em seguran\u00e7a da API: Sem HTTPS \u2014 sem seguran\u00e7a.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/5/#3-sensores-de-anomalias-limitacao-de-frequencia-de-requisicoes-rate-limiting","title":"3. Sensores de Anomalias: Limita\u00e7\u00e3o de Frequ\u00eancia de Requisi\u00e7\u00f5es (Rate Limiting)","text":"<p>O que \u00e9? Prote\u00e7\u00e3o contra ataques de for\u00e7a bruta (quando um invasor tenta adivinhar uma senha enviando milhares de solicita\u00e7\u00f5es por segundo) e contra ataques DoS (quando o servidor \u00e9 \"sobrecarregado\" com solicita\u00e7\u00f5es para que pare de responder). O Rate Limiting limita o n\u00famero de solicita\u00e7\u00f5es que um usu\u00e1rio (ou endere\u00e7o IP) pode fazer em um determinado per\u00edodo de tempo.</p> <p>Como implementar?</p> <ul> <li> <p>No Laravel: O Middleware de limita\u00e7\u00e3o j\u00e1 est\u00e1 integrado!   Abra <code>app/Http/Kernel.php</code> e veja a chave <code>middlewareGroups['api']</code>. L\u00e1 voc\u00ea j\u00e1 encontrar\u00e1 <code>'throttle:api'</code>. As configura\u00e7\u00f5es dessa limita\u00e7\u00e3o est\u00e3o em <code>app/Providers/RouteServiceProvider.php</code> no m\u00e9todo <code>configureRateLimiting()</code>.   <pre><code>// app/Providers/RouteServiceProvider.php\nprotected function configureRateLimiting()\n{\n    RateLimiter::for('api', function (Request $request) {\n        return Limit::perMinute(60)-&gt;by($request-&gt;user()?-&gt;id ?: $request-&gt;ip());\n    });\n}\n</code></pre>   Isso significa: 60 requisi\u00e7\u00f5es por minuto por usu\u00e1rio (se autenticado) ou por endere\u00e7o IP.</p> </li> <li> <p>No FastAPI: \u00c9 usado um pacote de terceiros, por exemplo, <code>slowapi</code>.</p> </li> <li> <p>Instala\u00e7\u00e3o: <code>pip install slowapi</code></p> </li> <li>Integra\u00e7\u00e3o em <code>main.py</code>:       <pre><code># main.py\nfrom slowapi import Limiter, _rate_limit_exceeded_handler\nfrom slowapi.util import get_remote_address\nfrom slowapi.errors import RateLimitExceeded\n\nlimiter = Limiter(key_func=get_remote_address)\napp = FastAPI(...)\n\n# Conecta o manipulador de erros e o pr\u00f3prio limitador\napp.state.limiter = limiter\napp.add_exception_handler(RateLimitExceeded, _rate_limit_exceeded_handler)\n\n# Aplica a um endpoint espec\u00edfico\n@router.get(\"/planets\")\n@limiter.limit(\"5/minute\") # 5 requisi\u00e7\u00f5es por minuto\ndef get_planets(request: Request):\n    # ...\n</code></pre></li> </ul>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/5/#4-compartimentos-internos-autorizacao-nao-confundir-com-autenticacao","title":"4. Compartimentos Internos: Autoriza\u00e7\u00e3o (n\u00e3o confundir com autentica\u00e7\u00e3o!)","text":"<p>O que \u00e9?</p> <ul> <li>Autentica\u00e7\u00e3o responde \u00e0 pergunta \"Quem \u00e9 voc\u00ea?\".</li> <li>Autoriza\u00e7\u00e3o responde \u00e0 pergunta \"O que voc\u00ea tem permiss\u00e3o para fazer?\".</li> </ul> <p>Por exemplo, um usu\u00e1rio comum pode visualizar planetas, mas apenas um usu\u00e1rio com a fun\u00e7\u00e3o de \"administrador\" pode exclu\u00ed-los.</p> <p>Como implementar?</p> <ul> <li> <p>No Laravel: S\u00e3o utilizadas Policies (Pol\u00edticas) ou Gates (Port\u00f5es).</p> </li> <li> <p>Criamos uma pol\u00edtica: <code>php artisan make:policy PlanetPolicy --model=Planet</code></p> </li> <li>Descrevemos as regras em <code>app/Policies/PlanetPolicy.php</code>:       <pre><code>class PlanetPolicy\n{\n    // Permitir a exclus\u00e3o apenas para usu\u00e1rios com a fun\u00e7\u00e3o 'admin'\n    public function delete(User $user, Planet $planet): bool\n    {\n        return $user-&gt;role === 'admin';\n    }\n}\n</code></pre></li> <li> <p>Aplicamos a pol\u00edtica no controlador <code>PlanetController.php</code>:       <pre><code>public function destroy(Planet $planet)\n{\n    // Verifica se o usu\u00e1rio atual tem permiss\u00e3o para excluir\n    $this-&gt;authorize('delete', $planet);\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre></p> </li> <li> <p>No FastAPI: A l\u00f3gica de autoriza\u00e7\u00e3o geralmente \u00e9 escrita manualmente dentro dos endpoints, usando informa\u00e7\u00f5es do usu\u00e1rio obtidas do token.</p> </li> </ul> <pre><code># (assumimos que o token cont\u00e9m um campo 'roles')\ndef get_current_active_user(token: str = Depends(oauth2_scheme)):\n    # ... decodificamos o token e obtemos o usu\u00e1rio com as fun\u00e7\u00f5es do DB\n    # user = get_user_from_db(username)\n    return user # retorna o objeto do usu\u00e1rio\n\n@router.delete(\"/planets/{planet_id}\")\ndef delete_planet(\n    planet_id: int,\n    current_user: User = Depends(get_current_active_user)\n):\n    if \"admin\" not in current_user.roles:\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail=\"Permiss\u00f5es insuficientes para executar esta opera\u00e7\u00e3o\",\n        )\n    # ... l\u00f3gica de exclus\u00e3o ...\n</code></pre>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/5/#5-verificacao-de-cargas-e-cofre-secreto-validacao-e-variaveis-de-ambiente","title":"5. Verifica\u00e7\u00e3o de Cargas e Cofre Secreto: Valida\u00e7\u00e3o e Vari\u00e1veis de Ambiente","text":"<p>Estes dois pontos j\u00e1 implementamos, mas \u00e9 importante destacar seu papel na seguran\u00e7a.</p> <ul> <li> <p>Nunca confie em dados de entrada (Valida\u00e7\u00e3o):</p> </li> <li> <p>Usamos <code>$request-&gt;validate()</code> no Laravel e modelos Pydantic no FastAPI. Isso nos protege de inje\u00e7\u00f5es SQL (ao usar Eloquent/SQLAlchemy) e dados incorretos que podem quebrar a aplica\u00e7\u00e3o. Sempre valide tudo o que vem de fora!</p> </li> <li> <p>Armazene segredos em <code>.env</code> (Vari\u00e1veis de Ambiente):</p> </li> <li> <p>Chaves de banco de dados, chaves secretas para JWT (<code>SECRET_KEY</code>), chaves de servi\u00e7os de terceiros \u2014 tudo isso nunca deve ir para o sistema de controle de vers\u00e3o (Git). Para isso, existem os arquivos <code>.env</code>, que s\u00e3o adicionados ao <code>.gitignore</code>.</p> </li> </ul>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/5/#questionario-para-fixacao","title":"Question\u00e1rio para fixa\u00e7\u00e3o","text":"<p>1. Para proteger contra a intercepta\u00e7\u00e3o de dados em redes p\u00fablicas, utiliza-se:</p>  a) Rate Limiting  b) HTTPS  c) CORS <p>2. A limita\u00e7\u00e3o de frequ\u00eancia de requisi\u00e7\u00f5es (Rate Limiting) protege principalmente contra:</p>  a) Inje\u00e7\u00f5es SQL  b) Ataques de for\u00e7a bruta e DoS  c) Cross-site scripting (XSS) <p>3. A pergunta \"O que este usu\u00e1rio tem permiss\u00e3o para fazer?\" \u00e9 resolvida por:</p>  a) Autentica\u00e7\u00e3o  b) Autoriza\u00e7\u00e3o  c) Valida\u00e7\u00e3o <p>4. Chaves secretas da API e senhas de BD devem ser armazenadas:</p>  a) Direto no c\u00f3digo para conveni\u00eancia  b) Em um reposit\u00f3rio p\u00fablico no GitHub  c) Em um arquivo `.env`, que \u00e9 exclu\u00eddo do Git Verificar <p>\ud83d\ude80 Conclus\u00e3o do Curso Parab\u00e9ns, comandante! Voc\u00ea concluiu com sucesso todas as miss\u00f5es.</p> <p>Voc\u00ea percorreu o caminho de um novato que apenas ouviu falar de APIs para um engenheiro capaz de projetar, desenvolver, documentar, proteger e testar de forma independente um servi\u00e7o web completo usando as duas tecnologias mais populares em seus ecossistemas.</p> <p>Voc\u00ea dominou a linguagem universal REST, aprendeu Laravel e FastAPI e construiu um \"Centro de Controle de Voo\" para eles em JavaScript puro.</p> <p>Esta \u00e9 uma conquista enorme. O mundo do desenvolvimento de APIs est\u00e1 agora aberto para voc\u00ea. Continue a explorar, aprender e construir coisas incr\u00edveis.</p>"},{"location":"pt/Cap%C3%ADtulo%206%20-%20Integra%C3%A7%C3%A3o%20e%20melhores%20pr%C3%A1ticas/5/#fim-da-comunicacao","title":"Fim da comunica\u00e7\u00e3o. \ud83d\ude80\u2604 Apoie a miss\u00e3o","text":"<p>Criar este tutorial \u00e9 um voo longo e complexo que exige muito tempo e energia. Se o material foi \u00fatil para voc\u00ea, pode ajudar a reabastecer os tanques de combust\u00edvel da nossa expedi\u00e7\u00e3o. Cada apoio \u00e9 mais uma \u00f3rbita em dire\u00e7\u00e3o a novos materiais \u00fateis.</p> <p></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/1/","title":"\u0413\u043b\u0430\u0432\u0430 1.1: \u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 API \u0438 \u0437\u0430\u0447\u0435\u043c \u043e\u043d\u043e \u043d\u0443\u0436\u043d\u043e?","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 30 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/1/#1-api","title":"1. \u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435: API \u043a\u0430\u043a \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u0443\u0437\u0435\u043b\"","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u2014 \u043a\u043e\u043c\u0430\u043d\u0434\u0438\u0440 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f. \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u043a \u041c\u041a\u0421, \u0432\u0430\u043c \u043d\u0443\u0436\u0435\u043d \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0441\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u0443\u0437\u0435\u043b. \u0411\u0435\u0437 \u043d\u0435\u0433\u043e \u0441\u043e\u0441\u0442\u044b\u043a\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u0438 \u0441\u0442\u0430\u043d\u0446\u0438\u044f \u0438\u0434\u0435\u0430\u043b\u044c\u043d\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0442 \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0443.</p> <p>API (Application Programming Interface) \u2014 \u044d\u0442\u043e \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \"\u0441\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u0443\u0437\u0435\u043b\" \u0434\u043b\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c. - \u042d\u0442\u043e \u043d\u0430\u0431\u043e\u0440 \u043f\u0440\u0430\u0432\u0438\u043b, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0440\u0430\u0437\u043d\u044b\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c \u043e\u0431\u043c\u0435\u043d\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432\u043c\u0435\u0441\u0442\u0435. - \u041f\u0440\u0438\u043c\u0435\u0440: \u043a\u043e\u0433\u0434\u0430 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0433\u043d\u043e\u0437 \u043f\u043e\u0433\u043e\u0434\u044b, \u043e\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 API \u043c\u0435\u0442\u0435\u043e\u0441\u0435\u0440\u0432\u0438\u0441\u0430.</p> <p>\ud83d\udca1 \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u044f \u0438\u0437 \u043a\u043e\u0441\u043c\u043e\u0441\u0430: API \u2014 \u043a\u0430\u043a \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0441\u0432\u044f\u0437\u0438 \u043c\u0435\u0436\u0434\u0443 \u0417\u0435\u043c\u043b\u0435\u0439 \u0438 \u043c\u0430\u0440\u0441\u043e\u0445\u043e\u0434\u043e\u043c. \u0420\u043e\u0432\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432 \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u043c \u0435\u043c\u0443 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \"\u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0444\u043e\u0442\u043e \u043a\u0440\u0430\u0442\u0435\u0440\u0430\"), \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431\u0440\u0430\u0442\u043d\u043e.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/1/#2-api","title":"2. \u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u044b API?","text":"<ol> <li> <p>\u0423\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438    \u0412\u043c\u0435\u0441\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0433\u043e \u0441 \u043d\u0443\u043b\u044f \u0432\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 \u0433\u043e\u0442\u043e\u0432\u043e\u0435 API, \u043a\u0430\u043a SpaceX API.    <pre><code># \u041f\u0440\u0438\u043c\u0435\u0440: \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0445 SpaceX\nimport requests\nresponse = requests.get(\"https://api.spacexdata.com/v3/missions\")\nprint(response.json()[0])  # \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445\n</code></pre></p> </li> <li> <p>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432    API \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0440\u043e\u0431\u043e\u0442\u0430\u043c-\u0437\u043e\u043d\u0434\u0430\u043c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u0417\u0435\u043c\u043b\u044e \u0431\u0435\u0437 \u0440\u0443\u0447\u043d\u043e\u0433\u043e \u0432\u043c\u0435\u0448\u0430\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430.</p> </li> <li> <p>\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441\u0438\u0441\u0442\u0435\u043c    \u041a\u0430\u043a \u0441\u0442\u044b\u043a\u043e\u0432\u043a\u0430 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u041c\u041a\u0421: API \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u0442 \u0432\u0430\u0448\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438, \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u043b\u0438 \u0434\u0430\u0436\u0435 \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f\u0430\u043c\u0438!</p> </li> <li> <p>\u0414\u043e\u0441\u0442\u0443\u043f \u043a \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c \u0434\u0430\u043d\u043d\u044b\u043c    \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, SpaceX API \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0445 \u0440\u0430\u043a\u0435\u0442.</p> </li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/1/#3-api","title":"3. \u041a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 API?","text":"<ul> <li>\u041a\u043b\u0438\u0435\u043d\u0442 (\u0432\u0430\u0448\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430) \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440.</li> <li>\u0421\u0435\u0440\u0432\u0435\u0440 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, NASA) \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 JSON.</li> <li>\u0414\u0430\u043d\u043d\u044b\u0435 \u2014 \u044d\u0442\u043e \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0441\u043e\u043a\u0440\u043e\u0432\u0438\u0449\u0430\": \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u041c\u041a\u0421, \u0444\u043e\u0442\u043e \u0433\u0430\u043b\u0430\u043a\u0442\u0438\u043a, \u0441\u043f\u0438\u0441\u043e\u043a \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442.</li> </ul> <p>\u26a1 \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043a API \"Open Notify\" (\u041c\u041a\u0421): <pre><code>curl \"http://api.open-notify.org/iss-now.json\"\n</code></pre> \u041e\u0442\u0432\u0435\u0442: <pre><code>{\n  \"message\": \"success\",\n  \"timestamp\": 1725431234,\n  \"iss_position\": {\n    \"latitude\": \"51.1234\",\n    \"longitude\": \"-120.5678\"\n  }\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/1/#4-api","title":"4. \u0422\u0438\u043f\u044b API (\u041a\u0440\u0430\u0442\u043a\u0438\u0439 \u043e\u0431\u0437\u043e\u0440)","text":"\u0422\u0438\u043f \u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0437 \u043a\u043e\u0441\u043c\u043e\u0441\u0430 \u0413\u0434\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f REST \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c \"\u0426\u0423\u041f \u2194 \u0441\u043f\u0443\u0442\u043d\u0438\u043a\" \u0412\u0435\u0431-\u0441\u0435\u0440\u0432\u0438\u0441\u044b (90% \u0441\u043b\u0443\u0447\u0430\u0435\u0432) GraphQL \"\u041a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441\" (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \"\u0434\u0430\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437\u043c\u0435\u0440 \u0438 \u043c\u0430\u0441\u0441\u0443 \u043f\u043b\u0430\u043d\u0435\u0442\u044b\") \u0421\u043b\u043e\u0436\u043d\u044b\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b SOAP \u041a\u0430\u043a \u0440\u0430\u0434\u0438\u043e\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0430 \u0432 \u0441\u0442\u0430\u0440\u044b\u0445 \u043c\u0438\u0441\u0441\u0438\u044f\u0445 \u041a\u043e\u0440\u043f\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f <p>\u0412 \u044d\u0442\u043e\u043c \u0443\u0447\u0435\u0431\u043d\u0438\u043a\u0435 \u043c\u044b \u0441\u043e\u0441\u0440\u0435\u0434\u043e\u0442\u043e\u0447\u0438\u043c\u0441\u044f \u043d\u0430 REST API \u2014 \u0441\u0430\u043c\u043e\u043c \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/1/#5-api","title":"5. \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 API","text":"<ol> <li>NASA Open API: \u0414\u0430\u043d\u043d\u044b\u0435 \u043e \u0430\u0441\u0442\u0435\u0440\u043e\u0438\u0434\u0430\u0445, \u0444\u043e\u0442\u043e \u0441 \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f\u0430 Hubble.</li> <li>SpaceX API: \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0445, \u0440\u0430\u043a\u0435\u0442\u0430\u0445, \u043a\u043e\u0440\u0430\u0431\u043b\u044f\u0445 Dragon.</li> <li>Open Notify: \u0422\u0435\u043a\u0443\u0449\u0435\u0435 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u041c\u041a\u0421, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0434\u0435\u0439 \u0432 \u043a\u043e\u0441\u043c\u043e\u0441\u0435.</li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/1/#_1","title":"\u0418\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043a\u0432\u0438\u0437","text":"<p>1. API \u2014 \u044d\u0442\u043e...</p>  a) \u0418\u0441\u043a\u0443\u0441\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u043b\u043b\u0435\u043a\u0442  b) \u041d\u0430\u0431\u043e\u0440 \u043f\u0440\u0430\u0432\u0438\u043b \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c  c) \u042f\u0437\u044b\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f <p>2. \u0417\u0430\u0447\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c API \u0432\u043c\u0435\u0441\u0442\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0441\u0432\u043e\u0435\u0433\u043e \u043a\u043e\u0434\u0430?</p>  a) \u0427\u0442\u043e\u0431\u044b \u0441\u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f  b) \u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c \u0434\u0430\u043d\u043d\u044b\u043c  c) \u041e\u0431\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 <p>3. \u041a\u0430\u043a\u043e\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \u0447\u0430\u0449\u0435 \u0432\u0441\u0435\u0433\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 API?</p>  a) XML  b) JSON  c) TXT \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>API \u2014 \u044d\u0442\u043e \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432. \u041a\u0430\u043a \u043a\u043e\u0441\u043c\u043e\u043d\u0430\u0432\u0442 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0431\u0435\u0437 \u0441\u0432\u044f\u0437\u0438 \u0441 \u0426\u0423\u041f, \u0442\u0430\u043a \u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0441\u043b\u043e\u0436\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0431\u0435\u0437 API. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0438\u0437\u0443\u0447\u0438\u043c, \u043a\u0430\u043a \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \"\u043a\u043e\u043c\u0430\u043d\u0434\u044b\" \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e HTTP-\u043c\u0435\u0442\u043e\u0434\u043e\u0432!</p> <p>\ud83d\udccc \u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 \u043a Open Notify API \u0438 \u0443\u0437\u043d\u0430\u0442\u044c, \u0433\u0434\u0435 \u0441\u0435\u0439\u0447\u0430\u0441 \u041c\u041a\u0421! (\u042d\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0434\u0430\u0436\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u043a\u043e\u043d\u0441\u043e\u043b\u0438)</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/2/","title":"\u0413\u043b\u0430\u0432\u0430 1.2: HTTP-\u043c\u0435\u0442\u043e\u0434\u044b \u0438 \u0441\u0442\u0430\u0442\u0443\u0441-\u043a\u043e\u0434\u044b","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 40 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/2/#1-http","title":"1. HTTP: \u042f\u0437\u044b\u043a \u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432 \u043a\u043e\u0441\u043c\u043e\u0441\u0435","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u2014 \u0426\u0435\u043d\u0442\u0440 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u041f\u043e\u043b\u0435\u0442\u0430\u043c\u0438 (\u0426\u0423\u041f), \u0430 \u0441\u0435\u0440\u0432\u0435\u0440 API \u2014 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c. HTTP (HyperText Transfer Protocol) \u2014 \u044d\u0442\u043e \u0440\u0430\u0434\u0438\u043e\u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0432\u0430\u043c\u0438.</p> <p>\u041a\u0430\u0436\u0434\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442:</p> <ul> <li> <p>\u041c\u0435\u0442\u043e\u0434 \u2192 \u0427\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \"\u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0437\u043e\u043d\u0434\")</p> </li> <li> <p>\u0421\u0442\u0430\u0442\u0443\u0441-\u043a\u043e\u0434 \u2192 \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\"\u0437\u043e\u043d\u0434 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e!\")</p> </li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f: <code>GET /stars</code> = \"\u0426\u0423\u041f \u2192 \u041a\u043e\u0440\u0430\u0431\u043b\u044e: \u0421\u043e\u043e\u0431\u0449\u0438 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0437\u0432\u0435\u0437\u0434!\" <code>200 OK</code> = \"\u041a\u043e\u0440\u0430\u0431\u043b\u044c \u2192 \u0426\u0423\u041f: \u041a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b!\"</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/2/#2-http-","title":"2. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 HTTP-\u043c\u0435\u0442\u043e\u0434\u044b","text":"<p>\u041a\u0430\u0436\u0434\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u2014 \u043a\u0430\u043a \u0442\u0438\u043f \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0434\u043b\u044f \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043c\u0438\u0441\u0441\u0438\u0438:</p> \u041c\u0435\u0442\u043e\u0434 \u0410\u043d\u0430\u043b\u043e\u0433 \u0432 \u043a\u043e\u0441\u043c\u043e\u0441\u0435 \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 GET \u0417\u0430\u043f\u0440\u043e\u0441 \u0434\u0430\u043d\u043d\u044b\u0445 (\u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f) <code>GET /planets</code> \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u0435\u0442 POST \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043d\u043e\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 (\u0437\u0430\u043f\u0443\u0441\u043a \u0440\u0430\u043a\u0435\u0442\u044b) <code>POST /satellites</code> \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0441\u043f\u0443\u0442\u043d\u0438\u043a PUT \u041f\u043e\u043b\u043d\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 (\u043a\u043e\u0440\u0440\u0435\u043a\u0446\u0438\u044f \u043e\u0440\u0431\u0438\u0442\u044b) <code>PUT /satellites/iss</code> \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u041c\u041a\u0421 DELETE \u0423\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 (\u0441\u0445\u043e\u0434 \u0441 \u043e\u0440\u0431\u0438\u0442\u044b) <code>DELETE /debris/123</code> \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043c\u0443\u0441\u043e\u0440 <p>\u26a1 \u041f\u0440\u0438\u043c\u0435\u0440 \u043a\u043e\u0434\u0430 (Python): <pre><code>import requests\n\n# GET: \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0440\u0430\u043a\u0435\u0442\u0435 Falcon 9\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 SpaceX API\nresponse = requests.get(\"https://api.spacexdata.com/v4/rockets/5e9d0d95eda69973a809d1ec\")\nprint(response.status_code, response.json()['name']) # 200 Falcon 9\n\n# POST: \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u0441\u0442 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c API\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u0435\u0440\u0432\u0438\u0441-\u043f\u0435\u0441\u043e\u0447\u043d\u0438\u0446\u0443 jsonplaceholder\nnew_post = {\"title\": \"Artemis Mission\", \"body\": \"Ready for launch\", \"userId\": 1}\nresponse = requests.post(\"https://jsonplaceholder.typicode.com/posts\", json=new_post)\nprint(response.status_code, response.json()['id'])  # 201 101 (\u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u043e\u0439 ID)\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/2/#3-","title":"3. \u0412\u0430\u0436\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0443\u0441-\u043a\u043e\u0434\u044b","text":"<p>\u041e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u2014 \u043a\u0430\u043a \u0441\u0438\u0433\u043d\u0430\u043b \u0441 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430:</p> \u0413\u0440\u0443\u043f\u043f\u0430 \u041a\u043e\u0434 \u0410\u043d\u0430\u043b\u043e\u0433 \u0432 \u043a\u043e\u0441\u043c\u043e\u0441\u0435 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 <code>2xx</code> 200 \u2705 \"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043e!\" \u0423\u0441\u043f\u0435\u0445 201 \ud83d\ude80 \"\u0420\u0430\u043a\u0435\u0442\u0430 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u0430!\" \u041e\u0431\u044a\u0435\u043a\u0442 \u0441\u043e\u0437\u0434\u0430\u043d <code>3xx</code> 301 \ud83c\udf0d \"\u0426\u0423\u041f \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d \u043d\u0430 \u043d\u043e\u0432\u044b\u0439 \u0430\u0434\u0440\u0435\u0441\" \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 <code>4xx</code> 400 \u274c \"\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435!\" \u041e\u0448\u0438\u0431\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 404 \ud83e\ude90 \"\u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430!\" \u0420\u0435\u0441\u0443\u0440\u0441 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 <code>5xx</code> 500 \ud83d\udd25 \"\u0421\u0431\u043e\u0439 \u0432 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435!\" \u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/2/#4-","title":"4. \u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430: \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u0442\u0430\u0442\u0443\u0441-\u043a\u043e\u0434\u043e\u0432","text":"<p>\u0412\u0441\u0435\u0433\u0434\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u043e\u0442\u0432\u0435\u0442 API! \u041f\u0440\u0438\u043c\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043e\u0448\u0438\u0431\u043e\u043a: <pre><code>import requests\n\ndef get_post_data(post_id):\n    \"\"\"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0441\u0442\u0430 \u0441 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 \u0441\u0442\u0430\u0442\u0443\u0441-\u043a\u043e\u0434\u043e\u0432.\"\"\"\n    try:\n        response = requests.get(f\"https://jsonplaceholder.typicode.com/posts/{post_id}\")\n\n        # \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0441\u0442\u0430\u0442\u0443\u0441-\u043a\u043e\u0434 \u043e\u0442\u0432\u0435\u0442\u0430\n        if response.status_code == 200:\n            print(f\"\u2705 \u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0430 {post_id} \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u044b!\")\n            return response.json()\n        elif response.status_code == 404:\n            print(f\"\u26a0\ufe0f \u0420\u0435\u0441\u0443\u0440\u0441 \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0430 {post_id} \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d!\")\n            return None\n        else:\n            # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0434\u0440\u0443\u0433\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0445 (4xx) \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0445 (5xx) \u043e\u0448\u0438\u0431\u043e\u043a\n            print(f\"\ud83d\udea8 \u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430! \u0421\u0442\u0430\u0442\u0443\u0441-\u043a\u043e\u0434: {response.status_code}\")\n            return None\n\n    except requests.exceptions.RequestException as e:\n        # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043d\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430)\n        print(f\"\ud83d\udd25 \u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f: {e}\")\n        return None\n\n# --- \u0422\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u0430\u0448\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e ---\nprint(\"--- \u041f\u043e\u0438\u0441\u043a \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0430 ---\")\nget_post_data(1)\n\nprint(\"\\n--- \u041f\u043e\u0438\u0441\u043a \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0430 ---\")\nget_post_data(9999) # \u042d\u0442\u043e\u0442 \u043f\u043e\u0441\u0442 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442, \u043e\u0436\u0438\u0434\u0430\u0435\u043c 404\n</code></pre></p> <p>\ud83d\udd2d \u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0437 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e API (SpaceX): \u0417\u0430\u043f\u0440\u043e\u0441: <code>GET https://api.spacexdata.com/v4/ships/OCISLY</code> \u041e\u0442\u0432\u0435\u0442: <code>200 OK</code> + \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043a\u043e\u0440\u0430\u0431\u043b\u0435 \u0417\u0430\u043f\u0440\u043e\u0441: <code>GET https://api.spacexdata.com/v4/ships/UNICORN</code> \u041e\u0442\u0432\u0435\u0442: <code>404 Not Found</code></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/2/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u041a\u0430\u043a\u043e\u0439 \u043c\u0435\u0442\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u0437\u0432\u0435\u0437\u0434\u0430\u0445?</p>  a) POST  b) PUT  c) GET <p>2. \u0421\u0442\u0430\u0442\u0443\u0441 `201 Created` \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442:</p>  a) \u041e\u0431\u044a\u0435\u043a\u0442 \u0443\u0434\u0430\u043b\u0435\u043d  b) \u041e\u0431\u044a\u0435\u043a\u0442 \u0441\u043e\u0437\u0434\u0430\u043d  c) \u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 <p>3. \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043f\u0443\u0442\u043d\u0438\u043a\u0430:</p>  a) PATCH  b) DELETE  c) PUT <p>4. \u0427\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 `500 Internal Server Error`?</p>  a) \u041e\u0448\u0438\u0431\u043a\u0430 \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430  b) \u0421\u0431\u043e\u0439 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435  c) \u0423\u0441\u043f\u0435\u0448\u043d\u043e\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b: HTTP-\u043c\u0435\u0442\u043e\u0434\u044b \u2014 \u0432\u0430\u0448\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0434\u043b\u044f \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u0438\u0441\u0441\u0438\u0439, \u0430 \u0441\u0442\u0430\u0442\u0443\u0441-\u043a\u043e\u0434\u044b \u2014 \u043e\u0442\u0447\u0435\u0442\u044b \u043e\u0431 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438. \u041f\u043e\u043c\u043d\u0438\u0442\u0435:</p> <p><code>GET</code> = \"\u0414\u0430\u0439 \u0434\u0430\u043d\u043d\u044b\u0435\", <code>POST</code> = \"\u0421\u043e\u0437\u0434\u0430\u0439 \u043d\u043e\u0432\u043e\u0435\", <code>PUT</code> = \"\u041e\u0431\u043d\u043e\u0432\u0438 \u0432\u0441\u0451\", <code>DELETE</code> = \"\u0423\u043d\u0438\u0447\u0442\u043e\u0436\u044c\" <code>2xx</code> = \u0423\u0441\u043f\u0435\u0445, <code>4xx</code> = \u0422\u0432\u043e\u044f \u043e\u0448\u0438\u0431\u043a\u0430, <code>5xx</code> = \u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430</p> <p>\u0413\u043e\u0442\u043e\u0432\u044c\u0442\u0435\u0441\u044c \u043a \u0441\u0442\u0430\u0440\u0442\u0443! \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0440\u0430\u0441\u0448\u0438\u0444\u0440\u0443\u0435\u043c \"\u0442\u0435\u043b\u0435\u0433\u0440\u0430\u043c\u043c\u044b\" \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u2014 \u0444\u043e\u0440\u043c\u0430\u0442 JSON.</p> <p>\ud83d\udccc \u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 SpaceX API, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c <code>GET /launches/latest</code> \u0438 \u0438\u0437\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u0434\u044b \u043e\u0442\u0432\u0435\u0442\u043e\u0432!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/3/","title":"\u0413\u043b\u0430\u0432\u0430 1.3: \u0424\u043e\u0440\u043c\u0430\u0442 JSON","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 35 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/3/#1-json","title":"1. JSON: \u042f\u0437\u044b\u043a \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0432\u044f\u0437\u0438","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0437\u043e\u043d\u0434 \u0438 \u0426\u0423\u041f \u0433\u043e\u0432\u043e\u0440\u044f\u0442 \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u044f\u0437\u044b\u043a\u0430\u0445. JSON (JavaScript Object Notation) \u2014 \u044d\u0442\u043e \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u044b\u0439 \u044f\u0437\u044b\u043a \u0434\u0430\u043d\u043d\u044b\u0445, \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0439 \u0438 \u043b\u044e\u0434\u044f\u043c, \u0438 \u043c\u0430\u0448\u0438\u043d\u0430\u043c. \u041a\u0430\u043a \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u044b\u0439 \u044f\u0437\u044b\u043a \u0430\u0441\u0442\u0440\u043e\u043d\u0430\u0432\u0442\u043e\u0432!</p> <p>\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430:</p> <ul> <li>\ud83e\udeb6 \u041b\u0435\u0433\u043a\u0438\u0439: \u0431\u044b\u0441\u0442\u0440\u0430\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u0434\u0430\u0436\u0435 \u043f\u0440\u0438 \u0441\u043b\u0430\u0431\u043e\u043c \u0441\u0438\u0433\u043d\u0430\u043b\u0435</li> <li>\ud83d\udc40 \u0427\u0435\u043b\u043e\u0432\u0435\u043a\u043e\u0447\u0438\u0442\u0430\u0435\u043c\u044b\u0439: \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0432\u0438\u0434\u043d\u0430 \u043d\u0435\u0432\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u043c \u0433\u043b\u0430\u0437\u043e\u043c</li> <li>\ud83d\udd04 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u044b\u0439: \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432\u0441\u0435\u043c\u0438 \u044f\u0437\u044b\u043a\u0430\u043c\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>JSON \u2014 \u043a\u0430\u043a \u0446\u0438\u0444\u0440\u043e\u0432\u0430\u044f \u0442\u0435\u043b\u0435\u0433\u0440\u0430\u043c\u043c\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043e \u0437\u0432\u0435\u0437\u0434\u0430\u0445. \u0412\u043c\u0435\u0441\u0442\u043e \u043c\u043e\u0440\u0437\u044f\u043d\u043a\u0438 \u2014 \u0447\u0435\u0442\u043a\u0438\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b <code>{\u043a\u043b\u044e\u0447: \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435}</code>.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/3/#2-json-","title":"2. \u0410\u043d\u0430\u0442\u043e\u043c\u0438\u044f JSON-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f","text":"<p>JSON \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u0434\u0432\u0443\u0445 \u0442\u0438\u043f\u043e\u0432 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440:</p> <p>A. \u041e\u0431\u044a\u0435\u043a\u0442\u044b (\u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043a\u043e\u0440\u0430\u0431\u043b\u0438) <pre><code>{\n  \"name\": \"Voyager-1\",\n  \"launch_year\": 1977,\n  \"is_active\": true,\n  \"position\": [-19.1, 42.7, 0.3]\n}\n</code></pre></p> <p>B. \u041c\u0430\u0441\u0441\u0438\u0432\u044b (\u0417\u0432\u0435\u0437\u0434\u043d\u044b\u0435 \u0441\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f) <pre><code>[\n  {\"name\": \"Sirius\", \"magnitude\": -1.46},\n  {\"name\": \"Canopus\", \"magnitude\": -0.74},\n  {\"name\": \"Arcturus\", \"magnitude\": -0.05}\n]\n</code></pre></p> <p>\u26a1 \u041f\u0440\u0430\u0432\u0438\u043b\u0430 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430:</p> <ul> <li>\u041a\u043b\u044e\u0447\u0438 \u0432 \u043a\u0430\u0432\u044b\u0447\u043a\u0430\u0445 <code>\" \"</code></li> <li>\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f: \u0441\u0442\u0440\u043e\u043a\u0438, \u0447\u0438\u0441\u043b\u0430, boolean (<code>true</code>/<code>false</code>), <code>null</code></li> <li>\u0414\u0430\u043d\u043d\u044b\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u0437\u0430\u043f\u044f\u0442\u044b\u043c\u0438</li> <li>\u0424\u0438\u0433\u0443\u0440\u043d\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438 <code>{}</code> \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0435 <code>[]</code> \u0434\u043b\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/3/#3-json-vs-xml","title":"3. JSON vs XML: \u0411\u0438\u0442\u0432\u0430 \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u0432","text":"\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 JSON (\u0421\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0441\u043f\u0443\u0442\u043d\u0438\u043a) XML (\u0421\u0442\u0430\u0440\u044b\u0439 \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f) \u0427\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u044c \u0412\u044b\u0441\u043e\u043a\u0430\u044f (\u043f\u0440\u044f\u043c\u043e\u0439 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043f\u043e\u043b\u044f\u043c) \u041d\u0438\u0437\u043a\u0430\u044f (\u0442\u0435\u0433\u0438 <code>&lt;planet&gt;...&lt;/planet&gt;</code>) \u0420\u0430\u0437\u043c\u0435\u0440 \u041a\u043e\u043c\u043f\u0430\u043a\u0442\u043d\u044b\u0439 \u0413\u0440\u043e\u043c\u043e\u0437\u0434\u043a\u0438\u0439 (+30% \u043a \u0440\u0430\u0437\u043c\u0435\u0440\u0443) \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0411\u044b\u0441\u0442\u0440\u0430\u044f \u041c\u0435\u0434\u043b\u0435\u043d\u043d\u0430\u044f \u041f\u0440\u0438\u043c\u0435\u0440 <code>{\"planet\": \"Mars\"}</code> <code>&lt;planet&gt;Mars&lt;/planet&gt;</code> <p>\ud83d\udd2d \u041f\u043e\u0447\u0435\u043c\u0443 JSON \u043f\u043e\u0431\u0435\u0434\u0438\u043b \u0432 \u043a\u043e\u0441\u043c\u043e\u0441\u0435?</p> <p>API NASA, SpaceX \u0438 ESA \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 JSON \u2014 \u043e\u043d \u0438\u0434\u0435\u0430\u043b\u0435\u043d \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u044b\u0445!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/3/#4-json","title":"4. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 JSON \u0432 \u043a\u043e\u0434\u0435","text":"<p>Python \u043f\u0440\u0438\u043c\u0435\u0440 (\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u041b\u0443\u043d\u0435): <pre><code>import requests\nimport json\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0435 API, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u0421\u043e\u043b\u043d\u0435\u0447\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435\n# \u043e\u0442 The Solar System OpenData API\ntry:\n    response = requests.get(\"https://api.le-systeme-solaire.net/rest/bodies/terre\")\n    response.raise_for_status() # \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043d\u0430 HTTP-\u043e\u0448\u0438\u0431\u043a\u0438 (4xx, 5xx)\n\n    planet_data = response.json()\n\n    print(f\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435: {planet_data['englishName']}\")\n    print(f\"\u0421\u043f\u0443\u0442\u043d\u0438\u043a\u0438: {[moon['moon'] for moon in planet_data['moons']]}\")\n\n    # \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u044f Python \u0432 JSON-\u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f\n    planet_json_str = json.dumps(planet_data, indent=2, ensure_ascii=False) # ensure_ascii=False \u0434\u043b\u044f \u043a\u0438\u0440\u0438\u043b\u043b\u0438\u0446\u044b\n    print(\"\\n--- \u041e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 JSON ---\")\n    print(planet_json_str)\n\nexcept requests.exceptions.RequestException as e:\n    print(f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: {e}\")\n</code></pre></p> <p>JavaScript \u043f\u0440\u0438\u043c\u0435\u0440 (\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f\u0430): <pre><code>const Data = `{\n  \"id\": \"terre\",\n  \"name\": \"La Terre\",\n  \"englishName\": \"Earth\",\n  \"isPlanet\": true,\n  \"moons\": [\n    {\n      \"moon\": \"La Lune\",\n      \"rel\": \"https://api.le-systeme-solaire.net/rest/bodies/lune\"\n    }\n  ],\n  \"semimajorAxis\": 149598023,\n  \"perihelion\": 147095000,\n  \"aphelion\": 152100000,\n  \"eccentricity\": 0.0167,\n  \"inclination\": 0,\n  \"mass\": {\n    \"massValue\": 5.97237,\n    \"massExponent\": 24\n  },\n  \"vol\": {\n    \"volValue\": 1.08321,\n    \"volExponent\": 12\n  },\n  \"density\": 5.5136,\n  \"gravity\": 9.8,\n  \"escape\": 11190,\n  \"meanRadius\": 6371.0084,\n  \"equaRadius\": 6378.1366,\n  \"polarRadius\": 6356.8,\n  \"flattening\": 0.00335,\n  \"dimension\": \"\",\n  \"sideralOrbit\": 365.256,\n  \"sideralRotation\": 23.9345,\n  \"aroundPlanet\": null,\n  \"discoveredBy\": \"\",\n  \"discoveryDate\": \"\",\n  \"alternativeName\": \"\",\n  \"axialTilt\": 23.4393,\n  \"avgTemp\": 288,\n  \"mainAnomaly\": 358.617,\n  \"argPeriapsis\": 85.901,\n  \"longAscNode\": 18.272,\n  \"bodyType\": \"Planet\"\n}`;\n\nconst dataObj = JSON.parse(Data);\nconsole.log(dataObj.target);\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/3/#5-json","title":"5. \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f JSON: \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \"\u0441\u0438\u0433\u043d\u0430\u043b\u0430\"","text":"<p>\u041f\u0435\u0440\u0435\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e JSON:</p> <ol> <li> <p>\u0418\u043c\u0435\u0435\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 (\u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0441\u043a\u043e\u0431\u043a\u0438!)</p> </li> <li> <p>\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0435 \u043f\u043e\u043b\u044f</p> </li> <li> <p>\u041d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043e\u0448\u0438\u0431\u043e\u043a</p> </li> </ol> <p>\u0418\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b: - JSONLint (\u043a\u0430\u043a \u0434\u0435\u0442\u0435\u043a\u0442\u043e\u0440 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043c\u0443\u0441\u043e\u0440\u0430 \u0434\u043b\u044f JSON) - \u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u043f\u0430\u0440\u0441\u0435\u0440\u044b \u044f\u0437\u044b\u043a\u0430 (\u0432\u044b\u0431\u0440\u043e\u0441\u044f\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043d\u0435\u0432\u0435\u0440\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435)</p> <p>\u26a0\ufe0f \u041f\u0440\u0438\u043c\u0435\u0440 \u043e\u0448\u0438\u0431\u043a\u0438:</p> <p><code>{\"planet\": \"Mars\"</code> \u2192 \u041d\u0435\u0442 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0435\u0439 \u0441\u043a\u043e\u0431\u043a\u0438!</p> <p>\u0420\u0435\u0448\u0435\u043d\u0438\u0435: \u0412\u0441\u0435\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>json.loads()</code> \u0432 Python \u0438\u043b\u0438 <code>JSON.parse()</code> \u0432 JS \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/3/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. JSON \u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a...</p>  a) Java Space Object Notation  b) JavaScript Object Notation  c) Jupiter's Satellite Orbital Network <p>2. \u041a\u0430\u043a \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 JSON:</p>  a) ()  b) {}  c) [] <p>3. \u0427\u0442\u043e \u041d\u0415 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u0432 JSON?</p>  a) \"name\": \"Saturn\"  b) \"radius_km\": 58232  c) \"has_rings\": undefined <p>4. \u041f\u043e\u0447\u0435\u043c\u0443 JSON \u043b\u0443\u0447\u0448\u0435 XML \u0434\u043b\u044f \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 API?</p>  a) \u041c\u0435\u043d\u044c\u0448\u0438\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0438 \u0432\u044b\u0441\u043e\u043a\u0430\u044f \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c  b) \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0438\u043d\u043e\u043f\u043b\u0430\u043d\u0435\u0442\u043d\u044b\u0445 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043e\u043a  c) \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0432\u0438\u0434\u0435\u043e <p>5. \u041a\u0430\u043a \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c JSON-\u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043e\u0431\u044a\u0435\u043a\u0442 Python?</p>  a) json.parse()  b) json.to_object()  c) json.loads() \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>JSON \u2014 \u044d\u0442\u043e \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u044d\u0441\u043f\u0435\u0440\u0430\u043d\u0442\u043e\" \u043c\u0438\u0440\u0430 API. \u0417\u043d\u0430\u044f \u0435\u0433\u043e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443, \u0432\u044b \u0441\u043c\u043e\u0436\u0435\u0442\u0435:</p> <ul> <li> <p>\ud83d\udce1 \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f\u043e\u0432 \u0438 \u0437\u043e\u043d\u0434\u043e\u0432</p> </li> <li> <p>\ud83d\udd27 \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043c\u0435\u0436\u0434\u0443 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438</p> </li> <li> <p>\ud83d\udef0\ufe0f \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u043d\u0430\u0443\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0444\u0430\u0439\u043b\u0430\u0445</p> </li> </ul> <p>\u0413\u043e\u0442\u043e\u0432\u044c\u0442\u0435\u0441\u044c \u043a \u0441\u0442\u044b\u043a\u043e\u0432\u043a\u0435! \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0438\u0437\u0443\u0447\u0438\u043c \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0443 REST API \u2014 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0442\u0430\u043d\u0446\u0438\u0435\u0439\" \u0432\u0430\u0448\u0435\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430.</p> <p>\ud83d\udccc \u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430: \u0417\u0430\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 NASA Open APIs, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 API \u0430\u0441\u0442\u0435\u0440\u043e\u0438\u0434\u043e\u0432 (Asteroids NeoWs) \u0438 \u0438\u0437\u0443\u0447\u0438\u0442\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 JSON \u0432 \u043e\u0442\u0432\u0435\u0442\u0435!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/4/","title":"\u0413\u043b\u0430\u0432\u0430 1.4: \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 REST API","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 45 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/4/#1-rest-api","title":"1. REST API: \u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0442\u0430\u043d\u0446\u0438\u0438","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0441\u0442\u0430\u043d\u0446\u0438\u044e, \u0433\u0434\u0435 \u043a\u0430\u0436\u0434\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c \u0438\u043c\u0435\u0435\u0442:</p> <ul> <li> <p>\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0441\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u043f\u043e\u0440\u0442 (\u0435\u0434\u0438\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441)</p> </li> <li> <p>\u0427\u0435\u0442\u043a\u0443\u044e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e (\u0436\u0438\u043b\u043e\u0439 \u043e\u0442\u0441\u0435\u043a, \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u0438\u044f, \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435)</p> </li> <li> <p>\u0421\u0438\u0441\u0442\u0435\u043c\u0443 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 (\u0442\u043e\u0447\u043d\u043e\u0435 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435)</p> </li> </ul> <p>REST (Representational State Transfer) API \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043f\u043e \u0442\u0435\u043c \u0436\u0435 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0430\u043c:</p> <ul> <li> <p>\u0415\u0434\u0438\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432</p> </li> <li> <p>\u0427\u0435\u0442\u043a\u043e\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432</p> </li> <li> <p>\u0410\u0434\u0440\u0435\u0441\u0430\u0446\u0438\u044f \u0447\u0435\u0440\u0435\u0437 URI (\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b)</p> </li> </ul> <p>\ud83d\udca1 \u041a\u043b\u044e\u0447\u0435\u0432\u0430\u044f \u0438\u0434\u0435\u044f:</p> <p>\u041a\u0430\u0436\u0434\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 (\u043f\u043b\u0430\u043d\u0435\u0442\u044b, \u0440\u0430\u043a\u0435\u0442\u044b, \u0430\u0441\u0442\u0440\u043e\u043d\u0430\u0432\u0442\u044b) \u0438\u043c\u0435\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 URL-\u0430\u0434\u0440\u0435\u0441 \u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u0447\u0435\u0440\u0435\u0437 HTTP-\u043c\u0435\u0442\u043e\u0434\u044b.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/4/#2-6-rest","title":"2. 6 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u043e\u0432 REST \u0432 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438","text":"\u041f\u0440\u0438\u043d\u0446\u0438\u043f REST \u0410\u043d\u0430\u043b\u043e\u0433 \u043d\u0430 \u041c\u041a\u0421 \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f API \u0415\u0434\u0438\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u0441\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u0443\u0437\u043b\u044b \u041e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 Stateless \u041a\u0430\u0436\u0434\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0441\u0430\u043c\u043e\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u0430 \u0421\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0445\u0440\u0430\u043d\u0438\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u041b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u043f\u0430\u0441\u044b \u043f\u0440\u043e\u0432\u0438\u0437\u0438\u0438 \u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u0442\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u041a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440 \u0427\u0435\u0442\u043a\u043e\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435: \u0426\u0423\u041f \u2194 \u0421\u0442\u0430\u043d\u0446\u0438\u044f \u041d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0435 \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 \u041c\u043d\u043e\u0433\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u043e\u0441\u0442\u044c \u0420\u0435\u0442\u0440\u0430\u043d\u0441\u043b\u044f\u0442\u043e\u0440\u044b-\u0441\u043f\u0443\u0442\u043d\u0438\u043a\u0438 \u041f\u0440\u043e\u043a\u0441\u0438, \u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u041a\u043e\u0434 \u043f\u043e \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044e \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u041f\u041e \u0434\u043b\u044f \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u043e\u0432 (\u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e) \u041f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/4/#3-uri","title":"3. \u0420\u0435\u0441\u0443\u0440\u0441\u044b \u0438 URI: \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b","text":"<p>\u041a\u0430\u0436\u0434\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 API \u2014 \u044d\u0442\u043e \u0440\u0435\u0441\u0443\u0440\u0441 \u0441 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c \u0430\u0434\u0440\u0435\u0441\u043e\u043c: <pre><code>https://api.spacexdata.com/v4/    \u2190 \u0411\u0430\u0437\u043e\u0432\u044b\u0439 URL\n          rockets/            \u2190 \u041a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0440\u0430\u043a\u0435\u0442\n          rockets/5e9d0d95eda69973a809d1ec \u2190 \u041a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 (\u043f\u043e ID)\n</code></pre></p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432:</p> <ul> <li><code>GET /stars</code> \u2192 \u0421\u043f\u0438\u0441\u043e\u043a \u0437\u0432\u0435\u0437\u0434</li> <li><code>GET /stars/sirius</code> \u2192 \u0414\u0430\u043d\u043d\u044b\u0435 \u043e \u0421\u0438\u0440\u0438\u0443\u0441\u0435</li> <li><code>POST /satellites</code> \u2192 \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0441\u043f\u0443\u0442\u043d\u0438\u043a</li> <li><code>PUT /missions/artemis</code> \u2192 \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043c\u0438\u0441\u0441\u0438\u044e</li> </ul> <p>\u0421\u0445\u0435\u043c\u0430 URI-\u0438\u0435\u0440\u0430\u0440\u0445\u0438\u0438: <pre><code>[\u0411\u0430\u0437\u043e\u0432\u044b\u0439 URL]\n\u251c\u2500\u2500 /planets          \u2192 \u041a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u043f\u043b\u0430\u043d\u0435\u0442\n\u2502   \u251c\u2500\u2500 /mars         \u2192 \u0420\u0435\u0441\u0443\u0440\u0441 \"\u041c\u0430\u0440\u0441\"\n\u2502   \u2514\u2500\u2500 /venus        \u2192 \u0420\u0435\u0441\u0443\u0440\u0441 \"\u0412\u0435\u043d\u0435\u0440\u0430\"\n\u2514\u2500\u2500 /launches         \u2192 \u041a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u0432\n    \u251c\u2500\u2500 /upcoming     \u2192 \u041f\u043e\u0434\u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f\n    \u2514\u2500\u2500 /latest       \u2192 \u0420\u0435\u0441\u0443\u0440\u0441\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/4/#4-crud-http-","title":"4. CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 HTTP-\u043c\u0435\u0442\u043e\u0434\u044b","text":"\u041e\u043f\u0435\u0440\u0430\u0446\u0438\u044f HTTP-\u043c\u0435\u0442\u043e\u0434 \u041f\u0440\u0438\u043c\u0435\u0440 (\u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0441\u0442\u0430\u043d\u0446\u0438\u044f) \u041e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Create <code>POST</code> \u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c <code>201 Created</code> Read <code>GET</code> \u0417\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043c\u043e\u0434\u0443\u043b\u0435 <code>200 OK</code> Update <code>PUT</code> \u041f\u0435\u0440\u0435\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c <code>200 OK</code> Delete <code>DELETE</code> \u041e\u0442\u0441\u0442\u044b\u043a\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u0440\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c <code>204 No Content</code> <p>\u26a1 \u041f\u0440\u0438\u043c\u0435\u0440 \u043a\u043e\u0434\u0430 (\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u043f\u0443\u0442\u043d\u0438\u043a\u0430): <pre><code>import requests\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u0441\u0435\u0440\u0432\u0438\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u043c\u0438\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u0430\nnew_post = {\n    \"title\": \"New Telescope Launch\",\n    \"body\": \"Hubble-2 is ready for deployment.\",\n    \"userId\": 1\n}\n\n# \u0423\u0441\u043b\u043e\u0432\u043d\u044b\u0439 API-\u043a\u043b\u044e\u0447 \u0434\u043b\u044f \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432\nheaders = {\n    \"Authorization\": \"Bearer YOUR_DEMO_KEY\",\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n}\n\nresponse = requests.post(\n    \"https://jsonplaceholder.typicode.com/posts\",\n    json=new_post,\n    headers=headers\n)\n\nif response.status_code == 201:\n    print(\"\u2705 \u041f\u043e\u0441\u0442 \u043e \u043d\u043e\u0432\u043e\u043c \u0441\u043f\u0443\u0442\u043d\u0438\u043a\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d!\")\n    print(\"\u041e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:\")\n    print(response.json())\nelse:\n    print(f\"\u274c \u041e\u0448\u0438\u0431\u043a\u0430! \u0421\u0442\u0430\u0442\u0443\u0441: {response.status_code}\")\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/4/#5-api","title":"5. \u0412\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API: \u042d\u0432\u043e\u043b\u044e\u0446\u0438\u044f \u0441\u0442\u0430\u043d\u0446\u0438\u0438","text":"<p>\u041a\u0430\u043a \u041c\u041a\u0421 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442\u0441\u044f (\u041c\u043e\u0434\u0443\u043b\u044c \"\u0417\u0430\u0440\u044f\" \u2192 \"\u041d\u0430\u0443\u043a\u0430\"), API \u043c\u0435\u043d\u044f\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u0438:</p> <ul> <li>\u0412 URL: <code>https://api.spacex.com/v4/rockets</code></li> <li>\u0412 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0445: <code>Accept: application/vnd.spacex-v5+json</code></li> </ul> <p>\u041f\u043e\u0447\u0435\u043c\u0443 \u0432\u0430\u0436\u043d\u043e:</p> <ul> <li>v1: \u0411\u0430\u0437\u043e\u0432\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c</li> <li>v2: \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u043d\u043e\u0432\u044b\u0435 \u043f\u043e\u043b\u044f</li> <li>v3: \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0430 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043e\u0442\u0432\u0435\u0442\u043e\u0432</li> </ul> <p>\u26a0\ufe0f \u0421\u043e\u0432\u0435\u0442: \u0412\u0441\u0435\u0433\u0434\u0430 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0439\u0442\u0435 \u0432\u0435\u0440\u0441\u0438\u044e \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u0445, \u0438\u043d\u0430\u0447\u0435 \"\u0441\u0442\u044b\u043a\u043e\u0432\u043a\u0430\" \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u043e\u0432\u0430\u043b\u0438\u0442\u044c\u0441\u044f!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/4/#6-hateoas","title":"6. \u0413\u0438\u043f\u0435\u0440\u043c\u0435\u0434\u0438\u0430 (HATEOAS): \u041d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u044f \u0432 \u043a\u043e\u0441\u043c\u043e\u0441\u0435","text":"<p>\u041e\u0442\u0432\u0435\u0442 API \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b \u2014 \u043a\u0430\u043a \u043a\u0430\u0440\u0442\u0430 \u0441\u0442\u0430\u043d\u0446\u0438\u0438: <pre><code>{\n  \"id\": \"iss\",\n  \"name\": \"\u041c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u0430\u044f \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0421\u0442\u0430\u043d\u0446\u0438\u044f\",\n  \"crew\": 7,\n  \"_links\": {\n    \"self\": { \"href\": \"/stations/iss\" },\n    \"modules\": { \"href\": \"/stations/iss/modules\" },\n    \"schedule\": { \"href\": \"/stations/iss/schedule\" }\n  }\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/4/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. REST \u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a:</p>  a) Rocket Engine System Transfer  b) Representational State Transfer  c) Remote Space Technology <p>2. \u041f\u0440\u0438\u043d\u0446\u0438\u043f \"Stateless\" \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442:</p>  a) \u0421\u0435\u0440\u0432\u0435\u0440 \u0445\u0440\u0430\u043d\u0438\u0442 \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432  b) \u041a\u0430\u0436\u0434\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0441\u0430\u043c\u043e\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u0435\u043d  c) \u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u0440\u0435\u0437 SSL <p>3. URI \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u0440\u0430\u043a\u0435\u0442\u0435 Falcon Heavy:</p>  a) POST /rockets/falcon-heavy  b) GET /falcon-heavy  c) GET /rockets/falcon-heavy <p>4. \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u0430:</p>  a) PATCH  b) POST  c) PUT <p>5. HATEOAS \u0432 API \u2014 \u044d\u0442\u043e:</p>  a) \u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0441\u0441\u044b\u043b\u043e\u043a \u043d\u0430 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b  b) \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f  c) \u042f\u0437\u044b\u043a \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>REST API \u2014 \u044d\u0442\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \"\u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0442\u0430\u043d\u0446\u0438\u0438\" \u0434\u043b\u044f \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432. \u0417\u0430\u043f\u043e\u043c\u043d\u0438\u0442\u0435:</p> <ul> <li>\u0420\u0435\u0441\u0443\u0440\u0441\u044b = \u041e\u0431\u044a\u0435\u043a\u0442\u044b (\u0440\u0430\u043a\u0435\u0442\u044b, \u043f\u043b\u0430\u043d\u0435\u0442\u044b)</li> <li>URI = \u041a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432</li> <li>HTTP-\u043c\u0435\u0442\u043e\u0434\u044b = \u041a\u043e\u043c\u0430\u043d\u0434\u044b \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f</li> <li>\u0412\u0435\u0440\u0441\u0438\u0438 = \u041c\u043e\u0434\u0435\u0440\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u0442\u0430\u043d\u0446\u0438\u0438</li> </ul> <p>\u0424\u0438\u043d\u0430\u043b \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0438! \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \"\u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u0437\u043e\u043d\u0434\" \u2014 \u043d\u0430\u0443\u0447\u0438\u043c\u0441\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c API \u0447\u0435\u0440\u0435\u0437 Postman.</p> <p>\ud83d\udccc \u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430: \u0418\u0437\u0443\u0447\u0438\u0442\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 SpaceX API \u0438 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c:</p> <p><code>GET https://api.spacexdata.com/v4/launches/latest</code> \u2014 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 URI \u0438 JSON-\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/5/","title":"\u0413\u043b\u0430\u0432\u0430 1.5: \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API \u0447\u0435\u0440\u0435\u0437 Postman","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 50 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/5/#1-api","title":"1. \u041f\u043e\u0447\u0435\u043c\u0443 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c API? \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435: \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u0440\u0430\u043a\u0435\u0442\u044b \u0438\u043d\u0436\u0435\u043d\u0435\u0440\u044b \u043f\u0440\u043e\u0432\u043e\u0434\u044f\u0442 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0441\u0438\u0441\u0442\u0435\u043c. \u041f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u2014 \u0438 \u043c\u0438\u0441\u0441\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u043e\u0432\u0430\u043b\u0438\u0442\u044c\u0441\u044f!</p> <p>\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API \u2014 \u0432\u0430\u0448\u0438 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u044b\u0435 \u0438\u0441\u043f\u044b\u0442\u0430\u043d\u0438\u044f:</p> <ul> <li> <p>\u2705 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \"\u0441\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u044b\u0445 \u0443\u0437\u043b\u043e\u0432\"</p> </li> <li> <p>\ud83d\udee1\ufe0f \u041e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0442\u044c \u0443\u044f\u0437\u0432\u0438\u043c\u043e\u0441\u0442\u0438 \u0434\u043e \u0431\u043e\u0435\u0432\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f</p> </li> <li> <p>\ud83d\udcca \u0423\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0431\u0435\u0437 \u0438\u0441\u043a\u0430\u0436\u0435\u043d\u0438\u0439</p> </li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f: Postman \u2014 \u043a\u0430\u043a \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043f\u0443\u043b\u044c\u0442 \u0426\u0423\u041f \u0434\u043b\u044f \u0438\u043c\u0438\u0442\u0430\u0446\u0438\u0438 \u0432\u0441\u0435\u0445 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432: \"\u0427\u0442\u043e \u0435\u0441\u043b\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u0435? \u0412\u044b\u0434\u0435\u0440\u0436\u0438\u0442 \u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 1000 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432/\u0441\u0435\u043a?\"</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/5/#2-postman-api","title":"2. Postman: \"\u0426\u0435\u043d\u0442\u0440 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0435\u0442\u0430\u043c\u0438\" \u0434\u043b\u044f API","text":"<p>\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438:</p> <ul> <li> <p>\ud83d\udce1 \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043b\u044e\u0431\u044b\u0445 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (GET, POST, PUT, DELETE)</p> </li> <li> <p>\ud83d\udd0d \u0410\u043d\u0430\u043b\u0438\u0437 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 (\u0441\u0442\u0430\u0442\u0443\u0441-\u043a\u043e\u0434\u044b, \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438, JSON-\u0442\u0435\u043b\u043e)</p> </li> <li> <p>\ud83e\uddea \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 (JavaScript)</p> </li> <li> <p>\ud83c\udf10 \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f\u043c\u0438 (\u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0435 vs \u0431\u043e\u0435\u0432\u043e\u0435)</p> </li> </ul> <p>\ud83d\udc49 \u0421\u043a\u0430\u0447\u0430\u0442\u044c Postman</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/5/#3-api","title":"3. \u041f\u0435\u0440\u0432\u044b\u0439 \u0437\u0430\u043f\u0443\u0441\u043a: \u0422\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c API \u043f\u043b\u0430\u043d\u0435\u0442","text":"<p>\u0428\u0430\u0433 1: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441</p> <ol> <li> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 Postman \u2192 New \u2192 Request</p> </li> <li> <p>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 URL: <code>https://api.spacexdata.com/v4/rockets</code></p> </li> <li> <p>\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043c\u0435\u0442\u043e\u0434: GET</p> </li> </ol> <p>\u0428\u0430\u0433 2: \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \"\u0441\u0438\u0433\u043d\u0430\u043b\" <pre><code>[\u0426\u0423\u041f] -- GET /planets --&gt; [\u0421\u0435\u0440\u0432\u0435\u0440 SpaceX]\n</code></pre></p> <p>\u0428\u0430\u0433 3: \u0410\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0442\u0435\u043b\u0435\u043c\u0435\u0442\u0440\u0438\u044e: - \u0421\u0442\u0430\u0442\u0443\u0441: <code>200 OK</code> - \u0422\u0435\u043b\u043e \u043e\u0442\u0432\u0435\u0442\u0430 (JSON): \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0430\u043a\u0435\u0442 \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 <pre><code>[\n  {\n    \"name\": \"Falcon 1\",\n    \"type\": \"rocket\",\n    \"active\": false,\n    \"stages\": 2,\n    \"id\": \"5e9d0d95eda69955f709d1eb\"\n  },\n  {\n    \"name\": \"Falcon 9\",\n    \"type\": \"rocket\",\n    \"active\": true,\n    \"id\": \"5e9d0d95eda69973a809d1ec\"\n  }\n]\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/5/#4-postman","title":"4. \u0421\u0445\u0435\u043c\u0430: \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b Postman","text":"<pre><code>[\u0420\u0430\u0431\u043e\u0447\u0435\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e]\n\u251c\u2500\u2500 \u0412\u043a\u043b\u0430\u0434\u043a\u0430 \"Params\" (Query-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b)\n\u251c\u2500\u2500 \u0412\u043a\u043b\u0430\u0434\u043a\u0430 \"Headers\" (\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438)\n\u251c\u2500\u2500 \u0412\u043a\u043b\u0430\u0434\u043a\u0430 \"Body\" (\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u043b\u044f POST/PUT)\n\u251c\u2500\u2500 \u0412\u043a\u043b\u0430\u0434\u043a\u0430 \"Tests\" (\u0421\u043a\u0440\u0438\u043f\u0442\u044b \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u043a)\n\u2514\u2500\u2500 \u041f\u0430\u043d\u0435\u043b\u044c \u043e\u0442\u0432\u0435\u0442\u0430 (Status, Time, Size, Body)\n</code></pre>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/5/#5","title":"5. \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0436\u043d\u044b\u0439 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439: \u0417\u0430\u043f\u0443\u0441\u043a \u043c\u0438\u0441\u0441\u0438\u0438","text":"<p>\u0422\u0435\u0441\u0442: \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433</p> <ol> <li> <p>\u041c\u0435\u0442\u043e\u0434: POST</p> </li> <li> <p>URL: <code>https://jsonplaceholder.typicode.com/posts</code> (\u043f\u0440\u0438\u043c\u0435\u0440)</p> </li> <li> <p>\u0412 Headers:    <pre><code> { \"Content-Type\": \"application/json\" }\n</code></pre></p> </li> <li>\u0412 Body (raw \u2192 JSON):    <pre><code>{\n \"title\": \"New Exoplanet Found\",\n \"body\": \"Proxima Centauri b shows signs of a stable atmosphere.\",\n \"userId\": 1\n }\n</code></pre></li> </ol> <p>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432 Tests: <pre><code>// \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u0430\npm.test(\"Post created successfully\", () =&gt; {\n    pm.response.to.have.status(201);\n});\n\n// \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u0430\npm.test(\"Response contains the new post data\", () =&gt; {\n    const response = pm.response.json();\n    pm.expect(response).to.have.property(\"id\"); // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u043b ID\n    pm.expect(response.title).to.eql(\"New Exoplanet Found\");\n});\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/5/#6-vs","title":"6. \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0439: \u0417\u0435\u043c\u043b\u044f vs \u041c\u0430\u0440\u0441","text":"<p>\u041a\u0430\u043a \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u0445 (\u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439/\u0431\u043e\u0435\u0432\u043e\u0439)?</p> <ol> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f:</li> <li><code>Local</code> \u2192 <code>http://localhost:3000</code></li> <li> <p><code>Production</code> \u2192 <code>https://api.nasa.gov</code></p> </li> <li> <p>\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435:    <pre><code>{{base_url}}/planets  # \u041f\u043e\u0434\u0441\u0442\u0430\u0432\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 URL\n</code></pre></p> </li> </ol> <p>\u26a0\ufe0f \u0412\u0430\u0436\u043d\u043e! \u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0439\u0442\u0435 <code>DELETE</code> \u043d\u0430 \u0431\u043e\u0435\u0432\u043e\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0435!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/5/#7","title":"7. \u041a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438: \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u0438\u0441\u0441\u0438\u0439","text":"<p>\u0413\u0440\u0443\u043f\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b: <pre><code>    \ud83d\udcc2 \u041a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \"NASA\"\n    \u251c\u2500\u2500 GET \u041f\u043b\u0430\u043d\u0435\u0442\u044b\n    \u251c\u2500\u2500 POST \u041d\u043e\u0432\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430\n    \u2514\u2500\u2500 DELETE \u041f\u043b\u0430\u043d\u0435\u0442\u0430 (\u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u0440\u0435\u0436\u0438\u043c)\n</code></pre> \u041f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430:</p> <ul> <li>\ud83d\ude80 \u0417\u0430\u043f\u0443\u0441\u043a \u0432\u0441\u0435\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 \u043e\u0434\u043d\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439</li> <li>\ud83d\udce4 \u042d\u043a\u0441\u043f\u043e\u0440\u0442/\u0438\u043c\u043f\u043e\u0440\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0439</li> <li>\ud83d\udc68\u200d\ud83d\ude80 \u0421\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u044b</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/5/#8","title":"8. \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044f: \u0420\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0441\u043f\u0443\u0442\u043d\u0438\u043a\u043e\u0432","text":"<p>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433 API \u0447\u0435\u0440\u0435\u0437 Postman:</p> <ol> <li> <p>Schedule \u2192 \u041a\u0430\u0436\u0434\u044b\u0435 2 \u0447\u0430\u0441\u0430</p> </li> <li> <p>\u0422\u0435\u0441\u0442\u044b:    <pre><code>pm.test(\"\u0421\u043f\u0443\u0442\u043d\u0438\u043a \u043e\u043d\u043b\u0430\u0439\u043d\", () =&gt; {\n  pm.response.to.have.status(200);\n  pm.expect(pm.response.json().signal).above(50); // \u0421\u0438\u0433\u043d\u0430\u043b &gt;50%\n});\n</code></pre></p> </li> <li> <p>\u0423\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0432 Slack/email \u043f\u0440\u0438 \u0441\u0431\u043e\u0435</p> </li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%201%20-%20%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B%20API/5/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. Postman \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f:</p>  a) \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043f\u043e\u0447\u0442\u044b  b) \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f API  c) \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 <p>2. \u041a\u0430\u043a\u043e\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u0436\u0438\u0434\u0430\u0442\u044c \u043f\u0440\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u043c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430?</p>  a) 200 OK  b) 201 Created  c) 404 Not Found <p>3. \u0413\u0434\u0435 \u043f\u0438\u0441\u0430\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0442\u0435\u0441\u0442\u044b \u0432 Postman?</p>  a) \u0412\u043a\u043b\u0430\u0434\u043a\u0430 \"Body\"  b) \u0412\u043a\u043b\u0430\u0434\u043a\u0430 \"Tests\"  c) \u0412\u043a\u043b\u0430\u0434\u043a\u0430 \"Cookies\" <p>4. \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0439 \u043d\u0443\u0436\u043d\u044b \u0434\u043b\u044f:</p>  a) \u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u043c \u0438 \u0431\u043e\u0435\u0432\u044b\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c  b) \u0425\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u0435\u0439 \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435  c) \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 <p>5. \u0427\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0438?</p>  a) \u0421\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u044b API  b) \u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430  c) \u0410\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b: Postman \u2014 \u0432\u0430\u0448 \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u044b\u0439 \"\u043f\u0443\u043b\u044c\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f\" \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f API. \u0421 \u043d\u0438\u043c \u0432\u044b: - \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u0435 \u0440\u0430\u0431\u043e\u0442\u0443 \"\u0431\u043e\u0440\u0442\u043e\u0432\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c\" \u0434\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430 - \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u0442\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432 - \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0435 \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432</p> <p>\ud83d\udccc \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435:</p> <ol> <li>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 Postman</li> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043a SpaceX API: <code>GET https://api.spacexdata.com/v4/launches/latest</code></li> <li>\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0442\u0435\u0441\u0442, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0438\u0439 \u0447\u0442\u043e:</li> <li>\u0421\u0442\u0430\u0442\u0443\u0441 \u043e\u0442\u0432\u0435\u0442\u0430 <code>200</code></li> <li>\u0412 \u043f\u043e\u043b\u0435 <code>name</code> \u0435\u0441\u0442\u044c \u0441\u043b\u043e\u0432\u043e \"Falcon\"</li> <li>\u0412\u0440\u0435\u043c\u044f \u043e\u0442\u0432\u0435\u0442\u0430 &lt; 500 \u043c\u0441</li> </ol> <p>\u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435\u043c \u0413\u043b\u0430\u0432\u044b 1!</p> <p>\u0412\u044b \u043e\u0441\u0432\u043e\u0438\u043b\u0438 \u043e\u0441\u043d\u043e\u0432\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 API. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0433\u043b\u0430\u0432\u0430\u0445 \u043c\u044b \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c\" \u2014 \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0435\u0435 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 API!</p> <p>\ud83c\udf0c \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b:</p> <ul> <li>SpaceX API Documentation</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/","title":"\u0413\u043b\u0430\u0432\u0430 2.1: \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f Laravel","text":""},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/#1-2","title":"\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 1-2 \u0447\u0430\u0441\u0430","text":""},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/#1","title":"1. \u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u043e \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435?","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u0441\u0442\u0440\u043e\u0438\u0442\u0435 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0437\u043e\u043d\u0434. \u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0435\u0433\u043e \u0432 \u043a\u043e\u0441\u043c\u043e\u0441, \u0432\u044b \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u0442\u0435 \u0432\u0441\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043d\u0430 \u0417\u0435\u043c\u043b\u0435. \u041b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435 \u2014 \u044d\u0442\u043e \u0432\u0430\u0448\u0430 \"\u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u0438\u044f\" \u0434\u043b\u044f \u043a\u043e\u0434\u0430:</p> <ul> <li>\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b \u0431\u0435\u0437 \u0432\u043b\u0438\u044f\u043d\u0438\u044f \u043d\u0430 \u0431\u043e\u0435\u0432\u043e\u0439 \u0441\u0435\u0440\u0432\u0435\u0440</li> <li>\u0411\u044b\u0441\u0442\u0440\u043e\u0435 \u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439</li> <li>\u041b\u0435\u0433\u043a\u043e\u0435 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u0432\u0435\u0440\u0441\u0438\u044f\u043c\u0438 \u041f\u041e</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f: Herd = \u041c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u0439 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441 Docker = \u0422\u0440\u0435\u043d\u0430\u0436\u0435\u0440 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0442\u0430\u043d\u0446\u0438\u0438 XAMPP = \u0421\u0442\u0430\u0446\u0438\u043e\u043d\u0430\u0440\u043d\u044b\u0439 \u0438\u0441\u043f\u044b\u0442\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0441\u0442\u0435\u043d\u0434</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/#2-herd","title":"2. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 Herd","text":"<p>Herd \u2014 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f PHP-\u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435\u043c (\u0430\u043d\u0430\u043b\u043e\u0433 Laravel Valet).</p> <p>\u0428\u0430\u0433\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438:</p> <ol> <li>\u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0449\u0438\u043a: herd.laravel.com</li> <li>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 <code>Herd Installer.exe</code> \u2192 Next \u2192 Install</li> <li>\u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438:<ul> <li>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 Herd \u0438\u0437 \u043c\u0435\u043d\u044e \u041f\u0443\u0441\u043a. \u0418\u043a\u043e\u043d\u043a\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u043c \u0442\u0440\u0435\u0435 (\u0440\u044f\u0434\u043e\u043c \u0441 \u0447\u0430\u0441\u0430\u043c\u0438).</li> <li>\u0429\u0435\u043b\u043a\u043d\u0438\u0442\u0435 \u043f\u043e \u0438\u043a\u043e\u043d\u043a\u0435 Herd: \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e Nginx \u0438 \u043d\u0443\u0436\u043d\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f PHP (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 8.3) \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u044b (\u043e\u0442\u043c\u0435\u0447\u0435\u043d\u044b \u0437\u0435\u043b\u0435\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u043e\u0439).</li> <li>\u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u043a Herd Paths \u0438 \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043f\u0430\u043f\u043a\u0443, \u0433\u0434\u0435 \u0431\u0443\u0434\u0443\u0442 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0432\u0430\u0448\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u044b (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, C:\\Users\\YourUser\\Code). Herd \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0437\u0434\u0430\u0441\u0442 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u0434\u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0432 \u044d\u0442\u043e\u0439 \u043f\u0430\u043f\u043a\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u044b\u0439 \u0434\u043e\u043c\u0435\u043d \u0432\u0438\u0434\u0430 \u0438\u043c\u044f-\u043f\u0430\u043f\u043a\u0438.test.</li> </ul> </li> </ol> <p>\u26a0\ufe0f \u0412\u0430\u0436\u043d\u043e! \u041f\u0440\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435: - \u0420\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u0435 \u0434\u043e\u0441\u0442\u0443\u043f \u0432 \u0441\u0435\u0442\u044c (\u0435\u0441\u043b\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442 \u0431\u0440\u0430\u043d\u0434\u043c\u0430\u0443\u044d\u0440) - \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043f\u0443\u0442\u044c \u0432 PATH: <code>C:\\Program Files\\Herd\\bin</code></p> <p>\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b:</p> <ol> <li>\u0429\u0435\u043b\u043a\u043d\u0438\u0442\u0435 \u043f\u043e \u0438\u043a\u043e\u043d\u043a\u0435 Herd \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u043c \u0442\u0440\u0435\u0435.</li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0441\u0435\u0440\u0432\u0438\u0441\u044b Nginx \u0438 PHP \u0430\u043a\u0442\u0438\u0432\u043d\u044b (\u0437\u0435\u043b\u0435\u043d\u044b\u0435 \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u044b).</li> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0432 \u0432\u0430\u0448\u0435\u0439 \u043f\u0430\u043f\u043a\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, C:\\Users\\YourUser\\Code) \u043f\u0430\u043f\u043a\u0443 test, \u0430 \u0432\u043d\u0443\u0442\u0440\u0438 \u0444\u0430\u0439\u043b index.php \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u044b\u043c <code>&lt;?php phpinfo(); ?&gt;</code>.</li> <li>\u0412 Herd \u0447\u0435\u0440\u0435\u0437 \u0432\u043a\u043b\u0430\u0434\u043a\u0443 sites \u0443\u043a\u0430\u0436\u0438\u0442\u0435 \u043f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435 test \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \"Add site\".</li> <li>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u0430\u0434\u0440\u0435\u0441 http://test.test . \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e PHP.</li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/#3","title":"3. \u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u044b (\u043a\u0440\u0430\u0442\u043a\u043e)","text":"\u0418\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0414\u043b\u044f \u043a\u043e\u0433\u043e \u041f\u043b\u044e\u0441\u044b \u041c\u0438\u043d\u0443\u0441\u044b Laravel Sail (Docker) \u0414\u043b\u044f \u0432\u0441\u0435\u0445 \u0443\u0440\u043e\u0432\u043d\u0435\u0439 \u041f\u043e\u043b\u043d\u0430\u044f \u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f, \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u0435\u043c\u043e\u0441\u0442\u044c \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f, \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 Laravel \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 Docker, \u043f\u043e\u0442\u0440\u0435\u0431\u043b\u044f\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 XAMPP \u041d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0438\u0435 \u0412\u0441\u0451 \u0432 \u043e\u0434\u043d\u043e\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0449\u0438\u043a\u0435 (All-in-One) \u0413\u0440\u043e\u043c\u043e\u0437\u0434\u043a\u043e\u0441\u0442\u044c, \u0441\u043b\u043e\u0436\u043d\u0435\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u044f\u043c\u0438 \u041f\u041e, \u0437\u0430\u0441\u043e\u0440\u044f\u0435\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 Laragon Windows-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0411\u044b\u0441\u0442\u0440\u044b\u0439, \u043b\u0435\u0433\u043a\u043e \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u0438, \u0430\u0432\u0442\u043e\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0445\u043e\u0441\u0442\u043e\u0432 \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0443\u0447\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0441 Docker (Laravel Sail): <pre><code># \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 Docker\n./vendor/bin/sail up\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/#4-php-composer","title":"4. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 PHP \u0438 Composer","text":"<p>\u0415\u0441\u043b\u0438 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 Herd:</p> <ol> <li>PHP:<ul> <li>\u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 PHP 8.3 \u0434\u043b\u044f Windows</li> <li>\u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u0432 <code>C:\\PHP</code></li> <li>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 PATH:  <pre><code># \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0432 PowerShell \u043e\u0442 \u0438\u043c\u0435\u043d\u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\n[Environment]::SetEnvironmentVariable(\"Path\", \"$env:Path;C:\\PHP\", \"User\")\n</code></pre></li> </ul> </li> <li>Composer:<ul> <li>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 Composer-Setup.exe</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:  <pre><code>php -v\ncomposer --version\n</code></pre></li> </ul> </li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/#5-postgresql","title":"5. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 PostgreSQL","text":"<p>\u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445:</p> <ol> <li>\u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 PostgreSQL 15</li> <li>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0449\u0438\u043a:</li> <li>\u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043b\u044f \u0441\u0443\u043f\u0435\u0440\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f: <code>admin</code> (\u0438\u043b\u0438 \u0441\u0432\u043e\u0439)</li> <li>\u041f\u043e\u0440\u0442: <code>5432</code> (\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439)</li> <li>\u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438:</li> <li>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 pgAdmin 4 (\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043b\u0438\u0435\u043d\u0442) <p>\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043b\u0438\u0435\u043d\u0442 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, DBeaver, DataGrip \u0438\u043b\u0438 \u0434\u0430\u0436\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443. \u042f \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0438\u0442\u0430\u044e DBeaver - \u043d\u043e \u044d\u0442\u043e \u0434\u0435\u043b\u043e \u0432\u043a\u0443\u0441\u0430</p> </li> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0431\u0430\u0437\u0443 \u0434\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0430: <code>space_api</code></li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/#6-laravel","title":"6. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 Laravel","text":"<ol> <li> <p>\u0427\u0435\u0440\u0435\u0437 Composer: <pre><code>composer create-project laravel/laravel space-api\ncd space-api\n</code></pre></p> </li> <li> <p>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f Git (\u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e): <pre><code>git init\ngit add .\ngit commit -m \"\u0421\u0442\u0430\u0440\u0442 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430\"\n</code></pre></p> </li> <li> <p>\u0417\u0430\u043f\u0443\u0441\u043a \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:</p> <p>\u0415\u0441\u043b\u0438 \u0432\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 Herd: \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u0430\u0448 \u043f\u0440\u043e\u0435\u043a\u0442 space-api \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0432\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u0432 Herd. \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u0430\u0434\u0440\u0435\u0441: http://space-api.test \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 Laravel. \u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u0436\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f Herd!</p> </li> </ol> <p>\u0415\u0441\u043b\u0438 \u0432\u044b \u041d\u0415 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 Herd (\u0440\u0443\u0447\u043d\u0430\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430): <pre><code>php artisan serve\n</code></pre> \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435: http://localhost:8000 \u2192 \u0414\u043e\u043b\u0436\u043d\u0430 \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 Laravel!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/#herd","title":"\u041f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0432 Herd:","text":"<p>\u041f\u0440\u043e\u0441\u0442\u043e \u0441\u043b\u0435\u0434\u0443\u0439\u0442\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435. \u0414\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0434\u0430\u043b\u0435\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u2014 <code>space-api</code>. Starter kit - \u043b\u044e\u0431\u043e\u0439, \u043d\u043e \u044f \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0438\u0442\u0430\u044e React.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/#phpunit-","title":"\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435 phpunit - \u043e\u043d \u043f\u0440\u0438\u0433\u043e\u0434\u0438\u0442\u0441\u044f \u043d\u0430\u043c \u0434\u0430\u043b\u0435\u0435","text":""},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/#7","title":"7. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<p>\u0412\u0430\u0436\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b:</p> <ul> <li><code>.env</code> \u2014 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f (\u043a\u043b\u044e\u0447\u0438, \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445)</li> <li><code>config/database.php</code> \u2014 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0421\u0423\u0411\u0414</li> <li><code>composer.json</code> \u2014 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 PHP</li> </ul> <p>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0411\u0414 \u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0443:</p> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 <code>.env</code>:</p> <pre><code>DB_CONNECTION=pgsql\nDB_HOST=127.0.0.1\nDB_PORT=5432\nDB_DATABASE=space_api\nDB_USERNAME=postgres # \u041b\u043e\u0433\u0438\u043d \u0434\u043b\u044f postgres\nDB_PASSWORD=admin # \u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043b\u044f postgres\n</code></pre> <p>\u041f\u0435\u0440\u0432\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b Artisan: <pre><code>php artisan key:generate  # \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043a\u043b\u044e\u0447\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\nphp artisan migrate:fresh # \u041c\u0438\u0433\u0440\u0430\u0446\u0438\u044f \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 (\u041f\u0440\u0438 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0435 \u043d\u0430 postgres)\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. Herd \u2014 \u044d\u0442\u043e...</p>  a) \u0418\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f PHP-\u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435\u043c  b) \u0420\u0435\u0434\u0430\u043a\u0442\u043e\u0440 \u043a\u043e\u0434\u0430  c) \u041e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 <p>2. \u041a\u0430\u043a\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 Laravel \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044f\u043c\u0438 PHP?</p>  a) npm  b) Composer  c) Artisan <p>3. \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u043f\u043e\u0440\u0442 \u0434\u043b\u044f PostgreSQL:</p>  a) 3306  b) 5432  c) 8000 <p>4. \u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0430 Laravel \u0447\u0435\u0440\u0435\u0437 Composer:</p>  a) composer create-laravel  b) laravel new  c) composer create-project laravel/laravel <p>5. \u0424\u0430\u0439\u043b \u0441 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f?</p>  a) .env  b) config.php  c) settings.ini \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/1/#_2","title":"\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b","text":"<p>\u0412\u044b \u0440\u0430\u0437\u0432\u0435\u0440\u043d\u0443\u043b\u0438 \"\u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0443\u044e \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0443\" \u0434\u043b\u044f \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e API! \u0422\u0435\u043f\u0435\u0440\u044c \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c:</p> <ul> <li>\ud83d\udee0\ufe0f \u041b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435 (Herd \u0438\u043b\u0438 \u0440\u0443\u0447\u043d\u0430\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430) \u0441 PHP \u0438 Nginx</li> <li>\ud83d\udc18 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0435\u0440 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 PostgreSQL</li> <li>\ud83d\ude80 Laravel-\u043f\u0440\u043e\u0435\u043a\u0442 <code>space-api</code></li> <li>\ud83d\udd0c \u041d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445</li> </ul> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u0415\u0441\u043b\u0438 \u0432\u044b \u0441 Herd: \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>http://space-api.test</code> \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u0430\u0439\u0442.</li> <li>\u0415\u0441\u043b\u0438 \u0431\u0435\u0437 Herd: \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0430 <code>php artisan serve</code> \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0438 \u0441\u0430\u0439\u0442 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>http://localhost:8000</code>.</li> <li>\u0412 \u043b\u044e\u0431\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0432 <code>pgAdmin 4</code> \u0432\u0438\u0434\u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u0430\u044f \u0431\u0430\u0437\u0430 <code>space_api</code>.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/2/","title":"\u0413\u043b\u0430\u0432\u0430 2.2: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 Planet","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 45 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/2/#1-laravel","title":"1. \u041c\u043e\u0434\u0435\u043b\u044c \u0432 Laravel: \u0427\u0435\u0440\u0442\u0435\u0436 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430","text":"<p>\u0412 MVC-\u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0435 (Model-View-Controller) \u043c\u043e\u0434\u0435\u043b\u044c \u2014 \u044d\u0442\u043e:</p> <ul> <li>\ud83d\udce6 \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u044b\u0445 (\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u043b\u0430\u043d\u0435\u0442)</li> <li>\ud83d\udd0c \u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\ud83d\udee1\ufe0f \u0426\u0435\u043d\u0442\u0440 \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f: \u041c\u043e\u0434\u0435\u043b\u044c <code>Planet</code> = \u0427\u0435\u0440\u0442\u0435\u0436 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0432 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 \u0426\u0423\u041f. \u041f\u043e \u043d\u0435\u043c\u0443 \u043c\u043e\u0436\u043d\u043e:</p> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043f\u043b\u0430\u043d\u0435\u0442\u0443 \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 (<code>INSERT</code>)</li> <li>\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u041c\u0430\u0440\u0441\u0435 (<code>SELECT</code>)</li> <li>\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e\u0431 \u0430\u0442\u043c\u043e\u0441\u0444\u0435\u0440\u0435 (<code>UPDATE</code>)</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/2/#2","title":"2. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438","text":"<p>Laravel \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 Artisan CLI \u2014 \u0432\u0430\u0448 \"\u043f\u0443\u043b\u044c\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f\" \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u043c.</p> <p>\u0428\u0430\u0433 1: \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u0441 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0435\u0439 <pre><code>php artisan make:model Planet -m\n</code></pre></p> <p>\u0427\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u043b\u043e\u0441\u044c: <pre><code>app/\n  \u2514\u2500\u2500 Models/\n      \u2514\u2500\u2500 Planet.php    \u2190 \u041c\u043e\u0434\u0435\u043b\u044c\ndatabase/\n  \u2514\u2500\u2500 migrations/\n      \u2514\u2500\u2500 2025_08_04_000000_create_planets_table.php  \u2190 \u041c\u0438\u0433\u0440\u0430\u0446\u0438\u044f\n</code></pre></p> <p>\u0424\u043b\u0430\u0433\u0438 Artisan:</p> <ul> <li><code>-m</code> \u2192 \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044e</li> <li><code>-c</code> \u2192 \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440</li> <li><code>-r</code> \u2192 \u0420\u0435\u0441\u0443\u0440\u0441\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440</li> </ul> <p>\ud83d\udca1 \u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043e\u0432\u0435\u0442: \u042d\u0442\u0438 \u0444\u043b\u0430\u0433\u0438 \u043c\u043e\u0436\u043d\u043e \u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438. \u041a\u043e\u043c\u0430\u043d\u0434\u0430 <code>php artisan make:model Planet -mcr</code> \u0441\u043e\u0437\u0434\u0430\u0441\u0442 \u0441\u0440\u0430\u0437\u0443 \u043c\u043e\u0434\u0435\u043b\u044c, \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044e \u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e. \u042d\u0442\u043e \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0442 \u043c\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/2/#3-planet","title":"3. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 Planet","text":"<p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>app/Models/Planet.php</code>: <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Planet extends Model\n{\n    // \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 'planets')\n    // Laravel \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442, \u0447\u0442\u043e \u0438\u043c\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u2014 \u044d\u0442\u043e \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0444\u043e\u0440\u043c\u0430 \u0438\u043c\u0435\u043d\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 snake_case (Planet -&gt; planets).\n     //\u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u044d\u0442\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0437\u0434\u0435\u0441\u044c \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u043d\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0434\u043b\u044f \u043d\u0430\u0433\u043b\u044f\u0434\u043d\u043e\u0441\u0442\u0438.\n    protected $table = 'planets';\n\n    // \u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f\n    protected $fillable = [\n        'name',\n        'description',\n        'size_km',\n        'solar_system',\n        'image_url'\n    ];\n\n    // \u0422\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f\n    protected $casts = [\n        'size_km' =&gt; 'integer'\n    ];\n}\n</code></pre></p> <p>\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432:</p> \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u041f\u0440\u0438\u043c\u0435\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 <code>$table</code> \u0418\u043c\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0432 \u0411\u0414 <code>planets</code> <code>$fillable</code> \u041f\u043e\u043b\u044f \u0434\u043b\u044f \u043c\u0430\u0441\u0441\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f <code>name</code>, <code>size_km</code> <code>$casts</code> \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432 <code>size_km: integer</code>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/2/#4","title":"4. \u0414\u0438\u0437\u0430\u0439\u043d \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043f\u043b\u0430\u043d\u0435\u0442","text":"<p>\u041f\u0435\u0440\u0435\u0434 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \"\u043f\u043b\u0430\u043d\u0435\u0442\u044b\":</p> \u041f\u043e\u043b\u0435 \u0422\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f <code>id</code> BIGINT (PK) \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 ID 1 <code>name</code> VARCHAR(255) \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \"\u041c\u0430\u0440\u0441\" <code>description</code> TEXT \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \"\u041a\u0440\u0430\u0441\u043d\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430...\" <code>size_km</code> INTEGER \u0414\u0438\u0430\u043c\u0435\u0442\u0440 \u0432 \u043a\u043c 6779 <code>solar_system</code> VARCHAR(100) \u0421\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \"\u0421\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430\" <code>image_url</code> VARCHAR(2048) URL \u0444\u043e\u0442\u043e (\u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c null) \"https://...\" <code>created_at</code> TIMESTAMP \u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f 2025-08-04 12:00:00 <code>updated_at</code> TIMESTAMP \u0414\u0430\u0442\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f 2025-08-05 09:30:00"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/2/#5","title":"5. \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438","text":"<p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0432 <code>database/migrations/..._create_planets_table.php</code>:</p> <pre><code>&lt;?php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreatePlanetsTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('planets', function (Blueprint $table) {\n            $table-&gt;id(); // BIGINT \u0430\u0432\u0442\u043e\u0438\u043d\u043a\u0440\u0435\u043c\u0435\u043d\u0442\n\n            $table-&gt;string('name')-&gt;unique();\n            $table-&gt;text('description');\n            $table-&gt;integer('size_km');\n            $table-&gt;string('solar_system', 100);\n            $table-&gt;string('image_url', 2048)-&gt;nullable();\n\n            $table-&gt;timestamps(); // created_at + updated_at\n        });\n    }\n\n    public function down()\n    {\n        Schema::dropIfExists('planets');\n    }\n}\n</code></pre> <p>\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043c\u043e\u043c\u0435\u043d\u0442\u044b:</p> <ul> <li><code>-&gt;unique()</code> \u2192 \u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439</li> <li><code>-&gt;nullable()</code> \u2192 \u041f\u043e\u043b\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c</li> <li><code>timestamps()</code> \u2192 \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u0442\u0430\u043c\u0438</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/2/#6","title":"6. \u0417\u0430\u043f\u0443\u0441\u043a \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 (\u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439)","text":"<p>\u0425\u043e\u0442\u044f \u0437\u0430\u043f\u0443\u0441\u043a \u0431\u0443\u0434\u0435\u0442 \u0432 \u0433\u043b\u0430\u0432\u0435 2.3, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u0430\u043a \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c: <pre><code>php artisan migrate\n</code></pre></p> <p>\u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u0432\u044b\u0432\u043e\u0434: <pre><code>Migrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (32.15ms)\n</code></pre></p> <p>\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432 pgAdmin 4:</p> <ol> <li>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0431\u0430\u0437\u0443 <code>space_api</code> \u2192 Schemas \u2192 Tables</li> <li>\u0414\u043e\u043b\u0436\u043d\u0430 \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430 <code>planets</code> \u0441 \u0432\u0430\u0448\u0438\u043c\u0438 \u043f\u043e\u043b\u044f\u043c\u0438</li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/2/#7","title":"7. \u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434: \u0413\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u044b \u043a\u043e\u0434\u0430","text":"<p>\u0414\u043b\u044f \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0430\u043a\u0435\u0442\u044b:</p> <ul> <li>Laravel Blueprint - \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u0438/\u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u043f\u043e YAML-\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e</li> <li>InfyOm Laravel Generator - \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u043e \u0441\u0445\u0435\u043c\u0435 \u0411\u0414</li> </ul> <p>\u041f\u0440\u0438\u043c\u0435\u0440 Blueprint: <pre><code>models:\n  Planet:\n    name: string:255\n    description: text\n    size_km: integer\n    solar_system: string:100\n    image_url: string:2048? # \u0417\u043d\u0430\u043a '?' \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u043e\u043b\u0435 nullable\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/2/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. Artisan-\u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0439 \u0441 \u043d\u0435\u0439 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438:</p>  a) php artisan make:model Planet -m  b) php artisan create:model Planet  c) php artisan model:new Planet --m <p>2. \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e `$fillable` \u0432 \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f</p>  a) \u0417\u0430\u0449\u0438\u0442\u044b \u043e\u0442 \u043c\u0430\u0441\u0441\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u044f  b) \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445  c) \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u043a\u043b\u044e\u0447\u0435\u0439 <p>3. nullable() \u0432 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442:</p>  a) \u041f\u043e\u043b\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043a \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044e  b) \u041f\u043e\u043b\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c  c) \u041f\u043e\u043b\u0435 \u0431\u0443\u0434\u0435\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u043e <p>4. \u0422\u0438\u043f \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u0434\u043b\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u044b:</p>  a) string  b) text  c) varchar <p>5. \u041c\u0435\u0442\u043e\u0434 `timestamps()` \u0441\u043e\u0437\u0434\u0430\u0435\u0442:</p>  a) \u0422\u043e\u043b\u044c\u043a\u043e created_at  b) created_at \u0438 updated_at  c) id, created_at, updated_at \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b: \u0412\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \"\u0446\u0438\u0444\u0440\u043e\u0432\u043e\u0439 \u0434\u0432\u043e\u0439\u043d\u0438\u043a\" \u043f\u043b\u0430\u043d\u0435\u0442\u044b! \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u0432\u0430\u0448\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u0435\u0441\u0442\u044c:</p> <ul> <li>\ud83e\ude90 \u041c\u043e\u0434\u0435\u043b\u044c <code>Planet</code> \u0441 \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u043e\u0439</li> <li>\ud83d\udcca \u041c\u0438\u0433\u0440\u0430\u0446\u0438\u044f \u0434\u043b\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u044b <code>planets</code> \u0432 PostgreSQL</li> <li>\ud83d\udee0\ufe0f \u041d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (<code>fillable</code>, <code>casts</code>)</li> </ul> <p>\u0413\u043e\u0442\u043e\u0432\u044c\u0442\u0435 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445! \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044e \u0438 \u043d\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u0432\u0441\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u043f\u0435\u0440\u0432\u044b\u043c\u0438 \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u043c\u0438.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <p>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0444\u0430\u0439\u043b\u044b <code>Planet.php</code> \u0438 <code>..._create_planets_table.php</code> \u0441\u043e\u0437\u0434\u0430\u043d\u044b \u0432 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0445 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f\u0445.</p> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 Artisan \u0440\u0443\u0433\u0430\u0435\u0442\u0441\u044f:</p> <ul> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435\u0441\u044c \u0432 \u043f\u0430\u043f\u043a\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430</li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 (<code>composer install</code>)</li> <li>\u0414\u043b\u044f Windows: \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 PHP \u0438 Composer \u0432 PATH</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/3/","title":"\u0413\u043b\u0430\u0432\u0430 2.3: \u041c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 50 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/3/#1","title":"1. \u041c\u0438\u0433\u0440\u0430\u0446\u0438\u0438: \u0421\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0442\u0430\u043d\u0446\u0438\u0438","text":"<p>\u041c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0432 Laravel \u2014 \u044d\u0442\u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0432\u0435\u0440\u0441\u0438\u0439 \u0434\u043b\u044f \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445.</p> <p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b:</p> <ol> <li>\ud83c\udfd7\ufe0f \u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0435 \u0447\u0435\u0440\u0442\u0435\u0436 \u0441\u0442\u0430\u043d\u0446\u0438\u0438 (\u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044f <code>create_planets_table</code>)</li> <li>\ud83d\ude80 \u0420\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u0435\u0442\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 (\u0437\u0430\u043f\u0443\u0441\u043a \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439)</li> <li>\ud83d\udd27 \u041c\u043e\u0434\u0435\u0440\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e (\u043d\u043e\u0432\u044b\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438)</li> <li>\u23ea \u041c\u043e\u0436\u0435\u0442\u0435 \u043e\u0442\u043a\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u043f\u0440\u043e\u0448\u043b\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 (rollback)</li> </ol> <p>\ud83d\udca1 \u0412\u0430\u0436\u043d\u043e: \u041c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u043d\u043d\u043e \u2014 \u043a\u0430\u043a \u0438\u043d\u0436\u0435\u043d\u0435\u0440\u044b \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u043a\u043e\u043d\u0442\u0438\u043d\u0435\u043d\u0442\u0430\u0445, \u0441\u0442\u0440\u043e\u044f\u0449\u0438\u0435 \u041c\u041a\u0421!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/3/#2","title":"2. \u0417\u0430\u043f\u0443\u0441\u043a \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439","text":"<p>\u041f\u043e\u0441\u043b\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0432 \u0433\u043b\u0430\u0432\u0435 2.2 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435: <pre><code>php artisan migrate\n</code></pre></p> <p>\u0412\u044b\u0432\u043e\u0434 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435: <pre><code>Migration table created successfully.\nMigrating: 2014_10_12_000000_create_users_table\nMigrated:  2014_10_12_000000_create_users_table (25.12ms)\nMigrating: 2014_10_12_100000_create_password_reset_tokens_table\nMigrated:  2014_10_12_100000_create_password_reset_tokens_table (18.07ms)\nMigrating: 2019_08_19_000000_create_failed_jobs_table\nMigrated:  2019_08_19_000000_create_failed_jobs_table (21.33ms)\nMigrating: 2019_12_14_000001_create_personal_access_tokens_table\nMigrated:  2019_12_14_000001_create_personal_access_tokens_table (30.45ms)\nMigrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (15.67ms)  # \u0412\u0430\u0448\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430!\n</code></pre></p> <p>\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432 pgAdmin 4:</p> <ol> <li>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0431\u0430\u0437\u0443 <code>space_api</code> \u2192 Schemas \u2192 Tables</li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u043e\u044f\u0432\u0438\u043b\u0438\u0441\u044c:   - <code>planets</code>   - <code>users</code>   - <code>password_reset_tokens</code></li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/3/#3","title":"3. \u041e\u0442\u043a\u0430\u0442 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439: \u0410\u0432\u0430\u0440\u0438\u0439\u043d\u043e\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435","text":"<p>\u0415\u0441\u043b\u0438 \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443: <pre><code>php artisan migrate:rollback  # \u041e\u0442\u043a\u0430\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u043f\u0430\u043a\u0435\u0442\u0430 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439\n</code></pre> <pre><code>php artisan migrate:reset    # \u041f\u043e\u043b\u043d\u044b\u0439 \u043e\u0442\u043a\u0430\u0442 \u0432\u0441\u0435\u0445 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439\n</code></pre></p> <ul> <li><code>php artisan migrate:fresh</code> \u2014 \u0441\u0430\u043c\u0430\u044f \u043f\u043e\u043b\u0435\u0437\u043d\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0432 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0435! \u041e\u043d\u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u0441\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0438 \u0437\u0430\u043d\u043e\u0432\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0432\u0441\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438.</li> <li><code>php artisan migrate:fresh --seed</code> \u2014 \u0434\u0435\u043b\u0430\u0435\u0442 \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435, \u0447\u0442\u043e \u0438 <code>fresh</code>, \u043d\u043e \u043f\u043e\u0441\u043b\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439 \u0441\u0440\u0430\u0437\u0443 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u0441\u0438\u0434\u0435\u0440\u044b. \u042d\u0442\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \"\u043f\u0435\u0440\u0435\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f\" \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u043d\u0443\u043b\u044f.</li> </ul> <p>\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f: <pre><code># \u0428\u0430\u0433 1: \u041f\u043e\u043d\u044f\u043b\u0438, \u0447\u0442\u043e \u0432 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u043e\u0448\u0438\u0431\u043a\u0430. \u041f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u0435\u0440\u0435\u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0431\u0430\u0437\u0443.\nphp artisan migrate:fresh\n# \u0428\u0430\u0433 2: \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044e\n# \u0428\u0430\u0433 3: \u0421\u043d\u043e\u0432\u0430 \u043f\u0435\u0440\u0435\u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0431\u0430\u0437\u0443 \u0441 \u0443\u0436\u0435 \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0435\u0439\nphp artisan migrate:fresh\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/3/#4","title":"4. \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u0435\u0439: \u041c\u043e\u0434\u0435\u0440\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0442\u0430\u043d\u0446\u0438\u0438","text":"<p>\u041f\u0440\u0438\u043c\u0435\u0440: \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u043e\u043b\u0435 <code>is_habitable</code> (\u043e\u0431\u0438\u0442\u0430\u0435\u043c\u0430 \u043b\u0438 \u043f\u043b\u0430\u043d\u0435\u0442\u0430).</p> <p>\u0428\u0430\u0433 1: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u0443\u044e \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044e <pre><code>php artisan make:migration add_is_habitable_to_planets_table\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c \u0444\u0430\u0439\u043b <code>database/migrations/..._add_is_habitable_to_planets_table.php</code> <pre><code>&lt;?php\npublic function up()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;boolean('is_habitable')\n              -&gt;default(false);\n    });\n}\n\npublic function down()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;dropColumn('is_habitable');\n    });\n}\n</code></pre></p> <p>\u0428\u0430\u0433 3: \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 <pre><code>php artisan migrate\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/3/#5","title":"5. \u041d\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0431\u0430\u0437\u044b: \u041f\u0435\u0440\u0432\u044b\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u0438\u0434\u0435\u0440 (Seeder) \u2014 \u0441\u043a\u0440\u0438\u043f\u0442 \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.</p> <p>\u0428\u0430\u0433 1: \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0441\u0438\u0434\u0435\u0440\u0430 <pre><code>php artisan make:seeder PlanetSeeder\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c <code>database/seeders/PlanetSeeder.php</code> <pre><code>&lt;?php\nuse App\\Models\\Planet; // \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u044b - \u0411\u0435\u0437 \u043d\u0435\u0433\u043e \u0441\u043b\u043e\u0432\u0438\u0448\u044c \u043e\u0448\u0438\u0431\u043a\u0443!\n\n\nclass PlanetSeeder extends Seeder\n{\n    public function run()\n    {\n        Planet::create([\n            'name' =&gt; '\u0417\u0435\u043c\u043b\u044f',\n            'description' =&gt; '\u0413\u043e\u043b\u0443\u0431\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u0441 \u0440\u0430\u0437\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u043e\u0439 \u0436\u0438\u0437\u043d\u044c\u044e',\n            'size_km' =&gt; 12742,\n            'solar_system' =&gt; '\u0421\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430',\n            'image_url' =&gt; 'https://example.com/earth.jpg',\n            'is_habitable' =&gt; true\n        ]);\n\n        Planet::create([\n            'name' =&gt; '\u041c\u0430\u0440\u0441',\n            'description' =&gt; '\u041a\u0440\u0430\u0441\u043d\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430, \u0446\u0435\u043b\u044c \u0431\u0443\u0434\u0443\u0449\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u0439',\n            'size_km' =&gt; 6779,\n            'solar_system' =&gt; '\u0421\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430',\n            'is_habitable' =&gt; false\n        ]);\n    }\n}\n</code></pre></p> <p>\u0428\u0430\u0433 3: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c \u0441\u0438\u0434\u0435\u0440 \u0432 <code>database/seeders/DatabaseSeeder.php</code> <pre><code>&lt;?php\npublic function run()\n{\n    $this-&gt;call([\n        PlanetSeeder::class\n    ]);\n}\n</code></pre></p> <p>\u0428\u0430\u0433 4: \u0417\u0430\u043f\u0443\u0441\u043a \u043d\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f <pre><code>php artisan db:seed\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/3/#6-postgresql","title":"6. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL: \u0421\u043f\u0435\u0446\u0438\u0444\u0438\u043a\u0430","text":"<p>\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0442\u0438\u043f\u0430 \u0434\u0430\u043d\u043d\u044b\u0445:</p> \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c PostgreSQL MySQL \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 Laravel \u041b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0442\u0438\u043f <code>boolean</code> (\u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0439 <code>true</code>/<code>false</code>) <code>tinyint(1)</code> (\u0445\u0440\u0430\u043d\u0438\u0442 <code>0</code>/<code>1</code>) <code>$table-&gt;boolean('...')</code> \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0434\u043b\u044f \u043e\u0431\u043e\u0438\u0445 JSON <code>jsonb</code> (\u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0439, \u0438\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u0443\u0435\u043c\u044b\u0439) <code>json</code> (\u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439) <code>$table-&gt;jsonb('...')</code> - \u043e\u0447\u0435\u043d\u044c \u043c\u043e\u0449\u043d\u043e \u0432 PG \u041c\u0430\u0441\u0441\u0438\u0432\u044b <code>text[]</code>, <code>integer[]</code> (\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b) \u041d\u0435\u0442 (\u044d\u043c\u0443\u043b\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 JSON \u0438\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u0438) <code>$table-&gt;array('...')</code> (\u044d\u043a\u0441\u043a\u043b\u044e\u0437\u0438\u0432 \u0434\u043b\u044f PG) \u041f\u043e\u0440\u044f\u0434\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u041d\u0435\u043b\u044c\u0437\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c (<code>after()</code> \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442) \u041c\u043e\u0436\u043d\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c (<code>after()</code>) Laravel \u0430\u0431\u0441\u0442\u0440\u0430\u0433\u0438\u0440\u0443\u0435\u0442 \u044d\u0442\u043e, \u043d\u043e \u043d\u0443\u0436\u043d\u043e \u0437\u043d\u0430\u0442\u044c \u043e\u0431 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0438 <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u0430: <pre><code>// \u0412 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438\n$table-&gt;index('solar_system');\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/3/#7-psql","title":"7. \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 psql","text":"<p>\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043b\u044e\u0431\u044b\u043c \u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c \u0438 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0442\u0430\u043c space_api \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430.</p> <p>\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u043a\u043e\u043d\u0441\u043e\u043b\u0438: <pre><code>psql -U postgres -d space_api\n# \u0422\u0435\u0440\u043c\u0438\u043d\u0430\u043b \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u043f\u0430\u0440\u043e\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u0437\u0430\u0434\u0430\u043b\u0438 \u043f\u0440\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435 PostgreSQL.\n</code></pre> <pre><code>SELECT * FROM planets;\n</code></pre></p> <p>\u0412 \u043b\u044e\u0431\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u044b\u0432\u043e\u0434 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c:</p> id name description size_km solar_system image_url is_habitable 1 \u0417\u0435\u043c\u043b\u044f \u0413\u043e\u043b\u0443\u0431\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u0441 \u0440\u0430\u0437\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u043e\u0439 \u0436\u0438\u0437\u043d\u044c\u044e 12742 \u0421\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 ... true 2 \u041c\u0430\u0440\u0441 \u041a\u0440\u0430\u0441\u043d\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430, \u0446\u0435\u043b\u044c \u043a\u043e\u043b\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u0439 6779 \u0421\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 null false"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/3/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439:</p>  a) php artisan migrate:run  b) php artisan migrate  c) php artisan db:migrate <p>2. \u041a\u0430\u043a \u043e\u0442\u043a\u0430\u0442\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044e?</p>  a) migrate:undo  b) migrate:rollback  c) migrate:reset <p>3. \u0421\u0438\u0434\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f:</p>  a) \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0442\u0430\u0431\u043b\u0438\u0446  b) \u041d\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0411\u0414 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438  c) \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 <p>4. \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u0430 \u0432 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443:</p>  a) Schema::addColumn()  b) Schema::table()  c) Schema::modify() <p>5. \u0413\u0434\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0441\u0438\u0434\u0435\u0440\u044b?</p>  a) DatabaseSeeder.php  b) .env  c) config/database.php \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u043e\u0441\u0432\u043e\u0438\u043b\u0438 \"\u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b\":</p> <ul> <li>\u2705 \u0421\u043e\u0437\u0434\u0430\u043b\u0438 \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438</li> <li>\ud83d\udd27 \u041c\u043e\u0434\u0435\u0440\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0442\u0430\u0431\u043b\u0438\u0446\u044b</li> <li>\ud83c\udf0d \u0417\u0430\u043f\u043e\u043b\u043d\u0438\u043b\u0438 \u0411\u0414 \u043f\u0435\u0440\u0432\u044b\u043c\u0438 \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u043c\u0438</li> <li>\u2699\ufe0f \u041d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 PostgreSQL</li> </ul> <p>\u0412\u0430\u0448\u0430 \u0432\u0441\u0435\u043b\u0435\u043d\u043d\u0430\u044f \u043e\u0431\u0440\u0435\u043b\u0430 \u043f\u0435\u0440\u0432\u044b\u0435 \u043c\u0438\u0440\u044b! \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442\u044c \u043a \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e API-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u043c\u0438.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ol> <li>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 <code>php artisan tinker</code></li> <li>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 <code>App\\Models\\Planet::all()</code></li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u0438\u0434\u0438\u0442\u0435 \u0417\u0435\u043c\u043b\u044e \u0438 \u041c\u0430\u0440\u0441</li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/4/","title":"\u0413\u043b\u0430\u0432\u0430 2.4: API \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 PlanetController","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 1 \u0447\u0430\u0441</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/4/#1","title":"1. \u041a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440: \u0426\u0435\u043d\u0442\u0440 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c\u0438","text":"<p>\u0412 MVC-\u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 - \u044d\u0442\u043e \u043f\u043e\u0441\u0440\u0435\u0434\u043d\u0438\u043a \u043c\u0435\u0436\u0434\u0443 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043c\u0438:</p> <ul> <li>\ud83d\udce1 \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u044b (GET, POST, PUT, DELETE)</li> <li>\ud83d\udd0d \u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0431\u0430\u0437\u044b \u0447\u0435\u0440\u0435\u0437 \u043c\u043e\u0434\u0435\u043b\u0438</li> <li>\ud83d\udce6 \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 JSON-\u043e\u0442\u0432\u0435\u0442\u044b \u0434\u043b\u044f API</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f: <code>PlanetController</code> = \u0426\u0423\u041f \u043c\u0438\u0441\u0441\u0438\u0438:</p> <ul> <li>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0441 \u0417\u0435\u043c\u043b\u0438 (<code>GET /planets</code>)</li> <li>\u041e\u0442\u0434\u0430\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \"\u0437\u043e\u043d\u0434\u0430\u043c\" (\u043c\u043e\u0434\u0435\u043b\u044f\u043c)</li> <li>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043b\u0435\u043c\u0435\u0442\u0440\u0438\u044e \u0432 JSON-\u0444\u043e\u0440\u043c\u0430\u0442\u0435</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/4/#2","title":"2. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430","text":"<p>\u0420\u0435\u0441\u0443\u0440\u0441\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043c\u0435\u0442\u043e\u0434\u044b \u0434\u043b\u044f CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439.</p> <p>\u0428\u0430\u0433 1: \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430 <pre><code>php artisan make:controller PlanetController --api --model=Planet\n</code></pre></p> <p>\u0427\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0441\u0442\u0441\u044f \u0432 <code>app/Http/Controllers/PlanetController.php</code>: <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Planet;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Validation\\Rule; // \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u044d\u0442\u043e\u0442 \u0438\u043c\u043f\u043e\u0440\u0442\n\nclass PlanetController extends Controller\n{\n    // \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u0435\u0442\n    public function index(Request $request) {}\n\n    // \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043f\u043b\u0430\u043d\u0435\u0442\u0443\n    public function store(Request $request) {}\n\n    // \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043f\u043b\u0430\u043d\u0435\u0442\u0443\n    public function show(Planet $planet) {}\n\n    // \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u0443\n    public function update(Request $request, Planet $planet) {}\n\n    // \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u0443\n    public function destroy(Planet $planet) {}\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/4/#3-api","title":"3. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u0432 API","text":"<p>A. <code>index()</code> - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043b\u0430\u043d\u0435\u0442 <pre><code>&lt;?php\npublic function index(Request $request)\n{\n    // \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0441 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0435\u0439, \u043f\u043e 15 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n    $planets = Planet::paginate($request-&gt;get('per_page', 15));\n    return response()-&gt;json($planets); // \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 200 OK\n}\n</code></pre></p> <p>B. <code>store()</code> - \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    $planet = Planet::create($data);\n    return response()-&gt;json($planet, 201); // 201 Created\n}\n</code></pre></p> <p>C. <code>show()</code> - \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b <pre><code>&lt;?php\npublic function show(Planet $planet)\n{\n    return response()-&gt;json($planet); // \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 200 OK\n}\n</code></pre></p> <p>D. <code>update()</code> - \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b <pre><code>&lt;?php\npublic function update(Request $request, Planet $planet)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; [\n            'string',\n            'max:255',\n            Rule::unique('planets')-&gt;ignore($planet-&gt;id),\n        ],\n        'description' =&gt; 'sometimes|string', // 'sometimes' - \u0432\u0430\u043b\u0438\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u0435 \u043f\u0440\u0438\u0448\u043b\u043e\n        'size_km' =&gt; 'sometimes|integer|min:100',\n        'solar_system' =&gt; 'sometimes|string|max:100',\n        'image_url' =&gt; 'sometimes|nullable|url',\n        'is_habitable' =&gt; 'sometimes|boolean'\n    ]);\n\n    $planet-&gt;update($data);\n    return response()-&gt;json($planet); // 200 OK\n}\n</code></pre></p> <p>E. <code>destroy()</code> - \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b <pre><code>&lt;?php\npublic function destroy(Planet $planet)\n{\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204); // 204 No Content\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/4/#4-route-model-binding","title":"4. \u041f\u0440\u0438\u0432\u044f\u0437\u043a\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (Route Model Binding)","text":"<p>Laravel \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u043e\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u043f\u043e ID: <pre><code>// \u0412 \u0440\u043e\u0443\u0442\u0435: GET /planets/{planet}\n// \u0412 \u043c\u0435\u0442\u043e\u0434\u0435: show(Planet $planet)\n</code></pre></p> <ul> <li>\u0415\u0441\u043b\u0438 \u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430 \u2192 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 404</li> <li>\u041d\u0435\u0442 \u043d\u0443\u0436\u0434\u044b \u0432 \u0440\u0443\u0447\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u0445 <code>findOrFail()</code></li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/4/#5","title":"5. \u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u043e\u0432","text":"<p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u043d\u043e\u0433\u043e \u043e\u0442\u0432\u0435\u0442\u0430 \u0434\u043b\u044f <code>index()</code>: <pre><code>&lt;?php\npublic function index()\n{\n    return response()-&gt;json([\n        'success' =&gt; true,\n        'data' =&gt; Planet::all(),\n        'message' =&gt; '\u041f\u043b\u0430\u043d\u0435\u0442\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u044b'\n    ]);\n}\n</code></pre></p> <p>\u041e\u0442\u0432\u0435\u0442 \u043f\u0440\u0438 \u043e\u0448\u0438\u0431\u043a\u0435 404 (\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438): <pre><code>{\n    \"message\": \"No query results for model [App\\\\Models\\\\Planet] 123\",\n    \"exception\": \"Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\NotFoundHttpException\"\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/4/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u0424\u043b\u0430\u0433 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f API-\u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430:</p>  a) --api  b) --resource  c) --model <p>2. \u041a\u0430\u043a\u043e\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u043f\u0440\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u043c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438?</p>  a) 200 OK  b) 201 Created  c) 204 No Content <p>3. Route Model Binding \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442:</p>  a) \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e ID  b) \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c HTML-\u0444\u043e\u0440\u043c\u044b  c) \u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b <p>4. \u041f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c:</p>  a) JSON \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043b\u0430\u043d\u0435\u0442\u044b  b) null \u0441 \u043a\u043e\u0434\u043e\u043c 204  c) \u041f\u0443\u0441\u0442\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 <p>5. $request-&gt;validate() \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f:</p>  a) \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445  b) \u0428\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432  c) \u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \"\u043f\u0443\u043b\u044c\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f\" \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u0440\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439! \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u0430\u0448 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 \u0443\u043c\u0435\u0435\u0442:</p> <ul> <li>\ud83c\udf0c \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u0435\u0442 (<code>index</code>)</li> <li>\ud83e\ude90 \u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043c\u0438\u0440\u044b (<code>store</code>)</li> <li>\ud83d\udd2d \u0414\u0435\u0442\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b (<code>show</code>)</li> <li>\ud83d\udee0\ufe0f \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0442\u044c \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f (<code>update</code>)</li> <li>\ud83d\udca5 \u0423\u043d\u0438\u0447\u0442\u043e\u0436\u0430\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u044b (<code>destroy</code>)</li> </ul> <p>\u041e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u043f\u0440\u043e\u043b\u043e\u0436\u0438\u0442\u044c \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b! \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 \u043a API-\u0440\u043e\u0443\u0442\u0430\u043c.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <p>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432 <code>app/Http/Controllers</code> \u0435\u0441\u0442\u044c <code>PlanetController.php</code> \u0441 5 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438.</p> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438:</p> <ul> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438: <code>use App\\Models\\Planet;</code></li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\u044b</li> <li>\u0414\u043b\u044f PostgreSQL: \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c \u0447\u0442\u043e <code>Planet::all()</code> \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435</li> <li>\u041f\u0440\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430\u0445 \u0441 Tinker: \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 <code>composer dump-autoload</code></li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/5/","title":"\u0413\u043b\u0430\u0432\u0430 2.5: \u041c\u0430\u0440\u0448\u0440\u0443\u0442\u044b API","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 45 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/5/#1","title":"1. \u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442? \u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 \u043f\u0430\u043b\u044c\u0446\u0430\u0445","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u0430\u0448 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 (<code>PlanetController</code>) \u2014 \u044d\u0442\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0444\u0438\u0441\u043d\u044b\u0439 \u0446\u0435\u043d\u0442\u0440, \u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0435\u0433\u043e \u043c\u0435\u0442\u043e\u0434 (<code>index</code>, <code>store</code>, <code>show</code>) \u2014 \u044d\u0442\u043e \u043e\u0442\u0434\u0435\u043b, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0449\u0438\u0439 \u0441\u0432\u043e\u044e \u0440\u0430\u0431\u043e\u0442\u0443.</p> <p>\u041c\u0430\u0440\u0448\u0440\u0443\u0442 (Route) \u2014 \u044d\u0442\u043e \u0430\u0434\u0440\u0435\u0441\u043d\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0447\u043a\u0430 \u043d\u0430 \u0432\u0445\u043e\u0434\u0435 \u0432 \u0437\u0434\u0430\u043d\u0438\u0435. \u041e\u043d\u0430 \u0433\u043e\u0432\u043e\u0440\u0438\u0442:</p> <ul> <li>\"\u0415\u0441\u043b\u0438 \u043a\u0442\u043e-\u0442\u043e \u043f\u0440\u0438\u0448\u0435\u043b \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>/planets</code> \u043c\u0435\u0442\u043e\u0434\u043e\u043c GET \u2014 \u043e\u0442\u043f\u0440\u0430\u0432\u044c\u0442\u0435 \u0435\u0433\u043e \u0432 \u043e\u0442\u0434\u0435\u043b <code>index</code> (\u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u0441\u0451)\".</li> <li>\"\u0415\u0441\u043b\u0438 \u043a\u0442\u043e-\u0442\u043e \u043f\u0440\u0438\u0448\u0435\u043b \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>/planets</code> \u043c\u0435\u0442\u043e\u0434\u043e\u043c POST \u0441 \u043f\u043e\u0441\u044b\u043b\u043a\u043e\u0439 (\u0434\u0430\u043d\u043d\u044b\u043c\u0438) \u2014 \u043e\u0442\u043f\u0440\u0430\u0432\u044c\u0442\u0435 \u0435\u0433\u043e \u0432 \u043e\u0442\u0434\u0435\u043b <code>store</code> (\u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0435)\".</li> </ul> <p>\u0411\u0435\u0437 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u043d\u0438 \u043e\u0434\u0438\u043d \u0437\u0430\u043f\u0440\u043e\u0441 \u0438\u0437 \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u043c\u0438\u0440\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u0442 \u043d\u0443\u0436\u043d\u044b\u0439 \u0435\u043c\u0443 \u043e\u0442\u0434\u0435\u043b \u0432 \u0432\u0430\u0448\u0435\u043c \u043a\u043e\u0434\u0435. \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0444\u0430\u0439\u043b \u0434\u043b\u044f \u0442\u0430\u043a\u0438\u0445 \"\u0430\u0434\u0440\u0435\u0441\u043d\u044b\u0445 \u0442\u0430\u0431\u043b\u0438\u0447\u0435\u043a\" \u0432 API \u2014 \u044d\u0442\u043e <code>routes/api.php</code>.</p> <p>\u0412 Laravel 11+ \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043d\u0435\u0442 \"API-\u0430\u0434\u0440\u0435\u0441\u043d\u043e\u0439 \u043a\u043d\u0438\u0433\u0438\". \u041c\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u0435\u0435 \u0441\u0430\u043c\u0438, \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 php artisan install:api. \u0422\u0435\u043f\u0435\u0440\u044c \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0444\u0430\u0439\u043b routes/api.php \u2014 \u044d\u0442\u043e \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u0446\u0435\u043d\u0442\u0440 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u043c\u0438 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430\u043c\u0438 \u043d\u0430\u0448\u0435\u0433\u043e API.</p> <p>\u041a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 api.php \u043e\u0442 web.php:</p> <ul> <li>\u041f\u0440\u0435\u0444\u0438\u043a\u0441 /api: Laravel \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 /api \u043a\u043e \u0432\u0441\u0435\u043c URL-\u0430\u0434\u0440\u0435\u0441\u0430\u043c \u0438\u0437 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430. \u041c\u0430\u0440\u0448\u0440\u0443\u0442 /planets \u043f\u0440\u0435\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0432 /api/planets.</li> <li>\"\u0411\u0435\u0437 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f\" (Stateless): \u0417\u0434\u0435\u0441\u044c \u043d\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u0439 \u0438 cookie-\u0444\u0430\u0439\u043b\u043e\u0432, \u043a\u0430\u043a \u0432 \u043e\u0431\u044b\u0447\u043d\u043e\u043c \u0432\u0435\u0431\u0435. \u041a\u0430\u0436\u0434\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c \u0438 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u0435 \u0432\u0441\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 (\u043e\u0431\u044b\u0447\u043d\u043e \u044d\u0442\u043e API-\u0442\u043e\u043a\u0435\u043d \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0445).</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/5/#2","title":"2. \u041f\u0443\u0442\u044c \u043d\u043e\u0432\u0438\u0447\u043a\u0430: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430 \u0432\u0440\u0443\u0447\u043d\u0443\u044e","text":"<p>\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043e\u0434\u0438\u043d-\u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u0441\u0432\u043e\u0438\u043c\u0438 \u0440\u0443\u043a\u0430\u043c\u0438, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043d\u044f\u0442\u044c \u043f\u0440\u0438\u043d\u0446\u0438\u043f. \u041d\u0430\u0448\u0430 \u0446\u0435\u043b\u044c \u2014 \u0437\u0430\u0441\u0442\u0430\u0432\u0438\u0442\u044c URL <code>/api/planets</code> \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u043b\u0430\u043d\u0435\u0442.</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>routes/api.php</code> \u0438 \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435:</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController; // \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c, \u0433\u0434\u0435 \u043d\u0430\u0448 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\n\n//                    (1)           (2)                     (3)\nRoute::get(      '/planets',    [PlanetController::class, 'index']     );\n//   ^               ^                       ^\n// (HTTP-\u043c\u0435\u0442\u043e\u0434)   (URL-\u0430\u0434\u0440\u0435\u0441)          (\u041a\u0430\u043a\u043e\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 \u0438 \u043c\u0435\u0442\u043e\u0434 \u0432\u044b\u0437\u0432\u0430\u0442\u044c)\n</code></pre> <p>\u0420\u0430\u0437\u0431\u0435\u0440\u0435\u043c \u044d\u0442\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e \u0447\u0430\u0441\u0442\u044f\u043c:</p> <ol> <li><code>Route::get(...)</code> \u2014 \u043c\u044b \u0433\u043e\u0432\u043e\u0440\u0438\u043c: \"\u042d\u0442\u043e\u0442 \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f GET-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432\".</li> <li><code>'/planets'</code> \u2014 \u044d\u0442\u043e URL, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0441\u043b\u0443\u0448\u0430\u0442\u044c Laravel. \u0421 \u0443\u0447\u0435\u0442\u043e\u043c \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430 <code>/api</code>, \u043f\u043e\u043b\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 \u0431\u0443\u0434\u0435\u0442 <code>http://space-api.test/api/planets</code>.</li> <li><code>[PlanetController::class, 'index']</code> \u2014 \u044d\u0442\u043e \"\u043f\u0443\u043d\u043a\u0442 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\". \u041c\u044b \u0433\u043e\u0432\u043e\u0440\u0438\u043c: \"\u041a\u043e\u0433\u0434\u0430 \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u0440\u0438\u0434\u0435\u0442, \u043d\u0430\u0439\u0434\u0438 \u043a\u043b\u0430\u0441\u0441 <code>PlanetController</code> \u0438 \u0432\u044b\u0437\u043e\u0432\u0438 \u0432 \u043d\u0435\u043c \u043c\u0435\u0442\u043e\u0434 <code>index()</code>\".</li> </ol> <p>\u0422\u0435\u043f\u0435\u0440\u044c \u0432\u0441\u0451 \u0441\u0432\u044f\u0437\u0430\u043d\u043e! \u0417\u0430\u043f\u0440\u043e\u0441 -&gt; \u041c\u0430\u0440\u0448\u0440\u0443\u0442 -&gt; \u041a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 -&gt; \u041c\u0435\u0442\u043e\u0434.</p> <p>\u0410 \u0447\u0442\u043e, \u0435\u0441\u043b\u0438 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0434\u043d\u0443 \u043f\u043b\u0430\u043d\u0435\u0442\u0443 \u043f\u043e \u0435\u0435 ID? \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>/api/planets/5</code>.</p> <pre><code>// \u041c\u0430\u0440\u0448\u0440\u0443\u0442 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n</code></pre> <p>\u0417\u0434\u0435\u0441\u044c <code>{planet}</code> \u2014 \u044d\u0442\u043e \"\u0448\u0430\u0431\u043b\u043e\u043d\" \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f. Laravel \u043f\u043e\u043d\u0438\u043c\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0430 \u044d\u0442\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0447\u0442\u043e \u0443\u0433\u043e\u0434\u043d\u043e (ID, \u0441\u043b\u0430\u0433). \u0417\u0430\u0442\u0435\u043c \u043e\u043d \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u043c\u0435\u0442\u043e\u0434 <code>show(Planet $planet)</code>. \u042d\u0442\u0430 \"\u043c\u0430\u0433\u0438\u044f\", \u043a\u043e\u0433\u0434\u0430 Laravel \u0441\u0430\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043b\u0430\u043d\u0435\u0442\u0443 \u043f\u043e ID, \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f Route Model Binding.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/5/#3-apiresource","title":"3. \u041f\u0443\u0442\u044c \u043c\u0430\u0441\u0442\u0435\u0440\u0430: <code>apiResource</code> \u2014 \u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0432\u0441\u0435\u043c\u0438","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043a\u0430\u0436\u0434\u044b\u0439 \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u0432\u0440\u0443\u0447\u043d\u0443\u044e (\u0434\u043b\u044f <code>index</code>, <code>show</code>, <code>store</code>, <code>update</code>, <code>destroy</code>) \u0443\u0442\u043e\u043c\u0438\u0442\u0435\u043b\u044c\u043d\u043e. \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 Laravel \u044d\u0442\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u044e\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043c\u043e\u0449\u043d\u044b\u0439 \u043f\u043e\u043c\u043e\u0449\u043d\u0438\u043a \u2014 <code>apiResource</code>.</p> <p>\u0423\u0434\u0430\u043b\u0438\u0442\u0435 \u0432\u0441\u0435, \u0447\u0442\u043e \u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438, \u0438 \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u0435 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439:</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController;\n\nRoute::apiResource('planets', PlanetController::class);\n</code></pre> <p>\u0427\u0442\u043e \u044d\u0442\u0430 \u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u0434\u0435\u043b\u0430\u0435\u0442 \u043f\u043e\u0434 \u043a\u0430\u043f\u043e\u0442\u043e\u043c? \u041e\u043d\u0430 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0446\u0435\u043b\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0443\u0436\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043b\u0438 \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435.</p> \u041c\u0435\u0442\u043e\u0434 URL \u041d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u043c\u0435\u0442\u043e\u0434 \u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 GET <code>/api/planets</code> <code>index()</code> \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u043b\u0430\u043d\u0435\u0442 POST <code>/api/planets</code> <code>store()</code> \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043f\u043b\u0430\u043d\u0435\u0442\u0443 GET <code>/api/planets/{planet}</code> <code>show()</code> \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043e\u0434\u043d\u0443 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043f\u043b\u0430\u043d\u0435\u0442\u0443 PUT/PATCH <code>/api/planets/{planet}</code> <code>update()</code> \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u043f\u043b\u0430\u043d\u0435\u0442\u0443 DELETE <code>/api/planets/{planet}</code> <code>destroy()</code> \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u0443 <p>\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u044d\u0442\u043e\u043c \u0441\u0430\u043c\u0438. \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443:</p> <pre><code>php artisan route:list --path=api\n</code></pre> <p>\u0412\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430\u043c\u0438. <code>apiResource</code> \u2014 \u044d\u0442\u043e \u0432\u0430\u0448 \u043b\u0443\u0447\u0448\u0438\u0439 \u0434\u0440\u0443\u0433 \u0434\u043b\u044f \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 API.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/5/#4","title":"4. \u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0438\u0441\u0441\u0438\u0438 \u0438 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432","text":"<p>\u0427\u0442\u043e \u0435\u0441\u043b\u0438 \u043d\u0430\u043c \u043d\u0443\u0436\u0435\u043d \u043d\u0435\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u043c\u0430\u0440\u0448\u0440\u0443\u0442, \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043d\u0435\u0442 \u0432 <code>apiResource</code>? \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u0443\u044e \u043f\u043b\u0430\u043d\u0435\u0442\u0443 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>/api/planets/random</code>.</p> <p>\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0435\u0433\u043e. \u041d\u043e \u0437\u0434\u0435\u0441\u044c \u0435\u0441\u0442\u044c \u0441\u043c\u0435\u0440\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u0430\u0436\u043d\u0430\u044f \u043b\u043e\u0432\u0443\u0448\u043a\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043f\u043e\u043f\u0430\u0434\u0430\u044e\u0442 9 \u0438\u0437 10 \u043d\u043e\u0432\u0438\u0447\u043a\u043e\u0432.</p> <p>\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0440\u044f\u0434\u043e\u043a (\u041d\u0415 \u0420\u0410\u0411\u041e\u0422\u0410\u0415\u0422!): <pre><code>Route::apiResource('planets', PlanetController::class);\nRoute::get('/planets/random', [PlanetController::class, 'random']); // &lt;-- \u041d\u0415 \u0421\u0420\u0410\u0411\u041e\u0422\u0410\u0415\u0422\n</code></pre> \u041f\u043e\u0447\u0435\u043c\u0443? Laravel \u0447\u0438\u0442\u0430\u0435\u0442 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0441\u0432\u0435\u0440\u0445\u0443 \u0432\u043d\u0438\u0437. \u041e\u043d \u0443\u0432\u0438\u0434\u0438\u0442 <code>Route::apiResource</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0437\u0434\u0430\u043b \u043c\u0430\u0440\u0448\u0440\u0443\u0442 <code>GET /planets/{planet}</code>. \u041a\u043e\u0433\u0434\u0430 \u0432\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u0435 <code>/planets/random</code>, Laravel \u043f\u043e\u0434\u0443\u043c\u0430\u0435\u0442, \u0447\u0442\u043e \"random\" \u2014 \u044d\u0442\u043e ID \u043f\u043b\u0430\u043d\u0435\u0442\u044b, \u0438 \u043f\u043e\u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u043d\u0430\u0439\u0442\u0438 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043b\u0430\u043d\u0435\u0442\u0443 \u0441 ID \"random\" \u0438 \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0443.</p> <p>\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0440\u044f\u0434\u043e\u043a (\u0420\u0410\u0411\u041e\u0422\u0410\u0415\u0422!): <pre><code>&lt;?php\nuse App\\Http\\Controllers\\PlanetController;\nuse Illuminate\\Support\\Facades\\Route;\n\n// 1. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u041a\u041e\u041d\u041a\u0420\u0415\u0422\u041d\u042b\u0415 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b\nRoute::get('/planets/random', [PlanetController::class, 'random']);\n\n// 2. \u0418 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0442\u043e\u043c \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0435\u043c \u041e\u0411\u0429\u0418\u0415 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0441 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438\nRoute::apiResource('planets', PlanetController::class);\n</code></pre></p> <p>\u041f\u0440\u0430\u0432\u0438\u043b\u043e: \u0412\u0441\u0435\u0433\u0434\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0439\u0442\u0435 \u0431\u043e\u043b\u0435\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b (\u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a <code>/random</code>) \u043f\u0435\u0440\u0435\u0434 \u0431\u043e\u043b\u0435\u0435 \u043e\u0431\u0449\u0438\u043c\u0438 \u0438 \u0448\u0430\u0431\u043b\u043e\u043d\u043d\u044b\u043c\u0438 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430\u043c\u0438 (\u0442\u0430\u043a\u0438\u043c\u0438 \u043a\u0430\u043a <code>/{planet}</code>).</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/5/#_1","title":"\u26a0\ufe0f \u0412\u0430\u0436\u043d\u043e!","text":"<p>\u0427\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043c\u0430\u0440\u0448\u0440\u0443\u0442 api/planets/random, \u043d\u0443\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0432 PlanetController:</p> <pre><code>&lt;?php\npublic function random(Request $request)\n{\n   $planet = Planet::inRandomOrder()-&gt;first();\n   return response()-&gt;json($planet);\n}\n</code></pre>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/5/#5","title":"5. \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430: \u041d\u0430\u0432\u043e\u0434\u0438\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a","text":"<p>\u041a\u043e\u0433\u0434\u0430 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043c\u043d\u043e\u0433\u043e, \u0438\u0445 \u043c\u043e\u0436\u043d\u043e \u0438 \u043d\u0443\u0436\u043d\u043e \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c.</p> <p>A. \u0412\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API \u0427\u0442\u043e\u0431\u044b \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c \u043d\u0435 \u0441\u043b\u043e\u043c\u0430\u0442\u044c \u0441\u0442\u0430\u0440\u044b\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0432\u0430\u0448\u0435 API, \u043f\u0440\u0438\u043d\u044f\u0442\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u044e \u0432 URL, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 <code>/api/v1/...</code>.</p> <pre><code>&lt;?php\nRoute::prefix('v1')-&gt;group(function () {\n    // \u0412\u0441\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0432\u043d\u0443\u0442\u0440\u0438 \u044d\u0442\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0442 \u043f\u0440\u0435\u0444\u0438\u043a\u0441 /v1\n    // \u0418\u0442\u043e\u0433\u043e\u0432\u044b\u0439 URL: /api/v1/planets\n    Route::get('/planets/random', [PlanetController::class, 'random']);\n    Route::apiResource('planets', PlanetController::class);\n});\n</code></pre> <p>B. \u0417\u0430\u0449\u0438\u0442\u0430 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 (Middleware) \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u043c, \u0447\u0442\u043e \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u043c\u043e\u0433\u0443\u0442 \u0432\u0441\u0435, \u0430 \u0432\u043e\u0442 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c, \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0442\u044c \u0438 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u2014 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438.</p> <pre><code>&lt;?php\n// \u041f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0432\u0441\u0435\u043c\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// \u0413\u0440\u0443\u043f\u043f\u0430 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432, \u0442\u0440\u0435\u0431\u0443\u044e\u0449\u0430\u044f \"\u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\" (\u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438)\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n});\n</code></pre> <p>\u0417\u0434\u0435\u0441\u044c <code>middleware('auth:sanctum')</code> \u2014 \u044d\u0442\u043e \u043a\u0430\u043a \u043e\u0445\u0440\u0430\u043d\u043d\u0438\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \"\u043f\u0440\u043e\u043f\u0443\u0441\u043a\" \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e, \u043a\u0442\u043e \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430\u043c \u0432\u043d\u0443\u0442\u0440\u0438 \u0433\u0440\u0443\u043f\u043f\u044b.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/5/#6-postman","title":"6. \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0435\u0440\u0435\u0437 Postman","text":"<p>\u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043e\u0433\u0434\u0430 \u0432\u0441\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u043f\u0440\u043e\u043b\u043e\u0436\u0435\u043d\u044b, \u043f\u043e\u0440\u0430 \u0438\u0445 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c.</p> <ol> <li>\u0415\u0441\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 Herd: \u0412\u0430\u0448 \u0441\u0430\u0439\u0442 \u0443\u0436\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 \u0442\u0438\u043f\u0430 <code>http://space-api.test</code>.</li> <li>\u0415\u0441\u043b\u0438 \u043d\u0435\u0442: \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0435\u0440 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 <code>php artisan serve</code>. \u0410\u0434\u0440\u0435\u0441 \u0431\u0443\u0434\u0435\u0442 <code>http://localhost:8000</code>.</li> </ol> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 Postman \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u044c\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b:</p> <ul> <li><code>GET http://space-api.test/api/planets</code></li> <li><code>GET http://space-api.test/api/planets/random</code></li> <li><code>POST http://space-api.test/api/planets</code> (\u043d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c JSON-\u0442\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 <code>Body</code> -&gt; <code>raw</code> -&gt; <code>JSON</code>).</li> </ul> <p>\u041f\u0440\u0438\u043c\u0435\u0440 POST-\u0437\u0430\u043f\u0440\u043e\u0441\u0430: <pre><code>{\n    \"name\": \"Kepler-186f\",\n    \"description\": \"\u041f\u0435\u0440\u0432\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u0437\u0435\u043c\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0432 \u043e\u0431\u0438\u0442\u0430\u0435\u043c\u043e\u0439 \u0437\u043e\u043d\u0435\",\n    \"size_km\": 15000,\n    \"solar_system\": \"Kepler-186\",\n    \"is_habitable\": true\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/5/#8","title":"8. \u0427\u0430\u0441\u0442\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u0438","text":"<ol> <li>404 Not Found <ul> <li>\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 URL (<code>/api/planet</code> \u0432\u043c\u0435\u0441\u0442\u043e <code>/api/planets</code>)</li> <li>\u0417\u0430\u0431\u044b\u043b\u0438 <code>php artisan serve</code></li> </ul> </li> <li>405 Method Not Allowed <ul> <li>\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 HTTP-\u043c\u0435\u0442\u043e\u0434 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, GET \u0432\u043c\u0435\u0441\u0442\u043e POST)</li> </ul> </li> <li>Missing Controller <ul> <li>\u041e\u043f\u0435\u0447\u0430\u0442\u043a\u0430 \u0432 \u0438\u043c\u0435\u043d\u0438 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430 (<code>PlanetControler</code>)</li> </ul> </li> <li>Route Name Collision <ul> <li>\u041f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u0438\u043c\u0435\u043d\u0430 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432</li> </ul> </li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/5/#_2","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u0424\u0430\u0439\u043b \u0434\u043b\u044f API-\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u0432 Laravel:</p>  a) routes/web.php  b) routes/api.php  c) routes/console.php <p>2. \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u0440\u0435\u0444\u0438\u043a\u0441 \u0434\u043b\u044f API-\u0440\u043e\u0443\u0442\u043e\u0432:</p>  a) /admin  b) /api  c) /v1 <p>3. \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f 5 CRUD-\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432:</p>  a) Route::api()  b) Route::resource()  c) Route::apiResource() <p>4. Route::prefix('v1') \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f:</p>  a) \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438  b) \u0412\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f API  c) \u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f <p>5. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432:</p>  a) php artisan route:list  b) php artisan list:routes  c) php routes \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \"\u0433\u0438\u043f\u0435\u0440\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b\" \u0434\u043b\u044f \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e API! \u0422\u0435\u043f\u0435\u0440\u044c:</p> <ul> <li>\ud83d\uddfa\ufe0f \u0412\u0441\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u043f\u043e <code>/api/...</code></li> <li>\ud83d\udd17 \u0420\u0435\u0441\u0443\u0440\u0441\u043d\u044b\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u044b \u043a \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0443</li> <li>\ud83d\udee1\ufe0f \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0434\u043b\u044f \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439</li> <li>\u2705 \u041c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0447\u0435\u0440\u0435\u0437 Postman</li> </ul> <p>\u0412\u0441\u0435\u043b\u0435\u043d\u043d\u0430\u044f \u043e\u0442\u043a\u0440\u044b\u0442\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432! \u0414\u0430\u043b\u0435\u0435 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0437\u0430\u0449\u0438\u0442\u0443 \u043e\u0442 \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043c\u0443\u0441\u043e\u0440\u0430\" \u2014 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e \u0434\u0430\u043d\u043d\u044b\u0445.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ol> <li>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 <code>php artisan route:list</code></li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u0438\u0434\u0438\u0442\u0435 5+ \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u0434\u043b\u044f planets</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0440\u0430\u0431\u043e\u0442\u0443 GET /api/planets \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435/Postman</li> </ol> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0430 404:</p> <ul> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 <code>Route::apiResource</code> \u0432 <code>routes/api.php</code></li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d (<code>php artisan serve</code>)</li> <li>\u0414\u043b\u044f Windows: \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u0435 \u043f\u043e\u0440\u0442 8000 \u0432 \u0431\u0440\u0430\u043d\u0434\u043c\u0430\u0443\u044d\u0440\u0435</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/6/","title":"\u0413\u043b\u0430\u0432\u0430 2.6: \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 50 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/6/#1","title":"1. \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f: \u0429\u0438\u0442 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0430","text":"<p>\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f - \u044d\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c. \u0411\u0435\u0437 \u043d\u0435\u0435:</p> <ul> <li>\ud83d\ude80 \u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \"\u0440\u0430\u0437\u0440\u0443\u0448\u0438\u0442\u044c\" \u0432\u0430\u0448\u0443 \u0431\u0430\u0437\u0443</li> <li>\ud83c\udf0c \u0417\u043b\u043e\u0443\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u0438\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u0432\u043d\u0435\u0434\u0440\u0438\u0442\u044c \u0432\u0440\u0435\u0434\u043e\u043d\u043e\u0441\u043d\u044b\u0439 \u043a\u043e\u0434</li> <li>\ud83e\ude90 \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0442 \u043d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f: \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f = \u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0437\u0430\u0449\u0438\u0442\u044b \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0442\u0430\u043d\u0446\u0438\u0438:</p> <ul> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \"\u0433\u0440\u0443\u0437\" (\u0434\u0430\u043d\u043d\u044b\u0435) \u043f\u0435\u0440\u0435\u0434 \u0441\u0442\u044b\u043a\u043e\u0432\u043a\u043e\u0439</li> <li>\u041e\u0442\u043a\u043b\u043e\u043d\u044f\u0435\u0442 \u043e\u043f\u0430\u0441\u043d\u044b\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b</li> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043c\u0443\u0441\u043e\u0440</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/6/#2-laravel-api","title":"2. \u0413\u0434\u0435 \u0432\u0430\u043b\u0438\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432 Laravel API","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u044b:</p> <ol> <li>\u0412 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435 (\u0431\u044b\u0441\u0442\u0440\u043e, \u043d\u043e \u0437\u0430\u0433\u0440\u043e\u043c\u043e\u0436\u0434\u0430\u0435\u0442 \u043a\u043e\u0434)</li> <li>Form Request (\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f, \u0447\u0438\u0441\u0442\u0430\u044f \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430)</li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/6/#3","title":"3. \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435","text":"<p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434 <code>validate()</code> \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Request: <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $validated = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    // ... \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b\n}\n</code></pre></p> <p>\u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438:</p> \u041f\u0440\u0430\u0432\u0438\u043b\u043e \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u041f\u0440\u0438\u043c\u0435\u0440 <code>required</code> \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 <code>'name' =&gt; 'required'</code> <code>string</code> \u0421\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 <code>'description' =&gt; 'string'</code> <code>integer</code> \u0426\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e <code>'size_km' =&gt; 'integer'</code> <code>min:value</code> \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435/\u0434\u043b\u0438\u043d\u0430 <code>'size_km' =&gt; 'min:100'</code> <code>max:value</code> \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435/\u0434\u043b\u0438\u043d\u0430 <code>'name' =&gt; 'max:255'</code> <code>unique:table,column</code> \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 <code>'name' =&gt; 'unique:planets'</code> <code>url</code> \u041a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 URL <code>'image_url' =&gt; 'url'</code> <code>boolean</code> true/false/1/0 <code>'is_habitable' =&gt; 'boolean'</code>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/6/#4","title":"4. \u041a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445","text":"<p>\u041c\u0435\u043d\u044f\u0435\u043c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u0442\u0435\u043a\u0441\u0442\u044b \u043e\u0448\u0438\u0431\u043e\u043a: <pre><code>&lt;?php\n$validated = $request-&gt;validate(\n    [\n        'name' =&gt; 'required|unique:planets',\n        'size_km' =&gt; 'min:1000'\n    ],\n    [\n        'name.required' =&gt; '\u0418\u043c\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e!',\n        'name.unique' =&gt; '\u0422\u0430\u043a\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435',\n        'size_km.min' =&gt; '\u0414\u0438\u0430\u043c\u0435\u0442\u0440 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043c\u0435\u043d\u044c\u0448\u0435 1000 \u043a\u043c'\n    ]\n);\n</code></pre></p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u0440\u0438 \u043e\u0448\u0438\u0431\u043a\u0435 (\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 422 Unprocessable Entity): <pre><code>{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"name\": [\"\u0422\u0430\u043a\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435\"],\n        \"size_km\": [\"\u0414\u0438\u0430\u043c\u0435\u0442\u0440 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043c\u0435\u043d\u044c\u0448\u0435 1000 \u043a\u043c\"]\n    }\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/6/#5-form-request","title":"5. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 Form Request","text":"<p>\u0414\u043b\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0439 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441:</p> <p>\u0428\u0430\u0433 1: \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f <pre><code>php artisan make:request StorePlanetRequest\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c <code>app/Http/Requests/StorePlanetRequest.php</code> <pre><code>&lt;?php\npublic function authorize()\n{\n    return true; // \u0414\u043b\u044f API \u043e\u0431\u044b\u0447\u043d\u043e true\n}\n\npublic function rules()\n{\n    return [\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ];\n}\n\npublic function messages()\n{\n    return [\n        'name.unique' =&gt; '\u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u0441 \u0442\u0430\u043a\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442!',\n        'size_km.min' =&gt; '\u0414\u0438\u0430\u043c\u0435\u0442\u0440 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043c\u0435\u043d\u044c\u0448\u0435 100 \u043a\u043c'\n    ];\n}\n</code></pre></p> <p>\u0428\u0430\u0433 3: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435 <pre><code>&lt;?php\nuse App\\Http\\Requests\\StorePlanetRequest;\n\npublic function store(StorePlanetRequest $request)\n{\n    // \u0414\u0430\u043d\u043d\u044b\u0435 \u0443\u0436\u0435 \u0432\u0430\u043b\u0438\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u044b!\n    $validated = $request-&gt;validated();\n    $planet = Planet::create($validated);\n    return response()-&gt;json($planet, 201);\n}\n</code></pre></p> <p>\u041f\u043e\u043d\u044f\u043b. \u0417\u0430\u0434\u0430\u0447\u0430 \u2014 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0433\u043b\u0430\u0432\u0443 \u0432 \u043f\u043e\u043b\u043d\u043e\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0441 Laravel 10/11/12, \u0443\u0431\u0440\u0430\u0432 \u0432\u0441\u0435 \u0443\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0438\u0445 \u043a\u043e\u043d\u0446\u0435\u043f\u0446\u0438\u0439 \u0438 \u0444\u043b\u0430\u0433\u043e\u0432, \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u0441\u0442\u0438 <code>--invokable</code>, \u0438 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434. \u041d\u0435 \u0442\u0440\u043e\u0433\u0430\u044f \u043d\u0438\u0447\u0435\u0433\u043e \u043b\u0438\u0448\u043d\u0435\u0433\u043e.</p> <p>\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u044e. \u0412\u043e\u0442 \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0430 6, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0442\u043e\u0447\u043d\u043e \u043e\u0442\u0440\u0430\u0436\u0430\u0435\u0442 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0432\u0435\u0440\u0441\u0438\u0439 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/6/#6","title":"6. \u041a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0440\u0430\u0432\u0438\u043b\u043e \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \"\u0440\u0430\u0437\u0443\u043c\u043d\u043e\u0441\u0442\u0438\" \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u044b. \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 Laravel \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \"\u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043d\u044b\u043c\", \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u044b \u043d\u0430\u043f\u0438\u0448\u0435\u043c \u0441\u0432\u043e\u044e \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u0443\u044e \u043b\u043e\u0433\u0438\u043a\u0443.</p> <p>\u0428\u0430\u0433 1: \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u0430</p> <p>Laravel \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 Artisan-\u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \"\u0437\u0430\u0433\u043e\u0442\u043e\u0432\u043a\u0438\" \u043a\u043b\u0430\u0441\u0441\u0430 \u043f\u0440\u0430\u0432\u0438\u043b\u0430. \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0435\u0435 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435:</p> <pre><code>php artisan make:rule ValidPlanetName\n</code></pre> <p>\u0428\u0430\u0433 2: \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c <code>app/Rules/ValidPlanetName.php</code></p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b. \u0415\u0433\u043e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043f\u0440\u043e\u0441\u0442\u0430 \u0438 \u043f\u043e\u043d\u044f\u0442\u043d\u0430. \u041d\u0430\u0448\u0430 \u0437\u0430\u0434\u0430\u0447\u0430 \u2014 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 \u0432\u043d\u0443\u0442\u0440\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 <code>validate</code>.</p> <pre><code>&lt;?php\n\nnamespace App\\Rules;\n\nuse Closure;\nuse Illuminate\\Contracts\\Validation\\ValidationRule;\n\nclass ValidPlanetName implements ValidationRule\n{\n    /**\n     * \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u043e \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438.\n     *\n     * @param  \\Closure(string): \\Illuminate\\Translation\\PotentiallyTranslatedString  $fail\n     */\n    public function validate(string $attribute, mixed $value, Closure $fail): void\n    {\n        // \u041d\u0430\u0448 \"\u0447\u0435\u0440\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a\" \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439\n        $forbidden = ['\u0417\u0435\u043c\u043b\u044f 2.0', '\u041d\u0438\u0431\u0438\u0440\u0443', '\u041f\u043b\u0430\u043d\u0435\u0442\u0430 X'];\n\n        // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043f\u0438\u0441\u043a\u0435,\n        // \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u0431\u0443\u043a\u0432.\n        if (in_array(strtolower($value), array_map('strtolower', $forbidden))) {\n            // \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0435 \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u0430, \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e $fail\n            // \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c \u043e\u0448\u0438\u0431\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u0432\u0438\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c.\n            $fail('\u042d\u0442\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f!');\n        }\n    }\n}\n</code></pre> <p>\u0428\u0430\u0433 3: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432 Form Request</p> <p>\u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u0448\u0435 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u043e \u0433\u043e\u0442\u043e\u0432\u043e \u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0435\u0433\u043e \u0432 \u043b\u044e\u0431\u043e\u043c Form Request, \u043f\u0440\u043e\u0441\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0432 \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043d\u0430\u0448\u0435\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430.</p> <p>\u041e\u0442\u043a\u0440\u043e\u0435\u043c <code>app/Http/Requests/StorePlanetRequest.php</code> \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c <code>new ValidPlanetName</code> \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u0440\u0430\u0432\u0438\u043b \u0434\u043b\u044f \u043f\u043e\u043b\u044f <code>name</code>.</p> <p><pre><code>&lt;?php\n// app/Http/Requests/StorePlanetRequest.php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Rules\\ValidPlanetName; // &lt;-- \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass StorePlanetRequest extends FormRequest\n{\n    // ... (\u043c\u0435\u0442\u043e\u0434 authorize)\n\n    public function rules(): array\n    {\n        return [\n            'name' =&gt; [\n                'sometimes',\n                'string',\n                'max:255',\n                'unique:planets',\n                new ValidPlanetName, // &lt;-- \u0412\u043e\u0442 \u0438 \u043d\u0430\u0448\u0435 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u043e\n            ],\n            'description' =&gt; 'sometimes|string',\n            'size_km' =&gt; 'sometimes|integer|min:100|max:500000',\n            'solar_system' =&gt; 'sometimes|string|max:100',\n            'image_url' =&gt; 'nullable|url|max:2048',\n            'is_habitable' =&gt; 'sometimes|boolean'\n        ];\n    }\n\n    // ... (\u043c\u0435\u0442\u043e\u0434 messages)\n}\n</code></pre> \u0413\u043e\u0442\u043e\u0432\u043e. \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043f\u043b\u0430\u043d\u0435\u0442\u044b Laravel \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u0432\u0441\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u043a \u043f\u043e\u043b\u044e <code>name</code> \u0438, \u0434\u043e\u0439\u0434\u044f \u0434\u043e <code>new ValidPlanetName</code>, \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442 \u043d\u0430\u0448\u0443 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0443\u044e \u043b\u043e\u0433\u0438\u043a\u0443.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/6/#7-update","title":"7. \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f (Update)","text":"<p>\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445:</p> <p>\u041f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0447\u0430\u0441\u0442\u043e \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f. \u0413\u043b\u0430\u0432\u043d\u0430\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u2014 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c.</p> <p>\u0428\u0430\u0433 1: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 Form Request \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f <pre><code>php artisan make:request UpdatePlanetRequest\n</code></pre> \u0428\u0430\u0433 2: \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c <code>app/Http/Requests/UpdatePlanetRequest.php</code> <pre><code>&lt;?php\nuse Illuminate\\Validation\\Rule;\n\npublic function authorize(): bool\n{\n    return true;\n}\npublic function rules(): array\n{\n    $planet = $this-&gt;route('planet'); // \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u0438\u0437 \u0440\u043e\u0443\u0442\u0430\n\n     return [\n         'name' =&gt; [\n             'sometimes', // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u0435 \u043f\u0440\u0438\u0448\u043b\u043e \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435\n             'required',\n             'string',\n             'max:255',\n             Rule::unique('planets')-&gt;ignore($planetId),\n         ],\n         'description'  =&gt; 'sometimes|required|string',\n         'size_km'      =&gt; 'sometimes|required|integer|min:100|max:500000',\n         // ... \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u0441 'sometimes'\n     ];\n }\n</code></pre> \u0428\u0430\u0433 3: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435 <pre><code>&lt;?php\n use App\\Http\\Requests\\UpdatePlanetRequest;\n\n public function update(UpdatePlanetRequest $request, Planet $planet)\n {\n     $validated = $request-&gt;validated();\n     $planet-&gt;update($validated);\n     return response()-&gt;json($planet);\n }\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/6/#8-postman","title":"8. \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0432 Postman","text":"<p>\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439 1: \u041e\u0448\u0438\u0431\u043a\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438\u043c\u0435\u043d\u0438 <pre><code>POST /api/planets\n{\n    \"name\": \"\u041c\u0430\u0440\u0441\",\n    \"description\": \"\u041a\u0440\u0430\u0441\u043d\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430, \u0446\u0435\u043b\u044c \u0431\u0443\u0434\u0443\u044e\u0449\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u0439\",\n    \"size_km\": 6779,\n    \"solar_system\": \"Solar System\",\n    \"is_habitable\": false\n}\n</code></pre> \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u043e\u0442\u0432\u0435\u0442: <pre><code>{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"name\": [\"\u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u0441 \u0442\u0430\u043a\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442!\"]\n    }\n}\n</code></pre></p> <p>\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439 2: \u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0434\u0438\u0430\u043c\u0435\u0442\u0440 <pre><code>{\n    \"name\": \"\u041f\u043b\u0430\u043d\u0435\u0442\u0430-\u0413\u043e\u0440\u043e\u0448\u0438\u043d\u0430\",\n    \"size_km\": 50 // &lt; min:100\n}\n</code></pre> \u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u043e\u0442\u0432\u0435\u0442: <pre><code>\"errors\": {\n    \"size_km\": [\"\u0414\u0438\u0430\u043c\u0435\u0442\u0440 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043c\u0435\u043d\u044c\u0448\u0435 100 \u043a\u043c\"]\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/6/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. HTTP-\u0441\u0442\u0430\u0442\u0443\u0441 \u043f\u0440\u0438 \u043e\u0448\u0438\u0431\u043a\u0430\u0445 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438:</p>  a) 400 Bad Request  b) 422 Unprocessable Entity  c) 500 Internal Server Error <p>2. \u041f\u0440\u0430\u0432\u0438\u043b\u043e \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438:</p>  a) unique:table  b) distinct  c) only:table <p>3. \u0413\u0434\u0435 \u043b\u0443\u0447\u0448\u0435 \u0440\u0430\u0437\u043c\u0435\u0449\u0430\u0442\u044c \u0441\u043b\u043e\u0436\u043d\u044b\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438?</p>  a) \u0412 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435  b) \u0412 \u043c\u043e\u0434\u0435\u043b\u0438  c) \u0412 Form Request <p>4. \u041c\u0435\u0442\u043e\u0434 `authorize()` \u0432 Form Request \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u0435\u0440\u043d\u0443\u0442\u044c:</p>  a) false  b) true  c) null <p>5. \u041f\u0440\u0430\u0432\u0438\u043b\u043e sometimes \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442:</p>  a) \u041f\u043e\u043b\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e  b) \u041f\u043e\u043b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442  c) \u041f\u043e\u043b\u0435 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0438 \u043c\u043e\u0449\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0437\u0430\u0449\u0438\u0442\u044b \u0434\u043b\u044f \u0441\u0432\u043e\u0435\u0433\u043e \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e API:</p> <ul> <li>\ud83d\udee1\ufe0f \u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u0438 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438</li> <li>\ud83d\udcdd \u0427\u0438\u0442\u0430\u0435\u043c\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445</li> <li>\ud83e\udde9 Form Request \u0434\u043b\u044f \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432</li> <li>\u2699\ufe0f \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445</li> </ul> <p>\u0412\u0430\u0448\u0430 \u0432\u0441\u0435\u043b\u0435\u043d\u043d\u0430\u044f \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439! \u0414\u0430\u043b\u0435\u0435 \u043c\u044b \u043d\u0430\u0443\u0447\u0438\u043c\u0441\u044f \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0430\u0432\u0430\u0440\u0438\u0438\" - \u043e\u0448\u0438\u0431\u043a\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ol> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 Form Request \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043b\u0430\u043d\u0435\u0442</li> <li>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f</li> <li>\u041f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0447\u0435\u0440\u0435\u0437 Postman</li> </ol> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043d\u0435 \u0441\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442:</p> <ul> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Form Request \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435</li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e <code>authorize()</code> \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 true</li> <li>\u0414\u043b\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>Rule::unique</code></li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/7/","title":"\u0413\u043b\u0430\u0432\u0430 2.7: \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 40 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/7/#1","title":"1. \u041f\u043e\u0447\u0435\u043c\u0443 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u2014 \u044d\u0442\u043e \u043f\u043b\u043e\u0445\u043e?","text":"<p>\u0415\u0441\u043b\u0438 \u0432 \u0432\u0430\u0448\u0435\u043c Laravel-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043e\u0448\u0438\u0431\u043a\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430 \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0431\u0430\u0437\u0435), \u0430 \u0432\u044b \u044d\u0442\u043e \u043d\u0438\u043a\u0430\u043a \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043b\u0438, \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0432\u0438\u0434\u0438\u0442 \u043e\u0433\u0440\u043e\u043c\u043d\u0443\u044e HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u0438\u043b\u0438 \u043d\u0435\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \"Server Error\".</p> <p>\u0414\u043b\u044f API \u044d\u0442\u043e \u043a\u0430\u0442\u0430\u0441\u0442\u0440\u043e\u0444\u0430. \u0412\u0430\u0448\u0435 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c JSON, \u0430 \u043d\u0435 HTML. \u041d\u0430\u0448\u0430 \u0437\u0430\u0434\u0430\u0447\u0430 \u2014 \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0438\u0442\u044c \u043b\u044e\u0431\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u0438 \u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u0435\u0435 \u0432 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 JSON-\u043e\u0442\u0432\u0435\u0442.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/7/#2-bootstrapappphp","title":"2. \u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0439 \u0434\u0438\u0441\u043f\u0435\u0442\u0447\u0435\u0440 \u043e\u0448\u0438\u0431\u043e\u043a: <code>bootstrap/app.php</code>","text":"<p>\u0412 \u0441\u0442\u0430\u0440\u044b\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445 Laravel \u0431\u044b\u043b \u0433\u0440\u043e\u043c\u043e\u0437\u0434\u043a\u0438\u0439 \u0444\u0430\u0439\u043b <code>App\\Exceptions\\Handler.php</code>. \u0412 Laravel 11/12 \u0432\u0441\u0435 \u0441\u0442\u0430\u043b\u043e \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u043f\u0440\u043e\u0449\u0435 \u0438 \u044d\u043b\u0435\u0433\u0430\u043d\u0442\u043d\u0435\u0435. \u0426\u0435\u043d\u0442\u0440 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0430\u043c\u0438 \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043f\u0440\u044f\u043c\u043e \u0432 \u0444\u0430\u0439\u043b\u0435 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u2014 <code>bootstrap/app.php</code>.</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>bootstrap/app.php</code>. \u0412 \u0441\u0430\u043c\u043e\u043c \u043d\u0438\u0437\u0443 \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0431\u043b\u043e\u043a <code>.withExceptions(...)</code>. \u042d\u0442\u043e \u0438 \u0435\u0441\u0442\u044c \u043d\u0430\u0448 \"\u0446\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0439 \u0434\u0438\u0441\u043f\u0435\u0442\u0447\u0435\u0440\".</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    -&gt;withRouting(\n        web: __DIR__.'/../routes/web.php',\n        api: __DIR__.'/../routes/api.php',\n        commands: __DIR__.'/../routes/console.php',\n        health: '/up',\n    )\n    -&gt;withMiddleware(function (Middleware $middleware) {\n        // ...\n    })\n    -&gt;withExceptions(function (Exceptions $exceptions) {\n        // &lt;-- \u0412\u041e\u0422 \u0417\u0414\u0415\u0421\u042c \u041c\u042b \u0411\u0423\u0414\u0415\u041c \u0420\u0410\u0411\u041e\u0422\u0410\u0422\u042c\n    })-&gt;create();\n</code></pre>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/7/#3-404","title":"3. \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u0430\u043c\u0443\u044e \u0447\u0430\u0441\u0442\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443: \"\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e\" (404)","text":"<p>\u0421\u0430\u043c\u0430\u044f \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430 \u0432 API \u2014 \u044d\u0442\u043e \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441, \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>GET /api/planets/999</code>). Laravel \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 <code>ModelNotFoundException</code> \u0438\u043b\u0438 <code>NotFoundHttpException</code>. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0438\u0445 \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0438\u043c.</p> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434 \u0432\u043d\u0443\u0442\u0440\u044c <code>.withExceptions(...)</code>:</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // \u041f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435, \u043a\u043e\u0433\u0434\u0430 \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445\n    $exceptions-&gt;render(function (ModelNotFoundException $e, Request $request) {\n        // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u0440\u0438\u0448\u0435\u043b \u0438\u043c\u0435\u043d\u043d\u043e \u043d\u0430 \u043d\u0430\u0448 API\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; '\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u043d\u0430\u0448\u0435\u0439 \u0433\u0430\u043b\u0430\u043a\u0442\u0438\u043a\u0435.'\n            ], 404);\n        }\n    });\n\n    // \u041f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435, \u043a\u043e\u0433\u0434\u0430 \u0441\u0430\u043c \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\n    $exceptions-&gt;render(function (NotFoundHttpException $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; '\u0422\u0430\u043a\u043e\u0433\u043e \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442.'\n            ], 404);\n        }\n    });\n\n})-&gt;create();\n</code></pre> \u0427\u0442\u043e \u043c\u044b \u0441\u0434\u0435\u043b\u0430\u043b\u0438?</p> <ol> <li><code>$exceptions-&gt;render(...)</code> \u2014 \u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c \"\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\". \u041e\u043d \u0433\u043e\u0432\u043e\u0440\u0438\u0442: \"\u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0434\u0435\u0442 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0442\u0438\u043f\u0430 <code>ModelNotFoundException</code>, \u0432\u044b\u043f\u043e\u043b\u043d\u0438 \u044d\u0442\u043e\u0442 \u043a\u043e\u0434\".</li> <li><code>if ($request-&gt;is('api/*'))</code> \u2014 \u044d\u0442\u043e \u0432\u0430\u0436\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430. \u041e\u043d\u0430 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442, \u0447\u0442\u043e \u043d\u0430\u0448 \u043a\u0440\u0430\u0441\u0438\u0432\u044b\u0439 JSON-\u043e\u0442\u0432\u0435\u0442 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f API-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u043d\u0435 \u0437\u0430\u0442\u0440\u0430\u0433\u0438\u0432\u0430\u044f \u043e\u0431\u044b\u0447\u043d\u044b\u0435 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.</li> <li><code>return response()-&gt;json(...)</code> \u2014 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 JSON-\u043e\u0442\u0432\u0435\u0442 \u0441 \u043a\u043e\u0434\u043e\u043c 404.</li> </ol> <p>\u0422\u0435\u043f\u0435\u0440\u044c, \u0435\u0441\u043b\u0438 \u0432\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u0435 \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u043f\u043b\u0430\u043d\u0435\u0442\u0443, \u0432\u043c\u0435\u0441\u0442\u043e \u0443\u0440\u043e\u0434\u043b\u0438\u0432\u043e\u0439 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u0430\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u044b\u0439 JSON.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/7/#4","title":"4. \u041a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \"\u0441\u0438\u0433\u043d\u0430\u043b\u044b \u0442\u0440\u0435\u0432\u043e\u0433\u0438\"","text":"<p>\u0418\u043d\u043e\u0433\u0434\u0430 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e. \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u043c, \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0431\u0438\u0437\u043d\u0435\u0441-\u043f\u0440\u0430\u0432\u0438\u043b\u043e: \"\u043d\u0435\u043b\u044c\u0437\u044f \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u0443 '\u0417\u0435\u043c\u043b\u044f'\". \u0415\u0441\u043b\u0438 \u043a\u0442\u043e-\u0442\u043e \u043f\u043e\u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u043c\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043e\u0441\u043c\u044b\u0441\u043b\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443.</p> <p>\u0428\u0430\u0433 1: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u0432\u043e\u0439 \u043a\u043b\u0430\u0441\u0441 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435: <pre><code>php artisan make:exception CannotDeleteEarthException\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0435\u0433\u043e \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435 \u041e\u0442\u043a\u0440\u043e\u0435\u043c <code>PlanetController.php</code> \u0438 \u0438\u0437\u043c\u0435\u043d\u0438\u043c \u043c\u0435\u0442\u043e\u0434 <code>destroy</code>:</p> <p><pre><code>&lt;?php\n// app/Http/Controllers/PlanetController.php\nuse App\\Exceptions\\CannotDeleteEarthException; // &lt;-- \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u0430\u0448\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\nuse App\\Models\\Planet;\n\npublic function destroy(Planet $planet)\n{\n    // \u041d\u0430\u0448\u0435 \u043d\u043e\u0432\u043e\u0435 \u0431\u0438\u0437\u043d\u0435\u0441-\u043f\u0440\u0430\u0432\u0438\u043b\u043e\n    if (strtolower($planet-&gt;name) === '\u0437\u0435\u043c\u043b\u044f') {\n        throw new CannotDeleteEarthException('\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0417\u0435\u043c\u043b\u044f \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e \u0413\u0430\u043b\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u041a\u043e\u0434\u0435\u043a\u0441\u043e\u043c.');\n    }\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre> \u0422\u0435\u043f\u0435\u0440\u044c, \u0435\u0441\u043b\u0438 \u043a\u0442\u043e-\u0442\u043e \u043f\u043e\u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c <code>DELETE /api/planets/1</code> (\u0433\u0434\u0435 1 \u2014 \u044d\u0442\u043e ID \u0417\u0435\u043c\u043b\u0438), \u043d\u0430\u0448 \u043a\u043e\u0434 \u0432\u044b\u0431\u0440\u043e\u0441\u0438\u0442 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 <code>CannotDeleteEarthException</code>.</p> <p>\u0428\u0430\u0433 3: \u0423\u0447\u0438\u043c Laravel \u043a\u0440\u0430\u0441\u0438\u0432\u043e \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0430\u0448\u0443 \"\u0442\u0440\u0435\u0432\u043e\u0433\u0443\" \u0412\u0435\u0440\u043d\u0435\u043c\u0441\u044f \u0432 <code>bootstrap/app.php</code> \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0434\u043b\u044f \u043d\u0430\u0448\u0435\u0433\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f.</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // \u041d\u0430\u0448 \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\n    $exceptions-&gt;render(function (CannotDeleteEarthException $e, Request $request) {\n        return response()-&gt;json([\n            'message' =&gt; '\u041e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u0430.',\n            'details' =&gt; $e-&gt;getMessage() // \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438 \u0432 throw\n        ], 403); // 403 Forbidden - \"\u0414\u043e\u0441\u0442\u0443\u043f \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\"\n    });\n\n    // ... (\u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0434\u043b\u044f 404)\n\n})-&gt;create();\n</code></pre> \u0413\u043e\u0442\u043e\u0432\u043e! \u041c\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u0435\u043b\u0430\u0435\u0442 \u043a\u043e\u0434 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430 \u0447\u0438\u0449\u0435, \u0438 \u043d\u0430\u0443\u0447\u0438\u043b\u0438 Laravel \u043f\u0440\u0435\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0435\u0433\u043e \u0432 \u043a\u0440\u0430\u0441\u0438\u0432\u044b\u0439, \u043e\u0441\u043c\u044b\u0441\u043b\u0435\u043d\u043d\u044b\u0439 JSON-\u043e\u0442\u0432\u0435\u0442 \u0441 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c HTTP-\u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/7/#5-500-internal-server-error","title":"5. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0441\u0435\u0445 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0431\u043e\u0435\u0432 (500 Internal Server Error)","text":"<p>\u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c\u0438, \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u044b\u043c\u0438 \u043e\u0448\u0438\u0431\u043a\u0430\u043c\u0438? \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u043e\u0442\u0432\u0430\u043b\u0438\u043b\u0430\u0441\u044c \u0431\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u043b\u0438 \u0432 \u043a\u043e\u0434\u0435 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \"\u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u044b\u0439\" \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0434\u043b\u044f \u0441\u0430\u043c\u043e\u0433\u043e \u043e\u0431\u0449\u0435\u0433\u043e \u0442\u0438\u043f\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u2014 <code>Throwable</code>.</p> <p>\u0412\u0430\u0436\u043d\u043e: \u042d\u0442\u043e\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u043d\u044b\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043b\u0438 \u0432\u044b\u0448\u0435.</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // ... (\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0434\u043b\u044f CannotDeleteEarthException \u0438 404)\n\n    // \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0410\u041b\u042c\u041d\u042b\u0419 \u041e\u0411\u0420\u0410\u0411\u041e\u0422\u0427\u0418\u041a (\u0432 \u0441\u0430\u043c\u043e\u043c \u043a\u043e\u043d\u0446\u0435)\n    $exceptions-&gt;render(function (Throwable $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            // \u0412 \u0440\u0435\u0436\u0438\u043c\u0435 \u043e\u0442\u043b\u0430\u0434\u043a\u0438 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435\n            $message = config('app.debug')\n                ? '\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430: ' . $e-&gt;getMessage()\n                : '\u041d\u0430 \u0431\u043e\u0440\u0442\u0443 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430. \u0418\u043d\u0436\u0435\u043d\u0435\u0440\u044b \u0443\u0436\u0435 \u0432\u044b\u0437\u0432\u0430\u043d\u044b.';\n\n            return response()-&gt;json(['message' =&gt; $message], 500);\n        }\n    });\n\n})-&gt;create();\n</code></pre> <p>\u0422\u0435\u043f\u0435\u0440\u044c \u043b\u044e\u0431\u043e\u0435 \"\u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e\u0435\" \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0430\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u043e \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0447\u0435\u043d\u043e \u0438 \u043f\u0440\u0435\u0432\u0440\u0430\u0449\u0435\u043d\u043e \u0432 JSON \u0441 \u043a\u043e\u0434\u043e\u043c 500, \u043d\u0435 \u043b\u043e\u043c\u0430\u044f \u0432\u0430\u0448\u0435 API \u0438 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043b\u0438\u0448\u043d\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/7/#6","title":"6. \u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0448\u0438\u0431\u043e\u043a: \u0427\u0435\u0440\u043d\u044b\u0439 \u044f\u0449\u0438\u043a \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f","text":"<p>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432 <code>config/logging.php</code>: <pre><code>&lt;?php\n'channels' =&gt; [\n    'space_api' =&gt; [\n        'driver' =&gt; 'daily',\n        'path' =&gt; storage_path('logs/space_api.log'),\n        'level' =&gt; 'error',\n        'days' =&gt; 14,\n    ],\n],\n</code></pre></p> <p>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u043b\u043e\u0433: <pre><code>&lt;?php\ntry {\n    // \u041a\u043e\u0434 \u0441 \u0440\u0438\u0441\u043a\u043e\u043c \u043e\u0448\u0438\u0431\u043a\u0438\n} catch (Exception $e) {\n    Log::channel('space_api')-&gt;error('\u041e\u0448\u0438\u0431\u043a\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u043c', [\n        'exception' =&gt; $e,\n        'request' =&gt; request()-&gt;all(),\n        'user_id' =&gt; auth()-&gt;id()\n    ]);\n    throw $e;\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/7/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. HTTP-\u0441\u0442\u0430\u0442\u0443\u0441 \u0434\u043b\u044f \"\u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430:</p>  a) 400  b) 404  c) 500 <p>2. \u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043e\u0448\u0438\u0431\u043e\u043a:</p>  a) Handler.php  b) ErrorController.php  c) Middleware/Error.php <p>3. \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0433\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f:</p>  a) php artisan make:exception  b) php artisan exception:create  c) php artisan generate:exception <p>4. \u041a\u0430\u043d\u0430\u043b \u0434\u043b\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a API:</p>  a) \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0432 config/logging.php  b) \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0432 .env  c) \u0423\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435 <p>5. \u0413\u043b\u0430\u0432\u043d\u043e\u0435 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0445 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439:</p>  a) \u041f\u043e\u0432\u044b\u0448\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438  b) \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0445 \u043e\u0448\u0438\u0431\u043e\u043a \u0434\u043b\u044f \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0438\u0437\u043d\u0435\u0441-\u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432  c) \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432 .env \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u043e\u0441\u043d\u0430\u0441\u0442\u0438\u043b\u0438 \u0441\u0432\u043e\u0435 API \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0441\u043f\u0430\u0441\u0435\u043d\u0438\u044f:</p> <ul> <li>\ud83d\udedf \u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043e\u0448\u0438\u0431\u043e\u043a</li> <li>\ud83e\ude90 \u041a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0441 \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c\u0438 \u043a\u043e\u0434\u0430\u043c\u0438</li> <li>\ud83d\udcdd \u0415\u0434\u0438\u043d\u044b\u0439 JSON-\u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043e\u0448\u0438\u0431\u043e\u043a</li> <li>\ud83d\udd0d \u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441 \u0434\u0435\u0442\u0430\u043b\u044f\u043c\u0438 \u0438\u043d\u0446\u0438\u0434\u0435\u043d\u0442\u0430</li> <li>\ud83d\udce1 \u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438 \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430</li> </ul> <p>\u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u0433\u043e\u0442\u043e\u0432 \u043a \u0430\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u043c \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044f\u043c! \u0412 \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u0439 \u0433\u043b\u0430\u0432\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0430 \u043c\u044b \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u0432\u0441\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ol> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 <code>PlanetNotFoundException</code></li> <li>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 404 \u043e\u0448\u0438\u0431\u043e\u043a \u0432 <code>-&gt;withExceptions</code></li> <li>\u041f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043a \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u0435</li> </ol> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438 \u043d\u0435 \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f:</p> <ul> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c \u0447\u0442\u043e <code>is('api/*')</code> \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0432\u0430\u0448\u0438\u043c \u0440\u043e\u0443\u0442\u0430\u043c</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u0432 <code>register()</code></li> <li>\u0414\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0445 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>throw new</code></li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/8/","title":"\u0413\u043b\u0430\u0432\u0430 2.8: \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 1 \u0447\u0430\u0441</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/8/#1","title":"1. \u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u044b \u0442\u0435\u0441\u0442\u044b?","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c. \u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0435\u0433\u043e \u043d\u0430 \u041c\u0430\u0440\u0441, \u0432\u044b \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442\u0435 \u0442\u044b\u0441\u044f\u0447\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u043a \u043d\u0430 \u0417\u0435\u043c\u043b\u0435. \u0422\u0435\u0441\u0442\u044b \u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u2014 \u044d\u0442\u043e \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435. \u041e\u043d\u0438:</p> <ul> <li>\u0414\u0430\u044e\u0442 \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u044c: \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043c\u0435\u043d\u044f\u0442\u044c \u043a\u043e\u0434, \u0438 \u0435\u0441\u043b\u0438 \u0442\u0435\u0441\u0442\u044b \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0442 \u2014 \u0437\u043d\u0430\u0447\u0438\u0442, \u0432\u044b \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0441\u043b\u043e\u043c\u0430\u043b\u0438.</li> <li>\u042d\u043a\u043e\u043d\u043e\u043c\u044f\u0442 \u0432\u0440\u0435\u043c\u044f: \u0412\u043c\u0435\u0441\u0442\u043e \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0432\u0440\u0443\u0447\u043d\u0443\u044e \"\u043f\u0440\u043e\u043a\u043b\u0438\u043a\u0438\u0432\u0430\u0442\u044c\" \u0432\u0441\u0435 \u0432 Postman \u043f\u043e\u0441\u043b\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f, \u0432\u044b \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0435 \u043e\u0434\u043d\u0443 \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u0438 \u043e\u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0432\u0441\u0435 \u0437\u0430 \u0432\u0430\u0441 \u0437\u0430 \u0441\u0435\u043a\u0443\u043d\u0434\u044b.</li> <li>\u0421\u043b\u0443\u0436\u0430\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439: \u0425\u043e\u0440\u043e\u0448\u0438\u0435 \u0442\u0435\u0441\u0442\u044b \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442, \u043a\u0430\u043a \u0434\u043e\u043b\u0436\u0435\u043d \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432\u0430\u0448 API.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/8/#2","title":"2. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u0438\u0438\"","text":"<p>Laravel \u0434\u0435\u043b\u0430\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u0442\u0435\u0441\u0442\u043e\u0432 \u043d\u0435\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0439. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u043e\u043d \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0437\u0430\u0442\u0440\u043e\u043d\u0443\u0442\u044c \u0432\u0430\u0448\u0443 \u043e\u0441\u043d\u043e\u0432\u043d\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445.</p> <p>\u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432: \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e Laravel \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043e\u043f\u0435\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438 (<code>:memory:</code>). \u042d\u0442\u043e \u0441\u0430\u043c\u044b\u0439 \u0431\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u043d\u0438\u0447\u0435\u0433\u043e \u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0430 \u0434\u0438\u0441\u043a. \u0411\u0430\u0437\u0430 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u0441\u0442\u0430\u043c\u0438 \u0438 \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u043d\u0438\u0445. \u041d\u0430\u043c \u0434\u0430\u0436\u0435 \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e!</p> <p>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430: \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0441 \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u043c\u0438.</p> <pre><code>php artisan make:test PlanetApiTest\n</code></pre> <p>\u042d\u0442\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0441\u043e\u0437\u0434\u0430\u0441\u0442 \u0444\u0430\u0439\u043b <code>tests/Feature/PlanetApiTest.php</code>. \u0421\u043b\u043e\u0432\u043e <code>Feature</code> \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0432 \u0446\u0435\u043b\u043e\u043c (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \"\u043c\u043e\u0436\u0435\u0442 \u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u0443?\"), \u0430 \u043d\u0435 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0439 \u043a\u043b\u0430\u0441\u0441.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/8/#3","title":"3. \u0410\u043d\u0430\u0442\u043e\u043c\u0438\u044f \u0442\u0435\u0441\u0442\u0430: \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430, \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435, \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430","text":"<p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>tests/Feature/PlanetApiTest.php</code>. \u0412\u043d\u0443\u0442\u0440\u0438 \u043c\u044b \u043d\u0430\u043f\u0438\u0448\u0435\u043c \u043d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442. \u0425\u043e\u0440\u043e\u0448\u0438\u0439 \u0442\u0435\u0441\u0442 \u0432\u0441\u0435\u0433\u0434\u0430 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u0442\u0440\u0435\u0445 \u0447\u0430\u0441\u0442\u0435\u0439 (Arrange, Act, Assert).</p> <p><pre><code>&lt;?php\n\nnamespace Tests\\Feature;\n\nuse App\\Models\\Planet; // \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase; // \u0412\u0430\u0436\u043d\u0435\u0439\u0448\u0438\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442!\nuse Tests\\TestCase;\n\nclass PlanetApiTest extends TestCase\n{\n    // \u042d\u0442\u043e\u0442 \u0442\u0440\u0435\u0439\u0442 \"\u0432\u043e\u043b\u0448\u0435\u0431\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c\" \u043e\u0447\u0438\u0449\u0430\u0435\u0442 \u0438 \u043f\u0435\u0440\u0435\u0441\u043e\u0437\u0434\u0430\u0435\u0442\n    // \u043d\u0430\u0448\u0443 \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u0434 \u043a\u0430\u0436\u0434\u044b\u043c \u0442\u0435\u0441\u0442\u043e\u043c.\n    // \u042d\u0442\u043e \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442, \u0447\u0442\u043e \u0442\u0435\u0441\u0442\u044b \u043d\u0435 \u0432\u043b\u0438\u044f\u044e\u0442 \u0434\u0440\u0443\u0433 \u043d\u0430 \u0434\u0440\u0443\u0433\u0430.\n    use RefreshDatabase;\n\n    /**\n     * \u0422\u0435\u0441\u0442: \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043b\u0430\u043d\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e.\n     * \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u043e\u0432 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u0441\u043c\u044b\u0441\u043b\u0435\u043d\u043d\u044b\u043c\u0438!\n     */\n    public function test_can_get_all_planets(): void\n    {\n        // 1. \u041f\u041e\u0414\u0413\u041e\u0422\u041e\u0412\u041a\u0410 (Arrange)\n        // \u0421\u043e\u0437\u0434\u0430\u0435\u043c 3 \u0444\u0435\u0439\u043a\u043e\u0432\u044b\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0432 \u043d\u0430\u0448\u0435\u0439 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445\n        // \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0430\u0431\u0440\u0438\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u0440\u0430\u043d\u0435\u0435.\n        Planet::factory()-&gt;count(3)-&gt;create();\n\n        // 2. \u0414\u0415\u0419\u0421\u0422\u0412\u0418\u0415 (Act)\n        // \u0418\u043c\u0438\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0439 GET-\u0437\u0430\u043f\u0440\u043e\u0441 \u043a \u043d\u0430\u0448\u0435\u043c\u0443 API.\n        $response = $this-&gt;getJson('/api/planets');\n\n        // 3. \u041f\u0420\u041e\u0412\u0415\u0420\u041a\u0410 (Assert)\n        // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0432\u0441\u0435 \u043f\u0440\u043e\u0448\u043b\u043e \u043a\u0430\u043a \u043d\u0430\u0434\u043e.\n        $response-&gt;assertStatus(200); // \u041e\u0436\u0438\u0434\u0430\u0435\u043c, \u0447\u0442\u043e \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u0432\u0435\u0442\u0438\u043b \"200 OK\"\n        $response-&gt;assertJsonCount(3); // \u041e\u0436\u0438\u0434\u0430\u0435\u043c, \u0447\u0442\u043e \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 \u0440\u043e\u0432\u043d\u043e 3 \u043f\u043b\u0430\u043d\u0435\u0442\u044b\n    }\n}\n</code></pre> \u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043c\u043e\u043c\u0435\u043d\u0442\u044b:</p> <ul> <li><code>use RefreshDatabase</code>: \u042d\u0442\u043e\u0442 \u0442\u0440\u0435\u0439\u0442 \u2014 \u0432\u0430\u0448 \u043b\u0443\u0447\u0448\u0438\u0439 \u0434\u0440\u0443\u0433. \u041e\u043d \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442, \u0447\u0442\u043e \u043a\u0430\u0436\u0434\u044b\u0439 \u0442\u0435\u0441\u0442 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 \"\u0447\u0438\u0441\u0442\u043e\u0433\u043e \u043b\u0438\u0441\u0442\u0430\", \u0441 \u043f\u0443\u0441\u0442\u043e\u0439 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445.</li> <li><code>Planet::factory()</code>: \u0424\u0430\u0431\u0440\u0438\u043a\u0438 \u0438\u0434\u0435\u0430\u043b\u044c\u043d\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0442 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.</li> <li><code>$this-&gt;getJson()</code>: \u042d\u0442\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 Laravel \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 API-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0441\u0442\u043e\u0432.</li> <li><code>assert...()</code>: \u042d\u0442\u043e \"\u0443\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f\" \u0438\u043b\u0438 \"\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\". \u0415\u0441\u043b\u0438 \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u043d\u0430 \u0438\u0437 \u043d\u0438\u0445 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0441\u044f, \u0442\u0435\u0441\u0442 \u043f\u0440\u043e\u0432\u0430\u043b\u0438\u0442\u0441\u044f.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/8/#4-crud","title":"4. \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 (CRUD)","text":"<p>\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u043f\u0438\u0448\u0435\u043c \u0442\u0435\u0441\u0442\u044b \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043f\u043b\u0430\u043d\u0435\u0442.</p> <p>A. \u0422\u0435\u0441\u0442 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b (POST)</p> <pre><code>&lt;?php\npublic function test_can_create_a_planet(): void\n{\n    // 1. \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430: \u0433\u043e\u0442\u043e\u0432\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b\n    $planetData = [\n        'name' =&gt; 'Kepler-186f',\n        'description' =&gt; '\u041f\u0435\u0440\u0432\u0430\u044f \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c \u0441 \u0417\u0435\u043c\u043b\u044e \u0432 \u043e\u0431\u0438\u0442\u0430\u0435\u043c\u043e\u0439 \u0437\u043e\u043d\u0435.',\n        'size_km' =&gt; 14000,\n        'solar_system' =&gt; 'Kepler-186'\n    ];\n\n    // 2. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c POST-\u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438\n    $response = $this-&gt;postJson('/api/planets', $planetData);\n\n    // 3. \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\n    $response-&gt;assertStatus(201); // \u041e\u0436\u0438\u0434\u0430\u0435\u043c \u0441\u0442\u0430\u0442\u0443\u0441 \"201 Created\"\n    $response-&gt;assertJsonFragment(['name' =&gt; 'Kepler-186f']); // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 \u0435\u0441\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0435 \u0438\u043c\u044f\n\n    // \u0421\u0430\u043c\u0430\u044f \u0432\u0430\u0436\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430: \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043f\u0430\u043b\u0438 \u0432 \u0431\u0430\u0437\u0443?\n    $this-&gt;assertDatabaseHas('planets', [\n        'name' =&gt; 'Kepler-186f'\n    ]);\n}\n</code></pre> <p>B. \u0422\u0435\u0441\u0442 \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b (DELETE) <pre><code>&lt;?php\npublic function test_can_delete_a_planet(): void\n{\n    // 1. \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430: \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u043b\u0430\u043d\u0435\u0442\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0431\u0443\u0434\u0435\u043c \u0443\u0434\u0430\u043b\u044f\u0442\u044c\n    $planet = Planet::factory()-&gt;create();\n\n    // 2. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c DELETE-\u0437\u0430\u043f\u0440\u043e\u0441\n    $response = $this-&gt;deleteJson(\"/api/planets/{$planet-&gt;id}\");\n\n    // 3. \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\n    $response-&gt;assertStatus(204); // \u041e\u0436\u0438\u0434\u0430\u0435\u043c \"204 No Content\" - \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435\n\n    // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0437\u0430\u043f\u0438\u0441\u044c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u0447\u0435\u0437\u043b\u0430 \u0438\u0437 \u0431\u0430\u0437\u044b\n    $this-&gt;assertDatabaseMissing('planets', [\n        'id' =&gt; $planet-&gt;id\n    ]);\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/8/#5","title":"5. \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \"\u043f\u043b\u043e\u0445\u0438\u0445\" \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432","text":"<p>\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u044b\u0435 \u0441\u043b\u0443\u0447\u0430\u0438 \u2014 \u044d\u0442\u043e \u0445\u043e\u0440\u043e\u0448\u043e. \u041d\u043e \u0435\u0449\u0435 \u0432\u0430\u0436\u043d\u0435\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0438!</p> <p>A. \u0422\u0435\u0441\u0442 \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0443 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 <pre><code>&lt;?php\npublic function test_creation_fails_with_invalid_data(): void\n{\n    // 2. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0437\u0430\u0432\u0435\u0434\u043e\u043c\u043e \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n    $response = $this-&gt;postJson('/api/planets', ['name' =&gt; '']); // \u041f\u0443\u0441\u0442\u043e\u0435 \u0438\u043c\u044f\n\n    // 3. \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\n    $response-&gt;assertStatus(422); // \u041e\u0436\u0438\u0434\u0430\u0435\u043c \"422 Unprocessable Entity\"\n    $response-&gt;assertJsonValidationErrors('name'); // \u041e\u0436\u0438\u0434\u0430\u0435\u043c, \u0447\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430 \u0438\u043c\u0435\u043d\u043d\u043e \u0432 \u043f\u043e\u043b\u0435 'name'\n}\n</code></pre></p> <p>B. \u0422\u0435\u0441\u0442 \u043d\u0430 \"\u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e\" (404) <pre><code>&lt;?php\npublic function test_returns_404_for_non_existent_planet(): void\n{\n    // 2. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c \u043f\u043b\u0430\u043d\u0435\u0442\u0443 \u0441 \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c ID\n    $response = $this-&gt;getJson('/api/planets/99999');\n\n    // 3. \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\n    $response-&gt;assertStatus(404); // \u041e\u0436\u0438\u0434\u0430\u0435\u043c \"404 Not Found\"\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/8/#6","title":"6. \u0417\u0430\u043f\u0443\u0441\u043a \u0442\u0435\u0441\u0442\u043e\u0432","text":"<p>\u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043e\u0433\u0434\u0430 \u0442\u0435\u0441\u0442\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u044b, \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0438\u0445 \u043e\u0447\u0435\u043d\u044c \u043f\u0440\u043e\u0441\u0442\u043e. \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435:</p> <pre><code>php artisan test\n</code></pre> <p>Laravel \u043d\u0430\u0439\u0434\u0435\u0442 \u0432\u0441\u0435 \u0432\u0430\u0448\u0438 \u0442\u0435\u0441\u0442\u044b \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442 \u0438\u0445 \u043e\u0434\u0438\u043d \u0437\u0430 \u0434\u0440\u0443\u0433\u0438\u043c. \u0415\u0441\u043b\u0438 \u0432\u0441\u0435 \u043f\u0440\u043e\u0439\u0434\u0435\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0437\u0435\u043b\u0435\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434. \u0415\u0441\u043b\u0438 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0442\u0435\u0441\u0442 \u043f\u0440\u043e\u0432\u0430\u043b\u0438\u0442\u0441\u044f, \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u043a\u0440\u0430\u0441\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434 \u0441 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043e\u0448\u0438\u0431\u043a\u0438, \u0447\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u0432\u0430\u043c \u0431\u044b\u0441\u0442\u0440\u043e \u0435\u0435 \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u0442\u044c.</p> <p>\u0427\u0442\u043e\u0431\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0444\u0430\u0439\u043b: <pre><code>php artisan test tests/Feature/PlanetApiTest.php\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/8/#8-code-coverage","title":"8. \u041f\u043e\u043a\u0440\u044b\u0442\u0438\u0435 \u043a\u043e\u0434\u0430 (Code Coverage)","text":"<p>\u0428\u0430\u0433 1: \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 Xdebug</p> <p>\u0414\u043b\u044f \u0441\u0431\u043e\u0440\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0438 \u043a\u043e\u0434\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 PHP \u2014 Xdebug.</p> <p>\u041e\u0442\u043f\u0440\u0430\u0432\u044c\u0442\u0435 \u0432 wizard \u0432\u0430\u0448 <code>php -i</code> \u0438 \u0441\u043b\u0435\u0434\u0443\u0439\u0442\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c.</p> <p>\u0428\u0430\u0433 2: \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 <code>phpunit.xml</code> <pre><code>&lt;phpunit ... &gt;\n    &lt;coverage processUncoveredFiles=\"true\"&gt;\n        &lt;include&gt;\n            &lt;directory suffix=\".php\"&gt;./app&lt;/directory&gt;\n        &lt;/include&gt;\n    &lt;/coverage&gt;\n&lt;/phpunit&gt;\n</code></pre></p> <p>\u0428\u0430\u0433 3: \u0417\u0430\u043f\u0443\u0441\u043a \u0441 \u043e\u0442\u0447\u0435\u0442\u043e\u043c <pre><code>php artisan test --coverage-html=coverage\n</code></pre> \u041e\u0442\u0447\u0435\u0442: \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>coverage/index.html</code> \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/8/#9-postman","title":"9. \u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 Postman","text":"<p>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0435\u0440\u0435\u0437 Newman:</p> <ol> <li>\u042d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e Postman \u0432 <code>tests/Postman/SpaceApi.postman_collection.json</code></li> <li>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 Newman: <pre><code>npm install -g newman\n</code></pre></li> <li>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0441\u043a\u0440\u0438\u043f\u0442 \u0432 <code>composer.json</code>: <pre><code>\"scripts\": {\n    \"test:postman\": \"newman run tests/Postman/SpaceApi.postman_collection.json\"\n}\n</code></pre></li> <li>\u0417\u0430\u043f\u0443\u0441\u043a: <pre><code>composer test:postman\n</code></pre></li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%202%20-%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5%20API%20%D0%BD%D0%B0%20Laravel/8/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430:</p>  a) php artisan make:test  b) php artisan generate:test  c) php artisan test:create <p>2. \u0422\u0440\u0435\u0439\u0442 RefreshDatabase \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f:</p>  a) \u041e\u0447\u0438\u0441\u0442\u043a\u0438 \u0411\u0414 \u043f\u043e\u0441\u043b\u0435 \u0442\u0435\u0441\u0442\u043e\u0432  b) \u041d\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0411\u0414 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438  c) \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0411\u0414 <p>3. \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 JSON-\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b:</p>  a) assertJsonFormat()  b) assertJsonStructure()  c) assertJsonSchema() <p>4. \u0424\u0430\u0431\u0440\u0438\u043a\u0438 \u0432 Laravel \u043d\u0443\u0436\u043d\u044b \u0434\u043b\u044f:</p>  a) \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445  b) \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439  c) \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043e\u0448\u0438\u0431\u043e\u043a <p>5. \u0418\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 Postman-\u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0439 \u0438\u0437 CLI:</p>  a) Newman  b) Postman CLI  c) Artisan \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u043f\u0440\u043e\u0432\u0435\u043b\u0438 \u043f\u043e\u043b\u043d\u044b\u0439 \u0446\u0438\u043a\u043b \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0435\u0442\u043d\u044b\u0445 \u0438\u0441\u043f\u044b\u0442\u0430\u043d\u0438\u0439! \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u0430\u0448 API:</p> <ul> <li>\u2705 \u041d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0441\u0440\u0435\u0434\u0443 \u0431\u0435\u0437 \u043b\u0438\u0448\u043d\u0438\u0445 \u0443\u0441\u0438\u043b\u0438\u0439</li> <li>\ud83d\udee1\ufe0f \u041f\u0438\u0441\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u044b \u043f\u043e \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0443 \"\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430-\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435-\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\".</li> <li>\ud83d\udcca \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a \u0443\u0441\u043f\u0435\u0448\u043d\u044b\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 (CRUD), \u0442\u0430\u043a \u0438 \u043e\u0448\u0438\u0431\u043a\u0438 (\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f, 404).</li> <li>\ud83d\udd01 \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u044b \u043e\u0434\u043d\u043e\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 \u0438 \u0431\u044b\u0442\u044c \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u043c \u0432 \u0441\u0432\u043e\u0435\u043c \u043a\u043e\u0434\u0435.</li> </ul> <p>\u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u043a \u0437\u0430\u043f\u0443\u0441\u043a\u0443 \u0433\u043e\u0442\u043e\u0432! \u0412\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0438 \u0440\u0430\u0437\u0434\u0435\u043b \u043f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e API \u043d\u0430 Laravel.</p> <p>\ud83d\udccc \u0424\u0438\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ol> <li>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 <code>php artisan test</code></li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u0441\u0435 \u0442\u0435\u0441\u0442\u044b \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0442 (\u0437\u0435\u043b\u0435\u043d\u044b\u0439 \u0441\u0432\u0435\u0442!)</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043e\u0442\u0447\u0435\u0442 \u043e \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0438</li> </ol> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u0442\u0435\u0441\u0442\u044b \u043f\u0430\u0434\u0430\u044e\u0442:</p> <ul> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0440\u0430\u0431\u043e\u0442\u0443 API \u0447\u0435\u0440\u0435\u0437 Postman</li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0411\u0414 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0430</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>dd($response-&gt;content())</code> \u0434\u043b\u044f \u043e\u0442\u043b\u0430\u0434\u043a\u0438</li> </ul> <p>\u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435\u043c \u0413\u043b\u0430\u0432\u044b 2! \u0412\u044b \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u043b\u0438 API, \u0432\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u044b\u0439 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0439 \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c\", \u0433\u043e\u0442\u043e\u0432\u044b\u0439 \u043a \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u043c \u043c\u0438\u0441\u0441\u0438\u044f\u043c.</p> <p>\ud83c\udf0c \u0414\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u0435 \u0448\u0430\u0433\u0438:</p> <ol> <li>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 (Sanctum)</li> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Swagger</li> <li>\u0420\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 (Forge, VPS)</li> <li>\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430 \u043d\u0430 Vue/React</li> </ol> <p>\u0423\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0432\u0430\u0448\u0435\u0439 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043c\u0438\u0441\u0441\u0438\u0438! \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 API \u0441 \u043d\u0443\u043b\u044f \ud83d\ude80</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/1/","title":"\u0413\u043b\u0430\u0432\u0430 3.1: \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 FastAPI \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 45 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/1/#1-fastapi-api","title":"1. \u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 FastAPI? \u0413\u0438\u043f\u0435\u0440\u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044c \u0434\u043b\u044f API","text":"<p>\u0415\u0441\u043b\u0438 Flask \u2014 \u044d\u0442\u043e \u043c\u0430\u043d\u0435\u0432\u0440\u0435\u043d\u043d\u044b\u0439 \u0440\u0430\u0437\u0432\u0435\u0434\u044b\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0437\u043e\u043d\u0434, \u0430 Django \u2014 \u043e\u0433\u0440\u043e\u043c\u043d\u044b\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c-\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c, \u0442\u043e FastAPI \u2014 \u044d\u0442\u043e \u0441\u0432\u0435\u0440\u0445\u0441\u0432\u0435\u0442\u043e\u0432\u043e\u0439 \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c.</p> <p>FastAPI \u2014 \u044d\u0442\u043e \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439, \u0432\u044b\u0441\u043e\u043a\u043e\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0432\u0435\u0431-\u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f API \u043d\u0430 Python 3.7+. \u0415\u0433\u043e \u0433\u043b\u0430\u0432\u043d\u044b\u0435 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430:</p> <ul> <li>\u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c: \u041e\u0434\u0438\u043d \u0438\u0437 \u0441\u0430\u043c\u044b\u0445 \u0431\u044b\u0441\u0442\u0440\u044b\u0445 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u043e\u0432 Python, \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043c\u044b\u0439 \u0441 NodeJS \u0438 Go.</li> <li>\u041f\u0440\u043e\u0441\u0442\u043e\u0442\u0430: \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u0438\u0441\u0442\u0438\u0447\u043d\u044b\u0439 \u0438 \u0438\u043d\u0442\u0443\u0438\u0442\u0438\u0432\u043d\u043e \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0439 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441.</li> <li>\u0410\u0432\u0442\u043e-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f: \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u0432\u0430\u0448\u0435\u0433\u043e API.</li> <li>\u0422\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438 \u0442\u0438\u043f\u043e\u0432 Python \u0434\u043b\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438, \u0430\u0432\u0442\u043e\u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438.</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>FastAPI \u2014 \u043a\u0430\u043a \"\u0433\u0438\u043f\u0435\u0440\u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044c\" \u0434\u043b\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f-API. \u041e\u043d \u043e\u0441\u043d\u043e\u0432\u0430\u043d \u043d\u0430 \u0434\u0432\u0443\u0445 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u0445:</p> <ul> <li>Starlette (\u0448\u0430\u0441\u0441\u0438 \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044f) \u2014 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u044c \u0438 \u0432\u044b\u0441\u043e\u0447\u0430\u0439\u0448\u0443\u044e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c.</li> <li>Pydantic (\u0431\u043e\u0440\u0442\u043e\u0432\u043e\u0439 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440) \u2014 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/1/#2","title":"2. \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0438: \u0412\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435","text":"<p>\u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043d\u0430\u0448 \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c, \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0442\u0435\u0440\u0438\u043b\u044c\u043d\u0443\u044e \u0441\u0431\u043e\u0440\u043e\u0447\u043d\u0443\u044e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u0438\u044e. \u0412 Python \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f.</p> <p>\u0417\u0430\u0447\u0435\u043c \u044d\u0442\u043e \u043d\u0443\u0436\u043d\u043e? \u0427\u0442\u043e\u0431\u044b \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 (\u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u0438, \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b) \u043d\u0435 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u043e\u0432\u0430\u043b\u0438 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430\u043c\u0438 \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435.</p> <p>\u0428\u0430\u0433 1: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435 \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b \u0432 \u043f\u0430\u043f\u043a\u0435 \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>C:\\Projects\\FastAPI_Fleet</code>) \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435:</p> <p><pre><code>python -m venv venv\n</code></pre> \u042d\u0442\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0441\u043e\u0437\u0434\u0430\u0441\u0442 \u043f\u0430\u043f\u043a\u0443 <code>venv</code> \u0441 \u0438\u0437\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0435\u0439 Python.</p> <p>\u0428\u0430\u0433 2: \u0410\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u043c \"\u0441\u0438\u043b\u043e\u0432\u043e\u0435 \u043f\u043e\u043b\u0435\" \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u0438\u0438</p> <ul> <li>Windows (PowerShell):</li> </ul> <p><pre><code>.\\venv\\Scripts\\Activate.ps1\n</code></pre> (\u0415\u0441\u043b\u0438 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0430, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432: <code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process</code>)</p> <ul> <li>Windows (CMD):</li> </ul> <pre><code>.\\venv\\Scripts\\activate.bat\n</code></pre> <ul> <li>macOS / Linux:</li> </ul> <p><pre><code>source venv/bin/activate\n</code></pre> \u041f\u043e\u0441\u043b\u0435 \u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u0438 \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0430 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f <code>(venv)</code>. \u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u0432\u044b \u0432\u043d\u0443\u0442\u0440\u0438 \u0441\u0432\u043e\u0435\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u0438\u0438!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/1/#3-fastapi-uvicorn","title":"3. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f: FastAPI \u0438 Uvicorn","text":"<p>\u0422\u0435\u043f\u0435\u0440\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c \u0434\u0432\u0430 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430:</p> <ul> <li>fastapi: \u0421\u0430\u043c \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a.</li> <li>uvicorn: \u041c\u043e\u043b\u043d\u0438\u0435\u043d\u043e\u0441\u043d\u044b\u0439 ASGI-\u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \"\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c\" \u043d\u0430\u0448 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044c.</li> </ul> <p>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0432 \u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0438: <pre><code>pip install \"fastapi[all]\"\n</code></pre></p> <p>\ud83d\udca1 \u041f\u043e\u0447\u0435\u043c\u0443 <code>[all]</code>? \u042d\u0442\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 <code>fastapi</code>, <code>uvicorn</code> \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u043f\u0430\u043a\u0435\u0442\u044b (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0432\u0435\u0431-\u0441\u043e\u043a\u0435\u0442\u043e\u0432 \u0438 Jinja2), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438\u0433\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u0431\u0443\u0434\u0443\u0449\u0438\u0445 \u043c\u0438\u0441\u0441\u0438\u044f\u0445.</p> <p>\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438: <pre><code>pip freeze\n</code></pre> \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 <code>fastapi</code>, <code>pydantic</code>, <code>starlette</code>, <code>uvicorn</code> \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/1/#4-mainpy","title":"4. \u041f\u0435\u0440\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0430\u043a\u0442: \u0424\u0430\u0439\u043b <code>main.py</code>","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0432 \u043a\u043e\u0440\u043d\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0444\u0430\u0439\u043b <code>main.py</code> \u2014 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0443\u043b\u044c\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430\u0448\u0435\u0433\u043e API.</p> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 <code>main.py</code> \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434: <pre><code>from fastapi import FastAPI\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043d\u0430\u0448\u0435\u0433\u043e \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f\" API\napp = FastAPI()\n\n# \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \"\u0441\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u0443\u0437\u0435\u043b\" (endpoint)\n# \u042d\u0442\u043e \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 URL: /\n@app.get(\"/\")\ndef read_root():\n    \"\"\"\n    \u042d\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0426\u0423\u041f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0438\u0434\u044f\u0442 \u0432\u0441\u0435,\n    \u043a\u0442\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0433\u043b\u0430\u0432\u043d\u043e\u043c\u0443 \u0448\u043b\u044e\u0437\u0443.\n    \"\"\"\n    return {\"message\": \"\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 \u0426\u0435\u043d\u0442\u0440 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0424\u043b\u043e\u0442\u043e\u043c!\"}\n</code></pre> - <code>@app.get(\"/\")</code>: \u042d\u0442\u043e \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0433\u043e\u0432\u043e\u0440\u0438\u0442 FastAPI, \u0447\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f <code>read_root</code> \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c <code>GET</code>-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 URL (<code>/</code>).</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/1/#5","title":"5. \u0417\u0430\u0436\u0438\u0433\u0430\u043d\u0438\u0435! \u0417\u0430\u043f\u0443\u0441\u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0430","text":"<p>\u041d\u0430\u0441\u0442\u0430\u043b\u043e \u0432\u0440\u0435\u043c\u044f \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043d\u0430\u0448 \u0433\u0438\u043f\u0435\u0440\u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044c! \u0412 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435 (\u0441 \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u043c <code>venv</code>) \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435: <pre><code>uvicorn main:app --reload\n</code></pre> \u0420\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u044b:</p> <ul> <li><code>uvicorn</code>: \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440 Uvicorn.</li> <li><code>main</code>: \u0424\u0430\u0439\u043b <code>main.py</code> (\u0431\u0435\u0437 <code>.py</code>).</li> <li><code>app</code>: \u041e\u0431\u044a\u0435\u043a\u0442 <code>app = FastAPI()</code>, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u0432\u043d\u0443\u0442\u0440\u0438 <code>main.py</code>.</li> <li><code>--reload</code>: \"\u0410\u0432\u0442\u043e\u043f\u0438\u043b\u043e\u0442\". \u0421\u0435\u0440\u0432\u0435\u0440 \u0431\u0443\u0434\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0438 \u043a\u0430\u0436\u0434\u043e\u043c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u0432 \u043a\u043e\u0434\u0435.</li> </ul> <p>\u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u0432\u044b\u0432\u043e\u0434 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435: <pre><code>INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [12345]\nINFO:     Started server process [12346]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/1/#6","title":"6. \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u0432\u044f\u0437\u0438 \u0441 \u0426\u0423\u041f","text":"<p>\u0412\u0430\u0448 API \u0442\u0435\u043f\u0435\u0440\u044c \u043e\u043d\u043b\u0430\u0439\u043d \u0438 \u0441\u043b\u0443\u0448\u0430\u0435\u0442 \u043f\u043e\u0440\u0442 <code>8000</code>!</p> <p>\u0428\u0430\u0433 1: \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u0430\u0434\u0440\u0435\u0441 <code>http://127.0.0.1:8000</code>. \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c: <pre><code>{\n  \"message\": \"\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 \u0426\u0435\u043d\u0442\u0440 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0424\u043b\u043e\u0442\u043e\u043c!\"\n}\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u0412\u0437\u0433\u043b\u044f\u0434 \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u0435 (\u0430\u0432\u0442\u043e-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f)</p> <p>FastAPI \u0443\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u043b \u0434\u043b\u044f \u0432\u0430\u0441 \u0434\u0432\u0430 \u043f\u043e\u0434\u0430\u0440\u043a\u0430. \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u044d\u0442\u0438 URL:</p> <ul> <li><code>http://127.0.0.1:8000/docs</code>: \u0418\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f Swagger UI.</li> <li><code>http://127.0.0.1:8000/redoc</code>: \u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f ReDoc.</li> </ul> <p>\u0412\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0432\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u044f\u043c\u043e \u0438\u0437 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/1/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. FastAPI \u0438\u0437\u0432\u0435\u0441\u0442\u0435\u043d \u0441\u0432\u043e\u0435\u0439...</p>  a) \u041c\u0435\u0434\u043b\u0435\u043d\u043d\u043e\u0439, \u043d\u043e \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u043e\u0439  b) \u0412\u044b\u0441\u043e\u043a\u043e\u0439 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u0438 \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c\u044e  c) \u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0435\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 Microsoft <p>2. \u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u043e \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435 (`venv`)?</p>  a) \u0414\u043b\u044f \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b Python  b) \u0414\u043b\u044f \u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u043f\u0440\u043e\u0435\u043a\u0442\u0430  c) \u0414\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u043e\u0432 <p>3. \u041a\u0430\u043a\u043e\u0439 \u0441\u0435\u0440\u0432\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 FastAPI \u0432 \u044d\u0442\u043e\u043c \u0443\u0440\u043e\u043a\u0435?</p>  a) Apache  b) Gunicorn  c) Uvicorn <p>4. \u041a\u043e\u043c\u0430\u043d\u0434\u0430 `uvicorn main:app --reload` \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442:</p>  a) \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0444\u0430\u0439\u043b `app.py` \u0441 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c `main`  b) \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0432 \u0444\u0430\u0439\u043b\u0435 `main.py` \u043e\u0431\u044a\u0435\u043a\u0442 `app` \u0438 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043f\u0440\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u0445  c) \u041f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440 \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 <p>5. \u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 `@app.get(\"/\")` \u0432 FastAPI \u0434\u0435\u043b\u0430\u0435\u0442 \u0447\u0442\u043e?</p>  a) \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 `app.py`  b) \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 GET-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0441\u0435\u0440\u0432\u0435\u0440  c) \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0441 GET-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u043d\u0430 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 URL \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0431\u0440\u0430\u043b\u0438 \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \"\u0433\u0438\u043f\u0435\u0440\u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044c\" \u0441\u0432\u043e\u0435\u0433\u043e \u043d\u043e\u0432\u043e\u0433\u043e API! \u0422\u0435\u043f\u0435\u0440\u044c \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c:</p> <ul> <li>\ud83d\udee0\ufe0f \u0418\u0437\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 (<code>venv</code>)</li> <li>\ud83d\ude80 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 FastAPI \u0438 \u0441\u0435\u0440\u0432\u0435\u0440 Uvicorn</li> <li>\ud83d\udef0\ufe0f \u0420\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0438\u0439 API \u0441 \u043e\u0434\u043d\u0438\u043c \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u043c</li> <li>\ud83d\udcca \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f</li> </ul> <p>\u0412\u0441\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0432 \u043d\u043e\u0440\u043c\u0435! \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u0412 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435 \u0430\u043a\u0442\u0438\u0432\u043d\u0430 \u0441\u0440\u0435\u0434\u0430 <code>(venv)</code></li> <li>\u0421\u0435\u0440\u0432\u0435\u0440 <code>uvicorn</code> \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0431\u0435\u0437 \u043e\u0448\u0438\u0431\u043e\u043a</li> <li>\u0410\u0434\u0440\u0435\u0441 <code>http://127.0.0.1:8000/docs</code> \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435</li> </ul> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438:</p> <ul> <li><code>command not found</code>: \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u044b \u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435.</li> <li><code>Port ... is already in use</code>: \u0414\u0440\u0443\u0433\u0430\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0437\u0430\u043d\u044f\u043b\u0430 \u043f\u043e\u0440\u0442 8000. \u041e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0435\u0435 \u0438\u043b\u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 uvicorn \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u043c \u043f\u043e\u0440\u0442\u0443: <code>uvicorn main:app --reload --port 8001</code>.</li> <li>\u041e\u0448\u0438\u0431\u043a\u0438 \u043f\u0440\u0438 \u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u0438 <code>venv</code> \u0432 PowerShell: \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043f\u043e\u043b\u0438\u0442\u0438\u043a\u0443 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/2/","title":"\u0413\u043b\u0430\u0432\u0430 3.2: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e API endpoint","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 30 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/2/#1-endpoint","title":"1. Endpoint: \u0421\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u043f\u043e\u0440\u0442 \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u043d\u0430\u0448 API \u2014 \u044d\u0442\u043e \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0441\u0442\u0430\u043d\u0446\u0438\u044f. Endpoint (\u043a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0442\u043e\u0447\u043a\u0430) \u2014 \u044d\u0442\u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0441\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u043f\u043e\u0440\u0442, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044b\u0439 \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439.</p> <ul> <li>\u041f\u043e\u0440\u0442 <code>\u21161</code> \u2014 \u0434\u043b\u044f \u0433\u0440\u0443\u0437\u043e\u0432\u044b\u0445 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439 (\u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u0445).</li> <li>\u041f\u043e\u0440\u0442 <code>\u21162</code> \u2014 \u0434\u043b\u044f \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u0437\u043e\u043d\u0434\u043e\u0432 (\u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043c\u0438\u0441\u0441\u0438\u044f\u0445).</li> <li>\u041f\u043e\u0440\u0442 <code>\u21163</code> \u2014 \u0434\u043b\u044f \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0445 \u0448\u0430\u0442\u0442\u043b\u043e\u0432 (\u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431 \u0430\u0441\u0442\u0440\u043e\u043d\u0430\u0432\u0442\u0430\u0445).</li> </ul> <p>\u041a\u0430\u0436\u0434\u044b\u0439 endpoint \u2014 \u044d\u0442\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 URL, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u0441 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u043c.</p> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f: <code>GET /spaceships</code> \u2014 \u044d\u0442\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \"\u0426\u0423\u041f \u2192 \u0421\u0442\u0430\u043d\u0446\u0438\u0438: \u0414\u043e\u043b\u043e\u0436\u0438\u0442\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u0440\u0438\u0441\u0442\u044b\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439\". \u042d\u0442\u043e\u0442 endpoint \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/2/#2","title":"2. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0444\u043b\u043e\u0442\u0430\"","text":"<p>\u041f\u043e\u043a\u0430 \u0443 \u043d\u0430\u0441 \u043d\u0435\u0442 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \"\u0441\u0438\u043c\u0443\u043b\u044f\u0446\u0438\u044e\" \u2014 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432 \u0432 \u0432\u0438\u0434\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044f Python.</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>main.py</code> \u0438 \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u044d\u0442\u043e\u0442 \u043a\u043e\u0434 \u043f\u0435\u0440\u0435\u0434 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u043c <code>app</code>: <pre><code># main.py\n\n# \u0428\u0430\u0433 1: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u0438\u043c\u0443\u043b\u044f\u0446\u0438\u044e \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445\ndb_spaceships = {\n    1: {\n        \"name\": \"Voyager-1\",\n        \"type\": \"\u0417\u043e\u043d\u0434\",\n        \"launch_year\": 1977,\n        \"status\": \"\u0410\u043a\u0442\u0438\u0432\u0435\u043d\"\n    },\n    2: {\n        \"name\": \"Hubble Space Telescope\",\n        \"type\": \"\u0422\u0435\u043b\u0435\u0441\u043a\u043e\u043f\",\n        \"launch_year\": 1990,\n        \"status\": \"\u0410\u043a\u0442\u0438\u0432\u0435\u043d\"\n    },\n    3: {\n        \"name\": \"ISS\",\n        \"type\": \"\u0421\u0442\u0430\u043d\u0446\u0438\u044f\",\n        \"launch_year\": 1998,\n        \"status\": \"\u041d\u0430 \u043e\u0440\u0431\u0438\u0442\u0435\"\n    }\n}\n\n# ... \u0437\u0434\u0435\u0441\u044c \u043a\u043e\u0434 app = FastAPI()\n</code></pre> \u042d\u0442\u043e \u043d\u0430\u0448 \"\u0440\u0435\u0435\u0441\u0442\u0440 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432\", \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/2/#3-endpoint","title":"3. \u041f\u0435\u0440\u0432\u044b\u0439 endpoint: \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439","text":"<p>\u0422\u0435\u043f\u0435\u0440\u044c \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c endpoint, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0432\u0435\u0441\u044c \u043d\u0430\u0448 \u0444\u043b\u043e\u0442.</p> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u044d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0432 <code>main.py</code> \u043f\u043e\u0441\u043b\u0435 <code>@app.get(\"/\")</code>: <pre><code># main.py\n\n# ... \u043a\u043e\u0434 \u0441 db_spaceships, FastAPI, app \u0438 read_root() ...\n\n@app.get(\"/spaceships\")\ndef get_spaceships():\n    \"\"\"\n    \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432 \u0432 \u0440\u0435\u0435\u0441\u0442\u0440\u0435.\n    \"\"\"\n    return db_spaceships\n</code></pre></p> <ul> <li><code>@app.get(\"/spaceships\")</code>: \u041c\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0440\u0448\u0440\u0443\u0442. \u0422\u0435\u043f\u0435\u0440\u044c <code>GET</code>-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 URL <code>/spaceships</code> \u0431\u0443\u0434\u0443\u0442 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 <code>get_spaceships</code>.</li> <li><code>return db_spaceships</code>: FastAPI \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u043b\u043e\u0432\u0430\u0440\u044c Python \u0432 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 JSON-\u043e\u0442\u0432\u0435\u0442.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/2/#4","title":"4. \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u043d\u043e\u0432\u043e\u0433\u043e \u0441\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u043e\u0433\u043e \u043f\u043e\u0440\u0442\u0430","text":"<p>\u0415\u0441\u043b\u0438 \u0432\u0430\u0448 \u0441\u0435\u0440\u0432\u0435\u0440 <code>uvicorn</code> \u0432\u0441\u0435 \u0435\u0449\u0435 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0441 \u0444\u043b\u0430\u0433\u043e\u043c <code>--reload</code>, \u043e\u043d \u0443\u0436\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u043b\u0441\u044f \u0438 \u0433\u043e\u0442\u043e\u0432 \u043a \u0440\u0430\u0431\u043e\u0442\u0435. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442 \u2014 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0435\u0433\u043e \u0441\u043d\u043e\u0432\u0430: <pre><code>uvicorn main:app --reload\n</code></pre></p> <p>\u0428\u0430\u0433 1: \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u0430\u0434\u0440\u0435\u0441 <code>http://127.0.0.1:8000/spaceships</code>. \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0430\u0448\u0438\u0445 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 JSON: <pre><code>{\n  \"1\": {\n    \"name\": \"Voyager-1\",\n    \"type\": \"\u0417\u043e\u043d\u0434\",\n    \"launch_year\": 1977,\n    \"status\": \"\u0410\u043a\u0442\u0438\u0432\u0435\u043d\"\n  },\n  \"2\": {\n    \"name\": \"Hubble Space Telescope\",\n    \"type\": \"\u0422\u0435\u043b\u0435\u0441\u043a\u043e\u043f\",\n    \"launch_year\": 1990,\n    \"status\": \"\u0410\u043a\u0442\u0438\u0432\u0435\u043d\"\n  },\n  \"3\": {\n    \"name\": \"ISS\",\n    \"type\": \"\u0421\u0442\u0430\u043d\u0446\u0438\u044f\",\n    \"launch_year\": 1998,\n    \"status\": \"\u041d\u0430 \u043e\u0440\u0431\u0438\u0442\u0435\"\n  }\n}\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432 \u0430\u0432\u0442\u043e-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438</p> <p>\u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 <code>http://127.0.0.1:8000/docs</code>. \u0412\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435, \u0447\u0442\u043e \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043f\u043e\u044f\u0432\u0438\u043b\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u0440\u0430\u0437\u0434\u0435\u043b \u0434\u043b\u044f \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430 <code>GET /spaceships</code>. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u0436\u0430\u0442\u044c \"Try it out\" \u0438 \"Execute\", \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e \u043f\u0440\u044f\u043c\u043e \u043e\u0442\u0442\u0443\u0434\u0430!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/2/#5-endpoint","title":"5. Endpoint \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c: \u0414\u0430\u043d\u043d\u044b\u0435 \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u043a\u043e\u0440\u0430\u0431\u043b\u0435","text":"<p>\u0427\u0442\u043e, \u0435\u0441\u043b\u0438 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u044b \u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043e \"\u0412\u043e\u044f\u0434\u0436\u0435\u0440\u0435-1\"? \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c endpoint \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u043f\u0443\u0442\u0438 (path parameter).</p> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u044d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0432 <code>main.py</code>: <pre><code># main.py\n\n# ... \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434 ...\n\n@app.get(\"/spaceships/{ship_id}\")\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0435 \u043f\u043e \u0435\u0433\u043e ID.\n    \"\"\"\n    return db_spaceships.get(ship_id)\n</code></pre></p> <ul> <li><code>\"/spaceships/{ship_id}\"</code>: \u0424\u0438\u0433\u0443\u0440\u043d\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438 <code>{}</code> \u0433\u043e\u0432\u043e\u0440\u044f\u0442 FastAPI, \u0447\u0442\u043e <code>ship_id</code> \u2014 \u044d\u0442\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u0430 \u0438\u0437 URL.</li> <li><code>ship_id: int</code>: \u042d\u0442\u043e \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430 \u0442\u0438\u043f\u0430 (type hint). FastAPI \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 ID \u2014 \u044d\u0442\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e. \u0415\u0441\u043b\u0438 \u043a\u0442\u043e-\u0442\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442 <code>/spaceships/voyager</code>, FastAPI \u0432\u0435\u0440\u043d\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 <code>422 Unprocessable Entity</code>. \u042d\u0442\u043e \u043c\u0430\u0433\u0438\u044f!</li> </ul> <p>\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>http://127.0.0.1:8000/spaceships/2</code>. \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043e \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f\u0435 \"\u0425\u0430\u0431\u0431\u043b\". \u0410 \u0435\u0441\u043b\u0438 \u043e\u0442\u043a\u0440\u043e\u0435\u0442\u0435 <code>http://127.0.0.1:8000/spaceships/99</code> \u2014 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 <code>null</code>, \u0442\u0430\u043a \u043a\u0430\u043a \u0442\u0430\u043a\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f \u043d\u0435\u0442.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/2/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. Endpoint \u0432 API \u2014 \u044d\u0442\u043e...</p>  a) \u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0442\u043e\u0447\u043a\u0430 \u0412\u0441\u0435\u043b\u0435\u043d\u043d\u043e\u0439  b) \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 URL \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u043c  c) \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 <p>2. \u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 `@app.get(\"/users\")` \u0434\u0435\u043b\u0430\u0435\u0442 \u0447\u0442\u043e?</p>  a) \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f  b) \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0441 GET-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u043d\u0430 `/users`  c) \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u043e\u0432 <p>3. \u0427\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c `\"/items/{item_id}\"` \u0432 \u043f\u0443\u0442\u0438?</p>  a) \u0427\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043a\u0430\u0442\u044c \u043f\u0430\u043f\u043a\u0443 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c `{item_id}`  b) \u0427\u0442\u043e `item_id` \u2014 \u044d\u0442\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u0437\u044f\u0442 \u0438\u0437 URL  c) \u042d\u0442\u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d <p>4. \u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u0430 \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430 \u0442\u0438\u043f\u0430 `ship_id: int` \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438?</p>  a) \u0427\u0442\u043e\u0431\u044b Python \u0440\u0430\u0431\u043e\u0442\u0430\u043b \u0431\u044b\u0441\u0442\u0440\u0435\u0435  b) \u0427\u0442\u043e\u0431\u044b FastAPI \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0438\u0440\u043e\u0432\u0430\u043b, \u0447\u0442\u043e ID \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u043c  c) \u0427\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0431\u044b\u043b\u0430 \u0432\u0438\u0434\u043d\u0430 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u043c\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 <p>5. \u0415\u0441\u043b\u0438 \u0432\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u0435 `/spaceships/abc`, \u0430 FastAPI \u043e\u0436\u0438\u0434\u0430\u0435\u0442 `int`, \u0447\u0442\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0434\u0435\u0442?</p>  a) \u0421\u0435\u0440\u0432\u0435\u0440 \"\u0443\u043f\u0430\u0434\u0435\u0442\" \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439 500  b) FastAPI \u0432\u0435\u0440\u043d\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 422  c) FastAPI \u043f\u043e\u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \"abc\" \u0432 \u0447\u0438\u0441\u043b\u043e \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u0434\u0432\u0430 \"\u0441\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u044b\u0445 \u043f\u043e\u0440\u0442\u0430\" \u043d\u0430 \u0432\u0430\u0448\u0435\u0439 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0442\u0430\u043d\u0446\u0438\u0438 API:</p> <ul> <li>\ud83d\udef0\ufe0f \u041e\u0434\u0438\u043d \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439 (<code>/spaceships</code>)</li> <li>\ud83d\udd2d \u0412\u0442\u043e\u0440\u043e\u0439 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0435 (<code>/spaceships/{ship_id}</code>)</li> </ul> <p>\u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u0443\u0432\u0438\u0434\u0435\u043b\u0438 \u043c\u043e\u0449\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0442\u0438\u043f\u043e\u0432 FastAPI, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0432\u0430\u0448\u0435 API \u043e\u0442 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.</p> <p>\u041d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0430! \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \"\u0447\u0435\u0440\u0442\u0435\u0436\u0438\" \u043d\u0430\u0448\u0438\u0445 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Pydantic, \u0447\u0442\u043e\u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0430\u0448\u0435 API \u0435\u0449\u0435 \u0443\u043c\u043d\u0435\u0435 \u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u0435\u0435.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u0421\u0435\u0440\u0432\u0435\u0440 <code>uvicorn</code> \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442.</li> <li>URL <code>http://127.0.0.1:8000/spaceships</code> \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 JSON \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439.</li> <li>URL <code>http://127.0.0.1:8000/spaceships/1</code> \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \"\u0412\u043e\u044f\u0434\u0436\u0435\u0440\u0435-1\".</li> <li>URL <code>http://127.0.0.1:8000/docs</code> \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0434\u0432\u0430 \u043d\u043e\u0432\u044b\u0445 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430.</li> </ul> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438:</p> <ul> <li>404 Not Found: \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043b\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d URL \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u0438 \u0432 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u0435 <code>@app.get(...)</code>.</li> <li>\u041e\u0448\u0438\u0431\u043a\u0430 \u0432 \u043a\u043e\u0434\u0435: \u0412\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u043e\u0442\u0441\u0442\u0443\u043f\u044b \u0432 Python \u0438 \u0437\u0430\u043f\u044f\u0442\u044b\u0435 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/3/","title":"\u0413\u043b\u0430\u0432\u0430 3.3: \u041c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 Pydantic","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 50 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/3/#1-pydantic","title":"1. Pydantic: \"\u0426\u0438\u0444\u0440\u043e\u0432\u043e\u0439 \u0447\u0435\u0440\u0442\u0435\u0436\" \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u0441\u0442\u0440\u043e\u0438\u0442\u0435 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c. \u0412\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u0441\u0432\u0430\u0440\u0438\u0432\u0430\u0442\u044c \u043a\u0443\u0441\u043a\u0438 \u043c\u0435\u0442\u0430\u043b\u043b\u0430 \u043d\u0430\u0443\u0433\u0430\u0434. \u0412\u0430\u043c \u043d\u0443\u0436\u0435\u043d \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0447\u0435\u0440\u0442\u0435\u0436, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442:</p> <ul> <li>\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u0440\u0430\u0431\u043b\u044f (\u0442\u0438\u043f: <code>\u0441\u0442\u0440\u043e\u043a\u0430</code>, \u043c\u0430\u043a\u0441. \u0434\u043b\u0438\u043d\u0430: 50 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432)</li> <li>\u0413\u043e\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 (\u0442\u0438\u043f: <code>\u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e</code>)</li> <li>\u041d\u0430\u043b\u0438\u0447\u0438\u0435 \u0433\u0438\u043f\u0435\u0440\u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f (\u0442\u0438\u043f: <code>\u0434\u0430/\u043d\u0435\u0442</code>)</li> </ul> <p>Pydantic \u2014 \u044d\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0442\u0430\u043a\u0438\u0435 \"\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0435 \u0447\u0435\u0440\u0442\u0435\u0436\u0438\" \u0434\u043b\u044f \u0432\u0430\u0448\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 Python. \u0412 FastAPI \u043e\u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0442\u0440\u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438:</p> <ol> <li>\u0414\u0435\u043a\u043b\u0430\u0440\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b: \u0427\u0435\u0442\u043a\u043e \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442, \u0438\u0437 \u043a\u0430\u043a\u0438\u0445 \u043f\u043e\u043b\u0435\u0439 \u0441\u043e\u0441\u0442\u043e\u044f\u0442 \u0432\u0430\u0448\u0438 \u0434\u0430\u043d\u043d\u044b\u0435.</li> <li>\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445: \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u043b\u0438 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0447\u0435\u0440\u0442\u0435\u0436\u0443.</li> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f: FastAPI \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u044d\u0442\u0438 \u0447\u0435\u0440\u0442\u0435\u0436\u0438 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438.</li> </ol> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f: \u041c\u043e\u0434\u0435\u043b\u044c Pydantic \u2014 \u044d\u0442\u043e \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u0430\u0441\u043f\u043e\u0440\u0442 \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u041b\u044e\u0431\u043e\u0439 \"\u0433\u0440\u0443\u0437\" (\u0434\u0430\u043d\u043d\u044b\u0435), \u043f\u0440\u0438\u0431\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u0441\u0442\u0430\u043d\u0446\u0438\u044e, \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0432 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0435. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442 \u2014 \u0431\u043e\u0440\u0442\u043e\u0432\u043e\u0439 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440 (Pydantic) \u0435\u0433\u043e \u043e\u0442\u043a\u043b\u043e\u043d\u0438\u0442.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/3/#2-spaceship","title":"2. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0447\u0435\u0440\u0442\u0435\u0436\u0430: \u041c\u043e\u0434\u0435\u043b\u044c <code>Spaceship</code>","text":"<p>\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u043d\u0430\u0448 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u043f\u043f\u0430\u0440\u0430\u0442.</p> <p>\u0428\u0430\u0433 1: \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c <code>BaseModel</code> \u0438\u0437 Pydantic Pydantic \u0443\u0436\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 <code>fastapi[all]</code>. \u041d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.</p> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 <code>main.py</code> \u0432 \u0441\u0430\u043c\u043e\u043c \u0432\u0435\u0440\u0445\u0443, \u0440\u044f\u0434\u043e\u043c \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u0438\u043c\u043f\u043e\u0440\u0442\u0430\u043c\u0438: <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c <code>Spaceship</code> \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 <code>BaseModel</code>. \u0412\u043d\u0443\u0442\u0440\u0438 \u043a\u043b\u0430\u0441\u0441\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435 \u043f\u043e\u043b\u044f \u0438 \u0438\u0445 \u0442\u0438\u043f\u044b, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438 \u0442\u0438\u043f\u043e\u0432 Python.</p> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u044d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0432 <code>main.py</code> (\u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u043b\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\u043e\u0432): <pre><code>class Spaceship(BaseModel):\n    \"\"\"\n    \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u0430\u0441\u043f\u043e\u0440\u0442 (\u043c\u043e\u0434\u0435\u043b\u044c) \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f.\n    \"\"\"\n    name: str\n    type: str\n    launch_year: int\n    status: str\n</code></pre> \u0412\u043e\u0442 \u0438 \u0432\u0441\u0451! \u0412\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \"\u0447\u0435\u0440\u0442\u0435\u0436\". Pydantic \u0442\u0435\u043f\u0435\u0440\u044c \u0437\u043d\u0430\u0435\u0442, \u0447\u0442\u043e \u0443 \u043b\u044e\u0431\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0442\u0438\u043f\u0430 <code>Spaceship</code> \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0447\u0435\u0442\u044b\u0440\u0435 \u043f\u043e\u043b\u044f \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/3/#3-endpoints","title":"3. \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438: \u0423\u043b\u0443\u0447\u0448\u0430\u0435\u043c \u043d\u0430\u0448\u0438 endpoints","text":"<p>\u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043d\u0430\u0448\u0443 \u043d\u043e\u0432\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c, \u0447\u0442\u043e\u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c API \"\u0443\u043c\u043d\u0435\u0435\".</p> <p>A. \u041c\u043e\u0434\u0435\u043b\u044c \u043a\u0430\u043a \u043e\u0442\u0432\u0435\u0442 (Response Model) \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u043a\u0430\u0437\u0430\u0442\u044c FastAPI, \u0447\u0442\u043e \u043d\u0430\u0448 endpoint \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 <code>Spaceship</code>. \u042d\u0442\u043e \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442, \u0447\u0442\u043e \u043e\u0442\u0432\u0435\u0442 \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443.</p> <p>\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 endpoint <code>/spaceships/{ship_id}</code> \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: <pre><code># main.py\n\n# ... \u043a\u043e\u0434 \u0441 db_spaceships \u0438 \u043c\u043e\u0434\u0435\u043b\u044c\u044e Spaceship ...\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c `response_model` \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \"\u0447\u0435\u0440\u0442\u0435\u0436\u0430\" \u043e\u0442\u0432\u0435\u0442\u0430\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043a\u043e\u0440\u0430\u0431\u043b\u0435, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 Spaceship.\n    \"\"\"\n    ship = db_spaceships.get(ship_id)\n    return ship\n</code></pre> - <code>response_model=Spaceship</code>: \u041c\u044b \u0433\u043e\u0432\u043e\u0440\u0438\u043c FastAPI: \"\u041e\u0442\u0432\u0435\u0442 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435 <code>Spaceship</code>. \u041e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0439 \u0432\u0441\u0435 \u043b\u0438\u0448\u043d\u0438\u0435 \u043f\u043e\u043b\u044f \u0438 \u0443\u0431\u0435\u0434\u0438\u0441\u044c, \u0447\u0442\u043e \u0442\u0438\u043f\u044b \u0432\u0435\u0440\u043d\u044b\".</p> <p>\u0427\u0442\u043e \u044d\u0442\u043e \u0434\u0430\u0435\u0442?</p> <ul> <li>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445: \u0415\u0441\u043b\u0438 \u0431\u044b \u0432 <code>db_spaceships</code> \u0431\u044b\u043b\u0438 \u043b\u0438\u0448\u043d\u0438\u0435 \u043f\u043e\u043b\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>\"secret_code\"</code>), \u043e\u043d\u0438 \u0431\u044b \u043d\u0435 \u043f\u043e\u043f\u0430\u043b\u0438 \u0432 \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 JSON.</li> <li>\u0413\u0430\u0440\u0430\u043d\u0442\u0438\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b: \u041a\u043b\u0438\u0435\u043d\u0442 API \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0432\u0435\u0440\u0435\u043d, \u0447\u0442\u043e \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442 \u043e\u0442\u0432\u0435\u0442 \u0432 \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435.</li> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f: \u0412 <code>/docs</code> \u0442\u0435\u043f\u0435\u0440\u044c \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u0442\u043e\u0447\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043e\u0442\u0432\u0435\u0442\u0430 (Example Value).</li> </ul> <p>B. \u041c\u043e\u0434\u0435\u043b\u0438 \u0434\u043b\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0439 \u0410 \u0447\u0442\u043e \u0441 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u043c <code>/spaceships</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439? \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c <code>list</code> \u0438\u0437 \u043c\u043e\u0434\u0443\u043b\u044f <code>typing</code>.</p> <p>\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\u044b \u0438 endpoint <code>/spaceships</code>: <pre><code># main.py \u0432\u0432\u0435\u0440\u0445\u0443\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom typing import List  # &lt;-- \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c List\n\n# ... \u043a\u043e\u0434 ...\n\n# \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c, \u0447\u0442\u043e \u043e\u0442\u0432\u0435\u0442 - \u044d\u0442\u043e \u0441\u043f\u0438\u0441\u043e\u043a (List) \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0442\u0438\u043f\u0430 Spaceship\n@app.get(\"/spaceships\", response_model=List[Spaceship])\ndef get_spaceships():\n    \"\"\"\n    \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439. \u041a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0441\u043f\u0438\u0441\u043a\u0430\n    \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u043f\u043e \u043c\u043e\u0434\u0435\u043b\u0438 Spaceship.\n    \"\"\"\n    # Pydantic \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u043c, \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f ID.\n    # \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u043d\u0430\u0448 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0432 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a.\n    return list(db_spaceships.values())\n</code></pre></p> <ul> <li><code>response_model=List[Spaceship]</code>: \u041c\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c, \u0447\u0442\u043e \u043e\u0442\u0432\u0435\u0442\u043e\u043c \u0431\u0443\u0434\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a, \u0433\u0434\u0435 \u043a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u2014 \u044d\u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 <code>Spaceship</code>.</li> <li><code>return list(db_spaceships.values())</code>: \u0412\u0430\u0436\u043d\u043e\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435! Pydantic \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0438\u0442\u0435\u0440\u0438\u0440\u0443\u0435\u043c\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 (\u0441\u043f\u0438\u0441\u043e\u043a), \u0430 \u043d\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0433\u0434\u0435 \u043a\u043b\u044e\u0447\u0438 \u2014 \u044d\u0442\u043e ID. \u041c\u044b \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0448\u0435\u0433\u043e \"\u0441\u0438\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u0430 \u0411\u0414\" \u0432 \u0441\u043f\u0438\u0441\u043e\u043a.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/3/#4-api","title":"4. \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u043d\u043e\u0433\u043e API","text":"<p>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0441\u0435\u0440\u0432\u0435\u0440 <code>uvicorn</code> \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0441 <code>--reload</code>.</p> <ol> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 <code>http://127.0.0.1:8000/spaceships</code>: \u0422\u0435\u043f\u0435\u0440\u044c \u043e\u0442\u0432\u0435\u0442 \u2014 \u044d\u0442\u043e JSON-\u043c\u0430\u0441\u0441\u0438\u0432, \u0430 \u043d\u0435 \u043e\u0431\u044a\u0435\u043a\u0442. \u042d\u0442\u043e \u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u0438 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0434\u043b\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0439.     <pre><code>[\n  { \"name\": \"Voyager-1\", \"type\": \"\u0417\u043e\u043d\u0434\", ... },\n  { \"name\": \"Hubble Space Telescope\", ... }\n]\n</code></pre></li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 <code>http://127.0.0.1:8000/spaceships/1</code>: \u041e\u0442\u0432\u0435\u0442 \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u0441\u044f, \u043d\u043e \u0442\u0435\u043f\u0435\u0440\u044c \u043e\u043d \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u0438.</li> <li>\u0417\u0430\u0433\u043b\u044f\u043d\u0438\u0442\u0435 \u0432 <code>/docs</code>: \u0412 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \"Schemas\" \u0432\u043d\u0438\u0437\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u043f\u043e\u044f\u0432\u0438\u043b\u0430\u0441\u044c \u0432\u0430\u0448\u0430 \u043c\u043e\u0434\u0435\u043b\u044c <code>Spaceship</code>. \u0410 \u0432 \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u0434\u043b\u044f \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432 \u0442\u0435\u043f\u0435\u0440\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043a\u0440\u0430\u0441\u0438\u0432\u0430\u044f, \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441\u0445\u0435\u043c\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.</li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/3/#5","title":"5. \u041f\u0440\u043e\u0434\u0432\u0438\u043d\u0443\u0442\u0430\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f: \"\u0411\u043e\u0440\u0442\u043e\u0432\u043e\u0439 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\" \u0432 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438","text":"<p>Pydantic \u043c\u043e\u0436\u0435\u0442 \u0434\u0435\u043b\u0430\u0442\u044c \u0433\u043e\u0440\u0430\u0437\u0434\u043e \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0442\u0438\u043f\u044b.</p> <p>\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e \u0432 \u043d\u0430\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c <code>Spaceship</code>: <pre><code>from pydantic import BaseModel, Field\n\nclass Spaceship(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50, description=\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u0440\u0430\u0431\u043b\u044f\")\n    type: str\n    launch_year: int = Field(..., gt=1950, description=\"\u0413\u043e\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u043e\u0441\u043b\u0435 1950\")\n    status: str\n</code></pre></p> <ul> <li><code>Field(...)</code>: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0430\u0432\u0438\u043b \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438.</li> <li><code>...</code> (Ellipsis): \u041e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u043e\u043b\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c.</li> <li><code>min_length</code>, <code>max_length</code>: \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438.</li> <li><code>gt</code>: \"Greater Than\" (\u0431\u043e\u043b\u044c\u0448\u0435 \u0447\u0435\u043c).</li> </ul> <p>\u0425\u043e\u0442\u044f \u043c\u044b \u0435\u0449\u0435 \u043d\u0435 \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043a\u043e\u0440\u0430\u0431\u043b\u0438 (\u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435), \u044d\u0442\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0443\u0436\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u0440\u0430\u0436\u0435\u043d\u044b \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0438 \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c <code>POST</code>-\u0437\u0430\u043f\u0440\u043e\u0441\u044b.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/3/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. Pydantic \u0432 FastAPI \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f...</p>  a) \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 email-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439  b) \u0414\u0435\u043a\u043b\u0430\u0440\u0430\u0446\u0438\u0438, \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u0430\u043d\u043d\u044b\u0445  c) \u041f\u0440\u044f\u043c\u043e\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0431\u0430\u0437\u0430\u043c \u0434\u0430\u043d\u043d\u044b\u0445 <p>2. \u0427\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445, \u043d\u0443\u0436\u043d\u043e \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441 \u043e\u0442...</p>  a) `FastAPI`  b) `pydantic.Field`  c) `pydantic.BaseModel` <p>3. \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 `response_model` \u0432 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u0435 `@app.get` \u043d\u0443\u0436\u0435\u043d \u0447\u0442\u043e\u0431\u044b...</p>  a) \u0417\u0430\u0434\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430  b) \u0423\u043a\u0430\u0437\u0430\u0442\u044c, \u043a\u0430\u043a\u043e\u0439 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442 API  c) \u0423\u0441\u043a\u043e\u0440\u0438\u0442\u044c \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 <p>4. \u041a\u0430\u043a \u0443\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e endpoint \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 *\u0441\u043f\u0438\u0441\u043e\u043a* \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0442\u0438\u043f\u0430 `Item`?</p>  a) `response_model=Item[]`  b) `response_model=List[Item]` (\u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0432 `List` \u0438\u0437 `typing`)  c) `response_model=(Item)` <p>5. `Field(..., gt=0)` \u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Pydantic \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u043e\u043b\u0435...</p>  a) \u041d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0438 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e 0  b) \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0438 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 0  c) \u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0435 \u0438 \u0438\u043c\u0435\u0435\u0442 \u0442\u0438\u043f `float` \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0441\u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \"\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0435 \u0447\u0435\u0440\u0442\u0435\u0436\u0438\" \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u0430\u0448\u0435\u0433\u043e API. \u0422\u0435\u043f\u0435\u0440\u044c \u043e\u043d\u043e \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0443\u0435\u043c\u043e \u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u043e.</p> <ul> <li>\ud83d\udcdd \u0421\u043e\u0437\u0434\u0430\u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u044c <code>Spaceship</code> \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Pydantic.</li> <li>\ud83d\udee1\ufe0f API \u0442\u0435\u043f\u0435\u0440\u044c \u0432\u0430\u043b\u0438\u0434\u0438\u0440\u0443\u0435\u0442 \u0438 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442 \u0438\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e <code>response_model</code>.</li> <li>\ud83d\udcca \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0441\u0442\u0430\u043b\u0430 \u0432 \u0440\u0430\u0437\u044b \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u0435\u0435, \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044f \u0442\u043e\u0447\u043d\u044b\u0435 \u0441\u0445\u0435\u043c\u044b \u0434\u0430\u043d\u043d\u044b\u0445.</li> </ul> <p>\u0427\u0435\u0440\u0442\u0435\u0436\u0438 \u0433\u043e\u0442\u043e\u0432\u044b \u0438 \u0443\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u044b! \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0439\u0434\u0435\u043c \u043e\u0442 \u0447\u0442\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043a \u0438\u0445 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e \u2014 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u044b\u0435 CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043d\u0430\u0448\u0435\u0433\u043e \u0444\u043b\u043e\u0442\u0430.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432 <code>/docs</code> \u043f\u043e\u044f\u0432\u0438\u043b\u0430\u0441\u044c \u0441\u0445\u0435\u043c\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 <code>Spaceship</code>.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 <code>/spaceships</code> \u0442\u0435\u043f\u0435\u0440\u044c \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 JSON-\u043c\u0430\u0441\u0441\u0438\u0432 (<code>[...]</code>), \u0430 \u043d\u0435 \u043e\u0431\u044a\u0435\u043a\u0442 (<code>{...}</code>).</li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432 \u043a\u043e\u0434\u0435 \u043d\u0435\u0442 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043e\u0448\u0438\u0431\u043e\u043a \u043f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439.</li> </ul> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438:</p> <ul> <li><code>NameError: name 'BaseModel' is not defined</code>: \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 <code>BaseModel</code> \u0438\u0437 <code>pydantic</code>.</li> <li><code>NameError: name 'List' is not defined</code>: \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 <code>List</code> \u0438\u0437 <code>typing</code>.</li> <li>\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 <code>/spaceships</code> \u043f\u0443\u0441\u0442\u043e\u0439 (<code>[]</code>): \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u0438 <code>return db_spaceships</code> \u043d\u0430 <code>return list(db_spaceships.values())</code>.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/4/","title":"\u0413\u043b\u0430\u0432\u0430 3.4: CRUD \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 1 \u0447\u0430\u0441</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/4/#1-crud","title":"1. CRUD: \u041f\u043e\u043b\u043d\u044b\u0439 \u0446\u0438\u043a\u043b \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043c\u0438\u0441\u0441\u0438\u0435\u0439","text":"<p>\u0414\u043e \u0441\u0438\u0445 \u043f\u043e\u0440 \u043c\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0442\u0430\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 (<code>Read</code>). \u041d\u043e \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0426\u0435\u043d\u0442\u0440 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u041f\u043e\u043b\u0435\u0442\u0430\u043c\u0438 \u0434\u043e\u043b\u0436\u0435\u043d \u0443\u043c\u0435\u0442\u044c \u0432\u0441\u0451:</p> <ul> <li>Create (\u0421\u043e\u0437\u0434\u0430\u0442\u044c): \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0441\u043f\u0443\u0442\u043d\u0438\u043a \u043d\u0430 \u043e\u0440\u0431\u0438\u0442\u0443.</li> <li>Read (\u041f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c): \u0417\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430.</li> <li>Update (\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c): \u0421\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0440\u0431\u0438\u0442\u0443 \u0438\u043b\u0438 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u041f\u041e.</li> <li>Delete (\u0423\u0434\u0430\u043b\u0438\u0442\u044c): \u0421\u0432\u0435\u0441\u0442\u0438 \u0441 \u043e\u0440\u0431\u0438\u0442\u044b \u0441\u0442\u0430\u0440\u044b\u0439 \u0441\u043f\u0443\u0442\u043d\u0438\u043a.</li> </ul> <p>\u042d\u0442\u0438 \u0447\u0435\u0442\u044b\u0440\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u2014 CRUD \u2014 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u043e\u0441\u043d\u043e\u0432\u0443 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0430 API. \u0412 \u044d\u0442\u043e\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u043f\u043e\u043b\u043d\u044b\u0439 \u0446\u0438\u043a\u043b \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430\u0448\u0438\u043c \u0444\u043b\u043e\u0442\u043e\u043c.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/4/#2-create-post","title":"2. Create: \u0417\u0430\u043f\u0443\u0441\u043a \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f (POST)","text":"<p>\u0427\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u043f\u043f\u0430\u0440\u0430\u0442, \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 <code>POST</code>. \u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f \u0431\u0443\u0434\u0443\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0442\u0435\u043b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 JSON.</p> <p>\u0428\u0430\u0433 1: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u0443\u044e Pydantic-\u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u041f\u043e\u0447\u0435\u043c\u0443 \u043d\u0443\u0436\u043d\u0430 \u043d\u043e\u0432\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c? \u041f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043a\u043e\u0440\u0430\u0431\u043b\u044f \u043c\u044b \u043d\u0435 \u0437\u043d\u0430\u0435\u043c \u0435\u0433\u043e <code>id</code> \u2014 \u0435\u0433\u043e \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440.</p> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u044d\u0442\u0443 \u043c\u043e\u0434\u0435\u043b\u044c \u0432 <code>main.py</code>: <pre><code># main.py\nfrom pydantic import BaseModel, Field\n\nclass SpaceshipCreate(BaseModel):\n    \"\"\"\u041c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f (\u0431\u0435\u0437 ID).\"\"\"\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n</code></pre> \u042d\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e\u0447\u0442\u0438 \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u0430 <code>Spaceship</code>, \u043d\u043e \u043e\u043d\u0430 \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.</p> <p>\u0428\u0430\u0433 2: \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c endpoint <code>POST /spaceships</code> <pre><code># main.py\nimport random # \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u044d\u0442\u043e\u0442 \u0438\u043c\u043f\u043e\u0440\u0442 \u0432\u0432\u0435\u0440\u0445\u0443 \u0444\u0430\u0439\u043b\u0430\n\n# ... \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434 ...\n\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201)\ndef create_spaceship(ship: SpaceshipCreate):\n    \"\"\"\n    \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u043f\u043f\u0430\u0440\u0430\u0442 \u0432 \u0440\u0435\u0435\u0441\u0442\u0440.\n    \"\"\"\n    # \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 ID \u0434\u043b\u044f \u043a\u043e\u0440\u0430\u0431\u043b\u044f\n    new_id = max(db_spaceships.keys() or [0]) + 1\n\n    # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043e\u0440\u0430\u0431\u043b\u044f, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043f\u043e\u043b\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 Spaceship\n    new_ship = Spaceship(id=new_id, **ship.dict())\n\n    # \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0432 \u043d\u0430\u0448\u0435\u0439 \"\u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445\"\n    db_spaceships[new_id] = new_ship.dict()\n\n    return new_ship\n</code></pre> \u0420\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0430:</p> <ul> <li><code>@app.post(...)</code>: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u0434\u043b\u044f <code>POST</code>-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.</li> <li><code>status_code=201</code>: \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c, \u0447\u0442\u043e \u043f\u0440\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u043c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u0443\u0436\u043d\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 <code>201 Created</code>.</li> <li><code>ship: SpaceshipCreate</code>: \u0412\u043e\u0442 \u043e\u043d\u0430, \u043c\u0430\u0433\u0438\u044f! FastAPI \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u043e\u0437\u044c\u043c\u0435\u0442 \u0442\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (JSON), \u043f\u0440\u043e\u0432\u0430\u043b\u0438\u0434\u0438\u0440\u0443\u0435\u0442 \u0435\u0433\u043e \u043f\u043e \u043c\u043e\u0434\u0435\u043b\u0438 <code>SpaceshipCreate</code> \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0441\u0442 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043a\u0430\u043a \u043e\u0431\u044a\u0435\u043a\u0442 <code>ship</code>.</li> <li><code>new_id = ...</code>: \u041f\u0440\u043e\u0441\u0442\u0430\u044f \u043b\u043e\u0433\u0438\u043a\u0430 \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e ID.</li> <li><code>**ship.dict()</code>: \u041c\u044b \"\u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u043c\" \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043f\u0440\u0438\u043d\u044f\u0442\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 <code>ship</code> \u0432 \u043d\u0430\u0448\u0443 \u043f\u043e\u043b\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c.</li> <li><code>response_model=Spaceship</code>: \u041e\u0442\u0432\u0435\u0442 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438, \u0432\u043a\u043b\u044e\u0447\u0430\u044f <code>id</code>.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/4/#3-update-put","title":"3. Update: \u041a\u043e\u0440\u0440\u0435\u043a\u0446\u0438\u044f \u043a\u0443\u0440\u0441\u0430 (PUT)","text":"<p>\u0414\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434 <code>PUT</code>.</p> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c endpoint <code>PUT /spaceships/{ship_id}</code>: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\n\n# ... \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434 ...\n\n@app.put(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef update_spaceship(ship_id: int, ship_update: SpaceshipCreate):\n    \"\"\"\n    \u041f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0435.\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"\u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u043f\u043f\u0430\u0440\u0430\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\")\n\n    updated_ship = Spaceship(id=ship_id, **ship_update.dict())\n    db_spaceships[ship_id] = updated_ship.dict()\n\n    return updated_ship\n</code></pre></p> <ul> <li><code>ship_update: SpaceshipCreate</code>: \u041c\u044b \u0441\u043d\u043e\u0432\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043d\u0430\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.</li> <li><code>HTTPException</code>: \u0415\u0441\u043b\u0438 \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u0441 \u0442\u0430\u043a\u0438\u043c <code>id</code> \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d, \u043c\u044b \"\u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u043c\" \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 FastAPI, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u0442\u0441\u044f \u0432 \u043a\u0440\u0430\u0441\u0438\u0432\u044b\u0439 JSON-\u043e\u0442\u0432\u0435\u0442 \u0441 \u043a\u043e\u0434\u043e\u043c <code>404</code>.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/4/#4-delete-delete","title":"4. Delete: \u0421\u0445\u043e\u0434 \u0441 \u043e\u0440\u0431\u0438\u0442\u044b (DELETE)","text":"<p>\u0414\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434 <code>DELETE</code>. \u041e\u0431\u044b\u0447\u043d\u043e \u0442\u0430\u043a\u043e\u0439 endpoint \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043b\u043e \u043e\u0442\u0432\u0435\u0442\u0430.</p> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c endpoint <code>DELETE /spaceships/{ship_id}</code>: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException, Response, status # \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\n\n# ... \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434 ...\n\n@app.delete(\"/spaceships/{ship_id}\", status_code=status.HTTP_204_NO_CONTENT)\ndef delete_spaceship(ship_id: int):\n    \"\"\"\n    \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u043f\u043f\u0430\u0440\u0430\u0442 \u0438\u0437 \u0440\u0435\u0435\u0441\u0442\u0440\u0430.\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"\u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u043f\u043f\u0430\u0440\u0430\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\")\n\n    del db_spaceships[ship_id]\n\n    # \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u043f\u0443\u0441\u0442\u043e\u0439 \u043e\u0442\u0432\u0435\u0442 \u0441\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c 204\n    return Response(status_code=status.HTTP_204_NO_CONTENT)\n</code></pre></p> <ul> <li><code>status_code=status.HTTP_204_NO_CONTENT</code>: \u041c\u044b \u044f\u0432\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u0442\u0430\u0442\u0443\u0441 <code>204 No Content</code>.</li> <li><code>del db_spaceships[ship_id]</code>: \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437 \u043d\u0430\u0448\u0435\u0433\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u044f.</li> <li><code>return Response(...)</code>: \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u043f\u0443\u0441\u0442\u043e\u0439 \u043e\u0442\u0432\u0435\u0442, \u0442\u0430\u043a \u043a\u0430\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u043d\u0435 \u043d\u0443\u0436\u043d\u044b \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431 \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u043e\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0435.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/4/#5-docs","title":"5. \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u0446\u0438\u043a\u043b\u0430 \u0432 <code>/docs</code>","text":"<p>\u0412\u0430\u0448 <code>uvicorn</code> \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u043b \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c\u0441\u044f.</p> <ol> <li>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>http://127.0.0.1:8000/docs</code>. \u0422\u0435\u043f\u0435\u0440\u044c \u0443 \u0432\u0430\u0441 \u043f\u043e\u043b\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439!</li> <li>POST: \u0420\u0430\u0441\u043a\u0440\u043e\u0439\u0442\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 <code>POST /spaceships</code>, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \"Try it out\", \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u0435 JSON-\u0442\u0435\u043b\u043e (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \"James Webb Telescope\") \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \"Execute\". \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0442\u0432\u0435\u0442 <code>201</code> \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f\u0430.</li> <li>GET: \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 <code>GET /spaceships</code>. \u0412 \u0441\u043f\u0438\u0441\u043a\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u0432\u0430\u0448 \u043d\u043e\u0432\u044b\u0439 \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f.</li> <li>PUT: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 ID \u043d\u043e\u0432\u043e\u0433\u043e \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f\u0430, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u0447\u0435\u0440\u0435\u0437 <code>PUT /spaceships/{ship_id}</code>. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0435\u0433\u043e \u0441\u0442\u0430\u0442\u0443\u0441.</li> <li>DELETE: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0442\u043e\u0442 \u0436\u0435 ID, \u0447\u0442\u043e\u0431\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f \u0447\u0435\u0440\u0435\u0437 <code>DELETE /spaceships/{ship_id}</code>. \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0443\u0441\u0442\u043e\u0439 \u043e\u0442\u0432\u0435\u0442 \u0441\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c <code>204</code>.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430: \u0421\u043d\u043e\u0432\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 <code>GET /spaceships</code>, \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0442\u0435\u043b\u0435\u0441\u043a\u043e\u043f \u0443\u0434\u0430\u043b\u0435\u043d \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430.</li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/4/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u041a\u0430\u043a\u043e\u0439 HTTP-\u043c\u0435\u0442\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u0430?</p>  a) GET  b) PUT  c) POST <p>2. \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0443\u0441\u043f\u0435\u0448\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 `DELETE`:</p>  a) 200 OK  b) 204 No Content  c) 404 Not Found <p>3. \u041a\u0430\u043a FastAPI \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0442\u0435\u043b\u0430 POST-\u0437\u0430\u043f\u0440\u043e\u0441\u0430?</p>  a) \u0427\u0435\u0440\u0435\u0437 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `$_POST`  b) \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438, \u0435\u0441\u043b\u0438 \u0432 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u0430 Pydantic-\u043c\u043e\u0434\u0435\u043b\u044c  c) \u041d\u0443\u0436\u043d\u043e \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u0447\u0438\u0442\u0430\u0442\u044c \u043f\u043e\u0442\u043e\u043a `request.body` <p>4. `raise HTTPException(status_code=404)` \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f:</p>  a) \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0430\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043e\u0448\u0438\u0431\u043a\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (500)  b) \u0412\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0433\u043e HTTP-\u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439 \u043a\u043b\u0438\u0435\u043d\u0442\u0443  c) \u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0438 \u0432 \u0444\u0430\u0439\u043b <p>5. \u041f\u043e\u0447\u0435\u043c\u0443 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u0430 (`POST`) \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c `SpaceshipCreate`?</p>  a) \u041f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0443 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0435\u0449\u0435 \u043d\u0435\u0442 `id`  b) \u041f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e FastAPI \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0430\u0437\u043d\u044b\u0435 \u0438\u043c\u0435\u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430  c) \u0414\u043b\u044f \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043b\u0438 \u043f\u043e\u043b\u043d\u044b\u0439 CRUD-\u0446\u0438\u043a\u043b \u0438 \u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u043b\u0438 \u0432\u0430\u0448\u0435 API \u0438\u0437 \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \"\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0442\u0430\u0431\u043b\u043e\" \u0432 \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u044b\u0439 \u0426\u0435\u043d\u0442\u0440 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0424\u043b\u043e\u0442\u043e\u043c!</p> <ul> <li>\u2705 Create: <code>POST /spaceships</code> \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043d\u043e\u0432\u044b\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432.</li> <li>\u2705 Read: <code>GET /spaceships</code> \u0438 <code>GET /spaceships/{id}</code> \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445.</li> <li>\u2705 Update: <code>PUT /spaceships/{id}</code> \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043c\u0438\u0441\u0441\u0438\u0439.</li> <li>\u2705 Delete: <code>DELETE /spaceships/{id}</code> \u0434\u043b\u044f \u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432.</li> </ul> <p>\u0412\u0430\u0448 \u0444\u043b\u043e\u0442 \u043f\u043e\u0434 \u043f\u043e\u043b\u043d\u044b\u043c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0435\u043c! \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0443\u0432\u0438\u0434\u0438\u043c, \u043a\u0430\u043a FastAPI \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0437\u0434\u0430\u043b \u0434\u043b\u044f \u043d\u0430\u0441 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \"\u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043f\u043e \u044d\u043a\u0441\u043f\u043b\u0443\u0430\u0442\u0430\u0446\u0438\u0438\" \u2014 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e Swagger.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u0412\u0441\u0435 5 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432 (<code>GET</code> (2), <code>POST</code>, <code>PUT</code>, <code>DELETE</code>) \u0432\u0438\u0434\u043d\u044b \u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u0432 <code>/docs</code>.</li> <li>\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c, \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c, \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0440\u0435\u0441\u0443\u0440\u0441.</li> <li>\u041f\u0440\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e ID \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u0430 <code>404</code>.</li> </ul> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438:</p> <ul> <li><code>NameError</code>: \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 <code>HTTPException</code>, <code>Response</code>, <code>status</code>.</li> <li><code>KeyError</code>: \u0412\u0435\u0440\u043e\u044f\u0442\u043d\u043e, \u0432\u044b \u043f\u044b\u0442\u0430\u0435\u0442\u0435\u0441\u044c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a ID, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u0436\u0435 \u0443\u0434\u0430\u043b\u0435\u043d.</li> <li>\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 <code>PUT</code> \u0438\u043b\u0438 <code>POST</code>: \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e Pydantic-\u043c\u043e\u0434\u0435\u043b\u044c \u0432 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 (<code>SpaceshipCreate</code>).</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/5/","title":"\u0413\u043b\u0430\u0432\u0430 3.5: \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f Swagger","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 30 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/5/#1-api","title":"1. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API: \u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043f\u043e \u044d\u043a\u0441\u043f\u043b\u0443\u0430\u0442\u0430\u0446\u0438\u0438 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0442\u0430\u043d\u0446\u0438\u0438","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u043d\u043e\u0432\u044b\u0439 \u0430\u0441\u0442\u0440\u043e\u043d\u0430\u0432\u0442, \u043f\u0440\u0438\u0431\u044b\u0432\u0448\u0438\u0439 \u043d\u0430 \u041c\u041a\u0421. \u041a\u0430\u043a \u0432\u0430\u043c \u0443\u0437\u043d\u0430\u0442\u044c, \u043a\u0430\u043a\u043e\u0439 \u0442\u0443\u043c\u0431\u043b\u0435\u0440 \u0437\u0430 \u0447\u0442\u043e \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0438 \u043a\u0430\u043a \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0440\u043e\u0431\u043e\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0440\u0443\u043a\u043e\u0439? \u0412\u0430\u043c \u043d\u0443\u0436\u043d\u0430 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0430\u044f \u0438 \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f.</p> <p>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API \u2014 \u044d\u0442\u043e \u0442\u0430\u043a\u0430\u044f \u0436\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432. \u041e\u043d\u0430 \u043e\u0431\u044a\u044f\u0441\u043d\u044f\u0435\u0442:</p> <ul> <li>\u041a\u0430\u043a\u0438\u0435 \"\u0441\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u043f\u043e\u0440\u0442\u044b\" (endpoints) \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b.</li> <li>\u041a\u0430\u043a\u0438\u0435 \"\u043a\u043e\u043c\u0430\u043d\u0434\u044b\" (HTTP-\u043c\u0435\u0442\u043e\u0434\u044b) \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c.</li> <li>\u041a\u0430\u043a\u043e\u0439 \"\u0433\u0440\u0443\u0437\" (\u0434\u0430\u043d\u043d\u044b\u0435) \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c.</li> <li>\u041a\u0430\u043a\u0443\u044e \"\u0442\u0435\u043b\u0435\u043c\u0435\u0442\u0440\u0438\u044e\" (\u043e\u0442\u0432\u0435\u0442\u044b) \u043e\u0436\u0438\u0434\u0430\u0442\u044c.</li> </ul> <p>\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0440\u0443\u0447\u043d\u043e\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u2014 \u044d\u0442\u043e \u0434\u043e\u043b\u0433\u043e, \u0441\u043a\u0443\u0447\u043d\u043e \u0438 \u043e\u043d\u0430 \u043f\u043e\u0447\u0442\u0438 \u0432\u0441\u0435\u0433\u0434\u0430 \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0430\u0435\u0442.</p> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>\u0420\u0443\u0447\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u2014 \u044d\u0442\u043e \u0431\u0443\u043c\u0430\u0436\u043d\u044b\u0435 \u0447\u0435\u0440\u0442\u0435\u0436\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043b\u0435\u0436\u0430\u0442 \u0432 \u0430\u0440\u0445\u0438\u0432\u0435 \u0438 \u043d\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u043c\u043e\u0434\u0435\u0440\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u0442\u0430\u043d\u0446\u0438\u0438. \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f FastAPI \u2014 \u044d\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0434\u0438\u0441\u043f\u043b\u0435\u0439 \u0432 \u0426\u0423\u041f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e\u0441\u043b\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0442\u0430\u043d\u0446\u0438\u0438.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/5/#2-fastapi","title":"2. \u041c\u0430\u0433\u0438\u044f FastAPI: \u041a\u0430\u043a \u044d\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442?","text":"<p>FastAPI \u0434\u0435\u043b\u0430\u0435\u0442 \u0432\u0441\u044e \"\u0433\u0440\u044f\u0437\u043d\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443\" \u0437\u0430 \u0432\u0430\u0441, \u043e\u0441\u043d\u043e\u0432\u044b\u0432\u0430\u044f\u0441\u044c \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u0436\u0435 \u043a\u043e\u0434\u0435. \u041e\u043d \u0441\u043a\u0430\u043d\u0438\u0440\u0443\u0435\u0442:</p> <ol> <li>\u041c\u0430\u0440\u0448\u0440\u0443\u0442\u044b: \u0412\u0441\u0435 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u044b <code>@app.get</code>, <code>@app.post</code> \u0438 \u0442.\u0434.</li> <li>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b: \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u0443\u0442\u0438 (<code>ship_id: int</code>) \u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.</li> <li>\u041c\u043e\u0434\u0435\u043b\u0438 Pydantic: \u0412\u0430\u0448\u0438 \"\u0447\u0435\u0440\u0442\u0435\u0436\u0438\" (<code>Spaceship</code>, <code>SpaceshipCreate</code>).</li> <li>\u0421\u0442\u0440\u043e\u043a\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 (docstrings): \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u043f\u0438\u0448\u0435\u0442\u0435 \u0432 \u0442\u0440\u043e\u0439\u043d\u044b\u0445 \u043a\u0430\u0432\u044b\u0447\u043a\u0430\u0445.</li> </ol> <p>\u041d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u044d\u0442\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 FastAPI \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u0445\u0435\u043c\u0443 \u043f\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0443 OpenAPI (\u0440\u0430\u043d\u0435\u0435 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u043a\u0430\u043a Swagger), \u0430 \u0437\u0430\u0442\u0435\u043c \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0435\u0435 \u0447\u0435\u0440\u0435\u0437 \u0434\u0432\u0430 \u043a\u0440\u0430\u0441\u0438\u0432\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/5/#3-swagger-ui","title":"3. \u0418\u0441\u0441\u043b\u0435\u0434\u0443\u0435\u043c \"\u0434\u0438\u0441\u043f\u043b\u0435\u0439 \u0426\u0423\u041f\": Swagger UI","text":"<p>Swagger UI \u2014 \u044d\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0442\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043d\u043e \u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c API \u043f\u0440\u044f\u043c\u043e \u0438\u0437 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430.</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>http://127.0.0.1:8000/docs</code></p> <p>\u0412\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435:</p> <ul> <li>\u0421\u043f\u0438\u0441\u043e\u043a \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432: \u0421\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0442\u0435\u0433\u0430\u043c (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0440\u0435\u0441\u0443\u0440\u0441\u0430) \u0438 \u043e\u043a\u0440\u0430\u0448\u0435\u043d\u043d\u044b\u0435 \u0432 \u0446\u0432\u0435\u0442\u0430 HTTP-\u043c\u0435\u0442\u043e\u0434\u043e\u0432.</li> <li>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u044f: \u0422\u0435\u043a\u0441\u0442\u044b \u0438\u0437 \u0432\u0430\u0448\u0438\u0445 docstrings (<code>\"\"\"...\"\"\"</code>) \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043a\u0430\u043a \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432.</li> <li>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b: \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043a\u0430\u043a\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b (\u043a\u0430\u043a <code>ship_id</code>) \u043e\u0436\u0438\u0434\u0430\u0435\u0442 endpoint, \u0438\u0445 \u0442\u0438\u043f \u0438 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c.</li> <li>\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (Request Body): \u0414\u043b\u044f <code>POST</code> \u0438 <code>PUT</code> \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 JSON-\u0441\u0445\u0435\u043c\u0443, \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0438\u0437 \u0432\u0430\u0448\u0435\u0439 Pydantic-\u043c\u043e\u0434\u0435\u043b\u0438 (<code>SpaceshipCreate</code>).</li> <li>\u041e\u0442\u0432\u0435\u0442\u044b (Responses): \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0443\u0441-\u043a\u043e\u0434\u044b \u0438 \u0441\u0445\u0435\u043c\u044b \u043e\u0442\u0432\u0435\u0442\u043e\u0432, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 <code>response_model</code>.</li> <li>\u041a\u043d\u043e\u043f\u043a\u0430 \"Try it out\": \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u0430\u0448 \u0441\u0435\u0440\u0432\u0435\u0440.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/5/#4","title":"4. \u0423\u043b\u0443\u0447\u0448\u0430\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e: \u0422\u0435\u0433\u0438 \u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f","text":"<p>\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u043d\u0430\u0448\u0443 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0435\u0449\u0435 \u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0439.</p> <p>\u0428\u0430\u0433 1: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u0432 <code>FastAPI</code> \u041f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 <code>app</code> \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u043e\u0431\u0449\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0430\u0448\u0435\u043c API.</p> <p>\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0441\u0442\u0440\u043e\u043a\u0443 <code>app = FastAPI()</code> \u0432 <code>main.py</code>: <pre><code># main.py\n\napp = FastAPI(\n    title=\"Fleet Management API\",\n    description=\"API \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0444\u043b\u043e\u0442\u043e\u043c \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432.\",\n    version=\"1.0.0\",\n)\n</code></pre> \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u0432\u0435\u0440\u0445\u0443 \u0432\u0430\u0448\u0435\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043f\u043e\u044f\u0432\u044f\u0442\u0441\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435.</p> <p>\u0428\u0430\u0433 2: \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u0443\u0435\u043c \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0442\u0435\u0433\u043e\u0432 \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0442\u0435\u0433\u0438 \u043a \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0443, \u0447\u0442\u043e\u0431\u044b \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0445 \u043f\u043e \u0441\u043c\u044b\u0441\u043b\u0443.</p> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 <code>tags</code> \u0432 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u044b: <pre><code># GET /spaceships\n@app.get(\"/spaceships\", response_model=List[Spaceship], tags=[\"\u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u044b\"])\n# ...\n\n# GET /spaceships/{ship_id}\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"\u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u044b\"])\n# ...\n\n# POST /spaceships\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201, tags=[\"\u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u044b\"])\n# ...\n\n# \u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435 \u0434\u043b\u044f PUT \u0438 DELETE\n</code></pre> \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u0441\u0435 \u0432\u0430\u0448\u0438 CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0431\u0443\u0434\u0443\u0442 \u0430\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u043e \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043f\u043e\u0434 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u043c \"\u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u044b\".</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/5/#5-redoc","title":"5. \u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0432\u0438\u0434: ReDoc","text":"<p>FastAPI \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0449\u0435 \u043e\u0434\u0438\u043d \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \"\u0438\u0437 \u043a\u043e\u0440\u043e\u0431\u043a\u0438\" \u2014 ReDoc. \u041e\u043d \u043c\u0435\u043d\u0435\u0435 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439, \u043d\u043e \u0447\u0430\u0441\u0442\u043e \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u0435\u0435 \u0447\u0438\u0442\u0430\u0435\u043c\u044b\u043c \u0438 \u043e\u0442\u043b\u0438\u0447\u043d\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0441\u0442\u0430\u0442\u0438\u0447\u043d\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438.</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>http://127.0.0.1:8000/redoc</code></p> <p>\u0412\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0442\u0440\u0435\u0445\u043a\u043e\u043b\u043e\u043d\u043e\u0447\u043d\u044b\u0439 \u043c\u0430\u043a\u0435\u0442 \u0441 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0435\u0439, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f\u043c\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432 \u0438 \u0441\u0445\u0435\u043c\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445. \u042d\u0442\u043e \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0432\u0430\u0448\u0438\u043c \"\u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c\" (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u043e\u043c\u0430\u043d\u0434\u0435 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430).</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/5/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. FastAPI \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435...</p>  a) \u041e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 `.html` \u0444\u0430\u0439\u043b\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0432\u0440\u0443\u0447\u043d\u0443\u044e  b) \u0412\u0430\u0448\u0435\u0433\u043e Python-\u043a\u043e\u0434\u0430: \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432, \u043c\u043e\u0434\u0435\u043b\u0435\u0439 Pydantic \u0438 docstrings  c) \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0438\u0445\u0441\u044f \u0441 `#` <p>2. \u041a\u0430\u043a\u043e\u0439 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442 \u043b\u0435\u0436\u0438\u0442 \u0432 \u043e\u0441\u043d\u043e\u0432\u0435 \u0430\u0432\u0442\u043e-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 FastAPI?</p>  a) GraphQL  b) XML-RPC  c) OpenAPI (Swagger) <p>3. \u041f\u043e \u043a\u0430\u043a\u043e\u043c\u0443 URL \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f Swagger UI?</p>  a) `/admin`  b) `/docs`  c) `/api/help` <p>4. \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 `tags` \u0432 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u0435 `@app.get` \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f:</p>  a) \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u0430-\u0442\u0435\u0433\u043e\u0432 \u0432 HTML  b) \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438  c) \u041f\u043e\u043c\u0435\u0442\u043a\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430 \u043a\u0430\u043a \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0433\u043e <p>5. ReDoc \u2014 \u044d\u0442\u043e...</p>  a) \u0418\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u0434\u0430 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435  b) \u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0439, \u0431\u043e\u043b\u0435\u0435 \u0441\u0442\u0430\u0442\u0438\u0447\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 API  c) \u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f \"\u043a\u0440\u0430\u0441\u043d\u043e\u0433\u043e\" (\u043d\u0435\u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0435\u0433\u043e) \u043a\u043e\u0434\u0430 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0443\u0432\u0438\u0434\u0435\u043b\u0438 \u043e\u0434\u043d\u0443 \u0438\u0437 \u0441\u0430\u043c\u044b\u0445 \u043c\u043e\u0449\u043d\u044b\u0445 \"\u0441\u0443\u043f\u0435\u0440\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0435\u0439\" FastAPI \u2014 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0431\u0435\u0437 \u043a\u0430\u043a\u0438\u0445-\u043b\u0438\u0431\u043e \u0443\u0441\u0438\u043b\u0438\u0439.</p> <ul> <li>\ud83d\udcd6 \u0412\u0430\u0448\u0435 API \u0442\u0435\u043f\u0435\u0440\u044c \u0438\u043c\u0435\u0435\u0442 \u0434\u0432\u0430 \u0432\u0438\u0434\u0430 \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438: Swagger UI \u0438 ReDoc.</li> <li>\ud83d\udd2c \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u0430 \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c API \u043d\u0430 \u043b\u0435\u0442\u0443.</li> <li>\ud83c\udff7\ufe0f \u0412\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0443\u043b\u0443\u0447\u0448\u0430\u0442\u044c \u0435\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0442\u0435\u0433\u043e\u0432.</li> </ul> <p>\u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043f\u043e \u044d\u043a\u0441\u043f\u043b\u0443\u0430\u0442\u0430\u0446\u0438\u0438 \u0433\u043e\u0442\u043e\u0432\u0430 \u0438 \u0432\u0441\u0435\u0433\u0434\u0430 \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u0430! \u0412 \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u0439 \u0433\u043b\u0430\u0432\u0435 \u044d\u0442\u043e\u0433\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0430 \u043c\u044b \u043d\u0430\u0443\u0447\u0438\u043c\u0441\u044f \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0430\u043d\u043e\u043c\u0430\u043b\u0438\u0438\" \u2014 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>http://127.0.0.1:8000/docs</code> \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0438 \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0442\u0435\u0433\u0430\u043c \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \"Schemas\" \u0432\u0438\u0434\u043d\u0430 \u0432\u0430\u0448\u0430 \u043c\u043e\u0434\u0435\u043b\u044c <code>Spaceship</code>.</li> <li>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>http://127.0.0.1:8000/redoc</code> \u0438 \u043e\u0446\u0435\u043d\u0438\u0442\u0435 \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0432\u0438\u0434.</li> </ul> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043d\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f:</p> <ul> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u043b\u0438 \u0444\u0430\u0439\u043b <code>main.py</code>.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0441\u0435\u0440\u0432\u0435\u0440 <code>uvicorn</code> \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0441 \u0444\u043b\u0430\u0433\u043e\u043c <code>--reload</code> \u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u043b\u0441\u044f.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/6/","title":"\u0413\u043b\u0430\u0432\u0430 3.6: \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 50 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/6/#1","title":"1. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a: \"\u0410\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u0435 \u0449\u0438\u0442\u044b\" \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f","text":"<p>\u0414\u0430\u0436\u0435 \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e\u043c \u043a\u043e\u0440\u0430\u0431\u043b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0441\u043b\u0443\u0447\u0438\u0442\u044c\u0441\u044f \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u044b\u0435 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u0438:</p> <ul> <li>\u041d\u0435\u0432\u0435\u0440\u043d\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u043e\u0442 \u0426\u0423\u041f: \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.</li> <li>\u041f\u043e\u0442\u0435\u0440\u044f \u0441\u0432\u044f\u0437\u0438 \u0441 \u043c\u043e\u0434\u0443\u043b\u0435\u043c: \u0420\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.</li> <li>\u0421\u0431\u043e\u0439 \u0432 \u0440\u0435\u0430\u043a\u0442\u043e\u0440\u0435: \u0412\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u044f\u044f \u043e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.</li> </ul> <p>\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u2014 \u044d\u0442\u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \"\u0430\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u0445 \u0449\u0438\u0442\u043e\u0432\". \u041e\u043d\u0430 \u043d\u0435 \u0434\u0430\u0435\u0442 \u043a\u043e\u0440\u0430\u0431\u043b\u044e \u0440\u0430\u0437\u0432\u0430\u043b\u0438\u0442\u044c\u0441\u044f, \u0430 \u0432\u043c\u0435\u0441\u0442\u043e \u044d\u0442\u043e\u0433\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0432 \u0426\u0423\u041f \u0447\u0435\u0442\u043a\u0438\u0439 \u0441\u0438\u0433\u043d\u0430\u043b \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a.</p> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>\u0412\u043c\u0435\u0441\u0442\u043e \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0432 \u0426\u0423\u041f \u0441\u0438\u0433\u043d\u0430\u043b \"\u0410\u0412\u0410\u0420\u0418\u042f!\", \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u0431\u043e\u0440\u0442\u043e\u0432\u043e\u0439 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043e\u0442\u0447\u0435\u0442: <pre><code>{\n  \"error_code\": \"ENGINE_OVERHEAT\",\n  \"message\": \"\u0422\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0430 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u21162 \u043f\u0440\u0435\u0432\u044b\u0441\u0438\u043b\u0430 \u043d\u043e\u0440\u043c\u0443\",\n  \"suggested_action\": \"\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043e\u0445\u043b\u0430\u0436\u0434\u0435\u043d\u0438\u044f\"\n}\n</code></pre> \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u043d\u0436\u0435\u043d\u0435\u0440\u0430\u043c \u043d\u0430 \u0417\u0435\u043c\u043b\u0435 \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u043e\u043d\u044f\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443 \u0438 \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u043c\u0435\u0440\u044b.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/6/#2-pydantic","title":"2. \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f Pydantic: \u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \"\u0431\u043e\u0440\u0442\u043e\u0432\u043e\u0439 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\"","text":"<p>\u041c\u044b \u0443\u0436\u0435 \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043c\u0430\u0433\u0438\u0435\u0439 Pydantic. \u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u043e\u043f\u044b\u0442\u0430\u0435\u0442\u0435\u0441\u044c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u0441 \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u043c \u0442\u0438\u043f\u043e\u043c \u0434\u0430\u043d\u043d\u044b\u0445 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>launch_year</code> \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438), FastAPI \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u0435\u0440\u043d\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 <code>422 Unprocessable Entity</code> \u0441 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c, \u043a\u0430\u043a\u043e\u0435 \u043f\u043e\u043b\u0435 \u0438 \u043f\u043e\u0447\u0435\u043c\u0443 \u043d\u0435 \u043f\u0440\u043e\u0448\u043b\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043a <code>POST /spaceships</code>: <pre><code>{\n  \"name\": \"X-Wing\",\n  \"type\": \"\u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c\",\n  \"launch_year\": \"\u0434\u0430\u0432\u043d\u043e\",  // &lt;-- \u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0442\u0438\u043f!\n  \"status\": \"\u0412 \u0441\u0442\u0440\u043e\u044e\"\n}\n</code></pre></p> <p>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043e\u0442\u0432\u0435\u0442 FastAPI: <pre><code>{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"body\",\n        \"launch_year\"\n      ],\n      \"msg\": \"value is not a valid integer\",\n      \"type\": \"type_error.integer\"\n    }\n  ]\n}\n</code></pre> \u042d\u0442\u043e \u043d\u0435\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u043c\u043e\u0449\u043d\u043e! \u0412\u0430\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u0434 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0442\u0438\u043f\u043e\u0432 \u2014 FastAPI \u0438 Pydantic \u0434\u0435\u043b\u0430\u044e\u0442 \u044d\u0442\u043e \u0437\u0430 \u0432\u0430\u0441.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/6/#3-httpexception","title":"3. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \"\u0420\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\": \u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 <code>HTTPException</code>","text":"<p>\u041c\u044b \u0443\u0436\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 \u044d\u0442\u043e \u0432 CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u0445. <code>HTTPException</code> \u2014 \u044d\u0442\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 FastAPI \u043f\u0440\u0435\u0440\u0432\u0430\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u043e\u0442\u0432\u0435\u0442 \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439.</p> <p>\u0412\u0441\u043f\u043e\u043c\u043d\u0438\u043c \u043a\u043e\u0434 \u0438\u0437 <code>GET /spaceships/{ship_id}</code>: <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e HTTPException \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\n\n# ...\n\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"\u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u044b\"])\ndef get_spaceship(ship_id: int):\n    ship = db_spaceships.get(ship_id)\n    if not ship:\n        # \u0415\u0441\u043b\u0438 \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d, \"\u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u043c\" \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 404\n        raise HTTPException(status_code=404, detail=f\"\u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u043f\u043f\u0430\u0440\u0430\u0442 \u0441 ID {ship_id} \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\")\n    return ship\n</code></pre></p> <ul> <li><code>raise HTTPException(...)</code>: \u042d\u0442\u043e\u0442 \u0432\u044b\u0437\u043e\u0432 \u043e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.</li> <li><code>status_code=404</code>: \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 HTTP-\u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u0442\u0432\u0435\u0442\u0430.</li> <li><code>detail</code>: \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0432 \u0442\u0435\u043b\u0435 JSON-\u043e\u0442\u0432\u0435\u0442\u0430.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/6/#4","title":"4. \u041a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440\u044b: \"\u041e\u0441\u043e\u0431\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\" \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c","text":"<p>\u0427\u0442\u043e, \u0435\u0441\u043b\u0438 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0432\u043e\u044e, \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0436\u043d\u0443\u044e \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0443? \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0437\u0430\u043f\u0440\u0435\u0442\u0438\u0442\u044c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043a\u043e\u0440\u0430\u0431\u043b\u0438 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \"Death Star\".</p> <p>\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432 Pydantic \u0435\u0441\u0442\u044c \u043c\u043e\u0449\u043d\u044b\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u2014 \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440\u044b.</p> <p>\u0428\u0430\u0433 1: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440 \u0432 \u043c\u043e\u0434\u0435\u043b\u044c <code>SpaceshipCreate</code> <pre><code># main.py\nfrom pydantic import BaseModel, Field, validator\n\nclass SpaceshipCreate(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n\n    @validator('name')\n    def name_must_not_be_forbidden(cls, v):\n        \"\"\"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0442\u043e \u0438\u043c\u044f \u043a\u043e\u0440\u0430\u0431\u043b\u044f \u043d\u0435 \u0432\u0445\u043e\u0434\u0438\u0442 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043d\u044b\u0445.\"\"\"\n        if 'Death Star' in v:\n            raise ValueError('\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0432\u0440\u043e\u0434\u0435 \"Death Star\" \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u044b \u0418\u043c\u043f\u0435\u0440\u0441\u043a\u0438\u043c \u0443\u043a\u0430\u0437\u043e\u043c!')\n        return v.title() # \u0417\u0430\u043e\u0434\u043d\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u043c \u0438\u043c\u044f \u043a \u0437\u0430\u0433\u043b\u0430\u0432\u043d\u044b\u043c \u0431\u0443\u043a\u0432\u0430\u043c\n</code></pre></p> <ul> <li><code>@validator('name')</code>: \u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \"\u043f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442\" \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043a \u043f\u043e\u043b\u044e <code>name</code>.</li> <li><code>cls, v</code>: \u041c\u0435\u0442\u043e\u0434 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0430\u043c \u043a\u043b\u0430\u0441\u0441 (<code>cls</code>) \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044f (<code>v</code>).</li> <li><code>raise ValueError(...)</code>: \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0435 \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u0430, \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Python. FastAPI \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0438\u0442 \u0435\u0433\u043e \u0438 \u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u0442 \u0432 \u043a\u0440\u0430\u0441\u0438\u0432\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 <code>422</code>.</li> <li><code>return v.title()</code>: \u0415\u0441\u043b\u0438 \u0432\u0441\u0435 \u0445\u043e\u0440\u043e\u0448\u043e, \u043c\u044b \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u0434\u0430\u0436\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0435\u0433\u043e \u043d\u0430 \u043b\u0435\u0442\u0443 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u043c\u0443 \u0432\u0438\u0434\u0443).</li> </ul> <p>\u0428\u0430\u0433 2: \u0422\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 <code>uvicorn</code> \u0438 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u0441 \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u0447\u0435\u0440\u0435\u0437 <code>/docs</code>. \u0412\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0443 <code>422</code> \u0441 \u0432\u0430\u0448\u0438\u043c \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043c!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/6/#5","title":"5. \u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a: \"\u0410\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u0439 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\" \u0441\u0442\u0430\u043d\u0446\u0438\u0438","text":"<p>\u0418\u043d\u043e\u0433\u0434\u0430 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0435\u043e\u0436\u0438\u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0441\u0431\u043e\u0439 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0439 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445) \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0435\u0434\u0438\u043d\u044b\u0439, \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430.</p> <p>\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 <code>@app.exception_handler</code>.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440: \u041f\u0435\u0440\u0435\u0445\u0432\u0430\u0442 \u0432\u0441\u0435\u0445 \u043e\u0448\u0438\u0431\u043e\u043a <code>ValueError</code> <pre><code># main.py\nfrom fastapi import FastAPI, Request\nfrom fastapi.responses import JSONResponse\n\n# ...\n\n@app.exception_handler(ValueError)\nasync def value_error_exception_handler(request: Request, exc: ValueError):\n    \"\"\"\n    \u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043e\u0448\u0438\u0431\u043e\u043a ValueError,\n    \u0447\u0442\u043e\u0431\u044b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 JSON.\n    \"\"\"\n    return JSONResponse(\n        status_code=400,\n        content={\"message\": f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445: {str(exc)}\"},\n    )\n</code></pre></p> <ul> <li><code>@app.exception_handler(ValueError)</code>: \u0413\u043e\u0432\u043e\u0440\u0438\u0442 FastAPI, \u0447\u0442\u043e \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0432\u0441\u0435 <code>ValueError</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0431\u044b\u043b\u0438 \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0447\u0435\u043d\u044b \u0440\u0430\u043d\u0435\u0435.</li> <li><code>async def ...</code>: \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u043c\u0438 (<code>async</code>).</li> <li><code>JSONResponse</code>: \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u043b\u043e \u0438 \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u0442\u0432\u0435\u0442\u0430.</li> </ul> <p>\u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043e\u0433\u0434\u0430 \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043d\u0430\u0448 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0439 \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440, \u043e\u0442\u0432\u0435\u0442 \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u0434\u0440\u0443\u0436\u0435\u043b\u044e\u0431\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043b\u0438.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%203%20-%20API%20%D0%BD%D0%B0%20Python%20FastAPI/6/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u0415\u0441\u043b\u0438 \u043a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 (\u0441\u0442\u0440\u043e\u043a\u0443 \u0432\u043c\u0435\u0441\u0442\u043e \u0447\u0438\u0441\u043b\u0430), FastAPI \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u0435\u0440\u043d\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441...</p>  a) 500 Internal Server Error  b) 404 Not Found  c) 422 Unprocessable Entity <p>2. `raise HTTPException(status_code=404)` \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e\u0431\u044b...</p>  a) \u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u0432\u0441\u0435\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430  b) \u041f\u0440\u0435\u0440\u0432\u0430\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u043e\u0448\u0438\u0431\u043a\u0443 404  c) \u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0443 \u0432 \u043b\u043e\u0433, \u043d\u043e \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 <p>3. \u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 `@validator('field_name')` \u0432 Pydantic \u043d\u0443\u0436\u0435\u043d \u0434\u043b\u044f:</p>  a) \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0439 \u043b\u043e\u0433\u0438\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044f  b) \u0423\u043a\u0430\u0437\u0430\u043d\u0438\u044f, \u0447\u0442\u043e \u043f\u043e\u043b\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c  c) \u0428\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f <p>4. \u0427\u0442\u043e \u0434\u043e\u043b\u0436\u043d\u0430 \u0434\u0435\u043b\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044f-\u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440 \u0432 Pydantic, \u0435\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b?</p>  a) \u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c (None)  b) \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u043e\u0435)  c) \u0412\u0435\u0440\u043d\u0443\u0442\u044c `True` <p>5. `@app.exception_handler()` \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442...</p>  a) \u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u0442\u0438\u043f\u044b \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439  b) \u041f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e \u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c \u0434\u043b\u044f \u043d\u0438\u0445 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442  c) \u0418\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438 \u0432\u0441\u0435\u0433\u0434\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 200 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0438 \u043d\u0430 \u0441\u0432\u043e\u0439 API-\u043a\u043e\u0440\u0430\u0431\u043b\u044c \u043c\u043e\u0449\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0437\u0430\u0449\u0438\u0442\u044b \u0438 \u0430\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u0435 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u044b. \u0422\u0435\u043f\u0435\u0440\u044c \u043e\u043d \u0443\u043c\u0435\u0435\u0442:</p> <ul> <li>\ud83d\udee1\ufe0f \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0442\u0440\u0430\u0436\u0430\u0442\u044c \u0430\u0442\u0430\u043a\u0438 \"\u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\" \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Pydantic.</li> <li>\ud83d\udea8 \u0413\u0440\u0430\u043c\u043e\u0442\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0430\u0442\u044c \u043e\u0431 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 (<code>404 Not Found</code>) \u0447\u0435\u0440\u0435\u0437 <code>HTTPException</code>.</li> <li>\u2699\ufe0f \u041f\u0440\u043e\u0432\u043e\u0434\u0438\u0442\u044c \"\u043e\u0441\u043e\u0431\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\" \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0445 \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440\u043e\u0432.</li> <li>\ud83e\uddef \u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u044b\u0435 \u0441\u0431\u043e\u0438 \u0438 \u0434\u0430\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u0432\u0435\u0442\u044b.</li> </ul> <p>\u0412\u0430\u0448 \"\u0433\u0438\u043f\u0435\u0440\u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044c\" \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u044b\u0441\u0442\u0440, \u043d\u043e \u0438 \u043d\u0435\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u043d\u0430\u0434\u0435\u0436\u0435\u043d!</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \"Death Star\" \u0438 \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0443 <code>400</code> \u0441 \u0432\u0430\u0448\u0438\u043c \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043c.</li> <li>\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c <code>GET /spaceships/999</code> \u0438 \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0443 <code>404</code>.</li> <li>\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c <code>POST</code>-\u0437\u0430\u043f\u0440\u043e\u0441 \u0441 <code>launch_year</code> \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0443 <code>422</code>.</li> </ul> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438:</p> <ul> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 (<code>HTTPException</code>, <code>validator</code>, <code>Request</code>, <code>JSONResponse</code>) \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u044b <code>@validator</code> \u0438 <code>@app.exception_handler</code> \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0431\u0435\u0437 \u043e\u043f\u0435\u0447\u0430\u0442\u043e\u043a.</li> </ul> <p>\u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435\u043c \u0413\u043b\u0430\u0432\u044b 3! \u0412\u044b \u0441 \u043d\u0443\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u043c\u043e\u0449\u043d\u043e\u0435, \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0438 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u043e\u0435 API \u043d\u0430 FastAPI. \u0412\u044b \u0433\u043e\u0442\u043e\u0432\u044b \u043a \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044e \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0445 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u0438\u0441\u0441\u0438\u0439</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/1/","title":"\u0413\u043b\u0430\u0432\u0430 4.1: \u041e\u0441\u043d\u043e\u0432\u044b Fetch API","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 45 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/1/#1-fetch-api","title":"1. Fetch API: \"\u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0430\u043d\u0442\u0435\u043d\u043d\u0430\" \u0426\u0423\u041f","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432 \u0432\u0430\u0448\u0435\u043c \u0426\u0435\u043d\u0442\u0440\u0435 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u041f\u043e\u043b\u0435\u0442\u0430\u043c\u0438 \u0435\u0441\u0442\u044c \u043e\u0433\u0440\u043e\u043c\u043d\u0430\u044f \u0440\u0430\u0434\u0438\u043e\u0430\u043d\u0442\u0435\u043d\u043d\u0430 \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u0438 \u0441 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430\u043c\u0438. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0435\u0435 \u043d\u0430 \u043d\u0443\u0436\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u043e\u0442\u0443, \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0438 \u0434\u043e\u0436\u0434\u0430\u0442\u044c\u0441\u044f \u043e\u0442\u0432\u0435\u0442\u0430.</p> <p>Fetch API \u2014 \u044d\u0442\u043e \u0442\u0430\u043a\u0430\u044f \u0436\u0435 \"\u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0430\u043d\u0442\u0435\u043d\u043d\u0430\" \u0432 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430\u0445. \u042d\u0442\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 JavaScript \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c. \u041e\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442:</p> <ul> <li>\ud83d\udce1 \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \"\u043a\u043e\u043c\u0430\u043d\u0434\u044b\" (GET, POST, PUT, DELETE) \u043d\u0430\u0448\u0435\u043c\u0443 API.</li> <li>\ud83d\udef0\ufe0f \u041f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \"\u0442\u0435\u043b\u0435\u043c\u0435\u0442\u0440\u0438\u044e\" (JSON-\u0434\u0430\u043d\u043d\u044b\u0435) \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.</li> <li>\u2699\ufe0f \u0420\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e, \u043d\u0435 \"\u0437\u0430\u043c\u043e\u0440\u0430\u0436\u0438\u0432\u0430\u044f\" \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u0438 \u043e\u0442\u0432\u0435\u0442\u0430.</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p><code>fetch()</code> \u2014 \u044d\u0442\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \"\u0410\u043d\u0442\u0435\u043d\u043d\u0430, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0432\u044f\u0437\u044c!\". \u0412\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0435 \u0435\u0439:</p> <ul> <li>\u041a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0446\u0435\u043b\u0438 (URL \u043d\u0430\u0448\u0435\u0433\u043e API).</li> <li>\u0422\u0438\u043f \u043a\u043e\u043c\u0430\u043d\u0434\u044b (\u043c\u0435\u0442\u043e\u0434: GET, POST).</li> <li>\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b (\u0442\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438).</li> </ul> <p>\u0412 \u043e\u0442\u0432\u0435\u0442 \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435 \u043d\u0435 \u0441\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0435, \u0430 \u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435 (Promise), \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0434\u0443\u0442.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/1/#2","title":"2. \u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u044c: \u0421\u0432\u044f\u0437\u044c \u043d\u0430 \u0441\u0432\u0435\u0442\u043e\u0432\u044b\u0445 \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044f\u0445","text":"<p>\u0421\u0432\u044f\u0437\u044c \u0441 \u0434\u0430\u043b\u0435\u043a\u0438\u043c \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u043c \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f. \u0412\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0441\u044e \u0440\u0430\u0431\u043e\u0442\u0443 \u0426\u0423\u041f \u0438 \u0436\u0434\u0430\u0442\u044c, \u043f\u043e\u043a\u0430 \u043f\u0440\u0438\u0434\u0435\u0442 \u043e\u0442\u0432\u0435\u0442. \u0412\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0438 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c, \u0430 \u043a\u043e\u0433\u0434\u0430 \u043e\u0442\u0432\u0435\u0442 \u043f\u0440\u0438\u0434\u0435\u0442, \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043e\u043f\u043e\u0432\u0435\u0441\u0442\u0438\u0442 \u0432\u0430\u0441.</p> <p>\u042d\u0442\u043e \u0438 \u0435\u0441\u0442\u044c \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u044c. JavaScript \u043d\u0435 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430, \u043f\u043e\u043a\u0430 \u0436\u0434\u0435\u0442 \u043e\u0442\u0432\u0435\u0442\u0430 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0414\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u044d\u0442\u0438\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u043c Fetch API \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u041f\u0440\u043e\u043c\u0438\u0441\u044b (Promises).</p> <p>\u041f\u0440\u043e\u043c\u0438\u0441 (Promise) \u2014 \u044d\u0442\u043e \"\u043a\u0432\u0438\u0442\u0430\u043d\u0446\u0438\u044f\" \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u0432\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b\u0438 \u0437\u0430\u043f\u0440\u043e\u0441. \u0423 \u043d\u0435\u0435 \u0435\u0441\u0442\u044c \u0442\u0440\u0438 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f:</p> <ul> <li><code>pending</code> (\u0432 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u0438): \u0421\u0438\u0433\u043d\u0430\u043b \u0435\u0449\u0435 \u0432 \u043f\u0443\u0442\u0438.</li> <li><code>fulfilled</code> (\u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d): \u041e\u0442\u0432\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e!</li> <li><code>rejected</code> (\u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d): \u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043d\u0435\u0442 \u0441\u0432\u044f\u0437\u0438).</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/1/#3","title":"3. \u041f\u0435\u0440\u0432\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441: \u0423\u0437\u043d\u0430\u0435\u043c, \u0433\u0434\u0435 \u041c\u041a\u0421","text":"<p>\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043c \u043d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e <code>fetch</code>. \u041c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e HTML-\u0444\u0430\u0439\u043b \u0438 \u0442\u0435\u0433\u0438 <code>&lt;script&gt;</code>.</p> <p>\u0428\u0430\u0433 1: \u0421\u043e\u0437\u0434\u0430\u0435\u043c <code>index.html</code> \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0432 \u043d\u043e\u0432\u043e\u0439 \u043f\u0430\u043f\u043a\u0435 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>frontend_fleet_control</code>) \u0444\u0430\u0439\u043b <code>index.html</code>. <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u0426\u0423\u041f - Fetch API&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\u0421\u0442\u0430\u0442\u0443\u0441 \u0441\u0432\u044f\u0437\u0438 \u0441 \u041c\u041a\u0421&lt;/h1&gt;\n    &lt;div id=\"iss-status\"&gt;\u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445...&lt;/div&gt;\n\n    &lt;script&gt;\n        // \u041d\u0430\u0448 JavaScript \u043a\u043e\u0434 \u0431\u0443\u0434\u0435\u0442 \u0437\u0434\u0435\u0441\u044c\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u041f\u0438\u0448\u0435\u043c \u043a\u043e\u0434 \u0441 <code>fetch</code> \u0412\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u0433\u0430 <code>&lt;script&gt;</code> \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 <code>fetch</code>-\u0437\u0430\u043f\u0440\u043e\u0441 \u043a \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u043e\u043c\u0443 API Open Notify. <pre><code>// index.html -&gt; &lt;script&gt;\n\nconst issApiUrl = 'http://api.open-notify.org/iss-now.json';\nconst statusDiv = document.getElementById('iss-status');\n\nconsole.log('\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 \u041c\u041a\u0421...');\n\nfetch(issApiUrl)\n    .then(response =&gt; {\n        // \u041f\u0435\u0440\u0432\u044b\u0439 .then() \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u0430\u043c HTTP-\u043e\u0442\u0432\u0435\u0442\n        console.log('\u041f\u043e\u043b\u0443\u0447\u0435\u043d \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430!', response);\n        // \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0442\u0435\u043b\u043e \u043e\u0442\u0432\u0435\u0442\u0430 \u0432 JSON, \u044d\u0442\u043e \u0442\u043e\u0436\u0435 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\n        return response.json();\n    })\n    .then(data =&gt; {\n        // \u0412\u0442\u043e\u0440\u043e\u0439 .then() \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0443\u0436\u0435 \u0440\u0430\u0441\u043f\u0430\u0440\u0441\u0435\u043d\u043d\u044b\u0435 JSON-\u0434\u0430\u043d\u043d\u044b\u0435\n        console.log('\u0414\u0430\u043d\u043d\u044b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u044b \u0432 JSON!', data);\n        const position = data.iss_position;\n        statusDiv.innerHTML = `\u041c\u041a\u0421 \u0441\u0435\u0439\u0447\u0430\u0441 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0437\u0434\u0435\u0441\u044c:\n                               &lt;strong&gt;\u0428\u0438\u0440\u043e\u0442\u0430:&lt;/strong&gt; ${position.latitude},\n                               &lt;strong&gt;\u0414\u043e\u043b\u0433\u043e\u0442\u0430:&lt;/strong&gt; ${position.longitude}`;\n    })\n    .catch(error =&gt; {\n        // .catch() \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u0435\u0441\u043b\u0438 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0442\u0438\n        console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u0432\u044f\u0437\u0438 \u0441 \u041c\u041a\u0421!', error);\n        statusDiv.textContent = '\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435.';\n    });\n</code></pre></p> <ul> <li><code>fetch(url)</code>: \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 GET-\u0437\u0430\u043f\u0440\u043e\u0441. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u043e\u043c\u0438\u0441.</li> <li><code>.then(callback)</code>: \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 \u043f\u0440\u043e\u043c\u0438\u0441 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d (<code>fulfilled</code>). \u041f\u0435\u0440\u0432\u044b\u0439 <code>.then</code> \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 <code>Response</code>.</li> <li><code>response.json()</code>: \u041c\u0435\u0442\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0447\u0438\u0442\u0430\u0435\u0442 \u0442\u0435\u043b\u043e \u043e\u0442\u0432\u0435\u0442\u0430 \u0438 \u043f\u0430\u0440\u0441\u0438\u0442 \u0435\u0433\u043e \u043a\u0430\u043a JSON. \u041e\u043d \u0442\u043e\u0436\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u043e\u043c\u0438\u0441!</li> <li><code>.catch(callback)</code>: \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f, \u0435\u0441\u043b\u0438 \u043f\u0440\u043e\u043c\u0438\u0441 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d (<code>rejected</code>), \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u0437-\u0437\u0430 \u043e\u0448\u0438\u0431\u043a\u0438 \u0441\u0435\u0442\u0438.</li> </ul> <p>\u0428\u0430\u0433 3: \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u041f\u0440\u043e\u0441\u0442\u043e \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>index.html</code> \u0432 \u0432\u0430\u0448\u0435\u043c \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435. \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c, \u043a\u0430\u043a \"\u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445...\" \u0441\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u0435 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u041c\u041a\u0421. \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 (F12), \u0447\u0442\u043e\u0431\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u043b\u043e\u0433\u0438.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/1/#4","title":"4. \"\u0427\u0442\u043e, \u0435\u0441\u043b\u0438...\": \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0430","text":"<p>\u0427\u0442\u043e \u0435\u0441\u043b\u0438 \u043c\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u043c \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 URL? <code>fetch('http://api.open-notify.org/non-existent-endpoint')</code></p> <p><code>fetch</code> \u0443\u0441\u0442\u0440\u043e\u0435\u043d \u0442\u0430\u043a, \u0447\u0442\u043e <code>.catch()</code> \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u0441\u0435\u0442\u0435\u0432\u044b\u0445 \u043e\u0448\u0438\u0431\u043a\u0430\u0445 (\u043d\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430, DNS \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d). \u0410 \u0432\u043e\u0442 \u043e\u0442\u0432\u0435\u0442\u044b \u0441 \u043a\u043e\u0434\u0430\u043c\u0438 <code>404</code> \u0438\u043b\u0438 <code>500</code> \u0434\u043b\u044f <code>fetch</code> \u2014 \u044d\u0442\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442! \u041f\u0440\u043e\u0441\u0442\u043e \u043e\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043e\u0434 \u043e\u0448\u0438\u0431\u043a\u0438.</p> <p>\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438: <pre><code>fetch('http://api.open-notify.org/non-existent-endpoint')\n    .then(response =&gt; {\n        // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e .ok, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0440\u0430\u0432\u043d\u043e true \u0434\u043b\u044f \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u0432 200-299\n        if (!response.ok) {\n            // \u0415\u0441\u043b\u0438 \u043e\u0442\u0432\u0435\u0442 \u043d\u0435 \"\u041e\u041a\", \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u0432\u043e\u044e \u043e\u0448\u0438\u0431\u043a\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 .catch()\n            throw new Error(`\u041e\u0448\u0438\u0431\u043a\u0430 HTTP! \u0421\u0442\u0430\u0442\u0443\u0441: ${response.status}`);\n        }\n        return response.json();\n    })\n    .then(data =&gt; {\n        console.log(data);\n    })\n    .catch(error =&gt; {\n        console.error('\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430:', error);\n    });\n</code></pre></p> <ul> <li><code>response.ok</code>: \u042d\u0442\u043e \u0432\u0430\u0448 \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440 \u0443\u0441\u043f\u0435\u0445\u0430.</li> <li><code>throw new Error()</code>: \u041c\u044b \u0432\u0440\u0443\u0447\u043d\u0443\u044e \"\u043f\u0440\u043e\u0432\u0430\u043b\u0438\u0432\u0430\u0435\u043c\" \u0446\u0435\u043f\u043e\u0447\u043a\u0443 \u043f\u0440\u043e\u043c\u0438\u0441\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043f\u0430\u0441\u0442\u044c \u0432 \u0431\u043b\u043e\u043a <code>.catch</code>.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/1/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. Fetch API \u2014 \u044d\u0442\u043e...</p>  a) \u0412\u043d\u0435\u0448\u043d\u044f\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043d\u0443\u0436\u043d\u043e \u0441\u043a\u0430\u0447\u0438\u0432\u0430\u0442\u044c  b) \u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432  c) \u042f\u0437\u044b\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0435\u0442\u044c\u044e <p>2. \u0427\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u044b\u0437\u043e\u0432 `fetch(url)`?</p>  a) \u0421\u0440\u0430\u0437\u0443 JSON-\u0434\u0430\u043d\u043d\u044b\u0435  b) \u041e\u0431\u044a\u0435\u043a\u0442 `Promise` (\u043e\u0431\u0435\u0449\u0430\u043d\u0438\u0435)  c) HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 <p>3. \u041c\u0435\u0442\u043e\u0434 `.then()` \u0432 \u0446\u0435\u043f\u043e\u0447\u043a\u0435 \u043f\u0440\u043e\u043c\u0438\u0441\u043e\u0432 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f, \u043a\u043e\u0433\u0434\u0430...</p>  a) \u041f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0442\u0438  b) \u0417\u0430\u043f\u0440\u043e\u0441 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d  c) \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0432\u043a\u043b\u0430\u0434\u043a\u0443 <p>4. \u041c\u0435\u0442\u043e\u0434 `response.json()` \u043d\u0443\u0436\u0435\u043d \u0434\u043b\u044f...</p>  a) \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0435\u043b\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0432 JavaScript-\u043e\u0431\u044a\u0435\u043a\u0442  b) \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0438, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043e\u0442\u0432\u0435\u0442 \u0432\u0430\u043b\u0438\u0434\u043d\u044b\u043c JSON  c) \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 JSON <p>5. \u041a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0432\u0435\u0440\u043d\u0443\u043b \u043e\u0448\u0438\u0431\u043a\u0443 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 404)?</p>  a) \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e `response.ok`  b) \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043b\u0438 \u0431\u043b\u043e\u043a `.catch()`  c) \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e `response.status` \u0440\u0430\u0432\u0435\u043d \"OK\" \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \"\u0433\u043b\u0430\u0432\u043d\u0443\u044e \u0430\u043d\u0442\u0435\u043d\u043d\u0443\" \u0441\u0432\u043e\u0435\u0433\u043e \u0426\u0423\u041f \u0438 \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442\u044b.</p> <ul> <li>\ud83d\udce1 \u0412\u044b \u043e\u0441\u0432\u043e\u0438\u043b\u0438 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 <code>fetch()</code>.</li> <li>\ud83d\udef0\ufe0f \u041f\u043e\u043d\u044f\u043b\u0438, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0435 \u041f\u0440\u043e\u043c\u0438\u0441\u044b (Promises) \u0438 \u043a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 <code>.then()</code> \u0438 <code>.catch()</code>.</li> <li>\u2699\ufe0f \u041d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442\u044b \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044f <code>response.ok</code>.</li> </ul> <p>\u0421\u0432\u044f\u0437\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430! \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043c \u043d\u0430\u0448 \u0426\u0423\u041f \u043a API \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0444\u043b\u043e\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043d\u0430 FastAPI, \u0438 \u043d\u0430\u0443\u0447\u0438\u043c\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u0430\u0448\u0438\u0445 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u0430\u0448 \u0444\u0430\u0439\u043b <code>index.html</code> \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u041c\u041a\u0421.</li> <li>\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043d\u0430\u043c\u0435\u0440\u0435\u043d\u043d\u043e \u0441\u043b\u043e\u043c\u0430\u0442\u044c URL \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430, \u043a\u0430\u043a\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u0435\u0434\u0435\u043d\u0430.</li> </ul> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043a\u043e\u0434 \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442:</p> <ul> <li>CORS Error: \u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u044b\u0442\u0430\u0435\u0442\u0435\u0441\u044c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 \u043a \u0441\u0432\u043e\u0435\u043c\u0443 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u043c\u0443 FastAPI API (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>http://127.0.0.1:8000</code>) \u0438\u0437 \u0444\u0430\u0439\u043b\u0430, \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u0433\u043e \u043a\u0430\u043a <code>file:///...</code>, \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0438\u0437-\u0437\u0430 \u043f\u043e\u043b\u0438\u0442\u0438\u043a\u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 CORS. \u041c\u044b \u0440\u0435\u0448\u0438\u043c \u044d\u0442\u0443 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443 \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435. \u041f\u043e\u043a\u0430 \u0447\u0442\u043e \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 API, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044d\u0442\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u044e\u0442.</li> <li>HTTP/HTTPS: <code>http://api.open-notify.org</code> \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043f\u043e HTTP. \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u044b \u043c\u043e\u0433\u0443\u0442 \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0430\u0442\u044c \u043e\u0431 \u044d\u0442\u043e\u043c. \u0415\u0441\u043b\u0438 \u0432\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442\u0435 \u0441 HTTPS-\u0441\u0430\u0439\u0442\u0430, \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043a HTTP-\u0440\u0435\u0441\u0443\u0440\u0441\u0430\u043c \u043c\u043e\u0433\u0443\u0442 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/2/","title":"\u0413\u043b\u0430\u0432\u0430 4.2: \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 GET \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 45 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/2/#1-get","title":"1. GET: \u0417\u0430\u043f\u0440\u043e\u0441 \u0442\u0435\u043b\u0435\u043c\u0435\u0442\u0440\u0438\u0438 \u0441 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0444\u043b\u043e\u0442\u0430","text":"<p>GET-\u0437\u0430\u043f\u0440\u043e\u0441 \u2014 \u044d\u0442\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445. \u0412 \u043d\u0430\u0448\u0435\u043c \u0426\u0423\u041f\u0435 \u044d\u0442\u043e \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0443: \"\u0426\u0435\u043d\u0442\u0440 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0424\u043b\u043e\u0442\u043e\u043c, \u0434\u043e\u043b\u043e\u0436\u0438\u0442\u0435 \u043e\u0431\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443!\"</p> <p>\u041c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c <code>fetch</code> \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0434\u0432\u0443\u0445 \u0442\u0438\u043f\u043e\u0432 GET-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a \u043d\u0430\u0448\u0435\u043c\u0443 FastAPI-\u0441\u0435\u0440\u0432\u0435\u0440\u0443:</p> <ol> <li>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438: \"\u041f\u043e\u043a\u0430\u0436\u0438\u0442\u0435 \u043c\u043d\u0435 \u0432\u0435\u0441\u044c \u043c\u043e\u0439 \u0444\u043b\u043e\u0442\".</li> <li>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u0430: \"\u0414\u0430\u0439\u0442\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u0440\u0430\u0431\u043b\u0435 \u0441 ID 2\".</li> </ol> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p><code>GET /spaceships</code> \u2014 \u044d\u0442\u043e \u0448\u0438\u0440\u043e\u043a\u043e\u0432\u0435\u0449\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043a\u043e \u0432\u0441\u0435\u043c\u0443 \u0444\u043b\u043e\u0442\u0443 \u0441 \u043f\u0440\u043e\u0441\u044c\u0431\u043e\u0439 \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u044c \u0441\u0432\u043e\u0438 \u043f\u043e\u0437\u044b\u0432\u043d\u044b\u0435.</p> <p><code>GET /spaceships/3</code> \u2014 \u044d\u0442\u043e \u0430\u0434\u0440\u0435\u0441\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043a \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 \u043a\u043e\u0440\u0430\u0431\u043b\u044e (\u041c\u041a\u0421) \u0441 \u043f\u0440\u043e\u0441\u044c\u0431\u043e\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0435\u0433\u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u0445.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/2/#2-cors","title":"2. \u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 CORS: \"\u041c\u0435\u0436\u043f\u043b\u0430\u043d\u0435\u0442\u043d\u044b\u0435 \u043f\u043e\u043c\u0435\u0445\u0438\"","text":"<p>\u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043c\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043c \u0437\u0430\u043f\u0440\u043e\u0441, \u043d\u0443\u0436\u043d\u043e \u0440\u0435\u0448\u0438\u0442\u044c \u043e\u0434\u043d\u0443 \u0432\u0430\u0436\u043d\u0443\u044e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u044b \u0438\u0437 \u0441\u043e\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u0437\u0430\u043f\u0440\u0435\u0449\u0430\u044e\u0442 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 (\u043d\u0430\u0448\u0435\u043c\u0443 \u0426\u0423\u041f\u0443), \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u043e\u0439 \u0441 \u043e\u0434\u043d\u043e\u0433\u043e \"\u0434\u043e\u043c\u0435\u043d\u0430\" (<code>file:///...</code> \u0438\u043b\u0438 <code>http://localhost:5500</code>), \u0434\u0435\u043b\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043a API \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u043c \"\u0434\u043e\u043c\u0435\u043d\u0435\" (<code>http://127.0.0.1:8000</code>).</p> <p>\u042d\u0442\u0430 \u043f\u043e\u043b\u0438\u0442\u0438\u043a\u0430 \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f CORS (Cross-Origin Resource Sharing).</p> <p>\u0427\u0442\u043e\u0431\u044b \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u043d\u0430\u0448\u0435\u043c\u0443 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0443 \u043e\u0431\u0449\u0430\u0442\u044c\u0441\u044f \u0441 \u0431\u044d\u043a\u0435\u043d\u0434\u043e\u043c, \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c FastAPI-\u0441\u0435\u0440\u0432\u0435\u0440 \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043e\u043d \u0433\u043e\u0432\u043e\u0440\u0438\u043b \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0443: \"\u0412\u0441\u0435 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435, \u044f \u0434\u043e\u0432\u0435\u0440\u044f\u044e \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043c \u0441 \u044d\u0442\u043e\u0433\u043e \u0430\u0434\u0440\u0435\u0441\u0430\".</p> <p>\u0428\u0430\u0433 1: \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c <code>python-multipart</code> \u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043b\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b middleware. <pre><code>pip install python-multipart\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u041d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c CORS \u0432 <code>main.py</code> \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0432\u0430\u0448 \u0444\u0430\u0439\u043b <code>main.py</code> \u0438\u0437 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 FastAPI \u0438 \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434: <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware  # &lt;-- \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c middleware\n\n# ... \u0432\u0430\u0448 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434 (\u043c\u043e\u0434\u0435\u043b\u0438, db_spaceships) ...\n\napp = FastAPI(\n    title=\"Fleet Management API\",\n    # ...\n)\n\n# --- \u041d\u0410\u0421\u0422\u0420\u041e\u0419\u041a\u0410 CORS ---\n# \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c, \u043a\u0430\u043a\u0438\u0435 \"\u0434\u043e\u043c\u0435\u043d\u044b\" (origins) \u043c\u043e\u0433\u0443\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b\norigins = [\n    \"http://localhost\",\n    \"http://localhost:8080\",\n    \"http://127.0.0.1:5500\",  # \u0410\u0434\u0440\u0435\u0441 \u0434\u043b\u044f Live Server \u0432 VS Code\n    \"null\"  # \u0414\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438\u0437 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 file:///\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # \u0420\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u043c \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 origins\n    allow_credentials=True,\n    allow_methods=[\"*\"],  # \u0420\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u043c \u0432\u0441\u0435 \u043c\u0435\u0442\u043e\u0434\u044b (GET, POST \u0438 \u0442.\u0434.)\n    allow_headers=[\"*\"],  # \u0420\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u043c \u0432\u0441\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438\n)\n\n# --- \u0412\u0410\u0428\u0418 \u042d\u041d\u0414\u041f\u041e\u0418\u041d\u0422\u042b \u041d\u0418\u0416\u0415 ---\n@app.get(\"/\")\n# ...\n</code></pre> \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u0448 API-\u0441\u0435\u0440\u0432\u0435\u0440 \u0433\u043e\u0442\u043e\u0432 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043e\u0442 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430. \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 <code>uvicorn</code>, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432\u0441\u0442\u0443\u043f\u0438\u043b\u0438 \u0432 \u0441\u0438\u043b\u0443!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/2/#3","title":"3. \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430\u0448\u0435\u0433\u043e \u0444\u043b\u043e\u0442\u0430.</p> <p>\u0428\u0430\u0433 1: \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c <code>index.html</code> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u0426\u0423\u041f - \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0424\u043b\u043e\u0442\u043e\u043c&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: sans-serif; }\n        .ship-list { list-style: none; padding: 0; }\n        .ship-list li { border: 1px solid #ccc; margin-bottom: 10px; padding: 15px; border-radius: 5px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\u041f\u0430\u043d\u0435\u043b\u044c \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0444\u043b\u043e\u0442\u043e\u043c&lt;/h1&gt;\n\n    &lt;button id=\"load-fleet-btn\"&gt;\u0417\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0444\u043b\u043e\u0442\u0435&lt;/button&gt;\n\n    &lt;h2&gt;\u0421\u043f\u0438\u0441\u043e\u043a \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432:&lt;/h2&gt;\n    &lt;ul id=\"fleet-list\" class=\"ship-list\"&gt;\n        &lt;li&gt;\u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b...&lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt; &lt;!-- \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0441\u043a\u0440\u0438\u043f\u0442 --&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u0421\u043e\u0437\u0434\u0430\u0435\u043c <code>app.js</code> \u0420\u044f\u0434\u043e\u043c \u0441 <code>index.html</code> \u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>app.js</code>. \u0412 \u043d\u0435\u0433\u043e \u043c\u044b \u0432\u044b\u043d\u0435\u0441\u0435\u043c \u0432\u0441\u044e \u043b\u043e\u0433\u0438\u043a\u0443. <pre><code>// app.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // URL \u043d\u0430\u0448\u0435\u0433\u043e FastAPI \u0441\u0435\u0440\u0432\u0435\u0440\u0430\n\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetList = document.getElementById('fleet-list');\n\n// \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0444\u043b\u043e\u0442\u0430\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0442\u0435\u043b\u0435\u043c\u0435\u0442\u0440\u0438\u0438...&lt;/li&gt;';\n\n        // \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c GET-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 /spaceships\n        const response = await fetch(`${API_BASE_URL}/spaceships`);\n\n        if (!response.ok) {\n            throw new Error(`\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0442\u0438: ${response.status}`);\n        }\n\n        const ships = await response.json(); // \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439\n\n        // \u041e\u0447\u0438\u0449\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;\u0412 \u0440\u0435\u0435\u0441\u0442\u0440\u0435 \u043d\u0435\u0442 \u043d\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430.&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            const listItem = document.createElement('li');\n            listItem.innerHTML = `\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                \u0422\u0438\u043f: ${ship.type}&lt;br&gt;\n                \u0413\u043e\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u0430: ${ship.launch_year}&lt;br&gt;\n                \u0421\u0442\u0430\u0442\u0443\u0441: ${ship.status}\n            `;\n            fleetList.appendChild(listItem);\n        });\n\n    } catch (error) {\n        console.error('\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0444\u043b\u043e\u0442\u0435:', error);\n        fleetList.innerHTML = `&lt;li&gt;\u041e\u0448\u0438\u0431\u043a\u0430: ${error.message}&lt;/li&gt;`;\n    }\n}\n\n// \u0412\u0435\u0448\u0430\u0435\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\n</code></pre></p> <ul> <li>async/await: \u041c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 \u043d\u043e\u0432\u044b\u0439, \u0431\u043e\u043b\u0435\u0435 \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0440\u043e\u043c\u0438\u0441\u0430\u043c\u0438. \u041c\u044b \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c \u0435\u0433\u043e \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u0432 \u0433\u043b\u0430\u0432\u0435 4.5. \u041f\u043e\u043a\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u043d\u0430\u0439\u0442\u0435, \u0447\u0442\u043e <code>await</code> \"\u0436\u0434\u0435\u0442\" \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u043c\u0438\u0441\u0430, \u043d\u0435 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443.</li> <li><code>try...catch</code>: \u041e\u0442\u043b\u0438\u0447\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0438 \u0432 <code>async</code> \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445.</li> </ul> <p>\u0428\u0430\u0433 3: \u0422\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>index.html</code> \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 (\u043b\u0443\u0447\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u0447\u0435\u0440\u0435\u0437 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 Live Server \u0432 VS Code, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442 \u0435\u0433\u043e \u043d\u0430 <code>http://127.0.0.1:5500</code>). \u041d\u0430\u0436\u043c\u0438\u0442\u0435 \u043a\u043d\u043e\u043f\u043a\u0443 \"\u0417\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0444\u043b\u043e\u0442\u0435\". \u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0430\u0448\u0438\u0445 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439 \u0438\u0437 FastAPI \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/2/#4","title":"4. \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f","text":"<p>\u0422\u0435\u043f\u0435\u0440\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 ID.</p> <p>\u0428\u0430\u0433 1: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0444\u043e\u0440\u043c\u0443 \u0432 <code>index.html</code> <pre><code>&lt;!-- index.html, \u043f\u043e\u0441\u043b\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 --&gt;\n&lt;hr&gt;\n&lt;h2&gt;\u0417\u0430\u043f\u0440\u043e\u0441 \u043f\u043e ID&lt;/h2&gt;\n&lt;form id=\"ship-form\"&gt;\n    &lt;input type=\"number\" id=\"ship-id-input\" placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 ID \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430\" required&gt;\n    &lt;button type=\"submit\"&gt;\u041d\u0430\u0439\u0442\u0438 \u0430\u043f\u043f\u0430\u0440\u0430\u0442&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"ship-details\" class=\"ship-list\"&gt;&lt;/div&gt;\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043b\u043e\u0433\u0438\u043a\u0443 \u0432 <code>app.js</code> <pre><code>// app.js, \u0432 \u043a\u043e\u043d\u0435\u0446 \u0444\u0430\u0439\u043b\u0430\n\nconst shipForm = document.getElementById('ship-form');\nconst shipIdInput = document.getElementById('ship-id-input');\nconst shipDetails = document.getElementById('ship-details');\n\nasync function fetchShipById(event) {\n    event.preventDefault(); // \u041f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n    const shipId = shipIdInput.value;\n\n    if (!shipId) {\n        alert('\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 ID.');\n        return;\n    }\n\n    try {\n        shipDetails.innerHTML = '&lt;li&gt;\u041f\u043e\u0438\u0441\u043a \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430...&lt;/li&gt;';\n\n        // \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c GET-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 /spaceships/{id}\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`);\n\n        if (response.status === 404) {\n             throw new Error('\u0410\u043f\u043f\u0430\u0440\u0430\u0442 \u0441 \u0442\u0430\u043a\u0438\u043c ID \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u0440\u0435\u0435\u0441\u0442\u0440\u0435.');\n        }\n        if (!response.ok) {\n            throw new Error(`\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0442\u0438: ${response.status}`);\n        }\n\n        const ship = await response.json();\n\n        shipDetails.innerHTML = `\n            &lt;li&gt;\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                \u0422\u0438\u043f: ${ship.type}&lt;br&gt;\n                \u0413\u043e\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u0430: ${ship.launch_year}&lt;br&gt;\n                \u0421\u0442\u0430\u0442\u0443\u0441: ${ship.status}\n            &lt;/li&gt;\n        `;\n    } catch (error) {\n        console.error(`\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u0438\u0441\u043a\u0435 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430 ${shipId}:`, error);\n        shipDetails.innerHTML = `&lt;li&gt;\u041e\u0448\u0438\u0431\u043a\u0430: ${error.message}&lt;/li&gt;`;\n    }\n}\n\nshipForm.addEventListener('submit', fetchShipById);\n</code></pre></p> <ul> <li>\u041c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0443\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 <code>404</code>, \u0447\u0442\u043e\u0431\u044b \u0434\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435.</li> </ul> <p>\u0428\u0430\u0433 3: \u0422\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 ID \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 1) \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \"\u041d\u0430\u0439\u0442\u0438 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\". \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0435\u0433\u043e \u0434\u0430\u043d\u043d\u044b\u0435. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0432\u0432\u0435\u0441\u0442\u0438 \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 ID (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 99) \u2014 \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/2/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u041f\u043e\u043b\u0438\u0442\u0438\u043a\u0430 CORS \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u043d\u0443\u0436\u043d\u0430 \u0434\u043b\u044f...</p>  a) \u0423\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446  b) \u0417\u0430\u0449\u0438\u0442\u044b \u043e\u0442 \u0432\u0440\u0435\u0434\u043e\u043d\u043e\u0441\u043d\u044b\u0445 \u043c\u0435\u0436\u0441\u0430\u0439\u0442\u043e\u0432\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432  c) \u0421\u0436\u0430\u0442\u0438\u044f JSON-\u0434\u0430\u043d\u043d\u044b\u0445 <p>2. \u0427\u0442\u043e\u0431\u044b \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0443 \u043d\u0430 `localhost:5500` \u043e\u0431\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f \u043a FastAPI, \u043d\u0443\u0436\u043d\u043e...</p>  a) \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c `CORSMiddleware` \u0432 FastAPI  b) \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430  c) \u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0443\u0436\u043d\u043e, \u044d\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <p>3. \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0440\u0435\u0441\u0443\u0440\u0441\u0435 \u0441 ID=5, URL \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u043a\u0430\u043a:</p>  a) `/resources?id=5`  b) `/resources/5`  c) `/get/resources/5` <p>4. \u041a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `await` \u0432 JavaScript \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u043d\u0443\u0442\u0440\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0441...</p>  a) `function`  b) `promise`  c) `async` <p>5. `event.preventDefault()` \u0432 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0444\u043e\u0440\u043c\u044b \u043d\u0443\u0436\u0435\u043d, \u0447\u0442\u043e\u0431\u044b...</p>  a) \u041f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 (\u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b)  b) \u041e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u0430  c) \u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u043a\u0430\u043d\u0430\u043b \u0441\u0432\u044f\u0437\u0438 \u043c\u0435\u0436\u0434\u0443 \"\u0417\u0435\u043c\u043b\u0435\u0439\" \u0438 \"\u043a\u043e\u0441\u043c\u043e\u0441\u043e\u043c\" \u0438 \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0442\u044c \u0442\u0435\u043b\u0435\u043c\u0435\u0442\u0440\u0438\u044e!</p> <ul> <li>\ud83d\udee1\ufe0f \u0412\u044b \u0440\u0435\u0448\u0438\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443 \"\u043c\u0435\u0436\u043f\u043b\u0430\u043d\u0435\u0442\u043d\u044b\u0445 \u043f\u043e\u043c\u0435\u0445\", \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0432 CORS \u043d\u0430 \u0441\u0432\u043e\u0435\u043c FastAPI-\u0441\u0435\u0440\u0432\u0435\u0440\u0435.</li> <li>\ud83d\udef0\ufe0f \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432.</li> <li>\ud83d\udd2d \u0421\u043e\u0437\u0434\u0430\u043b\u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0435 \u043f\u043e \u0435\u0433\u043e ID.</li> </ul> <p>\u0426\u0423\u041f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435! \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0439\u0434\u0435\u043c \u043a \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u043c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f\u043c: \u0431\u0443\u0434\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0448\u0438\u0445 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u0430\u0448 FastAPI-\u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0441 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u043c <code>CORSMiddleware</code>.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u043f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \"\u0417\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435\" \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u043e\u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439.</li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0444\u043e\u0440\u043c\u0430 \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e ID \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u044b \u0438 \u0441\u043e\u043e\u0431\u0449\u0430\u0435\u0442 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0434\u043b\u044f \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445.</li> </ul> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438:</p> <ul> <li>CORS error \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430: \u041b\u0438\u0431\u043e \u0432\u044b \u043d\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043b\u0438 <code>uvicorn</code> \u043f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f <code>CORSMiddleware</code>, \u043b\u0438\u0431\u043e \u0430\u0434\u0440\u0435\u0441 \u0432\u0430\u0448\u0435\u0433\u043e \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>http://127.0.0.1:5500</code>) \u043d\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u0432 \u0441\u043f\u0438\u0441\u043e\u043a <code>origins</code>.</li> <li>Failed to fetch: \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u0430\u0448 FastAPI-\u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0432 <code>API_BASE_URL</code>.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/3/","title":"\u0413\u043b\u0430\u0432\u0430 4.3: \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 POST/PUT/DELETE \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 1 \u0447\u0430\u0441</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/3/#1","title":"1. \u0410\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b: \u041e\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0434\u043e \u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f","text":"<p>\u0414\u043e \u0441\u0438\u0445 \u043f\u043e\u0440 \u043d\u0430\u0448 \u0426\u0423\u041f \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u043b \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e (<code>GET</code>). \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u043d\u0430\u0443\u0447\u0438\u043c\u0441\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b:</p> <ul> <li>POST: \"\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0441\u043f\u0443\u0442\u043d\u0438\u043a \u043d\u0430 \u043e\u0440\u0431\u0438\u0442\u0443!\"</li> <li>PUT: \"\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u043f\u043e\u043b\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u0440\u043d\u0438\u0437\u0430\u0446\u0438\u044e \u0441\u0438\u0441\u0442\u0435\u043c \u043d\u0430 \u041c\u041a\u0421!\"</li> <li>DELETE: \"\u0421\u0432\u0435\u0441\u0442\u0438 \u0441 \u043e\u0440\u0431\u0438\u0442\u044b \u0441\u0442\u0430\u0440\u044b\u0439 \u0430\u043f\u043f\u0430\u0440\u0430\u0442 <code>Debris-123</code>!\"</li> </ul> <p>\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c <code>fetch</code>, \u043d\u043e \u0443\u0436\u0435 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u043d\u0430\u0448\u0443 \u043a\u043e\u043c\u0430\u043d\u0434\u0443.</p> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>\u0415\u0441\u043b\u0438 <code>GET</code> \u2014 \u044d\u0442\u043e \u043f\u0430\u0441\u0441\u0438\u0432\u043d\u043e\u0435 \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0434\u0438\u043e\u044d\u0444\u0438\u0440\u0430, \u0442\u043e <code>POST</code>, <code>PUT</code> \u0438 <code>DELETE</code> \u2014 \u044d\u0442\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043a\u043e\u043c\u0430\u043d\u0434. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \"\u0447\u0430\u0441\u0442\u043e\u0442\u0443\" (URL), \u043d\u043e \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b (\u0442\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430) \u0438 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0441\u0432\u044f\u0437\u0438 (\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438).</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/3/#2-post-","title":"2. \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 POST-\u0437\u0430\u043f\u0440\u043e\u0441\u0430: \u0417\u0430\u043f\u0443\u0441\u043a \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f","text":"<p>\u0427\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441, \u043c\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c <code>POST</code>-\u0437\u0430\u043f\u0440\u043e\u0441. \u0421\u0430\u043c\u043e\u0435 \u0433\u043b\u0430\u0432\u043d\u043e\u0435 \u0437\u0434\u0435\u0441\u044c \u2014 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0442\u0435\u043b\u043e (body) \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430.</p> <p>\u0428\u0430\u0433 1: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0444\u043e\u0440\u043c\u0443 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0432 <code>index.html</code> \u0420\u0430\u0437\u043c\u0435\u0441\u0442\u0438\u043c \u0435\u0435 \u043f\u043e\u0441\u043b\u0435 \u0431\u043b\u043e\u043a\u0430 \"\u0417\u0430\u043f\u0440\u043e\u0441 \u043f\u043e ID\". <pre><code>&lt;!-- index.html --&gt;\n&lt;hr&gt;\n&lt;h2&gt;\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0430\u043f\u043f\u0430\u0440\u0430\u0442&lt;/h2&gt;\n&lt;form id=\"create-ship-form\"&gt;\n    &lt;input type=\"text\" id=\"create-name\" placeholder=\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-type\" placeholder=\"\u0422\u0438\u043f\" required&gt;&lt;br&gt;\n    &lt;input type=\"number\" id=\"create-year\" placeholder=\"\u0413\u043e\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-status\" placeholder=\"\u0421\u0442\u0430\u0442\u0443\u0441\" required&gt;&lt;br&gt;\n    &lt;button type=\"submit\"&gt;\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"create-status-message\"&gt;&lt;/div&gt;\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043b\u043e\u0433\u0438\u043a\u0443 \u0432 <code>app.js</code> <pre><code>// app.js, \u0432 \u043a\u043e\u043d\u0435\u0446 \u0444\u0430\u0439\u043b\u0430\n\nconst createShipForm = document.getElementById('create-ship-form');\nconst createStatusMessage = document.getElementById('create-status-message');\n\nasync function createShip(event) {\n    event.preventDefault();\n\n    // 1. \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\n    const shipData = {\n        name: document.getElementById('create-name').value,\n        type: document.getElementById('create-type').value,\n        launch_year: parseInt(document.getElementById('create-year').value),\n        status: document.getElementById('create-status').value\n    };\n\n    try {\n        createStatusMessage.textContent = '\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043d\u0430 \u0437\u0430\u043f\u0443\u0441\u043a...';\n\n        // 2. \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c fetch-\u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438\n        const response = await fetch(`${API_BASE_URL}/spaceships`, {\n            method: 'POST', // \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434\n            headers: {\n                'Content-Type': 'application/json' // \u0413\u043e\u0432\u043e\u0440\u0438\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0447\u0442\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c JSON\n            },\n            body: JSON.stringify(shipData) // \u041f\u0440\u0435\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 JavaScript \u0432 JSON-\u0441\u0442\u0440\u043e\u043a\u0443\n        });\n\n        if (!response.ok) {\n            // \u0415\u0441\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u0435\u0440\u043d\u0443\u043b \u043e\u0448\u0438\u0431\u043a\u0443, \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0435\u0435 \u0442\u0435\u043b\u043e\n            const errorData = await response.json();\n            throw new Error(errorData.detail || `\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: ${response.status}`);\n        }\n\n        const newShip = await response.json();\n        createStatusMessage.textContent = `\ud83d\ude80 \u0423\u0441\u043f\u0435\u0448\u043d\u044b\u0439 \u0437\u0430\u043f\u0443\u0441\u043a! \u0410\u043f\u043f\u0430\u0440\u0430\u0442\u0443 \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d ID: ${newShip.id}`;\n\n        createShipForm.reset(); // \u041e\u0447\u0438\u0449\u0430\u0435\u043c \u0444\u043e\u0440\u043c\u0443\n        fetchAndDisplayFleet(); // \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043e\u0431\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u043b\u043e\u0442\u0430\n\n    } catch (error) {\n        console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430:', error);\n        createStatusMessage.textContent = `\ud83d\udd34 \u041e\u0448\u0438\u0431\u043a\u0430: ${error.message}`;\n    }\n}\n\ncreateShipForm.addEventListener('submit', createShip);\n</code></pre> \u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043c\u043e\u043c\u0435\u043d\u0442\u044b <code>fetch</code> \u0434\u043b\u044f POST:</p> <ul> <li><code>method: 'POST'</code>: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c HTTP-\u043c\u0435\u0442\u043e\u0434.</li> <li><code>headers: { 'Content-Type': 'application/json' }</code>: \u041a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u0430\u0436\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a. \u041e\u043d \u0441\u043e\u043e\u0431\u0449\u0430\u0435\u0442 \u043d\u0430\u0448\u0435\u043c\u0443 FastAPI-\u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0447\u0442\u043e \u0432 \u0442\u0435\u043b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f JSON, \u0438 \u0435\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0441\u043f\u0430\u0440\u0441\u0438\u0442\u044c.</li> <li><code>body: JSON.stringify(shipData)</code>: \u041c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c JavaScript-\u043e\u0431\u044a\u0435\u043a\u0442 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e. \u0415\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c (\u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u0442\u044c) \u0432 JSON-\u0441\u0442\u0440\u043e\u043a\u0443.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/3/#3-delete-","title":"3. \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 DELETE-\u0437\u0430\u043f\u0440\u043e\u0441\u0430: \u0421\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430","text":"<p>\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0449\u0435 \u2014 \u0435\u043c\u0443 \u043e\u0431\u044b\u0447\u043d\u043e \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0442\u0435\u043b\u043e, \u0442\u043e\u043b\u044c\u043a\u043e URL \u0441 ID \u043e\u0431\u044a\u0435\u043a\u0442\u0430.</p> <p>\u0428\u0430\u0433 1: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u0432 \u043d\u0430\u0448 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439 \u0418\u0437\u043c\u0435\u043d\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e <code>fetchAndDisplayFleet</code> \u0432 <code>app.js</code>, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u043b\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430. <pre><code>// app.js, \u0432\u043d\u0443\u0442\u0440\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 fetchAndDisplayFleet\n\n// ...\nships.forEach(ship =&gt; {\n    const listItem = document.createElement('li');\n    // \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u0441 data-\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u043c, \u0445\u0440\u0430\u043d\u044f\u0449\u0438\u043c ID\n    listItem.innerHTML = `\n        &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n        \u0422\u0438\u043f: ${ship.type} | \u0413\u043e\u0434: ${ship.launch_year} | \u0421\u0442\u0430\u0442\u0443\u0441: ${ship.status}&lt;br&gt;\n        &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;\u0421\u043f\u0438\u0441\u0430\u0442\u044c \u0430\u043f\u043f\u0430\u0440\u0430\u0442&lt;/button&gt;\n    `;\n    fleetList.appendChild(listItem);\n});\n// ...\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043a\u043d\u043e\u043f\u043e\u043a \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u041c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u0435\u043b\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u2014 \u043e\u0434\u0438\u043d \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430 \u0432\u0435\u0441\u044c \u0441\u043f\u0438\u0441\u043e\u043a. <pre><code>// app.js, \u0432 \u043a\u043e\u043d\u0435\u0446 \u0444\u0430\u0439\u043b\u0430\n\nasync function deleteShip(shipId) {\n    if (!confirm(`\u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043f\u0438\u0441\u0430\u0442\u044c \u0430\u043f\u043f\u0430\u0440\u0430\u0442 \u0441 ID ${shipId}? \u042d\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043d\u0435\u043e\u0431\u0440\u0430\u0442\u0438\u043c\u043e.`)) {\n        return;\n    }\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`, {\n            method: 'DELETE' // \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434\n        });\n\n        if (!response.ok) {\n            throw new Error(`\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0441\u043f\u0438\u0441\u0430\u0442\u044c \u0430\u043f\u043f\u0430\u0440\u0430\u0442. \u0421\u0442\u0430\u0442\u0443\u0441: ${response.status}`);\n        }\n\n        alert(`\u0410\u043f\u043f\u0430\u0440\u0430\u0442 \u0441 ID ${shipId} \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043f\u0438\u0441\u0430\u043d.`);\n        fetchAndDisplayFleet(); // \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a\n\n    } catch (error) {\n        console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0438:', error);\n        alert(`\u041e\u0448\u0438\u0431\u043a\u0430: ${error.message}`);\n    }\n}\n\n// \u0414\u0435\u043b\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u0439: \u0441\u043b\u0443\u0448\u0430\u0435\u043c \u043a\u043b\u0438\u043a\u0438 \u043d\u0430 \u0432\u0441\u0435\u043c \u0441\u043f\u0438\u0441\u043a\u0435\nfleetList.addEventListener('click', (event) =&gt; {\n    // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0431\u044b\u043b \u043b\u0438 \u043a\u043b\u0438\u043a \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u0441 \u043a\u043b\u0430\u0441\u0441\u043e\u043c 'delete-btn'\n    if (event.target.classList.contains('delete-btn')) {\n        const shipId = event.target.dataset.shipId; // \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c ID \u0438\u0437 data-\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\n        deleteShip(shipId);\n    }\n});\n</code></pre></p> <p>\u0428\u0430\u0433 3: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c id \u0432 \u043c\u043e\u0434\u0435\u043b\u044c Spaceship</p> <p>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c id \u0432 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0431\u0434 \u0432 \u0444\u0430\u0439\u043b\u0435 <code>main.py</code></p> <pre><code>class Spaceship(BaseModel):\n    id: int\n    # \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434 \u043c\u043e\u0434\u0435\u043b\u0438...\n\ndb_spaceships = {\n    1: {\n        \"id\": 1,\n        # \u0414\u0430\u043d\u043d\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 1\n    },\n    2: {\n        \"id\": 2,\n        # \u0414\u0430\u043d\u043d\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 2\n    },\n    3: {\n        \"id\": 3,\n        # \u0414\u0430\u043d\u043d\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 3\n    }\n}\n</code></pre> <ul> <li><code>method: 'DELETE'</code>: \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434. \u0422\u0435\u043b\u043e \u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0437\u0434\u0435\u0441\u044c \u043d\u0435 \u043d\u0443\u0436\u043d\u044b.</li> <li><code>confirm()</code>: \u041f\u0440\u043e\u0441\u0442\u043e\u0435 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0435 \u043e\u043a\u043d\u043e \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e \u043d\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0447\u0442\u043e-\u0442\u043e \u0432\u0430\u0436\u043d\u043e\u0435.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/3/#4-put-","title":"4. \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 PUT-\u0437\u0430\u043f\u0440\u043e\u0441\u0430 (\u0421\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435)","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f <code>PUT</code>-\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0447\u0435\u043d\u044c \u043f\u043e\u0445\u043e\u0436\u0430 \u043d\u0430 <code>POST</code>.</p> <p>\u0412\u0430\u0448\u0430 \u043c\u0438\u0441\u0441\u0438\u044f, \u0435\u0441\u043b\u0438 \u0432\u044b \u0440\u0435\u0448\u0438\u0442\u0435 \u0435\u0435 \u043f\u0440\u0438\u043d\u044f\u0442\u044c:</p> <ol> <li>\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0443 \"\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c\" \u0440\u044f\u0434\u043e\u043c \u0441 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f.</li> <li>\u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \"\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c\" \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0444\u043e\u0440\u043c\u0443 (\u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u0443 \u0436\u0435, \u0447\u0442\u043e \u0438 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f) \u0442\u0435\u043a\u0443\u0449\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043a\u043e\u0440\u0430\u0431\u043b\u044f.</li> <li>\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0442\u0435\u043a\u0441\u0442 \u043a\u043d\u043e\u043f\u043a\u0438 \"\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c\" \u043d\u0430 \"\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c\".</li> <li>\u041f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435 \u0444\u043e\u0440\u043c\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c <code>PUT</code>-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 <code>/spaceships/{id}</code> \u0441 \u043f\u043e\u043b\u043d\u044b\u043c \u0442\u0435\u043b\u043e\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430.</li> <li>\u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u2014 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u043b\u043e\u0442\u0430.</li> </ol> <p>\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0412\u0430\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f <code>fetch</code> \u0441 <code>method: 'PUT'</code>, \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438 <code>Content-Type</code> \u0438 <code>body</code> \u0441 <code>JSON.stringify()</code>, \u0442\u043e\u0447\u043d\u043e \u0442\u0430\u043a \u0436\u0435, \u043a\u0430\u043a \u0432 <code>POST</code>-\u0437\u0430\u043f\u0440\u043e\u0441\u0435.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/3/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u041a\u0430\u043a\u043e\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 `fetch` \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0442\u0435\u043b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430?</p>  a) `data`  b) `body`  c) `payload` <p>2. \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a `'Content-Type': 'application/json'` \u0441\u043e\u043e\u0431\u0449\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0447\u0442\u043e...</p>  a) \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0442\u0432\u0435\u0442 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 JSON  b) \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0442\u0435\u043b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 JSON  c) \u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043e <p>3. \u0424\u0443\u043d\u043a\u0446\u0438\u044f `JSON.stringify(obj)` \u0432 JavaScript \u0434\u0435\u043b\u0430\u0435\u0442 \u0447\u0442\u043e?</p>  a) \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 JSON-\u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043e\u0431\u044a\u0435\u043a\u0442  b) \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0441\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u0430  c) \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 JavaScript-\u043e\u0431\u044a\u0435\u043a\u0442 \u0432 JSON-\u0441\u0442\u0440\u043e\u043a\u0443 <p>4. \u0414\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 `DELETE`-\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `fetch` \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0443\u0436\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c:</p>  a) \u041f\u0443\u0441\u0442\u043e\u0435 \u0442\u0435\u043b\u043e `body`  b) `method: 'DELETE'`  c) \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a `Authorization` <p>5. \u0414\u0435\u043b\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u0432 JavaScript \u2014 \u044d\u0442\u043e \u043a\u043e\u0433\u0434\u0430...</p>  a) \u041c\u044b \u0432\u0435\u0448\u0430\u0435\u043c \u043e\u0434\u0438\u043d \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432\u043c\u0435\u0441\u0442\u043e \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u043d\u0430 \u0434\u043e\u0447\u0435\u0440\u043d\u0438\u0435  b) \u041c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043f\u0440\u0430\u0432\u043e \u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0441\u043a\u0440\u0438\u043f\u0442\u0443  c) \u0421\u043e\u0431\u044b\u0442\u0438\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0441 \u0437\u0430\u0434\u0435\u0440\u0436\u043a\u043e\u0439 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u0430\u0448 \u0426\u0423\u041f \u0442\u0435\u043f\u0435\u0440\u044c \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u044b\u043c \u043d\u0430\u0431\u043e\u0440\u043e\u043c \u043a\u043e\u043c\u0430\u043d\u0434 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0444\u043b\u043e\u0442\u043e\u043c!</p> <ul> <li>\u2705 \u0412\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c <code>POST</code>-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0441 \u0442\u0435\u043b\u043e\u043c \u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432.</li> <li>\u2705 \u0412\u044b \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043b\u0438 <code>DELETE</code>-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0438\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432.</li> <li>\u2705 \u0412\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u043d\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e <code>PUT</code>-\u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0437\u0430\u043a\u0440\u0435\u043f\u0438\u0432 \u0441\u0432\u043e\u0438 \u0437\u043d\u0430\u043d\u0438\u044f.</li> </ul> <p>\u041f\u043e\u043b\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d! \u041d\u043e \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0442\u044c, \u0435\u0441\u043b\u0438 \u0441\u0432\u044f\u0437\u044c \u043f\u0440\u0435\u0440\u0432\u0430\u043b\u0430\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u0441\u043e\u043e\u0431\u0449\u0438\u043b \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435? \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043e\u0448\u0438\u0431\u043e\u043a \u043d\u0430 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0435.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0444\u043e\u0440\u043c\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0438 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442\u0441\u044f.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0430 \"\u0421\u043f\u0438\u0441\u0430\u0442\u044c \u0430\u043f\u043f\u0430\u0440\u0430\u0442\" \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430.</li> <li>\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u0441 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0441 \u043e\u0447\u0435\u043d\u044c \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c) \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0432\u0435\u0440\u043d\u0435\u0442 \u0432\u0430\u0448 FastAPI-\u0441\u0435\u0440\u0432\u0435\u0440.</li> </ul> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438:</p> <ul> <li>\u041e\u0448\u0438\u0431\u043a\u0430 <code>422</code> \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: \u0421\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e, \u0434\u0430\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0435, \u043d\u0435 \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0442 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e Pydantic. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 \u2014 <code>errorData.detail</code> \u043f\u043e\u043a\u0430\u0436\u0435\u0442, \u0432 \u043a\u0430\u043a\u043e\u043c \u043f\u043e\u043b\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430.</li> <li>\u041e\u0448\u0438\u0431\u043a\u0430 <code>415 Unsupported Media Type</code>: \u0412\u044b \u0437\u0430\u0431\u044b\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a <code>'Content-Type': 'application/json'</code>.</li> <li>\u041a\u043d\u043e\u043f\u043a\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442: \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043b\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0434\u0435\u043b\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u0438 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043b\u0438 \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435 <code>shipId</code> \u0438\u0437 <code>data-ship-id</code>.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/4/","title":"\u0413\u043b\u0430\u0432\u0430 4.4: \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 45 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/4/#1","title":"1. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a: \u0410\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u0435 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u044b \u0426\u0423\u041f","text":"<p>\u0412 \u043a\u043e\u0441\u043c\u043e\u0441\u0435 \u0432\u0441\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0439\u0442\u0438 \u043d\u0435 \u043f\u043e \u043f\u043b\u0430\u043d\u0443: \u0441\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0432\u0441\u043f\u044b\u0448\u043a\u0430 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0435\u0440\u0432\u0430\u0442\u044c \u0441\u0432\u044f\u0437\u044c, \u0432 \u0431\u043e\u0440\u0442\u043e\u0432\u043e\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 \u043a\u043e\u0440\u0430\u0431\u043b\u044f \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0442\u0438 \u0441\u0431\u043e\u0439, \u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0441 \u0417\u0435\u043c\u043b\u0438 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b.</p> <p>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u043d\u0430 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0435 \u2014 \u044d\u0442\u043e \u0430\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u0435 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u044b \u0432\u0430\u0448\u0435\u0433\u043e \u0426\u0423\u041f\u0430. \u041e\u043d\u0438 \u0434\u043e\u043b\u0436\u043d\u044b:</p> <ul> <li>\ud83d\udea8 \u041d\u0435 \u0434\u0430\u0442\u044c \u0432\u0441\u0435\u043c\u0443 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0443 \"\u0432\u0437\u043e\u0440\u0432\u0430\u0442\u044c\u0441\u044f\" \u0438\u0437-\u0437\u0430 \u043e\u0434\u043d\u043e\u0439 \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u043e\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b.</li> <li>\ud83d\udce1 \u0427\u0435\u0442\u043a\u043e \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0443 (\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e), \u0447\u0442\u043e \u0438\u043c\u0435\u043d\u043d\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a.</li> <li>\ud83d\udd27 \u041f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f.</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>\u0415\u0441\u043b\u0438 \u043e\u0442 \u043a\u043e\u0440\u0430\u0431\u043b\u044f \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442 \u0441\u0438\u0433\u043d\u0430\u043b <code>500 Internal Server Error</code>, \u043d\u0430 \u0434\u0438\u0441\u043f\u043b\u0435\u0435 \u0426\u0423\u041f\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043f\u043e\u044f\u0432\u043b\u044f\u0442\u044c\u0441\u044f \"\u041a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430 JavaScript \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 57\". \u0412\u043c\u0435\u0441\u0442\u043e \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c: \"\ud83d\udea8 \u0421\u0431\u043e\u0439 \u043d\u0430 \u0431\u043e\u0440\u0442\u0443 \u043a\u043e\u0440\u0430\u0431\u043b\u044f! \u0418\u043d\u0436\u0435\u043d\u0435\u0440\u044b \u0443\u0436\u0435 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u044b. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043f\u043e\u0437\u0436\u0435.\"</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/4/#2","title":"2. \u0422\u0438\u043f\u044b \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0430\u043d\u043e\u043c\u0430\u043b\u0438\u0439\"","text":"<p>\u041d\u0430 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0435 \u043c\u044b \u0441\u0442\u0430\u043b\u043a\u0438\u0432\u0430\u0435\u043c\u0441\u044f \u0441 \u0442\u0440\u0435\u043c\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438 \u043e\u0448\u0438\u0431\u043e\u043a \u043f\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 API:</p> <ol> <li>\u0421\u0435\u0442\u0435\u0432\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438: \u0421\u0432\u044f\u0437\u044c \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c \u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430. \u0410\u043d\u0442\u0435\u043d\u043d\u0430 \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u043a\u0430\u0431\u0435\u043b\u044c \u043f\u0435\u0440\u0435\u0440\u0435\u0437\u0430\u043d. <code>fetch</code> \"\u0443\u043f\u0430\u0434\u0435\u0442\" \u0432 \u0431\u043b\u043e\u043a <code>.catch()</code>.</li> <li>\u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 (4xx): \u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u0441 \u0417\u0435\u043c\u043b\u0438 \u0431\u044b\u043b\u0430 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439. \u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 ID, \u043e\u0448\u0438\u0431\u043a\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442, \u043d\u043e \u0441\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c <code>4xx</code>.</li> <li>\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 (5xx): \u0421\u0431\u043e\u0439 \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u043a\u043e\u0440\u0430\u0431\u043b\u0435. \u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0432 \u043a\u043e\u0434\u0435 API. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442, \u043d\u043e \u0441\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c <code>500+</code>.</li> </ol> <p>\u041c\u044b \u0443\u0436\u0435 \u043d\u0430\u0447\u0430\u043b\u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0438\u0445 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e <code>try...catch</code> \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 <code>response.ok</code>. \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u044d\u0442\u043e \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/4/#3-","title":"3. \u0426\u0435\u043d\u0442\u0440\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a","text":"<p>\u041f\u043e\u0432\u0442\u043e\u0440\u044f\u0442\u044c \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u043a\u043e\u0434 <code>try...catch</code> \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u2014 \u043f\u043b\u043e\u0445\u0430\u044f \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0430. \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u0443\u044e \"\u043e\u0431\u0435\u0440\u0442\u043a\u0443\" \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 <code>fetch</code>-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.</p> <p>\u0428\u0430\u0433 1: \u0421\u043e\u0437\u0434\u0430\u0435\u043c <code>api.js</code> \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043d\u043e\u0432\u044b\u0439 \u0444\u0430\u0439\u043b <code>api.js</code> \u0440\u044f\u0434\u043e\u043c \u0441 <code>app.js</code>. \u0412 \u043d\u0435\u0433\u043e \u043c\u044b \u0432\u044b\u043d\u0435\u0441\u0435\u043c \u0432\u0441\u044e \u043b\u043e\u0433\u0438\u043a\u0443 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 API. <pre><code>// api.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\n/**\n * \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a API.\n * \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 JSON.\n * @param {string} endpoint - \u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0442\u043e\u0447\u043a\u0430 API, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, '/spaceships'\n * @param {object} options - \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f fetch (method, headers, body)\n */\nasync function apiRequest(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n\n    try {\n        const response = await fetch(url, options);\n\n        // \u0415\u0441\u043b\u0438 \u043e\u0442\u0432\u0435\u0442 \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 JSON, \u0442\u043e \u0441\u0440\u0430\u0437\u0443 \u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u043c \u043e\u0448\u0438\u0431\u043a\u0443\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n            // \u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e DELETE \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0442\u0435\u043b\u0430\n            if (response.status === 204) return null;\n\n            throw new TypeError(`\u041f\u043e\u043b\u0443\u0447\u0435\u043d \u043d\u0435-JSON \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n\n        if (!response.ok) {\n            // \u0415\u0441\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u0435\u0440\u043d\u0443\u043b JSON \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, detail \u043e\u0442 FastAPI)\n            const errorMessage = data.detail || `HTTP \u043e\u0448\u0438\u0431\u043a\u0430! \u0421\u0442\u0430\u0442\u0443\u0441: ${response.status}`;\n            throw new Error(errorMessage);\n        }\n\n        return data;\n\n    } catch (error) {\n        console.error(`\u041e\u0448\u0438\u0431\u043a\u0430 API \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043a ${endpoint}:`, error);\n        // \"\u041f\u0440\u043e\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u043c\" \u043e\u0448\u0438\u0431\u043a\u0443 \u0434\u0430\u043b\u044c\u0448\u0435, \u0447\u0442\u043e\u0431\u044b \u0435\u0435 \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u043e\u0439\u043c\u0430\u0442\u044c \u0432 UI\n        throw error;\n    }\n}\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c <code>api.js</code> \u0432 <code>index.html</code> \u0412\u0430\u0436\u043d\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0435\u0433\u043e \u0414\u041e <code>app.js</code>, \u0442\u0430\u043a \u043a\u0430\u043a <code>app.js</code> \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0438. <pre><code>&lt;!-- index.html --&gt;\n&lt;body&gt;\n    &lt;!-- ... --&gt;\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</code></pre></p> <p>\u0428\u0430\u0433 3: \u0420\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043c <code>app.js</code> \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0435\u0440\u0435\u043f\u0438\u0448\u0435\u043c \u043d\u0430\u0448\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043d\u043e\u0432\u044b\u0439 <code>apiRequest</code>. <pre><code>// app.js\n\n// const API_BASE_URL = ...; // \u042d\u0442\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 \u043c\u043e\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c, \u043e\u043d\u0430 \u0442\u0435\u043f\u0435\u0440\u044c \u0432 api.js\n\n// ...\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0442\u0435\u043b\u0435\u043c\u0435\u0442\u0440\u0438\u0438...&lt;/li&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043d\u0430\u0448\u0443 \u043e\u0431\u0435\u0440\u0442\u043a\u0443!\n\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;\u0412 \u0440\u0435\u0435\u0441\u0442\u0440\u0435 \u043d\u0435\u0442 \u043d\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430.&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; { /* ... \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f ... */ });\n    } catch (error) {\n        fleetList.innerHTML = `&lt;li&gt;\ud83d\udd34 \u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0444\u043b\u043e\u0442\u0430: ${error.message}&lt;/li&gt;`;\n    }\n}\n\nasync function createShip(event) {\n    event.preventDefault();\n    const shipData = { /* ... \u0441\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b ... */ };\n\n    try {\n        createStatusMessage.textContent = '\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043d\u0430 \u0437\u0430\u043f\u0443\u0441\u043a...';\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(shipData)\n        };\n        const newShip = await apiRequest('/spaceships', options); // &lt;-- \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043d\u0430\u0448\u0443 \u043e\u0431\u0435\u0440\u0442\u043a\u0443!\n\n        createStatusMessage.textContent = `\ud83d\ude80 \u0423\u0441\u043f\u0435\u0448\u043d\u044b\u0439 \u0437\u0430\u043f\u0443\u0441\u043a! \u0410\u043f\u043f\u0430\u0440\u0430\u0442\u0443 \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d ID: ${newShip.id}`;\n        createShipForm.reset();\n        fetchAndDisplayFleet();\n    } catch (error) {\n        createStatusMessage.textContent = `\ud83d\udd34 \u041e\u0448\u0438\u0431\u043a\u0430: ${error.message}`;\n    }\n}\n\n// \u041f\u0435\u0440\u0435\u043f\u0438\u0448\u0438\u0442\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 (fetchShipById, deleteShip) \u043f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438!\n</code></pre> \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u0441\u044f \u043b\u043e\u0433\u0438\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u0435\u0442\u0435\u0432\u044b\u0445 \u043e\u0448\u0438\u0431\u043e\u043a, \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 <code>response.ok</code> \u0438 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 JSON \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435, \u0430 \u043a\u043e\u0434 \u0432 <code>app.js</code> \u0441\u0442\u0430\u043b \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u0447\u0438\u0449\u0435 \u0438 \u0447\u0438\u0442\u0430\u0435\u043c\u0435\u0435.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/4/#4","title":"4. \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043e\u0448\u0438\u0431\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e","text":"<p>\u0425\u043e\u0440\u043e\u0448\u0438\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043e\u043b\u0436\u0435\u043d \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0438\u0441\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0443 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c, \u0430 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0435\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0432 \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u043c \u0432\u0438\u0434\u0435.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440: \u0423\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0435 <code>createShip</code> \u041d\u0430\u0448 \u043a\u043e\u0434 \u0443\u0436\u0435 \u0434\u0435\u043b\u0430\u0435\u0442 \u044d\u0442\u043e: <code>createStatusMessage.textContent = ...</code>. \u041d\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0435\u0449\u0435 \u043b\u0443\u0447\u0448\u0435, \u0441\u043e\u0437\u0434\u0430\u0432 \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439.</p> <p>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 <code>app.js</code>: <pre><code>// app.js\nfunction showNotification(message, isError = false) {\n    const notificationArea = document.getElementById('create-status-message'); // \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? 'red' : 'green';\n}\n\n// \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432 createShip:\nasync function createShip(event) {\n    // ...\n    try {\n        // ...\n        const newShip = await apiRequest('/spaceships', options);\n        showNotification(`\ud83d\ude80 \u0423\u0441\u043f\u0435\u0448\u043d\u044b\u0439 \u0437\u0430\u043f\u0443\u0441\u043a! ID: ${newShip.id}`);\n        // ...\n    } catch (error) {\n        showNotification(`\ud83d\udd34 \u041e\u0448\u0438\u0431\u043a\u0430: ${error.message}`, true);\n    }\n}\n</code></pre> \u0422\u0435\u043f\u0435\u0440\u044c \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0435\u0434\u0438\u043d\u044b\u0439 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u0434\u043b\u044f \u043f\u043e\u043a\u0430\u0437\u0430 \u043a\u0430\u043a \u0443\u0441\u043f\u0435\u0448\u043d\u044b\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439, \u0442\u0430\u043a \u0438 \u043e\u0448\u0438\u0431\u043e\u043a.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/4/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u0411\u043b\u043e\u043a `.catch()` \u0432 \u043f\u0440\u043e\u043c\u0438\u0441\u0435 `fetch` \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u0435\u0441\u043b\u0438...</p>  a) \u0421\u0435\u0440\u0432\u0435\u0440 \u0432\u0435\u0440\u043d\u0443\u043b \u043e\u0448\u0438\u0431\u043a\u0443 404 Not Found  b) \u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0442\u0438 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043d\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430)  c) \u0421\u0435\u0440\u0432\u0435\u0440 \u0432\u0435\u0440\u043d\u0443\u043b \u043e\u0448\u0438\u0431\u043a\u0443 500 Internal Server Error <p>2. \u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u0430 \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0434\u043b\u044f API \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432?</p>  a) \u0427\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u0434\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043e\u0448\u0438\u0431\u043e\u043a \u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c UI-\u043b\u043e\u0433\u0438\u043a\u0443 \u0447\u0438\u0449\u0435  b) \u0427\u0442\u043e\u0431\u044b \u0432\u0441\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u043b\u0438\u0441\u044c \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e  c) \u042d\u0442\u043e \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0430 Fetch API <p>3. `response.headers.get('content-type')` \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f...</p>  a) \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u0432 \u0438\u0441\u0445\u043e\u0434\u044f\u0449\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435  b) \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0442\u0438\u043f\u0430 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 \u0432 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u043c \u043e\u0442\u0432\u0435\u0442\u0435 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430  c) \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 <p>4. `throw new Error(...)` \u0432\u043d\u0443\u0442\u0440\u0438 `try...catch` \u0438\u043b\u0438 `.then()` \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e\u0431\u044b...</p>  a) \u041e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0433\u043e JavaScript \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435  b) \"\u041f\u0440\u043e\u0432\u0430\u043b\u0438\u0442\u044c\" \u043f\u0440\u043e\u043c\u0438\u0441 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0439 \u0431\u043b\u043e\u043a `.catch()`  c) \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432 `alert` <p>5. \u041f\u043e\u0447\u0435\u043c\u0443 \u0432\u0430\u0436\u043d\u043e \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e, \u0430 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438?</p>  a) \u041f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0435 \u0441\u043c\u043e\u0442\u0440\u044f\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c  b) \u0427\u0442\u043e\u0431\u044b \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0431\u044b\u043b \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c \u0438 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0443\u0435\u043c\u044b\u043c  c) \u041e\u0431\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u0432\u0435\u0440\u043d\u044b \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0443\u043a\u0440\u0435\u043f\u0438\u043b\u0438 \u0441\u0432\u043e\u0439 \u0426\u0423\u041f, \u0441\u043e\u0437\u0434\u0430\u0432 \u043d\u0430\u0434\u0435\u0436\u043d\u044b\u0435 \u0430\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u0435 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u044b.</p> <ul> <li>\ud83d\udee1\ufe0f \u0412\u044b \u043f\u043e\u043d\u0438\u043c\u0430\u0435\u0442\u0435 \u0440\u0430\u0437\u043d\u0438\u0446\u0443 \u043c\u0435\u0436\u0434\u0443 \u0441\u0435\u0442\u0435\u0432\u044b\u043c\u0438, \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u043c\u0438 \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u043c\u0438 \u043e\u0448\u0438\u0431\u043a\u0430\u043c\u0438.</li> <li>\u2699\ufe0f \u0412\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e <code>apiRequest</code> \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u0441\u0435\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u0437\u0431\u0435\u0436\u0430\u0432 \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u0434\u0430.</li> <li>\ud83d\udce1 \u0412\u0430\u0448 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0442\u0435\u043f\u0435\u0440\u044c \u0443\u043c\u0435\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445, \u0434\u0435\u043b\u0430\u044f \u0435\u0433\u043e \u0431\u043e\u043b\u0435\u0435 \u0434\u0440\u0443\u0436\u0435\u043b\u044e\u0431\u043d\u044b\u043c \u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u044b\u043c.</li> </ul> <p>\u0410\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u0435 \u0449\u0438\u0442\u044b \u043f\u043e\u0434\u043d\u044f\u0442\u044b! \u041d\u043e \u0447\u0442\u043e \u043b\u0443\u0447\u0448\u0435: \u0446\u0435\u043f\u043e\u0447\u043a\u0438 <code>.then()</code> \u0438\u043b\u0438 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 <code>async/await</code>? \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c \u043e\u0431\u0430 \u043f\u043e\u0434\u0445\u043e\u0434\u0430 \u0438 \u043f\u043e\u0439\u043c\u0435\u043c, \u043a\u043e\u0433\u0434\u0430 \u043a\u0430\u043a\u043e\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u0430\u0448 \u043a\u043e\u0434 \u0432 <code>app.js</code> \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0435\u043d \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043d\u043e\u0432\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e <code>apiRequest</code>.</li> <li>\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c FastAPI \u0441\u0435\u0440\u0432\u0435\u0440 \u0438 \u043d\u0430\u0436\u0430\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0443 \"\u0417\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435\". \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0443 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435.</li> <li>\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u0441 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438. \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u0440\u0438\u0448\u043b\u043e \u043e\u0442 FastAPI.</li> </ul> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438:</p> <ul> <li><code>apiRequest is not defined</code>: \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u044b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0438 <code>api.js</code> \u0432 <code>index.html</code> \u043f\u0435\u0440\u0435\u0434 <code>app.js</code>.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0434\u0440\u0443\u0433\u0438\u0445 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043e\u0448\u0438\u0431\u043e\u043a \u0432 JavaScript.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/5/","title":"\u0413\u043b\u0430\u0432\u0430 4.5: Async/await vs Promise","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 30 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/5/#1","title":"1. \u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u044c: \u0414\u0432\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0432\u044f\u0437\u044c\u044e\"","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0426\u0423\u041f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043d\u0430 \u041c\u0430\u0440\u0441. \u041e\u0442\u0432\u0435\u0442 \u043f\u0440\u0438\u0434\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0438\u043d\u0443\u0442. \u041a\u0430\u043a \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f?</p> <p>\u0421\u043f\u043e\u0441\u043e\u0431 1: \"\u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430\" (Promise \u0441 <code>.then()</code>) \u0412\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0438 \u0434\u0430\u0435\u0442\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e: \"\u041a\u041e\u0413\u0414\u0410 \u043f\u0440\u0438\u0434\u0435\u0442 \u043e\u0442\u0432\u0435\u0442, \u0422\u041e\u0413\u0414\u0410 \u0432\u044b\u043f\u043e\u043b\u043d\u0438 \u0432\u043e\u0442 \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e\". \u042d\u0442\u043e \u043f\u043e\u0445\u043e\u0436\u0435 \u043d\u0430 \u0446\u0435\u043f\u043e\u0447\u043a\u0443 \u0441\u043e\u0431\u044b\u0442\u0438\u0439.</p> <p>\u0421\u043f\u043e\u0441\u043e\u0431 2: \"\u0420\u0435\u0436\u0438\u043c \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f\" (Async/await) \u0412\u044b \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u0435: \"\u042f \u041f\u041e\u0414\u041e\u0416\u0414\u0423 \u043e\u0442\u0432\u0435\u0442\u0430 \u043d\u0430 \u044d\u0442\u0443 \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043d\u043e \u043d\u0435 \u0431\u0443\u0434\u0443 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u0443\u043b\u044c\u0442\u044b \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f\". \u0412\u044b \u043a\u0430\u043a \u0431\u044b \u0441\u0442\u0430\u0432\u0438\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0439 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438 \u043d\u0430 \u043f\u0430\u0443\u0437\u0443, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044f \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0426\u0423\u041f\u0443 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c.</p> <p>\u041e\u0431\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u0430 \u0440\u0435\u0448\u0430\u044e\u0442 \u043e\u0434\u043d\u0443 \u0438 \u0442\u0443 \u0436\u0435 \u0437\u0430\u0434\u0430\u0447\u0443 \u2014 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u043c\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c\u0438. <code>async/await</code> \u2014 \u044d\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0431\u043e\u043b\u0435\u0435 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0438 \u0447\u0438\u0442\u0430\u0435\u043c\u044b\u0439 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \"\u043f\u043e\u0432\u0435\u0440\u0445\" \u043f\u0440\u043e\u043c\u0438\u0441\u043e\u0432.</p> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <ul> <li>Promise \u0441 <code>.then()</code>: \u042d\u0442\u043e \u043a\u0430\u043a \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0430 \u0441\u0442\u0438\u043a\u0435\u0440\u0435: \"\u041a\u043e\u0433\u0434\u0430 \u043c\u0430\u0440\u0441\u043e\u0445\u043e\u0434 \u043f\u0440\u0438\u0448\u043b\u0435\u0442 \u0444\u043e\u0442\u043e, \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0435\u0433\u043e \u0432 \u043e\u0442\u0434\u0435\u043b \u0430\u043d\u0430\u043b\u0438\u0437\u0430\".</li> <li>Async/await: \u042d\u0442\u043e \u043a\u0430\u043a \u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0430\u0441\u0441\u0438\u0441\u0442\u0435\u043d\u0442\u0443: \"\u041f\u043e\u0434\u043e\u0436\u0434\u0438 \u0444\u043e\u0442\u043e \u043e\u0442 \u043c\u0430\u0440\u0441\u043e\u0445\u043e\u0434\u0430, \u0430 \u044f \u043f\u043e\u043a\u0430 \u0437\u0430\u0439\u043c\u0443\u0441\u044c \u0440\u0430\u0441\u0447\u0435\u0442\u0430\u043c\u0438 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043d\u043e\u0432\u043e\u0439 \u0440\u0430\u043a\u0435\u0442\u044b\".</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/5/#2-promise-then","title":"2. Promise \u0441 <code>.then()</code>: \u041a\u043b\u0430\u0441\u0441\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0446\u0435\u043f\u043e\u0447\u043a\u0430 \u043a\u043e\u043c\u0430\u043d\u0434","text":"<p>\u042d\u0442\u043e \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u044c\u044e \u0432 JavaScript, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 \u0432 \u0433\u043b\u0430\u0432\u0435 4.1.</p> <p>\u0412\u0441\u043f\u043e\u043c\u043d\u0438\u043c \u043d\u0430\u0448 \u043f\u0435\u0440\u0432\u044b\u0439 \u043a\u043e\u0434: <pre><code>function getIssPositionWithPromises() {\n    console.log('\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044e \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0443 \"Promise\"...');\n\n    fetch('http://api.open-notify.org/iss-now.json')\n        .then(response =&gt; {\n            // \u042d\u0442\u0430\u043f 1: \u041f\u043e\u043b\u0443\u0447\u0435\u043d \u043e\u0442\u0432\u0435\u0442\n            if (!response.ok) {\n                throw new Error(`\u041e\u0448\u0438\u0431\u043a\u0430 HTTP: ${response.status}`);\n            }\n            return response.json(); // \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u043e\u043c\u0438\u0441\n        })\n        .then(data =&gt; {\n            // \u042d\u0442\u0430\u043f 2: \u0414\u0430\u043d\u043d\u044b\u0435 \u0440\u0430\u0441\u043f\u0430\u0440\u0441\u0435\u043d\u044b\n            console.log('\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0443 \"Promise\" \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u044b:', data.iss_position);\n        })\n        .catch(error =&gt; {\n            // \u042d\u0442\u0430\u043f 3 (\u041e\u0448\u0438\u0431\u043a\u0430): \u0427\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a \u043d\u0430 \u043b\u044e\u0431\u043e\u043c \u0438\u0437 \u044d\u0442\u0430\u043f\u043e\u0432\n            console.error('\u0421\u0431\u043e\u0439 \u0441\u0432\u044f\u0437\u0438 \u043f\u043e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0443 \"Promise\":', error);\n        });\n\n    console.log('...\u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0430, \u0426\u0423\u041f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443...');\n}\n</code></pre></p> <p>\u041f\u043b\u044e\u0441\u044b:</p> <ul> <li>\u042f\u0432\u043d\u0430\u044f \u0446\u0435\u043f\u043e\u0447\u043a\u0430 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439.</li> <li>\u0425\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439.</li> </ul> <p>\u041c\u0438\u043d\u0443\u0441\u044b:</p> <ul> <li>\"\u0410\u0434 \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0445 \u0432\u044b\u0437\u043e\u0432\u043e\u0432\" (Callback Hell): \u041f\u0440\u0438 \u0431\u043e\u043b\u044c\u0448\u043e\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u043a\u043e\u0434 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u0432 \"\u043b\u0435\u0441\u0435\u043d\u043a\u0443\" \u0438\u0437 <code>.then()</code>, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u043b\u043e\u0436\u043d\u043e \u0447\u0438\u0442\u0430\u0442\u044c.</li> <li>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043c\u0435\u043d\u0435\u0435 \u0438\u043d\u0442\u0443\u0438\u0442\u0438\u0432\u043d\u043e\u0439.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/5/#3-asyncawait","title":"3. Async/await: \u0421\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c","text":"<p><code>async/await</code> \u2014 \u044d\u0442\u043e \"\u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u0430\u0445\u0430\u0440\" \u043d\u0430\u0434 \u043f\u0440\u043e\u043c\u0438\u0441\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0438\u0441\u0430\u0442\u044c \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u043a\u043e\u0434 \u0442\u0430\u043a, \u0431\u0443\u0434\u0442\u043e \u043e\u043d \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439.</p> <p>\u041f\u0440\u0430\u0432\u0438\u043b\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f:</p> <ol> <li>\u041a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e <code>await</code> \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u043d\u0443\u0442\u0440\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043f\u043e\u043c\u0435\u0447\u0435\u043d\u043d\u043e\u0439 \u043a\u0430\u043a <code>async</code>.</li> <li><code>await</code> \u0441\u0442\u0430\u0432\u0438\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0434 \u0432\u044b\u0437\u043e\u0432\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u043e\u043c\u0438\u0441 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>fetch()</code> \u0438\u043b\u0438 <code>response.json()</code>).</li> <li><code>await</code> \"\u043f\u0440\u0438\u043e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\" \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 <code>async</code>-\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u043f\u0440\u043e\u043c\u0438\u0441 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d, \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.</li> </ol> <p>\u0422\u043e\u0442 \u0436\u0435 \u043a\u043e\u0434, \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u0441 <code>async/await</code>: <pre><code>async function getIssPositionWithAsyncAwait() {\n    console.log('\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044e \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0443 \"Async/await\"...');\n\n    try {\n        // \u042d\u0442\u0430\u043f 1: \u0416\u0434\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\n        const response = await fetch('http://api.open-notify.org/iss-now.json');\n\n        if (!response.ok) {\n            throw new Error(`\u041e\u0448\u0438\u0431\u043a\u0430 HTTP: ${response.status}`);\n        }\n\n        // \u042d\u0442\u0430\u043f 2: \u0416\u0434\u0435\u043c, \u043f\u043e\u043a\u0430 \u0442\u0435\u043b\u043e \u043e\u0442\u0432\u0435\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043e \u0432 JSON\n        const data = await response.json();\n\n        console.log('\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0443 \"Async/await\" \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u044b:', data.iss_position);\n    } catch (error) {\n        // \u042d\u0442\u0430\u043f 3 (\u041e\u0448\u0438\u0431\u043a\u0430): \u041b\u043e\u0432\u0438\u043c \u043b\u044e\u0431\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u0438\u0437 \u0431\u043b\u043e\u043a\u0430 try\n        console.error('\u0421\u0431\u043e\u0439 \u0441\u0432\u044f\u0437\u0438 \u043f\u043e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0443 \"Async/await\":', error);\n    }\n\n    console.log('...\u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0430, \u0426\u0423\u041f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443...');\n}\n</code></pre></p> <p>\u041f\u043b\u044e\u0441\u044b:</p> <ul> <li>\u0427\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u044c: \u041a\u043e\u0434 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043f\u043e\u0447\u0442\u0438 \u043a\u0430\u043a \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u043a\u043e\u0434, \u0435\u0433\u043e \u043b\u0435\u0433\u043a\u043e \u0447\u0438\u0442\u0430\u0442\u044c \u0441\u0432\u0435\u0440\u0445\u0443 \u0432\u043d\u0438\u0437.</li> <li>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0438 \u043f\u0440\u0438\u0432\u044b\u0447\u043d\u044b\u0439 \u0431\u043b\u043e\u043a <code>try...catch</code>.</li> <li>\u041e\u0442\u043b\u0430\u0434\u043a\u0430: \u0413\u043e\u0440\u0430\u0437\u0434\u043e \u043f\u0440\u043e\u0449\u0435 \u043e\u0442\u043b\u0430\u0436\u0438\u0432\u0430\u0442\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0442\u043e\u0447\u043a\u0438 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0430 (breakpoints) \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441 <code>await</code>.</li> </ul> <p>\u041c\u0438\u043d\u0443\u0441\u044b:</p> <ul> <li>\u041b\u0435\u0433\u043a\u043e \u0437\u0430\u0431\u044b\u0442\u044c <code>await</code> \u0438\u043b\u0438 <code>async</code>, \u0447\u0442\u043e \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u0442 \u043a \u043e\u0448\u0438\u0431\u043a\u0430\u043c.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/5/#4","title":"4. \u041a\u043e\u0433\u0434\u0430 \u043a\u0430\u043a\u043e\u0439 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c?","text":"\u0421\u0438\u0442\u0443\u0430\u0446\u0438\u044f \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u041f\u043e\u0447\u0435\u043c\u0443? \u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0441\u043b\u0443\u0447\u0430\u0435\u0432 <code>async/await</code> \u041a\u043e\u0434 \u0447\u0438\u0449\u0435, \u043f\u0440\u043e\u0449\u0435 \u0447\u0438\u0442\u0430\u0442\u044c \u0438 \u043e\u0442\u043b\u0430\u0436\u0438\u0432\u0430\u0442\u044c. \u042d\u0442\u043e \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442. \u041f\u0440\u043e\u0441\u0442\u0430\u044f \u0446\u0435\u043f\u043e\u0447\u043a\u0430 \u0438\u0437 1-2 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 Promise \u0441 <code>.then()</code> \u0412\u043f\u043e\u043b\u043d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442, \u043a\u043e\u0434 \u043e\u0441\u0442\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u043f\u0430\u043a\u0442\u043d\u044b\u043c. \u041f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u043e\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 <code>Promise.all()</code> \u042d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u043c\u0438\u0441\u043e\u0432 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0438 \u0434\u043e\u0436\u0434\u0430\u0442\u044c\u0441\u044f, \u043f\u043e\u043a\u0430 \u0432\u0441\u0435 \u043e\u043d\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u0441\u044f. <code>async/await</code> \u043e\u0442\u043b\u0438\u0447\u043d\u043e \u0441 \u043d\u0438\u043c \u0441\u043e\u0447\u0435\u0442\u0430\u0435\u0442\u0441\u044f. <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0441 <code>Promise.all()</code>: <pre><code>async function getParallelData() {\n    try {\n        // \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043e\u0431\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\n        const [shipsResponse, launchesResponse] = await Promise.all([\n            fetch('https://api.spacexdata.com/v4/rockets'),\n            fetch('https://api.spacexdata.com/v4/launches/latest')\n        ]);\n\n        if (!shipsResponse.ok || !launchesResponse.ok) {\n            throw new Error('\u041e\u0434\u0438\u043d \u0438\u0437 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043f\u0440\u043e\u0432\u0430\u043b\u0438\u043b\u0441\u044f!');\n        }\n\n        const rockets = await shipsResponse.json();\n        const latestLaunch = await launchesResponse.json();\n\n        console.log(`\u0412\u0441\u0435\u0433\u043e \u0440\u0430\u043a\u0435\u0442 \u0432 \u0444\u043b\u043e\u0442\u0435: ${rockets.length}`);\n        console.log(`\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0437\u0430\u043f\u0443\u0441\u043a: ${latestLaunch.name}`);\n    } catch (error) {\n        console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:', error);\n    }\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/5/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. `async/await` \u2014 \u044d\u0442\u043e...</p>  a) \u0417\u0430\u043c\u0435\u043d\u0430 \u043f\u0440\u043e\u043c\u0438\u0441\u0430\u043c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043f\u043e-\u0434\u0440\u0443\u0433\u043e\u043c\u0443  b) \u0411\u043e\u043b\u0435\u0435 \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0440\u043e\u043c\u0438\u0441\u0430\u043c\u0438  c) \u0421\u043f\u043e\u0441\u043e\u0431 \u0441\u0434\u0435\u043b\u0430\u0442\u044c JavaScript \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u043c <p>2. \u041a\u0430\u043a\u043e\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f `await`?</p>  a) `promise`  b) `function`  c) `async` <p>3. \u0413\u043b\u0430\u0432\u043d\u043e\u0435 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u043e `async/await` \u043f\u0435\u0440\u0435\u0434 `.then()`:</p>  a) \u0411\u043e\u043b\u0435\u0435 \u0432\u044b\u0441\u043e\u043a\u0430\u044f \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f  b) \u041b\u0443\u0447\u0448\u0430\u044f \u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u044c \u043a\u043e\u0434\u0430 \u0438 \u0443\u0434\u043e\u0431\u043d\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u0447\u0435\u0440\u0435\u0437 `try...catch`  c) \u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432 \u0441\u0442\u0430\u0440\u044b\u0445 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430\u0445 \u0431\u0435\u0437 \u043f\u043e\u043b\u0438\u0444\u0438\u043b\u043b\u043e\u0432 <p>4. \u0427\u0442\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0434\u0435\u0442, \u0435\u0441\u043b\u0438 \u0437\u0430\u0431\u044b\u0442\u044c `await` \u043f\u0435\u0440\u0435\u0434 `fetch()` \u0432\u043d\u0443\u0442\u0440\u0438 `async`-\u0444\u0443\u043d\u043a\u0446\u0438\u0438?</p>  a) \u041a\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0441\u044f \u0431\u0435\u0437 \u043e\u0448\u0438\u0431\u043e\u043a, \u043d\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043f\u0440\u043e\u043c\u0438\u0441, \u0430 \u043d\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442  b) JavaScript \u0432\u044b\u0434\u0430\u0441\u0442 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443  c) \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \"\u0437\u0430\u0432\u0438\u0441\u043d\u0435\u0442\" \u0432 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u0438 \u043e\u0442\u0432\u0435\u0442\u0430 <p>5. `Promise.all()` \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f:</p>  a) \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u043c\u0438\u0441\u043e\u0432 \u0441\u0442\u0440\u043e\u0433\u043e \u043f\u043e \u043e\u0447\u0435\u0440\u0435\u0434\u0438  b) \u0417\u0430\u043f\u0443\u0441\u043a\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043f\u0440\u043e\u043c\u0438\u0441\u043e\u0432 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u043e \u0438 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u0438\u0445 \u0432\u0441\u0435\u0445  c) \u0412\u044b\u0431\u043e\u0440\u0430 \u0441\u0430\u043c\u043e\u0433\u043e \u0431\u044b\u0441\u0442\u0440\u043e\u0433\u043e \u0438\u0437 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043f\u0440\u043e\u043c\u0438\u0441\u043e\u0432 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0438\u0437\u0443\u0447\u0438\u043b\u0438 \u0434\u0432\u0430 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u043c\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c\u0438 \u0438 \u043f\u043e\u043d\u044f\u043b\u0438, \u043f\u043e\u0447\u0435\u043c\u0443 <code>async/await</code> \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0432 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432.</p> <ul> <li>\ud83d\udd17 \u0412\u044b \u043e\u0441\u0432\u0435\u0436\u0438\u043b\u0438 \u0437\u043d\u0430\u043d\u0438\u044f \u043e Promise \u0441 <code>.then()</code>.</li> <li>\ud83d\udee0\ufe0f \u0412\u044b \u0433\u043b\u0443\u0431\u043e\u043a\u043e \u043f\u043e\u043d\u044f\u043b\u0438, \u043a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 <code>async/await</code> \u0438 \u0435\u0433\u043e \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430.</li> <li>\u26a1 \u0412\u044b \u0443\u0437\u043d\u0430\u043b\u0438 \u043e <code>Promise.all</code> \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.</li> </ul> <p>\u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u044b \u0441\u0432\u044f\u0437\u0438 \u0438\u0437\u0443\u0447\u0435\u043d\u044b! \u0412 \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u0439 \u0433\u043b\u0430\u0432\u0435 \u044d\u0442\u043e\u0433\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0430 \u043c\u044b \u0441\u043e\u0431\u0435\u0440\u0435\u043c \u0432\u0441\u0435 \u043d\u0430\u0448\u0438 \u0437\u043d\u0430\u043d\u0438\u044f \u0432\u043e\u0435\u0434\u0438\u043d\u043e \u0438 \u0434\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043d\u0430\u0448 \"\u0426\u0435\u043d\u0442\u0440 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u041f\u043e\u043b\u0435\u0442\u0430\u043c\u0438\", \u0441\u043e\u0437\u0434\u0430\u0432 \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439.</p> <p>\ud83d\udccc \u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430:</p> <ul> <li>\u041f\u0435\u0440\u0435\u043f\u0438\u0448\u0438\u0442\u0435 \u0432\u0441\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432 \u0432\u0430\u0448\u0435\u043c <code>app.js</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0449\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 <code>.then()</code>, \u043d\u0430 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 <code>async/await</code>.</li> <li>\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0435\u0449\u0435 \u043e\u0434\u0438\u043d \u0437\u0430\u043f\u0440\u043e\u0441 \u0432 <code>Promise.all()</code> (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043a <code>https://api.spacexdata.com/v4/starlink</code>) \u0438 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435.</li> </ul> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438:</p> <ul> <li><code>await is only valid in async functions</code>: \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u0433\u0434\u0435 \u0432\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 <code>await</code>, \u043f\u043e\u043c\u0435\u0447\u0435\u043d\u0430 \u043a\u0430\u043a <code>async</code>.</li> <li>\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 <code>[object Promise]</code>: \u0412\u044b \u0437\u0430\u0431\u044b\u043b\u0438 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c <code>await</code> \u043f\u0435\u0440\u0435\u0434 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0435\u0439 \u043f\u0440\u043e\u043c\u0438\u0441.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/6/","title":"\u0413\u043b\u0430\u0432\u0430 4.6: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0434\u043b\u044f API","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 1 \u0447\u0430\u0441 15 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/6/#1","title":"1. \u0424\u0438\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0431\u043e\u0440\u043a\u0430: \u0417\u0430\u043f\u0443\u0441\u043a \"\u0426\u0435\u043d\u0442\u0440\u0430 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u041f\u043e\u043b\u0435\u0442\u0430\u043c\u0438\"","text":"<p>\u041c\u044b \u0438\u0437\u0443\u0447\u0438\u043b\u0438 \u0432\u0441\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438: \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \"\u0430\u043d\u0442\u0435\u043d\u043d\u0443\" (<code>Fetch</code>), \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \"\u043a\u043e\u043c\u0430\u043d\u0434\u044b\" (<code>GET</code>, <code>POST</code>, <code>DELETE</code>), \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043b\u0438 \"\u0430\u0432\u0430\u0440\u0438\u0439\u043d\u044b\u0435 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u044b\" (\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a).</p> <p>\u041d\u0430\u0441\u0442\u0430\u043b\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0431\u0440\u0430\u0442\u044c \u0432\u0441\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u0432\u043e\u0435\u0434\u0438\u043d\u043e \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043d\u0430\u0448 \u0426\u0423\u041f \u2014 \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u044b\u0439, \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0444\u043b\u043e\u0442\u043e\u043c.</p> <p>\u041d\u0430\u0448\u0430 \u0446\u0435\u043b\u044c:</p> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0435\u0434\u0438\u043d\u044b\u0439, \u0447\u0438\u0441\u0442\u044b\u0439 \u0438 \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441.</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 CRUD-\u0446\u0438\u043a\u043b: \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439.</li> <li>\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u0443\u044e \u043e\u0431\u0440\u0430\u0442\u043d\u0443\u044e \u0441\u0432\u044f\u0437\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430, \u0443\u0441\u043f\u0435\u0445, \u043e\u0448\u0438\u0431\u043a\u0430).</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>\u041c\u044b \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043e\u0442 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u043a\u043e\u043d\u0441\u043e\u043b\u0435\u0439 \u043a \u0433\u043b\u0430\u0432\u043d\u043e\u043c\u0443 \u044d\u043a\u0440\u0430\u043d\u0443 \u0426\u0423\u041f\u0430. \u041d\u0430 \u043d\u0435\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043a\u043d\u043e\u043f\u043a\u0438 \u0438 \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u044b, \u0447\u0442\u043e\u0431\u044b \u043e\u0434\u0438\u043d \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043c\u043e\u0433 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u0441\u0435\u043c \u0444\u043b\u043e\u0442\u043e\u043c, \u043d\u0435 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u044f\u0441\u044c \u043c\u0435\u0436\u0434\u0443 \u0434\u0435\u0441\u044f\u0442\u043a\u0430\u043c\u0438 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/6/#2","title":"2. \u041f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430: \"\u041f\u0440\u0438\u0431\u043e\u0440\u043d\u0430\u044f \u043f\u0430\u043d\u0435\u043b\u044c\"","text":"<p>\u041d\u0430\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0431\u043e\u043b\u0435\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 HTML. \u041c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \"\u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438\" \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439 \u0438 \u043c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u043d\u043e \u0434\u043b\u044f \u0438\u0445 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</p> <p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c <code>index.html</code>: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u0426\u0423\u041f v2.0 - \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0424\u043b\u043e\u0442\u043e\u043c&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt; &lt;!-- \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0442\u0438\u043b\u0438 --&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;\u041f\u0430\u043d\u0435\u043b\u044c \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0444\u043b\u043e\u0442\u043e\u043c&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        &lt;section id=\"fleet-controls\"&gt;\n            &lt;button id=\"load-fleet-btn\"&gt;\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u043b\u043e\u0442\u0430&lt;/button&gt;\n            &lt;button id=\"show-create-form-btn\"&gt;\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0430\u043f\u043f\u0430\u0440\u0430\u0442&lt;/button&gt;\n        &lt;/section&gt;\n\n        &lt;section id=\"fleet-display\"&gt;\n            &lt;h2&gt;\u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u0441\u043e\u0441\u0442\u0430\u0432 \u0444\u043b\u043e\u0442\u0430&lt;/h2&gt;\n            &lt;div id=\"fleet-list\" class=\"cards-container\"&gt;\n                &lt;!-- \u041a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439 \u0431\u0443\u0434\u0443\u0442 \u0437\u0434\u0435\u0441\u044c --&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n\n    &lt;!-- \u041c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u043d\u043e \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f/\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (\u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0441\u043a\u0440\u044b\u0442\u043e) --&gt;\n    &lt;div id=\"modal\" class=\"modal-overlay\" style=\"display: none;\"&gt;\n        &lt;div class=\"modal-content\"&gt;\n            &lt;h2 id=\"modal-title\"&gt;\u0417\u0430\u043f\u0443\u0441\u043a \u043d\u043e\u0432\u043e\u0433\u043e \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430&lt;/h2&gt;\n            &lt;form id=\"ship-form\"&gt;\n                &lt;input type=\"hidden\" id=\"ship-id\"&gt;\n                &lt;input type=\"text\" id=\"ship-name\" placeholder=\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\" required&gt;\n                &lt;input type=\"text\" id=\"ship-type\" placeholder=\"\u0422\u0438\u043f\" required&gt;\n                &lt;input type=\"number\" id=\"ship-year\" placeholder=\"\u0413\u043e\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\" required&gt;\n                &lt;input type=\"text\" id=\"ship-status\" placeholder=\"\u0421\u0442\u0430\u0442\u0443\u0441\" required&gt;\n                &lt;div class=\"modal-actions\"&gt;\n                    &lt;button type=\"submit\" id=\"save-btn\"&gt;\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c&lt;/button&gt;\n                    &lt;button type=\"button\" id=\"cancel-btn\"&gt;\u041e\u0442\u043c\u0435\u043d\u0430&lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/form&gt;\n            &lt;div id=\"notification-area\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/6/#3-stylecss","title":"3. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439\" \u0434\u0438\u0437\u0430\u0439\u043d: <code>style.css</code>","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>style.css</code>, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0448 \u0426\u0423\u041f \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u043b \u0434\u043e\u0441\u0442\u043e\u0439\u043d\u043e. <pre><code>/* style.css */\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background-color: #1a1a2e;\n    color: #e0e0e0;\n    margin: 0;\n    padding: 20px;\n}\nheader { text-align: center; margin-bottom: 20px; }\nbutton {\n    background-color: #4a4e69;\n    color: white;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\nbutton:hover { background-color: #6a6e94; }\n.cards-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 20px;\n}\n.card {\n    background-color: #2a2a4e;\n    border: 1px solid #4a4e69;\n    border-radius: 8px;\n    padding: 15px;\n}\n.card h3 { margin-top: 0; color: #9394a5; }\n.card-actions { margin-top: 15px; }\n\n/* \u0421\u0442\u0438\u043b\u0438 \u0434\u043b\u044f \u043c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u043a\u043d\u0430 */\n.modal-overlay {\n    position: fixed;\n    top: 0; left: 0;\n    width: 100%; height: 100%;\n    background-color: rgba(0,0,0,0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.modal-content {\n    background: #1a1a2e;\n    padding: 20px;\n    border-radius: 8px;\n    border: 1px solid #4a4e69;\n    width: 90%;\n    max-width: 500px;\n}\n#ship-form input {\n    width: calc(100% - 20px);\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 4px;\n    border: 1px solid #4a4e69;\n    background-color: #2a2a4e;\n    color: white;\n}\n.modal-actions { text-align: right; }\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/6/#4-appjs","title":"4. \u041f\u043e\u043b\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u0441\u0431\u043e\u0440\u043a\u0430 \u043b\u043e\u0433\u0438\u043a\u0438: <code>app.js</code>","text":"<p>\u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u043d\u0430\u043f\u0438\u0448\u0435\u043c \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e <code>app.js</code>, \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u044f \u0432\u0441\u0435 \u043d\u0430\u0448\u0438 \u0437\u043d\u0430\u043d\u0438\u044f.</p> <pre><code>// app.js\n\n// --- DOM \u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b ---\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetListContainer = document.getElementById('fleet-list');\nconst modal = document.getElementById('modal');\nconst modalTitle = document.getElementById('modal-title');\nconst shipForm = document.getElementById('ship-form');\nconst saveBtn = document.getElementById('save-btn');\nconst cancelBtn = document.getElementById('cancel-btn');\nconst showCreateFormBtn = document.getElementById('show-create-form-btn');\nconst notificationArea = document.getElementById('notification-area');\n\n// --- \u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f UI ---\n\nfunction showNotification(message, isError = false) {\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? '#ff6b6b' : '#6bff6b';\n}\n\nfunction openModalForCreate() {\n    shipForm.reset();\n    document.getElementById('ship-id').value = '';\n    modalTitle.textContent = '\u0417\u0430\u043f\u0443\u0441\u043a \u043d\u043e\u0432\u043e\u0433\u043e \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430';\n    modal.style.display = 'flex';\n}\n\nfunction openModalForEdit(ship) {\n    shipForm.reset();\n    document.getElementById('ship-id').value = ship.id;\n    document.getElementById('ship-name').value = ship.name;\n    document.getElementById('ship-type').value = ship.type;\n    document.getElementById('ship-year').value = ship.launch_year;\n    document.getElementById('ship-status').value = ship.status;\n    modalTitle.textContent = `\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: ${ship.name}`;\n    modal.style.display = 'flex';\n}\n\nfunction closeModal() {\n    modal.style.display = 'none';\n    notificationArea.textContent = '';\n}\n\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;\u0422\u0438\u043f: ${ship.type}&lt;/p&gt;\n        &lt;p&gt;\u0413\u043e\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u0430: ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;\u0421\u0442\u0430\u0442\u0443\u0441: ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;\u0421\u043f\u0438\u0441\u0430\u0442\u044c&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n\n// --- \u041b\u043e\u0433\u0438\u043a\u0430 API \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f ---\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0442\u0435\u043b\u0435\u043c\u0435\u0442\u0440\u0438\u0438...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships');\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;\u0412 \u0440\u0435\u0435\u0441\u0442\u0440\u0435 \u043d\u0435\u0442 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432.&lt;/p&gt;';\n            return;\n        }\n        ships.forEach(ship =&gt; {\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0444\u043b\u043e\u0442\u0430: ${error.message}&lt;/p&gt;`;\n    }\n}\n\nasync function handleSaveShip(event) {\n    event.preventDefault();\n    const shipId = document.getElementById('ship-id').value;\n    const shipData = {\n        name: document.getElementById('ship-name').value,\n        type: document.getElementById('ship-type').value,\n        launch_year: parseInt(document.getElementById('ship-year').value),\n        status: document.getElementById('ship-status').value\n    };\n\n    try {\n        let response;\n        if (shipId) {\n            // \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 (PUT)\n            response = await apiRequest(`/spaceships/${shipId}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`\u0410\u043f\u043f\u0430\u0440\u0430\u0442 \"${response.name}\" \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d!`);\n        } else {\n            // \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 (POST)\n            response = await apiRequest('/spaceships', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`\u0410\u043f\u043f\u0430\u0440\u0430\u0442 \"${response.name}\" \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u043f\u0443\u0449\u0435\u043d! ID: ${response.id}`);\n        }\n\n        setTimeout(() =&gt; {\n            closeModal();\n            fetchAndDisplayFleet();\n        }, 1500);\n\n    } catch (error) {\n        showNotification(error.message, true);\n    }\n}\n\nasync function handleDeleteShip(shipId) {\n    if (!confirm(`\u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043f\u0438\u0441\u0430\u0442\u044c \u0430\u043f\u043f\u0430\u0440\u0430\u0442 \u0441 ID ${shipId}?`)) return;\n\n    try {\n        await apiRequest(`/spaceships/${shipId}`, { method: 'DELETE' });\n        alert('\u0410\u043f\u043f\u0430\u0440\u0430\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043f\u0438\u0441\u0430\u043d.');\n        fetchAndDisplayFleet();\n    } catch (error) {\n        alert(`\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0438: ${error.message}`);\n    }\n}\n\n// --- \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 ---\n\ndocument.addEventListener('DOMContentLoaded', fetchAndDisplayFleet);\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\nshowCreateFormBtn.addEventListener('click', openModalForCreate);\ncancelBtn.addEventListener('click', closeModal);\nshipForm.addEventListener('submit', handleSaveShip);\n\nfleetListContainer.addEventListener('click', async (event) =&gt; {\n    const target = event.target;\n    if (target.classList.contains('delete-btn')) {\n        handleDeleteShip(target.dataset.shipId);\n    }\n    if (target.classList.contains('edit-btn')) {\n        try {\n            const ship = await apiRequest(`/spaceships/${target.dataset.shipId}`);\n            openModalForEdit(ship);\n        } catch (error) {\n            alert(`\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: ${error.message}`);\n        }\n    }\n});\n</code></pre>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/6/#5","title":"5. \u0424\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\u0441\u043f\u044b\u0442\u0430\u043d\u0438\u044f","text":"<ol> <li>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 FastAPI \u0441\u0435\u0440\u0432\u0435\u0440: <code>uvicorn main:app --reload</code></li> <li>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>index.html</code> \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 (\u0447\u0435\u0440\u0435\u0437 Live Server).</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043f\u043e\u043b\u043d\u044b\u0439 \u0446\u0438\u043a\u043b:<ul> <li>\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439 \u0434\u043e\u043b\u0436\u0435\u043d \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438.</li> <li>\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \"\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\", \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0444\u043e\u0440\u043c\u0443 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043d\u043e\u0432\u044b\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c \u043f\u043e\u044f\u0432\u0438\u043b\u0441\u044f \u0432 \u0441\u043f\u0438\u0441\u043a\u0435.</li> <li>\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \"\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c\" \u043d\u0430 \u043b\u044e\u0431\u043e\u043c \u043a\u043e\u0440\u0430\u0431\u043b\u0435, \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e\u0431\u043d\u043e\u0432\u0438\u043b\u0430\u0441\u044c.</li> <li>\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \"\u0421\u043f\u0438\u0441\u0430\u0442\u044c\" \u043d\u0430 \u043b\u044e\u0431\u043e\u043c \u043a\u043e\u0440\u0430\u0431\u043b\u0435, \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043e\u043d \u0438\u0441\u0447\u0435\u0437 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0432\u0441\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u043e\u0448\u0438\u0431\u043e\u043a (\u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430).</li> </ul> </li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%204%20-%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%20%D1%81%20API%20%D0%BD%D0%B0%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B5/6/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u041c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u043d\u043e \u0432 \u0432\u0435\u0431-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0435 \u2014 \u044d\u0442\u043e...</p>  a) \u041d\u043e\u0432\u044b\u0439 \u0442\u0435\u0433 \u0432 HTML6  b) \u0412\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u0434\u0438\u0430\u043b\u043e\u0433, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441  c) \u041e\u043a\u043d\u043e \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a \u043a\u043e\u043d\u0441\u043e\u043b\u0438 <p>2. \u0421\u043e\u0431\u044b\u0442\u0438\u0435 `DOMContentLoaded` \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442, \u043a\u043e\u0433\u0434\u0430...</p>  a) \u041f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u044b \u0432\u0441\u0435 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u0438 \u0441\u0442\u0438\u043b\u0438  b) \u0411\u0440\u0430\u0443\u0437\u0435\u0440 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043b DOM-\u0434\u0435\u0440\u0435\u0432\u043e \u0438\u0437 HTML, \u043d\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u044b \u043c\u043e\u0433\u0443\u0442 \u0435\u0449\u0435 \u0433\u0440\u0443\u0437\u0438\u0442\u044c\u0441\u044f  c) \u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b <p>3. \u041f\u043e\u0447\u0435\u043c\u0443 \u0432 \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043e\u0434\u043d\u0443 \u0444\u043e\u0440\u043c\u0443 \u0438 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f, \u0438 \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f?</p>  a) \u0427\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f HTML-\u043a\u043e\u0434\u0430 \u0438 \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443  b) \u041f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u043d\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043e\u0434\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u044b \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435  c) \u042d\u0442\u043e \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0435 FastAPI <p>4. `data-ship-id=\"${ship.id}\"` \u2014 \u044d\u0442\u043e \u043f\u0440\u0438\u043c\u0435\u0440...</p>  a) CSS-\u043a\u043b\u0430\u0441\u0441\u0430  b) JavaScript-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439  c) \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e data-\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 HTML <p>5. \u0420\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433 \u043a\u043e\u0434\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432\u044b\u043d\u043e\u0441 \u043b\u043e\u0433\u0438\u043a\u0438 \u0432 `api.js`) \u043d\u0443\u0436\u0435\u043d \u0434\u043b\u044f...</p>  a) \u0423\u0441\u043b\u043e\u0436\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u0434\u0430 \u0434\u043b\u044f \u0437\u0430\u0449\u0438\u0442\u044b \u043e\u0442 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f  b) \u0423\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u0438, \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u043e\u0441\u0442\u0438 \u0438 \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u0434\u0430  c) \u0423\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0438\u0442\u043e\u0433\u043e\u0432\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b</p> <p>\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e \u0438 \u0437\u0430\u043f\u0443\u0441\u043a \u0441\u0432\u043e\u0435\u0433\u043e \"\u0426\u0435\u043d\u0442\u0440\u0430 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u041f\u043e\u043b\u0435\u0442\u0430\u043c\u0438\".</p> <ul> <li>\ud83d\udda5\ufe0f \u0412\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0438 \u0441\u0442\u0438\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 HTML/CSS \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441.</li> <li>\u2699\ufe0f \u0412\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0447\u0438\u0441\u0442\u044b\u0439, \u043c\u043e\u0434\u0443\u043b\u044c\u043d\u044b\u0439 JavaScript-\u043a\u043e\u0434, \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0449\u0438\u0439 \u043f\u043e\u043b\u043d\u044b\u0439 CRUD-\u0446\u0438\u043a\u043b.</li> <li>\ud83d\udef0\ufe0f \u0412\u0430\u0448 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u0442\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0431\u044d\u043a\u0435\u043d\u0434\u043e\u043c, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430 FastAPI.</li> </ul> <p>\u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441 \u0443\u0441\u043f\u0435\u0448\u043d\u044b\u043c \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435\u043c \u0413\u043b\u0430\u0432\u044b 4! \u0412\u044b \u043f\u0440\u043e\u0448\u043b\u0438 \u043f\u043e\u043b\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \u043e\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e <code>fetch</code>-\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u0441 \u0432\u0430\u0448\u0438\u043c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u043c API.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/1/","title":"\u0413\u043b\u0430\u0432\u0430 5.1: \u0428\u0430\u0431\u043b\u043e\u043d\u044b Blade \u0432 Laravel","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 40 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/1/#1-blade","title":"1. \u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 Blade? \u0412\u0430\u0448 \"\u0443\u043c\u043d\u044b\u0439\" \u0447\u0435\u0440\u0442\u0435\u0436","text":"<p>\u0414\u043e \u044d\u0442\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u043c\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u043b\u0438 \u0441 \u0434\u0432\u0443\u043c\u044f \u043a\u0440\u0430\u0439\u043d\u043e\u0441\u0442\u044f\u043c\u0438: \u0447\u0438\u0441\u0442\u044b\u043c <code>index.html</code> \u0438 \u0447\u0438\u0441\u0442\u044b\u043c JSON-\u043e\u0442\u0432\u0435\u0442\u043e\u043c \u043e\u0442 API. \u041d\u043e \u043a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u044b\u0435 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043d\u0430\u0448\u0435\u0433\u043e \u0431\u044d\u043a\u0435\u043d\u0434\u0430?</p> <p>Blade \u2014 \u044d\u0442\u043e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u0432 Laravel \u0448\u0430\u0431\u043b\u043e\u043d\u0438\u0437\u0430\u0442\u043e\u0440. \u041e\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043d\u0430\u043c \u043f\u0438\u0441\u0430\u0442\u044c \u043e\u0431\u044b\u0447\u043d\u044b\u0439 HTML, \u043d\u043e \u0441 \"\u0441\u0443\u043f\u0435\u0440\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044f\u043c\u0438\":</p> <ul> <li>\u0412\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c PHP-\u043a\u043e\u0434 \u0432 \u044d\u043b\u0435\u0433\u0430\u043d\u0442\u043d\u043e\u043c \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0435.</li> <li>\u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \"\u043c\u0430\u043a\u0435\u0442\u044b\" \u0441\u0442\u0440\u0430\u043d\u0438\u0446 (\u0448\u0430\u043f\u043a\u0438, \u043f\u043e\u0434\u0432\u0430\u043b\u044b).</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0446\u0438\u043a\u043b\u044b \u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043f\u0440\u044f\u043c\u043e \u0432 HTML-\u043a\u043e\u0434\u0435.</li> <li>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u0430\u0449\u0438\u0449\u0430\u0442\u044c \u043e\u0442 XSS-\u0430\u0442\u0430\u043a.</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e HTML \u2014 \u044d\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0447\u0435\u0440\u0442\u0435\u0436 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f. Blade \u2014 \u044d\u0442\u043e \u043f\u0440\u043e\u0434\u0432\u0438\u043d\u0443\u0442\u0430\u044f CAD-\u0441\u0438\u0441\u0442\u0435\u043c\u0430. \u0412\u044b \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0438\u0441\u0443\u0435\u0442\u0435 \u043b\u0438\u043d\u0438\u0438, \u0432\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \"\u0443\u043c\u043d\u044b\u0435\" \u043e\u0431\u044a\u0435\u043a\u0442\u044b. \u0412\u044b \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u0435: \"\u0417\u0434\u0435\u0441\u044c \u0431\u0443\u0434\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u044d\u043a\u0438\u043f\u0430\u0436\u0430\", \u0438 Blade \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0435\u0433\u043e. \"\u0417\u0434\u0435\u0441\u044c \u0431\u0443\u0434\u0435\u0442 \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d\", \u0438 Blade \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441.</p> <p>\u0412\u0441\u0435 \u0444\u0430\u0439\u043b\u044b Blade \u0438\u043c\u0435\u044e\u0442 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 <code>.blade.php</code> \u0438 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 <code>resources/views/</code>.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/1/#2","title":"2. \u041e\u0441\u043d\u043e\u0432\u044b \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>\u0421\u0430\u043c\u043e\u0435 \u043f\u0440\u043e\u0441\u0442\u043e\u0435, \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 Blade \u2014 \u044d\u0442\u043e \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u043d\u043d\u044b\u0435.</p> <p>\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 <code>{{ }}</code></p> <p>\u042d\u0442\u0438 \u0434\u0432\u043e\u0439\u043d\u044b\u0435 \u0444\u0438\u0433\u0443\u0440\u043d\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438 \u2014 \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f Blade \"\u0432\u0437\u044f\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0435\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435\".</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440:</p> <ol> <li> <p>\u041c\u0430\u0440\u0448\u0440\u0443\u0442 \u0432 <code>routes/web.php</code>: <pre><code>&lt;?php\nRoute::get('/mission-briefing', function () {\n    $mission = '\u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 Kepler-186';\n    return view('briefing', ['mission_name' =&gt; $mission]);\n});\n</code></pre></p> <ul> <li><code>view('briefing', ...)</code> \u0433\u043e\u0432\u043e\u0440\u0438\u0442 Laravel \u043d\u0430\u0439\u0442\u0438 \u0444\u0430\u0439\u043b <code>resources/views/briefing.blade.php</code>.</li> <li><code>['mission_name' =&gt; $mission]</code> \u2014 \u044d\u0442\u043e \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \"\u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c\" \u0432 \u043d\u0430\u0448 \u0432\u0438\u0434.</li> </ul> </li> <li> <p>\u0412\u0438\u0434 \u0432 <code>resources/views/briefing.blade.php</code>: <pre><code>&lt;h1&gt;\u041c\u0438\u0441\u0441\u0438\u044f \u0426\u0423\u041f&lt;/h1&gt;\n&lt;p&gt;\u0422\u0435\u043a\u0443\u0449\u0430\u044f \u0437\u0430\u0434\u0430\u0447\u0430: {{ $mission_name }}&lt;/p&gt;\n</code></pre></p> </li> </ol> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>/mission-briefing</code>: <pre><code>&lt;h1&gt;\u041c\u0438\u0441\u0441\u0438\u044f \u0426\u0423\u041f&lt;/h1&gt;\n&lt;p&gt;\u0422\u0435\u043a\u0443\u0449\u0430\u044f \u0437\u0430\u0434\u0430\u0447\u0430: \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 Kepler-186&lt;/p&gt;\n</code></pre></p> <p>\ud83d\udee1\ufe0f \u0412\u0430\u0436\u043d\u043e \u0437\u043d\u0430\u0442\u044c: Blade \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432\u043d\u0443\u0442\u0440\u0438 <code>{{ }}</code>. \u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 HTML-\u0442\u0435\u0433\u0438 \u0438\u043b\u0438 \u0432\u0440\u0435\u0434\u043e\u043d\u043e\u0441\u043d\u044b\u0439 \u0441\u043a\u0440\u0438\u043f\u0442, \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0432\u0435\u0434\u0435\u043d\u044b \u043a\u0430\u043a \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442, \u0430 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b. \u042d\u0442\u043e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0437\u0430\u0449\u0438\u0442\u0430 \u043e\u0442 XSS-\u0430\u0442\u0430\u043a.</p> <p>\u0414\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u043d\u0435\u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e HTML (\u0434\u0435\u043b\u0430\u0439\u0442\u0435 \u044d\u0442\u043e \u0441 \u043e\u0441\u0442\u043e\u0440\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e!) \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 <code>{!! $variable !!}</code>.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/1/#3-html","title":"3. \u0414\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u044b: \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043b\u043e\u0433\u0438\u043a\u0438 \u0432 HTML","text":"<p>\u0414\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u044b Blade \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0442\u0441\u044f \u0441 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 <code>@</code>. \u041e\u043d\u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0446\u0438\u043a\u043b\u044b, \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0438 \u043c\u043d\u043e\u0433\u043e\u0435 \u0434\u0440\u0443\u0433\u043e\u0435.</p> <p>\u0423\u0441\u043b\u043e\u0432\u0438\u044f (<code>@if</code>, <code>@else</code>): <pre><code>@if($planet-&gt;is_habitable)\n    &lt;p style=\"color: green;\"&gt;\u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u043f\u0440\u0438\u0433\u043e\u0434\u043d\u0430 \u0434\u043b\u044f \u0436\u0438\u0437\u043d\u0438!&lt;/p&gt;\n@else\n    &lt;p style=\"color: red;\"&gt;\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0441\u043a\u0430\u0444\u0430\u043d\u0434\u0440. \u0410\u0442\u043c\u043e\u0441\u0444\u0435\u0440\u0430 \u0432\u0440\u0430\u0436\u0434\u0435\u0431\u043d\u0430.&lt;/p&gt;\n@endif\n</code></pre></p> <p>\u0426\u0438\u043a\u043b\u044b (<code>@foreach</code>, <code>@forelse</code>):</p> <p><code>@forelse</code> \u2014 \u044d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0443\u0434\u043e\u0431\u043d\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u0442 \u0446\u0438\u043a\u043b \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 \u043f\u0443\u0441\u0442\u043e\u0442\u0443. <pre><code>&lt;h2&gt;\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u0435\u0442 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435:&lt;/h2&gt;\n&lt;ul&gt;\n    @forelse($planets as $planet)\n        &lt;li&gt;\n            {{ $loop-&gt;iteration }}. {{ $planet-&gt;name }}\n            &lt;!-- $loop - \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430\u044f \u0432 \u0446\u0438\u043a\u043b\u0435 --&gt;\n        &lt;/li&gt;\n    @empty\n        &lt;li&gt;\u0412 \u044d\u0442\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u043f\u043b\u0430\u043d\u0435\u0442 \u043d\u0435 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u043e.&lt;/li&gt;\n    @endforelse\n&lt;/ul&gt;\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/1/#4-dry","title":"4. \u041c\u0430\u043a\u0435\u0442\u044b \u0438 \u0441\u0435\u043a\u0446\u0438\u0438: \u041d\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u0439 \u0441\u0435\u0431\u044f (DRY)","text":"<p>\u0421\u0430\u043c\u0430\u044f \u043c\u043e\u0449\u043d\u0430\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c Blade \u2014 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u043c\u0430\u043a\u0435\u0442\u043e\u0432 (layouts). \u0412\u0430\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0448\u0430\u043f\u043a\u0443 \u0438 \u043f\u043e\u0434\u0432\u0430\u043b \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 \u043a\u0430\u0436\u0434\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443.</p> <p>\u0428\u0430\u0433 1: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043c\u0430\u0441\u0442\u0435\u0440-\u043c\u0430\u043a\u0435\u0442 (<code>layout</code>)</p> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>resources/views/layouts/app.blade.php</code>: <pre><code>&lt;?php\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;title&gt;\u0426\u0423\u041f - @yield('title')&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"{{ asset('css/style.css') }}\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;\u041a\u043e\u043c\u0430\u043d\u0434\u043d\u044b\u0439 \u0446\u0435\u043d\u0442\u0440 \u0433\u0430\u043b\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0444\u043b\u043e\u0442\u0430&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        @yield('content') &lt;!-- \u0417\u0434\u0435\u0441\u044c \u0431\u0443\u0434\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b --&gt;\n    &lt;/main&gt;\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command. \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b.&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> -   <code>@yield('title')</code> \u0438 <code>@yield('content')</code> \u2014 \u044d\u0442\u043e \"\u0441\u043b\u043e\u0442\u044b\" \u0438\u043b\u0438 \"\u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u0438\".</p> <p>\u0428\u0430\u0433 2: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0434\u043e\u0447\u0435\u0440\u043d\u0438\u0439 \u0432\u0438\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043c\u0430\u043a\u0435\u0442</p> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>resources/views/planets/index.blade.php</code>: <pre><code>&lt;?php\n@extends('layouts.app') {{-- \u041d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u043c \u043d\u0430\u0448 \u043c\u0430\u0441\u0442\u0435\u0440-\u043c\u0430\u043a\u0435\u0442 --}}\n\n@section('title', '\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u0435\u0442') {{-- \u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0441\u0435\u043a\u0446\u0438\u044e 'title' --}}\n\n@section('content') {{-- \u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u0443\u044e \u0441\u0435\u043a\u0446\u0438\u044e 'content' --}}\n    &lt;h2&gt;\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b&lt;/h2&gt;\n    &lt;p&gt;\u042d\u0442\u043e \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0445 \u043d\u0430\u043c \u043c\u0438\u0440\u043e\u0432.&lt;/p&gt;\n    {{-- \u0417\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u0430\u0448 \u0446\u0438\u043a\u043b @forelse \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u043f\u043b\u0430\u043d\u0435\u0442 --}}\n@endsection\n</code></pre></p> <p>\u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043e\u0433\u0434\u0430 Laravel \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u0442\u044c <code>planets.index</code>, \u043e\u043d \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u043e\u0437\u044c\u043c\u0435\u0442 <code>layouts.app</code>, \u0430 \u0437\u0430\u0442\u0435\u043c \u0432\u0441\u0442\u0430\u0432\u0438\u0442 \u0432 \u043d\u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0438\u0437 \u0441\u0435\u043a\u0446\u0438\u0439 <code>@section</code>.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/1/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u041a\u0430\u043a\u043e\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0438\u043c\u0435\u044e\u0442 \u0444\u0430\u0439\u043b\u044b \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 Blade?</p>  a) .html  b) .blade.php  c) .php.blade <p>2. \u041a\u0430\u043a \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `$name` \u0432 Blade?</p>  a)   b) {{ $name }}  c) [[$name]] <p>3. \u041a\u0430\u043a\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e\u0431\u044b \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u043c\u0430\u0441\u0442\u0435\u0440-\u043c\u0430\u043a\u0435\u0442?</p>  a) @include('layouts.app')  b) @layout('layouts.app')  c) @extends('layouts.app') <p>4. \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u0430 `@yield('content')`?</p>  a) \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 placeholder (\u043c\u0435\u0441\u0442\u043e \u0434\u043b\u044f \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430)  b) \u0412\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u0430 `content.blade.php`  c) \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0441\u0435\u043a\u0446\u0438\u044e \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 <p>5. \u041a\u0430\u043a\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u0430 \u0438\u0434\u0435\u0430\u043b\u044c\u043d\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0446\u0438\u043a\u043b\u0430 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c?</p>  a) @foreach  b) @while  c) @forelse \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0438\u0437\u0443\u0447\u0438\u043b\u0438 \u043e\u0441\u043d\u043e\u0432\u044b Blade \u2014 \u043c\u043e\u0449\u043d\u043e\u0433\u043e \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446. \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u044b \u0443\u043c\u0435\u0435\u0442\u0435:</p> <ul> <li>\u0412\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \u043e\u0442 XSS.</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u044b \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043b\u043e\u0433\u0438\u043a\u0438 (<code>@if</code>, <code>@forelse</code>).</li> <li>\u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u0430\u043a\u0435\u0442\u044b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e <code>@extends</code> \u0438 <code>@yield</code>.</li> </ul> <p>\u041c\u044b \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u043b\u0438 \"\u0447\u0435\u0440\u0442\u0435\u0436\u0438\" \u0434\u043b\u044f \u043f\u0430\u043d\u0435\u043b\u0435\u0439 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \"\u043f\u0430\u043d\u0435\u043b\u0438\" (\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f) \u0434\u043b\u044f \u043d\u0430\u0448\u0435\u0433\u043e API \u0438 \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043d\u0430 \u043d\u0438\u0445 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/2/","title":"\u0413\u043b\u0430\u0432\u0430 5.2: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0434\u043b\u044f API","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 45 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/2/#1","title":"1. \u0417\u0430\u0434\u0430\u0447\u0430: \u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435","text":"<p>\u041d\u0430\u0448 API \u0432 \u0413\u043b\u0430\u0432\u0435 2 \u0443\u043c\u0435\u0435\u0442 \u043e\u0442\u0434\u0430\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 JSON. \u042d\u0442\u043e \u043e\u0442\u043b\u0438\u0447\u043d\u043e \u0434\u043b\u044f \u043c\u0430\u0448\u0438\u043d, \u043d\u043e \u043b\u044e\u0434\u0438 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0438\u0442\u0430\u044e\u0442 \u0432\u0438\u0434\u0435\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043d\u0430 \u043a\u0440\u0430\u0441\u0438\u0432\u043e \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u043d\u044b\u0445 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u0445. \u041d\u0430\u0448\u0430 \u0446\u0435\u043b\u044c \u2014 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0434\u0432\u0435 \u0442\u0430\u043a\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b:</p> <ol> <li>\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u043b\u0430\u043d\u0435\u0442 (<code>/planets</code>)</li> <li>\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043e\u0434\u043d\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b (<code>/planets/{id}</code>)</li> </ol> <p>\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u044f\u0437\u043a\u0443 \"\u041c\u0430\u0440\u0448\u0440\u0443\u0442 \u2192 \u041a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 \u2192 \u0412\u0438\u0434\".</p> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e JSON \u043e\u0442 API \u2014 \u044d\u0442\u043e \u0441\u044b\u0440\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0435\u043b\u0435\u043c\u0435\u0442\u0440\u0438\u0438, \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u043e\u0442\u043e\u043a \u0446\u0438\u0444\u0440. \u041d\u0430\u0448\u0430 \u0437\u0430\u0434\u0430\u0447\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u2014 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0432 \u0426\u0423\u041f \u0434\u0432\u0430 \u044d\u043a\u0440\u0430\u043d\u0430 (\u0434\u0432\u0430 \"\u0432\u0438\u0434\u0430\"):</p> <ul> <li>\u041e\u0431\u0449\u0438\u0439 \u044d\u043a\u0440\u0430\u043d: \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 (\u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u0435\u0442).</li> <li>\u0414\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d: \u043f\u0440\u0438 \u043a\u043b\u0438\u043a\u0435 \u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0432\u0441\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043d\u0451\u043c (\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043e\u0434\u043d\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b).</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/2/#2-1-","title":"2. \u0428\u0430\u0433 1: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430 \u0434\u043b\u044f \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446","text":"<p>\u0414\u043b\u044f \u0447\u0438\u0441\u0442\u043e\u0442\u044b \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b \u043d\u0435 \u0441\u0442\u043e\u0438\u0442 \u0441\u043c\u0435\u0448\u0438\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 API \u0438 \u043b\u043e\u0433\u0438\u043a\u0443 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0432 \u043e\u0434\u043d\u043e\u043c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435. \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430\u0448\u0438\u0445 Blade-\u0432\u0438\u0434\u043e\u0432.</p> <p>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435: <pre><code>php artisan make:controller Web/PlanetPageController\n</code></pre> \u041c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0435\u0433\u043e \u0432 \u043f\u043e\u0434\u043f\u0430\u043f\u043a\u0435 <code>Web</code>, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u0434\u0435\u043b\u0438\u0442\u044c \u043e\u0442 API-\u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u043e\u0432.</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b <code>app/Http/Controllers/Web/PlanetPageController.php</code>.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/2/#2","title":"\u0428\u0430\u0433 2: \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0432\u0441\u0435\u0445 \u043f\u043b\u0430\u043d\u0435\u0442","text":"<p>1. \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435: \u0412 <code>PlanetPageController</code> \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043c\u0435\u0442\u043e\u0434 <code>index</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0432\u0441\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0438\u0445 \u0432 \u0432\u0438\u0434. <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers\\Web;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Planet; // \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c\n\nclass PlanetPageController extends Controller\n{\n    /**\n     * \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0432\u0441\u0435\u0445 \u043f\u043b\u0430\u043d\u0435\u0442.\n     */\n    public function index()\n    {\n        // 1. \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0432\u0441\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0438\u0437 \u0411\u0414\n        $planets = Planet::all();\n\n        // 2. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0432\u0438\u0434 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0432 \u043d\u0435\u0433\u043e \u0434\u0430\u043d\u043d\u044b\u0435\n        return view('planets.index', ['planets' =&gt; $planets]);\n    }\n}\n</code></pre></p> <p>2. \u0421\u043e\u0437\u0434\u0430\u0435\u043c Blade-\u0432\u0438\u0434: \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>resources/views/planets/index.blade.php</code>. \u041c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0430\u043a\u0435\u0442, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u0439 \u0433\u043b\u0430\u0432\u0435.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Planets&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n        }\n        .container {\n            max-width: 960px;\n            margin: 0 auto;\n        }\n        h2 {\n            color: #1a202c;\n        }\n        hr {\n            border: none;\n            border-top: 1px solid #e2e8f0;\n            margin: 1.5em 0;\n        }\n        .planet-list {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n            gap: 1.5em;\n        }\n        .planet-card {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 1.5em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n            transition: transform 0.2s;\n        }\n        .planet-card:hover {\n            transform: translateY(-5px);\n        }\n        .planet-card h3 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-card p {\n            margin-bottom: 0.5em;\n            color: #4a5568;\n        }\n        .planet-card a {\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .planet-card a:hover {\n            text-decoration: underline;\n        }\n        .no-planets {\n            color: #718096;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h2&gt;\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0445 \u043f\u043b\u0430\u043d\u0435\u0442&lt;/h2&gt;\n        &lt;hr&gt;\n        &lt;div class=\"planet-list\"&gt;\n            @forelse($planets as $planet)\n                &lt;div class=\"planet-card\"&gt;\n                    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n                    &lt;p&gt;\u0421\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n                    &lt;p&gt;\u0414\u0438\u0430\u043c\u0435\u0442\u0440: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} \u043a\u043c&lt;/p&gt;\n                    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n                &lt;/div&gt;\n            @empty\n                &lt;p class=\"no-planets\"&gt;\u0412 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435\u0442 \u043d\u0438 \u043e\u0434\u043d\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0441\u0438\u0434\u0435\u0440\u044b.&lt;/p&gt;\n            @endforelse\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li><code>number_format(...)</code> \u2014 \u044d\u0442\u043e \u043e\u0431\u044b\u0447\u043d\u0430\u044f PHP-\u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043a\u0440\u0430\u0441\u0438\u0432\u043e\u0433\u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0447\u0438\u0441\u0435\u043b. \u0415\u0451 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u044f\u043c\u043e \u0432 Blade.</li> </ul> <p>3. \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u0432 <code>routes/web.php</code>: <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// ...\n\nRoute::get('/planets', [PlanetPageController::class, 'index']);\n</code></pre> \u0422\u0435\u043f\u0435\u0440\u044c, \u0435\u0441\u043b\u0438 \u0432\u044b \u043f\u0435\u0440\u0435\u0439\u0434\u0435\u0442\u0435 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>/planets</code> \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435, \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u043f\u043b\u0430\u043d\u0435\u0442!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/2/#4-3","title":"4. \u0428\u0430\u0433 3: \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043e\u0434\u043d\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b","text":"<p>1. \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435:</p> <p>\u0412 <code>PlanetPageController</code> \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043c\u0435\u0442\u043e\u0434 <code>show</code>. \u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f Route Model Binding, Laravel \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0430\u0439\u0434\u0435\u0442 \u043f\u043b\u0430\u043d\u0435\u0442\u0443 \u043f\u043e ID \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0441\u0442 \u0435\u0435 \u0432 \u043c\u0435\u0442\u043e\u0434.</p> <pre><code>&lt;?php\n// \u0412\u043d\u0443\u0442\u0440\u0438 \u043a\u043b\u0430\u0441\u0441\u0430 PlanetPageController\n/**\n * \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0434\u043d\u043e\u0439 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b.\n */\npublic function show(Planet $planet)\n{\n    // Laravel \u0443\u0436\u0435 \u043d\u0430\u0448\u0435\u043b \u0434\u043b\u044f \u043d\u0430\u0441 \u043f\u043b\u0430\u043d\u0435\u0442\u0443.\n    // \u0415\u0441\u043b\u0438 \u043e\u043d\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430, \u043e\u043d \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u0435\u0440\u043d\u0435\u0442 404 \u043e\u0448\u0438\u0431\u043a\u0443.\n\n    return view('planets.show', ['planet' =&gt; $planet]);\n}\n</code></pre> <p>2. \u0421\u043e\u0437\u0434\u0430\u0435\u043c Blade-\u0432\u0438\u0434:</p> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>resources/views/planets/show.blade.php</code>.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;{{ $planet-&gt;name }}&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n        }\n        .container {\n            max-width: 600px;\n            width: 100%;\n        }\n        .planet-detail {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 2em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n        }\n        .planet-detail h1 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-detail p {\n            margin-bottom: 1em;\n            color: #4a5568;\n            font-size: 1.1em;\n        }\n        .back-link {\n            display: inline-block;\n            margin-top: 1.5em;\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .back-link:hover {\n            text-decoration: underline;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"planet-detail\"&gt;\n            @if($planet-&gt;image_url)\n                &lt;img src=\"{{ $planet-&gt;image_url }}\" alt=\"Image of {{ $planet-&gt;name }}\" style=\"max-width: 100%; height: auto; border-radius: 0.5em; margin-bottom: 1em;\"&gt;\n            @endif\n            &lt;h1&gt;{{ $planet-&gt;name }}&lt;/h1&gt;\n            @if($planet-&gt;description)\n                &lt;p&gt;{{ $planet-&gt;description }}&lt;/p&gt;\n            @endif\n            &lt;p&gt;&lt;strong&gt;\u0421\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430:&lt;/strong&gt; {{ $planet-&gt;solar_system }}&lt;/p&gt;\n            &lt;p&gt;&lt;strong&gt;\u0414\u0438\u0430\u043c\u0435\u0442\u0440:&lt;/strong&gt; {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} \u043a\u043c&lt;/p&gt;\n            &lt;a href=\"/planets\" class=\"back-link\"&gt;&amp;larr; \u041d\u0430\u0437\u0430\u0434 \u043a \u0441\u043f\u0438\u0441\u043a\u0443 \u043f\u043b\u0430\u043d\u0435\u0442&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>3. \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u0432 <code>routes/web.php</code>: <pre><code>// \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u044d\u0442\u043e\u0442 \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u043f\u043e\u0441\u043b\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430 \u0434\u043b\u044f /planets\nRoute::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n</code></pre> -   \u0418\u043c\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 <code>{planet}</code> \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0442\u044c \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430 (<code>show(Planet $planet)</code>) \u0434\u043b\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b Route Model Binding.</p> <p>\u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043b\u0438\u043a\u043d\u0443\u0432 \u043d\u0430 \u0441\u0441\u044b\u043b\u043a\u0443 \"\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435\" \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c, \u0432\u044b \u043f\u043e\u043f\u0430\u0434\u0435\u0442\u0435 \u043d\u0430 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/2/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u041a\u0430\u043a\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0443\u0447\u0448\u0435\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u043e\u0439 \u0434\u043b\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043b\u043e\u0433\u0438\u043a\u0438 API \u0438 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446?</p>  a) \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 \u0434\u043b\u044f \u0432\u0441\u0435\u0433\u043e  b) \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u044b (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u043f\u0430\u043f\u043a\u0435 `Web` \u0438 `Api`)  c) \u041f\u043e\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0432\u0441\u044e \u043b\u043e\u0433\u0438\u043a\u0443 \u0432 \u0444\u0430\u0439\u043b \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 <p>2. \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 return view('planets.index', ['planets' =&gt; $planets]);?</p>  a) \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 JSON-\u043c\u0430\u0441\u0441\u0438\u0432 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043e \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u0445  b) \u0420\u0435\u043d\u0434\u0435\u0440\u0438\u0442 \u0444\u0430\u0439\u043b resources/views/planets/index.blade.php \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u043d\u0435\u0433\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e `$planets`  c) \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 URL /planets/index <p>3. \u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 Route Model Binding \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0435 `show(Planet $planet)`?</p>  a) Laravel \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0435  b) Laravel \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u0432 \u0411\u0414 \u0437\u0430\u043f\u0438\u0441\u044c `Planet` \u043f\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 \u0438\u0437 URL (`{planet}`)  c) Laravel \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u0443\u044e \u043f\u043b\u0430\u043d\u0435\u0442\u0443, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430 <p>4. \u041a\u0430\u043a \u0432 Blade \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u0442\u0443 \u0438\u0437 \u043f\u043e\u043b\u044f `created_at`?</p>  a) {{ $planet-&gt;created_at-&gt;format('Y-m-d') }}  b) {{ format_date($planet-&gt;created_at) }}  c) \u042d\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435 <p>5. \u0415\u0441\u043b\u0438 \u0432 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e `/posts/{post}`, \u043a\u0430\u043a \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u0438\u0433\u043d\u0430\u0442\u0443\u0440\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b Route Model Binding?</p>  a) public function show(Post $post)  b) public function show(Post $p)  c) public function show($post) \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \"\u0432\u0438\u0442\u0440\u0438\u043d\u0443\" \u0434\u043b\u044f \u0441\u0432\u043e\u0435\u0433\u043e API, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0443 Laravel MVC. \u0422\u0435\u043f\u0435\u0440\u044c \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c:</p> <ul> <li>\u041e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u043a\u0438 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446.</li> <li>\u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0432\u0441\u0435\u0445 \u043f\u043b\u0430\u043d\u0435\u0442, \u043f\u043e\u043b\u0443\u0447\u0430\u044e\u0449\u0430\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0411\u0414.</li> <li>\u0414\u0435\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c Route Model Binding.</li> <li>\u0414\u0432\u0430 \u0432\u0435\u0431-\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430 \u0432 <code>routes/web.php</code> \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u044d\u0442\u0438\u043c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u043c.</li> </ul> <p>\u0412\u044b \u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u043b\u0438 \u0441\u044b\u0440\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043f\u043e\u043d\u044f\u0442\u043d\u0443\u044e \u0438 \u043f\u043e\u043b\u0435\u0437\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438, \u0432\u0441\u0442\u0440\u043e\u0438\u0432 JavaScript \u0432 \u043d\u0430\u0448\u0438 Blade-\u0432\u0438\u0434\u044b \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 API \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/3/","title":"\u0413\u043b\u0430\u0432\u0430 5.3: \u0412\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u043d\u0438\u0435 JavaScript \u0432 Laravel Views","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 50 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/3/#1-javascript","title":"1. \u0414\u0432\u0430 \u043f\u043e\u0434\u0445\u043e\u0434\u0430 \u043a JavaScript \u0432 \u0432\u0435\u0431\u0435","text":"<p>\u0414\u043e \u0441\u0438\u0445 \u043f\u043e\u0440 \u043c\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u043b\u0438 \u0441 Server-Side Rendering (SSR) \u2014 \u0441\u0435\u0440\u0432\u0435\u0440 (Laravel) \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043b \u0433\u043e\u0442\u043e\u0432\u044b\u0439 HTML (\u0447\u0435\u0440\u0435\u0437 Blade) \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u043b \u0435\u0433\u043e \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440. \u042d\u0442\u043e \u043e\u0442\u043b\u0438\u0447\u043d\u043e \u0434\u043b\u044f SEO \u0438 \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u043f\u0435\u0440\u0432\u043e\u0439 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438.</p> <p>\u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043c Client-Side Interactions \u2014 \u0431\u0440\u0430\u0443\u0437\u0435\u0440, \u0443\u0436\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0432 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c JavaScript-\u043a\u043e\u0434 \u0434\u043b\u044f:</p> <ul> <li>\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043d\u0430 \u043d\u0430\u0448 API \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.</li> <li>\u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0447\u0430\u0441\u0442\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0432 \u0441\u043f\u0438\u0441\u043e\u043a).</li> <li>\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u0438 \u043c\u043e\u0434\u0430\u043b\u044c\u043d\u044b\u0445 \u043e\u043a\u043e\u043d.</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e SSR \u2014 \u044d\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u043d\u043e\u0439 \u043a\u0430\u0440\u0442\u044b \u0437\u0432\u0435\u0437\u0434\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b, \u0440\u0430\u0441\u043f\u0435\u0447\u0430\u0442\u0430\u043d\u043d\u043e\u0439 \u0432 \u0426\u0423\u041f (\u0441\u0435\u0440\u0432\u0435\u0440). \u0412\u044b \u0432\u0438\u0434\u0438\u0442\u0435 \u0432\u0441\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043d\u0430 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u0435\u0447\u0430\u0442\u0438.</p> <p>Client-Side JS \u2014 \u044d\u0442\u043e \u0432\u0430\u0448 \u043b\u0438\u0447\u043d\u044b\u0439 \u043f\u043b\u0430\u043d\u0448\u0435\u0442 (\u0431\u0440\u0430\u0443\u0437\u0435\u0440), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u043e \u0441\u043f\u0443\u0442\u043d\u0438\u043a\u0430\u043c\u0438 (API) \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u0432\u0430\u0448\u0435\u0439 \u043a\u0430\u0440\u0442\u0435, \u043d\u0435 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u044f \u043d\u043e\u0432\u0443\u044e \u0431\u0443\u043c\u0430\u0436\u043d\u0443\u044e \u043a\u0430\u0440\u0442\u0443 \u0438\u0437 \u0426\u0423\u041f.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/3/#2-js-","title":"2. \u0413\u0434\u0435 \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0438 \u043a\u0430\u043a \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c JS-\u043a\u043e\u0434","text":"<p>\u041a\u0430\u043a \u043c\u044b \u0443\u0436\u0435 \u0432\u044b\u044f\u0441\u043d\u0438\u043b\u0438, \u0432\u0441\u0435 \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 \u0430\u0441\u0441\u0435\u0442\u044b (CSS, JS, \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f) \u0434\u043e\u043b\u0436\u043d\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 <code>public</code>.</p> <p>\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430:</p> <ol> <li>\u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b: \u0412\u0435\u0441\u044c \u0432\u0430\u0448 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 JS-\u043a\u043e\u0434 \u0434\u043e\u043b\u0436\u0435\u043d \u043b\u0435\u0436\u0430\u0442\u044c \u0432 <code>public/js/</code>. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>public/js/planets.js</code>.</li> <li>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432 Blade: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0445\u0435\u043b\u043f\u0435\u0440 <code>asset()</code> \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0433\u043e URL.</li> </ol> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0432 \u043c\u0430\u043a\u0435\u0442\u0435 <code>layouts/app.blade.php</code>: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    {{-- ... --}}\n&lt;/head&gt;\n&lt;body&gt;\n    {{-- ... header \u0438 main ... --}}\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command.&lt;/p&gt;\n    &lt;/footer&gt;\n\n    {{-- \u0421\u043a\u0440\u0438\u043f\u0442\u044b \u043b\u0443\u0447\u0448\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0432 \u043a\u043e\u043d\u0446\u0435 body \u0434\u043b\u044f \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u043d\u0433\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b --}}\n    &lt;script src=\"{{ asset('js/planets.js') }}\"&gt;&lt;/script&gt;\n    @stack('scripts') {{-- \u0421\u043e\u0437\u0434\u0430\u0435\u043c \"\u0441\u043b\u043e\u0442\" \u0434\u043b\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b --}}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <ul> <li><code>@stack('scripts')</code> \u2014 \u044d\u0442\u043e \u043c\u043e\u0449\u043d\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u0430 Blade. \u041e\u043d\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0447\u0435\u0440\u043d\u0438\u043c \u0432\u0438\u0434\u0430\u043c \"\u043f\u0440\u043e\u0442\u0430\u043b\u043a\u0438\u0432\u0430\u0442\u044c\" \u0441\u0432\u043e\u0439 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 JS-\u043a\u043e\u0434 \u0432 \u044d\u0442\u043e \u043c\u0435\u0441\u0442\u043e. \u042d\u0442\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e, \u043a\u043e\u0433\u0434\u0430 \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u043d\u0443\u0436\u0435\u043d \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043a\u0440\u0438\u043f\u0442, \u0430 \u0434\u043b\u044f \u0434\u0440\u0443\u0433\u043e\u0439 \u2014 \u043d\u0435\u0442.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/3/#3","title":"3. \u041f\u0440\u0438\u043c\u0435\u0440: \u041a\u043d\u043e\u043f\u043a\u0430 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u0441 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435\u043c","text":"<p>\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043b\u0430\u043d\u0435\u0442 (<code>planets/index.blade.php</code>) \u043a\u043d\u043e\u043f\u043a\u0443 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 JavaScript \u0438 Fetch API.</p> <p>\u0428\u0430\u0433 1: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u0432 <code>resources/views/planets/index.blade.php</code></p> <p>\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0443 \u043f\u043b\u0430\u043d\u0435\u0442\u044b, \u0434\u043e\u0431\u0430\u0432\u0438\u0432 \u043a\u043d\u043e\u043f\u043a\u0443 \u0441 data-\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c\u0438: <pre><code>{{-- ... \u0432\u043d\u0443\u0442\u0440\u0438 \u0446\u0438\u043a\u043b\u0430 @forelse ... --}}\n&lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n    &lt;p&gt;\u0421\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n    &lt;p&gt;\u0414\u0438\u0430\u043c\u0435\u0442\u0440: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} \u043a\u043c&lt;/p&gt;\n    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n    &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"/api/planets/{{ $planet-&gt;id }}\"&gt;\n        \u0421\u043f\u0438\u0441\u0430\u0442\u044c\n    &lt;/button&gt;\n&lt;/div&gt;\n&lt;!-- ... \u041f\u0435\u0440\u0435\u0434 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0435\u0439\u0441\u044f \u0442\u0435\u0433\u043e\u043c body ... --&gt;\n&lt;script src=\"{{ asset('js/planets.js') }}\" defer&gt;&lt;/script&gt;\n</code></pre></p> <ul> <li><code>id=\"planet-card-{{ $planet-&gt;id }}\"</code> \u2014 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 ID \u0434\u043b\u044f \u0432\u0441\u0435\u0439 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438, \u0447\u0442\u043e\u0431\u044b \u043c\u044b \u043c\u043e\u0433\u043b\u0438 \u0435\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0438\u0437 DOM.</li> <li><code>data-id</code> \u0438 <code>data-url</code> \u2014 \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 PHP (Blade) \u0432 JavaScript.</li> </ul> <p>\u0428\u0430\u0433 2: \u041f\u0438\u0448\u0435\u043c JavaScript-\u043b\u043e\u0433\u0438\u043a\u0443</p> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>public/js/planets.js</code> \u0438 \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 \u043d\u0435\u0433\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434: <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    // \u041d\u0430\u0445\u043e\u0434\u0438\u043c \u0432\u0441\u0435 \u043a\u043d\u043e\u043f\u043a\u0438 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\"\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            const planetId = event.target.dataset.id;\n            const apiUrl = event.target.dataset.url;\n\n            if (!confirm(`\u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u0443 \u0441 ID ${planetId}? \u042d\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043d\u0435\u043e\u0431\u0440\u0430\u0442\u0438\u043c\u043e.`)) {\n                return; // \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0430\u0436\u0430\u043b \"\u041e\u0442\u043c\u0435\u043d\u0430\"\n            }\n\n            try {\n                // \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c DELETE-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043d\u0430\u0448 API\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        // \u041f\u043e\u0437\u0436\u0435 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u044e\u0434\u0430 CSRF-\u0442\u043e\u043a\u0435\u043d\n                    }\n                });\n\n                if (response.status === 204) { // 204 No Content - \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435\n                    // \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0443 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0441\u043e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b\n                    const cardToRemove = document.getElementById(`planet-card-${planetId}`);\n                    if (cardToRemove) {\n                        cardToRemove.remove();\n                    }\n                    alert('\u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043f\u0438\u0441\u0430\u043d\u0430.');\n                } else {\n                    // \u0415\u0441\u043b\u0438 API \u0432\u0435\u0440\u043d\u0443\u043b \u043e\u0448\u0438\u0431\u043a\u0443\n                    const errorData = await response.json();\n                    alert(`\u041e\u0448\u0438\u0431\u043a\u0430: ${errorData.message || '\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u0443.'}`);\n                }\n            } catch (error) {\n                console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430:', error);\n                alert('\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u0441\u0435\u0442\u0435\u0432\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0441\u043d\u043e\u0432\u0430.');\n            }\n        });\n    });\n});\n</code></pre></p> <p>\u0422\u0435\u043f\u0435\u0440\u044c, \u0435\u0441\u043b\u0438 \u0432\u044b \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 <code>/planets</code>, \u0443 \u0432\u0430\u0441 \u043f\u043e\u044f\u0432\u044f\u0442\u0441\u044f \u043a\u043d\u043e\u043f\u043a\u0438 \"\u0414\u0435\u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f\", \u0438 \u043f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043d\u0438\u0445 \u0431\u0443\u0434\u0435\u0442 \u0441\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0430\u0448 JavaScript-\u043a\u043e\u0434!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/3/#4-blade-javascript","title":"4. \u041f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 Blade \u0432 JavaScript","text":"<p>\u0418\u043d\u043e\u0433\u0434\u0430 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0432 JS \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0443, \u0430 \u0446\u0435\u043b\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442.</p> <p>\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 (\u0443\u044f\u0437\u0432\u0438\u043c\u044b\u0439): <pre><code>let planets = {{ $planets }}; // \u042d\u0442\u043e \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u0442 \u043a \u043e\u0448\u0438\u0431\u043a\u0435 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430 \u0438 \u043d\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\n</code></pre></p> <p>\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 (\u0447\u0435\u0440\u0435\u0437 JSON): \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u0443 <code>@json</code>. \u041e\u043d\u0430 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 PHP-\u043c\u0430\u0441\u0441\u0438\u0432/\u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0432\u0430\u043b\u0438\u0434\u043d\u044b\u0439 JSON-\u043e\u0431\u044a\u0435\u043a\u0442.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432 <code>planets/index.blade.php</code>: <pre><code>@extends('layouts.app')\n{{-- ... --}}\n@section('content')\n    {{-- ... --}}\n@endsection\n\n@push('scripts') {{-- \"\u041f\u0440\u043e\u0442\u0430\u043b\u043a\u0438\u0432\u0430\u0435\u043c\" \u043d\u0430\u0448 \u0441\u043a\u0440\u0438\u043f\u0442 \u0432 \u0441\u043b\u043e\u0442 @stack('scripts') \u0432 \u043c\u0430\u043a\u0435\u0442\u0435 --}}\n&lt;script&gt;\n    // Laravel \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e $planets \u0432 JSON-\u043c\u0430\u0441\u0441\u0438\u0432\n    const planetsData = @json($planets);\n\n    // \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u044d\u0442\u0438\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c \u0432 JS\n    console.log('\u0414\u0430\u043d\u043d\u044b\u0435 \u043e \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u0445, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 Blade:', planetsData);\n    alert(`\u0417\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043e ${planetsData.length} \u043f\u043b\u0430\u043d\u0435\u0442!`);\n&lt;/script&gt;\n@endpush\n</code></pre></p> <ul> <li><code>@push('scripts')</code> \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0432\u043d\u0443\u0442\u0440\u044c <code>@stack('scripts')</code> \u0432 <code>layouts/app.blade.php</code>. \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u043a\u0440\u0438\u043f\u0442\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u0433\u0434\u0435 \u043e\u043d\u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0443\u0436\u043d\u044b.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/3/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u0413\u0434\u0435 \u0432 Laravel-\u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 JS \u0438 CSS \u0444\u0430\u0439\u043b\u044b?</p>  a) resources/js  b) storage/app/public  c) public/ <p>2. \u041a\u0430\u043a\u043e\u0439 Blade-\u0445\u0435\u043b\u043f\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0439 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 URL \u043a \u0430\u0441\u0441\u0435\u0442\u0430\u043c (JS, CSS)?</p>  a) url()  b) asset()  c) public_path() <p>3. \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u043f\u0430\u0440\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432 `@push('scripts')` / `@stack('scripts')`?</p>  a) \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0447\u0435\u0440\u043d\u0435\u043c\u0443 \u0432\u0438\u0434\u0443 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u0432\u043e\u0439 JS-\u043a\u043e\u0434 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u0432 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u043c \u043c\u0430\u043a\u0435\u0442\u0435  b) \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u0442 \u0432\u0441\u0435 JS-\u0444\u0430\u0439\u043b\u044b \u0432 \u043e\u0434\u0438\u043d  c) \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 JS-\u043a\u043e\u0434 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 <p>4. \u041a\u0430\u043a \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c PHP-\u043c\u0430\u0441\u0441\u0438\u0432 `$data` \u0432 JavaScript \u0438\u0437 Blade?</p>  a) let jsData = {{ $data }};  b) let jsData = '@php echo json_encode($data); @endphp';  c) let jsData = @json($data); <p>5. \u041f\u043e\u0447\u0435\u043c\u0443 JS-\u0441\u043a\u0440\u0438\u043f\u0442\u044b \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0432 \u043a\u043e\u043d\u0446\u0435 \u0442\u0435\u0433\u0430 body?</p>  a) \u0427\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u043d\u0435 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u043d\u0433 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e HTML-\u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b  b) \u042d\u0442\u043e \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0430 HTML5  c) \u0422\u0430\u043a \u0441\u043a\u0440\u0438\u043f\u0442\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0431\u044b\u0441\u0442\u0440\u0435\u0435 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0432\u0434\u044b\u0445\u0430\u0442\u044c \u0436\u0438\u0437\u043d\u044c \u0432 \u0441\u0442\u0430\u0442\u0438\u0447\u043d\u044b\u0435 Blade-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u043b\u043e\u0433\u0438\u043a\u0443. \u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:</p> <ul> <li>\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 JS-\u0444\u0430\u0439\u043b\u043e\u0432 \u0432 Laravel-\u043f\u0440\u043e\u0435\u043a\u0442\u0435.</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 <code>data-*</code> \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 HTML \u0432 JS.</li> <li>\u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 API \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Fetch \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.</li> <li>\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 PHP-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0432 JavaScript \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u044b <code>@json</code>.</li> <li>\u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e <code>@push</code> \u0438 <code>@stack</code>.</li> </ul> <p>\u0412\u0430\u0448\u0438 \"\u043f\u0430\u043d\u0435\u043b\u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f\" \u0441\u0442\u0430\u043b\u0438 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u043c\u0438. \u041e\u0434\u043d\u0430\u043a\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u043d\u0430\u0448\u0438 \u0438\u0437\u043c\u0435\u043d\u044f\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b (POST, PUT, DELETE) \u0443\u044f\u0437\u0432\u0438\u043c\u044b. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432\u0430\u0436\u043d\u0435\u0439\u0448\u0438\u0439 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u0437\u0430\u0449\u0438\u0442\u044b \u2014 CSRF-\u0442\u043e\u043a\u0435\u043d\u044b.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/4/","title":"\u0413\u043b\u0430\u0432\u0430 5.4: \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 CSRF-\u0442\u043e\u043a\u0435\u043d\u0430\u043c\u0438","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 30 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/4/#1-csrf-","title":"1. \u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 CSRF-\u0430\u0442\u0430\u043a\u0430? \"\u0423\u0433\u043e\u043d\" \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u0437\u0430\u043b\u043e\u0433\u0438\u043d\u0435\u043d\u044b \u0432 \u043f\u0430\u043d\u0435\u043b\u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432\u0430\u0448\u0438\u043c \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0444\u043b\u043e\u0442\u043e\u043c (<code>space-api.test</code>). \u0412 \u0441\u043e\u0441\u0435\u0434\u043d\u0435\u0439 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 \u0432\u044b \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0435 \u0431\u0435\u0437\u043e\u0431\u0438\u0434\u043d\u044b\u0439 \u0441\u0430\u0439\u0442 \u0441 \u043a\u043e\u0442\u0438\u043a\u0430\u043c\u0438 (<code>evil-cats.com</code>). \u041d\u0430 \u044d\u0442\u043e\u043c \u0441\u0430\u0439\u0442\u0435 \u0435\u0441\u0442\u044c \u0441\u043a\u0440\u044b\u0442\u0430\u044f \u0444\u043e\u0440\u043c\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u0430\u0448 \u0441\u0430\u0439\u0442 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>POST /api/planets/1/delete</code>.</p> <p>\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0432\u044b \u0443\u0436\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u043d\u0430 <code>space-api.test</code>, \u0432\u0430\u0448 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u043b\u044e\u0431\u0435\u0437\u043d\u043e \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u0438\u0442 \u043a \u044d\u0442\u043e\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443 \u0432\u0441\u0435 \u0432\u0430\u0448\u0438 cookies. \u0421\u0435\u0440\u0432\u0435\u0440 Laravel \u0443\u0432\u0438\u0434\u0438\u0442 \u0432\u0430\u043b\u0438\u0434\u043d\u0443\u044e \u0441\u0435\u0441\u0441\u0438\u044e \u0438 \u043f\u043e\u0434\u0443\u043c\u0430\u0435\u0442, \u0447\u0442\u043e \u044d\u0442\u043e \u0432\u044b \u0441\u0430\u043c\u0438 \u0440\u0435\u0448\u0438\u043b\u0438 \u0441\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u0443. \u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0430 \u0431\u0435\u0437 \u0432\u0430\u0448\u0435\u0433\u043e \u0432\u0435\u0434\u043e\u043c\u0430.</p> <p>\u042d\u0442\u043e \u0438 \u0435\u0441\u0442\u044c CSRF (Cross-Site Request Forgery) \u2014 \u0430\u0442\u0430\u043a\u0430, \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0437\u043b\u043e\u0443\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u0438\u043a \u0437\u0430\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043d\u0435\u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043d\u0430 \u0434\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u043c \u0441\u0430\u0439\u0442\u0435.</p> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>\u0412\u044b \u2014 \u043a\u0430\u043f\u0438\u0442\u0430\u043d \u043a\u043e\u0440\u0430\u0431\u043b\u044f, \u0438 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u043a\u043b\u044e\u0447-\u043a\u0430\u0440\u0442\u0430 (\u0441\u0435\u0441\u0441\u0438\u044f/cookie). \u0417\u043b\u043e\u0443\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u0438\u043a \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0443\u043a\u0440\u0430\u0441\u0442\u044c \u0432\u0430\u0448\u0443 \u043a\u0430\u0440\u0442\u0443. \u041d\u043e \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u043e\u0431\u043c\u0430\u043d\u043e\u043c \u0437\u0430\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0432\u0430\u0441 \u043f\u0440\u0438\u043b\u043e\u0436\u0438\u0442\u044c \u0435\u0435 \u043a \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0443 \u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432, \u043f\u043e\u043a\u0430 \u0432\u044b \u043e\u0442\u0432\u043b\u0435\u043a\u043b\u0438\u0441\u044c. CSRF-\u0442\u043e\u043a\u0435\u043d \u2014 \u044d\u0442\u043e \u043a\u0430\u043a \u043f\u0438\u043d-\u043a\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0443\u0436\u043d\u043e \u0432\u0432\u0435\u0441\u0442\u0438 \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u043a\u0430\u0440\u0442\u043e\u0439. \u0417\u043b\u043e\u0443\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u0438\u043a \u043d\u0435 \u0437\u043d\u0430\u0435\u0442 \u043f\u0438\u043d-\u043a\u043e\u0434, \u0438 \u0435\u0433\u043e \u0430\u0442\u0430\u043a\u0430 \u043f\u0440\u043e\u0432\u0430\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/4/#2-laravel-csrf","title":"2. \u041a\u0430\u043a Laravel \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043e\u0442 CSRF?","text":"<p>Laravel \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \"\u043d\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435\" \u0432\u0435\u0431-\u0437\u0430\u043f\u0440\u043e\u0441\u044b (POST, PUT, PATCH, DELETE) \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e CSRF-\u0442\u043e\u043a\u0435\u043d\u0430.</p> <ol> <li>\u041f\u0440\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b Laravel \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439, \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u0442\u043e\u043a\u0435\u043d \u0434\u043b\u044f \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</li> <li>\u042d\u0442\u043e\u0442 \u0442\u043e\u043a\u0435\u043d \u0432\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432 HTML-\u0444\u043e\u0440\u043c\u044b.</li> <li>\u041f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435 \u0444\u043e\u0440\u043c\u044b \u0442\u043e\u043a\u0435\u043d \u0443\u0445\u043e\u0434\u0438\u0442 \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c.</li> <li>\u041d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 middleware <code>VerifyCsrfToken</code> \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u0442\u043e\u043a\u0435\u043d \u0438\u0437 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u0442\u043e\u043a\u0435\u043d\u043e\u043c, \u0445\u0440\u0430\u043d\u044f\u0449\u0438\u043c\u0441\u044f \u0432 \u0441\u0435\u0441\u0441\u0438\u0438.</li> <li>\u0415\u0441\u043b\u0438 \u0442\u043e\u043a\u0435\u043d\u044b \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442, Laravel \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439 419 (Session Expired/Page Expired).</li> </ol> <p>\u0412\u0430\u0436\u043d\u043e: API-\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0432 <code>routes/api.php</code> \u043d\u0435 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b CSRF, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u0438 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u044e\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u043e\u043a\u0435\u043d\u044b Sanctum), \u0430 \u043d\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 cookies. \u041d\u0430\u0448\u0430 \u0442\u0435\u043a\u0443\u0449\u0430\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043a\u0430\u0441\u0430\u0435\u0442\u0441\u044f \u0438\u043c\u0435\u043d\u043d\u043e \u0432\u0435\u0431-\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0432 <code>routes/web.php</code>.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/4/#3-csrf-html-","title":"3. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 CSRF-\u0442\u043e\u043a\u0435\u043d\u0430 \u0432 HTML-\u0444\u043e\u0440\u043c\u0430\u0445","text":"<p>\u042d\u0442\u043e \u0441\u0430\u043c\u044b\u0439 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439. Laravel \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0443\u044e Blade-\u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u0443.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440: \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0440\u043e\u0441\u0442\u0443\u044e \u0444\u043e\u0440\u043c\u0443 \u0432 \u0444\u0430\u0439\u043b\u0435 <code>resources/views/planets/create.blade.php</code>:</p> <pre><code>&lt;h2&gt;\u0424\u043e\u0440\u043c\u0430 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043d\u043e\u0432\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b&lt;/h2&gt;\n&lt;form action=\"/planets\" method=\"POST\"&gt;\n    @csrf {{-- \u0412\u043e\u0442 \u043e\u043d\u0430, \u043c\u0430\u0433\u0438\u044f! --}}\n\n    &lt;label for=\"name\"&gt;\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;\n\n    &lt;label for=\"solar_system\"&gt;\u0421\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"solar_system\" name=\"solar_system\" required&gt;\n\n    {{-- ... \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u043b\u044f ... --}}\n\n    &lt;button type=\"submit\"&gt;\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>\u0414\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u0430 <code>@csrf</code> \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043a\u0440\u044b\u0442\u043e\u0435 \u043f\u043e\u043b\u0435 \u0432 \u0444\u043e\u0440\u043c\u0435: <pre><code>&lt;input type=\"hidden\" name=\"_token\" value=\"j2aK3dLf4gH5...\u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439_\u0442\u043e\u043a\u0435\u043d...\"&gt;\n</code></pre></p> <p>\u042d\u0442\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u0449\u0438\u0442\u044b \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 HTML-\u0444\u043e\u0440\u043c.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/4/#4-csrf-ajaxfetch","title":"4. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 CSRF-\u0442\u043e\u043a\u0435\u043d\u0430 \u0432 AJAX/Fetch \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u0445","text":"<p>\u0412 \u043f\u0440\u043e\u0448\u043b\u043e\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u043b\u0438 <code>DELETE</code> \u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e JavaScript. \u0421\u0435\u0439\u0447\u0430\u0441 Laravel \u0431\u0443\u0434\u0435\u0442 \u0435\u0433\u043e \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439 419. \u041d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c CSRF-\u0442\u043e\u043a\u0435\u043d \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u043d\u0430\u0448\u0435\u0433\u043e Fetch-\u0437\u0430\u043f\u0440\u043e\u0441\u0430.</p> <p>\u0428\u0430\u0433 1: \u0421\u0434\u0435\u043b\u0430\u0442\u044c \u0442\u043e\u043a\u0435\u043d \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u043c \u0434\u043b\u044f JavaScript</p> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043c\u0435\u0442\u0430-\u0442\u0435\u0433 \u0441 \u0442\u043e\u043a\u0435\u043d\u043e\u043c \u0432 <code>&lt;head&gt;</code> \u0432\u0430\u0448\u0435\u0433\u043e \u043c\u0430\u0441\u0442\u0435\u0440-\u043c\u0430\u043a\u0435\u0442\u0430 <code>resources/views/app.blade.php</code>. \u042d\u0442\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 \u0432 Laravel.</p> <pre><code>&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n\n    {{-- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c CSRF-\u0442\u043e\u043a\u0435\u043d \u0432 \u043c\u0435\u0442\u0430-\u0442\u0435\u0433 --}}\n    &lt;meta name=\"csrf-token\" content=\"{{ csrf_token() }}\"&gt;\n\n    {{-- ... --}}\n&lt;/head&gt;\n</code></pre> <p>\u0424\u0443\u043d\u043a\u0446\u0438\u044f <code>csrf_token()</code> \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0442\u043e\u043a\u0435\u043d.</p> <p>\u0428\u0430\u0433 2: \u041c\u043e\u0434\u0438\u0444\u0438\u0446\u0438\u0440\u0443\u0435\u043c JavaScript \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0442\u043e\u043a\u0435\u043d\u0430</p> <p>\u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u043d\u0430\u0448\u0435\u043c <code>public/js/planets.js</code> \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u0442\u043e\u043a\u0435\u043d \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0432\u0441\u0435\u0445 \"\u043d\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0445\" \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.</p> <pre><code>// ... \u0432 \u0444\u0430\u0439\u043b\u0435 public/js/planets.js ...\n\ndocument.addEventListener('DOMContentLoaded', () =&gt; {\n    // \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0442\u043e\u043a\u0435\u043d \u0438\u0437 \u043c\u0435\u0442\u0430-\u0442\u0435\u0433\u0430\n    const csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            // ... \u043b\u043e\u0433\u0438\u043a\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f ...\n\n            try {\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        'X-CSRF-TOKEN': csrfToken // &lt;-- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u043e\u043a\u0435\u043d \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438!\n                    }\n                });\n\n                // ... \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u043b\u043e\u0433\u0438\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043e\u0442\u0432\u0435\u0442\u0430 ...\n            } catch (error) {\n                // ...\n            }\n        });\n    });\n});\n</code></pre> <ul> <li>\u0418\u043c\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 <code>X-CSRF-TOKEN</code> \u2014 \u044d\u0442\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 Laravel \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.</li> </ul> <p>\u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u0448\u0438 AJAX-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0442\u043e\u0436\u0435 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0441\u043d\u043e\u0432\u0430 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u0443 \u2014 \u043d\u0430 \u044d\u0442\u043e\u0442 \u0440\u0430\u0437 \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u0440\u043e\u0439\u0434\u0435\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/4/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u041a\u0430\u043a\u0443\u044e \u0430\u0442\u0430\u043a\u0443 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 CSRF-\u0442\u043e\u043a\u0435\u043d?</p>  a) SQL-\u0438\u043d\u044a\u0435\u043a\u0446\u0438\u0438  b) \u041c\u0435\u0436\u0441\u0430\u0439\u0442\u043e\u0432\u044b\u0439 \u0441\u043a\u0440\u0438\u043f\u0442\u0438\u043d\u0433  c) \u041c\u0435\u0436\u0441\u0430\u0439\u0442\u043e\u0432\u0430\u044f \u043f\u043e\u0434\u0434\u0435\u043b\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 <p>2. \u041a\u0430\u043a\u0430\u044f Blade-\u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043a\u0440\u044b\u0442\u043e\u0435 \u043f\u043e\u043b\u0435 \u0441 CSRF-\u0442\u043e\u043a\u0435\u043d\u043e\u043c \u0432 \u0444\u043e\u0440\u043c\u0443?</p>  a) @token  b) @csrf  c) @form_token <p>3. \u0427\u0442\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0434\u0435\u0442, \u0435\u0441\u043b\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c POST-\u0437\u0430\u043f\u0440\u043e\u0441 \u0431\u0435\u0437 CSRF-\u0442\u043e\u043a\u0435\u043d\u0430 \u043d\u0430 \u0432\u0435\u0431-\u043c\u0430\u0440\u0448\u0440\u0443\u0442?</p>  a) \u041e\u0448\u0438\u0431\u043a\u0430 500 (Internal Server Error)  b) \u041e\u0448\u0438\u0431\u043a\u0430 403 (Forbidden)  c) \u041e\u0448\u0438\u0431\u043a\u0430 419 (Page Expired / Session Expired) <p>4. \u041a\u0430\u043a\u043e\u0439 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 HTTP-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 CSRF-\u0442\u043e\u043a\u0435\u043d\u0430 \u0432 AJAX-\u0437\u0430\u043f\u0440\u043e\u0441\u0430\u0445?</p>  a) Authorization  b) X-CSRF-TOKEN  c) Content-Type <p>5. \u041f\u043e\u0447\u0435\u043c\u0443 API-\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b (`routes/api.php`) \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 CSRF-\u0437\u0430\u0449\u0438\u0442\u0443?</p>  a) \u041f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043e\u043d\u0438 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u044b \u0434\u043b\u044f stateless-\u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438  b) \u042d\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430 \u0432 Laravel, \u0438\u0445 \u043d\u0443\u0436\u043d\u043e \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0432\u0440\u0443\u0447\u043d\u0443\u044e  c) \u041f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e API-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u0434\u0434\u0435\u043b\u0430\u043d\u044b \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0438 \"\u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0438\u044f \u0441\u0432\u043e\u0439-\u0447\u0443\u0436\u043e\u0439\" \u043d\u0430 \u0432\u0430\u0448 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c, \u0437\u0430\u0449\u0438\u0442\u0438\u0432 \u0435\u0433\u043e \u043e\u0442 \u0430\u0442\u0430\u043a CSRF. \u0412\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c:</p> <ul> <li>\u041f\u043e\u043d\u0438\u043c\u0430\u0442\u044c \u0441\u0443\u0442\u044c \u0438 \u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c CSRF-\u0430\u0442\u0430\u043a.</li> <li>\u0417\u0430\u0449\u0438\u0449\u0430\u0442\u044c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 HTML-\u0444\u043e\u0440\u043c\u044b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u044b <code>@csrf</code>.</li> <li>\u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c CSRF-\u0442\u043e\u043a\u0435\u043d \u0432 JavaScript \u0447\u0435\u0440\u0435\u0437 \u043c\u0435\u0442\u0430-\u0442\u0435\u0433.</li> <li>\u0412\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0442\u043e\u043a\u0435\u043d \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 AJAX/Fetch \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0434\u043b\u044f \u0438\u0445 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.</li> </ul> <p>\u0412\u0430\u0448\u0438 \u0432\u0435\u0431-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b, \u043d\u043e \u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u0430\u0448\u0435\u0433\u043e \u0432\u0435\u0431-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u0432, \u043a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/5/","title":"\u0413\u043b\u0430\u0432\u0430 5.5: \u0420\u043e\u0443\u0442\u0438\u043d\u0433 \u0434\u043b\u044f \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 40 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/5/#1-routeswebphp-vs-routesapiphp","title":"1. <code>routes/web.php</code> vs <code>routes/api.php</code>: \u0414\u0432\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u043f\u0443\u043b\u044c\u0442\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f","text":"<p>\u0412\u0430\u0436\u043d\u043e \u0435\u0449\u0435 \u0440\u0430\u0437 \u0437\u0430\u043a\u0440\u0435\u043f\u0438\u0442\u044c \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u0435:</p> \u0425\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430 <code>routes/web.php</code> (\u0412\u0435\u0431-\u043f\u0443\u043b\u044c\u0442) <code>routes/api.php</code> (API-\u043f\u0443\u043b\u044c\u0442) \u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0437\u0430\u0434\u0430\u0447\u0430 \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446, \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0444\u043e\u0440\u043c \u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 JSON \u0434\u043b\u044f \u0434\u0440\u0443\u0433\u0438\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 (State) Stateful (\u0441 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c) \u2014 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u0438 \u0438 cookies Stateless (\u0431\u0435\u0437 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f) \u2014 \u043a\u0430\u0436\u0434\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c Middleware \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>web</code> (\u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u0438, CSRF-\u0437\u0430\u0449\u0438\u0442\u0443, \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0435 cookies) <code>api</code> (\u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \"throttling\" \u2014 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u0442\u043e\u0442\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432) \u041f\u0440\u0435\u0444\u0438\u043a\u0441 URL \u041d\u0435\u0442 (\u043a\u043e\u0440\u0435\u043d\u044c \u0432\u0430\u0448\u0435\u0433\u043e \u0441\u0430\u0439\u0442\u0430) <code>/api/</code> (\u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432 <code>RouteServiceProvider</code>) \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u041e\u0431\u044b\u0447\u043d\u043e \u0447\u0435\u0440\u0435\u0437 \u0441\u0435\u0441\u0441\u0438\u0438 (Login/Password) \u041e\u0431\u044b\u0447\u043d\u043e \u0447\u0435\u0440\u0435\u0437 \u0442\u043e\u043a\u0435\u043d\u044b (Sanctum, Passport) <p>\u041c\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0441 <code>routes/web.php</code>, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0436\u0438\u0432\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/5/#2","title":"2. \u0420\u0435\u0441\u0443\u0440\u0441\u043d\u044b\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0434\u043b\u044f \u0432\u0435\u0431\u0430","text":"<p>\u041f\u043e\u0434\u043e\u0431\u043d\u043e <code>Route::apiResource</code>, \u0434\u043b\u044f \u0432\u0435\u0431\u0430 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 <code>Route::resource</code>. \u041e\u043d \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e CRUD-\u0446\u0438\u043a\u043b\u0430, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0444\u043e\u0440\u043c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</p> <p>\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u043e\u043b\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430\u0448\u0438\u043c\u0438 \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0432\u0435\u0431-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441.</p> <p>\u0428\u0430\u0433 1: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u0432 <code>routes/web.php</code></p> <p>\u0417\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u0435 \u0441\u0442\u0430\u0440\u044b\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0434\u043b\u044f <code>/planets</code> \u0438 \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u0435 \u0438\u0445 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439:</p> <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// Route::get('/planets', [PlanetPageController::class, 'index']);\n// Route::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n\nRoute::resource('planets', PlanetPageController::class);\n</code></pre> <p>\u0428\u0430\u0433 2: \u0421\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u0431\u044b\u043b\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043e \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 <code>php artisan route:list --except-vendor</code>:</p> <pre><code>+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| Method | URI       | Name                   | Action           | Middleware                                      |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| GET|HEAD | planets                | planets.index          | ...\\PlanetPageController@index                    | web        |\n| POST   | planets                | planets.store          | ...\\PlanetPageController@store                    | web        |\n| GET|HEAD | planets/create         | planets.create         | ...\\PlanetPageController@create                   | web        |\n| GET|HEAD | planets/{planet}       | planets.show           | ...\\PlanetPageController@show                     | web        |\n| PUT|PATCH | planets/{planet}       | planets.update         | ...\\PlanetPageController@update                   | web        |\n| DELETE | planets/{planet}       | planets.destroy        | ...\\PlanetPageController@destroy                  | web        |\n| GET|HEAD | planets/{planet}/edit  | planets.edit           | ...\\PlanetPageController@edit                     | web        |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n</code></pre> <p><code>Route::resource</code> \u0441\u043e\u0437\u0434\u0430\u043b \u0434\u043b\u044f \u043d\u0430\u0441 7 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f:</p> <ul> <li><code>planets.create</code> (GET <code>/planets/create</code>): \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0444\u043e\u0440\u043c\u043e\u0439 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f.</li> <li><code>planets.store</code> (POST <code>/planets</code>): \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u044d\u0442\u043e\u0439 \u0444\u043e\u0440\u043c\u044b.</li> <li><code>planets.edit</code> (GET <code>/planets/{planet}/edit</code>): \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0444\u043e\u0440\u043c\u043e\u0439 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</li> <li><code>planets.update</code> (PUT/PATCH <code>/planets/{planet}</code>): \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0444\u043e\u0440\u043c\u044b \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</li> <li><code>planets.destroy</code> (DELETE <code>/planets/{planet}</code>): \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u0430.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/5/#3","title":"3. \u0418\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b: \u0423\u0434\u043e\u0431\u043d\u044b\u0435 \"\u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b\"","text":"<p>\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u043a\u043e\u043b\u043e\u043d\u043a\u0443 <code>Name</code>. Laravel \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u043b \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0443 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0438\u043c\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>planets.index</code>). \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043c\u0435\u043d\u0430 \u0432\u043c\u0435\u0441\u0442\u043e \u0436\u0435\u0441\u0442\u043a\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 URL \u2014 \u044d\u0442\u043e \u043b\u0443\u0447\u0448\u0430\u044f \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0430.</p> <p>\u041f\u043e\u0447\u0435\u043c\u0443? \u0415\u0441\u043b\u0438 \u0432\u044b \u0440\u0435\u0448\u0438\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c URL \u0441 <code>/planets</code> \u043d\u0430 <code>/worlds</code>, \u0432\u0430\u043c \u043d\u0435 \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0438\u0441\u043a\u0430\u0442\u044c \u0438 \u043c\u0435\u043d\u044f\u0442\u044c \u0432\u0441\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u0432 \u0432\u0430\u0448\u0438\u0445 \u0448\u0430\u0431\u043b\u043e\u043d\u0430\u0445. \u0412\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u043c\u0435\u043d\u044f\u0435\u0442\u0435 \u0435\u0433\u043e \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u2014 \u0432 \u0444\u0430\u0439\u043b\u0435 \u0440\u043e\u0443\u0442\u043e\u0432, \u0430 \u0438\u043c\u0435\u043d\u0430 \u043e\u0441\u0442\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u0435\u0436\u043d\u0438\u043c\u0438.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 Blade:</p> <p>\u0420\u0430\u043d\u044c\u0448\u0435 \u043c\u044b \u043f\u0438\u0441\u0430\u043b\u0438 \u0442\u0430\u043a:</p> <pre><code>&lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n</code></pre> <p>\u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0430\u043a, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0445\u0435\u043b\u043f\u0435\u0440 <code>route()</code>: <pre><code>&lt;a href=\"{{ route('planets.show', ['planet' =&gt; $planet-&gt;id]) }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n</code></pre></p> <ul> <li><code>route('planets.show', ...)</code> \u2014 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 URL \u0434\u043b\u044f \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c <code>planets.show</code>.</li> <li><code>['planet' =&gt; $planet-&gt;id]</code> \u2014 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432 URL. Laravel \u0441\u0430\u043c \u043f\u043e\u0434\u0441\u0442\u0430\u0432\u0438\u0442 ID \u0432 <code>{planet}</code>. \u041c\u043e\u0436\u043d\u043e \u0434\u0430\u0436\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0432\u0441\u044e \u043c\u043e\u0434\u0435\u043b\u044c: <code>['planet' =&gt; $planet]</code>.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/5/#4","title":"4. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u044e\u0449\u0438\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435","text":"<p><code>Route::resource</code> \u0441\u043e\u0437\u0434\u0430\u043b \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b, \u043d\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u0432 <code>PlanetPageController</code> \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0430\u043c\u0438\u043c.</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>app/Http/Controllers/Web/PlanetPageController.php</code> \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0438\u0445.</p> <pre><code>&lt;?php\nuse Illuminate\\Http\\Request; // &lt;-- \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c\n\nclass PlanetPageController extends Controller\n{\n    // index() \u0438 show() \u0443 \u043d\u0430\u0441 \u0443\u0436\u0435 \u0435\u0441\u0442\u044c\n\n    /**\n     * \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b.\n     */\n    public function create()\n    {\n        return view('planets.create'); // \u041f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0432\u0438\u0434 \u0441 \u0444\u043e\u0440\u043c\u043e\u0439\n    }\n\n    /**\n     * \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u043d\u043e\u0432\u0443\u044e \u043f\u043b\u0430\u043d\u0435\u0442\u0443 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n     */\n    public function store(Request $request)\n    {\n        // \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets',\n            'solar_system' =&gt; 'required|string|max:100',\n            // ... \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430\n        ]);\n\n        Planet::create($validated);\n\n        // \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0441 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043c \u043e\u0431 \u0443\u0441\u043f\u0435\u0445\u0435\n        return redirect()-&gt;route('planets.index')-&gt;with('success', '\u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0430!');\n    }\n\n    /**\n     * \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u044b.\n     */\n    public function edit(Planet $planet)\n    {\n        return view('planets.edit', ['planet' =&gt; $planet]);\n    }\n\n    /**\n     * \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n     */\n    public function update(Request $request, Planet $planet)\n    {\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets,name,' . $planet-&gt;id,\n            'solar_system' =&gt; 'required|string|max:100',\n        ]);\n\n        $planet-&gt;update($validated);\n\n        return redirect()-&gt;route('planets.show', $planet)-&gt;with('success', '\u0414\u0430\u043d\u043d\u044b\u0435 \u043e \u043f\u043b\u0430\u043d\u0435\u0442\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u044b!');\n    }\n\n    /**\n     * \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u043b\u0430\u043d\u0435\u0442\u0443.\n     */\n    public function destroy(Planet $planet)\n    {\n        $planet-&gt;delete();\n\n        return redirect()-&gt;route('planets.index')-&gt;with('success', '\u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u0441\u043f\u0438\u0441\u0430\u043d\u0430.');\n    }\n}\n</code></pre> <ul> <li><code>redirect()-&gt;route(...)</code> \u2014 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u0439 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043c\u0430\u0440\u0448\u0440\u0443\u0442.</li> <li><code>-&gt;with('success', '...')</code> \u2014 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \"\u0444\u043b\u0435\u0448-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\" \u0432 \u0441\u0435\u0441\u0441\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437. \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c \u0435\u0433\u043e \u0432 \u043d\u0430\u0448\u0435\u043c Blade-\u0448\u0430\u0431\u043b\u043e\u043d\u0435.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/5/#5","title":"5. \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432","text":"<p>\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u043c\u043d\u043e\u0433\u043e \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u0441 \u043e\u0431\u0449\u0438\u043c\u0438 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u043c\u0438 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432\u0441\u0435 \u043e\u043d\u0438 \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u0438 \u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0438\u043c\u0435\u0442\u044c \u043f\u0440\u0435\u0444\u0438\u043a\u0441 <code>/admin</code> \u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 middleware), \u0438\u0445 \u043c\u043e\u0436\u043d\u043e \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c.</p> <pre><code>&lt;?php\nRoute::middleware(['auth', 'admin'])-&gt;prefix('admin')-&gt;name('admin.')-&gt;group(function () {\n    // \u0412\u0441\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0432\u043d\u0443\u0442\u0440\u0438 \u044d\u0442\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u044b \u0431\u0443\u0434\u0443\u0442 \u0438\u043c\u0435\u0442\u044c:\n    // 1. Middleware 'auth' \u0438 'admin'\n    // 2. \u041f\u0440\u0435\u0444\u0438\u043a\u0441 URL '/admin' (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, /admin/planets)\n    // 3. \u041f\u0440\u0435\u0444\u0438\u043a\u0441 \u0438\u043c\u0435\u043d\u0438 'admin.' (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, admin.planets.index)\n\n    Route::resource('planets', PlanetPageController::class);\n    // Route::get('/dashboard', ...)-&gt;name('dashboard'); // -&gt; admin.dashboard\n});\n</code></pre>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/5/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u041a\u0430\u043a\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0432 `routes/web.php` \u0441\u043e\u0437\u0434\u0430\u0441\u0442 \u043f\u043e\u043b\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 CRUD-\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u0434\u043b\u044f \u0432\u0435\u0431-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430?</p>  a) Route::crud('planets', Controller::class)  b) Route::apiResource('planets', Controller::class)  c) Route::resource('planets', Controller::class) <p>2. \u0412 \u0447\u0435\u043c \u0433\u043b\u0430\u0432\u043d\u043e\u0435 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432?</p>  a) \u041e\u043d\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u0431\u044b\u0441\u0442\u0440\u0435\u0435, \u0447\u0435\u043c \u043f\u0440\u044f\u043c\u044b\u0435 URL  b) \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u043b\u0435\u0433\u043a\u043e \u043c\u0435\u043d\u044f\u0442\u044c URL \u0432 \u0444\u0430\u0439\u043b\u0435 \u0440\u043e\u0443\u0442\u043e\u0432, \u043d\u0435 \u043b\u043e\u043c\u0430\u044f \u0441\u0441\u044b\u043b\u043a\u0438 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0430\u0445  c) \u041e\u043d\u0438 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b CSRF <p>3. \u041a\u0430\u043a\u043e\u0439 \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u0431\u0443\u0434\u0435\u0442 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d \u0434\u043b\u044f \u043c\u0435\u0442\u043e\u0434\u0430 `create()` \u0432 `Route::resource('articles', ...)`?</p>  a) GET `/articles/new`  b) GET `/articles/create`  c) POST `/articles/create` <p>4. \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u043a\u043e\u0434 `redirect()-&gt;route('home')-&gt;with('status', 'OK')`?</p>  a) \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 JSON \u0441 'status' =&gt; 'OK' \u043d\u0430 URL `/home`  b) \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043c\u0430\u0440\u0448\u0440\u0443\u0442 `home` \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0432 \u0441\u0435\u0441\u0441\u0438\u044e \u043e\u0434\u043d\u043e\u0440\u0430\u0437\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 'status'  c) \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0432\u0438\u0434 `home.blade.php` \u0441 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 `$status` <p>5. \u0414\u043b\u044f \u0447\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f `Route::prefix('dashboard')`?</p>  a) \u0414\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430 \u043a\u043e \u0432\u0441\u0435\u043c URL \u0432\u043d\u0443\u0442\u0440\u0438 \u0433\u0440\u0443\u043f\u043f\u044b  b) \u0414\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430 \u043a\u043e \u0432\u0441\u0435\u043c \u0438\u043c\u0435\u043d\u0430\u043c \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u0432\u043d\u0443\u0442\u0440\u0438 \u0433\u0440\u0443\u043f\u043f\u044b  c) \u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f middleware `dashboard` \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u043e\u0441\u0432\u043e\u0438\u043b\u0438 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0438 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u043a \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0432\u0435\u0431-\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u0432 Laravel. \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u044b \u0443\u043c\u0435\u0435\u0442\u0435:</p> <ul> <li>\u0420\u0430\u0437\u043b\u0438\u0447\u0430\u0442\u044c <code>web</code> \u0438 <code>api</code> \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0438 \u0438\u0445 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c <code>Route::resource</code> \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 CRUD-\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432.</li> <li>\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0433\u0438\u0431\u043a\u043e\u0433\u043e \u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u043a\u043e\u0434\u0430.</li> <li>\u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0435 CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435 \u0441 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0435\u0439 \u0438 \u0440\u0435\u0434\u0438\u0440\u0435\u043a\u0442\u0430\u043c\u0438.</li> <li>\u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0434\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043e\u0431\u0449\u0438\u0445 \u043f\u0440\u0430\u0432\u0438\u043b.</li> </ul> <p>\u041d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0432\u0430\u0448\u0435\u0433\u043e \"\u043a\u043e\u0440\u0430\u0431\u043b\u044f\" \u0442\u0435\u043f\u0435\u0440\u044c \u043e\u0442\u043a\u0430\u0437\u043e\u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u0430 \u0438 \u0433\u043e\u0442\u043e\u0432\u0430 \u043a \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044e. \u0412 \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u0439 \u0433\u043b\u0430\u0432\u0435 \u044d\u0442\u043e\u0433\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0430 \u043c\u044b \u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043c \u0432\u0441\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u043d\u0438\u044f \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u0445, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0447\u0435\u0440\u0435\u0437 Fetch, \u043d\u0430 \u043d\u0430\u0448\u0435\u0439 Blade-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/6/","title":"\u0413\u043b\u0430\u0432\u0430 5.6: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0447\u0435\u0440\u0435\u0437 Blade + Fetch","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 50 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/6/#1","title":"1. \u0413\u0438\u0431\u0440\u0438\u0434\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434: \u041b\u0443\u0447\u0448\u0435\u0435 \u0438\u0437 \u0434\u0432\u0443\u0445 \u043c\u0438\u0440\u043e\u0432","text":"<p>\u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0434\u0432\u0443\u043c\u044f \u0441\u043f\u043e\u0441\u043e\u0431\u0430\u043c\u0438:</p> <ol> <li>\u041f\u043e\u043b\u043d\u044b\u0439 Server-Side Rendering (SSR): Laravel \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0432\u0435\u0441\u044c HTML, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u0435\u0442. \u0414\u043b\u044f \u043b\u044e\u0431\u043e\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f (\u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f) \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442\u0441\u044f.</li> <li>\u041f\u043e\u043b\u043d\u044b\u0439 Client-Side Rendering (CSR): Laravel \u043e\u0442\u0434\u0430\u0435\u0442 \u043f\u0443\u0441\u0442\u0443\u044e HTML-\"\u043e\u0431\u043e\u043b\u043e\u0447\u043a\u0443\", \u0430 JavaScript \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0443 API \u0438 \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u0442 \u0438\u0445 \u043d\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0435. (\u042d\u0442\u043e \u043f\u043e\u0434\u0445\u043e\u0434 Single Page Application - SPA).</li> </ol> <p>\u041d\u0430\u0448 \u0432\u044b\u0431\u043e\u0440 \u2014 \u0433\u0438\u0431\u0440\u0438\u0434\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434:</p> <ul> <li>\u041f\u0435\u0440\u0432\u0430\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 (SSR): Laravel \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e \u043e\u0442\u0434\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0443\u0436\u0435 \u0433\u043e\u0442\u043e\u0432\u044b\u043c \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u043f\u043b\u0430\u043d\u0435\u0442. \u042d\u0442\u043e \u0431\u044b\u0441\u0442\u0440\u043e \u0438 \u0445\u043e\u0440\u043e\u0448\u043e \u0434\u043b\u044f SEO. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u0438\u0442 \u043a\u043e\u043d\u0442\u0435\u043d\u0442.</li> <li>\u041f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f (CSR): JavaScript \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043a\u043d\u043e\u043f\u043e\u043a) \u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u0441 API, \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0443\u0436\u043d\u044b\u0435 \u0447\u0430\u0441\u0442\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u0431\u0435\u0437 \u043f\u043e\u043b\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438.</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>\u041f\u0440\u0438 \u0432\u0445\u043e\u0434\u0435 \u043d\u0430 \u043c\u043e\u0441\u0442\u0438\u043a \u0432\u0430\u043c \u0441\u0440\u0430\u0437\u0443 \u0432\u044b\u0434\u0430\u044e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u0443\u044e \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u0443\u044e \u043a\u0430\u0440\u0442\u0443, \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u043d\u043d\u0443\u044e \u0432 \u0426\u0423\u041f (SSR). \u041e\u043d\u0430 \u0443\u0436\u0435 \u0443 \u0432\u0430\u0441 \u0432 \u0440\u0443\u043a\u0430\u0445, \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0436\u0434\u0430\u0442\u044c. \u041d\u043e \u0437\u0430\u0442\u0435\u043c \u0432\u044b \u0430\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442\u0435 \"\u0436\u0438\u0432\u043e\u0439 \u0440\u0435\u0436\u0438\u043c\" \u043d\u0430 \u0441\u0432\u043e\u0435\u043c \u043f\u043b\u0430\u043d\u0448\u0435\u0442\u0435 (CSR), \u0438 \u043e\u043d \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442 \u0441\u043f\u0443\u0442\u043d\u0438\u043a\u043e\u0432 \u0432 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u043f\u0435\u0440\u0435\u0440\u0438\u0441\u043e\u0432\u044b\u0432\u0430\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043d\u0430 \u0432\u0430\u0448\u0435\u0439 \u043a\u0430\u0440\u0442\u0435.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/6/#2-1","title":"2. \u0428\u0430\u0433 1: \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b","text":"<p>\u041c\u044b \u0431\u0443\u0434\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043d\u0430\u0448\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435\u0439 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043b\u0430\u043d\u0435\u0442 <code>resources/views/planets/index.blade.php</code>. \u041e\u043d\u0430 \u0443\u0436\u0435 \u0443\u043c\u0435\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430. \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u0430 \u043d\u0435\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 JS.</p> <p>\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \"\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a\" \u0438 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439: <pre><code>    &lt;div class=\"controls\"&gt;\n        &lt;h2&gt;\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0445 \u043f\u043b\u0430\u043d\u0435\u0442&lt;/h2&gt;\n        &lt;button id=\"refresh-btn\"&gt;\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0447\u0435\u0440\u0435\u0437 API&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div id=\"notification-area\" class=\"notification\"&gt;&lt;/div&gt;\n    &lt;hr&gt;\n    {{-- \u042d\u0442\u043e\u0442 div \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0448\u0438\u043c \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u043c \u0434\u043b\u044f \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f --}}\n    &lt;div id=\"planet-list-container\" class=\"planet-list\"&gt;\n        {{-- \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u043c \"\u0434\u043e\u0447\u0435\u0440\u043d\u0438\u0439\" \u0432\u0438\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u0442 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a --}}\n        @include('planets.partials.list', ['planets' =&gt; $planets])\n    &lt;/div&gt;\n</code></pre></p> <p>\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 <code>@include('planets.partials.list', ...)</code>. \u041c\u044b \u0432\u044b\u043d\u0435\u0441\u043b\u0438 \u043b\u043e\u0433\u0438\u043a\u0443 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439, \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 \u0444\u0430\u0439\u043b.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/6/#2-partial","title":"\u0428\u0430\u0433 2: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0433\u043e \"\u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e\u0433\u043e\" \u0432\u0438\u0434\u0430 (Partial)","text":"<p>\u0412\u044b\u043d\u043e\u0441\u0438\u0442\u044c \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u0447\u0430\u0441\u0442\u0438 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u2014 \u0445\u043e\u0440\u043e\u0448\u0430\u044f \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0430.</p> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>resources/views/planets/partials/list.blade.php</code>:</p> <pre><code>@forelse($planets as $planet)\n    &lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n        &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n        &lt;p&gt;\u0421\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430: {{ $planet-&gt;solar_system }}&lt;/p&gt;\n        &lt;p&gt;\u0414\u0438\u0430\u043c\u0435\u0442\u0440: {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} \u043a\u043c&lt;/p&gt;\n        &lt;a href=\"{{ route('planets.show', $planet) }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n        &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"{{ route('api.planets.destroy', $planet) }}\"&gt;\n            \u0421\u043f\u0438\u0441\u0430\u0442\u044c\n        &lt;/button&gt;\n    &lt;/div&gt;\n@empty\n    &lt;p&gt;\u0412 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435\u0442 \u043d\u0438 \u043e\u0434\u043d\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b.&lt;/p&gt;\n@endforelse\n</code></pre> <ul> <li>\u0412\u0430\u0436\u043d\u043e: \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e URL \u0434\u043b\u044f \u043a\u043d\u043e\u043f\u043a\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0442\u0435\u043f\u0435\u0440\u044c \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f API-\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430: <code>route('api.planets.destroy', $planet)</code>. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432 <code>routes/api.php</code> \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441: <code>Route::apiResource('planets', ...)-&gt;name('api.planets');</code></li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/6/#3-javascript","title":"\u0428\u0430\u0433 3: \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 JavaScript \u0434\u043b\u044f \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f","text":"<p>\u0422\u0435\u043f\u0435\u0440\u044c \u0441\u0430\u043c\u043e\u0435 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e\u0435. \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c JavaScript, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0442\u044c \u0441\u0432\u0435\u0436\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u0435\u0442 \u0443 API \u0438 \u043f\u0435\u0440\u0435\u0440\u0438\u0441\u043e\u0432\u044b\u0432\u0430\u0442\u044c \u0435\u0433\u043e.</p> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>public/js/planet-manager.js</code> \u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u0435 \u0435\u0433\u043e \u0432 <code>layouts/app.blade.php</code>.</p> <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    const refreshBtn = document.getElementById('refresh-btn');\n    const planetListContainer = document.getElementById('planet-list-container');\n    const notificationArea = document.getElementById('notification-area');\n\n    // \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u043a\u0430\u0437\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439\n    function showNotification(message, isError = false) {\n        notificationArea.textContent = message;\n        notificationArea.className = isError ? 'notification error' : 'notification success';\n        setTimeout(() =&gt; {\n            notificationArea.textContent = '';\n            notificationArea.className = 'notification';\n        }, 3000);\n    }\n\n    // \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0442\u0440\u0438\u0441\u043e\u0432\u043a\u0438 \u043e\u0434\u043d\u043e\u0439 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u043f\u043b\u0430\u043d\u0435\u0442\u044b\n    function createPlanetCardHtml(planet) {\n        // \u0412\u0410\u0416\u041d\u041e: \u041c\u044b \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 HTML, \u043a\u0430\u043a \u0438 \u0432 \u043d\u0430\u0448\u0435\u043c partial-\u0432\u0438\u0434\u0435\n        return `\n            &lt;div class=\"planet-card\" id=\"planet-card-${planet.id}\"&gt;\n                &lt;h3&gt;${planet.name}&lt;/h3&gt;\n                &lt;p&gt;\u0421\u043e\u043b\u043d\u0435\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430: ${planet.solar_system}&lt;/p&gt;\n                &lt;p&gt;\u0414\u0438\u0430\u043c\u0435\u0442\u0440: ${new Intl.NumberFormat().format(planet.size_km)} \u043a\u043c&lt;/p&gt;\n                &lt;a href=\"/planets/${planet.id}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n                &lt;button class=\"delete-btn\" data-id=\"${planet.id}\" data-url=\"/api/planets/${planet.id}\"&gt;\n                    \u0414\u0435\u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f (JS)\n                &lt;/button&gt;\n            &lt;/div&gt;\n        `;\n    }\n\n    // \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u043f\u0435\u0440\u0435\u0440\u0438\u0441\u043e\u0432\u043a\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043b\u0430\u043d\u0435\u0442\n    async function fetchAndRenderPlanets() {\n        showNotification('\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u044e \u0441\u0432\u0435\u0436\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u043e\u0440\u0431\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u043f\u0443\u0442\u043d\u0438\u043a\u043e\u0432...');\n        try {\n            const response = await fetch('/api/planets', {\n                headers: { 'Accept': 'application/json' }\n            });\n\n            if (!response.ok) {\n                throw new Error('\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0442\u0438 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.');\n            }\n\n            const planets = await response.json(); // Laravel \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432\u0435\u0440\u043d\u0435\u0442 { data: [...] } \u0434\u043b\u044f \u043f\u0430\u0433\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u0430\n\n            planetListContainer.innerHTML = ''; // \u041e\u0447\u0438\u0449\u0430\u0435\u043c \u0441\u0442\u0430\u0440\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a\n\n            if (planets.data.length === 0) {\n                planetListContainer.innerHTML = '&lt;p&gt;\u0412 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435\u0442 \u043d\u0438 \u043e\u0434\u043d\u043e\u0439 \u043f\u043b\u0430\u043d\u0435\u0442\u044b.&lt;/p&gt;';\n            } else {\n                planets.data.forEach(planet =&gt; {\n                    const cardHtml = createPlanetCardHtml(planet);\n                    planetListContainer.innerHTML += cardHtml;\n                });\n            }\n            showNotification('\u0414\u0430\u043d\u043d\u044b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u044b!', false);\n        } catch (error) {\n            console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043b\u0430\u043d\u0435\u0442:', error);\n            showNotification(error.message, true);\n        }\n    }\n\n    // \u0412\u0435\u0448\u0430\u0435\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443\n    if (refreshBtn) {\n        refreshBtn.addEventListener('click', fetchAndRenderPlanets);\n    }\n\n    // \u0421\u044e\u0434\u0430 \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u043b\u043e\u0433\u0438\u043a\u0443 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0438\u0437 \u043f\u0440\u043e\u0448\u043b\u043e\u0439 \u0433\u043b\u0430\u0432\u044b,\n    // \u0447\u0442\u043e\u0431\u044b \u0432\u0435\u0441\u044c JS \u0431\u044b\u043b \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435.\n});\n</code></pre>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/6/#3","title":"3. \u0424\u0438\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430","text":"<ol> <li>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0441\u0435\u0440\u0432\u0435\u0440 (<code>php artisan serve</code> \u0438\u043b\u0438 \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e Herd \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442).</li> <li>\u041f\u0435\u0440\u0435\u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0431\u0430\u0437\u0443, \u0435\u0441\u043b\u0438 \u043d\u0443\u0436\u043d\u043e: <code>php artisan migrate:fresh --seed</code>.</li> <li>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 <code>/planets</code> \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435.<ul> <li>\u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0440\u0430\u0437\u0443 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u0435\u0442, \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c.</li> </ul> </li> <li>\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \u043a\u043d\u043e\u043f\u043a\u0443 \"\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0447\u0435\u0440\u0435\u0437 API\".<ul> <li>\u0412\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435.</li> <li>\u0421\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u043b\u0436\u0435\u043d \u043d\u0430 \u043c\u0433\u043d\u043e\u0432\u0435\u043d\u0438\u0435 \u0438\u0441\u0447\u0435\u0437\u043d\u0443\u0442\u044c \u0438 \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u0441\u043d\u043e\u0432\u0430, \u043d\u043e \u043d\u0430 \u044d\u0442\u043e\u0442 \u0440\u0430\u0437 \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d JavaScript-\u043e\u043c \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0434\u0430\u043d\u043d\u044b\u0445, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u043e\u0442 API.</li> </ul> </li> </ol> <p>\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043b\u0438 \u0433\u0438\u0431\u0440\u0438\u0434\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c!</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%205%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D1%84%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4%D0%B0%20%D1%81%20Laravel/6/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 \u0433\u0438\u0431\u0440\u0438\u0434\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u043a \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u043d\u0433\u0443 (SSR + CSR)?</p>  a) \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u0442\u0441\u044f \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430, \u043f\u043e\u0442\u043e\u043c JS \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0432\u0435\u0441\u044c \u043a\u043e\u043d\u0442\u0435\u043d\u0442  b) \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u0434\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0433\u043e\u0442\u043e\u0432\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0438 \u043e\u043d\u0430 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0435  c) \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u0434\u0430\u0435\u0442 \u0433\u043e\u0442\u043e\u0432\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u043f\u0435\u0440\u0432\u043e\u0439 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438, \u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u044f\u0442 \u043d\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0435 \u0447\u0435\u0440\u0435\u0437 JS <p>2. \u041a\u0430\u043a\u043e\u0439 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043f\u043b\u044e\u0441 \u043f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u043e\u0442\u0440\u0438\u0441\u043e\u0432\u043a\u0438 (SSR)?</p>  a) \u0423\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u0435 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440  b) \u0411\u044b\u0441\u0442\u0440\u0430\u044f \u043f\u0435\u0440\u0432\u0430\u044f \u043e\u0442\u0440\u0438\u0441\u043e\u0432\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0445\u043e\u0440\u043e\u0448\u0430\u044f SEO-\u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044f  c) \u0423\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u0435 JavaScript-\u043a\u043e\u0434\u0430 <p>3. \u0417\u0430\u0447\u0435\u043c \u0432 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f `@include('planets.partials.list')`?</p>  a) \u042d\u0442\u043e \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0435 Blade \u0434\u043b\u044f \u0446\u0438\u043a\u043b\u043e\u0432  b) \u0414\u043b\u044f \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u0434\u0430 \u0438 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043b\u043e\u0433\u0438\u043a\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430  c) \u0414\u043b\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0447\u0430\u0441\u0442\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b <p>4. \u0412 JavaScript-\u043a\u043e\u0434\u0435 \u043c\u044b \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u0435\u043c HTML-\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438. \u041a\u0430\u043a\u043e\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u043e\u0434\u0432\u0438\u043d\u0443\u0442\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u044d\u0442\u043e\u0433\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c?</p>  a) \u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0442\u044c \u0443 API \u043d\u0435 JSON, \u0430 \u0443\u0436\u0435 \u0433\u043e\u0442\u043e\u0432\u044b\u0439 \u043e\u0442\u0440\u0435\u043d\u0434\u0435\u0440\u0435\u043d\u043d\u044b\u0439 HTML \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0439 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438  b) \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c JavaScript-\u0448\u0430\u0431\u043b\u043e\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u044b (\u043a\u0430\u043a Mustache, Handlebars) \u0438\u043b\u0438 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0438 (Vue, React)  c) \u041e\u0431\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u0432\u0435\u0440\u043d\u044b <p>5. \u041f\u043e\u0447\u0435\u043c\u0443 \u0432\u0430\u0436\u043d\u043e, \u0447\u0442\u043e\u0431\u044b API (`/api/planets`) \u0438 JavaScript-\u043a\u043e\u0434 (`createPlanetCardHtml`) \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u043a\u043e\u043d\u0441\u0438\u0441\u0442\u0435\u043d\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435/HTML?</p>  a) \u0418\u043d\u0430\u0447\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0432\u0438\u0434\u0438\u0442 \"\u0441\u043a\u0430\u0447\u043e\u043a\" \u0438\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0432 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0435 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 API  b) \u042d\u0442\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f Fetch API  c) \u0418\u043d\u0430\u0447\u0435 Laravel \u0432\u0435\u0440\u043d\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 500 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435\u043c \u0413\u043b\u0430\u0432\u044b 5!</p> <p>\u0412\u044b \u043f\u0440\u043e\u0448\u043b\u0438 \u043e\u0433\u0440\u043e\u043c\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \u043e\u0442 \u043e\u0441\u043d\u043e\u0432 Blade \u0434\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u0433\u0438\u0431\u0440\u0438\u0434\u043d\u044b\u0445 \u0441\u0442\u0440\u0430\u043d\u0438\u0446. \u0412\u044b \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c:</p> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Blade-\u0448\u0430\u0431\u043b\u043e\u043d\u044b \u0438 \u043c\u0430\u043a\u0435\u0442\u044b.</li> <li>\u041e\u0440\u0433\u0430\u043d\u0438\u0437\u043e\u0432\u044b\u0432\u0430\u0442\u044c \u0432\u0435\u0431-\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0438 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u044b \u0434\u043b\u044f CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439.</li> <li>\u0417\u0430\u0449\u0438\u0449\u0430\u0442\u044c \u0432\u0435\u0431-\u0444\u043e\u0440\u043c\u044b \u0438 AJAX-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e CSRF-\u0442\u043e\u043a\u0435\u043d\u043e\u0432.</li> <li>\u0418\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c JavaScript \u0434\u043b\u044f \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 API \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.</li> </ul> <p>\u0412\u0430\u0448 \u0426\u0435\u043d\u0442\u0440 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0435\u0442\u0430\u043c\u0438 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u0435\u043d, \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0435\u043d \u0438 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u0435\u043d. \u0412\u044b \u0433\u043e\u0442\u043e\u0432\u044b \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0431\u043e\u043b\u044c\u0448\u043e\u043c\u0443 \u044d\u0442\u0430\u043f\u0443 \u2014 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u044d\u0442\u043e\u0433\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0430 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430\u043c\u0438 \u0438 \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044e \u043b\u0443\u0447\u0448\u0438\u0445 \u043f\u0440\u0430\u043a\u0442\u0438\u043a \u0434\u043b\u044f production.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/1/","title":"\u0413\u043b\u0430\u0432\u0430 6.1: \u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 FastAPI \u0441 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u043e\u043c","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 30 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/1/#1","title":"1. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043a \"\u0433\u0438\u043f\u0435\u0440\u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044e\": \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u043e\u0432","text":"<p>\u0412 \u043f\u0440\u043e\u0448\u043b\u043e\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0441\u043e\u0441\u0442\u044b\u043a\u043e\u0432\u0430\u043b\u0438 \u043d\u0430\u0448 \u0426\u0423\u041f (\u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434) \u0441 \"\u041c\u041a\u0421\" (Laravel API). \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u0432\u0435\u0440\u043d\u0435\u043c\u0441\u044f \u043a \u043d\u0430\u0448\u0435\u043c\u0443 \u0441\u0432\u0435\u0440\u0445\u0441\u0432\u0435\u0442\u043e\u0432\u043e\u043c\u0443 \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044e (FastAPI) \u0438 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043c \u0442\u0443 \u0436\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e.</p> <p>\u0426\u0435\u043b\u044c \u044d\u0442\u043e\u0439 \u0433\u043b\u0430\u0432\u044b \u2014 \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u044c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u0430 \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0434\u0432\u0430 \u043f\u043e\u0434\u0445\u043e\u0434\u0430. \u042d\u0442\u043e \u043a\u0430\u043a \u0435\u0441\u043b\u0438 \u0431\u044b \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u043a\u043e\u0440\u0430\u0431\u043b\u044c Dragon \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u044b\u043a\u043e\u0432\u0430\u043b\u0441\u044f \u0441 \u041c\u041a\u0421, \u0430 \u043f\u043e\u0442\u043e\u043c \u0441 \u043a\u0438\u0442\u0430\u0439\u0441\u043a\u043e\u0439 \u0441\u0442\u0430\u043d\u0446\u0438\u0435\u0439 \"\u0422\u044f\u043d\u044c\u0433\u0443\u043d\". \u0421\u0442\u044b\u043a\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u0443\u0437\u0435\u043b \u0442\u043e\u0442 \u0436\u0435 (REST), \u043d\u043e \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043d\u044e\u0430\u043d\u0441\u044b \u0432 \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430\u0445 \u0438 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043f\u043e\u0440\u0442\u043e\u0432.</p> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>\u041f\u0440\u043e\u0446\u0435\u0441\u0441 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432: \u043f\u043e\u0434\u043b\u0435\u0442\u0435\u0442\u044c, \u0432\u044b\u0440\u043e\u0432\u043d\u044f\u0442\u044c\u0441\u044f, \u0441\u043e\u0441\u0442\u044b\u043a\u043e\u0432\u0430\u0442\u044c\u0441\u044f. \u041d\u043e \u0434\u043b\u044f \"\u041c\u041a\u0421\" \u043d\u0443\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0440\u0442 <code>/api/planets</code>, \u0430 \u0434\u043b\u044f \"\u0422\u044f\u043d\u044c\u0433\u0443\u043d\" \u2014 \u043f\u043e\u0440\u0442 <code>/spaceships</code>. \u041d\u0430\u0448 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u0432 \u0426\u0423\u041f\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u0437\u043d\u0430\u0442\u044c \u044d\u0442\u0438 \u0434\u0435\u0442\u0430\u043b\u0438, \u0447\u0442\u043e\u0431\u044b \u043c\u0438\u0441\u0441\u0438\u044f \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/1/#2-fastapi","title":"2. \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \"\u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044f\" (FastAPI) \u043a \u0441\u0442\u044b\u043a\u043e\u0432\u043a\u0435","text":"<p>\u041c\u044b \u0443\u0436\u0435 \u0434\u0435\u043b\u0430\u043b\u0438 \u044d\u0442\u043e \u0432 \u0413\u043b\u0430\u0432\u0435 4.2, \u043d\u043e \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0443\u0431\u0435\u0434\u0438\u043c\u0441\u044f, \u0447\u0442\u043e \u0432\u0441\u0435 \u043d\u0430 \u043c\u0435\u0441\u0442\u0435.</p> <p>\u0428\u0430\u0433 1: \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440 FastAPI</p> <ol> <li>\u041e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0435\u0440\u0432\u0435\u0440 Laravel, \u0435\u0441\u043b\u0438 \u043e\u043d \u0437\u0430\u043f\u0443\u0449\u0435\u043d (\u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0431\u044b\u043b\u043e \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0430 \u043f\u043e\u0440\u0442\u043e\u0432).</li> <li>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b \u0432 \u043f\u0430\u043f\u043a\u0435 \u0432\u0430\u0448\u0435\u0433\u043e FastAPI-\u043f\u0440\u043e\u0435\u043a\u0442\u0430.</li> <li> <p>\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435:</p> <ul> <li>Windows: <code>.\\venv\\Scripts\\Activate.ps1</code></li> <li>macOS / Linux: <code>source venv/bin/activate</code></li> </ul> </li> <li> <p>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0441\u0435\u0440\u0432\u0435\u0440:     <pre><code>uvicorn main:app --reload\n</code></pre>     \u0421\u0435\u0440\u0432\u0435\u0440 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>http://127.0.0.1:8000</code>.</p> </li> </ol> <p>\u0428\u0430\u0433 2: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 CORS \u0432 <code>main.py</code></p> <p>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432 \u0432\u0430\u0448\u0435\u043c FastAPI-\u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u0435\u0441\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 <code>CORSMiddleware</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u0440\u0430\u043d\u0435\u0435. \u041e\u043d \u0434\u043e\u043b\u0436\u0435\u043d \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0441 \u0430\u0434\u0440\u0435\u0441\u0430 \u0432\u0430\u0448\u0435\u0433\u043e \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430. <pre><code># main.py\nfrom fastapi.middleware.cors import CORSMiddleware\n\n# ...\n\norigins = [\n    \"http://127.0.0.1:5500\", # \u0410\u0434\u0440\u0435\u0441 Live Server\n    \"null\", # \u0414\u043b\u044f file:///\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n# ...\n</code></pre> \u0415\u0441\u043b\u0438 \u0432\u0441\u0435 \u043d\u0430 \u043c\u0435\u0441\u0442\u0435, \u0432\u0430\u0448 FastAPI-\u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0433\u043e\u0442\u043e\u0432.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/1/#3-fastapi","title":"3. \u041f\u0435\u0440\u0435\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \"\u0430\u043d\u0442\u0435\u043d\u043d\u044b\" \u0426\u0423\u041f\u0430 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043d\u0430 FastAPI","text":"<p>\u0422\u0435\u043f\u0435\u0440\u044c \u0441\u0430\u043c\u043e\u0435 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e\u0435 \u2014 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u0432\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u0430\u0448 JavaScript, \u0447\u0442\u043e\u0431\u044b \u043e\u043d \u0441\u043d\u043e\u0432\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u043b \u0441 FastAPI.</p> <p>\u0428\u0430\u0433 1: \u041c\u0435\u043d\u044f\u0435\u043c \u0431\u0430\u0437\u043e\u0432\u044b\u0439 URL</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>api.js</code> \u0438 \u0432\u0435\u0440\u043d\u0438\u0442\u0435 <code>API_BASE_URL</code> \u043a \u0435\u0433\u043e \u043f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e. <pre><code>// api.js\n\n// \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c URL \u043d\u0430\u0448\u0435\u0433\u043e FastAPI API\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // &lt;-- \u0411\u0435\u0437 /api!\n\n// ... \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434 apiRequest ...\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u0410\u0434\u0430\u043f\u0442\u0430\u0446\u0438\u044f \u043a \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 FastAPI</p> <p>\u0412\u0441\u043f\u043e\u043c\u043d\u0438\u043c, \u0447\u0442\u043e \u043d\u0430\u0448 <code>GET /spaceships</code> \u0432 FastAPI \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0430 \u043d\u0435 \u043e\u0431\u044a\u0435\u043a\u0442 \u0441 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0435\u0439. \u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043a\u043e\u0434 <code>fetchAndDisplayFleet</code> \u043a \u0435\u0433\u043e \u043f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0432\u0438\u0434\u0443.</p> <p>\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e <code>fetchAndDisplayFleet</code> \u0432 <code>app.js</code>: <pre><code>// app.js\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0442\u0435\u043b\u0435\u043c\u0435\u0442\u0440\u0438\u0438 \u043e\u0442 FastAPI...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- \u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 /spaceships\n\n        // \u0412 FastAPI \u0443 \u043d\u0430\u0441 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043a\u043b\u044e\u0447 .data \u043d\u0435 \u043d\u0443\u0436\u0435\u043d!\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;\u0412 \u0440\u0435\u0435\u0441\u0442\u0440\u0435 \u043d\u0435\u0442 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432.&lt;/p&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            // \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u043d\u0430\u0448\u0443 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0444\u043b\u043e\u0442\u0430: ${error.message}&lt;/p&gt;`;\n    }\n}\n\n// \u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a \u043a\u043e\u0440\u0430\u0431\u043b\u0435\u0439\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;\u0422\u0438\u043f: ${ship.type}&lt;/p&gt;\n        &lt;p&gt;\u0413\u043e\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u0430: ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;\u0421\u0442\u0430\u0442\u0443\u0441: ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;\u0421\u043f\u0438\u0441\u0430\u0442\u044c&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n</code></pre></p> <p>\u0428\u0430\u0433 3: \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439</p> <p>\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043d\u0430\u0448\u0438 Pydantic-\u043c\u043e\u0434\u0435\u043b\u0438 \u0432 FastAPI \u0438 \u043f\u043e\u043b\u044f \u0432 HTML-\u0444\u043e\u0440\u043c\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442 (<code>name</code>, <code>type</code>, <code>launch_year</code>, <code>status</code>), \u0444\u0443\u043d\u043a\u0446\u0438\u0438 <code>handleSaveShip</code> \u0438 <code>handleDeleteShip</code> \u0434\u043e\u043b\u0436\u043d\u044b \u0437\u0430\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0431\u0435\u0437 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u0438 \u0443\u0436\u0435 \u043d\u0430\u0446\u0435\u043b\u0435\u043d\u044b \u043d\u0430 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 <code>/spaceships</code>.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/1/#4-","title":"4. \u0418\u0442\u043e\u0433\u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f: \u0427\u0442\u043e \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442 \u0434\u043b\u044f \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430?","text":"<ul> <li>\u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c REST: \u0412\u044b \u043d\u0430\u0433\u043b\u044f\u0434\u043d\u043e \u0443\u0431\u0435\u0434\u0438\u043b\u0438\u0441\u044c, \u0447\u0442\u043e \u0434\u043b\u044f \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043d\u0430 \u0447\u0435\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u043d \u0431\u044d\u043a\u0435\u043d\u0434 (PHP/Laravel \u0438\u043b\u0438 Python/FastAPI), \u0435\u0441\u043b\u0438 \u043e\u043d \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0430\u043c REST.</li> <li>\u0412\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438: \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043e\u0442\u043b\u0438\u0447\u0438\u044f \u0437\u0430\u043a\u043b\u044e\u0447\u0430\u043b\u0438\u0441\u044c \u0432 URL \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432 \u0438 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435 JSON-\u043e\u0442\u0432\u0435\u0442\u043e\u0432. \u042d\u0442\u043e \u0438\u043c\u0435\u043d\u043d\u043e \u0442\u043e, \u0447\u0442\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043e\u043f\u0438\u0441\u0430\u043d\u043e \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 API. \u0411\u0435\u0437 \u043d\u0435\u0435 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \"\u0432\u0441\u043b\u0435\u043f\u0443\u044e\".</li> <li>\u0413\u0438\u0431\u043a\u043e\u0441\u0442\u044c \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430: \u0412\u0430\u0448 JavaScript-\u043a\u043e\u0434 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0433\u0438\u0431\u043a\u0438\u043c, \u0447\u0442\u043e\u0431\u044b \u043b\u0435\u0433\u043a\u043e \u0430\u0434\u0430\u043f\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043a \u0440\u0430\u0437\u043d\u044b\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u043c \u0434\u0430\u043d\u043d\u044b\u0445 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c, \u0435\u0441\u0442\u044c \u043b\u0438 \u043a\u043b\u044e\u0447 <code>data</code>, \u0438\u043b\u0438 \u044d\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u043c\u0430\u0441\u0441\u0438\u0432).</li> </ul> <p>\u0412\u044b\u0432\u043e\u0434: \u041d\u0430\u0432\u044b\u043a \u0440\u0430\u0431\u043e\u0442\u044b \u0441 REST API \u2014 \u044d\u0442\u043e \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043b\u044e\u0447, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u0432\u0435\u0440\u0438 \u043a \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044e \u0441 \u043b\u044e\u0431\u044b\u043c \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c \u0431\u044d\u043a\u0435\u043d\u0434\u043e\u043c.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/1/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0435 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u0432 URL \u043c\u0435\u0436\u0434\u0443 \u043d\u0430\u0448\u0438\u043c Laravel API \u0438 FastAPI API \u0431\u044b\u043b\u043e \u0432...</p>  a) \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0440\u0430\u0437\u043d\u044b\u0445 \u043f\u043e\u0440\u0442\u043e\u0432  b) \u041d\u0430\u043b\u0438\u0447\u0438\u0438 \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430 `/api` \u0443 Laravel  c) \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 HTTPS \u0443 FastAPI <p>2. \u041a\u0430\u043a\u043e\u0435 \u0433\u043b\u0430\u0432\u043d\u043e\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0432 \u043a\u043e\u0434\u0435 JS \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043b\u043e\u0441\u044c \u043f\u0440\u0438 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u0441 \u043f\u0430\u0433\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0442\u0432\u0435\u0442\u0430 Laravel \u043d\u0430 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 FastAPI?</p>  a) \u041f\u0435\u0440\u0435\u0441\u0442\u0430\u0442\u044c \u043e\u0431\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f \u043a `responseData.data` \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c `responseData` \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e  b) \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0435\u0442\u043e\u0434 `fetch`  c) \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c `Content-Type` \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0445 <p>3. \u042d\u0442\u043e\u0442 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442 \u0434\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0447\u0442\u043e \u0434\u043b\u044f \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430...</p>  a) \u0412\u0430\u0436\u043d\u043e \u0437\u043d\u0430\u0442\u044c \u0438 PHP, \u0438 Python  b) \u0412\u0430\u0436\u043d\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u0442\u044c \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u044b REST \u0438 \u0443\u043c\u0435\u0442\u044c \u0447\u0438\u0442\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e API  c) Laravel \u0438 FastAPI \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u044b <p>4. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 CORS \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0437\u0430\u0434\u0430\u0447\u0435\u0439...</p>  a) \u0424\u0440\u043e\u043d\u0442\u0435\u043d\u0434-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430  b) \u0421\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430  c) \u0411\u044d\u043a\u0435\u043d\u0434-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 <p>5. \u0415\u0441\u043b\u0438 \u0431\u044b \u0432 FastAPI \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0430\u0441\u044c \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f, \u043a\u0430\u043a \u0432 Laravel, \u0447\u0442\u043e \u0431\u044b \u043d\u0430\u043c \u043f\u0440\u0438\u0448\u043b\u043e\u0441\u044c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0430 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0435?</p>  a) \u041d\u0438\u0447\u0435\u0433\u043e, \u043a\u043e\u0434 \u0431\u044b \u0437\u0430\u0440\u0430\u0431\u043e\u0442\u0430\u043b \u0441\u0430\u043c  b) \u0421\u043d\u043e\u0432\u0430 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0442\u044c \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u0437 \u043a\u043b\u044e\u0447\u0430 `data` (\u0438\u043b\u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e\u0433\u043e)  c) \u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u0441 `fetch` \u043d\u0430 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 Axios \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0438\u043b\u0438 \"\u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u044b \u0441\u0432\u044f\u0437\u0438\" \u0432\u0430\u0448\u0435\u0433\u043e \u0426\u0423\u041f\u0430 \u0438 \u043d\u0430 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435 \u0441\u0440\u0430\u0432\u043d\u0438\u043b\u0438 \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 \u0434\u0432\u0443\u043c\u044f \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u0431\u044d\u043a\u0435\u043d\u0434-\u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438.</p> <ul> <li>\u2705 \u0412\u044b \u0437\u0430\u043a\u0440\u0435\u043f\u0438\u043b\u0438 \u043d\u0430\u0432\u044b\u043a \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 <code>API_BASE_URL</code> \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c\u0438.</li> <li>\u2705 \u0412\u044b \u043f\u043e\u043d\u044f\u043b\u0438, \u043a\u0430\u043a \u0432\u0430\u0436\u043d\u0430 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 (<code>data</code> vs \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432) \u0438 \u043a\u0430\u043a \u0430\u0434\u0430\u043f\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a \u043d\u0435\u0439 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434.</li> <li>\u2705 \u0412\u044b \u043e\u0441\u043e\u0437\u043d\u0430\u043b\u0438, \u0447\u0442\u043e \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0433\u043e\u0442\u043e\u0432 \u043a \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u043b\u044e\u0431\u044b\u043c RESTful API, \u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0437\u0443\u0447\u0438\u0432 \u0435\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e.</li> </ul> <p>\u041d\u0430\u0432\u044b\u043a \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u044b\u043a\u043e\u0432\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d! \u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043e\u0433\u0434\u0430 \u043c\u044b \u0443\u043c\u0435\u0435\u043c \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c \u0431\u0430\u0437\u043e\u0432\u0443\u044e \u0441\u0432\u044f\u0437\u044c, \u043f\u043e\u0440\u0430 \u043f\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u0442\u044c \u043e \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430\u0445 \u2014 CORS, \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u0430\u0448 FastAPI-\u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d.</li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u044b \u0432\u0435\u0440\u043d\u0443\u043b\u0438 <code>API_BASE_URL</code> \u0438 \u043b\u043e\u0433\u0438\u043a\u0443 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043e\u0442\u0432\u0435\u0442\u0430 \u0432 <code>app.js</code> \u043a \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0443 \u0434\u043b\u044f FastAPI.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u0430\u0448 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u0441\u043d\u043e\u0432\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0432\u0441\u0435 CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 FastAPI-\u0431\u044d\u043a\u0435\u043d\u0434\u043e\u043c.</li> </ul> <p>\u26a0\ufe0f \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0438:</p> <ul> <li>CORS error: \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e FastAPI-\u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0441 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438 CORS.</li> <li>\u041e\u0448\u0438\u0431\u043a\u0430 <code>Cannot read properties of undefined (reading 'length')</code>: \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u044b \u0437\u0430\u0431\u044b\u043b\u0438 \u0443\u0431\u0440\u0430\u0442\u044c \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043a <code>.data</code> \u0438\u0437 <code>responseData</code>.</li> <li>404 Not Found: \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 <code>API_BASE_URL</code> \u2014 \u0443 FastAPI \u043d\u0435\u0442 \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430 <code>/api</code>.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/2/","title":"\u0413\u043b\u0430\u0432\u0430 6.2: \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 CORS","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 30 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/2/#1-cors","title":"1. CORS: \u0427\u0442\u043e \u044d\u0442\u043e \u0438 \u0437\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u043e?","text":"<p>\u041a\u0430\u043a \u043c\u044b \u0432\u044b\u044f\u0441\u043d\u0438\u043b\u0438, CORS (Cross-Origin Resource Sharing) \u2014 \u044d\u0442\u043e \u043f\u043e\u043b\u0438\u0442\u0438\u043a\u0430 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430. \u041e\u043d\u0430 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044e, \u043a\u043e\u0433\u0434\u0430 \u0432\u0440\u0435\u0434\u043e\u043d\u043e\u0441\u043d\u044b\u0439 \u0441\u0430\u0439\u0442 <code>evil-site.com</code> \u043e\u0442 \u0432\u0430\u0448\u0435\u0433\u043e \u0438\u043c\u0435\u043d\u0438 (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0432\u0430\u0448\u0438 \u043a\u0443\u043a\u0438) \u0434\u0435\u043b\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043a <code>your-bank.com</code> \u0438 \u0432\u043e\u0440\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435.</p> <p>\u041a\u0430\u043a \u044d\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442?</p> <ol> <li>Frontend (\u0431\u0440\u0430\u0443\u0437\u0435\u0440) \u0441 \u0434\u043e\u043c\u0435\u043d\u0430 <code>A</code> \u0445\u043e\u0447\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u0434\u043e\u043c\u0435\u043d\u0430 <code>B</code>.</li> <li>\u0411\u0440\u0430\u0443\u0437\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0434\u043e\u043c\u0435\u043d <code>B</code> \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \"\u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439\" \u0437\u0430\u043f\u0440\u043e\u0441 (preflight request) \u043c\u0435\u0442\u043e\u0434\u043e\u043c <code>OPTIONS</code>, \u0441\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u044f: \"\u042d\u0439, \u0434\u043e\u043c\u0435\u043d <code>B</code>, \u043c\u043e\u0436\u043d\u043e \u043b\u0438 \u043c\u043d\u0435, \u0434\u043e\u043c\u0435\u043d\u0443 <code>A</code>, \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043a \u0442\u0435\u0431\u0435 <code>GET</code>-\u0437\u0430\u043f\u0440\u043e\u0441?\"</li> <li>Backend (\u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430 \u0434\u043e\u043c\u0435\u043d\u0435 <code>B</code>) \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u043c\u0438 HTTP-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: <code>Access-Control-Allow-Origin: A</code>.</li> <li>\u0415\u0441\u043b\u0438 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441, \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 <code>GET</code>-\u0437\u0430\u043f\u0440\u043e\u0441. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442 \u2014 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 \u0435\u0433\u043e \u0438 \u0432\u044b\u0434\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 CORS.</li> </ol> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <p>\u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u0442\u0435\u043b\u0435\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043f\u0438\u0442\u0430\u043d\u0430 \u043d\u0430 \u0447\u0443\u0436\u0443\u044e \u0441\u0442\u0430\u043d\u0446\u0438\u044e (\u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c <code>POST</code>-\u0437\u0430\u043f\u0440\u043e\u0441), \u043a\u043e\u0440\u0430\u0431\u043b\u044c (\u0431\u0440\u0430\u0443\u0437\u0435\u0440) \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0440\u043e\u043d\u0430 (<code>OPTIONS</code>-\u0437\u0430\u043f\u0440\u043e\u0441) \u0441 \u0432\u043e\u043f\u0440\u043e\u0441\u043e\u043c: \"\u0421\u0442\u0430\u043d\u0446\u0438\u044f, \u0432\u044b \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442\u0435 \u0442\u0435\u043b\u0435\u043f\u043e\u0440\u0442\u0430\u0446\u0438\u044e \u0441 \u043a\u043e\u0440\u0430\u0431\u043b\u044f '\u042d\u043d\u0442\u0435\u0440\u043f\u0440\u0430\u0439\u0437'?\". \u0421\u0442\u0430\u043d\u0446\u0438\u044f (API) \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442: \"\u0414\u0430, \u043f\u0440\u0438\u0435\u043c \u0441 '\u042d\u043d\u0442\u0435\u0440\u043f\u0440\u0430\u0439\u0437\u0430' \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\" (\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a <code>Access-Control-Allow-Origin</code>). \u0422\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0442\u0435\u043b\u0435\u043f\u043e\u0440\u0442\u0430\u0446\u0438\u044f.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/2/#2-cors-laravel-laravel-11","title":"2. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 CORS \u0432 Laravel (\u0421\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u0434\u043b\u044f Laravel 11+)","text":"<p>\u0412 Laravel 11+ \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f CORS \u0441\u0442\u0430\u043b\u0430 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u0449\u0435 \u0438 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0444\u0430\u0439\u043b\u0430 <code>config/cors.php</code>, \u0435\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u044b \u0431\u0430\u0437\u043e\u0432\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438. \u0412\u0441\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u0444\u0430\u0439\u043b <code>.env</code> \u0438 <code>bootstrap/app.php</code>.</p> <p>\u0428\u0430\u0433 1: \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0447\u0435\u0440\u0435\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0432\u0430\u0448 \u0444\u0430\u0439\u043b <code>.env</code>. Laravel \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0443\u0436\u0435 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f CORS \u0434\u043b\u044f API.</p> <pre><code># .env\n\n# ... \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435\n\n# \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u043f\u0443\u0442\u0438, \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0431\u0443\u0434\u0435\u0442 \u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c CORS.\n# 'api/*' - \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 API-\u0440\u043e\u0443\u0442\u043e\u0432.\nCORS_PATHS=api/*\n\n# \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u044b\u0435 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438 (\u0434\u043e\u043c\u0435\u043d\u044b).\n# \u0414\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0443\u043a\u0430\u0436\u0438\u0442\u0435 \u0430\u0434\u0440\u0435\u0441 \u0432\u0430\u0448\u0435\u0433\u043e \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430.\n# \u041c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e, \u0431\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432.\nCORS_ALLOWED_ORIGINS=http://localhost:5500,http://127.0.0.1:5500\n\n# \u0414\u0440\u0443\u0433\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 (\u043e\u0431\u044b\u0447\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e)\nCORS_ALLOWED_METHODS=*\nCORS_ALLOWED_HEADERS=*\nCORS_EXPOSED_HEADERS=\nCORS_MAX_AGE=0\nCORS_SUPPORTS_CREDENTIALS=false\n</code></pre> <p>\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435:</p> <ul> <li><code>CORS_ALLOWED_ORIGINS</code>: \u0421\u0430\u043c\u0430\u044f \u0432\u0430\u0436\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f. \u0417\u0434\u0435\u0441\u044c \u0432\u044b \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0435 \u0434\u043e\u043c\u0435\u043d\u044b, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u044b. <code>*</code> \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442 \u0432\u0441\u0435\u043c, \u043d\u043e \u044d\u0442\u043e</li> </ul> <p>\u043a\u0440\u0430\u0439\u043d\u0435 \u043d\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0430\u043a\u0448\u0435\u043d\u0430.</p> <ul> <li><code>CORS_PATHS</code>: \u041f\u0443\u0442\u0438, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f \u044d\u0442\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u0430. <code>api/*</code> \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u0432\u0441\u0435, \u0447\u0442\u043e \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 <code>/api/</code>.</li> </ul> <p>\u041f\u043e\u0441\u043b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f <code>.env</code> \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440, \u0435\u0441\u043b\u0438 \u0432\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 <code>php artisan serve</code>. \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0445\u0432\u0430\u0442\u044f\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438.</p> <p>\u0428\u0430\u0433 2 (\u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e): \u041f\u0440\u043e\u0434\u0432\u0438\u043d\u0443\u0442\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0432 <code>bootstrap/app.php</code></p> <p>\u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u0430 \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0436\u043d\u0430\u044f \u043b\u043e\u0433\u0438\u043a\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0442\u044c \u043f\u043e\u0434\u0434\u043e\u043c\u0435\u043d\u044b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u043e\u0432), \u0432\u0430\u043c \u0432\u0441\u0435 \u0436\u0435 \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u0442\u044c \u0444\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c middleware. \u041d\u043e \u0434\u043b\u044f 95% \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0444\u0430\u0439\u043b\u0430 <code>.env</code>.</p> <p>\u041a\u043e\u043c\u0430\u043d\u0434\u0430 <code>php artisan install:api</code> \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 CORS middleware \u0434\u043b\u044f API \u0440\u043e\u0443\u0442\u043e\u0432 \u0432 \u0444\u0430\u0439\u043b\u0435 <code>bootstrap/app.php</code>. \u0412\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u044d\u0442\u043e \u0442\u0430\u043a:</p> <pre><code>// bootstrap/app.php\n-&gt;withMiddleware(function (Middleware $middleware) {\n    // \u042d\u0442\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u0443\u0436\u0435 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 install:api\n    // \u041e\u043d\u0430 \u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 CORS \u0434\u043b\u044f \u0432\u0441\u0435\u0445 API-\u0440\u043e\u0443\u0442\u043e\u0432\n    $middleware-&gt;api(base_path('routes/api.php'));\n})\n</code></pre> <p>\u0412\u043d\u0443\u0442\u0440\u0438 <code>-&gt;api()</code> Laravel \u0443\u0436\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 middleware <code>HandleCors</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0447\u0438\u0442\u0430\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0438\u0437 \u0432\u0430\u0448\u0435\u0433\u043e <code>.env</code>. \u0412\u0441\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u0438 \u0438\u0437 \u043a\u043e\u0440\u043e\u0431\u043a\u0438.</p> <p>\u26a0\ufe0f \u0412\u0430\u0436\u043d\u043e! \u041d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>CORS_ALLOWED_ORIGINS='*'</code> \u043d\u0430 \u0431\u043e\u0435\u0432\u043e\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0435, \u0435\u0441\u043b\u0438 \u0432\u0430\u0448\u0435 API \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u043c. \u042d\u0442\u043e \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u0443\u044e \u0443\u044f\u0437\u0432\u0438\u043c\u043e\u0441\u0442\u044c. \u0412\u0441\u0435\u0433\u0434\u0430 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0439\u0442\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u0434\u043e\u043c\u0435\u043d\u044b \u0432\u0430\u0448\u0435\u0433\u043e \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/2/#3-cors-fastapi","title":"3. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 CORS \u0432 FastAPI","text":"<p>FastAPI \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043a\u043e\u043d\u0446\u0435\u043f\u0446\u0438\u044e Middleware (\u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u041f\u041e) \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0442\u0430\u043a\u0438\u0445 \u0441\u043a\u0432\u043e\u0437\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447, \u043a\u0430\u043a CORS.</p> <p>\u0428\u0430\u0433 1: \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</p> <p>\u042d\u0442\u043e \u0444\u0430\u0439\u043b, \u0433\u0434\u0435 \u0432\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 FastAPI (\u043e\u0431\u044b\u0447\u043d\u043e <code>main.py</code>).</p> <p>\u0428\u0430\u0433 2: \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 <code>CORSMiddleware</code></p> <p>FastAPI \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0433\u043e\u0442\u043e\u0432\u044b\u0439 middleware \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 CORS.</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware # 1. \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c middleware\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"API \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u043c\u0438 \u0432 \u0433\u0430\u043b\u0430\u043a\u0442\u0438\u043a\u0435\",\n    version=\"1.0.0\"\n)\n\n# 2. \u0421\u043f\u0438\u0441\u043e\u043a \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u044b\u0445 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432 (origins)\norigins = [\n    \"http://localhost:5500\",\n    \"http://127.0.0.1:5500\",\n    # \u0412 \u043f\u0440\u043e\u0434\u0430\u043a\u0448\u0435\u043d\u0435 \u0437\u0434\u0435\u0441\u044c \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u043c\u0435\u043d \u0432\u0430\u0448\u0435\u0433\u043e \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430\n    # \"https://my-awesome-app.com\",\n]\n\n# 3. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c middleware \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # \u0420\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u043c \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438\n    allow_credentials=True, # \u0420\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u043c \u043a\u0443\u043a\u0438 (\u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0434\u043b\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438)\n    allow_methods=[\"*\"],    # \u0420\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u043c \u0432\u0441\u0435 \u043c\u0435\u0442\u043e\u0434\u044b (GET, POST, etc.)\n    allow_headers=[\"*\"],    # \u0420\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u043c \u0432\u0441\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438\n)\n\n# ... \u0437\u0434\u0435\u0441\u044c \u0432\u0430\u0448\u0438 \u0440\u043e\u0443\u0442\u0435\u0440\u044b \u0438 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0434\n</code></pre> <p>\u0428\u0430\u0433 3: \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 Uvicorn \u0441\u0435\u0440\u0432\u0435\u0440 \u0421\u0435\u0440\u0432\u0435\u0440 Uvicorn \u043e\u0431\u044b\u0447\u043d\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u043a\u043e\u0434\u0430. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442, \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0435\u0433\u043e \u0432\u0440\u0443\u0447\u043d\u0443\u044e. \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u0430\u0448 FastAPI-\u0441\u0435\u0440\u0432\u0435\u0440 \u0431\u0443\u0434\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043e\u0442\u0432\u0435\u0447\u0430\u0442\u044c \u043d\u0430 <code>OPTIONS</code>-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043e\u0442 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/2/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u0417\u0430\u043f\u0440\u043e\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0434 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 CORS, \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f:</p>  a) CHECK request  b) Preflight request  c) Handshake request <p>2. \u0412 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u043c Laravel (11+) \u0431\u0430\u0437\u043e\u0432\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 CORS \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0437\u0430\u0434\u0430\u044e\u0442\u0441\u044f \u0432:</p>  a) \u0424\u0430\u0439\u043b\u0435 bootstrap/app.php  b) \u0424\u0430\u0439\u043b\u0435 .env  c) \u0424\u0430\u0439\u043b\u0435 routes/api.php <p>3. \u0412 FastAPI \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 CORS \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f:</p>  a) \u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 @app.cors()  b) \u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 Security  c) \u041f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u043e\u0435 \u041f\u041e (`Middleware`) <p>4. \u041a\u0430\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 CORS_ALLOWED_ORIGINS \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u043c \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0430\u043a\u0448\u0435\u043d\u0430?</p>  a) CORS_ALLOWED_ORIGINS='*'  b) CORS_ALLOWED_ORIGINS=http://my-frontend.com,https://my-frontend.com`  c) \u041d\u0435 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c \u044d\u0442\u0443 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0441\u0442\u0430\u043b\u0438 \"\u0434\u0438\u043f\u043b\u043e\u043c\u0430\u0442\u043e\u043c \u043c\u0435\u0436\u0437\u0432\u0435\u0437\u0434\u043d\u044b\u0445 \u043a\u043e\u043c\u043c\u0443\u043d\u0438\u043a\u0430\u0446\u0438\u0439\"! \u0412\u0430\u0448\u0438 API \u0442\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0433\u0443\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u0432\u043d\u0435\u0448\u043d\u0438\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u044b.</p> <ul> <li>\u2705 \u041f\u043e\u043d\u044f\u043b\u0438 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u0440\u0430\u0431\u043e\u0442\u044b CORS \u0438 preflight-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.</li> <li>\ud83d\udd27 \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0438 CORS \u0434\u043b\u044f Laravel 11+ \u0447\u0435\u0440\u0435\u0437 \u0444\u0430\u0439\u043b <code>.env</code>.</li> <li>\u2699\ufe0f \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0438 CORS \u0434\u043b\u044f FastAPI \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e <code>CORSMiddleware</code>.</li> <li>\ud83d\udef0\ufe0f \u0423\u0441\u043f\u0435\u0448\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0438 \u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u043e\u043c \u0438 \u0431\u044d\u043a\u0435\u043d\u0434\u043e\u043c.</li> </ul> <p>\u041a\u043e\u043c\u043c\u0443\u043d\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u043c\u043e\u0441\u0442 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d \u0438 \u0437\u0430\u0449\u0438\u0449\u0435\u043d. \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u0443\u043c\u0430\u0442\u044c \u043e \u0442\u043e\u043c, \u043a\u0430\u043a \u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u043c\u043e\u0441\u0442\u0443 \u0442\u043e\u043b\u044c\u043a\u043e \"\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\".</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u0439 \u0443\u0441\u043f\u0435\u0445\u0430 \u2014 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u043e\u0448\u0438\u0431\u043e\u043a CORS \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 \u043f\u0440\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430.</li> <li>\u041d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 \"Network\" (\u0421\u0435\u0442\u044c) \u0432 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u0430\u0445 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0434\u0432\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043a \u0432\u0430\u0448\u0435\u043c\u0443 API: \u043f\u0435\u0440\u0432\u044b\u0439 \u0441 \u043c\u0435\u0442\u043e\u0434\u043e\u043c <code>OPTIONS</code> (\u0441\u0442\u0430\u0442\u0443\u0441 200/204) \u0438 \u0432\u0442\u043e\u0440\u043e\u0439 \u0441 \u043c\u0435\u0442\u043e\u0434\u043e\u043c <code>GET</code> (\u0441\u0442\u0430\u0442\u0443\u0441 200). \u042d\u0442\u043e \u043d\u0430\u0433\u043b\u044f\u0434\u043d\u0430\u044f \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b CORS.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/3/","title":"\u0413\u043b\u0430\u0432\u0430 6.3: \u0411\u0430\u0437\u043e\u0432\u0430\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 1 \u0447\u0430\u0441</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/3/#1-api","title":"1. \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f API: \u041f\u0440\u043e\u043f\u0443\u0441\u043a \u0432 \u0426\u0423\u041f","text":"<p>\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u2014 \u044d\u0442\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043b\u0438\u0447\u043d\u043e\u0441\u0442\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 \u0441\u0430\u0439\u0442\u043e\u0432 \u0441 \u0441\u0435\u0441\u0441\u0438\u044f\u043c\u0438 \u0438 \u043a\u0443\u043a\u0438, stateless (\u043d\u0435 \u0445\u0440\u0430\u043d\u044f\u0449\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435) API \u043e\u0431\u044b\u0447\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0442\u043e\u043a\u0435\u043d\u044b.</p> <p>\u041f\u0440\u043e\u0446\u0435\u0441\u0441 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a:</p> <ol> <li>\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0432\u043e\u0438 \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043d\u0430 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>/login</code>).</li> <li>\u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0438\u0445. \u0415\u0441\u043b\u0438 \u0432\u0441\u0435 \u0432\u0435\u0440\u043d\u043e, \u043e\u043d \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439, \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0442\u043e\u043a\u0435\u043d (\u0434\u043b\u0438\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443) \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0442\u043d\u043e.</li> <li>\u041f\u0440\u0438 \u043a\u0430\u0436\u0434\u043e\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043a \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u044b\u043c \u0440\u0435\u0441\u0443\u0440\u0441\u0430\u043c (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>POST /planets</code>) \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u044f\u0442\u044c \u044d\u0442\u043e\u0442 \u0442\u043e\u043a\u0435\u043d \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 <code>Authorization</code>.</li> <li>\u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0442\u043e\u043a\u0435\u043d \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0441\u0442\u044c \u0438, \u0435\u0441\u043b\u0438 \u043e\u043d \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0435\u043d, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441.</li> </ol> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <ul> <li>\u041b\u043e\u0433\u0438\u043d/\u043f\u0430\u0440\u043e\u043b\u044c = \u0412\u0430\u0448 \u0431\u0438\u043e\u043c\u0435\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u043a\u0430\u043d \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430.</li> <li>\u0422\u043e\u043a\u0435\u043d = \u042d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u043f\u0443\u0441\u043a (ID-\u043a\u0430\u0440\u0442\u0430), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435 \u043d\u0430 \u0432\u0445\u043e\u0434\u0435 \u0432 \u0426\u0423\u041f.</li> <li>\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a <code>Authorization: Bearer &lt;\u0442\u043e\u043a\u0435\u043d&gt;</code> = \u0412\u044b \u043f\u0440\u0438\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442\u0435 \u0441\u0432\u043e\u0439 \u043f\u0440\u043e\u043f\u0443\u0441\u043a \u043a \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044e \u0443 \u043a\u0430\u0436\u0434\u043e\u0439 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u043e\u0439 \u0434\u0432\u0435\u0440\u0438.</li> <li>\u0417\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u044b\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b (POST, PUT, DELETE) = \u0414\u0432\u0435\u0440\u0438 \u0432 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0438\u043b\u0438 \u043a \u043f\u0443\u043b\u044c\u0442\u0443 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/3/#2-laravel-sanctum","title":"2. \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0432 Laravel: Sanctum","text":"<p>Laravel \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u0442 \u044d\u043b\u0435\u0433\u0430\u043d\u0442\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 API \u2014 Laravel Sanctum. \u041e\u043d \u0438\u0434\u0435\u0430\u043b\u044c\u043d\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f SPA (\u043e\u0434\u043d\u043e\u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439), \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0442\u043e\u043a\u0435\u043d-based API.</p> <p>\u0428\u0430\u0433 1: \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Sanctum</p> <p>Sanctum \u0443\u0436\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0432 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 Laravel, \u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e.</p> <ol> <li>\u041f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 (\u0435\u0441\u043b\u0438 \u0435\u0449\u0435 \u043d\u0435 \u0441\u0434\u0435\u043b\u0430\u043b\u0438): <pre><code>php artisan vendor:publish --provider=\"Laravel\\Sanctum\\SanctumServiceProvider\"\n</code></pre></li> <li>\u0417\u0430\u043f\u0443\u0441\u043a \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439 (\u0441\u043e\u0437\u0434\u0430\u0441\u0442 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 <code>personal_access_tokens</code>): <pre><code>php artisan migrate\n</code></pre></li> <li>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0440\u0435\u0439\u0442\u0430 \u0432 \u043c\u043e\u0434\u0435\u043b\u044c <code>User</code>:     \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>app/Models/User.php</code> \u0438 \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043e\u043d \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0442\u0440\u0435\u0439\u0442 <code>HasApiTokens</code>.     <pre><code>// app/Models/User.php\nuse Laravel\\Sanctum\\HasApiTokens;\n\nclass User extends Authenticatable\n{\n    use HasApiTokens, HasFactory, Notifiable;\n    // ...\n}\n</code></pre></li> </ol> <p>\u0428\u0430\u0433 2: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430 \u0434\u043b\u044f \u0432\u044b\u0434\u0430\u0447\u0438 \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u041d\u0430\u043c \u043d\u0443\u0436\u0435\u043d \u0440\u043e\u0443\u0442, \u043a\u0443\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u043b\u043e\u0433\u0438\u043d/\u043f\u0430\u0440\u043e\u043b\u044c.</p> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 <code>routes/api.php</code>: <pre><code>// routes/api.php\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Models\\User;\nuse Illuminate\\Validation\\ValidationException;\n\nRoute::post('/login', function (Request $request) {\n    $request-&gt;validate([\n        'email' =&gt; 'required|email',\n        'password' =&gt; 'required',\n    ]);\n\n    $user = User::where('email', $request-&gt;email)-&gt;first();\n\n    if (! $user || ! Hash::check($request-&gt;password, $user-&gt;password)) {\n        throw ValidationException::withMessages([\n            'email' =&gt; ['\u0423\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435\u0432\u0435\u0440\u043d\u044b.'],\n        ]);\n    }\n\n    // \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0442\u043e\u043a\u0435\u043d\n    return response()-&gt;json([\n        'token' =&gt; $user-&gt;createToken('api-token')-&gt;plainTextToken\n    ]);\n});\n</code></pre></p> <p>\u0414\u043b\u044f \u0442\u0435\u0441\u0442\u0430 \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0447\u0435\u0440\u0435\u0437 \u0441\u0438\u0434\u0435\u0440 \u0438\u043b\u0438 Tinker.</p> <p>\u0428\u0430\u0433 3: \u0417\u0430\u0449\u0438\u0442\u0430 \u0440\u043e\u0443\u0442\u043e\u0432 \u0422\u0435\u043f\u0435\u0440\u044c \u0437\u0430\u0449\u0438\u0442\u0438\u043c \u043d\u0430\u0448\u0438 CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438. \u0418\u0437\u043c\u0435\u043d\u0438\u043c <code>routes/api.php</code>:</p> <pre><code>// routes/api.php\nuse App\\Http\\Controllers\\PlanetController;\n\n// \u041f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0439 \u0440\u043e\u0443\u0442 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u043f\u043b\u0430\u043d\u0435\u0442\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// \u0413\u0440\u0443\u043f\u043f\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u044b\u0445 \u0440\u043e\u0443\u0442\u043e\u0432\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n\n    // \u0420\u043e\u0443\u0442 \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u0430 (\u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0442\u043e\u043a\u0435\u043d\u0430)\n    Route::post('/logout', function (Request $request) {\n        $request-&gt;user()-&gt;currentAccessToken()-&gt;delete();\n        return response()-&gt;json(['message' =&gt; '\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0432\u044b\u0448\u043b\u0438'], 200);\n    });\n});\n</code></pre> <p>Middleware <code>auth:sanctum</code> \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0433\u043e \u0442\u043e\u043a\u0435\u043d\u0430 \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 <code>Authorization</code>.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/3/#3-fastapi-oauth2-jwt","title":"3. \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0432 FastAPI: OAuth2 \u0438 JWT","text":"<p>\u0412 FastAPI \u043d\u0435\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438, \u043d\u043e \u0435\u0441\u0442\u044c \u043c\u043e\u0449\u043d\u044b\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u0435\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438. \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442 \u0434\u0435-\u0444\u0430\u043a\u0442\u043e \u2014 OAuth2 \u0441 JWT-\u0442\u043e\u043a\u0435\u043d\u0430\u043c\u0438.</p> <p>\u0428\u0430\u0433 1: \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 <pre><code>pip install \"python-jose[cryptography]\" \"passlib[bcrypt]\" \"python-multipart\"\n</code></pre></p> <ul> <li><code>python-jose</code>: \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 JWT-\u0442\u043e\u043a\u0435\u043d\u043e\u0432.</li> <li><code>passlib</code>: \u0434\u043b\u044f \u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0430\u0440\u043e\u043b\u0435\u0439.</li> <li><code>python-multipart</code>: \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0444\u043e\u0440\u043c (<code>username</code> \u0438 <code>password</code>).</li> </ul> <p>\u0428\u0430\u0433 2: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0443\u043b\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 (<code>security.py</code>) \u042d\u0442\u043e \u0445\u043e\u0440\u043e\u0448\u0430\u044f \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 \u2014 \u0432\u044b\u043d\u0435\u0441\u0442\u0438 \u0432\u0441\u044e \u043b\u043e\u0433\u0438\u043a\u0443 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b.</p> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>security.py</code>:</p> <pre><code># security.py\nfrom fastapi import Depends, HTTPException, status\nfrom fastapi.security import OAuth2PasswordBearer\nfrom jose import JWTError, jwt\nfrom passlib.context import CryptContext\nfrom datetime import datetime, timedelta, timezone\n\n# --- \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 ---\nSECRET_KEY = \"your-super-secret-key-that-is-long-and-random\" # \u26a0\ufe0f \u0417\u0430\u043c\u0435\u043d\u0438\u0442\u0435 \u043d\u0430 \u0441\u0432\u043e\u0439 \u043a\u043b\u044e\u0447!\nALGORITHM = \"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES = 30\n\n# --- \u0423\u0442\u0438\u043b\u0438\u0442\u044b ---\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/api/v1/login\")\n\n# --- \u0424\u0443\u043d\u043a\u0446\u0438\u0438 ---\ndef verify_password(plain_password, hashed_password):\n    return pwd_context.verify(plain_password, hashed_password)\n\ndef get_password_hash(password):\n    return pwd_context.hash(password)\n\ndef create_access_token(data: dict):\n    to_encode = data.copy()\n    expire = datetime.now(timezone.utc) + timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    to_encode.update({\"exp\": expire})\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n    return encoded_jwt\n\n# --- \u0424\u0443\u043d\u043a\u0446\u0438\u044f-\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0442\u043e\u043a\u0435\u043d\u0430 ---\ndef get_current_user(token: str = Depends(oauth2_scheme)):\n    credentials_exception = HTTPException(\n        status_code=status.HTTP_401_UNAUTHORIZED,\n        detail=\"\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\",\n        headers={\"WWW-Authenticate\": \"Bearer\"},\n    )\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\n        username: str = payload.get(\"sub\")\n        if username is None:\n            raise credentials_exception\n    except JWTError:\n        raise credentials_exception\n    # \u0417\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u043d\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0411\u0414, \u043f\u043e\u043a\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u0435\u0440\u043d\u0435\u043c \u0438\u043c\u044f\n    return {\"username\": username}\n</code></pre> <p>\u0428\u0430\u0433 3: \u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0432 <code>main.py</code> \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043c \u044d\u0442\u043e \u043a \u043d\u0430\u0448\u0435\u043c\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e.</p> <ol> <li> <p>\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 <code>/login</code>: <pre><code># main.py\nfrom fastapi.security import OAuth2PasswordRequestForm\nfrom fastapi import Depends, APIRouter\nfrom . import security # \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u0430\u0448 \u043c\u043e\u0434\u0443\u043b\u044c\n\n# ... \u0432\u0430\u0448 \u043a\u043e\u0434 FastAPI ...\nrouter = APIRouter(prefix=\"/api/v1\")\n\n@router.post(\"/login\")\ndef login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):\n    # \u0417\u0434\u0435\u0441\u044c \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0411\u0414\n    # \u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u0440\u0430, \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043e\u0434\u0438\u043d \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u044e\u0437\u0435\u0440\n    is_user_valid = (form_data.username == \"testuser\" and\n                     security.verify_password(\"testpass\", security.get_password_hash(\"testpass\")))\n\n    if not is_user_valid:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"\u041d\u0435\u0432\u0435\u0440\u043d\u043e\u0435 \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c\",\n        )\n    access_token = security.create_access_token(data={\"sub\": form_data.username})\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\n\n# ...\napp.include_router(router)\n</code></pre></p> </li> <li> <p>\u0417\u0430\u0449\u0438\u0442\u0438\u043c \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b:</p> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043d\u0430\u0448\u0443 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c <code>get_current_user</code>. <pre><code># main.py \u0438\u043b\u0438 \u0432 \u0432\u0430\u0448\u0435\u043c \u0440\u043e\u0443\u0442\u0435\u0440\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\n\n@router.post(\"/planets\", status_code=status.HTTP_201_CREATED)\ndef create_planet(\n    planet: PlanetCreate,\n    current_user: dict = Depends(security.get_current_user) # &lt;-- \u0417\u0430\u0449\u0438\u0442\u0430!\n):\n    # \u041b\u043e\u0433\u0438\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u044b...\n    print(f\"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c {current_user['username']} \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043f\u043b\u0430\u043d\u0435\u0442\u0443.\")\n    # ...\n    return new_planet\n\n# \u0422\u0430\u043a \u0436\u0435 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u043c PUT \u0438 DELETE\n</code></pre></p> </li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/3/#4","title":"4. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u043d\u0430 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0435","text":"<p>\u041d\u0430\u0448 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u0442\u0435\u043f\u0435\u0440\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u043e\u043a\u0435\u043d, \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0435\u0433\u043e (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 <code>localStorage</code>) \u0438 \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u044f\u0442\u044c \u043a \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u043d\u0430 JavaScript (<code>fetch</code>): <pre><code>// 1. \u041b\u043e\u0433\u0438\u043d\u0438\u043c\u0441\u044f\nasync function login(email, password) {\n    const response = await fetch('http://localhost:8001/api/login', { // \u0410\u0434\u0440\u0435\u0441 Laravel API\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({email, password})\n    });\n    const data = await response.json();\n\n    if (data.token) {\n        localStorage.setItem('api_token', data.token); // \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0442\u043e\u043a\u0435\u043d\n    }\n}\n\n// 2. \u0414\u0435\u043b\u0430\u0435\u043c \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441\nasync function createPlanet(planetData) {\n    const token = localStorage.getItem('api_token');\n\n    const response = await fetch('http://localhost:8001/api/planets', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` // &lt;--- \u041f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u044f\u0435\u043c \u0442\u043e\u043a\u0435\u043d!\n        },\n        body: JSON.stringify(planetData)\n    });\n    // ...\n}\n</code></pre></p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/3/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. Stateless API \u0447\u0430\u0449\u0435 \u0432\u0441\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0434\u043b\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438:</p>  a) \u0421\u0435\u0441\u0441\u0438\u0438 \u0438 \u043a\u0443\u043a\u0438  b) \u0422\u043e\u043a\u0435\u043d\u044b (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, JWT)  c) IP-\u0430\u0434\u0440\u0435\u0441\u0430 <p>2. \u0412 Laravel \u0434\u043b\u044f \u0437\u0430\u0449\u0438\u0442\u044b \u0440\u043e\u0443\u0442\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f middleware:</p>  a) auth:api  b) auth:sanctum  c) verified <p>3. \u0412 FastAPI \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b \u043b\u043e\u0433\u0438\u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c:</p>  a) Body()  b) Form()  c) OAuth2PasswordRequestForm = Depends() <p>4. \u041a\u0430\u043a \u0442\u043e\u043a\u0435\u043d \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0432 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435?</p>  a) \u0412 URL-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 `?token=...`  b) \u0412 \u0442\u0435\u043b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430  c) \u0412 HTTP-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435 `Authorization: Bearer &lt;\u0442\u043e\u043a\u0435\u043d&gt;` \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0438 \"\u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430\" \u043d\u0430 \u0441\u0432\u043e\u0438 API. \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0435 \u043a\u0430\u0436\u0434\u044b\u0439 \u0436\u0435\u043b\u0430\u044e\u0449\u0438\u0439 \u043c\u043e\u0436\u0435\u0442 \u0432\u043d\u043e\u0441\u0438\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0432\u0430\u0448\u0443 \"\u0433\u0430\u043b\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445\".</p> <ul> <li>\u2705 \u041f\u043e\u043d\u044f\u043b\u0438 \u043f\u0440\u0438\u043d\u0446\u0438\u043f \u0442\u043e\u043a\u0435\u043d-based \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.</li> <li>\ud83d\udd10 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043b\u0438 \u0432\u044b\u0434\u0430\u0447\u0443 \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u0438 \u0437\u0430\u0449\u0438\u0442\u0443 \u0440\u043e\u0443\u0442\u043e\u0432 \u0432 Laravel Sanctum.</li> <li>\u2699\ufe0f \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 OAuth2 \u0438 JWT \u0432 FastAPI.</li> <li>\ud83d\udef0\ufe0f \u0423\u0437\u043d\u0430\u043b\u0438, \u043a\u0430\u043a \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043a\u0435\u043d.</li> </ul> <p>\u0412\u0430\u0448\u0438 API \u0441\u0442\u0430\u043b\u0438 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u043c\u0438, \u043d\u043e \u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u043c\u0438. \u041e\u0434\u043d\u0430\u043a\u043e, \u0447\u0442\u043e\u0431\u044b \u0434\u0440\u0443\u0433\u0438\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043c\u043e\u0433\u043b\u0438 \u0438\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f, \u0438\u043c \u043d\u0443\u0436\u043d\u044b \"\u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u043f\u043e \u044d\u043a\u0441\u043f\u043b\u0443\u0430\u0442\u0430\u0446\u0438\u0438\".</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c <code>POST</code>-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 <code>/api/planets</code> (\u0432 Laravel) \u0438\u043b\u0438 <code>/api/v1/planets</code> (\u0432 FastAPI) \u0431\u0435\u0437 \u0442\u043e\u043a\u0435\u043d\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Postman \u0438\u043b\u0438 Insomnia. \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0443 <code>401 Unauthorized</code>.</li> <li>\u0421\u0434\u0435\u043b\u0430\u0439\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 <code>/login</code>, \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u0442\u043e\u043a\u0435\u043d, \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0435\u0433\u043e \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a <code>Authorization</code> \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 <code>POST</code>-\u0437\u0430\u043f\u0440\u043e\u0441. \u041e\u043d \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c\u0441\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/4/","title":"\u0413\u043b\u0430\u0432\u0430 6.4: \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 30 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/4/#1-api","title":"1. \u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API?","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u0430\u043c \u0434\u0430\u043b\u0438 \u043f\u0443\u043b\u044c\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442 \u0441\u043b\u043e\u0436\u043d\u043e\u0433\u043e \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043a\u043e\u0440\u0430\u0431\u043b\u044f \u0431\u0435\u0437 \u0435\u0434\u0438\u043d\u043e\u0439 \u043f\u043e\u0434\u043f\u0438\u0441\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0430\u0445. \u0412\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u043d\u0430\u0436\u0438\u043c\u0430\u0442\u044c \u0438\u0445 \u043d\u0430\u0443\u0433\u0430\u0434, \u0440\u0438\u0441\u043a\u0443\u044f \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0443 \u0432\u043c\u0435\u0441\u0442\u043e \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0441\u0432\u0435\u0442\u0430. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API \u2014 \u044d\u0442\u043e \u0442\u0435 \u0441\u0430\u043c\u044b\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0438 \u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438.</p> <p>\u0425\u043e\u0440\u043e\u0448\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f:</p> <ul> <li>\u042d\u043a\u043e\u043d\u043e\u043c\u0438\u0442 \u0432\u0440\u0435\u043c\u044f: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0433\u0430\u0434\u0430\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442, \u043a\u0430\u043a\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043e\u043d\u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0442 \u0438 \u0447\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442.</li> <li>\u0423\u043c\u0435\u043d\u044c\u0448\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0438: \u0427\u0435\u0442\u043a\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043a\u043e\u0434\u043e\u0432 \u043e\u0448\u0438\u0431\u043e\u043a \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f API.</li> <li>\u0423\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044e: Frontend-\u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u043c\u043e\u0436\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u043e \u0441 backend-\u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439, \u043e\u043f\u0438\u0440\u0430\u044f\u0441\u044c \u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043a\u0430\u043a \u043d\u0430 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442.</li> <li>\u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u0430\u0448\u0438\u043c \u043d\u0430\u0441\u043b\u0435\u0434\u0438\u0435\u043c: \u0427\u0435\u0440\u0435\u0437 \u043f\u043e\u043b\u0433\u043e\u0434\u0430 \u0432\u044b \u0441\u0430\u043c\u0438 \u0441\u043a\u0430\u0436\u0435\u0442\u0435 \u0441\u0435\u0431\u0435 \u0441\u043f\u0430\u0441\u0438\u0431\u043e, \u043a\u043e\u0433\u0434\u0430 \u0432\u0435\u0440\u043d\u0435\u0442\u0435\u0441\u044c \u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0443.</li> </ul> <p>\ud83d\udca1 \u041a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f:</p> <ul> <li>API = \u0421\u043b\u043e\u0436\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0442\u0430\u043d\u0446\u0438\u0435\u0439.</li> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API = \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0434\u043b\u044f \u0430\u0441\u0442\u0440\u043e\u043d\u0430\u0432\u0442\u043e\u0432. \u0412 \u043d\u0435\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u043e:</li> <li>\u041a\u0430\u043a\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443 (<code>\u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442</code>) \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u0448\u043b\u044e\u0437.</li> <li>\u041a\u0430\u043a\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b (<code>\u0442\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430</code>) \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0436\u0438\u0437\u043d\u0435\u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u044f.</li> <li>\u041a\u0430\u043a\u0438\u0435 \u0441\u0438\u0433\u043d\u0430\u043b\u044b (<code>\u043e\u0442\u0432\u0435\u0442\u044b API</code>) \u043e\u0436\u0438\u0434\u0430\u0442\u044c \u0432 \u043e\u0442\u0432\u0435\u0442.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/4/#2-fastapi","title":"2. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0432 FastAPI: \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043c\u0430\u0433\u0438\u044f","text":"<p>FastAPI \u0434\u0435\u043b\u0430\u0435\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0435\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e \u043f\u0440\u043e\u0441\u0442\u044b\u043c. \u041e\u043d \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u0434\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b OpenAPI \u0438 Swagger UI.</p> <p>\u0428\u0430\u0433 1: \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0432\u0430\u0448\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435</p> <p>\u0412 <code>main.py</code> \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u044f\u0432\u044f\u0442\u0441\u044f \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438.</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel, Field\n\n# ... (\u043a\u043e\u0434 FastAPI)\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"\"\"\nAPI \u0434\u043b\u044f \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u0433\u0430\u043b\u0430\u043a\u0442\u0438\u043a\u0438. \ud83d\ude80\n\n\u0412\u044b \u0441\u043c\u043e\u0436\u0435\u0442\u0435:\n* **\u041f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u044b**.\n* **\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043c\u0438\u0440\u044b** (\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f).\n    \"\"\",\n    version=\"1.0.0\",\n    contact={\n        \"name\": \"\u0413\u043b\u0430\u0432\u043d\u044b\u0439 \u0438\u043d\u0436\u0435\u043d\u0435\u0440 \u0426\u0423\u041f\",\n        \"url\": \"https://example.com/contact\",\n        \"email\": \"engineer@example.com\",\n    },\n)\n</code></pre> <p>\u0428\u0430\u0433 2: \u041e\u043f\u0438\u0448\u0438\u0442\u0435 \u0432\u0430\u0448\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b</p> <p>\u0427\u0435\u043c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0435\u0435 \u0432\u044b \u043e\u043f\u0438\u0448\u0435\u0442\u0435 Pydantic-\u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432, \u0442\u0435\u043c \u043b\u0443\u0447\u0448\u0435 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f.</p> <pre><code># \u0412 \u0444\u0430\u0439\u043b\u0435 \u0441 Pydantic-\u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0438\u043b\u0438 \u0432 main.py\n\nclass PlanetBase(BaseModel):\n    name: str = Field(..., example=\"\u0417\u0435\u043c\u043b\u044f\", description=\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b\")\n    description: str = Field(..., example=\"\u0413\u043e\u043b\u0443\u0431\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u0441 \u0440\u0430\u0437\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u043e\u0439 \u0436\u0438\u0437\u043d\u044c\u044e\", description=\"\u041a\u0440\u0430\u0442\u043a\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\")\n    # ...\n\nclass Planet(PlanetBase):\n    id: int\n    is_habitable: bool\n\n    class Config:\n        orm_mode = True # \u0438\u043b\u0438 from_attributes = True \u0432 Pydantic v2\n\n# \u0412 \u0444\u0430\u0439\u043b\u0435 \u0441 \u0440\u043e\u0443\u0442\u0430\u043c\u0438\n@router.get(\n    \"/planets\",\n    response_model=list[Planet],\n    summary=\"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u043b\u0430\u043d\u0435\u0442\",\n    description=\"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0445 \u043f\u043b\u0430\u043d\u0435\u0442 \u0441 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0435\u0439 (\u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c).\"\n)\ndef get_planets():\n    # ...\n\n@router.post(\n    \"/planets\",\n    # ...\n    summary=\"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043f\u043b\u0430\u043d\u0435\u0442\u0443\",\n    responses={\n        401: {\"description\": \"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\"},\n        422: {\"description\": \"\u041e\u0448\u0438\u0431\u043a\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445\"}\n    }\n)\ndef create_planet(planet: PlanetCreate, ...):\n    # ...\n</code></pre> <ul> <li><code>Field(..., example=\"...\")</code>: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e.</li> <li><code>summary</code>: \u041a\u0440\u0430\u0442\u043a\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430.</li> <li><code>description</code>: \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435.</li> <li><code>responses</code>: \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u043a\u043e\u0434\u043e\u0432 \u043e\u0442\u0432\u0435\u0442\u0430, \u043a\u0440\u043e\u043c\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e.</li> </ul> <p>\u0428\u0430\u0433 3: \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435</p> <p>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0432\u0430\u0448 FastAPI \u0441\u0435\u0440\u0432\u0435\u0440 \u0438 \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0434\u0432\u0430 \u0432\u043e\u043b\u0448\u0435\u0431\u043d\u044b\u0445 URL:</p> <ol> <li><code>http://127.0.0.1:8000/docs</code> \u2014 \u043e\u0442\u043a\u0440\u043e\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e Swagger UI. \u0417\u0434\u0435\u0441\u044c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0442\u0430\u0442\u044c, \u043d\u043e \u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0430\u0448\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u043f\u0440\u044f\u043c\u043e \u0438\u0437 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430!</li> <li><code>http://127.0.0.1:8000/redoc</code> \u2014 \u043e\u0442\u043a\u0440\u043e\u0435\u0442 \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0432\u0438\u0434 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 ReDoc. \u041e\u043d \u043c\u0435\u043d\u0435\u0435 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439, \u043d\u043e \u0447\u0430\u0441\u0442\u043e \u0431\u043e\u043b\u0435\u0435 \u0447\u0438\u0442\u0430\u0431\u0435\u043b\u044c\u043d\u044b\u0439.</li> </ol>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/4/#3-laravel","title":"3. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0432 Laravel: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b","text":"<p>\u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 FastAPI, Laravel \u043d\u0435 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \"\u0438\u0437 \u043a\u043e\u0440\u043e\u0431\u043a\u0438\". \u041e\u0434\u043d\u0430\u043a\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442 \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u0435 \u043f\u0430\u043a\u0435\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u0435\u043b\u0430\u044e\u0442 \u044d\u0442\u043e, \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u044f \u0432\u0430\u0448 \u043a\u043e\u0434. \u0421\u0430\u043c\u044b\u0439 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u2014 Scribe.</p> <p>\u0428\u0430\u0433 1: \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 Scribe <pre><code>composer require --dev \"knuckleswtf/scribe\"\n</code></pre> <pre><code>php artisan vendor:publish --tag=scribe-config\nphp artisan scribe:generate\n</code></pre></p> <p>\u0428\u0430\u0433 2: \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e DocBlocks</p> <p>Scribe \u0447\u0438\u0442\u0430\u0435\u0442 PHP DocBlocks (\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0432\u0438\u0434\u0430 <code>/** ... */</code>) \u043d\u0430\u0434 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438 \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430.</p> <p>\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>app/Http/Controllers/PlanetController.php</code>:</p> <pre><code>// app/Http/Controllers/PlanetController.php\n\n/**\n * @group \u041f\u043b\u0430\u043d\u0435\u0442\u044b\n * API \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430\u043c\u0438\n */\nclass PlanetController extends Controller\n{\n    /**\n     * \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u0435\u0442\n     *\n     * \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0430\u0433\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u043b\u0430\u043d\u0435\u0442 \u0432 \u0433\u0430\u043b\u0430\u043a\u0442\u0438\u043a\u0435.\n     *\n     * @unauthenticated\n     */\n    public function index()\n    {\n        // ...\n    }\n\n    /**\n     * \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043f\u043b\u0430\u043d\u0435\u0442\u0443\n     *\n     * @authenticated\n     *\n     * @bodyParam name string required \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b. Example: Kepler-186f\n     * @bodyParam description string required \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0435\u0442\u044b.\n     * @bodyParam size_km integer required \u0414\u0438\u0430\u043c\u0435\u0442\u0440 \u0432 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430\u0445. Example: 14000\n     * @bodyParam is_habitable boolean \u041e\u0431\u0438\u0442\u0430\u0435\u043c\u0430 \u043b\u0438 \u043f\u043b\u0430\u043d\u0435\u0442\u0430. Example: true\n     *\n     * @response 201 {\n     *  \"id\": 4,\n     *  \"name\": \"Kepler-186f\",\n     *  \"description\": \"\u041f\u0435\u0440\u0432\u0430\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c \u0441 \u0417\u0435\u043c\u043b\u044e \u0432 \u043e\u0431\u0438\u0442\u0430\u0435\u043c\u043e\u0439 \u0437\u043e\u043d\u0435 \u0434\u0440\u0443\u0433\u043e\u0439 \u0437\u0432\u0435\u0437\u0434\u044b.\",\n     *  \"size_km\": 14000,\n     *  \"is_habitable\": true,\n     *  \"created_at\": \"2023-10-27T12:00:00.000000Z\",\n     *  \"updated_at\": \"2023-10-27T12:00:00.000000Z\"\n     * }\n     */\n    public function store(Request $request)\n    {\n        // ...\n    }\n    // ... \u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435 \u0434\u043b\u044f \u0434\u0440\u0443\u0433\u0438\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432\n}\n</code></pre> <p>\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u0442\u0435\u0433\u0438 Scribe:</p> <ul> <li><code>@group</code>: \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u0443\u0435\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b.</li> <li><code>@unauthenticated</code> / <code>@authenticated</code>: \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043d\u0443\u0436\u0435\u043d \u043b\u0438 \u0442\u043e\u043a\u0435\u043d.</li> <li><code>@bodyParam</code>: \u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0432 \u0442\u0435\u043b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.</li> <li><code>@response</code>: \u041f\u0440\u0438\u043c\u0435\u0440 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u043e\u0442\u0432\u0435\u0442\u0430.</li> </ul> <p>\u0428\u0430\u0433 3: \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0438 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438</p> <p>\u041a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437 \u043f\u043e\u0441\u043b\u0435 \u0432\u043d\u0435\u0441\u0435\u043d\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0432 DocBlocks, \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0439\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443:</p> <p><pre><code>php artisan scribe:generate\n</code></pre> Scribe \u0441\u043e\u0437\u0434\u0430\u0441\u0442 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0432\u0430\u0448\u0435\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439. \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0435\u0435 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443: <code>http://your-app-url/docs</code>.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/4/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. FastAPI \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0430:</p>  a) GraphQL  b) OpenAPI (Swagger)  c) WSDL <p>2. \u041a\u0430\u043a\u043e\u0439 URL \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 Swagger UI \u0432 FastAPI \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e?</p>  a) /api/docs  b) /swagger  c) /docs <p>3. \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u043f\u0430\u043a\u0435\u0442 \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0432 Laravel:</p>  a) Telescope  b) Scribe  c) Horizon <p>4. \u0412 Scribe \u0434\u043b\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0442\u0435\u043b\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u0435\u0433:</p>  a) @param  b) @bodyParam  c) @request \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0418\u0442\u043e\u0433 \u0433\u043b\u0430\u0432\u044b:</p> <p>\u0412\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u0432 \u0432\u0430\u0448\u0438 API \u0438\u0437 \"\u0447\u0435\u0440\u043d\u044b\u0445 \u044f\u0449\u0438\u043a\u043e\u0432\" \u0432 \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0435 \u0438 \u0443\u0434\u043e\u0431\u043d\u044b\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b.</p> <ul> <li>\u2705 \u041f\u043e\u043d\u044f\u043b\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0432\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f API.</li> <li>\ud83e\ude84 \u041d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0432 FastAPI.</li> <li>\u2699\ufe0f \u041e\u0441\u0432\u043e\u0438\u043b\u0438 \u043e\u0441\u043d\u043e\u0432\u044b \u043f\u0430\u043a\u0435\u0442\u0430 Scribe \u0434\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f API \u043d\u0430 Laravel.</li> <li>\ud83d\udef0\ufe0f \u0423\u0431\u0435\u0434\u0438\u043b\u0438\u0441\u044c, \u0447\u0442\u043e \u0445\u043e\u0440\u043e\u0448\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u2014 \u043b\u0443\u0447\u0448\u0438\u0439 \u043f\u043e\u043c\u043e\u0449\u043d\u0438\u043a \u0434\u043b\u044f \u043b\u044e\u0431\u043e\u0433\u043e \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430.</li> </ul> <p>\u0412\u0430\u0448\u0438 API \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u0438 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b, \u043d\u043e \u0438 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0433\u043e\u0442\u043e\u0432\u044b \u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u0447\u043b\u0435\u043d\u0430\u043c\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b. \u041e\u0441\u0442\u0430\u043b\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439, \u043d\u043e \u0441\u0430\u043c\u044b\u0439 \u0432\u0430\u0436\u043d\u044b\u0439 \u0448\u0430\u0433 \u2014 \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438.</p> <p>\ud83d\udccc \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430:</p> <ul> <li>\u0414\u043b\u044f FastAPI: \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>/docs</code> \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u0438 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c <code>GET</code>-\u0437\u0430\u043f\u0440\u043e\u0441 \u043a \u0441\u043f\u0438\u0441\u043a\u0443 \u043f\u043b\u0430\u043d\u0435\u0442 \u043f\u0440\u044f\u043c\u043e \u0438\u0437 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 Swagger UI.</li> <li>\u0414\u043b\u044f Laravel: \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 <code>php artisan scribe:generate</code> \u0438 \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>/docs</code>. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u044b, \u0430 \u0443 \u043c\u0435\u0442\u043e\u0434\u0430 <code>store</code> \u0435\u0441\u0442\u044c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432.</li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/5/","title":"\u0413\u043b\u0430\u0432\u0430 6.5: \u041e\u0441\u043d\u043e\u0432\u044b \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 API","text":"<p>\u0412\u0440\u0435\u043c\u044f \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f: 45 \u043c\u0438\u043d\u0443\u0442</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/5/#1-api","title":"1. \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c API: \u041c\u043d\u043e\u0433\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u0430\u044f \u043e\u0431\u043e\u0440\u043e\u043d\u0430 \u0441\u0442\u0430\u043d\u0446\u0438\u0438","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u0430\u0448\u0430 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0441\u0442\u0430\u043d\u0446\u0438\u044f (API) \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432\u043e \u0432\u0440\u0430\u0436\u0434\u0435\u0431\u043d\u043e\u043c \u0441\u0435\u043a\u0442\u043e\u0440\u0435 \u043a\u043e\u0441\u043c\u043e\u0441\u0430. \u041e\u0434\u043d\u043e\u0433\u043e \u0441\u0438\u043b\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044f (\u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438) \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e. \u0412\u0430\u043c \u043d\u0443\u0436\u043d\u0430 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043e\u0431\u043e\u0440\u043e\u043d\u044b:</p> <ul> <li>\u0429\u0438\u0442\u044b (HTTPS): \u0428\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u0441\u0435\u0433\u043e \u0442\u0440\u0430\u0444\u0438\u043a\u0430.</li> <li>\u0414\u0430\u0442\u0447\u0438\u043a\u0438 \u0430\u043d\u043e\u043c\u0430\u043b\u0438\u0439 (Rate Limiting): \u0417\u0430\u0449\u0438\u0442\u0430 \u043e\u0442 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0447\u0430\u0441\u0442\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.</li> <li>\u0412\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0431\u043e\u0440\u043a\u0438 (\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f): \u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0430\u0432 \u0434\u043e\u0441\u0442\u0443\u043f\u0430.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0433\u0440\u0443\u0437\u043e\u0432 (\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f): \u041d\u0435 \u0434\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u043d\u0438\u043a\u0430\u043a\u0438\u043c \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u043c.</li> <li>\u0421\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0441\u0435\u0439\u0444 (\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f): \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0435 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0435\u0439.</li> </ul> <p>\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u043c \u043a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u044d\u0442\u0438\u0445 \u0443\u0440\u043e\u0432\u043d\u0435\u0439.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/5/#2-https","title":"2. \u0429\u0438\u0442\u044b: \u0412\u0441\u0435\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 HTTPS","text":"<p>\u0427\u0442\u043e \u044d\u0442\u043e? HTTPS (HyperText Transfer Protocol Secure) \u2014 \u044d\u0442\u043e \u0432\u0435\u0440\u0441\u0438\u044f \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 HTTP, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0448\u0438\u0444\u0440\u0443\u0435\u0442 \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u0435\u0436\u0434\u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c. \u0411\u0435\u0437 \u043d\u0435\u0433\u043e \u043b\u044e\u0431\u043e\u0439, \u043a\u0442\u043e \"\u0441\u043b\u0443\u0448\u0430\u0435\u0442\" \u0441\u0435\u0442\u044c (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u043e\u043c Wi-Fi), \u043c\u043e\u0436\u0435\u0442 \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0438\u0442\u044c \u043b\u043e\u0433\u0438\u043d\u044b, \u043f\u0430\u0440\u043e\u043b\u0438 \u0438 \u0442\u043e\u043a\u0435\u043d\u044b.</p> <p>\u041a\u0430\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c?</p> <ul> <li>\u041d\u0430 \u043f\u0440\u043e\u0434\u0430\u043a\u0448\u0435\u043d\u0435 \u2014 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e. \u041f\u0440\u0438 \u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0438 \u0432\u0430\u0448\u0435\u0433\u043e API \u043d\u0430 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0435 (Heroku, DigitalOcean, etc.) \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 (Nginx, Apache) \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 SSL-\u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u043c. \u0421\u0435\u0440\u0432\u0438\u0441\u044b \u0432\u0440\u043e\u0434\u0435 Let's Encrypt \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u044b\u0435 \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u044b.</li> <li>\u041d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u044d\u0442\u043e \u043c\u0435\u043d\u0435\u0435 \u043a\u0440\u0438\u0442\u0438\u0447\u043d\u043e, \u043d\u043e \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0432\u0440\u043e\u0434\u0435 Laravel Herd \u0438\u043b\u0438 mkcert \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u043b\u0435\u0433\u043a\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 HTTPS.</li> </ul> <p>\ud83d\udca1 \u041f\u0440\u0430\u0432\u0438\u043b\u043e \u21161 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 API: \u041d\u0435\u0442 HTTPS \u2014 \u043d\u0435\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/5/#3-rate-limiting","title":"3. \u0414\u0430\u0442\u0447\u0438\u043a\u0438 \u0430\u043d\u043e\u043c\u0430\u043b\u0438\u0439: \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u0442\u043e\u0442\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (Rate Limiting)","text":"<p>\u0427\u0442\u043e \u044d\u0442\u043e? \u0417\u0430\u0449\u0438\u0442\u0430 \u043e\u0442 Brute-force \u0430\u0442\u0430\u043a (\u043a\u043e\u0433\u0434\u0430 \u0437\u043b\u043e\u0443\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u0438\u043a \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u0434\u043e\u0431\u0440\u0430\u0442\u044c \u043f\u0430\u0440\u043e\u043b\u044c, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044f \u0442\u044b\u0441\u044f\u0447\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443) \u0438 \u043e\u0442 DoS-\u0430\u0442\u0430\u043a (\u043a\u043e\u0433\u0434\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \"\u0437\u0430\u0432\u0430\u043b\u0438\u0432\u0430\u044e\u0442\" \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043c\u0438, \u0447\u0442\u043e\u0431\u044b \u043e\u043d \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043b \u043e\u0442\u0432\u0435\u0447\u0430\u0442\u044c). Rate Limiting \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043e\u0434\u0438\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c (\u0438\u043b\u0438 IP-\u0430\u0434\u0440\u0435\u0441) \u043c\u043e\u0436\u0435\u0442 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0437\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u043a \u0432\u0440\u0435\u043c\u0435\u043d\u0438.</p> <p>\u041a\u0430\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c?</p> <ul> <li> <p>\u0412 Laravel: Middleware \u0434\u043b\u044f \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u0443\u0436\u0435 \u0432\u0441\u0442\u0440\u043e\u0435\u043d!   \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 <code>app/Http/Kernel.php</code> \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u043d\u0430 \u043a\u043b\u044e\u0447 <code>middlewareGroups['api']</code>. \u0422\u0430\u043c \u0443\u0436\u0435 \u0435\u0441\u0442\u044c <code>'throttle:api'</code>. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u044d\u0442\u043e\u0433\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 <code>app/Providers/RouteServiceProvider.php</code> \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 <code>configureRateLimiting()</code>.   <pre><code>// app/Providers/RouteServiceProvider.php\nprotected function configureRateLimiting()\n{\n    RateLimiter::for('api', function (Request $request) {\n        return Limit::perMinute(60)-&gt;by($request-&gt;user()?-&gt;id ?: $request-&gt;ip());\n    });\n}\n</code></pre>   \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442: 60 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432 \u043c\u0438\u043d\u0443\u0442\u0443 \u043d\u0430 \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u0435\u0441\u043b\u0438 \u043e\u043d \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d) \u0438\u043b\u0438 \u043d\u0430 \u043e\u0434\u0438\u043d IP-\u0430\u0434\u0440\u0435\u0441.</p> </li> <li> <p>\u0412 FastAPI: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0439 \u043f\u0430\u043a\u0435\u0442, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>slowapi</code>.</p> </li> <li> <p>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430: <code>pip install slowapi</code></p> </li> <li>\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0432 <code>main.py</code>:       <pre><code># main.py\nfrom slowapi import Limiter, _rate_limit_exceeded_handler\nfrom slowapi.util import get_remote_address\nfrom slowapi.errors import RateLimitExceeded\n\nlimiter = Limiter(key_func=get_remote_address)\napp = FastAPI(...)\n\n# \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043e\u0448\u0438\u0431\u043e\u043a \u0438 \u0441\u0430\u043c \u043b\u0438\u043c\u0438\u0442\u0435\u0440\napp.state.limiter = limiter\napp.add_exception_handler(RateLimitExceeded, _rate_limit_exceeded_handler)\n\n# \u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u043a \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0443\n@router.get(\"/planets\")\n@limiter.limit(\"5/minute\") # 5 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432 \u043c\u0438\u043d\u0443\u0442\u0443\ndef get_planets(request: Request):\n    # ...\n</code></pre></li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/5/#4","title":"4. \u0412\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0431\u043e\u0440\u043a\u0438: \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f (\u043d\u0435 \u043f\u0443\u0442\u0430\u0442\u044c \u0441 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0435\u0439!)","text":"<p>\u0427\u0442\u043e \u044d\u0442\u043e?</p> <ul> <li>\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043d\u0430 \u0432\u043e\u043f\u0440\u043e\u0441 \"\u041a\u0442\u043e \u0442\u044b?\".</li> <li>\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043d\u0430 \u0432\u043e\u043f\u0440\u043e\u0441 \"\u0427\u0442\u043e \u0442\u0435\u0431\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e \u0434\u0435\u043b\u0430\u0442\u044c?\".</li> </ul> <p>\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043f\u043b\u0430\u043d\u0435\u0442\u044b, \u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441 \u0440\u043e\u043b\u044c\u044e \"\u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\" \u043c\u043e\u0436\u0435\u0442 \u0438\u0445 \u0443\u0434\u0430\u043b\u044f\u0442\u044c.</p> <p>\u041a\u0430\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c?</p> <ul> <li> <p>\u0412 Laravel: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f Policies (\u041f\u043e\u043b\u0438\u0442\u0438\u043a\u0438) \u0438\u043b\u0438 Gates (\u0428\u043b\u044e\u0437\u044b).</p> </li> <li> <p>\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u043e\u043b\u0438\u0442\u0438\u043a\u0443: <code>php artisan make:policy PlanetPolicy --model=Planet</code></p> </li> <li>\u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0432 <code>app/Policies/PlanetPolicy.php</code>:       <pre><code>class PlanetPolicy\n{\n    // \u0420\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0441 \u0440\u043e\u043b\u044c\u044e 'admin'\n    public function delete(User $user, Planet $planet): bool\n    {\n        return $user-&gt;role === 'admin';\n    }\n}\n</code></pre></li> <li> <p>\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u043f\u043e\u043b\u0438\u0442\u0438\u043a\u0443 \u0432 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435 <code>PlanetController.php</code>:       <pre><code>public function destroy(Planet $planet)\n{\n    // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0443 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0430\u0432\u043e \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435\n    $this-&gt;authorize('delete', $planet);\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre></p> </li> <li> <p>\u0412 FastAPI: \u041b\u043e\u0433\u0438\u043a\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0431\u044b\u0447\u043d\u043e \u043f\u0438\u0448\u0435\u0442\u0441\u044f \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u0432\u043d\u0443\u0442\u0440\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u0438\u0437 \u0442\u043e\u043a\u0435\u043d\u0430.</p> </li> </ul> <pre><code># (\u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u043c, \u0447\u0442\u043e \u0432 \u0442\u043e\u043a\u0435\u043d\u0435 \u0435\u0441\u0442\u044c \u043f\u043e\u043b\u0435 'roles')\ndef get_current_active_user(token: str = Depends(oauth2_scheme)):\n    # ... \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0442\u043e\u043a\u0435\u043d \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u0440\u043e\u043b\u044f\u043c\u0438 \u0438\u0437 \u0411\u0414\n    # user = get_user_from_db(username)\n    return user # \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n\n@router.delete(\"/planets/{planet_id}\")\ndef delete_planet(\n    planet_id: int,\n    current_user: User = Depends(get_current_active_user)\n):\n    if \"admin\" not in current_user.roles:\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail=\"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438\",\n        )\n    # ... \u043b\u043e\u0433\u0438\u043a\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f ...\n</code></pre>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/5/#5","title":"5. \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0433\u0440\u0443\u0437\u043e\u0432 \u0438 \u0421\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0441\u0435\u0439\u0444: \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0438 \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f","text":"<p>\u042d\u0442\u0438 \u0434\u0432\u0430 \u043f\u0443\u043d\u043a\u0442\u0430 \u043c\u044b \u0443\u0436\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043b\u0438, \u043d\u043e \u0432\u0430\u0436\u043d\u043e \u043f\u043e\u0434\u0447\u0435\u0440\u043a\u043d\u0443\u0442\u044c \u0438\u0445 \u0440\u043e\u043b\u044c \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438.</p> <ul> <li> <p>\u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0434\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u043c (\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f):</p> </li> <li> <p>\u041c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 <code>$request-&gt;validate()</code> \u0432 Laravel \u0438 Pydantic-\u043c\u043e\u0434\u0435\u043b\u0438 \u0432 FastAPI. \u042d\u0442\u043e \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043d\u0430\u0441 \u043e\u0442 SQL-\u0438\u043d\u044a\u0435\u043a\u0446\u0438\u0439 (\u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 Eloquent/SQLAlchemy) \u0438 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0441\u043b\u043e\u043c\u0430\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435. \u0412\u0441\u0435\u0433\u0434\u0430 \u0432\u0430\u043b\u0438\u0434\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0451, \u0447\u0442\u043e \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442 \u0438\u0437\u0432\u043d\u0435!</p> </li> <li> <p>\u0425\u0440\u0430\u043d\u0438\u0442\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0432 <code>.env</code> (\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f):</p> </li> <li> <p>\u041a\u043b\u044e\u0447\u0438 \u043e\u0442 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445, \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 \u0434\u043b\u044f JWT (<code>SECRET_KEY</code>), \u043a\u043b\u044e\u0447\u0438 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u2014 \u0432\u0441\u0451 \u044d\u0442\u043e \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043f\u043e\u043f\u0430\u0434\u0430\u0442\u044c \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0432\u0435\u0440\u0441\u0438\u0439 (Git). \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0438 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442 \u0444\u0430\u0439\u043b\u044b <code>.env</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0432 <code>.gitignore</code>.</p> </li> </ul>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/5/#_1","title":"\u041a\u0432\u0438\u0437 \u0434\u043b\u044f \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f","text":"<p>1. \u0414\u043b\u044f \u0437\u0430\u0449\u0438\u0442\u044b \u043e\u0442 \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u0435\u0442\u044f\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f:</p>  a) Rate Limiting  b) HTTPS  c) CORS <p>2. \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u0442\u043e\u0442\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (Rate Limiting) \u0432 \u043f\u0435\u0440\u0432\u0443\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043e\u0442:</p>  a) SQL-\u0438\u043d\u044a\u0435\u043a\u0446\u0438\u0439  b) Brute-force \u0438 DoS-\u0430\u0442\u0430\u043a  c) \u041c\u0435\u0436\u0441\u0430\u0439\u0442\u043e\u0432\u043e\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0438\u043d\u0433\u0430 (XSS) <p>3. \u0412\u043e\u043f\u0440\u043e\u0441 \"\u0427\u0442\u043e \u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e \u0434\u0435\u043b\u0430\u0442\u044c?\" \u0440\u0435\u0448\u0430\u0435\u0442:</p>  a) \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f  b) \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f  c) \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f <p>4. \u0421\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 API \u0438 \u043f\u0430\u0440\u043e\u043b\u0438 \u043e\u0442 \u0411\u0414 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0445\u0440\u0430\u043d\u0438\u0442\u044c:</p>  a) \u041f\u0440\u044f\u043c\u043e \u0432 \u043a\u043e\u0434\u0435 \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430  b) \u0412 \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u043e\u043c \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438 \u043d\u0430 GitHub  c) \u0412 \u0444\u0430\u0439\u043b\u0435 `.env`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d \u0438\u0437 Git \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c <p>\ud83d\ude80 \u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u043a\u0443\u0440\u0441\u0430 \u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u0435\u043c, \u043a\u043e\u043c\u0430\u043d\u0434\u0438\u0440! \u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u043b\u0438 \u0432\u0441\u0435 \u043c\u0438\u0441\u0441\u0438\u0438.</p> <p>\u0412\u044b \u043f\u0440\u043e\u0448\u043b\u0438 \u043f\u0443\u0442\u044c \u043e\u0442 \u043d\u043e\u0432\u0438\u0447\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u043b\u044b\u0448\u0430\u043b \u043e\u0431 API, \u0434\u043e \u0438\u043d\u0436\u0435\u043d\u0435\u0440\u0430, \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0433\u043e \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c, \u0437\u0430\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0437\u0430\u0449\u0438\u0442\u0438\u0442\u044c \u0438 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u044b\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0438\u0441 \u043d\u0430 \u0434\u0432\u0443\u0445 \u0441\u0430\u043c\u044b\u0445 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u0445 \u0432 \u0441\u0432\u043e\u0438\u0445 \u044d\u043a\u043e\u0441\u0438\u0441\u0442\u0435\u043c\u0430\u0445.</p> <p>\u0412\u044b \u043e\u0441\u0432\u043e\u0438\u043b\u0438 \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u044b\u0439 \u044f\u0437\u044b\u043a REST, \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c Laravel \u0438 FastAPI \u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u0434\u043b\u044f \u043d\u0438\u0445 \"\u0426\u0435\u043d\u0442\u0440 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u041f\u043e\u043b\u0435\u0442\u0430\u043c\u0438\" \u043d\u0430 \u0447\u0438\u0441\u0442\u043e\u043c JavaScript.</p> <p>\u042d\u0442\u043e \u043e\u0433\u0440\u043e\u043c\u043d\u043e\u0435 \u0434\u043e\u0441\u0442\u0438\u0436\u0435\u043d\u0438\u0435. \u041c\u0438\u0440 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 API \u0442\u0435\u043f\u0435\u0440\u044c \u043e\u0442\u043a\u0440\u044b\u0442 \u0434\u043b\u044f \u0432\u0430\u0441. \u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0439\u0442\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c, \u0443\u0447\u0438\u0442\u044c\u0441\u044f \u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0443\u0434\u0438\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u0435\u0449\u0438.</p>"},{"location":"ru/%D0%93%D0%BB%D0%B0%D0%B2%D0%B0%206%20-%20%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B8/5/#_2","title":"\u041a\u043e\u043d\u0435\u0446 \u0441\u0432\u044f\u0437\u0438. \ud83d\ude80\u2604 \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0442\u0435 \u043c\u0438\u0441\u0441\u0438\u044e","text":"<p>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0443\u0447\u0435\u0431\u043d\u0438\u043a\u0430 \u2014 \u0434\u043e\u043b\u0433\u0438\u0439 \u0438 \u0441\u043b\u043e\u0436\u043d\u044b\u0439 \u043f\u043e\u043b\u0451\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043d\u0435\u043c\u0430\u043b\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0438 \u044d\u043d\u0435\u0440\u0433\u0438\u0438. \u0415\u0441\u043b\u0438 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b \u043e\u043a\u0430\u0437\u0430\u043b\u0441\u044f \u0434\u043b\u044f \u0432\u0430\u0441 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043c\u043e\u0447\u044c \u043f\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0442\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0435 \u0431\u0430\u043a\u0438 \u043d\u0430\u0448\u0435\u0439 \u044d\u043a\u0441\u043f\u0435\u0434\u0438\u0446\u0438\u0438. \u041a\u0430\u0436\u0434\u0430\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u2014 \u044d\u0442\u043e \u0435\u0449\u0451 \u043e\u0434\u0438\u043d \u0432\u0438\u0442\u043e\u043a \u043e\u0440\u0431\u0438\u0442\u044b \u043a \u043d\u043e\u0432\u044b\u043c \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430\u043c.</p> <p></p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/1/","title":"\u7b2c 1.1 \u7ae0\uff1a\u4ec0\u4e48\u662f API \u53ca\u5176\u4f5c\u7528\uff1f","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 30 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/1/#1-api","title":"1. \u5f15\u8a00\uff1aAPI \u5982\u540c\u201c\u592a\u7a7a\u5bf9\u63a5\u8282\u70b9\u201d","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u662f\u4e00\u540d\u5b87\u5b99\u98de\u8239\u7684\u6307\u6325\u5b98\u3002\u8981\u5c06\u4f60\u7684\u98de\u8239\u8fde\u63a5\u5230\u56fd\u9645\u7a7a\u95f4\u7ad9\uff08ISS\uff09\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u6807\u51c6\u5bf9\u63a5\u8282\u70b9\u3002\u6ca1\u6709\u5b83\uff0c\u5373\u4f7f\u98de\u8239\u548c\u7a7a\u95f4\u7ad9\u5b8c\u7f8e\u5339\u914d\uff0c\u4e5f\u65e0\u6cd5\u8fdb\u884c\u5bf9\u63a5\u3002</p> <p>API\uff08\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3\uff09\u2014\u2014\u5bf9\u4e8e\u7a0b\u5e8f\u800c\u8a00\uff0c\u5b83\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u201c\u5bf9\u63a5\u8282\u70b9\u201d\u3002 - \u5b83\u662f\u4e00\u5957\u89c4\u5219\uff0c\u5141\u8bb8\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u4ea4\u6362\u6570\u636e\u5e76\u534f\u540c\u5de5\u4f5c\u3002 - \u793a\u4f8b\uff1a\u5f53\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u663e\u793a\u5929\u6c14\u9884\u62a5\u65f6\uff0c\u5b83\u4f1a\u4f7f\u7528\u6c14\u8c61\u670d\u52a1\u7684 API\u3002</p> <p>\ud83d\udca1 \u6765\u81ea\u592a\u7a7a\u7684\u7c7b\u6bd4\uff1a API \u5c31\u50cf\u5730\u7403\u4e0e\u706b\u661f\u63a2\u6d4b\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u534f\u8bae\u3002\u63a2\u6d4b\u5668\u63a5\u6536\u5b83\u80fd\u7406\u89e3\u7684\u6307\u4ee4\u683c\u5f0f\uff08\u4f8b\u5982\uff0c\u201c\u62cd\u6444\u9668\u77f3\u5751\u7167\u7247\u201d\uff09\uff0c\u6267\u884c\u4efb\u52a1\u5e76\u5c06\u6570\u636e\u4f20\u56de\u3002</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/1/#2-api","title":"2. \u4e3a\u4ec0\u4e48\u9700\u8981 API\uff1f","text":"<ol> <li> <p>\u7b80\u5316\u5f00\u53d1    \u65e0\u9700\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u6240\u6709\u5185\u5bb9\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u73b0\u6210\u7684 API\uff0c\u4f8b\u5982 SpaceX API\u3002    <pre><code># \u793a\u4f8b\uff1a\u83b7\u53d6 SpaceX \u53d1\u5c04\u6570\u636e\nimport requests\nresponse = requests.get(\"https://api.spacexdata.com/v3/missions\")\nprint(response.json()[0])  # \u8f93\u51fa\u6570\u636e\n</code></pre></p> </li> <li> <p>\u81ea\u52a8\u5316\u6d41\u7a0b    API \u5141\u8bb8\u673a\u5668\u4eba\u63a2\u6d4b\u5668\u81ea\u52a8\u5c06\u6570\u636e\u4f20\u8f93\u5230\u5730\u7403\uff0c\u65e0\u9700\u4eba\u5de5\u5e72\u9884\u3002</p> </li> <li> <p>\u7cfb\u7edf\u96c6\u6210    \u5c31\u50cf\u56fd\u9645\u7a7a\u95f4\u7ad9\u6a21\u5757\u7684\u5bf9\u63a5\uff1aAPI \u5c06\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0e\u652f\u4ed8\u7cfb\u7edf\u3001\u6570\u636e\u5e93\u751a\u81f3\u671b\u8fdc\u955c\u8fde\u63a5\u8d77\u6765\uff01</p> </li> <li> <p>\u83b7\u53d6\u72ec\u6709\u6570\u636e    \u4f8b\u5982\uff0cSpaceX API \u63d0\u4f9b\u5173\u4e8e\u706b\u7bad\u53d1\u5c04\u7684\u771f\u5b9e\u6570\u636e\u3002</p> </li> </ol>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/1/#3-api","title":"3. API \u5982\u4f55\u5de5\u4f5c\uff1f","text":"<ul> <li>\u5ba2\u6237\u7aef\uff08\u4f60\u7684\u7a0b\u5e8f\uff09\u5411\u670d\u52a1\u5668\u53d1\u9001 HTTP \u8bf7\u6c42\u3002</li> <li>\u670d\u52a1\u5668\uff08\u4f8b\u5982 NASA\uff09\u5904\u7406\u8bf7\u6c42\u5e76\u8fd4\u56de JSON \u683c\u5f0f\u7684\u54cd\u5e94\u3002</li> <li>\u6570\u636e\u2014\u2014\u662f\u201c\u592a\u7a7a\u5b9d\u85cf\u201d\uff1a\u56fd\u9645\u7a7a\u95f4\u7ad9\u7684\u5750\u6807\u3001\u661f\u7cfb\u7167\u7247\u3001\u7cfb\u5916\u884c\u661f\u5217\u8868\u3002</li> </ul> <p>\u26a1 \u201cOpen Notify\u201dAPI \u8bf7\u6c42\u793a\u4f8b\uff08\u56fd\u9645\u7a7a\u95f4\u7ad9\uff09\uff1a <pre><code>curl \"http://api.open-notify.org/iss-now.json\"\n</code></pre> \u54cd\u5e94\uff1a <pre><code>{\n  \"message\": \"success\",\n  \"timestamp\": 1725431234,\n  \"iss_position\": {\n    \"latitude\": \"51.1234\",\n    \"longitude\": \"-120.5678\"\n  }\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/1/#4-api","title":"4. API \u7c7b\u578b\uff08\u7b80\u8981\u6982\u8ff0\uff09","text":"\u7c7b\u578b \u592a\u7a7a\u793a\u4f8b \u7528\u9014 REST \u6807\u51c6\u901a\u4fe1\u201c\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3 \u2194 \u536b\u661f\u201d Web \u670d\u52a1\uff0890% \u7684\u60c5\u51b5\uff09 GraphQL \u201c\u81ea\u5b9a\u4e49\u8bf7\u6c42\u201d\uff08\u4f8b\u5982\uff0c\u201c\u53ea\u7ed9\u6211\u884c\u661f\u7684\u5927\u5c0f\u548c\u8d28\u91cf\u201d\uff09 \u590d\u6742\u7cfb\u7edf SOAP \u5982\u540c\u65e7\u4efb\u52a1\u4e2d\u7684\u65e0\u7ebf\u7535\u52a0\u5bc6 \u4f01\u4e1a\u5e94\u7528\u7a0b\u5e8f <p>\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4e13\u6ce8\u4e8e REST API\u2014\u2014\u6700\u6d41\u884c\u7684\u683c\u5f0f\u3002</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/1/#5-api","title":"5. \u5b87\u5b99\u7a7a\u95f4 API \u793a\u4f8b","text":"<ol> <li>NASA Open API\uff1a\u5173\u4e8e\u5c0f\u884c\u661f\u7684\u6570\u636e\uff0c\u54c8\u52c3\u671b\u8fdc\u955c\u7684\u7167\u7247\u3002</li> <li>SpaceX API\uff1a\u5173\u4e8e\u53d1\u5c04\u3001\u706b\u7bad\u3001\u9f99\u98de\u8239\u7684\u4fe1\u606f\u3002</li> <li>Open Notify\uff1a\u56fd\u9645\u7a7a\u95f4\u7ad9\u5f53\u524d\u4f4d\u7f6e\uff0c\u592a\u7a7a\u4e2d\u7684\u4eba\u6570\u3002</li> </ol>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/1/#_1","title":"\u4e92\u52a8\u5c0f\u6d4b\u9a8c","text":"<p>1. API \u662f...</p>  a) \u4eba\u5de5\u667a\u80fd  b) \u7528\u4e8e\u7a0b\u5e8f\u4ea4\u4e92\u7684\u4e00\u5957\u89c4\u5219  c) \u7f16\u7a0b\u8bed\u8a00 <p>2. \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 API \u800c\u4e0d\u662f\u81ea\u5df1\u7f16\u5199\u4ee3\u7801\uff1f</p>  a) \u4e3a\u4e86\u8282\u7701\u65f6\u95f4  b) \u4e3a\u4e86\u83b7\u53d6\u72ec\u6709\u6570\u636e  c) \u4ee5\u4e0a\u4e24\u8005 <p>3. API \u6700\u5e38\u8fd4\u56de\u54ea\u79cd\u6570\u636e\u683c\u5f0f\uff1f</p>  a) XML  b) JSON  c) TXT \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>API \u662f\u5904\u7406\u5916\u90e8\u6570\u636e\u7684\u57fa\u7840\u3002\u5c31\u50cf\u5b87\u822a\u5458\u79bb\u4e0d\u5f00\u4e0e\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u7684\u8054\u7cfb\u4e00\u6837\uff0c\u5f00\u53d1\u8005\u4e5f\u79bb\u4e0d\u5f00 API \u6765\u6784\u5efa\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 HTTP \u65b9\u6cd5\u5411\u670d\u52a1\u5668\u53d1\u9001\u201c\u547d\u4ee4\u201d\uff01</p> <p>\ud83d\udccc \u63d0\u793a\uff1a \u5c1d\u8bd5\u5411 Open Notify API \u53d1\u9001\u8bf7\u6c42\uff0c\u770b\u770b\u56fd\u9645\u7a7a\u95f4\u7ad9\u73b0\u5728\u5728\u54ea\u91cc\uff01\uff08\u8fd9\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u63a7\u5236\u53f0\u5b8c\u6210\uff09</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/2/","title":"\u7b2c1.2\u7ae0\uff1aHTTP \u65b9\u6cd5\u548c\u72b6\u6001\u7801","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 40\u5206\u949f</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/2/#1-http","title":"1. HTTP\uff1a\u5b87\u5b99\u4ea4\u6d41\u8bed\u8a00","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u60a8\u662f\u98de\u884c\u63a7\u5236\u4e2d\u5fc3 (\u0426\u0423\u041f)\uff0c\u800cAPI\u670d\u52a1\u5668\u662f\u5b87\u5b99\u98de\u8239\u3002HTTP\uff08\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u662f\u60a8\u4eec\u4e4b\u95f4\u7684\u65e0\u7ebf\u7535\u901a\u4fe1\u3002</p> <p>\u6bcf\u6761\u6d88\u606f\u90fd\u5305\u542b\uff1a</p> <ul> <li> <p>\u65b9\u6cd5 \u2192 \u505a\u4ec0\u4e48\uff08\u4f8b\u5982\uff0c\u201c\u53d1\u5c04\u63a2\u6d4b\u5668\u201d\uff09</p> </li> <li> <p>\u72b6\u6001\u7801 \u2192 \u64cd\u4f5c\u7ed3\u679c\uff08\u201c\u63a2\u6d4b\u5668\u53d1\u5c04\u6210\u529f\uff01\u201d\uff09</p> </li> </ul> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a <code>GET /stars</code> = \"\u98de\u63a7\u4e2d\u5fc3 \u2192 \u98de\u8239\uff1a\u62a5\u544a\u661f\u661f\u7684\u5750\u6807\uff01\" <code>200 OK</code> = \"\u98de\u8239 \u2192 \u98de\u63a7\u4e2d\u5fc3\uff1a\u5750\u6807\u5df2\u4f20\u8f93\uff01\"</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/2/#2-http","title":"2. \u4e3b\u8981HTTP\u65b9\u6cd5","text":"<p>\u6bcf\u79cd\u65b9\u6cd5\u90fd\u50cf\u662f\u592a\u7a7a\u4efb\u52a1\u7684\u4e00\u79cd\u547d\u4ee4\u7c7b\u578b\uff1a</p> \u65b9\u6cd5 \u592a\u7a7a\u7c7b\u6bd4 \u8bf7\u6c42\u793a\u4f8b \u63cf\u8ff0 GET \u8bf7\u6c42\u6570\u636e\uff08\u671b\u8fdc\u955c\uff09 <code>GET /planets</code> \u83b7\u53d6\u884c\u661f\u5217\u8868 POST \u53d1\u9001\u65b0\u5bf9\u8c61\uff08\u53d1\u5c04\u706b\u7bad\uff09 <code>POST /satellites</code> \u521b\u5efa\u65b0\u536b\u661f PUT \u5b8c\u5168\u66f4\u65b0\u5bf9\u8c61\uff08\u8f68\u9053\u4fee\u6b63\uff09 <code>PUT /satellites/iss</code> \u66f4\u65b0\u56fd\u9645\u7a7a\u95f4\u7ad9\u6570\u636e DELETE \u9500\u6bc1\u5bf9\u8c61\uff08\u8131\u79bb\u8f68\u9053\uff09 <code>DELETE /debris/123</code> \u5220\u9664\u592a\u7a7a\u5783\u573e <p>\u26a1 \u4ee3\u7801\u793a\u4f8b (Python)\uff1a <pre><code>import requests\n\n# GET: \u83b7\u53d6\u730e\u9e709\u53f7\u706b\u7bad\u7684\u6570\u636e\n# \u4f7f\u7528\u771f\u5b9e\u7684SpaceX API\u7aef\u70b9\nresponse = requests.get(\"https://api.spacexdata.com/v4/rockets/5e9d0d95eda69973a809d1ec\")\nprint(response.status_code, response.json()['name']) # 200 Falcon 9\n\n# POST: \u5728\u6d4b\u8bd5API\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u5e16\u5b50\n# \u4f7f\u7528jsonplaceholder\u6c99\u76d2\u670d\u52a1\nnew_post = {\"title\": \"Artemis Mission\", \"body\": \"Ready for launch\", \"userId\": 1}\nresponse = requests.post(\"https://jsonplaceholder.typicode.com/posts\", json=new_post)\nprint(response.status_code, response.json()['id'])  # 201 101 (\u6216\u5176\u5b83ID)\n</code></pre></p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/2/#3","title":"3. \u91cd\u8981\u72b6\u6001\u7801","text":"<p>\u670d\u52a1\u5668\u54cd\u5e94\u2014\u2014\u5c31\u50cf\u6765\u81ea\u822a\u5929\u5668\u7684\u4fe1\u53f7\uff1a</p> \u7ec4 \u4ee3\u7801 \u592a\u7a7a\u7c7b\u6bd4 \u63cf\u8ff0 <code>2xx</code> 200 \u2705 \u201c\u4efb\u52a1\u5b8c\u6210\uff01\u201d \u6210\u529f 201 \ud83d\ude80 \u201c\u706b\u7bad\u5df2\u53d1\u5c04\uff01\u201d \u5bf9\u8c61\u5df2\u521b\u5efa <code>3xx</code> 301 \ud83c\udf0d \u201c\u98de\u63a7\u4e2d\u5fc3\u5df2\u8fc1\u79fb\u5230\u65b0\u5730\u5740\u201d \u91cd\u5b9a\u5411 <code>4xx</code> 400 \u274c \u201c\u8bf7\u6c42\u4e2d\u7684\u5750\u6807\u4e0d\u6b63\u786e\uff01\u201d \u5ba2\u6237\u7aef\u9519\u8bef 404 \ud83e\ude90 \u201c\u672a\u627e\u5230\u884c\u661f\uff01\u201d \u8d44\u6e90\u4e0d\u5b58\u5728 <code>5xx</code> 500 \ud83d\udd25 \u201c\u53d1\u52a8\u673a\u6545\u969c\uff01\u201d \u670d\u52a1\u5668\u9519\u8bef"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/2/#4","title":"4. \u5b9e\u8df5\uff1a\u5904\u7406\u72b6\u6001\u7801","text":"<p>\u59cb\u7ec8\u68c0\u67e5API\u54cd\u5e94\uff01\u9519\u8bef\u5904\u7406\u793a\u4f8b\uff1a <pre><code>import requests\n\ndef get_post_data(post_id):\n    \"\"\"\u4e00\u4e2a\u7528\u4e8e\u83b7\u53d6\u5e16\u5b50\u6570\u636e\u5e76\u5904\u7406\u72b6\u6001\u7801\u7684\u51fd\u6570\u3002\"\"\"\n    try:\n        response = requests.get(f\"https://jsonplaceholder.typicode.com/posts/{post_id}\")\n\n        # \u68c0\u67e5\u54cd\u5e94\u72b6\u6001\u7801\n        if response.status_code == 200:\n            print(f\"\u2705 \u5e16\u5b50 {post_id} \u7684\u6570\u636e\u5df2\u6210\u529f\u83b7\u53d6\uff01\")\n            return response.json()\n        elif response.status_code == 404:\n            print(f\"\u26a0\ufe0f \u5e16\u5b50 {post_id} \u7684\u8d44\u6e90\u672a\u627e\u5230\uff01\")\n            return None\n        else:\n            # \u5904\u7406\u5176\u4ed6\u5ba2\u6237\u7aef (4xx) \u6216\u670d\u52a1\u5668 (5xx) \u9519\u8bef\n            print(f\"\ud83d\udea8 \u53d1\u751f\u9519\u8bef\uff01\u72b6\u6001\u7801\uff1a{response.status_code}\")\n            return None\n\n    except requests.exceptions.RequestException as e:\n        # \u5904\u7406\u8fde\u63a5\u9519\u8bef\uff08\u4f8b\u5982\uff0c\u6ca1\u6709\u4e92\u8054\u7f51\uff09\n        print(f\"\ud83d\udd25 \u8fde\u63a5\u9519\u8bef\uff1a{e}\")\n        return None\n\n# --- \u6d4b\u8bd5\u6211\u4eec\u7684\u51fd\u6570 ---\nprint(\"--- \u67e5\u627e\u73b0\u6709\u5e16\u5b50 ---\")\nget_post_data(1)\n\nprint(\"\\n--- \u67e5\u627e\u4e0d\u5b58\u5728\u7684\u5e16\u5b50 ---\")\nget_post_data(9999) # \u6b64\u5e16\u5b50\u4e0d\u5b58\u5728\uff0c\u9884\u671f\u4e3a404\n</code></pre></p> <p>\ud83d\udd2d \u771f\u5b9eAPI\u793a\u4f8b (SpaceX)\uff1a \u8bf7\u6c42\uff1a <code>GET https://api.spacexdata.com/v4/ships/OCISLY</code> \u54cd\u5e94\uff1a <code>200 OK</code> + \u98de\u8239\u6570\u636e \u8bf7\u6c42\uff1a <code>GET https://api.spacexdata.com/v4/ships/UNICORN</code> \u54cd\u5e94\uff1a <code>404 Not Found</code></p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/2/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. \u5e94\u8be5\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\u6765\u83b7\u53d6\u661f\u661f\u7684\u6570\u636e\uff1f</p>  a) POST  b) PUT  c) GET <p>2. \u72b6\u6001\u7801 `201 Created` \u8868\u793a\uff1a</p>  a) \u5bf9\u8c61\u5df2\u5220\u9664  b) \u5bf9\u8c61\u5df2\u521b\u5efa  c) \u670d\u52a1\u5668\u9519\u8bef <p>3. \u5b8c\u5168\u66f4\u65b0\u536b\u661f\u6570\u636e\u7684\u65b9\u6cd5\uff1a</p>  a) PATCH  b) DELETE  c) PUT <p>4. \u72b6\u6001\u7801 `500 Internal Server Error` \u610f\u5473\u7740\u4ec0\u4e48\uff1f</p>  a) \u5ba2\u6237\u7aef\u8bf7\u6c42\u9519\u8bef  b) \u670d\u52a1\u5668\u6545\u969c  c) \u6210\u529f\u6267\u884c \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a HTTP\u65b9\u6cd5\u662f\u60a8\u8fdb\u884c\u592a\u7a7a\u4efb\u52a1\u7684\u547d\u4ee4\uff0c\u800c\u72b6\u6001\u7801\u5219\u662f\u8fd9\u4e9b\u4efb\u52a1\u7684\u6267\u884c\u62a5\u544a\u3002\u8bf7\u8bb0\u4f4f\uff1a</p> <p><code>GET</code> = \u201c\u83b7\u53d6\u6570\u636e\u201d\uff0c<code>POST</code> = \u201c\u521b\u5efa\u65b0\u6570\u636e\u201d\uff0c<code>PUT</code> = \u201c\u5168\u90e8\u66f4\u65b0\u201d\uff0c<code>DELETE</code> = \u201c\u5220\u9664\u201d <code>2xx</code> = \u6210\u529f\uff0c<code>4xx</code> = \u4f60\u7684\u9519\u8bef\uff0c<code>5xx</code> = \u670d\u52a1\u5668\u95ee\u9898</p> <p>\u51c6\u5907\u53d1\u5c04\uff01 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u89e3\u8bfb\u6765\u81ea\u670d\u52a1\u5668\u7684\u201c\u7535\u62a5\u201d\u2014\u2014JSON\u683c\u5f0f\u3002</p> <p>\ud83d\udccc \u5b9e\u8df5\uff1a \u4f7f\u7528 SpaceX API\uff0c\u53d1\u9001 <code>GET /launches/latest</code> \u5e76\u7814\u7a76\u54cd\u5e94\u4ee3\u7801\uff01</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/3/","title":"\u7b2c 1.3 \u7ae0\uff1aJSON \u683c\u5f0f","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 35 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/3/#1-json","title":"1. JSON\uff1a\u5b87\u5b99\u901a\u4fe1\u8bed\u8a00","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u4e00\u4e2a\u592a\u7a7a\u63a2\u6d4b\u5668\u548c\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u8bf4\u7740\u4e0d\u540c\u7684\u8bed\u8a00\u3002JSON (JavaScript Object Notation) \u662f\u4e00\u79cd\u901a\u7528\u6570\u636e\u8bed\u8a00\uff0c\u4eba\u7c7b\u548c\u673a\u5668\u90fd\u80fd\u7406\u89e3\u3002\u5c31\u50cf\u5b87\u822a\u5458\u7684\u56fd\u9645\u8bed\u8a00\u4e00\u6837\uff01</p> <p>\u4e3b\u8981\u7279\u6027\uff1a</p> <ul> <li>\ud83e\udeb6 \u8f7b\u91cf\uff1a\u5373\u4f7f\u5728\u4fe1\u53f7\u5fae\u5f31\u65f6\u4e5f\u80fd\u5feb\u901f\u4f20\u8f93</li> <li>\ud83d\udc40 \u53ef\u8bfb\u6027\u5f3a\uff1a\u7ed3\u6784\u4e00\u76ee\u4e86\u7136</li> <li>\ud83d\udd04 \u901a\u7528\uff1a\u6240\u6709\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301</li> </ul> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a</p> <p>JSON \u5c31\u50cf\u4e00\u4efd\u5305\u542b\u661f\u4f53\u6570\u636e\u7684\u6570\u5b57\u7535\u62a5\u3002\u5b83\u4f7f\u7528\u6e05\u6670\u7684 <code>{\u952e: \u503c}</code> \u7ed3\u6784\uff0c\u800c\u975e\u6469\u5c14\u65af\u7535\u7801\u3002</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/3/#2-json","title":"2. JSON \u6d88\u606f\u7684\u5256\u6790","text":"<p>JSON \u7531\u4e24\u79cd\u7c7b\u578b\u7684\u7ed3\u6784\u7ec4\u6210\uff1a</p> <p>A. \u5bf9\u8c61\uff08\u5b87\u5b99\u98de\u8239\uff09 <pre><code>{\n  \"name\": \"Voyager-1\",\n  \"launch_year\": 1977,\n  \"is_active\": true,\n  \"position\": [-19.1, 42.7, 0.3]\n}\n</code></pre></p> <p>B. \u6570\u7ec4\uff08\u661f\u56e2\uff09 <pre><code>[\n  {\"name\": \"Sirius\", \"magnitude\": -1.46},\n  {\"name\": \"Canopus\", \"magnitude\": -0.74},\n  {\"name\": \"Arcturus\", \"magnitude\": -0.05}\n]\n</code></pre></p> <p>\u26a1 \u8bed\u6cd5\u89c4\u5219\uff1a</p> <ul> <li>\u952e\u4f7f\u7528\u53cc\u5f15\u53f7 <code>\" \"</code></li> <li>\u503c\uff1a\u5b57\u7b26\u4e32\u3001\u6570\u5b57\u3001\u5e03\u5c14\u503c (<code>true</code>/<code>false</code>)\u3001<code>null</code></li> <li>\u6570\u636e\u7528\u9017\u53f7\u5206\u9694</li> <li>\u5bf9\u8c61\u4f7f\u7528\u82b1\u62ec\u53f7 <code>{}</code>, \u6570\u7ec4\u4f7f\u7528\u65b9\u62ec\u53f7 <code>[]</code></li> </ul>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/3/#3-json-xml","title":"3. JSON \u5bf9\u6bd4 XML\uff1a\u683c\u5f0f\u4e4b\u6218","text":"\u53c2\u6570 JSON (\u73b0\u4ee3\u536b\u661f) XML (\u8001\u5f0f\u671b\u8fdc\u955c) \u53ef\u8bfb\u6027 \u9ad8\uff08\u76f4\u63a5\u8bbf\u95ee\u5b57\u6bb5\uff09 \u4f4e\uff08\u6807\u7b7e <code>&lt;planet&gt;...&lt;/planet&gt;</code>) \u5927\u5c0f \u7d27\u51d1 \u81c3\u80bf\uff08\u4f53\u79ef\u589e\u52a0 +30%\uff09 \u5904\u7406 \u5feb\u901f \u7f13\u6162 \u793a\u4f8b <code>{\"planet\": \"Mars\"}</code> <code>&lt;planet&gt;Mars&lt;/planet&gt;</code> <p>\ud83d\udd2d \u4e3a\u4ec0\u4e48 JSON \u5728\u5b87\u5b99\u4e2d\u80dc\u51fa\uff1f</p> <p>NASA\u3001SpaceX \u548c ESA \u7684 API \u90fd\u4f7f\u7528 JSON\u2014\u2014\u5b83\u975e\u5e38\u9002\u5408\u6570\u636e\u4f20\u8f93\uff01</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/3/#4-json","title":"4. \u4ee3\u7801\u4e2d\u7684 JSON \u64cd\u4f5c","text":"<p>Python \u793a\u4f8b\uff08\u83b7\u53d6\u6708\u7403\u6570\u636e\uff09\uff1a <pre><code>import requests\nimport json\n\n# \u4f7f\u7528\u771f\u5b9e API\uff0c\u4f8b\u5982\u83b7\u53d6\u592a\u9633\u7cfb\u6570\u636e\n# \u6765\u81ea The Solar System OpenData API\ntry:\n    response = requests.get(\"https://api.le-systeme-solaire.net/rest/bodies/terre\")\n    response.raise_for_status() # \u68c0\u67e5 HTTP \u9519\u8bef (4xx, 5xx)\n\n    planet_data = response.json()\n\n    print(f\"\u540d\u79f0: {planet_data['englishName']}\")\n    print(f\"\u536b\u661f: {[moon['moon'] for moon in planet_data['moons']]}\")\n\n    # \u5c06 Python \u5b57\u5178\u8f6c\u6362\u4e3a JSON \u5b57\u7b26\u4e32\u4ee5\u4fdd\u5b58\n    planet_json_str = json.dumps(planet_data, indent=2, ensure_ascii=False) # ensure_ascii=False \u7528\u4e8e\u5904\u7406\u975e ASCII \u5b57\u7b26\uff08\u5982\u897f\u91cc\u5c14\u5b57\u6bcd\uff09\n    print(\"\\n--- \u683c\u5f0f\u5316\u540e\u7684 JSON ---\")\n    print(planet_json_str)\n\nexcept requests.exceptions.RequestException as e:\n    print(f\"\u8bf7\u6c42\u9519\u8bef: {e}\")\n</code></pre></p> <p>JavaScript \u793a\u4f8b\uff08\u5904\u7406\u671b\u8fdc\u955c\u6570\u636e\uff09\uff1a <pre><code>const Data = `{\n  \"id\": \"terre\",\n  \"name\": \"La Terre\",\n  \"englishName\": \"Earth\",\n  \"isPlanet\": true,\n  \"moons\": [\n    {\n      \"moon\": \"La Lune\",\n      \"rel\": \"https://api.le-systeme-solaire.net/rest/bodies/lune\"\n    }\n  ],\n  \"semimajorAxis\": 149598023,\n  \"perihelion\": 147095000,\n  \"aphelion\": 152100000,\n  \"eccentricity\": 0.0167,\n  \"inclination\": 0,\n  \"mass\": {\n    \"massValue\": 5.97237,\n    \"massExponent\": 24\n  },\n  \"vol\": {\n    \"volValue\": 1.08321,\n    \"volExponent\": 12\n  },\n  \"density\": 5.5136,\n  \"gravity\": 9.8,\n  \"escape\": 11190,\n  \"meanRadius\": 6371.0084,\n  \"equaRadius\": 6378.1366,\n  \"polarRadius\": 6356.8,\n  \"flattening\": 0.00335,\n  \"dimension\": \"\",\n  \"sideralOrbit\": 365.256,\n  \"sideralRotation\": 23.9345,\n  \"aroundPlanet\": null,\n  \"discoveredBy\": \"\",\n  \"discoveryDate\": \"\",\n  \"alternativeName\": \"\",\n  \"axialTilt\": 23.4393,\n  \"avgTemp\": 288,\n  \"mainAnomaly\": 358.617,\n  \"argPeriapsis\": 85.901,\n  \"longAscNode\": 18.272,\n  \"bodyType\": \"Planet\"\n}`;\n\nconst dataObj = JSON.parse(Data);\nconsole.log(dataObj.target);\n</code></pre></p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/3/#5-json","title":"5. JSON \u9a8c\u8bc1\uff1a\u201c\u4fe1\u53f7\u201d\u68c0\u67e5","text":"<p>\u5728\u4f7f\u7528\u6570\u636e\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd JSON\uff1a</p> <ol> <li> <p>\u7ed3\u6784\u6b63\u786e\uff08\u68c0\u67e5\u62ec\u53f7\uff01\uff09</p> </li> <li> <p>\u5305\u542b\u9884\u671f\u7684\u5b57\u6bb5</p> </li> <li> <p>\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef</p> </li> </ol> <p>\u5de5\u5177\uff1a - JSONLint\uff08JSON \u7684\u201c\u592a\u7a7a\u5783\u573e\u63a2\u6d4b\u5668\u201d\uff09 - \u5185\u7f6e\u8bed\u8a00\u89e3\u6790\u5668\uff08\u5728\u683c\u5f0f\u4e0d\u6b63\u786e\u65f6\u4f1a\u629b\u51fa\u9519\u8bef\uff09</p> <p>\u26a0\ufe0f \u9519\u8bef\u793a\u4f8b\uff1a</p> <p><code>{\"planet\": \"Mars\"</code> \u2192 \u7f3a\u5c11\u95ed\u5408\u62ec\u53f7\uff01</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u59cb\u7ec8\u5728 Python \u4e2d\u4f7f\u7528 <code>json.loads()</code> \u6216\u5728 JS \u4e2d\u4f7f\u7528 <code>JSON.parse()</code> \u8fdb\u884c\u68c0\u67e5\u3002</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/3/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. JSON \u7684\u5168\u79f0\u662f...</p>  a) Java Space Object Notation  b) JavaScript Object Notation  c) Jupiter's Satellite Orbital Network <p>2. JSON \u4e2d\u5982\u4f55\u8868\u793a\u4e00\u4e2a\u5bf9\u8c61\uff1a</p>  a) ()  b) {}  c) [] <p>3. \u4ee5\u4e0b\u54ea\u9879\u4e0d\u662f JSON \u4e2d\u7684\u6709\u6548\u503c\uff1f</p>  a) \"name\": \"Saturn\"  b) \"radius_km\": 58232  c) \"has_rings\": undefined <p>4. \u4e3a\u4ec0\u4e48 JSON \u6bd4 XML \u66f4\u9002\u5408\u5b87\u5b99\u76f8\u5173\u7684 API\uff1f</p>  a) \u66f4\u5c0f\u7684\u4f53\u79ef\u548c\u66f4\u5feb\u7684\u901f\u5ea6  b) \u652f\u6301\u5916\u661f\u7f16\u7801  c) \u80fd\u591f\u5b58\u50a8\u89c6\u9891 <p>5. \u5982\u4f55\u5c06 JSON \u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a Python \u5bf9\u8c61\uff1f</p>  a) json.parse()  b) json.to_object()  c) json.loads() \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>JSON \u662f API \u4e16\u754c\u7684\u201c\u5b87\u5b99\u4e16\u754c\u8bed\u201d\u3002\u4e86\u89e3\u5176\u7ed3\u6784\u540e\uff0c\u60a8\u5c06\u80fd\u591f\uff1a</p> <ul> <li> <p>\ud83d\udce1 \u63a5\u6536\u6765\u81ea\u671b\u8fdc\u955c\u548c\u63a2\u6d4b\u5668\u7684\u6570\u636e</p> </li> <li> <p>\ud83d\udd27 \u5728\u7cfb\u7edf\u4e4b\u95f4\u8f6c\u6362\u4fe1\u606f</p> </li> <li> <p>\ud83d\udef0\ufe0f \u5c06\u79d1\u5b66\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d</p> </li> </ul> <p>\u51c6\u5907\u5bf9\u63a5\uff01 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60 REST API \u67b6\u6784\u2014\u2014\u60a8\u670d\u52a1\u5668\u7684\u201c\u7a7a\u95f4\u7ad9\u201d\u7ba1\u7406\u7cfb\u7edf\u3002</p> <p>\ud83d\udccc \u5b9e\u8df5\uff1a \u8bbf\u95ee NASA Open APIs\uff0c\u627e\u5230\u5c0f\u884c\u661f API (Asteroids NeoWs) \u5e76\u7814\u7a76\u54cd\u5e94\u4e2d\u7684 JSON \u7ed3\u6784\uff01</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/4/","title":"\u7b2c 1.4 \u7ae0\uff1aREST API \u7ed3\u6784","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 45 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/4/#1-rest-api","title":"1. REST API\uff1a\u7a7a\u95f4\u7ad9\u67b6\u6784","text":"<p>\u60f3\u8c61\u4e00\u4e2a\u7a7a\u95f4\u7ad9\uff0c\u6bcf\u4e2a\u6a21\u5757\u90fd\u5177\u6709\uff1a</p> <ul> <li> <p>\u6807\u51c6\u5bf9\u63a5\u7aef\u53e3\uff08\u7edf\u4e00\u63a5\u53e3\uff09</p> </li> <li> <p>\u660e\u786e\u7684\u4e13\u4e1a\u5206\u5de5\uff08\u5c45\u4f4f\u8231\u3001\u5b9e\u9a8c\u5ba4\u3001\u5b58\u50a8\u8231\uff09</p> </li> <li> <p>\u5750\u6807\u7cfb\u7edf\uff08\u7cbe\u786e\u4f4d\u7f6e\uff09</p> </li> </ul> <p>REST (Representational State Transfer) API \u9075\u5faa\u76f8\u540c\u7684\u539f\u5219\uff1a</p> <ul> <li> <p>\u6240\u6709\u8d44\u6e90\u7edf\u4e00\u63a5\u53e3</p> </li> <li> <p>\u7ec4\u4ef6\u660e\u786e\u5206\u79bb</p> </li> <li> <p>\u901a\u8fc7 URI \u8fdb\u884c\u5bfb\u5740\uff08\u7a7a\u95f4\u5750\u6807\uff09</p> </li> </ul> <p>\ud83d\udca1 \u6838\u5fc3\u601d\u60f3\uff1a</p> <p>\u6bcf\u4e2a\u8d44\u6e90\uff08\u884c\u661f\u3001\u706b\u7bad\u3001\u5b87\u822a\u5458\uff09\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 URL \u5730\u5740\uff0c\u5e76\u901a\u8fc7 HTTP \u65b9\u6cd5\u8fdb\u884c\u4ea4\u4e92\u3002</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/4/#2-rest-6","title":"2. \u5b87\u5b99\u7c7b\u6bd4\u4e2d\u7684 REST 6 \u5927\u539f\u5219","text":"REST \u539f\u5219 \u56fd\u9645\u7a7a\u95f4\u7ad9 (ISS) \u7c7b\u6bd4 \u5bf9 API \u7684\u610f\u4e49 \u7edf\u4e00\u63a5\u53e3 \u6807\u51c6\u5bf9\u63a5\u7aef\u53e3 \u6240\u6709\u8bf7\u6c42\u89c4\u5219\u4e00\u81f4 \u65e0\u72b6\u6001 (Stateless) \u6bcf\u6761\u6307\u4ee4\u81ea\u7ed9\u81ea\u8db3 \u670d\u52a1\u5668\u4e0d\u5b58\u50a8\u5ba2\u6237\u7aef\u72b6\u6001 \u7f13\u5b58 (Caching) \u672c\u5730\u8865\u7ed9\u54c1\u50a8\u5907 \u4fdd\u5b58\u9891\u7e41\u54cd\u5e94 \u5ba2\u6237\u7aef-\u670d\u52a1\u5668 \u660e\u786e\u5206\u79bb\uff1a\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3 \u2194 \u7a7a\u95f4\u7ad9 \u7ec4\u4ef6\u72ec\u7acb\u53d1\u5c55 \u5206\u5c42\u7cfb\u7edf \u4e2d\u7ee7\u536b\u661f \u4ee3\u7406\u3001\u8d1f\u8f7d\u5747\u8861\u5668 \u6309\u9700\u4ee3\u7801 (Code on Demand) \u4e3a\u5b9e\u9a8c\u4e0b\u8f7d\u8f6f\u4ef6 (\u53ef\u9009) \u4f20\u8f93\u811a\u672c"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/4/#3-uri","title":"3. \u8d44\u6e90\u4e0e URI\uff1a\u5b87\u5b99\u5750\u6807","text":"<p>API \u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u662f\u4e00\u4e2a\u5177\u6709\u552f\u4e00\u5730\u5740\u7684\u8d44\u6e90\uff1a <pre><code>https://api.spacexdata.com/v4/    \u2190 \u57fa\u7840 URL\n          rockets/            \u2190 \u706b\u7bad\u96c6\u5408\n          rockets/5e9d0d95eda69973a809d1ec \u2190 \u7279\u5b9a\u706b\u7bad (\u6309 ID)\n</code></pre></p> <p>\u5b87\u5b99\u8d44\u6e90\u793a\u4f8b\uff1a</p> <ul> <li><code>GET /stars</code> \u2192 \u661f\u661f\u5217\u8868</li> <li><code>GET /stars/sirius</code> \u2192 \u5929\u72fc\u661f\u6570\u636e</li> <li><code>POST /satellites</code> \u2192 \u53d1\u5c04\u65b0\u536b\u661f</li> <li><code>PUT /missions/artemis</code> \u2192 \u66f4\u65b0\u4efb\u52a1</li> </ul> <p>URI \u5c42\u7ea7\u7ed3\u6784\u56fe\uff1a <pre><code>[\u57fa\u7840 URL]\n\u251c\u2500\u2500 /planets          \u2192 \u884c\u661f\u96c6\u5408\n\u2502   \u251c\u2500\u2500 /mars         \u2192 \u201c\u706b\u661f\u201d\u8d44\u6e90\n\u2502   \u2514\u2500\u2500 /venus        \u2192 \u201c\u91d1\u661f\u201d\u8d44\u6e90\n\u2514\u2500\u2500 /launches         \u2192 \u53d1\u5c04\u96c6\u5408\n    \u251c\u2500\u2500 /upcoming     \u2192 \u5b50\u96c6\u5408\n    \u2514\u2500\u2500 /latest       \u2192 \u8d44\u6e90\n</code></pre></p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/4/#4-http-crud","title":"4. \u901a\u8fc7 HTTP \u65b9\u6cd5\u8fdb\u884c CRUD \u64cd\u4f5c","text":"\u64cd\u4f5c HTTP \u65b9\u6cd5 \u793a\u4f8b (\u7a7a\u95f4\u7ad9) \u670d\u52a1\u5668\u54cd\u5e94 \u521b\u5efa (Create) <code>POST</code> \u53d1\u9001\u65b0\u6a21\u5757 <code>201 Created</code> \u8bfb\u53d6 (Read) <code>GET</code> \u8bf7\u6c42\u6a21\u5757\u6570\u636e <code>200 OK</code> \u66f4\u65b0 (Update) <code>PUT</code> \u91cd\u65b0\u914d\u7f6e\u6a21\u5757 <code>200 OK</code> \u5220\u9664 (Delete) <code>DELETE</code> \u8131\u79bb\u65e7\u6a21\u5757 <code>204 No Content</code> <p>\u26a1 \u4ee3\u7801\u793a\u4f8b (\u6dfb\u52a0\u536b\u661f)\uff1a <pre><code>import requests\n\n# \u4f7f\u7528\u6a21\u62df\u8d44\u6e90\u521b\u5efa\u7684\u6d4b\u8bd5\u670d\u52a1\nnew_post = {\n    \"title\": \"New Telescope Launch\", # \u65b0\u671b\u8fdc\u955c\u53d1\u5c04\n    \"body\": \"Hubble-2 is ready for deployment.\", # \u8d6b\u4f2f2\u53f7\u5df2\u51c6\u5907\u597d\u90e8\u7f72\u3002\n    \"userId\": 1\n}\n\n# \u7528\u4e8e\u6f14\u793a\u8bf7\u6c42\u5934\u7684\u5047\u8bbe\u6027 API \u5bc6\u94a5\nheaders = {\n    \"Authorization\": \"Bearer YOUR_DEMO_KEY\",\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n}\n\nresponse = requests.post(\n    \"https://jsonplaceholder.typicode.com/posts\",\n    json=new_post,\n    headers=headers\n)\n\nif response.status_code == 201:\n    print(\"\u2705 \u5173\u4e8e\u65b0\u536b\u661f\u7684\u5e16\u5b50\u5df2\u6210\u529f\u521b\u5efa\uff01\")\n    print(\"\u670d\u52a1\u5668\u54cd\u5e94\uff1a\")\n    print(response.json())\nelse:\n    print(f\"\u274c \u9519\u8bef\uff01\u72b6\u6001\u7801: {response.status_code}\")\n</code></pre></p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/4/#5-api","title":"5. API \u7248\u672c\u63a7\u5236\uff1a\u7a7a\u95f4\u7ad9\u7684\u6f14\u53d8","text":"<p>\u5c31\u50cf\u56fd\u9645\u7a7a\u95f4\u7ad9\u66f4\u65b0\u6a21\u5757\u4e00\u6837\uff08\u201c\u66d9\u5149\u201d\u53f7\u6a21\u5757 \u2192 \u201c\u79d1\u5b66\u201d\u53f7\u6a21\u5757\uff09\uff0cAPI \u4e5f\u4f1a\u53d8\u66f4\u7248\u672c\uff1a</p> <ul> <li>\u5728 URL \u4e2d\uff1a<code>https://api.spacex.com/v4/rockets</code></li> <li>\u5728\u8bf7\u6c42\u5934\u4e2d\uff1a<code>Accept: application/vnd.spacex-v5+json</code></li> </ul> <p>\u4e3a\u4f55\u91cd\u8981\uff1a</p> <ul> <li>v1\uff1a\u57fa\u672c\u529f\u80fd</li> <li>v2\uff1a\u6dfb\u52a0\u4e86\u65b0\u5b57\u6bb5</li> <li>v3\uff1a\u54cd\u5e94\u7ed3\u6784\u53d1\u751f\u53d8\u5316</li> </ul> <p>\u26a0\ufe0f \u63d0\u793a\uff1a \u59cb\u7ec8\u5728\u8bf7\u6c42\u4e2d\u6307\u5b9a\u7248\u672c\uff0c\u5426\u5219\u201c\u5bf9\u63a5\u201d\u53ef\u80fd\u4f1a\u5931\u8d25\uff01</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/4/#6-hateoas","title":"6. \u8d85\u5a92\u4f53 (HATEOAS)\uff1a\u592a\u7a7a\u5bfc\u822a","text":"<p>API \u54cd\u5e94\u5305\u542b\u6307\u5411\u76f8\u5173\u8d44\u6e90\u7684\u94fe\u63a5 \u2014 \u5c31\u50cf\u7a7a\u95f4\u7ad9\u5730\u56fe\u4e00\u6837\uff1a <pre><code>{\n  \"id\": \"iss\",\n  \"name\": \"\u56fd\u9645\u7a7a\u95f4\u7ad9\",\n  \"crew\": 7,\n  \"_links\": {\n    \"self\": { \"href\": \"/stations/iss\" },\n    \"modules\": { \"href\": \"/stations/iss/modules\" },\n    \"schedule\": { \"href\": \"/stations/iss/schedule\" }\n  }\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/4/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u7684\u6d4b\u9a8c","text":"<p>1. REST \u7684\u5168\u79f0\u662f\uff1a</p>  a) Rocket Engine System Transfer  b) Representational State Transfer  c) Remote Space Technology <p>2. \u201c\u65e0\u72b6\u6001\u201d\u539f\u5219\u610f\u5473\u7740\uff1a</p>  a) \u670d\u52a1\u5668\u5b58\u50a8\u8bf7\u6c42\u5386\u53f2  b) \u6bcf\u4e2a\u8bf7\u6c42\u90fd\u662f\u81ea\u7ed9\u81ea\u8db3\u7684  c) \u6570\u636e\u4ec5\u901a\u8fc7 SSL \u4f20\u8f93 <p>3. \u83b7\u53d6 Falcon Heavy \u706b\u7bad\u6570\u636e\u7684 URI\uff1a</p>  a) POST /rockets/falcon-heavy  b) GET /falcon-heavy  c) GET /rockets/falcon-heavy <p>4. \u7528\u4e8e\u5b8c\u5168\u66f4\u65b0\u8d44\u6e90\u7684\u65b9\u6cd5\uff1a</p>  a) PATCH  b) POST  c) PUT <p>5. API \u4e2d\u7684 HATEOAS \u662f\u6307\uff1a</p>  a) \u6307\u5411\u76f8\u5173\u8d44\u6e90\u7684\u94fe\u63a5\u7cfb\u7edf  b) \u52a0\u5bc6\u534f\u8bae  c) \u67e5\u8be2\u8bed\u8a00 \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>REST API \u662f\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u7f51\u7edc\u670d\u52a1\u201c\u7a7a\u95f4\u7ad9\u67b6\u6784\u201d\u3002\u8bf7\u8bb0\u4f4f\uff1a</p> <ul> <li>\u8d44\u6e90 = \u5bf9\u8c61\uff08\u706b\u7bad\u3001\u884c\u661f\uff09</li> <li>URI = \u5bf9\u8c61\u5750\u6807</li> <li>HTTP \u65b9\u6cd5 = \u63a7\u5236\u547d\u4ee4</li> <li>\u7248\u672c = \u7a7a\u95f4\u7ad9\u73b0\u4ee3\u5316\u5347\u7ea7</li> </ul> <p>\u51c6\u5907\u5c31\u7eea\uff01 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u53d1\u5c04\u4e00\u4e2a\u201c\u6d4b\u8bd5\u63a2\u6d4b\u5668\u201d\u2014\u2014\u5b66\u4e60\u5982\u4f55\u901a\u8fc7 Postman \u6d4b\u8bd5 API\u3002</p> <p>\ud83d\udccc \u5b9e\u8df5\uff1a \u7814\u7a76 SpaceX API \u7684\u7ed3\u6784\uff0c\u5e76\u5c1d\u8bd5\u6267\u884c\uff1a</p> <p><code>GET https://api.spacexdata.com/v4/launches/latest</code> \u2014 \u8bf7\u6ce8\u610f URI \u548c JSON \u7ed3\u6784\uff01</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/5/","title":"\u7b2c1.5\u7ae0\uff1a\u901a\u8fc7Postman\u6d4b\u8bd5API","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 50\u5206\u949f</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/5/#1-api","title":"1. \u4e3a\u4ec0\u4e48\u6d4b\u8bd5API\uff1f\u53d1\u5c04\u524d\u68c0\u67e5","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff1a\u5728\u706b\u7bad\u53d1\u5c04\u524d\uff0c\u5de5\u7a0b\u5e08\u4eec\u4f1a\u8fdb\u884c\u7cfb\u7edf\u6d4b\u8bd5\u542f\u52a8\u3002\u5982\u679c\u8df3\u8fc7\u68c0\u67e5\uff0c\u4efb\u52a1\u53ef\u80fd\u4f1a\u5931\u8d25\uff01</p> <p>API\u6d4b\u8bd5\u662f\u60a8\u7684\u63a7\u5236\u6d4b\u8bd5\uff1a</p> <ul> <li> <p>\u2705 \u68c0\u67e5\u201c\u5bf9\u63a5\u8282\u70b9\u201d\u7684\u529f\u80fd</p> </li> <li> <p>\ud83d\udee1\ufe0f \u5728\u5b9e\u9645\u4f7f\u7528\u524d\u53d1\u73b0\u6f0f\u6d1e</p> </li> <li> <p>\ud83d\udcca \u786e\u4fdd\u6570\u636e\u4f20\u8f93\u65e0\u5931\u771f</p> </li> </ul> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a Postman\u5c31\u50cf\u4e00\u4e2a\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\uff08\u0426\u0423\u041f\uff09\u7684\u6d4b\u8bd5\u63a7\u5236\u53f0\uff0c\u7528\u4e8e\u6a21\u62df\u6240\u6709\u573a\u666f\uff1a\u201c\u5982\u679c\u8bf7\u6c42\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u661f\u7403\u6570\u636e\u4f1a\u600e\u6837\uff1f\u670d\u52a1\u5668\u80fd\u627f\u53d71000\u6b21\u8bf7\u6c42/\u79d2\u5417\uff1f\u201d</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/5/#2-postmanapi","title":"2. Postman\uff1a\u201cAPI\u98de\u884c\u63a7\u5236\u4e2d\u5fc3\u201d","text":"<p>\u529f\u80fd\uff1a</p> <ul> <li> <p>\ud83d\udce1 \u53d1\u9001\u4efb\u4f55HTTP\u8bf7\u6c42\uff08GET, POST, PUT, DELETE\uff09</p> </li> <li> <p>\ud83d\udd0d \u5206\u6790\u54cd\u5e94\uff08\u72b6\u6001\u7801\u3001\u8bf7\u6c42\u5934\u3001JSON\u6b63\u6587\uff09</p> </li> <li> <p>\ud83e\uddea \u7f16\u5199\u81ea\u52a8\u5316\u6d4b\u8bd5\uff08JavaScript\uff09</p> </li> <li> <p>\ud83c\udf10 \u4f7f\u7528\u73af\u5883\u53d8\u91cf\uff08\u6d4b\u8bd5\u73af\u5883 vs \u751f\u4ea7\u73af\u5883\uff09</p> </li> </ul> <p>\ud83d\udc49 \u4e0b\u8f7dPostman</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/5/#3-api","title":"3. \u9996\u6b21\u542f\u52a8\uff1a\u6d4b\u8bd5\u884c\u661fAPI","text":"<p>\u6b65\u9aa41\uff1a\u521b\u5efa\u8bf7\u6c42</p> <ol> <li> <p>\u6253\u5f00Postman \u2192 New \u2192 Request</p> </li> <li> <p>\u8f93\u5165URL\uff1a<code>https://api.spacexdata.com/v4/rockets</code></p> </li> <li> <p>\u9009\u62e9\u65b9\u6cd5\uff1aGET</p> </li> </ol> <p>\u6b65\u9aa42\uff1a\u53d1\u9001\u201c\u4fe1\u53f7\u201d <pre><code>[\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3] -- GET /planets --&gt; [SpaceX\u670d\u52a1\u5668]\n</code></pre></p> <p>\u6b65\u9aa43\uff1a\u5206\u6790\u9065\u6d4b\u6570\u636e\uff1a - \u72b6\u6001\uff1a<code>200 OK</code> - \u54cd\u5e94\u6b63\u6587\uff08JSON\uff09\uff1a\u5305\u542b\u53c2\u6570\u7684\u706b\u7bad\u5217\u8868 <pre><code>[\n  {\n    \"name\": \"Falcon 1\",\n    \"type\": \"rocket\",\n    \"active\": false,\n    \"stages\": 2,\n    \"id\": \"5e9d0d95eda69955f709d1eb\"\n  },\n  {\n    \"name\": \"Falcon 9\",\n    \"type\": \"rocket\",\n    \"active\": true,\n    \"id\": \"5e9d0d95eda69973a809d1ec\"\n  }\n]\n</code></pre></p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/5/#4-postman","title":"4. \u7ed3\u6784\u56fe\uff1aPostman\u7ec4\u4ef6","text":"<pre><code>[\u5de5\u4f5c\u533a]\n\u251c\u2500\u2500 \u201cParams\u201d\u6807\u7b7e\u9875\uff08\u67e5\u8be2\u53c2\u6570\uff09\n\u251c\u2500\u2500 \u201cHeaders\u201d\u6807\u7b7e\u9875\uff08\u8bf7\u6c42\u5934\uff09\n\u251c\u2500\u2500 \u201cBody\u201d\u6807\u7b7e\u9875\uff08POST/PUT\u8bf7\u6c42\u4f53\uff09\n\u251c\u2500\u2500 \u201cTests\u201d\u6807\u7b7e\u9875\uff08\u7528\u4e8e\u68c0\u67e5\u7684\u811a\u672c\uff09\n\u2514\u2500\u2500 \u54cd\u5e94\u9762\u677f\uff08\u72b6\u6001\u3001\u65f6\u95f4\u3001\u5927\u5c0f\u3001\u6b63\u6587\uff09\n</code></pre>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/5/#5","title":"5. \u521b\u5efa\u590d\u6742\u573a\u666f\uff1a\u542f\u52a8\u4efb\u52a1","text":"<p>\u6d4b\u8bd5\uff1a\u5c06\u65b0\u884c\u661f\u6dfb\u52a0\u5230\u76ee\u5f55</p> <ol> <li> <p>\u65b9\u6cd5\uff1aPOST</p> </li> <li> <p>URL\uff1a<code>https://jsonplaceholder.typicode.com/posts</code> (\u793a\u4f8b)</p> </li> <li> <p>\u5728Headers\u4e2d\uff1a    <pre><code> { \"Content-Type\": \"application/json\" }\n</code></pre></p> </li> <li>\u5728Body\u4e2d (raw \u2192 JSON)\uff1a    <pre><code>{\n \"title\": \"New Exoplanet Found\",\n \"body\": \"Proxima Centauri b shows signs of a stable atmosphere.\",\n \"userId\": 1\n }\n</code></pre></li> </ol> <p>\u5728Tests\u4e2d\u8fdb\u884c\u81ea\u52a8\u5316\u68c0\u67e5\uff1a <pre><code>// \u68c0\u67e5\u72b6\u6001\npm.test(\"Post created successfully\", () =&gt; {\n    pm.response.to.have.status(201);\n});\n\n// \u68c0\u67e5\u54cd\u5e94\u7684\u7ed3\u6784\u548c\u6570\u636e\npm.test(\"Response contains the new post data\", () =&gt; {\n    const response = pm.response.json();\n    pm.expect(response).to.have.property(\"id\"); // \u68c0\u67e5\u670d\u52a1\u5668\u662f\u5426\u5206\u914d\u4e86ID\n    pm.expect(response.title).to.eql(\"New Exoplanet Found\");\n});\n</code></pre></p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/5/#6-vs","title":"6. \u73af\u5883\u53d8\u91cf\uff1a\u5730\u7403 vs \u706b\u661f","text":"<p>\u5982\u4f55\u5728\u4e0d\u540c\u670d\u52a1\u5668\uff08\u6d4b\u8bd5/\u751f\u4ea7\uff09\u4e0a\u8fdb\u884c\u6d4b\u8bd5\uff1f</p> <ol> <li>\u521b\u5efa\u73af\u5883\uff1a</li> <li><code>Local</code> \u2192 <code>http://localhost:3000</code></li> <li> <p><code>Production</code> \u2192 <code>https://api.nasa.gov</code></p> </li> <li> <p>\u5728\u8bf7\u6c42\u4e2d\u4f7f\u7528\u53d8\u91cf\uff1a    <pre><code>{{base_url}}/planets  # \u66ff\u6362\u4e3a\u5f53\u524dURL\n</code></pre></p> </li> </ol> <p>\u26a0\ufe0f \u91cd\u8981\uff01 \u5207\u52ff\u5728\u751f\u4ea7\u670d\u52a1\u5668\u4e0a\u6d4b\u8bd5<code>DELETE</code>\u64cd\u4f5c\uff01</p>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/5/#7","title":"7. \u96c6\u5408\uff1a\u5b87\u5b99\u4efb\u52a1\u5e93","text":"<p>\u5206\u7ec4\u8bf7\u6c42\uff1a <pre><code>    \ud83d\udcc2 \u201cNASA\u201d\u96c6\u5408\n    \u251c\u2500\u2500 GET \u884c\u661f\n    \u251c\u2500\u2500 POST \u65b0\u884c\u661f\n    \u2514\u2500\u2500 DELETE \u884c\u661f\uff08\u6d4b\u8bd5\u6a21\u5f0f\uff09\n</code></pre> \u4f18\u52bf\uff1a</p> <ul> <li>\ud83d\ude80 \u4e00\u952e\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5</li> <li>\ud83d\udce4 \u5bfc\u51fa/\u5bfc\u5165\u914d\u7f6e</li> <li>\ud83d\udc68\u200d\ud83d\ude80 \u56e2\u961f\u534f\u4f5c</li> </ul>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/5/#8","title":"8. \u81ea\u52a8\u5316\uff1a\u5b9a\u671f\u536b\u661f\u68c0\u67e5","text":"<p>\u901a\u8fc7Postman\u914d\u7f6eAPI\u76d1\u63a7\uff1a</p> <ol> <li> <p>Schedule \u2192 \u6bcf2\u5c0f\u65f6</p> </li> <li> <p>\u6d4b\u8bd5\uff1a    <pre><code>pm.test(\"\u536b\u661f\u5728\u7ebf\", () =&gt; {\n  pm.response.to.have.status(200);\n  pm.expect(pm.response.json().signal).above(50); // \u4fe1\u53f7 &gt;50%\n});\n</code></pre></p> </li> <li> <p>\u53d1\u751f\u6545\u969c\u65f6\u5728Slack/\u7535\u5b50\u90ae\u4ef6\u4e2d\u901a\u77e5</p> </li> </ol>"},{"location":"zh/%E7%AC%AC1%E7%AB%A0%20-%20API%E5%9F%BA%E7%A1%80/5/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. Postman\u7528\u4e8e\uff1a</p>  a) \u53d1\u9001\u90ae\u4ef6  b) \u6d4b\u8bd5API  c) \u521b\u5efa\u6570\u636e\u5e93 <p>2. \u6210\u529f\u521b\u5efa\u5bf9\u8c61\u65f6\u5e94\u9884\u671f\u54ea\u4e2a\u72b6\u6001\uff1f</p>  a) 200 OK  b) 201 Created  c) 404 Not Found <p>3. \u5728Postman\u4e2d\u54ea\u91cc\u7f16\u5199\u81ea\u52a8\u5316\u6d4b\u8bd5\uff1f</p>  a) \u201cBody\u201d\u6807\u7b7e\u9875  b) \u201cTests\u201d\u6807\u7b7e\u9875  c) \u201cCookies\u201d\u6807\u7b7e\u9875 <p>4. \u73af\u5883\u53d8\u91cf\u7684\u7528\u9014\u662f\uff1a</p>  a) \u5728\u6d4b\u8bd5\u548c\u751f\u4ea7\u670d\u52a1\u5668\u4e4b\u95f4\u5207\u6362  b) \u4ee5\u660e\u6587\u5f62\u5f0f\u5b58\u50a8\u5bc6\u7801  c) \u751f\u6210\u968f\u673a\u6570\u636e <p>5. \u5b9a\u671f\u76d1\u63a7\u68c0\u67e5\u4ec0\u4e48\uff1f</p>  a) API\u7684\u7a33\u5b9a\u6027  b) \u4e92\u8054\u7f51\u901f\u5ea6  c) \u6587\u6863\u7684\u53ca\u65f6\u6027 \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a Postman\u662f\u60a8\u8fdb\u884cAPI\u6d4b\u8bd5\u7684\u901a\u7528\u201c\u63a7\u5236\u53f0\u201d\u3002\u6709\u4e86\u5b83\uff0c\u60a8\u53ef\u4ee5\uff1a - \u5728\u542f\u52a8\u524d\u68c0\u67e5\u201c\u673a\u8f7d\u7cfb\u7edf\u201d\u7684\u8fd0\u884c\u60c5\u51b5 - \u521b\u5efa\u6d4b\u8bd5\u573a\u666f\u5e93 - \u81ea\u52a8\u5316\u5b87\u5b99\u670d\u52a1\u7684\u76d1\u63a7</p> <p>\ud83d\udccc \u5b9e\u8df5\u4efb\u52a1\uff1a</p> <ol> <li>\u5b89\u88c5Postman</li> <li>\u521b\u5efa\u4e00\u4e2a\u5230SpaceX API\u7684\u8bf7\u6c42\uff1a<code>GET https://api.spacexdata.com/v4/launches/latest</code></li> <li>\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u68c0\u67e5\uff1a</li> <li>\u54cd\u5e94\u72b6\u6001\u4e3a<code>200</code></li> <li><code>name</code>\u5b57\u6bb5\u4e2d\u5305\u542b\u5355\u8bcd\u201cFalcon\u201d</li> <li>\u54cd\u5e94\u65f6\u95f4 &lt; 500\u6beb\u79d2</li> </ol> <p>\u606d\u559c\u60a8\u5b8c\u6210\u7b2c1\u7ae0\uff01</p> <p>\u60a8\u5df2\u7ecf\u638c\u63e1\u4e86API\u7684\u57fa\u672c\u64cd\u4f5c\u3002\u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u81ea\u5df1\u7684\u201c\u5b87\u5b99\u98de\u8239\u201d\u2014\u2014\u4e00\u4e2a\u4f7f\u7528\u5b87\u5b99API\u7684Web\u5e94\u7528\u7a0b\u5e8f\uff01</p> <p>\ud83c\udf0c \u989d\u5916\u8d44\u6e90\uff1a</p> <ul> <li>SpaceX API Documentation</li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/","title":"\u7b2c 2.1 \u7ae0\uff1a\u51c6\u5907 Laravel \u73af\u5883","text":""},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/#1-2","title":"\u5b66\u4e60\u65f6\u95f4\uff1a 1-2 \u5c0f\u65f6","text":""},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/#1","title":"1. \u4e3a\u4ec0\u4e48\u9700\u8981\u672c\u5730\u73af\u5883\uff1f","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u60a8\u6b63\u5728\u5efa\u9020\u4e00\u4e2a\u5b87\u5b99\u63a2\u6d4b\u5668\u3002\u5728\u5c06\u5176\u53d1\u5c04\u5230\u592a\u7a7a\u4e4b\u524d\uff0c\u60a8\u4f1a\u5728\u5730\u7403\u4e0a\u6d4b\u8bd5\u6240\u6709\u7cfb\u7edf\u3002\u672c\u5730\u73af\u5883\u5c31\u662f\u60a8\u7684\u4ee3\u7801\u7684\u201c\u63a7\u5236\u5b9e\u9a8c\u5ba4\u201d\uff1a</p> <ul> <li>\u5b89\u5168\u7684\u5b9e\u9a8c\uff0c\u4e0d\u5f71\u54cd\u751f\u4ea7\u670d\u52a1\u5668</li> <li>\u5feb\u901f\u90e8\u7f72\u4f9d\u8d56\u9879</li> <li>\u8f7b\u677e\u5207\u6362\u8f6f\u4ef6\u7248\u672c</li> </ul> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a Herd = \u79fb\u52a8\u53d1\u5c04\u590d\u5408\u4f53 Docker = \u7a7a\u95f4\u7ad9\u6a21\u62df\u5668 XAMPP = \u56fa\u5b9a\u8bd5\u9a8c\u53f0</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/#2-herd","title":"2. \u5b89\u88c5 Herd","text":"<p>Herd \u2014 \u73b0\u4ee3\u5316\u7684 PHP \u73af\u5883\u7ba1\u7406\u5de5\u5177\uff08\u7c7b\u4f3c\u4e8e Laravel Valet\uff09\u3002</p> <p>\u5b89\u88c5\u6b65\u9aa4\uff1a</p> <ol> <li>\u4e0b\u8f7d\u5b89\u88c5\u7a0b\u5e8f\uff1aherd.laravel.com</li> <li>\u8fd0\u884c <code>Herd Installer.exe</code> \u2192 Next \u2192 Install</li> <li>\u5b89\u88c5\u540e\uff1a<ul> <li>\u4ece\u201c\u5f00\u59cb\u201d\u83dc\u5355\u6253\u5f00 Herd\u3002\u5e94\u7528\u7a0b\u5e8f\u56fe\u6807\u5c06\u51fa\u73b0\u5728\u7cfb\u7edf\u6258\u76d8\u4e2d\uff08\u65f6\u949f\u65c1\u8fb9\uff09\u3002</li> <li>\u5355\u51fb Herd \u56fe\u6807\uff1a\u786e\u4fdd Nginx \u548c\u6240\u9700\u7684 PHP \u7248\u672c\uff08\u4f8b\u5982 8.3\uff09\u6b63\u5728\u8fd0\u884c\uff08\u7528\u7eff\u70b9\u6807\u8bb0\uff09\u3002</li> <li>\u8f6c\u5230 Herd Paths \u5e76\u6dfb\u52a0\u5c06\u5b58\u50a8\u60a8\u9879\u76ee\u7684\u6587\u4ef6\u5939\uff08\u4f8b\u5982 C:\\Users\\YourUser\\Code\uff09\u3002Herd \u5c06\u81ea\u52a8\u4e3a\u8be5\u6587\u4ef6\u5939\u4e2d\u7684\u6bcf\u4e2a\u5b50\u76ee\u5f55\u521b\u5efa\u6f02\u4eae\u7684\u57df\u540d\uff0c\u4f8b\u5982 folder-name.test\u3002</li> </ul> </li> </ol> <p>\u26a0\ufe0f \u91cd\u8981\u63d0\u793a\uff01 \u5b89\u88c5\u65f6\uff1a - \u5141\u8bb8\u7f51\u7edc\u8bbf\u95ee\uff08\u5982\u679c\u9632\u706b\u5899\u8bf7\u6c42\uff09 - \u68c0\u67e5 PATH \u4e2d\u7684\u8def\u5f84\uff1a<code>C:\\Program Files\\Herd\\bin</code></p> <p>\u68c0\u67e5\u5de5\u4f5c\uff1a</p> <ol> <li>\u5355\u51fb\u7cfb\u7edf\u6258\u76d8\u4e2d\u7684 Herd \u56fe\u6807\u3002</li> <li>\u786e\u4fdd Nginx \u548c PHP \u670d\u52a1\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff08\u7eff\u8272\u6307\u793a\u706f\uff09\u3002</li> <li>\u5728\u60a8\u7684\u9879\u76ee\u6587\u4ef6\u5939\u4e2d\uff08\u4f8b\u5982 C:\\Users\\YourUser\\Code\uff09\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a test \u7684\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u5176\u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a index.php \u7684\u6587\u4ef6\uff0c\u5176\u5185\u5bb9\u4e3a <code>&lt;?php phpinfo(); ?&gt;</code>\u3002</li> <li>\u5728 Herd \u4e2d\uff0c\u901a\u8fc7 sites \u9009\u9879\u5361\u6307\u5b9a test \u6587\u4ef6\u5939\u7684\u8def\u5f84\uff0c\u7136\u540e\u5355\u51fb \"Add site\"\u3002</li> <li>\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u5730\u5740 http://test.test\u3002\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u663e\u793a PHP \u4fe1\u606f\u7684\u9875\u9762\u3002</li> </ol>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/#3","title":"3. \u66ff\u4ee3\u65b9\u6cd5\uff08\u7b80\u8981\uff09","text":"\u5de5\u5177 \u9002\u7528\u5bf9\u8c61 \u4f18\u70b9 \u7f3a\u70b9 Laravel Sail (Docker) \u9002\u5408\u6240\u6709\u7ea7\u522b \u5b8c\u5168\u9694\u79bb\uff0c\u73af\u5883\u53ef\u91cd\u590d\u6027\uff0cLaravel \u5b98\u65b9\u652f\u6301 \u9700\u8981\u5b89\u88c5 Docker\uff0c\u6d88\u8017\u66f4\u591a\u8d44\u6e90 XAMPP \u521d\u5b66\u8005 \u4e00\u4f53\u5316\u5b89\u88c5\u7a0b\u5e8f\uff08All-in-One\uff09 \u7b28\u91cd\uff0c\u66f4\u96be\u7ba1\u7406\u8f6f\u4ef6\u7248\u672c\uff0c\u6c61\u67d3\u7cfb\u7edf Laragon Windows \u5f00\u53d1\u8005 \u5feb\u901f\uff0c\u6613\u4e8e\u5207\u6362\u7248\u672c\uff0c\u81ea\u52a8\u914d\u7f6e\u4e3b\u673a \u6dfb\u52a0\u65b0\u9879\u76ee\u65f6\u9700\u8981\u624b\u52a8\u91cd\u542f Web \u670d\u52a1\u5668 <p>Docker \u793a\u4f8b (Laravel Sail): <pre><code># \u5b89\u88c5 Docker \u540e\n./vendor/bin/sail up\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/#4-php-composer","title":"4. \u5b89\u88c5 PHP \u548c Composer","text":"<p>\u5982\u679c\u60a8\u4e0d\u4f7f\u7528 Herd\uff1a</p> <ol> <li>PHP\uff1a<ul> <li>\u4e0b\u8f7d \u9002\u7528\u4e8e Windows \u7684 PHP 8.3</li> <li>\u89e3\u538b\u5230 <code>C:\\PHP</code></li> <li>\u6dfb\u52a0\u5230 PATH\uff1a  <pre><code># \u5efa\u8bae\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u5728 PowerShell \u4e2d\u6267\u884c\n[Environment]::SetEnvironmentVariable(\"Path\", \"$env:Path;C:\\PHP\", \"User\")\n</code></pre></li> </ul> </li> <li>Composer\uff1a<ul> <li>\u8fd0\u884c Composer-Setup.exe</li> <li>\u68c0\u67e5\uff1a  <pre><code>php -v\ncomposer --version\n</code></pre></li> </ul> </li> </ol>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/#5-postgresql","title":"5. \u5b89\u88c5 PostgreSQL","text":"<p>\u7528\u4e8e\u6570\u636e\u5e93\u64cd\u4f5c\uff1a</p> <ol> <li>\u4e0b\u8f7d PostgreSQL 15</li> <li>\u8fd0\u884c\u5b89\u88c5\u7a0b\u5e8f\uff1a</li> <li>\u8d85\u7ea7\u7528\u6237\u5bc6\u7801\uff1a<code>admin</code>\uff08\u6216\u60a8\u81ea\u5df1\u7684\uff09</li> <li>\u7aef\u53e3\uff1a<code>5432</code>\uff08\u6807\u51c6\uff09</li> <li>\u5b89\u88c5\u540e\uff1a</li> <li>\u6253\u5f00 pgAdmin 4\uff08\u56fe\u5f62\u5ba2\u6237\u7aef\uff09 <p>\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u5176\u4ed6\u6570\u636e\u5e93\u5ba2\u6237\u7aef\uff0c\u4f8b\u5982 DBeaver\u3001DataGrip \u751a\u81f3\u547d\u4ee4\u884c\u3002 \u6211\u66f4\u559c\u6b22 DBeaver - \u4f46\u8fd9\u53d6\u51b3\u4e8e\u4e2a\u4eba\u559c\u597d</p> </li> <li>\u4e3a\u9879\u76ee\u521b\u5efa\u6570\u636e\u5e93\uff1a<code>space_api</code></li> </ol>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/#6-laravel","title":"6. \u5b89\u88c5 Laravel","text":"<ol> <li> <p>\u901a\u8fc7 Composer\uff1a <pre><code>composer create-project laravel/laravel space-api\ncd space-api\n</code></pre></p> </li> <li> <p>Git \u521d\u59cb\u5316\uff08\u53ef\u9009\uff09\uff1a <pre><code>git init\ngit add .\ngit commit -m \"\u542f\u52a8\u5b87\u5b99\u9879\u76ee\"\n</code></pre></p> </li> <li> <p>\u542f\u52a8\u5e76\u68c0\u67e5\u670d\u52a1\u5668\uff1a</p> <p>\u5982\u679c\u60a8\u4f7f\u7528 Herd\uff1a \u786e\u4fdd\u60a8\u7684 space-api \u9879\u76ee\u4f4d\u4e8e\u60a8\u5df2\u6dfb\u52a0\u5230 Herd \u7684\u6587\u4ef6\u5939\u4e2d\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u5730\u5740\uff1ahttp://space-api.test \u60a8\u5e94\u8be5\u770b\u5230 Laravel \u7684\u8d77\u59cb\u9875\u9762\u3002\u670d\u52a1\u5668\u5df2\u7ecf\u901a\u8fc7 Herd \u8fd0\u884c\uff01</p> </li> </ol> <p>\u5982\u679c\u60a8\u4e0d\u4f7f\u7528 Herd\uff08\u624b\u52a8\u5b89\u88c5\uff09\uff1a <pre><code>php artisan serve\n</code></pre> \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\uff1ahttp://localhost:8000 \u2192 \u5e94\u8be5\u4f1a\u51fa\u73b0 Laravel \u7684\u8d77\u59cb\u9875\u9762\uff01</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/#herd","title":"\u5728 Herd \u4e2d\u521b\u5efa\u9879\u76ee\u65f6\uff1a","text":"<p>\u53ea\u9700\u6309\u7167\u5c4f\u5e55\u4e0a\u7684\u8bf4\u660e\u64cd\u4f5c\u5373\u53ef\u3002\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u9879\u76ee\u540d\u79f0\u4e3a <code>space-api</code>\u3002\u5165\u95e8\u5957\u4ef6\u53ef\u4ee5\u662f\u4efb\u4f55\u4e00\u4e2a\uff0c\u4f46\u6211\u66f4\u559c\u6b22 React\u3002</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/#phpunit-","title":"\u52a1\u5fc5\u542f\u7528 phpunit - \u6211\u4eec\u7a0d\u540e\u4f1a\u7528\u5230\u5b83","text":""},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/#7","title":"7. \u9879\u76ee\u914d\u7f6e","text":"<p>\u91cd\u8981\u6587\u4ef6\uff1a</p> <ul> <li><code>.env</code> \u2014 \u73af\u5883\u8bbe\u7f6e\uff08\u5bc6\u94a5\uff0c\u6570\u636e\u5e93\uff09</li> <li><code>config/database.php</code> \u2014 \u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u914d\u7f6e</li> <li><code>composer.json</code> \u2014 PHP \u4f9d\u8d56\u9879</li> </ul> <p>\u5c06\u6570\u636e\u5e93\u8fde\u63a5\u5230\u9879\u76ee\uff1a</p> <p>\u6dfb\u52a0\u5230 <code>.env</code>\uff1a</p> <pre><code>DB_CONNECTION=pgsql\nDB_HOST=127.0.0.1\nDB_PORT=5432\nDB_DATABASE=space_api\nDB_USERNAME=postgres # PostgreSQL \u767b\u5f55\u540d\nDB_PASSWORD=admin # PostgreSQL \u5bc6\u7801\n</code></pre> <p>Artisan \u7684\u7b2c\u4e00\u6279\u547d\u4ee4\uff1a <pre><code>php artisan key:generate  # \u751f\u6210\u5e94\u7528\u7a0b\u5e8f\u5bc6\u94a5\nphp artisan migrate:fresh # \u6570\u636e\u5e93\u8fc1\u79fb\uff08\u5207\u6362\u5230 PostgreSQL \u65f6\uff09\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u5c0f\u6d4b\u9a8c","text":"<p>1. Herd \u662f...</p>  a) \u7528\u4e8e\u7ba1\u7406 PHP \u73af\u5883\u7684\u5de5\u5177  b) \u4ee3\u7801\u7f16\u8f91\u5668  c) \u64cd\u4f5c\u7cfb\u7edf <p>2. Laravel \u4f7f\u7528\u54ea\u79cd\u5de5\u5177\u6765\u7ba1\u7406 PHP \u4f9d\u8d56\u9879\uff1f</p>  a) npm  b) Composer  c) Artisan <p>3. PostgreSQL \u7684\u6807\u51c6\u7aef\u53e3\u662f\uff1a</p>  a) 3306  b) 5432  c) 8000 <p>4. \u901a\u8fc7 Composer \u521b\u5efa Laravel \u9879\u76ee\u7684\u547d\u4ee4\u662f\uff1a</p>  a) composer create-laravel  b) laravel new  c) composer create-project laravel/laravel <p>5. \u5305\u542b\u73af\u5883\u8bbe\u7f6e\u7684\u6587\u4ef6\u662f\uff1f</p>  a) .env  b) config.php  c) settings.ini \u68c0\u67e5"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/1/#_2","title":"\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3","text":"<p>\u60a8\u5df2\u7ecf\u4e3a\u5b87\u5b99 API \u90e8\u7f72\u4e86\u201c\u53d1\u5c04\u53f0\u201d\uff01\u73b0\u5728\u60a8\u62e5\u6709\uff1a</p> <ul> <li>\ud83d\udee0\ufe0f \u672c\u5730\u73af\u5883\uff08Herd \u6216\u624b\u52a8\u5b89\u88c5\uff09\uff0c\u5305\u542b PHP \u548c Nginx</li> <li>\ud83d\udc18 \u5df2\u5b89\u88c5\u7684 PostgreSQL \u6570\u636e\u5e93\u670d\u52a1\u5668</li> <li>\ud83d\ude80 Laravel \u9879\u76ee <code>space-api</code></li> <li>\ud83d\udd0c \u5df2\u914d\u7f6e\u7684\u6570\u636e\u5e93\u8fde\u63a5</li> </ul> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li>\u5982\u679c\u60a8\u4f7f\u7528 Herd\uff1a \u786e\u4fdd <code>http://space-api.test</code> \u5730\u5740\u80fd\u591f\u6253\u5f00\u7f51\u7ad9\u3002</li> <li>\u5982\u679c\u60a8\u4e0d\u4f7f\u7528 Herd\uff1a \u786e\u4fdd <code>php artisan serve</code> \u547d\u4ee4\u6709\u6548\uff0c\u5e76\u4e14\u7f51\u7ad9\u53ef\u4ee5\u901a\u8fc7 <code>http://localhost:8000</code> \u5730\u5740\u6253\u5f00\u3002</li> <li>\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u8bf7\u68c0\u67e5 <code>pgAdmin 4</code> \u4e2d\u662f\u5426\u80fd\u770b\u5230\u5df2\u521b\u5efa\u7684 <code>space_api</code> \u6570\u636e\u5e93\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/2/","title":"\u7b2c 2.2 \u7ae0\uff1a\u521b\u5efa Planet \u6a21\u578b","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 45 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/2/#1-laravel","title":"1. Laravel \u4e2d\u7684\u6a21\u578b\uff1a\u5b87\u5b99\u5bf9\u8c61\u7684\u84dd\u56fe","text":"<p>\u5728 MVC \u67b6\u6784\uff08Model-View-Controller\uff09\u4e2d\uff0c\u6a21\u578b \u662f\uff1a</p> <ul> <li>\ud83d\udce6 \u6570\u636e\u7684\u5bb9\u5668\uff08\u884c\u661f\u53c2\u6570\uff09</li> <li>\ud83d\udd0c \u6570\u636e\u5e93\u64cd\u4f5c\u63a5\u53e3</li> <li>\ud83d\udee1\ufe0f \u5e94\u7528\u7a0b\u5e8f\u4e1a\u52a1\u903b\u8f91\u7684\u4e2d\u5fc3</li> </ul> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a <code>Planet</code> \u6a21\u578b = \u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u8ba1\u7b97\u673a\u4e2d\u7684\u884c\u661f\u84dd\u56fe\u3002\u901a\u8fc7\u5b83\u53ef\u4ee5\uff1a</p> <ul> <li>\u5728\u76ee\u5f55\u4e2d\u521b\u5efa\u65b0\u884c\u661f (<code>INSERT</code>)</li> <li>\u83b7\u53d6\u706b\u661f\u6570\u636e (<code>SELECT</code>)</li> <li>\u66f4\u65b0\u5927\u6c14\u5c42\u4fe1\u606f (<code>UPDATE</code>)</li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/2/#2","title":"2. \u521b\u5efa\u6a21\u578b\u548c\u8fc1\u79fb","text":"<p>Laravel \u4f7f\u7528 Artisan CLI \u2014 \u60a8\u7684\u9879\u76ee\u201c\u63a7\u5236\u53f0\u201d\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u751f\u6210\u5e26\u8fc1\u79fb\u7684\u6a21\u578b <pre><code>php artisan make:model Planet -m\n</code></pre></p> <p>\u5df2\u521b\u5efa\u6587\u4ef6\uff1a <pre><code>app/\n  \u2514\u2500\u2500 Models/\n      \u2514\u2500\u2500 Planet.php    \u2190 \u6a21\u578b\ndatabase/\n  \u2514\u2500\u2500 migrations/\n      \u2514\u2500\u2500 2025_08_04_000000_create_planets_table.php  \u2190 \u8fc1\u79fb\n</code></pre></p> <p>Artisan \u6807\u5fd7\uff1a</p> <ul> <li><code>-m</code> \u2192 \u521b\u5efa\u8fc1\u79fb</li> <li><code>-c</code> \u2192 \u521b\u5efa\u63a7\u5236\u5668</li> <li><code>-r</code> \u2192 \u8d44\u6e90\u63a7\u5236\u5668</li> </ul> <p>\ud83d\udca1 \u4e13\u4e1a\u63d0\u793a\uff1a \u8fd9\u4e9b\u6807\u5fd7\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\u4ee5\u83b7\u5f97\u6700\u5927\u6548\u7387\u3002\u547d\u4ee4 <code>php artisan make:model Planet -mcr</code> \u5c06\u7acb\u5373\u521b\u5efa\u6a21\u578b\u3001\u8fc1\u79fb\u548c\u7528\u4e8e\u7ba1\u7406\u8be5\u6a21\u578b\u7684\u8d44\u6e90\u63a7\u5236\u5668\u3002\u8fd9\u8282\u7701\u4e86\u5927\u91cf\u65f6\u95f4\u3002</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/2/#3-planet","title":"3. \u914d\u7f6e Planet \u6a21\u578b","text":"<p>\u6253\u5f00 <code>app/Models/Planet.php</code>\uff1a <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Planet extends Model\n{\n    // \u8868\u540d\uff08\u9ed8\u8ba4\u4e3a\uff1a'planets'\uff09\n    // Laravel \u9ed8\u8ba4\u5047\u5b9a\u8868\u540d\u662f\u6a21\u578b\u540d\u7684\u5c0f\u5199\u590d\u6570\u5f62\u5f0f (Planet -&gt; planets)\u3002\n     // \u56e0\u6b64\uff0c\u6b64\u5904\u6b64\u5c5e\u6027\u5e76\u975e\u5fc5\u9700\uff0c\u4f46\u6709\u52a9\u4e8e\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002\n    protected $table = 'planets';\n\n    // \u5141\u8bb8\u6279\u91cf\u8d4b\u503c\u7684\u5b57\u6bb5\n    protected $fillable = [\n        'name',\n        'description',\n        'size_km',\n        'solar_system',\n        'image_url'\n    ];\n\n    // \u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\n    protected $casts = [\n        'size_km' =&gt; 'integer'\n    ];\n}\n</code></pre></p> <p>\u5c5e\u6027\u8bf4\u660e\uff1a</p> \u5c5e\u6027 \u503c \u6570\u636e\u793a\u4f8b <code>$table</code> \u6570\u636e\u5e93\u4e2d\u7684\u8868\u540d <code>planets</code> <code>$fillable</code> \u5141\u8bb8\u6279\u91cf\u8d4b\u503c\u7684\u5b57\u6bb5 <code>name</code>, <code>size_km</code> <code>$casts</code> \u81ea\u52a8\u7c7b\u578b\u8f6c\u6362 <code>size_km: integer</code>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/2/#4","title":"4. \u884c\u661f\u8868\u8bbe\u8ba1","text":"<p>\u5728\u7f16\u8f91\u8fc1\u79fb\u6587\u4ef6\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u5b9a\u4e49\u201c\u884c\u661f\u201d\u7684\u7ed3\u6784\uff1a</p> \u5b57\u6bb5 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 \u793a\u4f8b\u503c <code>id</code> BIGINT (PK) \u552f\u4e00 ID 1 <code>name</code> VARCHAR(255) \u884c\u661f\u540d\u79f0 \"\u706b\u661f\" <code>description</code> TEXT \u63cf\u8ff0 \"\u7ea2\u8272\u884c\u661f...\" <code>size_km</code> INTEGER \u76f4\u5f84\uff08\u516c\u91cc\uff09 6779 <code>solar_system</code> VARCHAR(100) \u592a\u9633\u7cfb \"\u592a\u9633\u7cfb\" <code>image_url</code> VARCHAR(2048) \u56fe\u7247 URL\uff08\u53ef\u4e3a\u7a7a\uff09 \"https://...\" <code>created_at</code> TIMESTAMP \u521b\u5efa\u65e5\u671f 2025-08-04 12:00:00 <code>updated_at</code> TIMESTAMP \u66f4\u65b0\u65e5\u671f 2025-08-05 09:30:00"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/2/#5","title":"5. \u7f16\u8f91\u8fc1\u79fb\u6587\u4ef6","text":"<p>\u6253\u5f00 <code>database/migrations/..._create_planets_table.php</code> \u4e2d\u7684\u8fc1\u79fb\u6587\u4ef6\uff1a</p> <pre><code>&lt;?php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreatePlanetsTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('planets', function (Blueprint $table) {\n            $table-&gt;id(); // BIGINT \u81ea\u589e\n\n            $table-&gt;string('name')-&gt;unique();\n            $table-&gt;text('description');\n            $table-&gt;integer('size_km');\n            $table-&gt;string('solar_system', 100);\n            $table-&gt;string('image_url', 2048)-&gt;nullable();\n\n            $table-&gt;timestamps(); // created_at + updated_at\n        });\n    }\n\n    public function down()\n    {\n        Schema::dropIfExists('planets');\n    }\n}\n</code></pre> <p>\u8981\u70b9\uff1a</p> <ul> <li><code>-&gt;unique()</code> \u2192 \u786e\u4fdd\u540d\u79f0\u7684\u552f\u4e00\u6027</li> <li><code>-&gt;nullable()</code> \u2192 \u5b57\u6bb5\u53ef\u4ee5\u4e3a\u7a7a</li> <li><code>timestamps()</code> \u2192 \u81ea\u52a8\u7ba1\u7406\u65e5\u671f\u65f6\u95f4</li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/2/#6","title":"6. \u8fd0\u884c\u8fc1\u79fb\uff08\u9884\u89c8\uff09","text":"<p>\u867d\u7136\u8fc1\u79fb\u5c06\u5728\u7b2c 2.3 \u7ae0\u4e2d\u8fd0\u884c\uff0c\u4f46\u6211\u4eec\u5148\u770b\u770b\u5b83\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1a <pre><code>php artisan migrate\n</code></pre></p> <p>\u9884\u671f\u8f93\u51fa\uff1a <pre><code>Migrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (32.15ms)\n</code></pre></p> <p>\u5728 pgAdmin 4 \u4e2d\u68c0\u67e5\uff1a</p> <ol> <li>\u6253\u5f00 <code>space_api</code> \u6570\u636e\u5e93 \u2192 Schemas \u2192 Tables</li> <li>\u5e94\u8be5\u4f1a\u51fa\u73b0 <code>planets</code> \u8868\u548c\u60a8\u7684\u5b57\u6bb5</li> </ol>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/2/#7","title":"7. \u66ff\u4ee3\u65b9\u6cd5\uff1a\u4ee3\u7801\u751f\u6210\u5668","text":"<p>\u4e3a\u4e86\u52a0\u901f\u5f00\u53d1\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5305\uff1a</p> <ul> <li>Laravel Blueprint - \u6839\u636e YAML \u63cf\u8ff0\u521b\u5efa\u6a21\u578b/\u8fc1\u79fb</li> <li>InfyOm Laravel Generator - \u57fa\u4e8e\u6570\u636e\u5e93 schema \u7684\u751f\u6210\u5668</li> </ul> <p>Blueprint \u793a\u4f8b\uff1a <pre><code>models:\n  Planet:\n    name: string:255\n    description: text\n    size_km: integer\n    solar_system: string:100\n    image_url: string:2048? # '?' \u7b26\u53f7\u8868\u793a\u5b57\u6bb5\u53ef\u4e3a\u7a7a\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/2/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. \u7528\u4e8e\u521b\u5efa\u6a21\u578b\u53ca\u5176\u76f8\u5173\u8fc1\u79fb\u7684 Artisan \u547d\u4ee4\uff1a</p>  a) php artisan make:model Planet -m  b) php artisan create:model Planet  c) php artisan model:new Planet --m <p>2. \u6a21\u578b\u4e2d\u7684 `$fillable` \u5c5e\u6027\u7528\u4e8e</p>  a) \u9632\u6b62\u6279\u91cf\u8d4b\u503c  b) \u81ea\u52a8\u52a0\u5bc6\u6570\u636e  c) \u63cf\u8ff0\u5916\u952e <p>3. \u8fc1\u79fb\u4e2d\u7684 `nullable()` \u610f\u5473\u7740\uff1a</p>  a) \u5b57\u6bb5\u5fc5\u987b\u586b\u5199  b) \u5b57\u6bb5\u53ef\u4ee5\u4e3a\u7a7a  c) \u5b57\u6bb5\u5c06\u88ab\u5220\u9664 <p>4. \u7528\u4e8e\u884c\u661f\u957f\u63cf\u8ff0\u7684\u5b57\u6bb5\u7c7b\u578b\uff1a</p>  a) string  b) text  c) varchar <p>5. `timestamps()` \u65b9\u6cd5\u521b\u5efa\uff1a</p>  a) \u4ec5 created_at  b) created_at \u548c updated_at  c) id, created_at, updated_at \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a \u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u884c\u661f\u7684\u201c\u6570\u5b57\u5b6a\u751f\u201d\uff01\u73b0\u5728\u60a8\u7684\u9879\u76ee\u62e5\u6709\uff1a</p> <ul> <li>\ud83e\ude90 \u5305\u542b\u4e1a\u52a1\u903b\u8f91\u7684 <code>Planet</code> \u6a21\u578b</li> <li>\ud83d\udcca \u7528\u4e8e PostgreSQL \u4e2d <code>planets</code> \u8868\u7684\u8fc1\u79fb</li> <li>\ud83d\udee0\ufe0f \u914d\u7f6e\u597d\u7684\u6a21\u578b\u5c5e\u6027\uff08<code>fillable</code>\u3001<code>casts</code>\uff09</li> </ul> <p>\u51c6\u5907\u597d\u6570\u636e\u5e93\uff01 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8fd0\u884c\u8fc1\u79fb\u5e76\u7528\u7b2c\u4e00\u6279\u884c\u661f\u586b\u5145\u5b87\u5b99\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <p>\u786e\u4fdd <code>Planet.php</code> \u548c <code>..._create_planets_table.php</code> \u6587\u4ef6\u5df2\u5728\u6b63\u786e\u7684\u76ee\u5f55\u4e2d\u521b\u5efa\u3002</p> <p>\u26a0\ufe0f \u5982\u679c Artisan \u62a5\u9519\uff1a</p> <ul> <li>\u68c0\u67e5\u60a8\u662f\u5426\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e2d</li> <li>\u786e\u4fdd\u5df2\u5b89\u88c5\u4f9d\u8d56\u9879\uff08<code>composer install</code>\uff09</li> <li>\u5bf9\u4e8e Windows\uff1a\u5c06 PHP \u548c Composer \u6dfb\u52a0\u5230 PATH</li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/3/","title":"\u7b2c2.3\u7ae0\uff1a\u6570\u636e\u5e93\u8fc1\u79fb","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 50\u5206\u949f</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/3/#1","title":"1. \u8fc1\u79fb\uff1a\u5efa\u9020\u7a7a\u95f4\u7ad9","text":"<p>Laravel \u4e2d\u7684\u8fc1\u79fb\u662f\u60a8\u6570\u636e\u5e93\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002</p> <p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u60a8\uff1a</p> <ol> <li>\ud83c\udfd7\ufe0f \u521b\u5efa\u7a7a\u95f4\u7ad9\u84dd\u56fe\uff08<code>create_planets_table</code> \u8fc1\u79fb\uff09</li> <li>\ud83d\ude80 \u90e8\u7f72\u6a21\u5757\uff08\u8fd0\u884c\u8fc1\u79fb\uff09</li> <li>\ud83d\udd27 \u6539\u9020\u7ed3\u6784\uff08\u65b0\u7684\u8fc1\u79fb\uff09</li> <li>\u23ea \u53ef\u4ee5\u56de\u6eda\u5230\u65e7\u7248\u672c\uff08\u56de\u6eda\uff09</li> </ol> <p>\ud83d\udca1 \u91cd\u8981\u63d0\u793a\uff1a \u8fc1\u79fb\u4f7f\u56e2\u961f\u80fd\u591f\u534f\u8c03\u4e00\u81f4\u5730\u5de5\u4f5c\u2014\u2014\u5c31\u50cf\u4e0d\u540c\u5927\u9646\u7684\u5de5\u7a0b\u5e08\u5efa\u9020\u56fd\u9645\u7a7a\u95f4\u7ad9\u4e00\u6837\uff01</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/3/#2","title":"2. \u8fd0\u884c\u8fc1\u79fb","text":"<p>\u5728\u7b2c2.2\u7ae0\u521b\u5efa\u8fc1\u79fb\u540e\uff0c\u6267\u884c\uff1a <pre><code>php artisan migrate\n</code></pre></p> <p>\u7ec8\u7aef\u8f93\u51fa\uff1a <pre><code>Migration table created successfully.\nMigrating: 2014_10_12_000000_create_users_table\nMigrated:  2014_10_12_000000_create_users_table (25.12ms)\nMigrating: 2014_10_12_100000_create_password_reset_tokens_table\nMigrated:  2014_10_12_100000_create_password_reset_tokens_table (18.07ms)\nMigrating: 2019_08_19_000000_create_failed_jobs_table\nMigrated:  2019_08_19_000000_create_failed_jobs_table (21.33ms)\nMigrating: 2019_12_14_000001_create_personal_access_tokens_table\nMigrated:  2019_12_14_000001_create_personal_access_tokens_table (30.45ms)\nMigrating: 2025_08_04_000000_create_planets_table\nMigrated:  2025_08_04_000000_create_planets_table (15.67ms)  # \u60a8\u7684\u8868\uff01\n</code></pre></p> <p>\u5728 pgAdmin 4 \u4e2d\u68c0\u67e5\uff1a</p> <ol> <li>\u6253\u5f00 <code>space_api</code> \u6570\u636e\u5e93 \u2192 Schemas \u2192 Tables</li> <li>\u786e\u8ba4\u5df2\u51fa\u73b0\uff1a   - <code>planets</code>   - <code>users</code>   - <code>password_reset_tokens</code></li> </ol>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/3/#3","title":"3. \u56de\u6eda\u8fc1\u79fb\uff1a\u7d27\u6025\u8fd4\u56de","text":"<p>\u5982\u679c\u9700\u8981\u4fee\u6539\u7ed3\u6784\uff1a <pre><code>php artisan migrate:rollback  # \u56de\u6eda\u6700\u8fd1\u4e00\u6279\u8fc1\u79fb\n</code></pre> <pre><code>php artisan migrate:reset    # \u5b8c\u5168\u56de\u6eda\u6240\u6709\u8fc1\u79fb\n</code></pre></p> <ul> <li><code>php artisan migrate:fresh</code> \u2014 \u5f00\u53d1\u4e2d\u6700\u6709\u7528\u7684\u547d\u4ee4\uff01 \u5b83\u4f1a\u5220\u9664\u6240\u6709\u8868\u5e76\u91cd\u65b0\u8fd0\u884c\u6240\u6709\u8fc1\u79fb\u3002</li> <li><code>php artisan migrate:fresh --seed</code> \u2014 \u6267\u884c\u4e0e <code>fresh</code> \u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u4f46\u5728\u8fc1\u79fb\u540e\u7acb\u5373\u8fd0\u884c\u6570\u636e\u586b\u5145\u5668\u3002\u8fd9\u662f\u7528\u4e8e\u4ece\u5934\u5f00\u59cb\u5b8c\u5168\u201c\u91cd\u65b0\u521b\u5efa\u201d\u6570\u636e\u5e93\u7684\u547d\u4ee4\u3002</li> </ul> <p>\u4f7f\u7528\u573a\u666f\uff1a <pre><code># \u6b65\u9aa4 1\uff1a\u53d1\u73b0\u8fc1\u79fb\u4e2d\u5b58\u5728\u9519\u8bef\u3002\u5b8c\u5168\u91cd\u65b0\u521b\u5efa\u6570\u636e\u5e93\u3002\nphp artisan migrate:fresh\n# \u6b65\u9aa4 2\uff1a\u7f16\u8f91\u8fc1\u79fb\n# \u6b65\u9aa4 3\uff1a\u518d\u6b21\u4f7f\u7528\u5df2\u4fee\u590d\u7684\u8fc1\u79fb\u91cd\u65b0\u521b\u5efa\u6570\u636e\u5e93\nphp artisan migrate:fresh\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/3/#4","title":"4. \u6dfb\u52a0\u65b0\u5b57\u6bb5\uff1a\u7a7a\u95f4\u7ad9\u73b0\u4ee3\u5316","text":"<p>\u793a\u4f8b\uff1a \u6dfb\u52a0 <code>is_habitable</code> \u5b57\u6bb5\uff08\u661f\u7403\u662f\u5426\u5b9c\u5c45\uff09\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u521b\u5efa\u65b0\u7684\u8fc1\u79fb <pre><code>php artisan make:migration add_is_habitable_to_planets_table\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u7f16\u8f91\u6587\u4ef6 <code>database/migrations/..._add_is_habitable_to_planets_table.php</code> <pre><code>&lt;?php\npublic function up()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;boolean('is_habitable')\n              -&gt;default(false);\n    });\n}\n\npublic function down()\n{\n    Schema::table('planets', function (Blueprint $table) {\n        $table-&gt;dropColumn('is_habitable');\n    });\n}\n</code></pre></p> <p>\u6b65\u9aa4 3\uff1a\u8fd0\u884c\u66f4\u65b0 <pre><code>php artisan migrate\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/3/#5","title":"5. \u586b\u5145\u6570\u636e\u5e93\uff1a\u7b2c\u4e00\u6279\u661f\u7403","text":"<p>\u521b\u5efa \u6570\u636e\u586b\u5145\u5668\uff08Seeder\uff09 \u2014 \u7528\u4e8e\u751f\u6210\u6d4b\u8bd5\u6570\u636e\u7684\u811a\u672c\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u751f\u6210\u6570\u636e\u586b\u5145\u5668 <pre><code>php artisan make:seeder PlanetSeeder\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u7f16\u8f91 <code>database/seeders/PlanetSeeder.php</code> <pre><code>&lt;?php\nuse App\\Models\\Planet; // \u5bfc\u5165\u661f\u7403\u6a21\u578b - \u6ca1\u6709\u5b83\u4f60\u4f1a\u9047\u5230\u9519\u8bef\uff01\n\n\nclass PlanetSeeder extends Seeder\n{\n    public function run()\n    {\n        Planet::create([\n            'name' =&gt; '\u5730\u7403',\n            'description' =&gt; '\u4e00\u9897\u62e5\u6709\u591a\u6837\u751f\u547d\u7684\u84dd\u8272\u661f\u7403',\n            'size_km' =&gt; 12742,\n            'solar_system' =&gt; '\u592a\u9633\u7cfb',\n            'image_url' =&gt; 'https://example.com/earth.jpg',\n            'is_habitable' =&gt; true\n        ]);\n\n        Planet::create([\n            'name' =&gt; '\u706b\u661f',\n            'description' =&gt; '\u4e00\u9897\u7ea2\u8272\u661f\u7403\uff0c\u672a\u6765\u6b96\u6c11\u7684\u76ee\u6807',\n            'size_km' =&gt; 6779,\n            'solar_system' =&gt; '\u592a\u9633\u7cfb',\n            'is_habitable' =&gt; false\n        ]);\n    }\n}\n</code></pre></p> <p>\u6b65\u9aa4 3\uff1a\u5728 <code>database/seeders/DatabaseSeeder.php</code> \u4e2d\u6ce8\u518c\u6570\u636e\u586b\u5145\u5668 <pre><code>&lt;?php\npublic function run()\n{\n    $this-&gt;call([\n        PlanetSeeder::class\n    ]);\n}\n</code></pre></p> <p>\u6b65\u9aa4 4\uff1a\u8fd0\u884c\u586b\u5145 <pre><code>php artisan db:seed\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/3/#6-postgresql","title":"6. \u4f7f\u7528 PostgreSQL\uff1a\u7279\u6b8a\u6027","text":"<p>\u6570\u636e\u7c7b\u578b\u7279\u6027\uff1a</p> \u529f\u80fd PostgreSQL MySQL Laravel \u6ce8\u91ca \u5e03\u5c14\u7c7b\u578b <code>boolean</code>\uff08\u771f\u6b63\u7684 <code>true</code>/<code>false</code>\uff09 <code>tinyint(1)</code>\uff08\u5b58\u50a8 <code>0</code>/<code>1</code>\uff09 <code>$table-&gt;boolean('...')</code> \u4e24\u8005\u90fd\u9002\u7528 JSON <code>jsonb</code>\uff08\u4e8c\u8fdb\u5236\uff0c\u53ef\u7d22\u5f15\uff09 <code>json</code>\uff08\u6587\u672c\uff09 <code>$table-&gt;jsonb('...')</code> - \u5728 PG \u4e2d\u975e\u5e38\u5f3a\u5927 \u6570\u7ec4 <code>text[]</code>\u3001<code>integer[]</code>\uff08\u539f\u751f\u6570\u7ec4\uff09 \u65e0\uff08\u901a\u8fc7 JSON \u6216\u5b57\u7b26\u4e32\u6a21\u62df\uff09 <code>$table-&gt;array('...')</code>\uff08PG \u4e13\u5c5e\uff09 \u5217\u987a\u5e8f \u65e0\u6cd5\u63a7\u5236\uff08<code>after()</code> \u4e0d\u8d77\u4f5c\u7528\uff09 \u53ef\u4ee5\u63a7\u5236\uff08<code>after()</code>\uff09 Laravel \u5bf9\u5176\u8fdb\u884c\u4e86\u62bd\u8c61\uff0c\u4f46\u60a8\u9700\u8981\u4e86\u89e3\u6b64\u9650\u5236 <p>\u521b\u5efa\u7d22\u5f15\u793a\u4f8b\uff1a <pre><code>// \u5728\u8fc1\u79fb\u4e2d\n$table-&gt;index('solar_system');\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/3/#7-psql","title":"7. \u5728 psql \u4e2d\u68c0\u67e5\u6570\u636e","text":"<p>\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u56fe\u5f62\u5ba2\u6237\u7aef\uff0c\u5e76\u5728\u5176\u4e2d\u9009\u62e9 <code>space_api</code> \u6765\u67e5\u770b\u3002</p> <p>\u4f7f\u7528\u63a7\u5236\u53f0\u65f6\uff1a <pre><code>psql -U postgres -d space_api\n# \u7ec8\u7aef\u53ef\u80fd\u4f1a\u8981\u6c42\u60a8\u5728\u5b89\u88c5 PostgreSQL \u65f6\u8bbe\u7f6e\u7684\u5bc6\u7801\u3002\n</code></pre> <pre><code>SELECT * FROM planets;\n</code></pre></p> <p>\u65e0\u8bba\u5982\u4f55\uff0c\u8f93\u51fa\u5e94\u8be5\u5982\u4e0b\uff1a</p> id \u540d\u79f0 \u63cf\u8ff0 \u5927\u5c0f\uff08\u516c\u91cc\uff09 \u592a\u9633\u7cfb \u56fe\u7247URL \u662f\u5426\u5b9c\u5c45 1 \u5730\u7403 \u4e00\u9897\u62e5\u6709\u591a\u6837\u751f\u547d\u7684\u84dd\u8272\u661f\u7403 12742 \u592a\u9633\u7cfb ... true 2 \u706b\u661f \u4e00\u9897\u7ea2\u8272\u661f\u7403\uff0c\u6b96\u6c11\u76ee\u6807 6779 \u592a\u9633\u7cfb null false"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/3/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. \u8fd0\u884c\u8fc1\u79fb\u7684\u547d\u4ee4\uff1a</p>  a) php artisan migrate:run  b) php artisan migrate  c) php artisan db:migrate <p>2. \u5982\u4f55\u56de\u6eda\u6700\u540e\u4e00\u6b21\u8fc1\u79fb\uff1f</p>  a) migrate:undo  b) migrate:rollback  c) migrate:reset <p>3. \u6570\u636e\u586b\u5145\u5668\u7528\u4e8e\uff1a</p>  a) \u5220\u9664\u8868  b) \u7528\u6d4b\u8bd5\u6570\u636e\u586b\u5145\u6570\u636e\u5e93  c) \u521b\u5efa\u6a21\u578b <p>4. \u5728\u73b0\u6709\u8868\u4e2d\u6dfb\u52a0\u5217\u7684\u65b9\u6cd5\uff1a</p>  a) Schema::addColumn()  b) Schema::table()  c) Schema::modify() <p>5. \u6570\u636e\u586b\u5145\u5668\u5728\u54ea\u91cc\u6ce8\u518c\uff1f</p>  a) DatabaseSeeder.php  b) .env  c) config/database.php \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u638c\u63e1\u201c\u592a\u7a7a\u57fa\u7840\u8bbe\u65bd\u5efa\u8bbe\u201d\uff1a</p> <ul> <li>\u2705 \u521b\u5efa\u5e76\u8fd0\u884c\u4e86\u8fc1\u79fb</li> <li>\ud83d\udd27 \u6539\u9020\u4e86\u8868\u7ed3\u6784</li> <li>\ud83c\udf0d \u7528\u7b2c\u4e00\u6279\u661f\u7403\u586b\u5145\u4e86\u6570\u636e\u5e93</li> <li>\u2699\ufe0f \u5b66\u4f1a\u4e86\u4f7f\u7528 PostgreSQL</li> </ul> <p>\u60a8\u7684\u5b87\u5b99\u62e5\u6709\u4e86\u7b2c\u4e00\u6279\u4e16\u754c\uff01 \u73b0\u5728\u53ef\u4ee5\u5f00\u59cb\u521b\u5efa\u7528\u4e8e\u7ba1\u7406\u661f\u7403\u7684 API \u63a5\u53e3\u4e86\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ol> <li>\u8fd0\u884c <code>php artisan tinker</code></li> <li>\u6267\u884c <code>App\\Models\\Planet::all()</code></li> <li>\u786e\u8ba4\u60a8\u80fd\u770b\u5230\u5730\u7403\u548c\u706b\u661f</li> </ol>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/4/","title":"\u7b2c2.4\u7ae0\uff1aPlanetController API \u63a7\u5236\u5668","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 1 \u5c0f\u65f6</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/4/#1","title":"1. \u63a7\u5236\u5668\uff1a\u5b87\u5b99\u5bf9\u8c61\u7ba1\u7406\u4e2d\u5fc3","text":"<p>\u5728 MVC \u67b6\u6784\u4e2d\uff0c\u63a7\u5236\u5668\u662f\u6a21\u578b\u548c\u8bf7\u6c42\u4e4b\u95f4\u7684\u4e2d\u4ecb\uff1a</p> <ul> <li>\ud83d\udce1 \u63a5\u6536 HTTP \u8bf7\u6c42 (GET, POST, PUT, DELETE)</li> <li>\ud83d\udd0d \u901a\u8fc7\u6a21\u578b\u4ece\u6570\u636e\u5e93\u4e2d\u63d0\u53d6\u6570\u636e</li> <li>\ud83d\udce6 \u683c\u5f0f\u5316 API \u7684 JSON \u54cd\u5e94</li> </ul> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a <code>PlanetController</code> = \u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\uff1a</p> <ul> <li>\u63a5\u6536\u6765\u81ea\u5730\u7403\u7684\u8bf7\u6c42\uff08<code>GET /planets</code>\uff09</li> <li>\u5411\u201c\u63a2\u6d4b\u5668\u201d\uff08\u6a21\u578b\uff09\u53d1\u51fa\u6307\u4ee4</li> <li>\u4ee5 JSON \u683c\u5f0f\u8fd4\u56de\u9065\u6d4b\u6570\u636e</li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/4/#2","title":"2. \u521b\u5efa\u8d44\u6e90\u63a7\u5236\u5668","text":"<p>\u8d44\u6e90\u63a7\u5236\u5668\u81ea\u52a8\u5305\u542b\u7528\u4e8e CRUD \u64cd\u4f5c\u7684\u65b9\u6cd5\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u751f\u6210\u63a7\u5236\u5668 <pre><code>php artisan make:controller PlanetController --api --model=Planet\n</code></pre></p> <p>\u5c06\u5728 <code>app/Http/Controllers/PlanetController.php</code> \u4e2d\u521b\u5efa\u4ee5\u4e0b\u5185\u5bb9\uff1a <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Planet;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Validation\\Rule; // \u522b\u5fd8\u4e86\u6dfb\u52a0\u6b64\u5bfc\u5165\n\nclass PlanetController extends Controller\n{\n    // \u663e\u793a\u884c\u661f\u5217\u8868\n    public function index(Request $request) {}\n\n    // \u521b\u5efa\u65b0\u884c\u661f\n    public function store(Request $request) {}\n\n    // \u663e\u793a\u7279\u5b9a\u884c\u661f\n    public function show(Planet $planet) {}\n\n    // \u66f4\u65b0\u884c\u661f\n    public function update(Request $request, Planet $planet) {}\n\n    // \u5220\u9664\u884c\u661f\n    public function destroy(Planet $planet) {}\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/4/#3-api","title":"3. \u5b9e\u73b0 API \u65b9\u6cd5","text":"<p>A. <code>index()</code> - \u83b7\u53d6\u884c\u661f\u5217\u8868 <pre><code>&lt;?php\npublic function index(Request $request)\n{\n    // \u83b7\u53d6\u5206\u9875\u884c\u661f\uff0c\u6bcf\u9875 15 \u4e2a\n    $planets = Planet::paginate($request-&gt;get('per_page', 15));\n    return response()-&gt;json($planets); // \u81ea\u52a8 200 OK\n}\n</code></pre></p> <p>B. <code>store()</code> - \u521b\u5efa\u65b0\u884c\u661f <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    $planet = Planet::create($data);\n    return response()-&gt;json($planet, 201); // 201 Created\n}\n</code></pre></p> <p>C. <code>show()</code> - \u67e5\u770b\u5355\u4e2a\u884c\u661f <pre><code>&lt;?php\npublic function show(Planet $planet)\n{\n    return response()-&gt;json($planet); // \u81ea\u52a8 200 OK\n}\n</code></pre></p> <p>D. <code>update()</code> - \u66f4\u65b0\u884c\u661f <pre><code>&lt;?php\npublic function update(Request $request, Planet $planet)\n{\n    $data = $request-&gt;validate([\n        'name' =&gt; [\n            'string',\n            'max:255',\n            Rule::unique('planets')-&gt;ignore($planet-&gt;id),\n        ],\n        'description' =&gt; 'sometimes|string', // 'sometimes' - \u4ec5\u5f53\u5b57\u6bb5\u5b58\u5728\u65f6\u624d\u9a8c\u8bc1\n        'size_km' =&gt; 'sometimes|integer|min:100',\n        'solar_system' =&gt; 'sometimes|string|max:100',\n        'image_url' =&gt; 'sometimes|nullable|url',\n        'is_habitable' =&gt; 'sometimes|boolean'\n    ]);\n\n    $planet-&gt;update($data);\n    return response()-&gt;json($planet); // 200 OK\n}\n</code></pre></p> <p>E. <code>destroy()</code> - \u5220\u9664\u884c\u661f <pre><code>&lt;?php\npublic function destroy(Planet $planet)\n{\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204); // 204 No Content\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/4/#4-route-model-binding","title":"4. \u8def\u7531\u6a21\u578b\u7ed1\u5b9a (Route Model Binding)","text":"<p>Laravel \u6839\u636e ID \u81ea\u52a8\u6ce8\u5165\u884c\u661f\u5bf9\u8c61\uff1a <pre><code>// \u5728\u8def\u7531\u4e2d: GET /planets/{planet}\n// \u5728\u65b9\u6cd5\u4e2d: show(Planet $planet)\n</code></pre></p> <ul> <li>\u5982\u679c\u884c\u661f\u672a\u627e\u5230 \u2192 \u81ea\u52a8 404</li> <li>\u65e0\u9700\u624b\u52a8\u8c03\u7528 <code>findOrFail()</code> \u67e5\u8be2</li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/4/#5","title":"5. \u54cd\u5e94\u683c\u5f0f\u5316","text":"<p><code>index()</code> \u65b9\u6cd5\u7684\u6539\u8fdb\u54cd\u5e94\u793a\u4f8b\uff1a <pre><code>&lt;?php\npublic function index()\n{\n    return response()-&gt;json([\n        'success' =&gt; true,\n        'data' =&gt; Planet::all(),\n        'message' =&gt; '\u884c\u661f\u83b7\u53d6\u6210\u529f'\n    ]);\n}\n</code></pre></p> <p>404 \u9519\u8bef\u54cd\u5e94\uff08\u81ea\u52a8\uff09\uff1a <pre><code>{\n    \"message\": \"No query results for model [App\\\\Models\\\\Planet] 123\",\n    \"exception\": \"Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\NotFoundHttpException\"\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/4/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. \u7528\u4e8e\u521b\u5efa API \u63a7\u5236\u5668\u7684\u6807\u5fd7\uff1a</p>  a) --api  b) --resource  c) --model <p>2. \u6210\u529f\u521b\u5efa\u65f6\u5e94\u8fd4\u56de\u4ec0\u4e48\u72b6\u6001\uff1f</p>  a) 200 OK  b) 201 Created  c) 204 No Content <p>3. \u8def\u7531\u6a21\u578b\u7ed1\u5b9a\u5141\u8bb8\uff1a</p>  a) \u81ea\u52a8\u6839\u636e ID \u83b7\u53d6\u5bf9\u8c61  b) \u751f\u6210 HTML \u8868\u5355  c) \u7f13\u5b58\u8bf7\u6c42 <p>4. \u5220\u9664\u884c\u661f\u65f6\u8fd4\u56de\uff1a</p>  a) \u5305\u542b\u884c\u661f\u6570\u636e\u7684 JSON  b) null \u548c 204 \u72b6\u6001\u7801  c) \u7a7a\u5b57\u7b26\u4e32 <p>5. $request-&gt;validate() \u7528\u4e8e\uff1a</p>  a) \u9a8c\u8bc1\u8f93\u5165\u6570\u636e  b) \u52a0\u5bc6\u8bf7\u6c42  c) \u7f13\u5b58\u54cd\u5e94 \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u884c\u661f\u7cfb\u7edf\u7684\u201c\u63a7\u5236\u53f0\u201d\uff01\u73b0\u5728\u60a8\u7684\u63a7\u5236\u5668\u80fd\u591f\uff1a</p> <ul> <li>\ud83c\udf0c \u663e\u793a\u884c\u661f\u5217\u8868\uff08<code>index</code>\uff09</li> <li>\ud83e\ude90 \u521b\u5efa\u65b0\u4e16\u754c\uff08<code>store</code>\uff09</li> <li>\ud83d\udd2d \u8be6\u7ec6\u663e\u793a\u884c\u661f\u6570\u636e\uff08<code>show</code>\uff09</li> <li>\ud83d\udee0\ufe0f \u66f4\u65b0\u4fe1\u606f\uff08<code>update</code>\uff09</li> <li>\ud83d\udca5 \u9500\u6bc1\u884c\u661f\uff08<code>destroy</code>\uff09</li> </ul> <p>\u5269\u4e0b\u7684\u5c31\u662f\u914d\u7f6e\u8def\u7531\u4e86\uff01 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u628a\u63a7\u5236\u5668\u8fde\u63a5\u5230 API \u8def\u7531\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <p>\u786e\u4fdd <code>app/Http/Controllers</code> \u4e2d\u5b58\u5728\u5305\u542b 5 \u4e2a\u65b9\u6cd5\u7684 <code>PlanetController.php</code> \u6587\u4ef6\u3002</p> <p>\u26a0\ufe0f \u5982\u679c\u6709\u9519\u8bef\uff1a</p> <ul> <li>\u68c0\u67e5\u6a21\u578b\u540d\u79f0\uff1a<code>use App\\Models\\Planet;</code></li> <li>\u68c0\u67e5\u5bfc\u5165</li> <li>\u5bf9\u4e8e PostgreSQL\uff1a\u786e\u4fdd <code>Planet::all()</code> \u8fd4\u56de\u6570\u636e</li> <li>\u5982\u679c Tinker \u51fa\u73b0\u95ee\u9898\uff1a\u6267\u884c <code>composer dump-autoload</code></li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/5/","title":"\u7b2c 2.5 \u7ae0\uff1aAPI \u8def\u7531","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 45 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/5/#1","title":"1. \u4ec0\u4e48\u662f\u8def\u7531\uff1f\u901a\u4fd7\u6613\u61c2\u7684\u89e3\u91ca","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u60a8\u7684\u63a7\u5236\u5668 (<code>PlanetController</code>) \u662f\u4e00\u4e2a\u5927\u578b\u529e\u516c\u4e2d\u5fc3\uff0c\u5b83\u7684\u6bcf\u4e2a\u65b9\u6cd5 (<code>index</code>, <code>store</code>, <code>show</code>) \u90fd\u662f\u4e00\u4e2a\u6267\u884c\u81ea\u8eab\u5de5\u4f5c\u7684\u90e8\u95e8\u3002</p> <p>\u8def\u7531 (Route) \u662f\u5efa\u7b51\u7269\u5165\u53e3\u5904\u7684\u5730\u5740\u724c\u3002\u5b83\u6307\u660e\uff1a</p> <ul> <li>\u201c\u5982\u679c\u6709\u4eba\u4f7f\u7528 GET \u65b9\u6cd5\u8bbf\u95ee <code>/planets</code> \u5730\u5740\u2014\u2014\u5c06\u5176\u53d1\u9001\u5230 <code>index</code> \u90e8\u95e8\uff08\u663e\u793a\u6240\u6709\uff09\u3002\u201d</li> <li>\u201c\u5982\u679c\u6709\u4eba\u4f7f\u7528 POST \u65b9\u6cd5\u8bbf\u95ee <code>/planets</code> \u5730\u5740\u5e76\u643a\u5e26\u6570\u636e\u2014\u2014\u5c06\u5176\u53d1\u9001\u5230 <code>store</code> \u90e8\u95e8\uff08\u521b\u5efa\u65b0\u8bb0\u5f55\uff09\u3002\u201d</li> </ul> <p>\u6ca1\u6709\u8def\u7531\uff0c\u5916\u90e8\u4e16\u754c\u7684\u4efb\u4f55\u8bf7\u6c42\u90fd\u65e0\u6cd5\u5728\u60a8\u7684\u4ee3\u7801\u4e2d\u627e\u5230\u5b83\u6240\u9700\u7684\u90e8\u95e8\u3002API \u4e2d\u6b64\u7c7b\u201c\u5730\u5740\u724c\u201d\u7684\u4e3b\u8981\u6587\u4ef6\u662f <code>routes/api.php</code>\u3002</p> <p>\u5728 Laravel 11+ \u4e2d\uff0c\u9ed8\u8ba4\u6ca1\u6709\u201cAPI \u5730\u5740\u7c3f\u201d\u3002\u6211\u4eec\u901a\u8fc7\u6267\u884c <code>php artisan install:api</code> \u547d\u4ee4\u81ea\u884c\u521b\u5efa\u4e86\u5b83\u3002\u73b0\u5728\u6211\u4eec\u6709\u4e86 <code>routes/api.php</code> \u6587\u4ef6\u2014\u2014\u5b83\u662f\u6211\u4eec API \u6240\u6709\u8def\u7531\u7684\u4e3b\u8981\u7ba1\u7406\u4e2d\u5fc3\u3002</p> <p><code>api.php</code> \u4e0e <code>web.php</code> \u7684\u4e3b\u8981\u533a\u522b\uff1a</p> <ul> <li><code>/api</code> \u524d\u7f00\uff1aLaravel \u4f1a\u81ea\u52a8\u4e3a\u6b64\u6587\u4ef6\u4e2d\u7684\u6240\u6709 URL \u5730\u5740\u6dfb\u52a0 <code>/api</code> \u524d\u7f00\u3002<code>/planets</code> \u8def\u7531\u4f1a\u53d8\u4e3a <code>/api/planets</code>\u3002</li> <li>\u201c\u65e0\u72b6\u6001\u201d (Stateless)\uff1a\u8fd9\u91cc\u6ca1\u6709\u50cf\u666e\u901a Web \u5e94\u7528\u90a3\u6837\u7684\u4f1a\u8bdd\u548c Cookie \u6587\u4ef6\u3002\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u5e76\u4e14\u5fc5\u987b\u5305\u542b\u6240\u6709\u8eab\u4efd\u9a8c\u8bc1\u4fe1\u606f\uff08\u901a\u5e38\u662f\u8bf7\u6c42\u5934\u4e2d\u7684 API \u4ee4\u724c\uff09\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/5/#2","title":"2. \u65b0\u624b\u4e4b\u8def\uff1a\u624b\u52a8\u521b\u5efa\u8def\u7531","text":"<p>\u8ba9\u6211\u4eec\u624b\u52a8\u521b\u5efa\u4e00\u4e2a\u8def\u7531\uff0c\u4ee5\u4fbf\u7406\u89e3\u5176\u539f\u7406\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba9 URL <code>/api/planets</code> \u663e\u793a\u6240\u6709\u884c\u661f\u7684\u5217\u8868\u3002</p> <p>\u6253\u5f00 <code>routes/api.php</code> \u5e76\u5199\u5165\uff1a</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController; // \u6307\u660e\u63a7\u5236\u5668\u4f4d\u7f6e\n\n//                    (1)           (2)                     (3)\nRoute::get(      '/planets',    [PlanetController::class, 'index']     );\n//   ^               ^                       ^\n// (HTTP \u65b9\u6cd5)   (URL \u5730\u5740)          (\u8981\u8c03\u7528\u54ea\u4e2a\u63a7\u5236\u5668\u548c\u65b9\u6cd5)\n</code></pre> <p>\u9010\u884c\u5206\u6790\u8fd9\u6bb5\u4ee3\u7801\uff1a</p> <ol> <li><code>Route::get(...)</code> \u2014 \u6211\u4eec\u8bf4\uff1a\u201c\u8fd9\u4e2a\u8def\u7531\u4ec5\u9002\u7528\u4e8e GET \u8bf7\u6c42\u3002\u201d</li> <li><code>'/planets'</code> \u2014 \u8fd9\u662f Laravel \u5c06\u76d1\u542c\u7684 URL\u3002\u8003\u8651\u5230 <code>/api</code> \u524d\u7f00\uff0c\u5b8c\u6574\u5730\u5740\u5c06\u662f <code>http://space-api.test/api/planets</code>\u3002</li> <li><code>[PlanetController::class, 'index']</code> \u2014 \u8fd9\u662f\u201c\u76ee\u7684\u5730\u201d\u3002\u6211\u4eec\u8bf4\uff1a\u201c\u5f53\u8bf7\u6c42\u5230\u6765\u65f6\uff0c\u627e\u5230 <code>PlanetController</code> \u7c7b\u5e76\u8c03\u7528\u5176\u4e2d\u7684 <code>index()</code> \u65b9\u6cd5\u3002\u201d</li> </ol> <p>\u73b0\u5728\u4e00\u5207\u90fd\u5173\u8054\u8d77\u6765\u4e86\uff01 \u8bf7\u6c42 -&gt; \u8def\u7531 -&gt; \u63a7\u5236\u5668 -&gt; \u65b9\u6cd5\u3002</p> <p>\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u884c\u661f ID \u83b7\u53d6\u4e00\u4e2a\u884c\u661f\u5462\uff1f\u4f8b\u5982\uff0c<code>/api/planets/5</code>\u3002</p> <pre><code>// \u83b7\u53d6\u7279\u5b9a\u884c\u661f\u7684\u8def\u7531\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n</code></pre> <p>\u8fd9\u91cc <code>{planet}</code> \u662f\u4e00\u4e2a\u201c\u6a21\u677f\u201d\u6216\u53d8\u91cf\u3002Laravel \u660e\u767d\u8fd9\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u662f\u4efb\u4f55\u5185\u5bb9\uff08ID\u3001slug\uff09\u3002\u7136\u540e\u5b83\u5c06\u6b64\u503c\u4f20\u9012\u7ed9 <code>show(Planet $planet)</code> \u65b9\u6cd5\u3002Laravel \u81ea\u52a8\u901a\u8fc7 ID \u67e5\u627e\u884c\u661f\u7684\u8fd9\u79cd\u201c\u9b54\u529b\u201d\u79f0\u4e3a \u8def\u7531\u6a21\u578b\u7ed1\u5b9a (Route Model Binding)\u3002</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/5/#3-apiresource","title":"3. \u5927\u5e08\u4e4b\u8def\uff1a<code>apiResource</code> \u2014\u2014 \u4e00\u884c\u4ee3\u7801\u7edf\u6cbb\u4e00\u5207","text":"<p>\u624b\u52a8\u4e3a\u6bcf\u4e2a\u8def\u7531\uff08<code>index</code>, <code>show</code>, <code>store</code>, <code>update</code>, <code>destroy</code>\uff09\u521b\u5efa\u5f88\u7e41\u7410\u3002Laravel \u5f00\u53d1\u8005\u660e\u767d\u8fd9\u4e00\u70b9\uff0c\u56e0\u6b64\u521b\u5efa\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u52a9\u624b\u2014\u2014<code>apiResource</code>\u3002</p> <p>\u5220\u9664\u6211\u4eec\u6240\u5199\u7684\u6240\u6709\u5185\u5bb9\uff0c\u5e76\u7528\u4e00\u884c\u4ee3\u7801\u66ff\u6362\uff1a</p> <pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\PlanetController;\n\nRoute::apiResource('planets', PlanetController::class);\n</code></pre> <p>\u8fd9\u4e00\u884c\u4ee3\u7801\u5728\u5e95\u5c42\u505a\u4e86\u4ec0\u4e48\uff1f \u5b83\u4f1a\u81ea\u52a8\u4e3a\u6211\u4eec\u5728\u63a7\u5236\u5668\u4e2d\u5df2\u7ecf\u5b9e\u73b0\u7684\u6807\u51c6 CRUD \u64cd\u4f5c\u521b\u5efa\u4e00\u6574\u5957\u8def\u7531\u3002</p> \u65b9\u6cd5 URL \u6620\u5c04\u5230\u65b9\u6cd5 \u7528\u9014 GET <code>/api/planets</code> <code>index()</code> \u83b7\u53d6\u6240\u6709\u884c\u661f\u5217\u8868 POST <code>/api/planets</code> <code>store()</code> \u521b\u5efa\u4e00\u4e2a\u65b0\u884c\u661f GET <code>/api/planets/{planet}</code> <code>show()</code> \u663e\u793a\u4e00\u4e2a\u7279\u5b9a\u7684\u884c\u661f PUT/PATCH <code>/api/planets/{planet}</code> <code>update()</code> \u66f4\u65b0\u73b0\u6709\u884c\u661f DELETE <code>/api/planets/{planet}</code> <code>destroy()</code> \u5220\u9664\u884c\u661f <p>\u60a8\u53ef\u4ee5\u4eb2\u81ea\u9a8c\u8bc1\u3002\u5728\u7ec8\u7aef\u4e2d\u6267\u884c\u547d\u4ee4\uff1a</p> <pre><code>php artisan route:list --path=api\n</code></pre> <p>\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5df2\u521b\u5efa\u8def\u7531\u7684\u8868\u683c\u3002<code>apiResource</code> \u662f\u60a8\u5728\u521b\u5efa\u6807\u51c6 API \u65f6\u8282\u7701\u65f6\u95f4\u7684\u6700\u4f73\u4f19\u4f34\u3002</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/5/#4","title":"4. \u7279\u6b8a\u4efb\u52a1\u548c\u8def\u7531\u987a\u5e8f","text":"<p>\u5982\u679c\u6211\u4eec\u9700\u8981\u4e00\u4e2a <code>apiResource</code> \u4e2d\u6ca1\u6709\u7684\u975e\u6807\u51c6\u8def\u7531\u600e\u4e48\u529e\uff1f\u4f8b\u5982\uff0c\u901a\u8fc7\u5730\u5740 <code>/api/planets/random</code> \u83b7\u53d6\u4e00\u4e2a\u968f\u673a\u884c\u661f\u3002</p> <p>\u8ba9\u6211\u4eec\u6dfb\u52a0\u5b83\u3002\u4f46\u8fd9\u91cc\u6709\u4e00\u4e2a\u81f4\u547d\u9677\u9631\uff0c\u5341\u6709\u516b\u4e5d\u7684\u65b0\u624b\u90fd\u4f1a\u6389\u8fdb\u53bb\u3002</p> <p>\u9519\u8bef\u7684\u987a\u5e8f (\u4e0d\u5de5\u4f5c\uff01): <pre><code>Route::apiResource('planets', PlanetController::class);\nRoute::get('/planets/random', [PlanetController::class, 'random']); // &lt;-- \u4e0d\u5de5\u4f5c\n</code></pre> \u4e3a\u4ec0\u4e48\uff1f Laravel \u4ece\u4e0a\u5230\u4e0b\u8bfb\u53d6\u8def\u7531\u3002\u5b83\u4f1a\u770b\u5230 <code>Route::apiResource</code>\uff0c\u5b83\u521b\u5efa\u4e86 <code>GET /planets/{planet}</code> \u8def\u7531\u3002\u5f53\u60a8\u8bf7\u6c42 <code>/planets/random</code> \u65f6\uff0cLaravel \u4f1a\u8ba4\u4e3a \"random\" \u662f\u884c\u661f\u7684 ID\uff0c\u5e76\u5c1d\u8bd5\u5728\u6570\u636e\u5e93\u4e2d\u67e5\u627e ID \u4e3a \"random\" \u7684\u884c\u661f\uff0c\u60a8\u5c06\u6536\u5230\u9519\u8bef\u3002</p> <p>\u6b63\u786e\u7684\u987a\u5e8f (\u5de5\u4f5c\uff01): <pre><code>&lt;?php\nuse App\\Http\\Controllers\\PlanetController;\nuse Illuminate\\Support\\Facades\\Route;\n\n// 1. \u9996\u5148\u58f0\u660e\u5177\u4f53\u8def\u7531\nRoute::get('/planets/random', [PlanetController::class, 'random']);\n\n// 2. \u7136\u540e\u624d\u58f0\u660e\u5e26\u53d8\u91cf\u7684\u901a\u7528\u8def\u7531\nRoute::apiResource('planets', PlanetController::class);\n</code></pre></p> <p>\u89c4\u5219\uff1a \u59cb\u7ec8\u5728\u66f4\u901a\u7528\u548c\u6a21\u677f\u5316\u7684\u8def\u7531\uff08\u4f8b\u5982 <code>/{planet}</code>\uff09\u4e4b\u524d\u58f0\u660e\u66f4\u5177\u4f53\u7684\u8def\u7531\uff08\u4f8b\u5982 <code>/random</code>\uff09\u3002</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/5/#_1","title":"\u26a0\ufe0f \u91cd\u8981\u63d0\u793a\uff01","text":"<p>\u4e3a\u4e86\u6d4b\u8bd5 api/planets/random \u8def\u7531\uff0c\u9700\u8981\u5728 PlanetController \u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5904\u7406\u7a0b\u5e8f\uff1a</p> <pre><code>&lt;?php\npublic function random(Request $request)\n{\n   $planet = Planet::inRandomOrder()-&gt;first();\n   return response()-&gt;json($planet);\n}\n</code></pre>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/5/#5","title":"5. \u8def\u7531\u5206\u7ec4\uff1a\u6574\u7406\u987a\u5e8f","text":"<p>\u5f53\u8def\u7531\u6570\u91cf\u589e\u591a\u65f6\uff0c\u53ef\u4ee5\u5e76\u4e14\u5e94\u8be5\u5bf9\u5b83\u4eec\u8fdb\u884c\u5206\u7ec4\u3002</p> <p>A. API \u7248\u672c\u63a7\u5236 \u4e3a\u4e86\u5c06\u6765\u4e0d\u7834\u574f\u4f7f\u7528\u60a8\u7684 API \u7684\u65e7\u5e94\u7528\u7a0b\u5e8f\uff0c\u901a\u5e38\u4f1a\u5728 URL \u4e2d\u6dfb\u52a0\u7248\u672c\uff0c\u4f8b\u5982 <code>/api/v1/...</code>\u3002</p> <pre><code>&lt;?php\nRoute::prefix('v1')-&gt;group(function () {\n    // \u6b64\u7ec4\u5185\u7684\u6240\u6709\u8def\u7531\u90fd\u5c06\u83b7\u5f97 /v1 \u524d\u7f00\n    // \u6700\u7ec8 URL: /api/v1/planets\n    Route::get('/planets/random', [PlanetController::class, 'random']);\n    Route::apiResource('planets', PlanetController::class);\n});\n</code></pre> <p>B. \u8def\u7531\u4fdd\u62a4 (\u4e2d\u95f4\u4ef6) \u5047\u8bbe\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u67e5\u770b\u884c\u661f\uff0c\u4f46\u53ea\u6709\u6388\u6743\u7528\u6237\u624d\u80fd\u521b\u5efa\u3001\u66f4\u65b0\u548c\u5220\u9664\u884c\u661f\u3002</p> <pre><code>&lt;?php\n// \u5bf9\u6240\u6709\u4eba\u516c\u5f00\u7684\u8def\u7531\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// \u9700\u8981\u201c\u901a\u884c\u8bc1\u201d\uff08\u8eab\u4efd\u9a8c\u8bc1\uff09\u7684\u8def\u7531\u7ec4\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n});\n</code></pre> <p>\u8fd9\u91cc <code>middleware('auth:sanctum')</code> \u5c31\u50cf\u4e00\u4e2a\u4fdd\u5b89\uff0c\u68c0\u67e5\u6bcf\u4e2a\u8bd5\u56fe\u8bbf\u95ee\u7ec4\u5185\u8def\u7531\u7684\u4eba\u7684\u201c\u901a\u884c\u8bc1\u201d\u3002</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/5/#6-postman","title":"6. \u901a\u8fc7 Postman \u8fdb\u884c\u6d4b\u8bd5","text":"<p>\u73b0\u5728\u6240\u6709\u8def\u7531\u90fd\u5df2\u8bbe\u7f6e\u597d\uff0c\u662f\u65f6\u5019\u8fdb\u884c\u6d4b\u8bd5\u4e86\u3002</p> <ol> <li>\u5982\u679c\u60a8\u4f7f\u7528 Herd\uff1a \u60a8\u7684\u7f51\u7ad9\u5df2\u5728 <code>http://space-api.test</code> \u4e4b\u7c7b\u7684\u5730\u5740\u4e0a\u8fd0\u884c\u3002</li> <li>\u5982\u679c\u6ca1\u6709\uff1a \u901a\u8fc7\u547d\u4ee4 <code>php artisan serve</code> \u542f\u52a8\u672c\u5730\u670d\u52a1\u5668\u3002\u5730\u5740\u5c06\u662f <code>http://localhost:8000</code>\u3002</li> </ol> <p>\u6253\u5f00 Postman \u5e76\u53d1\u9001\u8bf7\u6c42\uff1a</p> <ul> <li><code>GET http://space-api.test/api/planets</code></li> <li><code>GET http://space-api.test/api/planets/random</code></li> <li><code>POST http://space-api.test/api/planets</code> (\u4e0d\u8981\u5fd8\u8bb0\u5728 <code>Body</code> -&gt; <code>raw</code> -&gt; <code>JSON</code> \u9009\u9879\u5361\u4e2d\u6dfb\u52a0 JSON \u8bf7\u6c42\u4f53)\u3002</li> </ul> <p>POST \u8bf7\u6c42\u793a\u4f8b\uff1a <pre><code>{\n    \"name\": \"Kepler-186f\",\n    \"description\": \"\u5b9c\u5c45\u5e26\u4e2d\u7b2c\u4e00\u4e2a\u5730\u7403\u5927\u5c0f\u7684\u884c\u661f\",\n    \"size_km\": 15000,\n    \"solar_system\": \"Kepler-186\",\n    \"is_habitable\": true\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/5/#8","title":"8. \u5e38\u89c1\u7684\u8def\u7531\u9519\u8bef","text":"<ol> <li>404 Not Found <ul> <li>URL \u4e0d\u6b63\u786e (<code>/api/planet</code> \u800c\u4e0d\u662f <code>/api/planets</code>)</li> <li>\u5fd8\u8bb0\u8fd0\u884c <code>php artisan serve</code></li> </ul> </li> <li>405 Method Not Allowed <ul> <li>HTTP \u65b9\u6cd5\u4e0d\u6b63\u786e\uff08\u4f8b\u5982\uff0cGET \u800c\u4e0d\u662f POST\uff09</li> </ul> </li> <li>Missing Controller <ul> <li>\u63a7\u5236\u5668\u540d\u79f0\u62fc\u5199\u9519\u8bef (<code>PlanetControler</code>)</li> </ul> </li> <li>Route Name Collision <ul> <li>\u8def\u7531\u540d\u79f0\u51b2\u7a81</li> </ul> </li> </ol>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/5/#_2","title":"\u5de9\u56fa\u77e5\u8bc6\u7684\u5c0f\u6d4b\u9a8c","text":"<p>1. Laravel \u4e2d\u7528\u4e8e API \u8def\u7531\u7684\u6587\u4ef6\u662f\uff1a</p>  a) routes/web.php  b) routes/api.php  c) routes/console.php <p>2. API \u8def\u7531\u7684\u81ea\u52a8\u524d\u7f00\u662f\uff1a</p>  a) /admin  b) /api  c) /v1 <p>3. \u7528\u4e8e\u521b\u5efa 5 \u4e2a CRUD \u8def\u7531\u7684\u65b9\u6cd5\u662f\uff1a</p>  a) Route::api()  b) Route::resource()  c) Route::apiResource() <p>4. Route::prefix('v1') \u7528\u4e8e\uff1a</p>  a) \u8eab\u4efd\u9a8c\u8bc1  b) API \u7248\u672c\u63a7\u5236  c) \u7f13\u5b58 <p>5. \u67e5\u770b\u6240\u6709\u8def\u7531\u7684\u547d\u4ee4\u662f\uff1a</p>  a) php artisan route:list  b) php artisan list:routes  c) php routes \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u7ecf\u4e3a\u5b87\u5b99 API \u6784\u5efa\u4e86\u201c\u8d85\u7a7a\u95f4\u8def\u7531\u201d\uff01\u73b0\u5728\uff1a</p> <ul> <li>\ud83d\uddfa\ufe0f \u6240\u6709\u7aef\u70b9\u5747\u53ef\u901a\u8fc7 <code>/api/...</code> \u8bbf\u95ee</li> <li>\ud83d\udd17 \u8d44\u6e90\u8def\u7531\u5df2\u8fde\u63a5\u5230\u63a7\u5236\u5668</li> <li>\ud83d\udee1\ufe0f \u5df2\u6dfb\u52a0\u81ea\u5b9a\u4e49\u8def\u7531\u4ee5\u8fdb\u884c\u7279\u6b8a\u64cd\u4f5c</li> <li>\u2705 \u8def\u7531\u5df2\u901a\u8fc7 Postman \u6d4b\u8bd5</li> </ul> <p>\u5b87\u5b99\u5df2\u5f00\u653e\u8bf7\u6c42\uff01 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u9488\u5bf9\u201c\u592a\u7a7a\u5783\u573e\u201d\u7684\u9632\u62a4 \u2014 \u6570\u636e\u9a8c\u8bc1\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ol> <li>\u6267\u884c <code>php artisan route:list</code></li> <li>\u786e\u8ba4\u60a8\u80fd\u770b\u5230 5+ \u4e2a planets \u8def\u7531</li> <li>\u5728\u6d4f\u89c8\u5668/Postman \u4e2d\u6d4b\u8bd5 GET /api/planets \u7684\u5de5\u4f5c\u60c5\u51b5</li> </ol> <p>\u26a0\ufe0f \u5982\u679c\u51fa\u73b0 404 \u9519\u8bef\uff1a</p> <ul> <li>\u68c0\u67e5 <code>routes/api.php</code> \u4e2d\u662f\u5426\u5b58\u5728 <code>Route::apiResource</code></li> <li>\u786e\u4fdd\u670d\u52a1\u5668\u5df2\u542f\u52a8 (<code>php artisan serve</code>)</li> <li>\u5bf9\u4e8e Windows\uff1a\u5728\u9632\u706b\u5899\u4e2d\u5141\u8bb8\u7aef\u53e3 8000</li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/6/","title":"\u7b2c2.6\u7ae0\uff1a\u6570\u636e\u9a8c\u8bc1","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 50 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/6/#1","title":"1. \u9a8c\u8bc1\uff1a\u5b87\u5b99\u7ea7\u9632\u62a4\u76fe","text":"<p>\u9a8c\u8bc1\u662f\u6307\u68c0\u67e5\u4f20\u5165\u6570\u636e\u662f\u5426\u7b26\u5408\u89c4\u5219\u3002\u6ca1\u6709\u5b83\uff1a</p> <ul> <li>\ud83d\ude80 \u4e0d\u6b63\u786e\u7684\u6570\u636e\u53ef\u80fd\u4f1a\u201c\u7834\u574f\u201d\u4f60\u7684\u6570\u636e\u5e93</li> <li>\ud83c\udf0c \u6076\u610f\u653b\u51fb\u8005\u53ef\u80fd\u4f1a\u6ce8\u5165\u6076\u610f\u4ee3\u7801</li> <li>\ud83e\ude90 \u7528\u6237\u4f1a\u6536\u5230\u96be\u4ee5\u7406\u89e3\u7684\u9519\u8bef</li> </ul> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a \u9a8c\u8bc1 = \u7a7a\u95f4\u7ad9\u9632\u5fa1\u7cfb\u7edf\uff1a</p> <ul> <li>\u5728\u5bf9\u63a5\u524d\u68c0\u67e5\u201c\u8d27\u7269\u201d\uff08\u6570\u636e\uff09</li> <li>\u62d2\u7edd\u5371\u9669\u7269\u4f53</li> <li>\u8fc7\u6ee4\u592a\u7a7a\u788e\u7247</li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/6/#2-laravel-api","title":"2. \u5728 Laravel API \u4e2d\u4f55\u5904\u8fdb\u884c\u9a8c\u8bc1","text":"<p>\u4e3b\u8981\u65b9\u6cd5\uff1a</p> <ol> <li>\u5728\u63a7\u5236\u5668\u4e2d (\u5feb\u6377\uff0c\u4f46\u4f1a\u4f7f\u4ee3\u7801\u81c3\u80bf)</li> <li>\u8868\u5355\u8bf7\u6c42 (Form Request) (\u63a8\u8350\uff0c\u67b6\u6784\u6e05\u6670)</li> </ol>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/6/#3","title":"3. \u5728\u63a7\u5236\u5668\u4e2d\u8fdb\u884c\u9a8c\u8bc1","text":"<p>\u4f7f\u7528 Request \u5bf9\u8c61\u7684 <code>validate()</code> \u65b9\u6cd5\uff1a <pre><code>&lt;?php\npublic function store(Request $request)\n{\n    $validated = $request-&gt;validate([\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ]);\n\n    // ... \u521b\u5efa\u661f\u7403\n}\n</code></pre></p> <p>\u5e38\u7528\u9a8c\u8bc1\u89c4\u5219\uff1a</p> \u89c4\u5219 \u63cf\u8ff0 \u793a\u4f8b <code>required</code> \u5fc5\u586b\u5b57\u6bb5 <code>'name' =&gt; 'required'</code> <code>string</code> \u5b57\u7b26\u4e32\u503c <code>'description' =&gt; 'string'</code> <code>integer</code> \u6574\u6570 <code>'size_km' =&gt; 'integer'</code> <code>min:value</code> \u6700\u5c0f\u503c/\u6700\u5c0f\u957f\u5ea6 <code>'size_km' =&gt; 'min:100'</code> <code>max:value</code> \u6700\u5927\u503c/\u6700\u5927\u957f\u5ea6 <code>'name' =&gt; 'max:255'</code> <code>unique:table,column</code> \u8868\u4e2d\u552f\u4e00\u6027 <code>'name' =&gt; 'unique:planets'</code> <code>url</code> \u6709\u6548 URL <code>'image_url' =&gt; 'url'</code> <code>boolean</code> true/false/1/0 <code>'is_habitable' =&gt; 'boolean'</code>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/6/#4","title":"4. \u81ea\u5b9a\u4e49\u9519\u8bef\u6d88\u606f","text":"<p>\u4fee\u6539\u9ed8\u8ba4\u7684\u9519\u8bef\u6587\u672c\uff1a <pre><code>&lt;?php\n$validated = $request-&gt;validate(\n    [\n        'name' =&gt; 'required|unique:planets',\n        'size_km' =&gt; 'min:1000'\n    ],\n    [\n        'name.required' =&gt; '\u661f\u7403\u540d\u79f0\u662f\u5fc5\u586b\u7684\uff01',\n        'name.unique' =&gt; '\u76ee\u5f55\u4e2d\u5df2\u5b58\u5728\u540c\u540d\u661f\u7403',\n        'size_km.min' =&gt; '\u661f\u7403\u76f4\u5f84\u4e0d\u80fd\u5c0f\u4e8e 1000 \u516c\u91cc'\n    ]\n);\n</code></pre></p> <p>\u9519\u8bef\u54cd\u5e94\u793a\u4f8b (\u81ea\u52a8\u8fd4\u56de 422 Unprocessable Entity)\uff1a <pre><code>{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"name\": [\"\u76ee\u5f55\u4e2d\u5df2\u5b58\u5728\u540c\u540d\u661f\u7403\"],\n        \"size_km\": [\"\u661f\u7403\u76f4\u5f84\u4e0d\u80fd\u5c0f\u4e8e 1000 \u516c\u91cc\"]\n    }\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/6/#5-form-request","title":"5. \u521b\u5efa\u8868\u5355\u8bf7\u6c42 (Form Request)","text":"<p>\u5bf9\u4e8e\u590d\u6742\u7684\u9a8c\u8bc1\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u7c7b\uff1a</p> <p>\u6b65\u9aa4 1\uff1a\u751f\u6210 <pre><code>php artisan make:request StorePlanetRequest\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u7f16\u8f91 <code>app/Http/Requests/StorePlanetRequest.php</code> <pre><code>&lt;?php\npublic function authorize()\n{\n    return true; // \u5bf9\u4e8e API \u901a\u5e38\u4e3a true\n}\n\npublic function rules()\n{\n    return [\n        'name' =&gt; 'required|string|max:255|unique:planets',\n        'description' =&gt; 'required|string',\n        'size_km' =&gt; 'required|integer|min:100|max:500000',\n        'solar_system' =&gt; 'required|string|max:100',\n        'image_url' =&gt; 'nullable|url|max:2048',\n        'is_habitable' =&gt; 'boolean'\n    ];\n}\n\npublic function messages()\n{\n    return [\n        'name.unique' =&gt; '\u540c\u540d\u661f\u7403\u5df2\u5b58\u5728\uff01',\n        'size_km.min' =&gt; '\u76f4\u5f84\u4e0d\u80fd\u5c0f\u4e8e 100 \u516c\u91cc'\n    ];\n}\n</code></pre></p> <p>\u6b65\u9aa4 3\uff1a\u5728\u63a7\u5236\u5668\u4e2d\u4f7f\u7528 <pre><code>&lt;?php\nuse App\\Http\\Requests\\StorePlanetRequest;\n\npublic function store(StorePlanetRequest $request)\n{\n    // \u6570\u636e\u5df2\u9a8c\u8bc1\uff01\n    $validated = $request-&gt;validated();\n    $planet = Planet::create($validated);\n    return response()-&gt;json($planet, 201);\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/6/#6","title":"6. \u81ea\u5b9a\u4e49\u9a8c\u8bc1\u89c4\u5219","text":"<p>\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u89c4\u5219\u6765\u68c0\u67e5\u661f\u7403\u540d\u79f0\u7684\u201c\u5408\u7406\u6027\u201d\u3002Laravel \u7684\u6807\u51c6\u89c4\u5219\u65e0\u6cd5\u68c0\u67e5\u540d\u79f0\u662f\u5426\u88ab\u201c\u7981\u6b62\u201d\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u7f16\u5199\u81ea\u5df1\u7684\u903b\u8f91\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u751f\u6210\u89c4\u5219</p> <p>Laravel \u63d0\u4f9b\u4e86\u4e00\u4e2a Artisan \u547d\u4ee4\u6765\u521b\u5efa\u89c4\u5219\u7c7b\u7684\u201c\u9aa8\u67b6\u201d\u3002\u5728\u7ec8\u7aef\u4e2d\u6267\u884c\u5b83\uff1a</p> <pre><code>php artisan make:rule ValidPlanetName\n</code></pre> <p>\u6b65\u9aa4 2\uff1a\u7f16\u8f91 <code>app/Rules/ValidPlanetName.php</code></p> <p>\u6253\u5f00\u521b\u5efa\u7684\u6587\u4ef6\u3002\u5176\u7ed3\u6784\u7b80\u5355\u660e\u4e86\u3002\u6211\u4eec\u7684\u4efb\u52a1\u662f\u5728 <code>validate</code> \u65b9\u6cd5\u5185\u90e8\u5b9e\u73b0\u903b\u8f91\u3002</p> <pre><code>&lt;?php\n\nnamespace App\\Rules;\n\nuse Closure;\nuse Illuminate\\Contracts\\Validation\\ValidationRule;\n\nclass ValidPlanetName implements ValidationRule\n{\n    /**\n     * \u8fd0\u884c\u9a8c\u8bc1\u89c4\u5219\u3002\n     *\n     * @param  \\Closure(string): \\Illuminate\\Translation\\PotentiallyTranslatedString  $fail\n     */\n    public function validate(string $attribute, mixed $value, Closure $fail): void\n    {\n        // \u6211\u4eec\u7684\u540d\u79f0\u201c\u9ed1\u540d\u5355\u201d\n        $forbidden = ['\u0417\u0435\u043c\u043b\u044f 2.0', '\u041d\u0438\u0431\u0438\u0440\u0443', '\u041f\u043b\u0430\u043d\u0435\u0442\u0430 X'];\n\n        // \u68c0\u67e5\u8f93\u5165\u503c\u662f\u5426\u5728\u6211\u4eec\u7684\u5217\u8868\u4e2d\uff0c\n        // \u5ffd\u7565\u5927\u5c0f\u5199\u3002\n        if (in_array(strtolower($value), array_map('strtolower', $forbidden))) {\n            // \u5982\u679c\u9a8c\u8bc1\u672a\u901a\u8fc7\uff0c\u8c03\u7528 $fail \u51fd\u6570\n            // \u5e76\u9644\u4e0a\u7528\u6237\u5c06\u770b\u5230\u7684\u9519\u8bef\u6587\u672c\u3002\n            $fail('\u6b64\u661f\u7403\u540d\u79f0\u7981\u6b62\u4f7f\u7528\uff01');\n        }\n    }\n}\n</code></pre> <p>\u6b65\u9aa4 3\uff1a\u5728\u8868\u5355\u8bf7\u6c42 (Form Request) \u4e2d\u4f7f\u7528</p> <p>\u73b0\u5728\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u89c4\u5219\u5df2\u51c6\u5907\u5c31\u7eea\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u8868\u5355\u8bf7\u6c42\u4e2d\u5f15\u7528\u5b83\uff0c\u53ea\u9700\u521b\u5efa\u4e00\u4e2a\u6211\u4eec\u7684\u7c7b\u7684\u65b0\u5b9e\u4f8b\u5373\u53ef\u3002</p> <p>\u6253\u5f00 <code>app/Http/Requests/StorePlanetRequest.php</code> \u5e76\u5c06 <code>new ValidPlanetName</code> \u6dfb\u52a0\u5230 <code>name</code> \u5b57\u6bb5\u7684\u89c4\u5219\u6570\u7ec4\u4e2d\u3002</p> <p><pre><code>&lt;?php\n// app/Http/Requests/StorePlanetRequest.php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Rules\\ValidPlanetName; // &lt;-- \u522b\u5fd8\u4e86\u5bfc\u5165\u7c7b\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass StorePlanetRequest extends FormRequest\n{\n    // ... (authorize \u65b9\u6cd5)\n\n    public function rules(): array\n    {\n        return [\n            'name' =&gt; [\n                'sometimes',\n                'string',\n                'max:255',\n                'unique:planets',\n                new ValidPlanetName, // &lt;-- \u8fd9\u5c31\u662f\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u89c4\u5219\n            ],\n            'description' =&gt; 'sometimes|string',\n            'size_km' =&gt; 'sometimes|integer|min:100|max:500000',\n            'solar_system' =&gt; 'sometimes|string|max:100',\n            'image_url' =&gt; 'nullable|url|max:2048',\n            'is_habitable' =&gt; 'sometimes|boolean'\n        ];\n    }\n\n    // ... (messages \u65b9\u6cd5)\n}\n</code></pre> \u5b8c\u6210\u3002\u73b0\u5728\uff0c\u5f53\u521b\u5efa\u661f\u7403\u65f6\uff0cLaravel \u5c06\u4f9d\u6b21\u5bf9 <code>name</code> \u5b57\u6bb5\u5e94\u7528\u6240\u6709\u89c4\u5219\uff0c\u5e76\u5728\u9047\u5230 <code>new ValidPlanetName</code> \u65f6\u6267\u884c\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u903b\u8f91\u3002</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/6/#7-update","title":"7. \u7528\u4e8e\u66f4\u65b0 (Update) \u7684\u9a8c\u8bc1","text":"<p>\u66f4\u65b0\u6570\u636e\u65f6\u7684\u7279\u70b9\uff1a</p> <p>\u66f4\u65b0\u8bb0\u5f55\u65f6\uff0c\u9a8c\u8bc1\u89c4\u5219\u901a\u5e38\u6709\u6240\u4e0d\u540c\u3002\u4e3b\u8981\u7684\u7279\u70b9\u662f\u552f\u4e00\u6027\u68c0\u67e5\uff0c\u5b83\u5e94\u8be5\u5ffd\u7565\u5f53\u524d\u6b63\u5728\u66f4\u65b0\u7684\u8bb0\u5f55\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u4e3a\u66f4\u65b0\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u8868\u5355\u8bf7\u6c42 (Form Request) <pre><code>php artisan make:request UpdatePlanetRequest\n</code></pre> \u6b65\u9aa4 2\uff1a\u7f16\u8f91 <code>app/Http/Requests/UpdatePlanetRequest.php</code> <pre><code>&lt;?php\nuse Illuminate\\Validation\\Rule;\n\npublic function authorize(): bool\n{\n    return true;\n}\npublic function rules(): array\n{\n    $planet = $this-&gt;route('planet'); // \u4ece\u8def\u7531\u4e2d\u83b7\u53d6\u6a21\u578b\n\n     return [\n         'name' =&gt; [\n             'sometimes', // \u4ec5\u5f53\u5b57\u6bb5\u5b58\u5728\u4e8e\u8bf7\u6c42\u4e2d\u65f6\u624d\u8fdb\u884c\u9a8c\u8bc1\n             'required',\n             'string',\n             'max:255',\n             Rule::unique('planets')-&gt;ignore($planetId),\n         ],\n         'description'  =&gt; 'sometimes|required|string',\n         'size_km'      =&gt; 'sometimes|required|integer|min:100|max:500000',\n         // ... \u5176\u4ed6\u5e26\u6709 'sometimes' \u7684\u5b57\u6bb5\n     ];\n }\n</code></pre> \u6b65\u9aa4 3\uff1a\u5728\u63a7\u5236\u5668\u4e2d\u4f7f\u7528 <pre><code>&lt;?php\n use App\\Http\\Requests\\UpdatePlanetRequest;\n\n public function update(UpdatePlanetRequest $request, Planet $planet)\n {\n     $validated = $request-&gt;validated();\n     $planet-&gt;update($validated);\n     return response()-&gt;json($planet);\n }\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/6/#8-postman","title":"8. \u5728 Postman \u4e2d\u6d4b\u8bd5\u9a8c\u8bc1","text":"<p>\u573a\u666f 1\uff1a\u540d\u79f0\u552f\u4e00\u6027\u9519\u8bef <pre><code>POST /api/planets\n{\n    \"name\": \"\u041c\u0430\u0440\u0441\",\n    \"description\": \"\u041a\u0440\u0430\u0441\u043d\u0430\u044f \u043f\u043b\u0430\u043d\u0435\u0442\u0430, \u0446\u0435\u043b\u044c \u0431\u0443\u0434\u0443\u044e\u0449\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u0439\",\n    \"size_km\": 6779,\n    \"solar_system\": \"Solar System\",\n    \"is_habitable\": false\n}\n</code></pre> \u9884\u671f\u54cd\u5e94\uff1a <pre><code>{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"name\": [\"\u540c\u540d\u661f\u7403\u5df2\u5b58\u5728\uff01\"]\n    }\n}\n</code></pre></p> <p>\u573a\u666f 2\uff1a\u76f4\u5f84\u4e0d\u6b63\u786e <pre><code>{\n    \"name\": \"\u041f\u043b\u0430\u043d\u0435\u0442\u0430-\u0413\u043e\u0440\u043e\u0448\u0438\u043d\u0430\",\n    \"size_km\": 50 // &lt; min:100\n}\n</code></pre> \u9884\u671f\u54cd\u5e94\uff1a <pre><code>\"errors\": {\n    \"size_km\": [\"\u76f4\u5f84\u4e0d\u80fd\u5c0f\u4e8e 100 \u516c\u91cc\"]\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/6/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u7684\u6d4b\u9a8c","text":"<p>1. \u9a8c\u8bc1\u9519\u8bef\u65f6\u7684 HTTP \u72b6\u6001\u7801\u662f\uff1a</p>  a) 400 Bad Request  b) 422 Unprocessable Entity  c) 500 Internal Server Error <p>2. \u7528\u4e8e\u68c0\u67e5\u552f\u4e00\u6027\u7684\u89c4\u5219\u662f\uff1a</p>  a) unique:table  b) distinct  c) only:table <p>3. \u590d\u6742\u7684\u9a8c\u8bc1\u89c4\u5219\u6700\u597d\u653e\u5728\u54ea\u91cc\uff1f</p>  a) \u5728\u63a7\u5236\u5668\u4e2d  b) \u5728\u6a21\u578b\u4e2d  c) \u5728\u8868\u5355\u8bf7\u6c42 (Form Request) \u4e2d <p>4. Form Request \u4e2d\u7684 `authorize()` \u65b9\u6cd5\u5e94\u8fd4\u56de\uff1a</p>  a) false  b) true  c) null <p>5. sometimes \u89c4\u5219\u610f\u5473\u7740\uff1a</p>  a) \u5b57\u6bb5\u662f\u5fc5\u586b\u7684  b) \u5b57\u6bb5\u4ec5\u5728\u5b58\u5728\u65f6\u624d\u88ab\u9a8c\u8bc1  c) \u5b57\u6bb5\u88ab\u5ffd\u7565 \u68c0\u67e5 <p>\ud83d\ude80 \u7ae0\u8282\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u4e3a\u60a8\u7684\u5b87\u5b99 API \u5efa\u7acb\u4e86\u5f3a\u5927\u7684\u4fdd\u62a4\u7cfb\u7edf\uff1a</p> <ul> <li>\ud83d\udee1\ufe0f \u57fa\u672c\u548c\u81ea\u5b9a\u4e49\u9a8c\u8bc1\u89c4\u5219</li> <li>\ud83d\udcdd \u53ef\u8bfb\u7684\u9519\u8bef\u6d88\u606f</li> <li>\ud83e\udde9 Form Request \u7528\u4e8e\u590d\u6742\u573a\u666f</li> <li>\u2699\ufe0f \u66f4\u65b0\u6570\u636e\u7684\u552f\u4e00\u89c4\u5219</li> </ul> <p>\u60a8\u7684\u5b87\u5b99\u73b0\u5df2\u53d7\u5230\u4fdd\u62a4\uff01 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5904\u7406\u201c\u5b87\u5b99\u4e8b\u6545\u201d\u2014\u2014\u670d\u52a1\u5668\u9519\u8bef\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ol> <li>\u521b\u5efa\u7528\u4e8e\u66f4\u65b0\u884c\u661f\u7684 Form Request</li> <li>\u6dfb\u52a0\u81ea\u5b9a\u4e49\u540d\u79f0\u9a8c\u8bc1\u89c4\u5219</li> <li>\u901a\u8fc7 Postman \u6d4b\u8bd5\u9519\u8bef</li> </ol> <p>\u26a0\ufe0f \u5982\u679c\u9a8c\u8bc1\u5931\u8d25\uff1a</p> <ul> <li>\u68c0\u67e5\u63a7\u5236\u5668\u4e2d Form Request \u7684\u5f15\u5165</li> <li>\u786e\u4fdd <code>authorize()</code> \u8fd4\u56de true</li> <li>\u5bf9\u4e8e\u66f4\u65b0\u65f6\u7684\u552f\u4e00\u6027\uff0c\u8bf7\u4f7f\u7528 <code>Rule::unique</code></li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/7/","title":"\u7b2c 2.7 \u7ae0\uff1a\u9519\u8bef\u5904\u7406","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 40 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/7/#1","title":"1. \u4e3a\u4ec0\u4e48\u6807\u51c6\u9519\u8bef\u5f88\u7cdf\u7cd5\uff1f","text":"<p>\u5982\u679c\u60a8\u7684 Laravel \u5e94\u7528\u7a0b\u5e8f\u53d1\u751f\u9519\u8bef\uff08\u4f8b\u5982\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u627e\u4e0d\u5230\u8bb0\u5f55\uff09\uff0c\u800c\u60a8\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u5904\u7406\uff0c\u7528\u6237\u5c06\u4f1a\u770b\u5230\u4e00\u4e2a\u5305\u542b\u8c03\u8bd5\u4fe1\u606f\u7684\u5de8\u5927 HTML \u9875\u9762\uff0c\u6216\u8005\u4e00\u6761\u4e0d\u5177\u4fe1\u606f\u91cf\u7684\u201c\u670d\u52a1\u5668\u9519\u8bef\u201d\u6d88\u606f\u3002</p> <p>\u5bf9\u4e8e API \u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u573a\u707e\u96be\u3002\u60a8\u7684\u524d\u7aef\u5e94\u7528\u7a0b\u5e8f\u671f\u671b\u63a5\u6536 JSON\uff0c\u800c\u4e0d\u662f HTML\u3002\u6211\u4eec\u7684\u4efb\u52a1\u662f\u62e6\u622a\u4efb\u4f55\u9519\u8bef\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u7ed3\u6784\u5316\u7684 JSON \u54cd\u5e94\u3002</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/7/#2-bootstrapappphp","title":"2. \u9519\u8bef\u4e2d\u592e\u8c03\u5ea6\u5668\uff1a<code>bootstrap/app.php</code>","text":"<p>\u5728\u65e7\u7248 Laravel \u4e2d\uff0c\u6709\u4e00\u4e2a\u7b28\u91cd\u7684 <code>App\\Exceptions\\Handler.php</code> \u6587\u4ef6\u3002\u5728 Laravel 11/12 \u4e2d\uff0c\u4e00\u5207\u90fd\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u548c\u4f18\u96c5\u3002\u9519\u8bef\u7ba1\u7406\u4e2d\u5fc3\u73b0\u5728\u76f4\u63a5\u4f4d\u4e8e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u6587\u4ef6\u4e2d \u2014 <code>bootstrap/app.php</code>\u3002</p> <p>\u6253\u5f00 <code>bootstrap/app.php</code>\u3002\u5728\u6700\u5e95\u90e8\uff0c\u60a8\u4f1a\u770b\u5230\u4e00\u4e2a <code>.withExceptions(...)</code> \u5757\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u201c\u4e2d\u592e\u8c03\u5ea6\u5668\u201d\u3002</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    -&gt;withRouting(\n        web: __DIR__.'/../routes/web.php',\n        api: __DIR__.'/../routes/api.php',\n        commands: __DIR__.'/../routes/console.php',\n        health: '/up',\n    )\n    -&gt;withMiddleware(function (Middleware $middleware) {\n        // ...\n    })\n    -&gt;withExceptions(function (Exceptions $exceptions) {\n        // &lt;-- \u6211\u4eec\u5c06\u5728\u8fd9\u91cc\u5de5\u4f5c\n    })-&gt;create();\n</code></pre>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/7/#3-404","title":"3. \u5904\u7406\u6700\u5e38\u89c1\u7684\u9519\u8bef\uff1a\u201c\u672a\u627e\u5230\u201d (404)","text":"<p>API \u4e2d\u6700\u5e38\u89c1\u7684\u9519\u8bef\u662f\u7528\u6237\u8bf7\u6c42\u4e0d\u5b58\u5728\u7684\u8d44\u6e90\uff08\u4f8b\u5982\uff0c<code>GET /api/planets/999</code>\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cLaravel \u4f1a\u751f\u6210 <code>ModelNotFoundException</code> \u6216 <code>NotFoundHttpException</code> \u5f02\u5e38\u3002\u8ba9\u6211\u4eec\u6765\u62e6\u622a\u5b83\u4eec\u3002</p> <p>\u5c06\u4ee5\u4e0b\u4ee3\u7801\u6dfb\u52a0\u5230 <code>.withExceptions(...)</code> \u5185\u90e8\uff1a</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // \u5f53\u5728\u6570\u636e\u5e93\u4e2d\u627e\u4e0d\u5230\u6a21\u578b\u65f6\uff0c\u62e6\u622a\u5f02\u5e38\n    $exceptions-&gt;render(function (ModelNotFoundException $e, Request $request) {\n        // \u68c0\u67e5\u8bf7\u6c42\u662f\u5426\u6765\u81ea\u6211\u4eec\u7684 API\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; '\u5728\u6211\u4eec\u7684\u94f6\u6cb3\u7cfb\u4e2d\u672a\u627e\u5230\u6240\u8bf7\u6c42\u7684\u8d44\u6e90\u3002'\n            ], 404);\n        }\n    });\n\n    // \u5f53\u8def\u7531\u672c\u8eab\u672a\u627e\u5230\u65f6\uff0c\u62e6\u622a\u5f02\u5e38\n    $exceptions-&gt;render(function (NotFoundHttpException $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'message' =&gt; '\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u5b87\u5b99\u8def\u7ebf\u3002'\n            ], 404);\n        }\n    });\n\n})-&gt;create();\n</code></pre> \u6211\u4eec\u505a\u4e86\u4ec0\u4e48\uff1f</p> <ol> <li><code>$exceptions-&gt;render(...)</code> \u2014 \u6211\u4eec\u6ce8\u518c\u4e86\u4e00\u4e2a\u201c\u5904\u7406\u7a0b\u5e8f\u201d\u3002\u5b83\u8868\u793a\uff1a\u201c\u5982\u679c\u53d1\u751f <code>ModelNotFoundException</code> \u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5219\u6267\u884c\u6b64\u4ee3\u7801\u3002\u201d</li> <li><code>if ($request-&gt;is('api/*'))</code> \u2014 \u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u68c0\u67e5\u3002\u5b83\u786e\u4fdd\u6211\u4eec\u6f02\u4eae\u7684 JSON \u54cd\u5e94\u4ec5\u53d1\u9001\u7ed9 API \u8bf7\u6c42\uff0c\u800c\u4e0d\u5f71\u54cd\u666e\u901a\u7684\u7f51\u9875\u3002</li> <li><code>return response()-&gt;json(...)</code> \u2014 \u6211\u4eec\u521b\u5efa\u5e76\u8fd4\u56de\u5e26\u6709 404 \u4ee3\u7801\u7684\u6807\u51c6\u5316 JSON \u54cd\u5e94\u3002</li> </ol> <p>\u73b0\u5728\uff0c\u5982\u679c\u60a8\u8bf7\u6c42\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u661f\u7403\uff0c\u60a8\u5c06\u83b7\u5f97\u4e00\u4e2a\u6574\u6d01\u7684 JSON\uff0c\u800c\u4e0d\u662f\u4e11\u964b\u7684 HTML \u9875\u9762\u3002</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/7/#4","title":"4. \u81ea\u5b9a\u4e49\u5f02\u5e38\uff1a\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u201c\u8b66\u62a5\u4fe1\u53f7\u201d","text":"<p>\u6709\u65f6\u6807\u51c6\u5f02\u5e38\u662f\u4e0d\u591f\u7684\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u4e1a\u52a1\u89c4\u5219\uff1a\u201c\u4e0d\u80fd\u5220\u9664\u2018\u5730\u7403\u2019\u8fd9\u4e2a\u661f\u7403\u201d\u3002\u5982\u679c\u6709\u4eba\u8bd5\u56fe\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u9519\u8bef\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u5f02\u5e38\u7c7b \u5728\u7ec8\u7aef\u4e2d\u6267\u884c\uff1a <pre><code>php artisan make:exception CannotDeleteEarthException\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u5728\u63a7\u5236\u5668\u4e2d\u4f7f\u7528\u5b83 \u6253\u5f00 <code>PlanetController.php</code> \u5e76\u4fee\u6539 <code>destroy</code> \u65b9\u6cd5\uff1a</p> <p><pre><code>&lt;?php\n// app/Http/Controllers/PlanetController.php\nuse App\\Exceptions\\CannotDeleteEarthException; // &lt;-- \u5bfc\u5165\u6211\u4eec\u7684\u5f02\u5e38\nuse App\\Models\\Planet;\n\npublic function destroy(Planet $planet)\n{\n    // \u6211\u4eec\u7684\u65b0\u4e1a\u52a1\u89c4\u5219\n    if (strtolower($planet-&gt;name) === '\u0437\u0435\u043c\u043b\u044f') {\n        throw new CannotDeleteEarthException('\u6839\u636e\u94f6\u6cb3\u6cd5\u5178\uff0c\u7981\u6b62\u5220\u9664\u5730\u7403\u3002');\n    }\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre> \u73b0\u5728\uff0c\u5982\u679c\u6709\u4eba\u8bd5\u56fe\u6267\u884c <code>DELETE /api/planets/1</code>\uff08\u5176\u4e2d 1 \u662f\u5730\u7403\u7684 ID\uff09\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u5c06\u629b\u51fa <code>CannotDeleteEarthException</code> \u5f02\u5e38\u3002</p> <p>\u6b65\u9aa4 3\uff1a\u6559 Laravel \u4f18\u96c5\u5730\u5904\u7406\u6211\u4eec\u7684\u201c\u8b66\u62a5\u201d \u56de\u5230 <code>bootstrap/app.php</code> \u5e76\u4e3a\u6211\u4eec\u7684\u5f02\u5e38\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5904\u7406\u7a0b\u5e8f\u3002</p> <p><pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // \u6211\u4eec\u7684\u65b0\u5904\u7406\u7a0b\u5e8f\n    $exceptions-&gt;render(function (CannotDeleteEarthException $e, Request $request) {\n        return response()-&gt;json([\n            'message' =&gt; '\u64cd\u4f5c\u88ab\u7981\u6b62\u3002',\n            'details' =&gt; $e-&gt;getMessage() // \u83b7\u53d6\u6211\u4eec\u901a\u8fc7 throw \u4f20\u9012\u7684\u6d88\u606f\n        ], 403); // 403 Forbidden - \u201c\u7981\u6b62\u8bbf\u95ee\u201d\n    });\n\n    // ... (404 \u7684\u5176\u4ed6\u5904\u7406\u7a0b\u5e8f)\n\n})-&gt;create();\n</code></pre> \u5b8c\u6210\uff01\u6211\u4eec\u521b\u5efa\u4e86\u81ea\u5df1\u547d\u540d\u7684\u5f02\u5e38\uff0c\u8fd9\u4f7f\u5f97\u63a7\u5236\u5668\u4ee3\u7801\u66f4\u6e05\u6670\uff0c\u5e76\u6559\u4f1a Laravel \u5c06\u5176\u8f6c\u6362\u4e3a\u5177\u6709\u6b63\u786e HTTP \u72b6\u6001\u7684\u6f02\u4eae\u3001\u6709\u610f\u4e49\u7684 JSON \u54cd\u5e94\u3002</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/7/#5-500-internal-server-error","title":"5. \u5904\u7406\u6240\u6709\u5176\u4ed6\u6545\u969c (500 Internal Server Error)","text":"<p>\u5982\u4f55\u5904\u7406\u6240\u6709\u5176\u4ed6\u610f\u5916\u9519\u8bef\uff1f\u4f8b\u5982\uff0c\u5982\u679c\u6570\u636e\u5e93\u5d29\u6e83\u6216\u4ee3\u7801\u4e2d\u5b58\u5728\u8bed\u6cd5\u9519\u8bef\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u6700\u5e38\u89c1\u7684\u9519\u8bef\u7c7b\u578b \u2014 <code>Throwable</code> \u2014 \u6ce8\u518c\u4e00\u4e2a\u201c\u901a\u7528\u201d\u5904\u7406\u7a0b\u5e8f\u3002</p> <p>\u91cd\u8981\u63d0\u793a\uff1a \u8fd9\u4e2a\u5904\u7406\u7a0b\u5e8f\u5fc5\u987b\u662f\u6700\u540e\u4e00\u4e2a\uff0c\u4ee5\u514d\u62e6\u622a\u6211\u4eec\u4e0a\u9762\u5b9a\u4e49\u7684\u66f4\u5177\u4f53\u7684\u5f02\u5e38\u3002</p> <pre><code>&lt;?php\n// bootstrap/app.php\n\n-&gt;withExceptions(function (Exceptions $exceptions) {\n\n    // ... (CannotDeleteEarthException \u548c 404 \u7684\u5904\u7406\u7a0b\u5e8f)\n\n    // \u901a\u7528\u5904\u7406\u7a0b\u5e8f\uff08\u5728\u6700\u672b\u5c3e\uff09\n    $exceptions-&gt;render(function (Throwable $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            // \u5728\u8c03\u8bd5\u6a21\u5f0f\u4e0b\uff0c\u53ef\u4ee5\u663e\u793a\u771f\u5b9e\u7684\u9519\u8bef\u6d88\u606f\n            $message = config('app.debug')\n                ? '\u53d1\u751f\u9519\u8bef\uff1a' . $e-&gt;getMessage()\n                : '\u8239\u4e0a\u53d1\u751f\u4e86\u610f\u5916\u9519\u8bef\u3002\u5de5\u7a0b\u5e08\u5df2\u88ab\u53ec\u96c6\u3002';\n\n            return response()-&gt;json(['message' =&gt; $message], 500);\n        }\n    });\n\n})-&gt;create();\n</code></pre> <p>\u73b0\u5728\uff0c\u4efb\u4f55\u201c\u672a\u77e5\u201d\u5f02\u5e38\u90fd\u5c06\u88ab\u5de7\u5999\u5730\u62e6\u622a\u5e76\u8f6c\u6362\u4e3a\u5e26\u6709 500 \u4ee3\u7801\u7684 JSON\uff0c\u800c\u4e0d\u4f1a\u7834\u574f\u60a8\u7684 API \u6216\u5411\u7528\u6237\u663e\u793a\u591a\u4f59\u7684\u4fe1\u606f\u3002</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/7/#6","title":"6. \u9519\u8bef\u65e5\u5fd7\u8bb0\u5f55\uff1a\u5b87\u5b99\u98de\u8239\u7684\u9ed1\u5323\u5b50","text":"<p><code>config/logging.php</code> \u4e2d\u7684\u65e5\u5fd7\u914d\u7f6e\uff1a <pre><code>&lt;?php\n'channels' =&gt; [\n    'space_api' =&gt; [\n        'driver' =&gt; 'daily',\n        'path' =&gt; storage_path('logs/space_api.log'),\n        'level' =&gt; 'error',\n        'days' =&gt; 14,\n    ],\n],\n</code></pre></p> <p>\u6dfb\u52a0\u65e5\u5fd7\u8bb0\u5f55\uff1a <pre><code>&lt;?php\ntry {\n    // \u6709\u9519\u8bef\u98ce\u9669\u7684\u4ee3\u7801\n} catch (Exception $e) {\n    Log::channel('space_api')-&gt;error('\u8bbf\u95ee\u661f\u7403\u65f6\u51fa\u9519', [\n        'exception' =&gt; $e,\n        'request' =&gt; request()-&gt;all(),\n        'user_id' =&gt; auth()-&gt;id()\n    ]);\n    throw $e;\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/7/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. \u201c\u661f\u7403\u672a\u627e\u5230\u201d\u7684 HTTP \u72b6\u6001\u7801\uff1a</p>  a) 400  b) 404  c) 500 <p>2. \u7528\u4e8e\u5168\u5c40\u9519\u8bef\u5904\u7406\u7684\u7c7b\uff1a</p>  a) Handler.php  b) ErrorController.php  c) Middleware/Error.php <p>3. \u521b\u5efa\u81ea\u5b9a\u4e49\u5f02\u5e38\u7684\u65b9\u6cd5\uff1a</p>  a) php artisan make:exception  b) php artisan exception:create  c) php artisan generate:exception <p>4. \u7528\u4e8e API \u9519\u8bef\u5355\u72ec\u65e5\u5fd7\u8bb0\u5f55\u7684\u901a\u9053\uff1a</p>  a) config/logging.php \u4e2d\u7684\u914d\u7f6e  b) .env \u4e2d\u7684\u53c2\u6570  c) \u63a7\u5236\u5668\u4e2d\u7684\u6307\u5b9a <p>5. \u521b\u5efa\u81ea\u5b9a\u4e49\u5f02\u5e38\u7684\u4e3b\u8981\u4f18\u52bf\uff1a</p>  a) \u63d0\u9ad8\u6027\u80fd  b) \u4e3a\u7279\u5b9a\u7684\u4e1a\u52a1\u573a\u666f\u521b\u5efa\u8bed\u4e49\u6e05\u6670\u7684\u9519\u8bef  c) \u81ea\u52a8\u6dfb\u52a0\u5230 .env \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u4e3a\u60a8\u7684 API \u914d\u5907\u4e86\u53ef\u9760\u7684\u6551\u63f4\u7cfb\u7edf\uff1a - \ud83d\udedf \u5168\u5c40\u6355\u83b7\u6807\u51c6\u9519\u8bef - \ud83e\ude90 \u5e26\u6709\u53ef\u7406\u89e3\u4ee3\u7801\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38 - \ud83d\udcdd \u6240\u6709\u9519\u8bef\u7edf\u4e00\u4f7f\u7528 JSON \u683c\u5f0f - \ud83d\udd0d \u8bb0\u5f55\u4e8b\u4ef6\u8be6\u60c5\u65e5\u5fd7 - \ud83d\udce1 \u4e0e\u76d1\u63a7\u7cfb\u7edf\u96c6\u6210</p> <p>\u5b87\u5b99\u98de\u8239\u5df2\u51c6\u5907\u597d\u5e94\u5bf9\u7d27\u6025\u60c5\u51b5\uff01 \u5728\u672c\u7ae0\u7684\u6700\u540e\u4e00\u8282\uff0c\u6211\u4eec\u5c06\u6d4b\u8bd5\u6240\u6709\u7cfb\u7edf\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ol> <li>\u521b\u5efa <code>PlanetNotFoundException</code> \u5f02\u5e38</li> <li>\u5728 <code>-&gt;withExceptions</code> \u4e2d\u6dfb\u52a0 404 \u9519\u8bef\u5904\u7406</li> <li>\u6d4b\u8bd5\u5bf9\u4e0d\u5b58\u5728\u884c\u661f\u7684\u8bf7\u6c42</li> </ol> <p>\u26a0\ufe0f \u5982\u679c\u9519\u8bef\u672a\u88ab\u6355\u83b7\uff1a</p> <ul> <li>\u786e\u4fdd <code>is('api/*')</code> \u4e0e\u60a8\u7684\u8def\u7531\u5339\u914d</li> <li>\u68c0\u67e5 <code>register()</code> \u4e2d\u7684\u5904\u7406\u7a0b\u5e8f\u987a\u5e8f</li> <li>\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u5f02\u5e38\uff0c\u8bf7\u4f7f\u7528 <code>throw new</code></li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/8/","title":"\u7b2c 2.8 \u7ae0\uff1aAPI \u6d4b\u8bd5","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 1 \u5c0f\u65f6</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/8/#1","title":"1. \u4e3a\u4ec0\u4e48\u9700\u8981\u6d4b\u8bd5\uff1f","text":"<p>\u60f3\u8c61\u4e00\u4e0b\u60a8\u5efa\u9020\u4e86\u4e00\u8258\u5b87\u5b99\u98de\u8239\u3002\u5728\u5c06\u5176\u9001\u5f80\u706b\u661f\u4e4b\u524d\uff0c\u60a8\u4f1a\u5728\u5730\u7403\u4e0a\u8fdb\u884c\u6570\u5343\u6b21\u68c0\u67e5\u3002\u7f16\u7a0b\u4e2d\u7684\u6d4b\u8bd5\u4e5f\u662f\u5982\u6b64\u3002\u5b83\u4eec\uff1a</p> <ul> <li>\u63d0\u4f9b\u4fe1\u5fc3\uff1a \u60a8\u53ef\u4ee5\u66f4\u6539\u4ee3\u7801\uff0c\u5982\u679c\u6d4b\u8bd5\u901a\u8fc7\uff0c\u5c31\u610f\u5473\u7740\u60a8\u6ca1\u6709\u7834\u574f\u4efb\u4f55\u4e1c\u897f\u3002</li> <li>\u8282\u7701\u65f6\u95f4\uff1a \u65e0\u9700\u5728\u6bcf\u6b21\u66f4\u6539\u540e\u624b\u52a8\u5728 Postman \u4e2d\u201c\u70b9\u51fb\u201d\u6240\u6709\u5185\u5bb9\uff0c\u60a8\u53ea\u9700\u8fd0\u884c\u4e00\u4e2a\u547d\u4ee4\uff0c\u5b83\u5c31\u4f1a\u5728\u51e0\u79d2\u949f\u5185\u4e3a\u60a8\u68c0\u67e5\u6240\u6709\u5185\u5bb9\u3002</li> <li>\u5145\u5f53\u6587\u6863\uff1a \u826f\u597d\u7684\u6d4b\u8bd5\u4f1a\u663e\u793a\u60a8\u7684 API \u5e94\u8be5\u5982\u4f55\u5de5\u4f5c\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/8/#2","title":"2. \u8bbe\u7f6e\u6d4b\u8bd5\u201c\u5b9e\u9a8c\u5ba4\u201d","text":"<p>Laravel \u8ba9\u6d4b\u8bd5\u8bbe\u7f6e\u53d8\u5f97\u5f02\u5e38\u7b80\u5355\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f7f\u7528\u72ec\u7acb\u7684\u914d\u7f6e\uff0c\u4ee5\u907f\u514d\u5f71\u54cd\u60a8\u7684\u4e3b\u6570\u636e\u5e93\u3002</p> <p>\u6d4b\u8bd5\u6570\u636e\u5e93\uff1a \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cLaravel \u4f7f\u7528\u5185\u5b58\u4e2d\u7684\u6570\u636e\u5e93 (<code>:memory:</code>)\u3002\u8fd9\u662f\u6700\u5feb\u7684\u65b9\u5f0f\uff0c\u56e0\u4e3a\u65e0\u9700\u5199\u5165\u78c1\u76d8\u3002\u6570\u636e\u5e93\u5728\u6d4b\u8bd5\u524d\u521b\u5efa\uff0c\u5e76\u5728\u6d4b\u8bd5\u540e\u9500\u6bc1\u3002\u6211\u4eec\u751a\u81f3\u4e0d\u9700\u8981\u4e3a\u6b64\u8fdb\u884c\u4efb\u4f55\u914d\u7f6e\uff01</p> <p>\u521b\u5efa\u6d4b\u8bd5\u6587\u4ef6\uff1a \u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u884c\u661f\u76f8\u5173\u6d4b\u8bd5\u7684\u6587\u4ef6\u3002</p> <pre><code>php artisan make:test PlanetApiTest\n</code></pre> <p>\u6b64\u547d\u4ee4\u5c06\u521b\u5efa\u6587\u4ef6 <code>tests/Feature/PlanetApiTest.php</code>\u3002\u5355\u8bcd <code>Feature</code> \u610f\u5473\u7740\u6211\u4eec\u5c06\u6d4b\u8bd5\u6574\u4f53\u529f\u80fd\uff08\u4f8b\u5982\uff0c\u201c\u7528\u6237\u80fd\u5426\u521b\u5efa\u884c\u661f\uff1f\u201d\uff09\uff0c\u800c\u4e0d\u662f\u5355\u4e2a\u5c0f\u7c7b\u3002</p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/8/#3","title":"3. \u6d4b\u8bd5\u5256\u6790\uff1a\u51c6\u5907\u3001\u6267\u884c\u3001\u9a8c\u8bc1","text":"<p>\u6253\u5f00 <code>tests/Feature/PlanetApiTest.php</code>\u3002\u6211\u4eec\u5c06\u5728\u5176\u4e2d\u7f16\u5199\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u3002\u4e00\u4e2a\u597d\u7684\u6d4b\u8bd5\u603b\u662f\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff08Arrange, Act, Assert\uff09\u3002</p> <p><pre><code>&lt;?php\n\nnamespace Tests\\Feature;\n\nuse App\\Models\\Planet; // \u4e0d\u8981\u5fd8\u8bb0\u5bfc\u5165\u6a21\u578b\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase; // \u6700\u91cd\u8981\u7684\u5de5\u5177\uff01\nuse Tests\\TestCase;\n\nclass PlanetApiTest extends TestCase\n{\n    // \u8fd9\u4e2a trait \u201c\u795e\u5947\u5730\u201d\u6e05\u9664\u5e76\u91cd\u65b0\u521b\u5efa\n    // \u6211\u4eec\u7684\u6d4b\u8bd5\u6570\u636e\u5e93\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u4e4b\u524d\u3002\n    // \u8fd9\u786e\u4fdd\u4e86\u6d4b\u8bd5\u4e4b\u95f4\u4e92\u4e0d\u5f71\u54cd\u3002\n    use RefreshDatabase;\n\n    /**\n     * \u6d4b\u8bd5\uff1a\u83b7\u53d6\u884c\u661f\u5217\u8868\u7684\u7aef\u70b9\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\u3002\n     * \u6d4b\u8bd5\u540d\u79f0\u5e94\u8be5\u6709\u610f\u4e49\uff01\n     */\n    public function test_can_get_all_planets(): void\n    {\n        // 1. \u51c6\u5907 (Arrange)\n        // \u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u6570\u636e\u5e93\u4e2d\u521b\u5efa 3 \u4e2a\u6a21\u62df\u884c\u661f\n        // \u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u521b\u5efa\u7684\u5de5\u5382\u3002\n        Planet::factory()-&gt;count(3)-&gt;create();\n\n        // 2. \u6267\u884c (Act)\n        // \u6a21\u62df\u5bf9\u6211\u4eec API \u7684\u771f\u5b9e GET \u8bf7\u6c42\u3002\n        $response = $this-&gt;getJson('/api/planets');\n\n        // 3. \u9a8c\u8bc1 (Assert)\n        // \u68c0\u67e5\u4e00\u5207\u662f\u5426\u6309\u9884\u671f\u8fdb\u884c\u3002\n        $response-&gt;assertStatus(200); // \u671f\u671b\u670d\u52a1\u5668\u54cd\u5e94 \"200 OK\"\n        $response-&gt;assertJsonCount(3); // \u671f\u671b\u54cd\u5e94\u4e2d\u6b63\u597d\u6709 3 \u4e2a\u884c\u661f\n    }\n}\n</code></pre> \u5173\u952e\u70b9\uff1a</p> <ul> <li><code>use RefreshDatabase</code>\uff1a\u8fd9\u4e2a trait \u662f\u60a8\u6700\u597d\u7684\u670b\u53cb\u3002\u5b83\u786e\u4fdd\u6bcf\u4e2a\u6d4b\u8bd5\u90fd\u4ece\u201c\u5e72\u51c0\u7684\u753b\u5e03\u201d\u5f00\u59cb\uff0c\u62e5\u6709\u4e00\u4e2a\u7a7a\u7684\u6570\u636e\u5e93\u3002</li> <li><code>Planet::factory()</code>\uff1a\u5de5\u5382\u975e\u5e38\u9002\u5408\u521b\u5efa\u6d4b\u8bd5\u6570\u636e\u3002</li> <li><code>$this-&gt;getJson()</code>\uff1a\u8fd9\u662f Laravel \u7528\u4e8e\u5728\u6d4b\u8bd5\u5185\u90e8\u53d1\u9001 API \u8bf7\u6c42\u7684\u7279\u6b8a\u65b9\u6cd5\u3002</li> <li><code>assert...()</code>\uff1a\u8fd9\u4e9b\u662f\u201c\u65ad\u8a00\u201d\u6216\u201c\u68c0\u67e5\u201d\u3002\u5982\u679c\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u6ca1\u6709\u6267\u884c\uff0c\u6d4b\u8bd5\u5c31\u4f1a\u5931\u8d25\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/8/#4-crud","title":"4. \u6d4b\u8bd5\u57fa\u672c\u64cd\u4f5c (CRUD)","text":"<p>\u8ba9\u6211\u4eec\u7f16\u5199\u7528\u4e8e\u521b\u5efa\u3001\u66f4\u65b0\u548c\u5220\u9664\u884c\u661f\u7684\u6d4b\u8bd5\u3002</p> <p>A. \u521b\u5efa\u884c\u661f\u6d4b\u8bd5 (POST)</p> <pre><code>&lt;?php\npublic function test_can_create_a_planet(): void\n{\n    // 1. \u51c6\u5907\uff1a\u51c6\u5907\u65b0\u884c\u661f\u7684\u6570\u636e\n    $planetData = [\n        'name' =&gt; 'Kepler-186f',\n        'description' =&gt; '\u041f\u0435\u0440\u0432\u0430\u044f \u044d\u043a\u0437\u043e\u043f\u043b\u0430\u043d\u0435\u0442\u0430 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c \u0441 \u0417\u0435\u043c\u043b\u044e \u0432 \u043e\u0431\u0438\u0442\u0430\u0435\u043c\u043e\u0439 \u0437\u043e\u043d\u0435.',\n        'size_km' =&gt; 14000,\n        'solar_system' =&gt; 'Kepler-186'\n    ];\n\n    // 2. \u6267\u884c\uff1a\u53d1\u9001\u5e26\u6709\u6570\u636e\u7684 POST \u8bf7\u6c42\n    $response = $this-&gt;postJson('/api/planets', $planetData);\n\n    // 3. \u9a8c\u8bc1\n    $response-&gt;assertStatus(201); // \u671f\u671b\u72b6\u6001 \"201 Created\"\n    $response-&gt;assertJsonFragment(['name' =&gt; 'Kepler-186f']); // \u68c0\u67e5\u54cd\u5e94\u4e2d\u662f\u5426\u5b58\u5728\u521b\u5efa\u7684\u540d\u79f0\n\n    // \u6700\u91cd\u8981\u7684\u68c0\u67e5\uff1a\u6570\u636e\u662f\u5426\u771f\u7684\u8fdb\u5165\u4e86\u6570\u636e\u5e93\uff1f\n    $this-&gt;assertDatabaseHas('planets', [\n        'name' =&gt; 'Kepler-186f'\n    ]);\n}\n</code></pre> <p>B. \u5220\u9664\u884c\u661f\u6d4b\u8bd5 (DELETE) <pre><code>&lt;?php\npublic function test_can_delete_a_planet(): void\n{\n    // 1. \u51c6\u5907\uff1a\u521b\u5efa\u8981\u5220\u9664\u7684\u884c\u661f\n    $planet = Planet::factory()-&gt;create();\n\n    // 2. \u6267\u884c\uff1a\u53d1\u9001 DELETE \u8bf7\u6c42\n    $response = $this-&gt;deleteJson(\"/api/planets/{$planet-&gt;id}\");\n\n    // 3. \u9a8c\u8bc1\n    $response-&gt;assertStatus(204); // \u671f\u671b \"204 No Content\" - \u6210\u529f\u5220\u9664\n\n    // \u68c0\u67e5\u8bb0\u5f55\u662f\u5426\u786e\u5b9e\u4ece\u6570\u636e\u5e93\u4e2d\u6d88\u5931\n    $this-&gt;assertDatabaseMissing('planets', [\n        'id' =&gt; $planet-&gt;id\n    ]);\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/8/#5","title":"5. \u6d4b\u8bd5\u201c\u7cdf\u7cd5\u201d\u573a\u666f","text":"<p>\u6d4b\u8bd5\u6210\u529f\u6848\u4f8b\u662f\u597d\u4e8b\u3002\u4f46\u66f4\u91cd\u8981\u7684\u662f\u6d4b\u8bd5\u9519\u8bef\uff01</p> <p>A. \u9a8c\u8bc1\u9519\u8bef\u6d4b\u8bd5 <pre><code>&lt;?php\npublic function test_creation_fails_with_invalid_data(): void\n{\n    // 2. \u6267\u884c\uff1a\u53d1\u9001\u660e\u663e\u4e0d\u6b63\u786e\u7684\u6570\u636e\n    $response = $this-&gt;postJson('/api/planets', ['name' =&gt; '']); // \u7a7a\u540d\u79f0\n\n    // 3. \u9a8c\u8bc1\n    $response-&gt;assertStatus(422); // \u671f\u671b \"422 Unprocessable Entity\"\n    $response-&gt;assertJsonValidationErrors('name'); // \u671f\u671b\u9519\u8bef\u51fa\u73b0\u5728 'name' \u5b57\u6bb5\u4e2d\n}\n</code></pre></p> <p>B. \u201c\u672a\u627e\u5230\u201d\u6d4b\u8bd5 (404) <pre><code>&lt;?php\npublic function test_returns_404_for_non_existent_planet(): void\n{\n    // 2. \u6267\u884c\uff1a\u8bf7\u6c42\u4e00\u4e2a\u4e0d\u5b58\u5728 ID \u7684\u884c\u661f\n    $response = $this-&gt;getJson('/api/planets/99999');\n\n    // 3. \u9a8c\u8bc1\n    $response-&gt;assertStatus(404); // \u671f\u671b \"404 Not Found\"\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/8/#6","title":"6. \u8fd0\u884c\u6d4b\u8bd5","text":"<p>\u73b0\u5728\uff0c\u6d4b\u8bd5\u5df2\u7f16\u5199\u5b8c\u6210\uff0c\u8fd0\u884c\u5b83\u4eec\u975e\u5e38\u7b80\u5355\u3002\u5728\u7ec8\u7aef\u4e2d\u6267\u884c\uff1a</p> <pre><code>php artisan test\n</code></pre> <p>Laravel \u5c06\u627e\u5230\u60a8\u6240\u6709\u7684\u6d4b\u8bd5\u5e76\u9010\u4e00\u6267\u884c\u3002\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u60a8\u5c06\u770b\u5230\u7eff\u8272\u7684\u8f93\u51fa\u3002\u5982\u679c\u67d0\u4e2a\u6d4b\u8bd5\u5931\u8d25\uff0c\u60a8\u5c06\u770b\u5230\u7ea2\u8272\u7684\u8f93\u51fa\u4ee5\u53ca\u8be6\u7ec6\u7684\u9519\u8bef\u63cf\u8ff0\uff0c\u8fd9\u5c06\u4f7f\u60a8\u80fd\u591f\u5feb\u901f\u4fee\u590d\u5b83\u3002</p> <p>\u8981\u4ec5\u8fd0\u884c\u4e00\u4e2a\u7279\u5b9a\u6587\u4ef6\uff1a <pre><code>php artisan test tests/Feature/PlanetApiTest.php\n</code></pre></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/8/#8-code-coverage","title":"8. \u4ee3\u7801\u8986\u76d6\u7387 (Code Coverage)","text":"<p>\u6b65\u9aa4 1\uff1a\u5b89\u88c5 Xdebug</p> <p>\u4e3a\u4e86\u6536\u96c6\u4ee3\u7801\u8986\u76d6\u7387\u4fe1\u606f\uff0c\u9700\u8981 PHP \u6269\u5c55 \u2014 Xdebug\u3002</p> <p>\u5c06\u60a8\u7684 <code>php -i</code> \u53d1\u9001\u5230\u5411\u5bfc\u5e76\u6309\u7167\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\u6b65\u9aa4 2\uff1a\u914d\u7f6e <code>phpunit.xml</code> <pre><code>&lt;phpunit ... &gt;\n    &lt;coverage processUncoveredFiles=\"true\"&gt;\n        &lt;include&gt;\n            &lt;directory suffix=\".php\"&gt;./app&lt;/directory&gt;\n        &lt;/include&gt;\n    &lt;/coverage&gt;\n&lt;/phpunit&gt;\n</code></pre></p> <p>\u6b65\u9aa4 3\uff1a\u8fd0\u884c\u5e76\u751f\u6210\u62a5\u544a <pre><code>php artisan test --coverage-html=coverage\n</code></pre> \u62a5\u544a\uff1a\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 <code>coverage/index.html</code></p>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/8/#9-postman","title":"9. \u4e0e Postman \u96c6\u6210","text":"<p>\u901a\u8fc7 Newman \u81ea\u52a8\u5316\uff1a</p> <ol> <li>\u5c06 Postman \u96c6\u5408\u5bfc\u51fa\u5230 <code>tests/Postman/SpaceApi.postman_collection.json</code></li> <li>\u5b89\u88c5 Newman\uff1a <pre><code>npm install -g newman\n</code></pre></li> <li>\u5c06\u811a\u672c\u6dfb\u52a0\u5230 <code>composer.json</code>\uff1a <pre><code>\"scripts\": {\n    \"test:postman\": \"newman run tests/Postman/SpaceApi.postman_collection.json\"\n}\n</code></pre></li> <li>\u8fd0\u884c\uff1a <pre><code>composer test:postman\n</code></pre></li> </ol>"},{"location":"zh/%E7%AC%AC2%E7%AB%A0%20-%20%E5%9C%A8Laravel%E4%B8%8A%E5%88%9B%E5%BB%BAAPI/8/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. \u521b\u5efa\u6d4b\u8bd5\u7c7b\u7684\u547d\u4ee4\uff1a</p>  a) php artisan make:test  b) php artisan generate:test  c) php artisan test:create <p>2. RefreshDatabase trait \u7528\u4e8e\uff1a</p>  a) \u6d4b\u8bd5\u540e\u6e05\u9664\u6570\u636e\u5e93  b) \u7528\u6d4b\u8bd5\u6570\u636e\u586b\u5145\u6570\u636e\u5e93  c) \u521b\u5efa\u6570\u636e\u5e93\u7ed3\u6784 <p>3. \u68c0\u67e5 JSON \u7ed3\u6784\u7684\u65b9\u6cd5\uff1a</p>  a) assertJsonFormat()  b) assertJsonStructure()  c) assertJsonSchema() <p>4. Laravel \u4e2d\u7684\u5de5\u5382\u7528\u4e8e\uff1a</p>  a) \u751f\u6210\u6d4b\u8bd5\u6570\u636e  b) \u521b\u5efa\u8fc1\u79fb  c) \u5904\u7406\u9519\u8bef <p>5. \u4ece CLI \u8fd0\u884c Postman \u96c6\u5408\u7684\u5de5\u5177\uff1a</p>  a) Newman  b) Postman CLI  c) Artisan \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a \u60a8\u5df2\u5b8c\u6210\u5b8c\u6574\u7684\u98de\u884c\u524d\u6d4b\u8bd5\u5468\u671f\uff01\u73b0\u5728\u60a8\u7684API\u53ef\u4ee5\uff1a</p> <ul> <li>\u2705 \u8f7b\u677e\u914d\u7f6e\u6d4b\u8bd5\u73af\u5883</li> <li>\ud83d\udee1\ufe0f \u6309\u7167\u201c\u51c6\u5907-\u64cd\u4f5c-\u9a8c\u8bc1\u201d\u539f\u5219\u7f16\u5199\u6d4b\u8bd5</li> <li>\ud83d\udcca \u6d4b\u8bd5\u6210\u529f\u573a\u666f (CRUD) \u548c\u9519\u8bef (\u9a8c\u8bc1, 404)</li> <li>\ud83d\udd01 \u4f7f\u7528\u4e00\u6761\u547d\u4ee4\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5e76\u5bf9\u4ee3\u7801\u5145\u6ee1\u4fe1\u5fc3</li> </ul> <p>\u5b87\u5b99\u98de\u8239\u5df2\u51c6\u5907\u5c31\u7eea\uff0c\u53ef\u4ee5\u53d1\u5c04\uff01 \u60a8\u5df2\u5b8c\u6210Laravel API\u521b\u5efa\u90e8\u5206\u3002</p> <p>\ud83d\udccc \u6700\u7ec8\u68c0\u67e5\uff1a</p> <ol> <li>\u8fd0\u884c <code>php artisan test</code></li> <li>\u786e\u4fdd\u6240\u6709\u6d4b\u8bd5\u901a\u8fc7\uff08\u7eff\u706f\uff01\uff09</li> <li>\u68c0\u67e5\u8986\u76d6\u7387\u62a5\u544a</li> </ol> <p>\u26a0\ufe0f \u5982\u679c\u6d4b\u8bd5\u5931\u8d25\uff1a</p> <ul> <li>\u901a\u8fc7 Postman \u68c0\u67e5 API \u7684\u8fd0\u884c\u60c5\u51b5</li> <li>\u786e\u4fdd\u6d4b\u8bd5\u6570\u636e\u5e93\u5df2\u914d\u7f6e</li> <li>\u4f7f\u7528 <code>dd($response-&gt;content())</code> \u8fdb\u884c\u8c03\u8bd5</li> </ul> <p>\u606d\u559c\u60a8\u5b8c\u6210\u7b2c2\u7ae0\uff01 \u60a8\u4e0d\u4ec5\u521b\u5efa\u4e86\u4e00\u4e2a API\uff0c\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a\u53ef\u9760\u4e14\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u201c\u5b87\u5b99\u98de\u8239\u201d\uff0c\u53ef\u7528\u4e8e\u672a\u6765\u7684\u4efb\u52a1\u3002</p> <p>\ud83c\udf0c \u540e\u7eed\u6b65\u9aa4\uff1a</p> <ol> <li>\u914d\u7f6e\u8ba4\u8bc1 (Sanctum)</li> <li>\u4f7f\u7528 Swagger \u6587\u6863\u5316 API</li> <li>\u5728\u670d\u52a1\u5668\u4e0a\u90e8\u7f72 (Forge, VPS)</li> <li>\u4f7f\u7528 Vue/React \u7f16\u5199\u524d\u7aef</li> </ol> <p>\u795d\u60a8\u7684\u592a\u7a7a\u4efb\u52a1\u53d1\u5c04\u6210\u529f\uff01\u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ece\u5934\u5f00\u59cb\u7f16\u5199 API \ud83d\ude80</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/1/","title":"\u7b2c 3.1 \u7ae0\uff1a\u5b89\u88c5 FastAPI \u5e76\u914d\u7f6e\u73af\u5883","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 45 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/1/#1-fastapiapi","title":"1. \u4ec0\u4e48\u662f FastAPI\uff1fAPI \u7684\u8d85\u5149\u901f\u5f15\u64ce","text":"<p>\u5982\u679c Flask \u662f\u7075\u6d3b\u7684\u4fa6\u5bdf\u63a2\u6d4b\u5668\uff0cDjango \u662f\u5de8\u5927\u7684\u822a\u6bcd\uff0c\u90a3\u4e48 FastAPI \u5c31\u662f\u8d85\u5149\u901f\u6218\u6597\u673a\u3002</p> <p>FastAPI \u662f\u4e00\u4e2a\u73b0\u4ee3\u3001\u9ad8\u6027\u80fd\u7684 Web \u6846\u67b6\uff0c\u7528\u4e8e\u4f7f\u7528 Python 3.7+ \u6784\u5efa API\u3002\u5b83\u7684\u4e3b\u8981\u4f18\u52bf\u5305\u62ec\uff1a</p> <ul> <li>\u901f\u5ea6\uff1a Python \u4e2d\u6700\u5feb\u7684\u6846\u67b6\u4e4b\u4e00\uff0c\u53ef\u4e0e NodeJS \u548c Go \u5ab2\u7f8e\u3002</li> <li>\u7b80\u6d01\uff1a \u6781\u7b80\u4e14\u76f4\u89c2\u7684\u8bed\u6cd5\u3002</li> <li>\u81ea\u52a8\u6587\u6863\uff1a \u81ea\u52a8\u4e3a\u60a8\u7684 API \u751f\u6210\u4ea4\u4e92\u5f0f\u6587\u6863\u3002</li> <li>\u7c7b\u578b\u5316\uff1a \u5229\u7528 Python \u6807\u51c6\u7c7b\u578b\u63d0\u793a\u8fdb\u884c\u6570\u636e\u9a8c\u8bc1\u3001\u81ea\u52a8\u8865\u5168\u548c\u6587\u6863\u751f\u6210\u3002</li> </ul> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a</p> <p>FastAPI \u2014 \u5c31\u50cf\u60a8 API \u98de\u8239\u7684\u201c\u8d85\u5149\u901f\u5f15\u64ce\u201d\u3002\u5b83\u57fa\u4e8e\u4e24\u79cd\u6280\u672f\uff1a</p> <ul> <li>Starlette\uff08\u6218\u6597\u673a\u5e95\u76d8\uff09\u2014\u2014 \u63d0\u4f9b\u5f02\u6b65\u548c\u5353\u8d8a\u7684\u6027\u80fd\u3002</li> <li>Pydantic\uff08\u673a\u8f7d\u8ba1\u7b97\u673a\uff09\u2014\u2014 \u8d1f\u8d23\u6570\u636e\u9a8c\u8bc1\u548c\u914d\u7f6e\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/1/#2","title":"2. \u51c6\u5907\u53d1\u5c04\u53f0\uff1a\u865a\u62df\u73af\u5883","text":"<p>\u5728\u5efa\u9020\u6211\u4eec\u7684\u6218\u6597\u673a\u4e4b\u524d\uff0c\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65e0\u83cc\u7ec4\u88c5\u5b9e\u9a8c\u5ba4\u3002\u5728 Python \u4e2d\uff0c\u8fd9\u901a\u8fc7\u865a\u62df\u73af\u5883\u5b9e\u73b0\u3002</p> <p>\u4e3a\u4ec0\u4e48\u9700\u8981\u5b83\uff1f \u4e3a\u4e86\u786e\u4fdd\u6211\u4eec\u9879\u76ee\u7684\u4f9d\u8d56\u9879\uff08\u5f15\u64ce\u3001\u5bfc\u822a\u7cfb\u7edf\uff09\u4e0d\u4f1a\u4e0e\u60a8\u8ba1\u7b97\u673a\u4e0a\u7684\u5176\u4ed6\u9879\u76ee\u51b2\u7a81\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u521b\u5efa\u865a\u62df\u73af\u5883 \u5728\u60a8\u7684\u9879\u76ee\u6587\u4ef6\u5939\uff08\u4f8b\u5982 <code>C:\\Projects\\FastAPI_Fleet</code>\uff09\u4e2d\u6253\u5f00\u7ec8\u7aef\u5e76\u6267\u884c\uff1a</p> <p><pre><code>python -m venv venv\n</code></pre> \u6b64\u547d\u4ee4\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a <code>venv</code> \u7684\u6587\u4ef6\u5939\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u72ec\u7acb\u7684 Python \u7248\u672c\u3002</p> <p>\u6b65\u9aa4 2\uff1a\u6fc0\u6d3b\u5b9e\u9a8c\u5ba4\u7684\u201c\u529b\u573a\u201d</p> <ul> <li>Windows (PowerShell):</li> </ul> <p><pre><code>.\\venv\\Scripts\\Activate.ps1\n</code></pre> \uff08\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u53ef\u80fd\u9700\u8981\u5141\u8bb8\u6267\u884c\u811a\u672c\uff1a<code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process</code>\uff09</p> <ul> <li>Windows (CMD):</li> </ul> <pre><code>.\\venv\\Scripts\\activate.bat\n</code></pre> <ul> <li>macOS / Linux:</li> </ul> <p><pre><code>source venv/bin/activate\n</code></pre> \u6fc0\u6d3b\u540e\uff0c\u7ec8\u7aef\u884c\u9996\u5c06\u51fa\u73b0 <code>(venv)</code>\u3002\u8fd9\u610f\u5473\u7740\u60a8\u5df2\u8fdb\u5165\u60a8\u7684\u5b9e\u9a8c\u5ba4\uff01</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/1/#3-fastapi-uvicorn","title":"3. \u5b89\u88c5\u5f15\u64ce\uff1aFastAPI \u548c Uvicorn","text":"<p>\u73b0\u5728\u6211\u4eec\u5c06\u5b89\u88c5\u4e24\u4e2a\u5173\u952e\u7ec4\u4ef6\uff1a</p> <ul> <li>fastapi\uff1a \u6846\u67b6\u672c\u8eab\u3002</li> <li>uvicorn\uff1a \u95ea\u7535\u822c\u7684 ASGI \u670d\u52a1\u5668\uff0c\u5b83\u5c06\u201c\u542f\u52a8\u201d\u6211\u4eec\u7684\u5f15\u64ce\u3002</li> </ul> <p>\u5728\u5df2\u6fc0\u6d3b\u7684\u73af\u5883\u4e2d\u6267\u884c\uff1a <pre><code>pip install \"fastapi[all]\"\n</code></pre></p> <p>\ud83d\udca1 \u4e3a\u4ec0\u4e48\u662f <code>[all]</code>\uff1f \u8fd9\u5c06\u5b89\u88c5 <code>fastapi</code>\u3001<code>uvicorn</code> \u4ee5\u53ca\u5176\u4ed6\u6709\u7528\u7684\u5305\uff08\u4f8b\u5982\uff0c\u7528\u4e8e\u652f\u6301 WebSocket \u548c Jinja2\uff09\uff0c\u8fd9\u4e9b\u5728\u672a\u6765\u7684\u4efb\u52a1\u4e2d\u4f1a\u6d3e\u4e0a\u7528\u573a\u3002</p> <p>\u5b89\u88c5\u9a8c\u8bc1\uff1a <pre><code>pip freeze\n</code></pre> \u60a8\u5e94\u8be5\u5728\u5217\u8868\u4e2d\u770b\u5230 <code>fastapi</code>\u3001<code>pydantic</code>\u3001<code>starlette</code>\u3001<code>uvicorn</code> \u53ca\u5176\u4ed6\u5305\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/1/#4-mainpy","title":"4. \u9996\u6b21\u63a5\u89e6\uff1a<code>main.py</code> \u6587\u4ef6","text":"<p>\u5728\u9879\u76ee\u6839\u76ee\u5f55\u521b\u5efa <code>main.py</code> \u6587\u4ef6\u2014\u2014\u8fd9\u5c06\u662f\u6211\u4eec API \u7684\u4e2d\u592e\u63a7\u5236\u53f0\u3002</p> <p>\u5728 <code>main.py</code> \u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a <pre><code>from fastapi import FastAPI\n\n# \u521b\u5efa\u6211\u4eec API \u201c\u5b87\u5b99\u98de\u8239\u201d\u7684\u5b9e\u4f8b\napp = FastAPI()\n\n# \u5b9a\u4e49\u7b2c\u4e00\u4e2a\u201c\u505c\u9760\u8282\u70b9\u201d\uff08endpoint\uff09\n# \u8fd9\u662f\u6839 URL\uff1a/\n@app.get(\"/\")\ndef read_root():\n    \"\"\"\n    \u8fd9\u662f\u98de\u63a7\u4e2d\u5fc3\u7684\u6d88\u606f\uff0c\u6240\u6709\u8fde\u63a5\u5230\u4e3b\u7f51\u5173\u7684\u7528\u6237\u90fd\u80fd\u770b\u5230\u3002\n    \"\"\"\n    return {\"message\": \"\u6b22\u8fce\u6765\u5230\u5b87\u5b99\u8230\u961f\u63a7\u5236\u4e2d\u5fc3\uff01\"}\n</code></pre> - <code>@app.get(\"/\")</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u5b83\u544a\u8bc9 FastAPI\uff0c<code>read_root</code> \u51fd\u6570\u5e94\u8be5\u5904\u7406\u6839 URL (<code>/</code>) \u4e0a\u7684 <code>GET</code> \u8bf7\u6c42\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/1/#5","title":"5. \u70b9\u706b\uff01\u542f\u52a8\u670d\u52a1\u5668","text":"<p>\u662f\u65f6\u5019\u542f\u52a8\u6211\u4eec\u7684\u8d85\u5149\u901f\u5f15\u64ce\u4e86\uff01\u5728\u7ec8\u7aef\uff08\u5df2\u6fc0\u6d3b <code>venv</code>\uff09\u4e2d\u6267\u884c\uff1a <pre><code>uvicorn main:app --reload\n</code></pre> \u547d\u4ee4\u89e3\u6790\uff1a</p> <ul> <li><code>uvicorn</code>\uff1a\u542f\u52a8 Uvicorn \u670d\u52a1\u5668\u3002</li> <li><code>main</code>\uff1a<code>main.py</code> \u6587\u4ef6\uff08\u4e0d\u5e26 <code>.py</code>\uff09\u3002</li> <li><code>app</code>\uff1a\u5728 <code>main.py</code> \u4e2d\u521b\u5efa\u7684 <code>app = FastAPI()</code> \u5bf9\u8c61\u3002</li> <li><code>--reload</code>\uff1a\u201c\u81ea\u52a8\u9a7e\u9a76\u201d\u3002\u670d\u52a1\u5668\u5c06\u5728\u6bcf\u6b21\u4ee3\u7801\u66f4\u6539\u65f6\u81ea\u52a8\u91cd\u542f\u3002</li> </ul> <p>\u7ec8\u7aef\u9884\u671f\u8f93\u51fa\uff1a <pre><code>INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [12345]\nINFO:     Started server process [12346]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n</code></pre></p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/1/#6","title":"6. \u4e0e\u98de\u63a7\u4e2d\u5fc3\u5efa\u7acb\u8fde\u63a5","text":"<p>\u60a8\u7684 API \u73b0\u5df2\u4e0a\u7ebf\u5e76\u76d1\u542c <code>8000</code> \u7aef\u53e3\uff01</p> <p>\u6b65\u9aa4 1\uff1a\u5728\u6d4f\u89c8\u5668\u4e2d\u68c0\u67e5</p> <p>\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u5730\u5740 <code>http://127.0.0.1:8000</code>\u3002\u60a8\u5e94\u8be5\u770b\u5230\uff1a <pre><code>{\n  \"message\": \"\u6b22\u8fce\u6765\u5230\u5b87\u5b99\u8230\u961f\u63a7\u5236\u4e2d\u5fc3\uff01\"\n}\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u5c55\u671b\u672a\u6765\uff08\u81ea\u52a8\u6587\u6863\uff09</p> <p>FastAPI \u5df2\u7ecf\u4e3a\u60a8\u51c6\u5907\u4e86\u4e24\u4efd\u793c\u7269\u3002\u6253\u5f00\u8fd9\u4e9b URL\uff1a</p> <ul> <li><code>http://127.0.0.1:8000/docs</code>\uff1a\u4ea4\u4e92\u5f0f Swagger UI \u6587\u6863\u3002</li> <li><code>http://127.0.0.1:8000/redoc</code>\uff1a\u66ff\u4ee3 ReDoc \u6587\u6863\u3002</li> </ul> <p>\u60a8\u5c06\u770b\u5230\u60a8\u7684\u7b2c\u4e00\u4e2a\u7aef\u70b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u6d4f\u89c8\u5668\u4e2d\u8fdb\u884c\u6d4b\u8bd5\uff01</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/1/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. FastAPI \u4ee5\u5176...\u800c\u95fb\u540d</p>  a) \u901f\u5ea6\u6162\u4f46\u53ef\u9760\u7684\u8fd0\u884c  b) \u9ad8\u6027\u80fd\u548c\u901f\u5ea6  c) \u4ec5\u4e0e Microsoft \u6570\u636e\u5e93\u96c6\u6210 <p>2. \u4e3a\u4ec0\u4e48\u9700\u8981\u865a\u62df\u73af\u5883 (`venv`)\uff1f</p>  a) \u4e3a\u4e86\u52a0\u901f Python \u7684\u8fd0\u884c  b) \u4e3a\u4e86\u9694\u79bb\u9879\u76ee\u4f9d\u8d56  c) \u4e3a\u4e86\u81ea\u52a8\u7f16\u5199\u6d4b\u8bd5 <p>3. \u672c\u8bfe\u7a0b\u4e2d\u7528\u4e8e\u8fd0\u884c FastAPI \u7684\u670d\u52a1\u5668\u662f\u4ec0\u4e48\uff1f</p>  a) Apache  b) Gunicorn  c) Uvicorn <p>4. \u547d\u4ee4 `uvicorn main:app --reload` \u610f\u5473\u7740\uff1a</p>  a) \u8fd0\u884c `app.py` \u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b `main` \u5bf9\u8c61  b) \u8fd0\u884c `main.py` \u6587\u4ef6\u4e2d\u7684 `app` \u5bf9\u8c61\uff0c\u5e76\u5728\u66f4\u6539\u65f6\u91cd\u65b0\u542f\u52a8  c) \u91cd\u542f\u8ba1\u7b97\u673a\u5e76\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f <p>5. FastAPI \u4e2d\u7684\u88c5\u9970\u5668 `@app.get(\"/\")` \u662f\u505a\u4ec0\u4e48\u7684\uff1f</p>  a) \u4ece `app.py` \u6587\u4ef6\u83b7\u53d6\u6570\u636e  b) \u5411\u5916\u90e8\u670d\u52a1\u5668\u53d1\u9001 GET \u8bf7\u6c42  c) \u5c06\u51fd\u6570\u4e0e\u6839 URL \u4e0a\u7684 GET \u8bf7\u6c42\u5173\u8054\u8d77\u6765 \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u6210\u529f\u7ec4\u88c5\u5e76\u542f\u52a8\u4e86\u65b0 API \u7684\u201c\u8d85\u5149\u901f\u5f15\u64ce\u201d\uff01\u73b0\u5728\u60a8\u62e5\u6709\uff1a</p> <ul> <li>\ud83d\udee0\ufe0f \u72ec\u7acb\u7684\u5f00\u53d1\u73af\u5883 (<code>venv</code>)</li> <li>\ud83d\ude80 \u5df2\u5b89\u88c5 FastAPI \u548c Uvicorn \u670d\u52a1\u5668</li> <li>\ud83d\udef0\ufe0f \u5177\u6709\u4e00\u4e2a\u7aef\u70b9\u7684\u6b63\u5e38\u8fd0\u884c\u7684 API</li> <li>\ud83d\udcca \u81ea\u52a8\u751f\u6210\u7684\u6587\u6863</li> </ul> <p>\u6240\u6709\u7cfb\u7edf\u6b63\u5e38\uff01 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u7b2c\u4e00\u4e2a\u5b8c\u6574\u7684\u7aef\u70b9\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u822a\u5929\u5668\u5217\u8868\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li>\u7ec8\u7aef\u4e2d\u5df2\u6fc0\u6d3b\u73af\u5883 <code>(venv)</code></li> <li>Uvicorn \u670d\u52a1\u5668\u5df2\u65e0\u9519\u8bef\u542f\u52a8</li> <li>\u5730\u5740 <code>http://127.0.0.1:8000/docs</code> \u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00</li> </ul> <p>\u26a0\ufe0f \u5982\u679c\u51fa\u73b0\u9519\u8bef\uff1a</p> <ul> <li><code>command not found</code>\uff1a\u8bf7\u786e\u4fdd\u60a8\u5df2\u6fc0\u6d3b\u865a\u62df\u73af\u5883\u3002</li> <li><code>Port ... is already in use</code>\uff1a\u5176\u4ed6\u7a0b\u5e8f\u5360\u7528\u4e86 8000 \u7aef\u53e3\u3002\u8bf7\u505c\u6b62\u5b83\u6216\u5728\u5176\u4ed6\u7aef\u53e3\u4e0a\u8fd0\u884c uvicorn\uff1a<code>uvicorn main:app --reload --port 8001</code>\u3002</li> <li>\u5728 PowerShell \u4e2d\u6fc0\u6d3b <code>venv</code> \u65f6\u51fa\u9519\uff1a\u8bf7\u68c0\u67e5\u811a\u672c\u6267\u884c\u7b56\u7565\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/2/","title":"\u7b2c 3.2 \u7ae0\uff1a\u521b\u5efa\u7b2c\u4e00\u4e2a API \u7aef\u70b9","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 30 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/2/#1","title":"1. \u7aef\u70b9\uff1a\u6570\u636e\u5bf9\u63a5\u7aef\u53e3","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u6211\u4eec\u7684 API \u662f\u4e00\u4e2a\u7a7a\u95f4\u7ad9\u3002\u7aef\u70b9\uff08Endpoint\uff0c\u4e5f\u79f0\u4f5c\u201c\u7ec8\u70b9\u201d\uff09\u662f\u4e00\u4e2a\u7279\u5b9a\u7684\u5bf9\u63a5\u7aef\u53e3\uff0c\u4e13\u4e3a\u7279\u5b9a\u7c7b\u578b\u7684\u98de\u8239\u8bbe\u8ba1\u3002</p> <ul> <li>\u7aef\u53e3 <code>1 \u53f7</code> \u2014\u2014 \u7528\u4e8e\u8d27\u8fd0\u98de\u8239\uff08\u884c\u661f\u6570\u636e\uff09\u3002</li> <li>\u7aef\u53e3 <code>2 \u53f7</code> \u2014\u2014 \u7528\u4e8e\u63a2\u6d4b\u5668\uff08\u4efb\u52a1\u6570\u636e\uff09\u3002</li> <li>\u7aef\u53e3 <code>3 \u53f7</code> \u2014\u2014 \u7528\u4e8e\u8f7d\u5ba2\u822a\u5929\u98de\u673a\uff08\u5b87\u822a\u5458\u6570\u636e\uff09\u3002</li> </ul> <p>\u6bcf\u4e2a\u7aef\u70b9\u90fd\u662f\u4e00\u4e2a\u552f\u4e00\u7684 URL\uff0c\u8d1f\u8d23\u5bf9\u7279\u5b9a\u8d44\u6e90\u6267\u884c\u7279\u5b9a\u64cd\u4f5c\u3002</p> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a <code>GET /spaceships</code> \u8fd9\u6761\u547d\u4ee4\u662f\u201c\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3 \u2192 \u7a7a\u95f4\u7ad9\uff1a\u62a5\u544a\u6240\u6709\u5df2\u505c\u9760\u98de\u8239\u7684\u5217\u8868\u201d\u3002\u8fd9\u4e2a\u7aef\u70b9\u8fd4\u56de\u4e00\u4e2a\u8d44\u6e90\u96c6\u5408\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/2/#2","title":"2. \u521b\u5efa\u201c\u592a\u7a7a\u8230\u961f\u201d","text":"<p>\u76ee\u524d\u6211\u4eec\u8fd8\u6ca1\u6709\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u5148\u521b\u5efa\u4e00\u4e2a\u201c\u6a21\u62df\u201d\u2014\u2014\u4e00\u4e2a\u7b80\u5355\u7684 Python \u5b57\u5178\u5f62\u5f0f\u7684\u822a\u5929\u5668\u5217\u8868\u3002</p> <p>\u6253\u5f00 <code>main.py</code> \u5e76\u5728\u5b9a\u4e49 <code>app</code> \u4e4b\u524d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a <pre><code># main.py\n\n# \u6b65\u9aa4 1\uff1a\u521b\u5efa\u6a21\u62df\u6570\u636e\u5e93\ndb_spaceships = {\n    1: {\n        \"name\": \"Voyager-1\",\n        \"type\": \"\u63a2\u6d4b\u5668\",\n        \"launch_year\": 1977,\n        \"status\": \"\u6d3b\u8dc3\"\n    },\n    2: {\n        \"name\": \"Hubble Space Telescope\",\n        \"type\": \"\u671b\u8fdc\u955c\",\n        \"launch_year\": 1990,\n        \"status\": \"\u6d3b\u8dc3\"\n    },\n    3: {\n        \"name\": \"ISS\",\n        \"type\": \"\u7a7a\u95f4\u7ad9\",\n        \"launch_year\": 1998,\n        \"status\": \"\u5728\u8f68\"\n    }\n}\n\n// ... \u8fd9\u91cc\u662f app = FastAPI() \u7684\u4ee3\u7801\n</code></pre> \u8fd9\u662f\u6211\u4eec\u7684\u201c\u822a\u5929\u5668\u6ce8\u518c\u8868\u201d\uff0c\u6211\u4eec\u5c06\u7528\u5b83\u6765\u5de5\u4f5c\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/2/#3","title":"3. \u7b2c\u4e00\u4e2a\u7aef\u70b9\uff1a\u98de\u8239\u5217\u8868","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u7aef\u70b9\uff0c\u5b83\u5c06\u8fd4\u56de\u6211\u4eec\u6574\u4e2a\u8230\u961f\u7684\u5217\u8868\u3002</p> <p>\u5728 <code>main.py</code> \u4e2d\uff0c\u5c06\u4ee5\u4e0b\u4ee3\u7801\u6dfb\u52a0\u5230 <code>@app.get(\"/\")</code> \u4e4b\u540e\uff1a <pre><code># main.py\n\n# ... \u5305\u542b db_spaceships, FastAPI, app \u548c read_root() \u7684\u4ee3\u7801 ...\n\n@app.get(\"/spaceships\")\ndef get_spaceships():\n    \"\"\"\n    \u8fd4\u56de\u6ce8\u518c\u8868\u4e2d\u6240\u6709\u822a\u5929\u5668\u7684\u5217\u8868\u3002\n    \"\"\"\n    return db_spaceships\n</code></pre></p> <ul> <li><code>@app.get(\"/spaceships\")</code>\uff1a\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u8def\u7531\u3002\u73b0\u5728\uff0c\u5bf9 URL <code>/spaceships</code> \u7684 <code>GET</code> \u8bf7\u6c42\u5c06\u7531 <code>get_spaceships</code> \u51fd\u6570\u5904\u7406\u3002</li> <li><code>return db_spaceships</code>\uff1aFastAPI \u4f1a\u81ea\u52a8\u5c06 Python \u5b57\u5178\u8f6c\u6362\u4e3a\u6b63\u786e\u7684 JSON \u54cd\u5e94\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/2/#4","title":"4. \u6d4b\u8bd5\u65b0\u5bf9\u63a5\u7aef\u53e3\u7684\u529f\u80fd","text":"<p>\u5982\u679c\u60a8\u7684 <code>uvicorn</code> \u670d\u52a1\u5668\u4ecd\u5728\u4f7f\u7528 <code>--reload</code> \u6807\u5fd7\u8fd0\u884c\uff0c\u5b83\u5e94\u8be5\u5df2\u7ecf\u91cd\u65b0\u52a0\u8f7d\u5e76\u51c6\u5907\u597d\u5de5\u4f5c\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u91cd\u65b0\u542f\u52a8\u5b83\uff1a <pre><code>uvicorn main:app --reload\n</code></pre></p> <p>\u6b65\u9aa4 1\uff1a\u5728\u6d4f\u89c8\u5668\u4e2d\u6d4b\u8bd5</p> <p>\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u5730\u5740 <code>http://127.0.0.1:8000/spaceships</code>\u3002 \u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u5b8c\u6574\u7684\u98de\u8239\u5217\u8868\uff0c\u683c\u5f0f\u4e3a JSON\uff1a <pre><code>{\n  \"1\": {\n    \"name\": \"Voyager-1\",\n    \"type\": \"\u63a2\u6d4b\u5668\",\n    \"launch_year\": 1977,\n    \"status\": \"\u6d3b\u8dc3\"\n  },\n  \"2\": {\n    \"name\": \"Hubble Space Telescope\",\n    \"type\": \"\u671b\u8fdc\u955c\",\n    \"launch_year\": 1990,\n    \"status\": \"\u6d3b\u8dc3\"\n  },\n  \"3\": {\n    \"name\": \"ISS\",\n    \"type\": \"\u7a7a\u95f4\u7ad9\",\n    \"launch_year\": 1998,\n    \"status\": \"\u5728\u8f68\"\n  }\n}\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u5728\u81ea\u52a8\u6587\u6863\u4e2d\u6d4b\u8bd5</p> <p>\u8bbf\u95ee <code>http://127.0.0.1:8000/docs</code>\u3002\u60a8\u4f1a\u770b\u5230\u6587\u6863\u4e2d\u4e3a <code>GET /spaceships</code> \u7aef\u70b9\u65b0\u589e\u4e86\u4e00\u4e2a\u90e8\u5206\u3002\u60a8\u53ef\u4ee5\u70b9\u51fb\u201cTry it out\u201d\u548c\u201cExecute\u201d\u76f4\u63a5\u5728\u90a3\u91cc\u8fdb\u884c\u6d4b\u8bd5\uff01</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/2/#5","title":"5. \u5e26\u53c2\u6570\u7684\u7aef\u70b9\uff1a\u7279\u5b9a\u98de\u8239\u7684\u6570\u636e","text":"<p>\u5982\u679c\u6211\u4eec\u9700\u8981\u201c\u65c5\u884c\u8005 1 \u53f7\u201d\u7684\u7279\u5b9a\u6570\u636e\u600e\u4e48\u529e\uff1f\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u8def\u5f84\u53c2\u6570\uff08path parameter\uff09\u7684\u7aef\u70b9\u3002</p> <p>\u5c06\u4ee5\u4e0b\u4ee3\u7801\u6dfb\u52a0\u5230 <code>main.py</code>\uff1a <pre><code># main.py\n\n# ... \u5176\u4ed6\u4ee3\u7801 ...\n\n@app.get(\"/spaceships/{ship_id}\")\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    \u6839\u636e ID \u8fd4\u56de\u7279\u5b9a\u822a\u5929\u5668\u7684\u6570\u636e\u3002\n    \"\"\"\n    return db_spaceships.get(ship_id)\n</code></pre></p> <ul> <li><code>\"/spaceships/{ship_id}\"</code>\uff1a\u82b1\u62ec\u53f7 <code>{}</code> \u544a\u8bc9 FastAPI\uff0c<code>ship_id</code> \u662f\u4e00\u4e2a\u5c06\u4ece URL \u4f20\u9012\u8fc7\u6765\u7684\u53d8\u91cf\u3002</li> <li><code>ship_id: int</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u7c7b\u578b\u63d0\u793a\uff08type hint\uff09\u3002FastAPI \u4f1a\u81ea\u52a8\u68c0\u67e5\u4f20\u5165\u7684 ID \u662f\u5426\u4e3a\u6574\u6570\u3002\u5982\u679c\u6709\u4eba\u8bf7\u6c42 <code>/spaceships/voyager</code>\uff0cFastAPI \u5c06\u8fd4\u56de <code>422 Unprocessable Entity</code> \u9a8c\u8bc1\u9519\u8bef\u3002\u8fd9\u771f\u662f\u592a\u68d2\u4e86\uff01</li> </ul> <p>\u6d4b\u8bd5\uff1a</p> <p>\u6253\u5f00 <code>http://127.0.0.1:8000/spaceships/2</code>\u3002\u60a8\u5e94\u8be5\u53ea\u4f1a\u6536\u5230\u5173\u4e8e\u201c\u54c8\u52c3\u201d\u671b\u8fdc\u955c\u7684\u6570\u636e\u3002\u5982\u679c\u60a8\u6253\u5f00 <code>http://127.0.0.1:8000/spaceships/99</code>\uff0c\u60a8\u5c06\u6536\u5230 <code>null</code>\uff0c\u56e0\u4e3a\u6ca1\u6709\u8fd9\u6837\u7684\u98de\u8239\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/2/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u5c0f\u6d4b\u9a8c","text":"<p>1. API \u4e2d\u7684\u7aef\u70b9\u662f...</p>  a) \u5b87\u5b99\u7684\u7ec8\u70b9  b) \u7528\u4e8e\u5bf9\u8d44\u6e90\u6267\u884c\u7279\u5b9a\u64cd\u4f5c\u7684\u552f\u4e00 URL  c) \u6570\u636e\u5e93\u7684\u540d\u79f0 <p>2. \u88c5\u9970\u5668 `@app.get(\"/users\")` \u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f</p>  a) \u521b\u5efa\u4e00\u4e2a\u65b0\u7528\u6237  b) \u5c06\u51fd\u6570\u4e0e\u5bf9 `/users` \u7684 GET \u8bf7\u6c42\u5173\u8054\u8d77\u6765  c) \u83b7\u53d6\u6240\u6709\u88c5\u9970\u5668\u7684\u5217\u8868 <p>3. \u8def\u5f84\u4e2d\u7684 `\"/items/{item_id}\"` \u8868\u793a\u4ec0\u4e48\uff1f</p>  a) \u9700\u8981\u5bfb\u627e\u540d\u4e3a `{item_id}` \u7684\u6587\u4ef6\u5939  b) `item_id` \u662f\u4e00\u4e2a\u5c06\u4ece URL \u4e2d\u83b7\u53d6\u7684\u53c2\u6570  c) \u8fd9\u662f\u4e00\u4e2a\u5c06\u88ab\u5ffd\u7565\u7684\u6ce8\u91ca <p>4. \u51fd\u6570\u4e2d `ship_id: int` \u7684\u7c7b\u578b\u63d0\u793a\u6709\u4ec0\u4e48\u7528\uff1f</p>  a) \u8ba9 Python \u8fd0\u884c\u66f4\u5feb  b) \u8ba9 FastAPI \u81ea\u52a8\u9a8c\u8bc1 ID \u662f\u5426\u4e3a\u6570\u5b57  c) \u8ba9\u53d8\u91cf\u5728\u51fd\u6570\u5916\u90e8\u53ef\u89c1 <p>5. \u5982\u679c\u60a8\u8bf7\u6c42 `/spaceships/abc`\uff0c\u800c FastAPI \u671f\u671b\u4e00\u4e2a `int`\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f</p>  a) \u670d\u52a1\u5668\u4f1a\u56e0 500 \u9519\u8bef\u201c\u5d29\u6e83\u201d  b) FastAPI \u5c06\u8fd4\u56de 422 \u9519\u8bef  c) FastAPI \u4f1a\u5c1d\u8bd5\u5c06\u201cabc\u201d\u8f6c\u6362\u4e3a\u6570\u5b57 \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u6210\u529f\u5728\u60a8\u7684 API \u7a7a\u95f4\u7ad9\u4e0a\u521b\u5efa\u4e86\u4e24\u4e2a\u201c\u5bf9\u63a5\u7aef\u53e3\u201d\uff1a</p> <ul> <li>\ud83d\udef0\ufe0f \u4e00\u4e2a\u7528\u4e8e\u83b7\u53d6\u6240\u6709\u98de\u8239\u5217\u8868 (<code>/spaceships</code>)</li> <li>\ud83d\udd2d \u53e6\u4e00\u4e2a\u7528\u4e8e\u83b7\u53d6\u7279\u5b9a\u822a\u5929\u5668\u7684\u6570\u636e (<code>/spaceships/{ship_id}</code>)</li> </ul> <p>\u60a8\u8fd8\u770b\u5230\u4e86 FastAPI \u81ea\u52a8\u7c7b\u578b\u9a8c\u8bc1\u7684\u5f3a\u5927\u529f\u80fd\uff0c\u5b83\u80fd\u4fdd\u62a4\u60a8\u7684 API \u514d\u53d7\u4e0d\u6b63\u786e\u8bf7\u6c42\u7684\u5f71\u54cd\u3002</p> <p>\u5bfc\u822a\u7cfb\u7edf\u5df2\u8bbe\u7f6e\u5b8c\u6bd5\uff01 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Pydantic \u521b\u5efa\u6211\u4eec\u7684\u822a\u5929\u5668\u201c\u84dd\u56fe\u201d\uff0c\u4f7f\u6211\u4eec\u7684 API \u66f4\u667a\u80fd\u3001\u66f4\u53ef\u9760\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li><code>uvicorn</code> \u670d\u52a1\u5668\u5df2\u542f\u52a8\u5e76\u6b63\u5728\u8fd0\u884c\u3002</li> <li>URL <code>http://127.0.0.1:8000/spaceships</code> \u8fd4\u56de\u5305\u542b\u98de\u8239\u5217\u8868\u7684 JSON\u3002</li> <li>URL <code>http://127.0.0.1:8000/spaceships/1</code> \u8fd4\u56de\u5173\u4e8e\u201c\u65c5\u884c\u8005 1 \u53f7\u201d\u7684\u6570\u636e\u3002</li> <li>URL <code>http://127.0.0.1:8000/docs</code> \u663e\u793a\u4e24\u4e2a\u65b0\u7aef\u70b9\u3002</li> </ul> <p>\u26a0\ufe0f \u5982\u679c\u51fa\u73b0\u9519\u8bef\uff1a</p> <ul> <li>404 Not Found\uff1a \u68c0\u67e5\u6d4f\u89c8\u5668\u4e2d\u548c\u88c5\u9970\u5668 <code>@app.get(...)</code> \u4e2d\u7684 URL \u662f\u5426\u6b63\u786e\u3002</li> <li>\u4ee3\u7801\u9519\u8bef\uff1a \u4ed4\u7ec6\u68c0\u67e5\u8bed\u6cd5\uff0c\u5c24\u5176\u662f Python \u4e2d\u7684\u7f29\u8fdb\u548c\u5b57\u5178\u4e2d\u7684\u9017\u53f7\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/3/","title":"\u7b2c 3.3 \u7ae0\uff1a\u4f7f\u7528 Pydantic \u7684\u6570\u636e\u6a21\u578b","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 50 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/3/#1-pydantic","title":"1. Pydantic\uff1a\u201c\u5b87\u5b99\u98de\u8239\u7684\u6570\u5b57\u84dd\u56fe\u201d","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u6b63\u5728\u5efa\u9020\u4e00\u8258\u5b87\u5b99\u98de\u8239\u3002\u4f60\u4e0d\u80fd\u968f\u610f\u710a\u63a5\u91d1\u5c5e\u788e\u7247\u3002\u4f60\u9700\u8981\u4e00\u4efd\u8be6\u7ec6\u7684\u84dd\u56fe\uff0c\u5b83\u5b9a\u4e49\uff1a</p> <ul> <li>\u98de\u8239\u540d\u79f0 (\u7c7b\u578b: <code>\u5b57\u7b26\u4e32</code>, \u6700\u5927\u957f\u5ea6: 50 \u5b57\u7b26)</li> <li>\u53d1\u5c04\u5e74\u4efd (\u7c7b\u578b: <code>\u6574\u6570</code>)</li> <li>\u662f\u5426\u6709\u8d85\u5149\u901f\u5f15\u64ce (\u7c7b\u578b: <code>\u662f/\u5426</code>)</li> </ul> <p>Pydantic \u662f\u4e00\u4e2a\u5e93\uff0c\u5b83\u5141\u8bb8\u4f60\u4e3a Python \u4e2d\u7684\u6570\u636e\u521b\u5efa\u8fd9\u6837\u7684\u201c\u6570\u5b57\u84dd\u56fe\u201d\u3002\u5728 FastAPI \u4e2d\uff0c\u5b83\u6267\u884c\u4e09\u4e2a\u5173\u952e\u529f\u80fd\uff1a</p> <ol> <li>\u7ed3\u6784\u58f0\u660e\uff1a \u6e05\u695a\u5730\u63cf\u8ff0\u4f60\u7684\u6570\u636e\u7531\u54ea\u4e9b\u5b57\u6bb5\u7ec4\u6210\u3002</li> <li>\u6570\u636e\u9a8c\u8bc1\uff1a \u81ea\u52a8\u68c0\u67e5\u4f20\u5165\u6570\u636e\u662f\u5426\u7b26\u5408\u84dd\u56fe\u3002</li> <li>\u6587\u6863\uff1a FastAPI \u4f7f\u7528\u8fd9\u4e9b\u84dd\u56fe\u6765\u751f\u6210\u8be6\u7ec6\u4e14\u4ea4\u4e92\u5f0f\u7684\u6587\u6863\u3002</li> </ol> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a Pydantic \u6a21\u578b\u662f\u5bf9\u8c61\u7684\u6280\u672f\u62a4\u7167\u3002\u4efb\u4f55\u62b5\u8fbe\u7a7a\u95f4\u7ad9\u7684\u201c\u8d27\u7269\u201d\uff08\u6570\u636e\uff09\u90fd\u5fc5\u987b\u7b26\u5408\u62a4\u7167\u4e2d\u7684\u89c4\u8303\u3002\u5982\u679c\u4e0d\u7b26\u5408\u2014\u2014\u673a\u8f7d\u8ba1\u7b97\u673a (Pydantic) \u5c06\u62d2\u7edd\u5b83\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/3/#2-spaceship","title":"2. \u521b\u5efa\u7b2c\u4e00\u4e2a\u84dd\u56fe\uff1a<code>Spaceship</code> \u6a21\u578b","text":"<p>\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u6a21\u578b\u6765\u63cf\u8ff0\u6211\u4eec\u7684\u5b87\u5b99\u98de\u8239\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u4ece Pydantic \u5bfc\u5165 <code>BaseModel</code> Pydantic \u5df2\u7ecf\u968f <code>fastapi[all]</code> \u4e00\u8d77\u5b89\u88c5\u3002\u6211\u4eec\u53ea\u9700\u8981\u4e3a\u6211\u4eec\u7684\u6a21\u578b\u5bfc\u5165\u57fa\u7c7b\u3002</p> <p>\u5728 <code>main.py</code> \u6587\u4ef6\u9876\u90e8\uff0c\u4e0e\u5176\u4ed6\u5bfc\u5165\u4e00\u8d77\u6dfb\u52a0\uff1a <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u63cf\u8ff0 <code>Spaceship</code> \u6a21\u578b \u521b\u5efa\u4e00\u4e2a\u7ee7\u627f\u81ea <code>BaseModel</code> \u7684\u7c7b\u3002\u5728\u7c7b\u5185\u90e8\uff0c\u4f7f\u7528\u6807\u51c6\u7684 Python \u7c7b\u578b\u63d0\u793a\u5b9a\u4e49\u5b57\u6bb5\u53ca\u5176\u7c7b\u578b\u3002</p> <p>\u5c06\u6b64\u4ee3\u7801\u6dfb\u52a0\u5230 <code>main.py</code> (\u53ef\u4ee5\u5728\u5bfc\u5165\u4e4b\u540e): <pre><code>class Spaceship(BaseModel):\n    \"\"\"\n    \u5b87\u5b99\u98de\u8239\u7684\u6280\u672f\u62a4\u7167\uff08\u6a21\u578b\uff09\u3002\n    \"\"\"\n    name: str\n    type: str\n    launch_year: int\n    status: str\n</code></pre> \u5c31\u662f\u8fd9\u6837\uff01\u4f60\u521a\u521a\u521b\u5efa\u4e86\u4e00\u4e2a\u201c\u84dd\u56fe\u201d\u3002Pydantic \u73b0\u5728\u77e5\u9053\uff0c\u4efb\u4f55 <code>Spaceship</code> \u7c7b\u578b\u7684\u5bf9\u8c61\u90fd\u5fc5\u987b\u6709\u56db\u4e2a\u6307\u5b9a\u7c7b\u578b\u7684\u5b57\u6bb5\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/3/#3","title":"3. \u5e94\u7528\u6a21\u578b\uff1a\u6539\u8fdb\u6211\u4eec\u7684\u7aef\u70b9","text":"<p>\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528\u65b0\u6a21\u578b\u6765\u4f7f API \u66f4\u201c\u667a\u80fd\u201d\u3002</p> <p>A. \u4f5c\u4e3a\u54cd\u5e94\u7684\u6a21\u578b (Response Model) \u6211\u4eec\u53ef\u4ee5\u544a\u8bc9 FastAPI\uff0c\u6211\u4eec\u7684\u7aef\u70b9\u5e94\u8be5\u8fd4\u56de\u7b26\u5408 <code>Spaceship</code> \u6a21\u578b\u7684\u6570\u636e\u3002\u8fd9\u786e\u4fdd\u4e86\u54cd\u5e94\u603b\u662f\u5177\u6709\u6b63\u786e\u7684\u7ed3\u6784\u3002</p> <p>\u6309\u4ee5\u4e0b\u65b9\u5f0f\u4fee\u6539 <code>/spaceships/{ship_id}</code> \u7aef\u70b9\uff1a <pre><code># main.py\n\n# ... db_spaceships \u548c Spaceship \u6a21\u578b\u7684\u4ee3\u7801 ...\n\n# \u4f7f\u7528 `response_model` \u6307\u5b9a\u54cd\u5e94\u7684\u201c\u84dd\u56fe\u201d\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef get_spaceship(ship_id: int):\n    \"\"\"\n    \u8fd4\u56de\u4e0e Spaceship \u6a21\u578b\u5339\u914d\u7684\u98de\u8239\u6570\u636e\u3002\n    \"\"\"\n    ship = db_spaceships.get(ship_id)\n    return ship\n</code></pre> - <code>response_model=Spaceship</code>: \u6211\u4eec\u544a\u8bc9 FastAPI\uff1a\u201c\u6b64\u51fd\u6570\u7684\u54cd\u5e94\u5e94\u7b26\u5408 <code>Spaceship</code> \u7ed3\u6784\u3002\u8fc7\u6ee4\u6389\u6240\u6709\u591a\u4f59\u7684\u5b57\u6bb5\uff0c\u5e76\u786e\u4fdd\u7c7b\u578b\u6b63\u786e\u3002\u201d</p> <p>\u8fd9\u5e26\u6765\u4e86\u4ec0\u4e48\uff1f</p> <ul> <li>\u6570\u636e\u8fc7\u6ee4\uff1a \u5982\u679c <code>db_spaceships</code> \u4e2d\u6709\u591a\u4f59\u7684\u5b57\u6bb5\uff08\u4f8b\u5982\uff0c<code>\"secret_code\"</code>\uff09\uff0c\u5b83\u4eec\u5c06\u4e0d\u4f1a\u51fa\u73b0\u5728\u6700\u7ec8\u7684 JSON \u4e2d\u3002</li> <li>\u7ed3\u6784\u4fdd\u8bc1\uff1a API \u5ba2\u6237\u7aef\u53ef\u4ee5\u786e\u4fe1\u59cb\u7ec8\u4f1a\u6536\u5230\u9884\u671f\u683c\u5f0f\u7684\u54cd\u5e94\u3002</li> <li>\u6587\u6863\uff1a \u5728 <code>/docs</code> \u4e2d\uff0c\u73b0\u5728\u5c06\u663e\u793a\u7cbe\u786e\u7684\u54cd\u5e94\u793a\u4f8b (Example Value)\u3002</li> </ul> <p>B. \u96c6\u5408\u7684\u6a21\u578b \u90a3\u4e48 <code>/spaceships</code> \u7aef\u70b9\u5462\uff0c\u5b83\u8fd4\u56de\u7684\u662f\u98de\u8239\u7684\u5217\u8868\uff1f\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 <code>typing</code> \u6a21\u5757\u4e2d\u7684 <code>list</code>\u3002</p> <p>\u4fee\u6539\u5bfc\u5165\u548c <code>/spaceships</code> \u7aef\u70b9\uff1a <pre><code># main.py \u5728\u9876\u90e8\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom typing import List  # &lt;-- \u5bfc\u5165 List\n\n# ... \u4ee3\u7801 ...\n\n# \u6307\u5b9a\u54cd\u5e94\u662f Spaceship \u7c7b\u578b\u5bf9\u8c61\u7684\u5217\u8868 (List)\n@app.get(\"/spaceships\", response_model=List[Spaceship])\ndef get_spaceships():\n    \"\"\"\n    \u8fd4\u56de\u98de\u8239\u5217\u8868\u3002\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\n    \u90fd\u4f1a\u6839\u636e Spaceship \u6a21\u578b\u8fdb\u884c\u9a8c\u8bc1\u3002\n    \"\"\"\n    # Pydantic \u65e0\u6cd5\u5904\u7406\u4ee5 ID \u4e3a\u952e\u7684\u5b57\u5178\u3002\n    # \u6211\u4eec\u5c06\u5b57\u5178\u8f6c\u6362\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u5217\u8868\u3002\n    return list(db_spaceships.values())\n</code></pre></p> <ul> <li><code>response_model=List[Spaceship]</code>: \u6211\u4eec\u6307\u5b9a\u54cd\u5e94\u5c06\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u7b26\u5408 <code>Spaceship</code> \u6a21\u578b\u7684\u5bf9\u8c61\u3002</li> <li><code>return list(db_spaceships.values())</code>: \u91cd\u8981\u7684\u66f4\u6539\uff01Pydantic \u671f\u671b\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5217\u8868\uff09\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u4ee5 ID \u4e3a\u952e\u7684\u5b57\u5178\u3002\u6211\u4eec\u5c06\u201c\u6570\u636e\u5e93\u6a21\u62df\u5668\u201d\u7684\u503c\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5217\u8868\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/3/#4-api","title":"4. \u9a8c\u8bc1\u6539\u8fdb\u540e\u7684 API","text":"<p>\u786e\u4fdd <code>uvicorn</code> \u670d\u52a1\u5668\u5df2\u4f7f\u7528 <code>--reload</code> \u8fd0\u884c\u3002</p> <ol> <li>\u68c0\u67e5 <code>http://127.0.0.1:8000/spaceships</code>\uff1a \u73b0\u5728\u54cd\u5e94\u662f\u4e00\u4e2a JSON \u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002\u8fd9\u5bf9\u4e8e\u96c6\u5408\u6765\u8bf4\u662f\u4e00\u4e2a\u66f4\u6b63\u786e\u548c\u6807\u51c6\u7684\u7ed3\u6784\u3002     <pre><code>[\n  { \"name\": \"Voyager-1\", \"type\": \"\u63a2\u6d4b\u5668\", ... },\n  { \"name\": \"Hubble Space Telescope\", ... }\n]\n</code></pre></li> <li>\u68c0\u67e5 <code>http://127.0.0.1:8000/spaceships/1</code>\uff1a \u54cd\u5e94\u6ca1\u6709\u6539\u53d8\uff0c\u4f46\u73b0\u5728\u5b83\u4fdd\u8bc1\u7b26\u5408\u6a21\u578b\u3002</li> <li>\u67e5\u770b <code>/docs</code>\uff1a \u9875\u9762\u5e95\u90e8\u7684\u201cSchemas\u201d\u90e8\u5206\u51fa\u73b0\u4e86\u4f60\u7684 <code>Spaceship</code> \u6a21\u578b\u3002\u5e76\u4e14\u7aef\u70b9\u7684\u54cd\u5e94\u793a\u4f8b\u73b0\u5728\u663e\u793a\u4e86\u7f8e\u89c2\u3001\u7ed3\u6784\u5316\u7684\u6570\u636e\u6a21\u5f0f\u3002</li> </ol>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/3/#5","title":"5. \u9ad8\u7ea7\u9a8c\u8bc1\uff1a\u201c\u673a\u8f7d\u8ba1\u7b97\u673a\u201d\u5728\u884c\u52a8","text":"<p>Pydantic \u4e0d\u4ec5\u4ec5\u80fd\u68c0\u67e5\u7c7b\u578b\uff0c\u5b83\u8fd8\u80fd\u505a\u66f4\u591a\u4e8b\u60c5\u3002</p> <p>\u5728\u6211\u4eec\u7684 <code>Spaceship</code> \u6a21\u578b\u4e2d\u6dfb\u52a0\u9a8c\u8bc1\uff1a <pre><code>from pydantic import BaseModel, Field\n\nclass Spaceship(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50, description=\"\u98de\u8239\u540d\u79f0\")\n    type: str\n    launch_year: int = Field(..., gt=1950, description=\"\u53d1\u5c04\u5e74\u4efd\u5fc5\u987b\u5728 1950 \u5e74\u4e4b\u540e\")\n    status: str\n</code></pre></p> <ul> <li><code>Field(...)</code>: \u7528\u4e8e\u6dfb\u52a0\u989d\u5916\u7684\u9a8c\u8bc1\u89c4\u5219\u3002</li> <li><code>...</code> (\u7701\u7565\u53f7): \u8868\u793a\u8be5\u5b57\u6bb5\u662f\u5fc5\u586b\u7684\u3002</li> <li><code>min_length</code>, <code>max_length</code>: \u5b57\u7b26\u4e32\u7684\u9650\u5236\u3002</li> <li><code>gt</code>: \u201c\u5927\u4e8e\u201d\u3002</li> </ul> <p>\u5c3d\u7ba1\u6211\u4eec\u8fd8\u6ca1\u6709\u521b\u5efa\u65b0\u7684\u98de\u8239\uff08\u8fd9\u5c06\u5728\u4e0b\u4e00\u7ae0\u8fdb\u884c\uff09\uff0c\u4f46\u8fd9\u4e9b\u89c4\u5219\u5c06\u5df2\u7ecf\u53cd\u6620\u5728\u6587\u6863\u4e2d\uff0c\u5e76\u5728\u6211\u4eec\u5b9e\u73b0 <code>POST</code> \u8bf7\u6c42\u65f6\u751f\u6548\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/3/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u5c0f\u6d4b\u9a8c","text":"<p>1. Pydantic \u5728 FastAPI \u4e2d\u7528\u4e8e...</p>  a) \u53d1\u9001\u7535\u5b50\u90ae\u4ef6  b) \u58f0\u660e\u3001\u9a8c\u8bc1\u548c\u6587\u6863\u5316\u6570\u636e\u6a21\u578b  c) \u76f4\u63a5\u8fde\u63a5\u6570\u636e\u5e93 <p>2. \u8981\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u6a21\u578b\uff0c\u9700\u8981\u4ece\u4ee5\u4e0b\u54ea\u4e2a\u7c7b\u7ee7\u627f\uff1f</p>  a) `FastAPI`  b) `pydantic.Field`  c) `pydantic.BaseModel` <p>3. `@app.get` \u88c5\u9970\u5668\u4e2d\u7684 `response_model` \u53c2\u6570\u7528\u4e8e...</p>  a) \u4e3a\u4f20\u5165\u8bf7\u6c42\u8bbe\u7f6e\u6a21\u578b  b) \u6307\u5b9a API \u54cd\u5e94\u5e94\u7b26\u5408\u7684\u7ed3\u6784  c) \u52a0\u901f\u670d\u52a1\u5668\u54cd\u5e94 <p>4. \u5982\u4f55\u6307\u5b9a\u7aef\u70b9\u8fd4\u56de `Item` \u7c7b\u578b\u5bf9\u8c61\u7684*\u5217\u8868*\uff1f</p>  a) `response_model=Item[]`  b) `response_model=List[Item]` (\u4ece `typing` \u5bfc\u5165 `List`)  c) `response_model=(Item)` <p>5. Pydantic \u6a21\u578b\u4e2d\u7684 `Field(..., gt=0)` \u610f\u5473\u7740\u8be5\u5b57\u6bb5...</p>  a) \u53ef\u9009\u4e14\u5fc5\u987b\u7b49\u4e8e 0  b) \u5fc5\u586b\u4e14\u5fc5\u987b\u5927\u4e8e 0  c) \u53ef\u9009\u4e14\u7c7b\u578b\u4e3a `float` \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u4f60\u4e3a API \u7684\u6570\u636e\u8bbe\u8ba1\u4e86\u201c\u6570\u5b57\u84dd\u56fe\u201d\u3002\u73b0\u5728\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u5de5\u4f5c\uff0c\u800c\u4e14\u5de5\u4f5c\u8d77\u6765\u53ef\u9884\u6d4b\u4e14\u53ef\u9760\u3002</p> <ul> <li>\ud83d\udcdd \u4f7f\u7528 Pydantic \u521b\u5efa\u4e86 <code>Spaceship</code> \u6a21\u578b\u3002</li> <li>\ud83d\udee1\ufe0f API \u73b0\u5728\u4f7f\u7528 <code>response_model</code> \u9a8c\u8bc1\u548c\u8fc7\u6ee4\u51fa\u7ad9\u6570\u636e\u3002</li> <li>\ud83d\udcca \u6587\u6863\u53d8\u5f97\u66f4\u52a0\u4fe1\u606f\u4e30\u5bcc\uff0c\u663e\u793a\u4e86\u7cbe\u786e\u7684\u6570\u636e\u6a21\u5f0f\u3002</li> </ul> <p>\u84dd\u56fe\u5df2\u51c6\u5907\u597d\u5e76\u83b7\u6279\u51c6\uff01 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ece\u8bfb\u53d6\u6570\u636e\u8f6c\u5411\u521b\u5efa\u6570\u636e\u2014\u2014\u4e3a\u6211\u4eec\u7684\u8230\u961f\u5b9e\u73b0\u5b8c\u6574\u7684 CRUD \u64cd\u4f5c\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li>\u786e\u4fdd <code>/docs</code> \u4e2d\u51fa\u73b0\u4e86 <code>Spaceship</code> \u6a21\u578b\u7684\u67b6\u6784\u3002</li> <li>\u68c0\u67e5 <code>/spaceships</code> \u7aef\u70b9\u73b0\u5728\u8fd4\u56de JSON \u6570\u7ec4 (<code>[...]</code>)\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61 (<code>{...}</code>)\u3002</li> <li>\u786e\u4fdd\u5728\u6dfb\u52a0\u6a21\u578b\u540e\u4ee3\u7801\u4e2d\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\u3002</li> </ul> <p>\u26a0\ufe0f \u5982\u679c\u6709\u9519\u8bef\uff1a - <code>NameError: name 'BaseModel' is not defined</code>: \u8bf7\u68c0\u67e5\u60a8\u662f\u5426\u4ece <code>pydantic</code> \u5bfc\u5165\u4e86 <code>BaseModel</code>\u3002 - <code>NameError: name 'List' is not defined</code>: \u8bf7\u68c0\u67e5\u60a8\u662f\u5426\u4ece <code>typing</code> \u5bfc\u5165\u4e86 <code>List</code>\u3002 - \u5bf9 <code>/spaceships</code> \u7684\u54cd\u5e94\u4e3a\u7a7a (<code>[]</code>): \u8bf7\u786e\u4fdd\u60a8\u5df2\u5c06 <code>return db_spaceships</code> \u66f4\u6539\u4e3a <code>return list(db_spaceships.values())</code>\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/4/","title":"\u7b2c3.4\u7ae0\uff1a\u822a\u5929\u5668\u7684CRUD\u64cd\u4f5c","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 1\u5c0f\u65f6</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/4/#1-crud","title":"1. CRUD\uff1a\u822a\u5929\u4efb\u52a1\u7684\u5b8c\u6574\u7ba1\u7406\u5468\u671f","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ea\u8bfb\u53d6\u4e86\u6570\u636e\uff08<code>Read</code>\uff09\u3002\u4f46\u771f\u6b63\u7684\u98de\u884c\u63a7\u5236\u4e2d\u5fc3\u5fc5\u987b\u80fd\u591f\u505a\u5230\u4e00\u5207\uff1a</p> <ul> <li>Create\uff08\u521b\u5efa\uff09\uff1a\u5c06\u65b0\u536b\u661f\u9001\u5165\u8f68\u9053\u3002</li> <li>Read\uff08\u8bfb\u53d6\uff09\uff1a\u67e5\u8be2\u73b0\u6709\u822a\u5929\u5668\u7684\u72b6\u6001\u3002</li> <li>Update\uff08\u66f4\u65b0\uff09\uff1a\u8c03\u6574\u8f68\u9053\u6216\u66f4\u65b0\u8f6f\u4ef6\u3002</li> <li>Delete\uff08\u5220\u9664\uff09\uff1a\u8ba9\u65e7\u536b\u661f\u8131\u79bb\u8f68\u9053\u3002</li> </ul> <p>\u8fd9\u56db\u9879\u64cd\u4f5c\u2014\u2014CRUD\u2014\u2014\u6784\u6210\u4e86\u5927\u591a\u6570API\u7684\u57fa\u7840\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b9e\u73b0\u7ba1\u7406\u6211\u4eec\u8230\u961f\u7684\u5b8c\u6574\u5468\u671f\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/4/#2-post","title":"2. \u521b\u5efa\uff1a\u53d1\u5c04\u65b0\u98de\u8239 (POST)","text":"<p>\u4e3a\u4e86\u521b\u5efa\u65b0\u7684\u822a\u5929\u5668\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 <code>POST</code> \u65b9\u6cd5\u3002\u65b0\u98de\u8239\u7684\u6570\u636e\u5c06\u4ee5 JSON \u683c\u5f0f\u5728\u8bf7\u6c42\u4f53\u4e2d\u4f20\u8f93\u3002</p> <p>\u6b65\u9aa41\uff1a\u4e3a\u4f20\u5165\u6570\u636e\u521b\u5efa\u65b0\u7684 Pydantic \u6a21\u578b \u4e3a\u4ec0\u4e48\u9700\u8981\u65b0\u6a21\u578b\uff1f\u56e0\u4e3a\u5728\u521b\u5efa\u98de\u8239\u65f6\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u7684 <code>id</code>\u2014\u2014\u5b83\u5e94\u8be5\u7531\u670d\u52a1\u5668\u5206\u914d\u3002</p> <p>\u5c06\u6b64\u6a21\u578b\u6dfb\u52a0\u5230 <code>main.py</code>\uff1a <pre><code># main.py\nfrom pydantic import BaseModel, Field\n\nclass SpaceshipCreate(BaseModel):\n    \"\"\"\u7528\u4e8e\u521b\u5efa\u65b0\u98de\u8239\u7684\u6a21\u578b\uff08\u4e0d\u5e26ID\uff09\u3002\"\"\"\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n</code></pre> \u6b64\u6a21\u578b\u4e0e <code>Spaceship</code> \u51e0\u4e4e\u76f8\u540c\uff0c\u4f46\u5b83\u5c06\u7528\u4e8e\u4f20\u5165\u6570\u636e\u9a8c\u8bc1\u3002</p> <p>\u6b65\u9aa42\uff1a\u5b9e\u73b0 <code>POST /spaceships</code> \u7aef\u70b9 <pre><code># main.py\nimport random # \u5728\u6587\u4ef6\u9876\u90e8\u6dfb\u52a0\u6b64\u5bfc\u5165\n\n# ... \u5176\u4ed6\u4ee3\u7801 ...\n\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201)\ndef create_spaceship(ship: SpaceshipCreate):\n    \"\"\"\n    \u5c06\u65b0\u7684\u822a\u5929\u5668\u6dfb\u52a0\u5230\u6ce8\u518c\u8868\u4e2d\u3002\n    \"\"\"\n    # \u4e3a\u98de\u8239\u751f\u6210\u65b0\u7684\u552f\u4e00ID\n    new_id = max(db_spaceships.keys() or [0]) + 1\n\n    # \u521b\u5efa\u4e0e\u5b8c\u6574 Spaceship \u6a21\u578b\u5bf9\u5e94\u7684\u98de\u8239\u5bf9\u8c61\n    new_ship = Spaceship(id=new_id, **ship.dict())\n\n    # \u4fdd\u5b58\u5230\u6211\u4eec\u7684\u201c\u6570\u636e\u5e93\u201d\u4e2d\n    db_spaceships[new_id] = new_ship.dict()\n\n    return new_ship\n</code></pre> \u89e3\u8bfb\uff1a</p> <ul> <li><code>@app.post(...)</code>\uff1a\u7528\u4e8e <code>POST</code> \u8bf7\u6c42\u7684\u88c5\u9970\u5668\u3002</li> <li><code>status_code=201</code>\uff1a\u6307\u793a\u6210\u529f\u521b\u5efa\u65f6\u5e94\u8fd4\u56de <code>201 Created</code> \u72b6\u6001\u7801\u3002</li> <li><code>ship: SpaceshipCreate</code>\uff1a\u8fd9\u5c31\u662f\u9b54\u6cd5\uff01FastAPI \u5c06\u81ea\u52a8\u83b7\u53d6\u8bf7\u6c42\u4f53 (JSON)\uff0c\u6839\u636e <code>SpaceshipCreate</code> \u6a21\u578b\u5bf9\u5176\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a <code>ship</code> \u5bf9\u8c61\u4f20\u9012\u7ed9\u51fd\u6570\u3002</li> <li><code>new_id = ...</code>\uff1a\u751f\u6210\u65b0ID\u7684\u7b80\u5355\u903b\u8f91\u3002</li> <li><code>**ship.dict()</code>\uff1a\u6211\u4eec\u201c\u89e3\u5305\u201d\u4ece\u63a5\u53d7\u7684 <code>ship</code> \u6a21\u578b\u4e2d\u83b7\u53d6\u7684\u6570\u636e\u5230\u6211\u4eec\u7684\u5b8c\u6574\u6a21\u578b\u4e2d\u3002</li> <li><code>response_model=Spaceship</code>\uff1a\u54cd\u5e94\u5c06\u7b26\u5408\u5b8c\u6574\u6a21\u578b\uff0c\u5305\u62ec <code>id</code>\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/4/#3-put","title":"3. \u66f4\u65b0\uff1a\u822a\u5411\u4fee\u6b63 (PUT)","text":"<p>\u4e3a\u4e86\u5b8c\u6574\u66f4\u65b0\u73b0\u6709\u8d44\u6e90\uff0c\u4f7f\u7528 <code>PUT</code> \u65b9\u6cd5\u3002</p> <p>\u5b9e\u73b0 <code>PUT /spaceships/{ship_id}</code> \u7aef\u70b9\uff1a <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # \u66f4\u65b0\u5bfc\u5165\n\n# ... \u5176\u4ed6\u4ee3\u7801 ...\n\n@app.put(\"/spaceships/{ship_id}\", response_model=Spaceship)\ndef update_spaceship(ship_id: int, ship_update: SpaceshipCreate):\n    \"\"\"\n    \u5b8c\u6574\u66f4\u65b0\u822a\u5929\u5668\u6570\u636e\u3002\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"\u822a\u5929\u5668\u672a\u627e\u5230\")\n\n    updated_ship = Spaceship(id=ship_id, **ship_update.dict())\n    db_spaceships[ship_id] = updated_ship.dict()\n\n    return updated_ship\n</code></pre></p> <ul> <li><code>ship_update: SpaceshipCreate</code>\uff1a\u6211\u4eec\u518d\u6b21\u4f7f\u7528\u6211\u4eec\u7684\u6a21\u578b\u6765\u9a8c\u8bc1\u4f20\u5165\u6570\u636e\u3002</li> <li><code>HTTPException</code>\uff1a\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5 <code>id</code> \u7684\u98de\u8239\uff0c\u6211\u4eec\u201c\u629b\u51fa\u201d\u6807\u51c6\u7684 FastAPI \u5f02\u5e38\uff0c\u5b83\u5c06\u8f6c\u6362\u4e3a\u5e26\u6709 <code>404</code> \u4ee3\u7801\u7684\u6f02\u4eae JSON \u54cd\u5e94\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/4/#4-delete","title":"4. \u5220\u9664\uff1a\u8131\u79bb\u8f68\u9053 (DELETE)","text":"<p>\u4e3a\u4e86\u5220\u9664\u8d44\u6e90\uff0c\u4f7f\u7528 <code>DELETE</code> \u65b9\u6cd5\u3002\u901a\u5e38\u6b64\u7c7b\u7aef\u70b9\u4e0d\u8fd4\u56de\u54cd\u5e94\u4f53\u3002</p> <p>\u5b9e\u73b0 <code>DELETE /spaceships/{ship_id}</code> \u7aef\u70b9\uff1a <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException, Response, status # \u66f4\u65b0\u5bfc\u5165\n\n# ... \u5176\u4ed6\u4ee3\u7801 ...\n\n@app.delete(\"/spaceships/{ship_id}\", status_code=status.HTTP_204_NO_CONTENT)\ndef delete_spaceship(ship_id: int):\n    \"\"\"\n    \u4ece\u6ce8\u518c\u8868\u4e2d\u5220\u9664\u822a\u5929\u5668\u3002\n    \"\"\"\n    if ship_id not in db_spaceships:\n        raise HTTPException(status_code=404, detail=\"\u822a\u5929\u5668\u672a\u627e\u5230\")\n\n    del db_spaceships[ship_id]\n\n    # \u8fd4\u56de\u72b6\u6001\u7801\u4e3a 204 \u7684\u7a7a\u54cd\u5e94\n    return Response(status_code=status.HTTP_204_NO_CONTENT)\n</code></pre></p> <ul> <li><code>status_code=status.HTTP_204_NO_CONTENT</code>\uff1a\u6211\u4eec\u660e\u786e\u6307\u5b9a\u72b6\u6001 <code>204 No Content</code>\u3002</li> <li><code>del db_spaceships[ship_id]</code>\uff1a\u4ece\u6211\u4eec\u7684\u5b57\u5178\u4e2d\u5220\u9664\u8bb0\u5f55\u3002</li> <li><code>return Response(...)</code>\uff1a\u8fd4\u56de\u7a7a\u54cd\u5e94\uff0c\u56e0\u4e3a\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u5173\u4e8e\u5df2\u5220\u9664\u5bf9\u8c61\u7684\u6570\u636e\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/4/#5-docs","title":"5. \u5728 <code>/docs</code> \u4e2d\u6d4b\u8bd5\u5b8c\u6574\u5468\u671f","text":"<p>\u60a8\u7684 <code>uvicorn</code> \u5e94\u8be5\u5df2\u7ecf\u91cd\u65b0\u52a0\u8f7d\u3002</p> <ol> <li>\u6253\u5f00 <code>http://127.0.0.1:8000/docs</code>\u3002\u73b0\u5728\u60a8\u62e5\u6709\u4e86\u4e00\u6574\u5957 CRUD \u64cd\u4f5c\uff01</li> <li>POST\uff1a \u5c55\u5f00 <code>POST /spaceships</code> \u7aef\u70b9\uff0c\u70b9\u51fb\u201cTry it out\u201d\uff0c\u586b\u5199 JSON \u4f53\uff08\u4f8b\u5982\uff0c\u521b\u5efa\u4e00\u4e2a\u201c\u8a79\u59c6\u65af\u00b7\u97e6\u4f2f\u671b\u8fdc\u955c\u201d\uff09\uff0c\u7136\u540e\u70b9\u51fb\u201cExecute\u201d\u3002\u60a8\u5e94\u8be5\u4f1a\u6536\u5230 <code>201</code> \u54cd\u5e94\uff0c\u5176\u4e2d\u5305\u542b\u65b0\u671b\u8fdc\u955c\u7684\u6570\u636e\u3002</li> <li>GET\uff1a \u73b0\u5728\u6267\u884c <code>GET /spaceships</code>\u3002\u60a8\u7684\u65b0\u671b\u8fdc\u955c\u5e94\u8be5\u4f1a\u51fa\u73b0\u5728\u5217\u8868\u4e2d\u3002</li> <li>PUT\uff1a \u4f7f\u7528\u65b0\u671b\u8fdc\u955c\u7684 ID\uff0c\u901a\u8fc7 <code>PUT /spaceships/{ship_id}</code> \u66f4\u65b0\u5176\u6570\u636e\u3002\u4f8b\u5982\uff0c\u66f4\u6539\u5176\u72b6\u6001\u3002</li> <li>DELETE\uff1a \u4f7f\u7528\u76f8\u540c\u7684 ID\uff0c\u901a\u8fc7 <code>DELETE /spaceships/{ship_id}</code> \u5220\u9664\u671b\u8fdc\u955c\u3002\u60a8\u5e94\u8be5\u4f1a\u6536\u5230\u72b6\u6001\u4e3a <code>204</code> \u7684\u7a7a\u54cd\u5e94\u3002</li> <li>\u68c0\u67e5\uff1a \u518d\u6b21\u6267\u884c <code>GET /spaceships</code>\uff0c\u4ee5\u786e\u8ba4\u671b\u8fdc\u955c\u5df2\u4ece\u5217\u8868\u4e2d\u5220\u9664\u3002</li> </ol>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/4/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. \u521b\u5efa\u65b0\u8d44\u6e90\u4f7f\u7528\u54ea\u4e2a HTTP \u65b9\u6cd5\uff1f</p>  a) GET  b) PUT  c) POST <p>2. `DELETE` \u64cd\u4f5c\u7684\u6807\u51c6\u6210\u529f\u72b6\u6001\u7801\u662f\uff1a</p>  a) 200 OK  b) 204 No Content  c) 404 Not Found <p>3. FastAPI \u5982\u4f55\u4ece POST \u8bf7\u6c42\u4f53\u4e2d\u83b7\u53d6\u6570\u636e\uff1f</p>  a) \u901a\u8fc7\u5168\u5c40\u53d8\u91cf `$_POST`  b) \u5982\u679c\u51fd\u6570\u53c2\u6570\u4e2d\u6307\u5b9a\u4e86 Pydantic \u6a21\u578b\uff0c\u5219\u81ea\u52a8\u83b7\u53d6  c) \u9700\u8981\u624b\u52a8\u8bfb\u53d6 `request.body` \u6d41 <p>4. `raise HTTPException(status_code=404)` \u7528\u4e8e\uff1a</p>  a) \u751f\u6210\u81f4\u547d\u7684\u670d\u52a1\u5668\u9519\u8bef (500)  b) \u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u5e26\u6709\u9519\u8bef\u7684\u6b63\u786e HTTP \u54cd\u5e94  c) \u5c06\u9519\u8bef\u8bb0\u5f55\u5230\u6587\u4ef6 <p>5. \u4e3a\u4ec0\u4e48\u4e3a\u521b\u5efa\u8d44\u6e90\uff08`POST`\uff09\u521b\u5efa\u4e86\u4e00\u4e2a\u5355\u72ec\u7684 `SpaceshipCreate` \u6a21\u578b\uff1f</p>  a) \u56e0\u4e3a\u6b63\u5728\u521b\u5efa\u7684\u5bf9\u8c61\u8fd8\u6ca1\u6709 `id`  b) \u56e0\u4e3a FastAPI \u8981\u6c42\u6bcf\u4e2a\u7aef\u70b9\u6709\u4e0d\u540c\u7684\u6a21\u578b\u540d\u79f0  c) \u4e3a\u4e86\u52a0\u5feb\u9a8c\u8bc1\u901f\u5ea6 \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5b8c\u6574\u7684 CRUD \u5468\u671f\uff0c\u5e76\u5c06\u60a8\u7684 API \u4ece\u7b80\u5355\u7684\u201c\u4fe1\u606f\u663e\u793a\u677f\u201d\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u6210\u719f\u7684 \u8230\u961f\u63a7\u5236\u4e2d\u5fc3\uff01</p> <ul> <li>\u2705 Create\uff1a<code>POST /spaceships</code> \u7528\u4e8e\u53d1\u5c04\u65b0\u822a\u5929\u5668\u3002</li> <li>\u2705 Read\uff1a<code>GET /spaceships</code> \u548c <code>GET /spaceships/{id}</code> \u7528\u4e8e\u83b7\u53d6\u6570\u636e\u3002</li> <li>\u2705 Update\uff1a<code>PUT /spaceships/{id}</code> \u7528\u4e8e\u66f4\u65b0\u4efb\u52a1\u3002</li> <li>\u2705 Delete\uff1a<code>DELETE /spaceships/{id}</code> \u7528\u4e8e\u62a5\u5e9f\u822a\u5929\u5668\u3002</li> </ul> <p>\u60a8\u7684\u8230\u961f\u5c3d\u5728\u638c\u63e1\uff01 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230 FastAPI \u5982\u4f55\u81ea\u52a8\u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u8be6\u7ec6\u7684\u201c\u64cd\u4f5c\u624b\u518c\u201d\u2014\u2014\u4ea4\u4e92\u5f0f Swagger \u6587\u6863\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li>\u6240\u6709 5 \u4e2a\u7aef\u70b9\uff08<code>GET</code> (2)\u3001<code>POST</code>\u3001<code>PUT</code>\u3001<code>DELETE</code>\uff09\u5728 <code>/docs</code> \u4e2d\u53ef\u89c1\u5e76\u6b63\u5e38\u5de5\u4f5c\u3002</li> <li>\u60a8\u53ef\u4ee5\u6210\u529f\u521b\u5efa\u3001\u8bfb\u53d6\u3001\u66f4\u65b0\u548c\u5220\u9664\u8d44\u6e90\u3002</li> <li>\u8bf7\u6c42\u4e0d\u5b58\u5728\u7684 ID \u65f6\u8fd4\u56de <code>404</code> \u9519\u8bef\u3002</li> </ul> <p>\u26a0\ufe0f \u5982\u679c\u51fa\u73b0\u9519\u8bef\uff1a</p> <ul> <li><code>NameError</code>\uff1a\u68c0\u67e5\u60a8\u662f\u5426\u5bfc\u5165\u4e86 <code>HTTPException</code>\u3001<code>Response</code>\u3001<code>status</code>\u3002</li> <li><code>KeyError</code>\uff1a\u60a8\u53ef\u80fd\u6b63\u5728\u5c1d\u8bd5\u8bbf\u95ee\u5df2\u5220\u9664\u7684 ID\u3002</li> <li><code>PUT</code> \u6216 <code>POST</code> \u64cd\u4f5c\u4e0d\u6b63\u786e\uff1a\u8bf7\u786e\u4fdd\u5728\u51fd\u6570\u53c2\u6570\u4e2d\u4f7f\u7528\u4e86\u6b63\u786e\u7684 Pydantic \u6a21\u578b\uff08<code>SpaceshipCreate</code>\uff09\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/5/","title":"\u7b2c3.5\u7ae0\uff1aSwagger \u81ea\u52a8\u6587\u6863","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 30\u5206\u949f</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/5/#1-api","title":"1. API \u6587\u6863\uff1a\u7a7a\u95f4\u7ad9\u64cd\u4f5c\u624b\u518c","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u662f\u4e00\u540d\u521a\u62b5\u8fbe\u56fd\u9645\u7a7a\u95f4\u7ad9\u7684\u65b0\u5b87\u822a\u5458\u3002\u4f60\u5982\u4f55\u77e5\u9053\u6bcf\u4e2a\u5f00\u5173\u7684\u529f\u80fd\u4ee5\u53ca\u5982\u4f55\u64cd\u4f5c\u673a\u68b0\u81c2\uff1f\u4f60\u9700\u8981\u4e00\u4efd\u8be6\u7ec6\u4e14\u6700\u65b0\u7684\u64cd\u4f5c\u624b\u518c\u3002</p> <p>API \u6587\u6863\u5bf9\u5f00\u53d1\u8005\u6765\u8bf4\u5c31\u662f\u8fd9\u6837\u4e00\u4efd\u624b\u518c\u3002\u5b83\u89e3\u91ca\u4e86\uff1a</p> <ul> <li>\u6709\u54ea\u4e9b\u201c\u5bf9\u63a5\u7aef\u53e3\u201d\uff08endpoints\uff09\u53ef\u7528\u3002</li> <li>\u53ef\u4ee5\u53d1\u9001\u54ea\u4e9b\u201c\u547d\u4ee4\u201d\uff08HTTP \u65b9\u6cd5\uff09\u3002</li> <li>\u9700\u8981\u4f20\u8f93\u54ea\u4e9b\u201c\u8d27\u7269\u201d\uff08\u6570\u636e\uff09\u3002</li> <li>\u9884\u671f\u4f1a\u6536\u5230\u54ea\u4e9b\u201c\u9065\u6d4b\u6570\u636e\u201d\uff08\u54cd\u5e94\uff09\u3002</li> </ul> <p>\u95ee\u9898\u5728\u4e8e\uff0c\u624b\u52a8\u7f16\u5199\u6587\u6863\u8017\u65f6\u3001\u67af\u71e5\uff0c\u800c\u4e14\u51e0\u4e4e\u603b\u662f\u4f1a\u8fc7\u65f6\u3002</p> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a</p> <p>\u624b\u52a8\u6587\u6863\u5c31\u50cf\u7eb8\u8d28\u56fe\u7eb8\uff0c\u5b83\u4eec\u8eba\u5728\u6863\u6848\u5ba4\u91cc\uff0c\u7a7a\u95f4\u7ad9\u6539\u9020\u540e\u4e5f\u4e0d\u4f1a\u66f4\u65b0\u3002 FastAPI \u81ea\u52a8\u6587\u6863\u662f\u6307\u6325\u4e2d\u5fc3\uff08\u0426\u0423\u041f\uff09\u7684\u4ea4\u4e92\u5f0f\u663e\u793a\u5c4f\uff0c\u5728\u7a7a\u95f4\u7ad9\u6bcf\u6b21\u53d8\u66f4\u540e\u90fd\u4f1a\u5b9e\u65f6\u66f4\u65b0\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/5/#2-fastapi","title":"2. FastAPI \u7684\u9b54\u529b\uff1a\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f","text":"<p>FastAPI \u57fa\u4e8e\u4f60\u7684\u4ee3\u7801\u4e3a\u4f60\u5b8c\u6210\u4e86\u6240\u6709\u201c\u810f\u6d3b\u7d2f\u6d3b\u201d\u3002\u5b83\u4f1a\u626b\u63cf\uff1a</p> <ol> <li>\u8def\u7531\uff1a \u6240\u6709 <code>@app.get</code>\u3001<code>@app.post</code> \u7b49\u88c5\u9970\u5668\u3002</li> <li>\u53c2\u6570\uff1a \u8def\u5f84\u53c2\u6570\uff08<code>ship_id: int</code>\uff09\u548c\u67e5\u8be2\u53c2\u6570\u3002</li> <li>Pydantic \u6a21\u578b\uff1a \u4f60\u7684\u201c\u84dd\u56fe\u201d\uff08<code>Spaceship</code>\u3001<code>SpaceshipCreate</code>\uff09\u3002</li> <li>\u6587\u6863\u5b57\u7b26\u4e32 (docstrings)\uff1a \u4f60\u7528\u4e09\u91cd\u5f15\u53f7\u7f16\u5199\u7684\u63cf\u8ff0\u3002</li> </ol> <p>\u57fa\u4e8e\u8fd9\u4e9b\u6570\u636e\uff0cFastAPI \u4f1a\u751f\u6210\u7b26\u5408 OpenAPI \u6807\u51c6\uff08\u4ee5\u524d\u79f0\u4e3a Swagger\uff09\u7684\u6a21\u5f0f\uff0c\u7136\u540e\u901a\u8fc7\u4e24\u4e2a\u7f8e\u89c2\u7684\u754c\u9762\u5c55\u793a\u5b83\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/5/#3-swagger-ui","title":"3. \u63a2\u7d22\u201c\u6307\u6325\u4e2d\u5fc3\u663e\u793a\u5c4f\u201d\uff1aSwagger UI","text":"<p>Swagger UI \u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u754c\u9762\uff0c\u5b83\u4e0d\u4ec5\u5141\u8bb8\u4f60\u9605\u8bfb\u6587\u6863\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4ece\u6d4f\u89c8\u5668\u6d4b\u8bd5 API\u3002</p> <p>\u6253\u5f00 <code>http://127.0.0.1:8000/docs</code></p> <p>\u4f60\u4f1a\u770b\u5230\uff1a</p> <ul> <li>\u7aef\u70b9\u5217\u8868\uff1a \u6309\u6807\u7b7e\u5206\u7ec4\uff08\u9ed8\u8ba4\u6309\u8d44\u6e90\u540d\u79f0\uff09\uff0c\u5e76\u7528 HTTP \u65b9\u6cd5\u7684\u989c\u8272\u7740\u8272\u3002</li> <li>\u63cf\u8ff0\uff1a \u4f60\u7684\u6587\u6863\u5b57\u7b26\u4e32\uff08<code>\"\"\"...\"\"\"</code>\uff09\u4e2d\u7684\u6587\u672c\u4f1a\u663e\u793a\u4e3a\u7aef\u70b9\u63cf\u8ff0\u3002</li> <li>\u53c2\u6570\uff1a \u663e\u793a\u7aef\u70b9\u671f\u671b\u54ea\u4e9b\u53c2\u6570\uff08\u5982 <code>ship_id</code>\uff09\u3001\u5b83\u4eec\u7684\u7c7b\u578b\u548c\u662f\u5426\u5fc5\u586b\u3002</li> <li>\u8bf7\u6c42\u4f53 (Request Body)\uff1a \u5bf9\u4e8e <code>POST</code> \u548c <code>PUT</code> \u8bf7\u6c42\uff0c\u663e\u793a\u4ece\u4f60\u7684 Pydantic \u6a21\u578b\uff08<code>SpaceshipCreate</code>\uff09\u751f\u6210\u7684 JSON \u6a21\u5f0f\u3002</li> <li>\u54cd\u5e94 (Responses)\uff1a \u663e\u793a\u53ef\u80fd\u7684\u72b6\u200b\u200b\u6001\u7801\u548c\u57fa\u4e8e <code>response_model</code> \u7684\u54cd\u5e94\u6a21\u5f0f\u3002</li> <li>\u201cTry it out\u201d\u6309\u94ae\uff1a \u5141\u8bb8\u4f60\u586b\u5199\u53c2\u6570\u5e76\u5411\u4f60\u7684\u670d\u52a1\u5668\u53d1\u9001\u5b9e\u9645\u8bf7\u6c42\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/5/#4","title":"4. \u6539\u8fdb\u6587\u6863\uff1a\u6807\u7b7e\u548c\u63cf\u8ff0","text":"<p>\u8ba9\u6211\u4eec\u8ba9\u6587\u6863\u770b\u8d77\u6765\u66f4\u4e13\u4e1a\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u5728 <code>FastAPI</code> \u4e2d\u6dfb\u52a0\u5143\u6570\u636e \u5728\u521b\u5efa <code>app</code> \u65f6\uff0c\u4f60\u53ef\u4ee5\u4f20\u9012\u5173\u4e8e API \u7684\u4e00\u822c\u4fe1\u606f\u3002</p> <p>\u4fee\u6539 <code>main.py</code> \u4e2d\u7684 <code>app = FastAPI()</code> \u884c\uff1a <pre><code># main.py\n\napp = FastAPI(\n    title=\"Fleet Management API\",\n    description=\"API \u7528\u4e8e\u7ba1\u7406\u822a\u5929\u5668\u8230\u961f\u3002\",\n    version=\"1.0.0\",\n)\n</code></pre> \u73b0\u5728\uff0c\u4f60\u7684\u6587\u6863\u9876\u90e8\u5c06\u663e\u793a\u6807\u9898\u548c\u63cf\u8ff0\u3002</p> <p>\u6b65\u9aa4 2\uff1a\u4f7f\u7528\u6807\u7b7e\u5bf9\u7aef\u70b9\u8fdb\u884c\u5206\u7ec4 \u4f60\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u7aef\u70b9\u6dfb\u52a0\u6807\u7b7e\uff0c\u4ee5\u4fbf\u6309\u903b\u8f91\u5bf9\u5176\u8fdb\u884c\u5206\u7ec4\u3002</p> <p>\u5728\u88c5\u9970\u5668\u4e2d\u6dfb\u52a0 <code>tags</code> \u53c2\u6570\uff1a <pre><code># GET /spaceships\n@app.get(\"/spaceships\", response_model=List[Spaceship], tags=[\"\u822a\u5929\u5668\"])\n# ...\n\n# GET /spaceships/{ship_id}\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"\u822a\u5929\u5668\"])\n# ...\n\n# POST /spaceships\n@app.post(\"/spaceships\", response_model=Spaceship, status_code=201, tags=[\"\u822a\u5929\u5668\"])\n# ...\n\n# PUT \u548c DELETE \u4f9d\u6b64\u7c7b\u63a8\n</code></pre> \u73b0\u5728\uff0c\u4f60\u6240\u6709\u7684 CRUD \u64cd\u4f5c\u90fd\u5c06\u6574\u9f50\u5730\u5206\u7ec4\u5728\u201c\u822a\u5929\u5668\u201d\u6807\u9898\u4e0b\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/5/#5-redoc","title":"5. \u53e6\u4e00\u79cd\u89c6\u56fe\uff1aReDoc","text":"<p>FastAPI \u63d0\u4f9b\u4e86\u53e6\u4e00\u4e2a\u201c\u5f00\u7bb1\u5373\u7528\u201d\u7684\u6587\u6863\u754c\u9762\u2014\u2014ReDoc\u3002\u5b83\u4ea4\u4e92\u6027\u8f83\u4f4e\uff0c\u4f46\u901a\u5e38\u88ab\u8ba4\u4e3a\u66f4\u5177\u53ef\u8bfb\u6027\uff0c\u975e\u5e38\u9002\u5408\u9759\u6001\u6587\u6863\u3002</p> <p>\u6253\u5f00 <code>http://127.0.0.1:8000/redoc</code></p> <p>\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u4e09\u5217\u5e03\u5c40\uff0c\u5305\u542b\u5bfc\u822a\u3001\u7aef\u70b9\u63cf\u8ff0\u548c\u6570\u636e\u6a21\u5f0f\u3002\u8fd9\u662f\u5411\u4f60\u7684\u201c\u5ba2\u6237\u201d\uff08\u4f8b\u5982\u524d\u7aef\u56e2\u961f\uff09\u63d0\u4f9b\u6587\u6863\u7684\u597d\u65b9\u6cd5\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/5/#_1","title":"\u5de9\u56fa\u7ec3\u4e60\u5c0f\u6d4b\u9a8c","text":"<p>1. FastAPI \u751f\u6210\u6587\u6863\u7684\u4f9d\u636e\u662f...</p>  a) \u9700\u8981\u624b\u52a8\u521b\u5efa\u7684\u72ec\u7acb `.html` \u6587\u4ef6  b) \u4f60\u7684 Python \u4ee3\u7801\uff1a\u8def\u7531\u3001Pydantic \u6a21\u578b\u548c\u6587\u6863\u5b57\u7b26\u4e32  c) \u4ee5 `#` \u5f00\u5934\u7684\u6ce8\u91ca <p>2. FastAPI \u81ea\u52a8\u6587\u6863\u7684\u57fa\u7840\u6807\u51c6\u662f\u4ec0\u4e48\uff1f</p>  a) GraphQL  b) XML-RPC  c) OpenAPI (Swagger) <p>3. Swagger UI \u4ea4\u4e92\u5f0f\u6587\u6863\u9ed8\u8ba4\u5728\u54ea\u4e2a URL \u4e0b\u53ef\u7528\uff1f</p>  a) `/admin`  b) `/docs`  c) `/api/help` <p>4. \u88c5\u9970\u5668 `@app.get` \u4e2d\u7684 `tags` \u53c2\u6570\u7528\u4e8e\uff1a</p>  a) \u5728 HTML \u4e2d\u6dfb\u52a0\u5143\u6807\u7b7e  b) \u5728\u6587\u6863\u4e2d\u5bf9\u7aef\u70b9\u8fdb\u884c\u5206\u7ec4  c) \u5c06\u7aef\u70b9\u6807\u8bb0\u4e3a\u5df2\u8fc7\u65f6 <p>5. ReDoc \u662f...</p>  a) \u6d4f\u89c8\u5668\u4e2d\u7684\u4ee3\u7801\u7f16\u8f91\u5de5\u5177  b) API \u6587\u6863\u7684\u53e6\u4e00\u79cd\u3001\u66f4\u9759\u6001\u7684\u754c\u9762  c) \u7528\u4e8e\u68c0\u6d4b\u201c\u7ea2\u8272\u201d\uff08\u4e0d\u5de5\u4f5c\uff09\u4ee3\u7801\u7684\u7cfb\u7edf \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u4f60\u5df2\u7ecf\u4e86\u89e3\u4e86 FastAPI \u6700\u5f3a\u5927\u7684\u201c\u8d85\u80fd\u529b\u201d\u4e4b\u4e00\u2014\u2014\u6beb\u4e0d\u8d39\u529b\u5730\u521b\u5efa\u6587\u6863\u3002</p> <ul> <li>\ud83d\udcd6 \u4f60\u7684 API \u73b0\u5728\u62e5\u6709\u4e24\u79cd\u6700\u65b0\u7684\u6587\u6863\u89c6\u56fe\uff1aSwagger UI \u548c ReDoc\u3002</li> <li>\ud83d\udd2c \u6587\u6863\u662f\u4ea4\u4e92\u5f0f\u7684\uff0c\u5141\u8bb8\u4f60\u5373\u65f6\u6d4b\u8bd5 API\u3002</li> <li>\ud83c\udff7\ufe0f \u4f60\u5b66\u4f1a\u4e86\u5982\u4f55\u901a\u8fc7\u5143\u6570\u636e\u548c\u6807\u7b7e\u6765\u6539\u8fdb\u5b83\u3002</li> </ul> <p>\u64cd\u4f5c\u624b\u518c\u5df2\u5c31\u7eea\uff0c\u5e76\u4e14\u59cb\u7ec8\u4fdd\u6301\u6700\u65b0\uff01 \u5728\u672c\u8282\u7684\u6700\u540e\u4e00\u7ae0\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5904\u7406\u201c\u592a\u7a7a\u5f02\u5e38\u201d\u2014\u2014\u9519\u8bef\u548c\u4e0d\u6b63\u786e\u7684\u6570\u636e\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li>\u786e\u4fdd\u5728 <code>http://127.0.0.1:8000/docs</code> \u5730\u5740\u663e\u793a\u6807\u9898\u3001\u63cf\u8ff0\u548c\u6309\u6807\u7b7e\u5206\u7ec4\u7684\u7aef\u70b9\u3002</li> <li>\u68c0\u67e5\u201cSchemas\u201d\u90e8\u5206\u662f\u5426\u663e\u793a\u4f60\u7684 <code>Spaceship</code> \u6a21\u578b\u3002</li> <li>\u6253\u5f00 <code>http://127.0.0.1:8000/redoc</code> \u5e76\u8bc4\u4f30\u66ff\u4ee3\u89c6\u56fe\u3002</li> </ul> <p>\u26a0\ufe0f \u5982\u679c\u66f4\u6539\u672a\u663e\u793a\uff1a</p> <ul> <li>\u786e\u4fdd\u4f60\u5df2\u4fdd\u5b58 <code>main.py</code> \u6587\u4ef6\u3002</li> <li>\u68c0\u67e5 <code>uvicorn</code> \u670d\u52a1\u5668\u662f\u5426\u5df2\u4f7f\u7528 <code>--reload</code> \u6807\u5fd7\u542f\u52a8\u5e76\u6210\u529f\u91cd\u65b0\u52a0\u8f7d\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/6/","title":"\u7b2c 3.6 \u7ae0\uff1a\u9519\u8bef\u5904\u7406\u4e0e\u6570\u636e\u9a8c\u8bc1","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 50 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/6/#1","title":"1. \u9519\u8bef\u5904\u7406\uff1a\u201c\u98de\u8239\u7684\u5e94\u6025\u62a4\u76fe\u201d","text":"<p>\u5373\u4f7f\u662f\u6700\u5b8c\u7f8e\u7684\u98de\u8239\uff0c\u4e5f\u53ef\u80fd\u53d1\u751f\u610f\u60f3\u4e0d\u5230\u7684\u60c5\u51b5\uff1a</p> <ul> <li>\u6765\u81ea\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u7684\u9519\u8bef\u6307\u4ee4\uff1a \u5ba2\u6237\u7aef\u53d1\u9001\u4e86\u4e0d\u6b63\u786e\u7684\u6570\u636e\u3002</li> <li>\u4e0e\u6a21\u5757\u5931\u53bb\u8054\u7cfb\uff1a \u6570\u636e\u5e93\u4e2d\u672a\u627e\u5230\u8d44\u6e90\u3002</li> <li>\u53cd\u5e94\u5806\u6545\u969c\uff1a \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef\u3002</li> </ul> <p>\u6b63\u786e\u7684\u9519\u8bef\u5904\u7406\u662f\u4e00\u5957\u201c\u5e94\u6025\u62a4\u76fe\u201d\u7cfb\u7edf\u3002\u5b83\u4e0d\u4f1a\u8ba9\u98de\u8239\u89e3\u4f53\uff0c\u800c\u662f\u5411\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u53d1\u9001\u6e05\u6670\u7684\u4fe1\u53f7\uff0c\u544a\u77e5\u54ea\u91cc\u51fa\u4e86\u95ee\u9898\u3002</p> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a</p> <p>\u4e00\u4e2a\u4f18\u79c0\u7684\u673a\u8f7d\u7535\u8111\u4e0d\u4f1a\u53ea\u5411\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u53d1\u9001\u201c\u7d27\u6025\u60c5\u51b5\uff01\u201d\u7684\u4fe1\u53f7\uff0c\u800c\u662f\u4f1a\u53d1\u9001\u4e00\u4efd\u7ed3\u6784\u5316\u7684\u62a5\u544a\uff1a <pre><code>{\n  \"error_code\": \"ENGINE_OVERHEAT\",\n  \"message\": \"2\u53f7\u53d1\u52a8\u673a\u6e29\u5ea6\u8d85\u8fc7\u6b63\u5e38\u503c\",\n  \"suggested_action\": \"\u542f\u52a8\u51b7\u5374\u7cfb\u7edf\"\n}\n</code></pre> \u8fd9\u4f7f\u5f97\u5730\u7403\u4e0a\u7684\u5de5\u7a0b\u5e08\u80fd\u591f\u5feb\u901f\u7406\u89e3\u95ee\u9898\u5e76\u91c7\u53d6\u63aa\u65bd\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/6/#2-pydantic","title":"2. Pydantic \u6570\u636e\u9a8c\u8bc1\uff1a\u5185\u7f6e\u7684\u201c\u673a\u8f7d\u7535\u8111\u201d","text":"<p>\u6211\u4eec\u5df2\u7ecf\u89c1\u8bc6\u8fc7 Pydantic \u7684\u9b54\u529b\u3002\u5982\u679c\u4f60\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u9519\u8bef\u6570\u636e\u7c7b\u578b\uff08\u4f8b\u5982\uff0c\u5c06 <code>launch_year</code> \u8bbe\u4e3a\u5b57\u7b26\u4e32\uff09\u7684\u98de\u8239\uff0cFastAPI \u4f1a\u81ea\u52a8\u8fd4\u56de <code>422 Unprocessable Entity</code> \u9519\u8bef\uff0c\u5e76\u9644\u5e26\u8be6\u7ec6\u8bf4\u660e\u54ea\u4e2a\u5b57\u6bb5\u4ee5\u53ca\u4e3a\u4f55\u672a\u901a\u8fc7\u9a8c\u8bc1\u3002</p> <p><code>POST /spaceships</code> \u8bf7\u6c42\u793a\u4f8b\uff1a <pre><code>{\n  \"name\": \"X-Wing\",\n  \"type\": \"\u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c\",\n  \"launch_year\": \"\u0434\u0430\u0432\u043d\u043e\",  // &lt;-- \u7c7b\u578b\u9519\u8bef\uff01\n  \"status\": \"\u0412 \u0441\u0442\u0440\u043e\u044e\"\n}\n</code></pre></p> <p>FastAPI \u81ea\u52a8\u54cd\u5e94\uff1a <pre><code>{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"body\",\n        \"launch_year\"\n      ],\n      \"msg\": \"value is not a valid integer\",\n      \"type\": \"type_error.integer\"\n    }\n  ]\n}\n</code></pre> \u8fd9\u975e\u5e38\u5f3a\u5927\uff01\u4f60\u65e0\u9700\u7f16\u5199\u7c7b\u578b\u68c0\u67e5\u4ee3\u7801\u2014\u2014FastAPI \u548c Pydantic \u4f1a\u4e3a\u4f60\u5b8c\u6210\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/6/#3-httpexception","title":"3. \u5904\u7406\u201c\u8d44\u6e90\u672a\u627e\u5230\u201d\uff1a<code>HTTPException</code> \u5f02\u5e38","text":"<p>\u6211\u4eec\u5df2\u7ecf\u5728 CRUD \u64cd\u4f5c\u4e2d\u4f7f\u7528\u4e86\u5b83\u3002<code>HTTPException</code> \u662f FastAPI \u4e2d\u6b62\u8bf7\u6c42\u6267\u884c\u5e76\u7acb\u5373\u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u9519\u8bef\u54cd\u5e94\u7684\u6807\u51c6\u65b9\u5f0f\u3002</p> <p>\u56de\u987e <code>GET /spaceships/{ship_id}</code> \u4e2d\u7684\u4ee3\u7801\uff1a <pre><code># main.py\nfrom fastapi import FastAPI, HTTPException # \u786e\u4fdd\u5df2\u5bfc\u5165 HTTPException\n\n# ...\n\n@app.get(\"/spaceships/{ship_id}\", response_model=Spaceship, tags=[\"\u822a\u5929\u5668\"])\ndef get_spaceship(ship_id: int):\n    ship = db_spaceships.get(ship_id)\n    if not ship:\n        # \u5982\u679c\u98de\u8239\u672a\u627e\u5230\uff0c\u5219\u201c\u629b\u51fa\u201d 404 \u5f02\u5e38\n        raise HTTPException(status_code=404, detail=f\"ID \u4e3a {ship_id} \u7684\u822a\u5929\u5668\u672a\u627e\u5230\")\n    return ship\n</code></pre></p> <ul> <li><code>raise HTTPException(...)</code>\uff1a\u6b64\u8c03\u7528\u4f1a\u505c\u6b62\u51fd\u6570\u6267\u884c\u3002</li> <li><code>status_code=404</code>\uff1a\u8bbe\u7f6e HTTP \u54cd\u5e94\u72b6\u6001\u7801\u3002</li> <li><code>detail</code>\uff1a\u5c06\u901a\u8fc7 JSON \u54cd\u5e94\u4f53\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u7684\u6d88\u606f\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/6/#4","title":"4. \u81ea\u5b9a\u4e49\u9a8c\u8bc1\u5668\uff1a\u201c\u542f\u52a8\u524d\u7684\u7279\u6b8a\u68c0\u67e5\u201d","text":"<p>\u5982\u679c\u6211\u4eec\u60f3\u6dfb\u52a0\u81ea\u5df1\u7684\u3001\u66f4\u590d\u6742\u7684\u4e1a\u52a1\u903b\u8f91\u600e\u4e48\u529e\uff1f\u4f8b\u5982\uff0c\u7981\u6b62\u53d1\u5c04\u540d\u4e3a\u201c\u6b7b\u661f\u201d\u7684\u98de\u8239\u3002</p> <p>\u4e3a\u6b64\uff0cPydantic \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u5de5\u5177\u2014\u2014\u9a8c\u8bc1\u5668\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u5728 <code>SpaceshipCreate</code> \u6a21\u578b\u4e2d\u6dfb\u52a0\u9a8c\u8bc1\u5668 <pre><code># main.py\nfrom pydantic import BaseModel, Field, validator\n\nclass SpaceshipCreate(BaseModel):\n    name: str = Field(..., min_length=3, max_length=50)\n    type: str\n    launch_year: int = Field(..., gt=1950)\n    status: str\n\n    @validator('name')\n    def name_must_not_be_forbidden(cls, v):\n        \"\"\"\u68c0\u67e5\u98de\u8239\u540d\u79f0\u662f\u5426\u5728\u7981\u6b62\u5217\u8868\u4e2d\u3002\"\"\"\n        if 'Death Star' in v:\n            raise ValueError('\u6839\u636e\u5e1d\u56fd\u6cd5\u4ee4\uff0c\u7981\u6b62\u4f7f\u7528\u201c\u6b7b\u661f\u201d\u4e4b\u7c7b\u7684\u540d\u79f0\uff01')\n        return v.title() # \u540c\u65f6\u5c06\u540d\u79f0\u8f6c\u6362\u4e3a\u9996\u5b57\u6bcd\u5927\u5199\n</code></pre></p> <ul> <li><code>@validator('name')</code>\uff1a\u4e00\u4e2a\u5c06\u6b64\u51fd\u6570\u201c\u7ed1\u5b9a\u201d\u5230 <code>name</code> \u5b57\u6bb5\u7684\u88c5\u9970\u5668\u3002</li> <li><code>cls, v</code>\uff1a\u8be5\u65b9\u6cd5\u63a5\u6536\u7c7b\u672c\u8eab\uff08<code>cls</code>\uff09\u548c\u5b57\u6bb5\u7684\u503c\uff08<code>v</code>\uff09\u3002</li> <li><code>raise ValueError(...)</code>\uff1a\u5982\u679c\u9a8c\u8bc1\u672a\u901a\u8fc7\uff0c\u6211\u4eec\u5c06\u5f15\u53d1\u6807\u51c6\u7684 Python \u5f02\u5e38\u3002FastAPI \u4f1a\u6355\u83b7\u5b83\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6f02\u4eae\u7684 <code>422</code> \u9519\u8bef\u3002</li> <li><code>return v.title()</code>\uff1a\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u6211\u4eec\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u4fee\u6539\u5b83\uff08\u4f8b\u5982\uff0c\u8f6c\u6362\u4e3a\u6807\u51c6\u683c\u5f0f\uff09\u3002</li> </ul> <p>\u6b65\u9aa4 2\uff1a\u6d4b\u8bd5 \u91cd\u542f <code>uvicorn</code> \u5e76\u5c1d\u8bd5\u901a\u8fc7 <code>/docs</code> \u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u7981\u7528\u540d\u79f0\u7684\u98de\u8239\u3002\u4f60\u5c06\u6536\u5230\u4e00\u4e2a\u5e26\u6709\u4f60\u7684\u81ea\u5b9a\u4e49\u6d88\u606f\u7684 <code>422</code> \u9519\u8bef\uff01</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/6/#5","title":"5. \u5168\u5c40\u9519\u8bef\u5904\u7406\uff1a\u201c\u7ad9\u70b9\u7684\u5e94\u6025\u534f\u8bae\u201d","text":"<p>\u6709\u65f6\u9700\u8981\u6355\u83b7\u610f\u5916\u9519\u8bef\uff08\u4f8b\u5982\uff0c\u8fde\u63a5\u5230\u771f\u5b9e\u6570\u636e\u5e93\u5931\u8d25\uff09\u5e76\u8fd4\u56de\u7edf\u4e00\u3001\u6807\u51c6\u5316\u7684\u54cd\u5e94\u683c\u5f0f\u3002</p> <p>\u4e3a\u6b64\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>@app.exception_handler</code> \u88c5\u9970\u5668\u3002</p> <p>\u793a\u4f8b\uff1a\u6355\u83b7\u6240\u6709 <code>ValueError</code> \u9519\u8bef <pre><code># main.py\nfrom fastapi import FastAPI, Request\nfrom fastapi.responses import JSONResponse\n\n# ...\n\n@app.exception_handler(ValueError)\nasync def value_error_exception_handler(request: Request, exc: ValueError):\n    \"\"\"\n    \u6240\u6709 ValueError \u9519\u8bef\u7684\u5168\u5c40\u5904\u7406\u7a0b\u5e8f\uff0c\n    \u7528\u4e8e\u8fd4\u56de\u6807\u51c6\u5316\u7684 JSON\u3002\n    \"\"\"\n    return JSONResponse(\n        status_code=400,\n        content={\"message\": f\"\u6570\u636e\u9519\u8bef\uff1a{str(exc)}\"},\n    )\n</code></pre></p> <ul> <li><code>@app.exception_handler(ValueError)</code>\uff1a\u544a\u8bc9 FastAPI\uff0c\u6b64\u51fd\u6570\u5e94\u5904\u7406\u6240\u6709\u4e4b\u524d\u672a\u88ab\u6355\u83b7\u7684 <code>ValueError</code>\u3002</li> <li><code>async def ...</code>\uff1a\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u5fc5\u987b\u662f\u5f02\u6b65\u7684\uff08<code>async</code>\uff09\u3002</li> <li><code>JSONResponse</code>\uff1a\u5141\u8bb8\u5b8c\u5168\u63a7\u5236\u54cd\u5e94\u4f53\u548c\u72b6\u6001\u3002</li> </ul> <p>\u73b0\u5728\uff0c\u5f53\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u9a8c\u8bc1\u5668\u89e6\u53d1\u65f6\uff0c\u54cd\u5e94\u5c06\u91c7\u7528\u6211\u4eec\u5b9a\u4e49\u7684\u66f4\u53cb\u597d\u7684\u683c\u5f0f\u3002</p>"},{"location":"zh/%E7%AC%AC3%E7%AB%A0%20-%20Python%20FastAPI%20API/6/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. \u5982\u679c\u5ba2\u6237\u7aef\u53d1\u9001\u4e86\u9519\u8bef\u7c7b\u578b\u7684\u6570\u636e\uff08\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u6570\u5b57\uff09\uff0cFastAPI \u5c06\u81ea\u52a8\u8fd4\u56de\u72b6\u6001\u7801...</p>  a) 500 Internal Server Error  b) 404 Not Found  c) 422 Unprocessable Entity <p>2. `raise HTTPException(status_code=404)` \u662f\u4e3a\u4e86...</p>  a) \u7ec8\u6b62\u6574\u4e2a\u670d\u52a1\u5668\u7684\u8fd0\u884c  b) \u4e2d\u6b62\u8bf7\u6c42\u6267\u884c\u5e76\u5411\u5ba2\u6237\u7aef\u8fd4\u56de 404 \u9519\u8bef  c) \u5c06\u9519\u8bef\u5199\u5165\u65e5\u5fd7\uff0c\u4f46\u7ee7\u7eed\u6267\u884c <p>3. Pydantic \u4e2d\u7684 `@validator('field_name')` \u88c5\u9970\u5668\u7528\u4e8e\uff1a</p>  a) \u4e3a\u7279\u5b9a\u5b57\u6bb5\u521b\u5efa\u81ea\u5b9a\u4e49\u9a8c\u8bc1\u903b\u8f91  b) \u6307\u793a\u5b57\u6bb5\u4e3a\u5fc5\u586b\u9879  c) \u52a0\u5bc6\u5b57\u6bb5\u7684\u503c <p>4. \u5982\u679c\u6570\u636e\u6b63\u786e\uff0cPydantic \u4e2d\u7684\u9a8c\u8bc1\u5668\u51fd\u6570\u5e94\u8be5\u505a\u4ec0\u4e48\uff1f</p>  a) \u4e0d\u8fd4\u56de\u4efb\u4f55\u5185\u5bb9\uff08None\uff09  b) \u5fc5\u987b\u8fd4\u56de\u503c\uff08\u53ef\u80fd\u5df2\u4fee\u6539\uff09  c) \u8fd4\u56de `True` <p>5. `@app.exception_handler()` \u5141\u8bb8...</p>  a) \u521b\u5efa\u65b0\u7684\u5f02\u5e38\u7c7b\u578b  b) \u5168\u5c40\u6355\u83b7\u5f02\u5e38\u5e76\u4e3a\u5176\u5b9a\u4e49\u81ea\u5b9a\u4e49\u54cd\u5e94  c) \u5ffd\u7565\u6240\u6709\u9519\u8bef\u5e76\u59cb\u7ec8\u8fd4\u56de\u72b6\u6001 200 \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u4f60\u5df2\u4e3a\u4f60\u7684 API \u98de\u8239\u5b89\u88c5\u4e86\u5f3a\u5927\u7684\u9632\u62a4\u7cfb\u7edf\u548c\u5e94\u6025\u534f\u8bae\u3002\u73b0\u5728\u5b83\u80fd\u591f\uff1a</p> <ul> <li>\ud83d\udee1\ufe0f \u501f\u52a9 Pydantic \u81ea\u52a8\u62b5\u5fa1\u201c\u4e0d\u6b63\u786e\u6570\u636e\u201d\u7684\u653b\u51fb\u3002</li> <li>\ud83d\udea8 \u901a\u8fc7 <code>HTTPException</code> \u59a5\u5584\u62a5\u544a\u8d44\u6e90\u7f3a\u5931\uff08<code>404 Not Found</code>\uff09\u3002</li> <li>\u2699\ufe0f \u4f7f\u7528\u81ea\u5b9a\u4e49\u9a8c\u8bc1\u5668\u8fdb\u884c\u201c\u7279\u6b8a\u68c0\u67e5\u201d\u3002</li> <li>\ud83e\uddef \u5168\u5c40\u6355\u83b7\u610f\u5916\u6545\u969c\u5e76\u7ed9\u51fa\u6807\u51c6\u5316\u54cd\u5e94\u3002</li> </ul> <p>\u4f60\u7684\u201c\u8d85\u5149\u901f\u5f15\u64ce\u201d\u4e0d\u4ec5\u901f\u5ea6\u5feb\uff0c\u800c\u4e14\u6781\u5176\u53ef\u9760\uff01</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li>\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u201c\u6b7b\u661f\u201d\u7684\u98de\u8239\uff0c\u5e76\u786e\u8ba4\u4f60\u6536\u5230\u4e86\u5e26\u6709\u4f60\u7684\u81ea\u5b9a\u4e49\u6d88\u606f\u7684 <code>400</code> \u9519\u8bef\u3002</li> <li>\u5c1d\u8bd5\u8bf7\u6c42 <code>GET /spaceships/999</code>\uff0c\u5e76\u786e\u8ba4\u4f60\u6536\u5230\u4e86 <code>404</code> \u9519\u8bef\u3002</li> <li>\u5c1d\u8bd5\u53d1\u9001\u4e00\u4e2a <code>POST</code> \u8bf7\u6c42\uff0c\u5c06 <code>launch_year</code> \u8bbe\u4e3a\u5b57\u7b26\u4e32\uff0c\u5e76\u786e\u8ba4\u4f60\u6536\u5230\u4e86 <code>422</code> \u9519\u8bef\u3002</li> </ul> <p>\u26a0\ufe0f \u5982\u679c\u6709\u9519\u8bef\uff1a</p> <ul> <li>\u786e\u4fdd\u6240\u6709\u5fc5\u9700\u7684\u6a21\u5757\uff08<code>HTTPException</code>\u3001<code>validator</code>\u3001<code>Request</code>\u3001<code>JSONResponse</code>\uff09\u90fd\u5df2\u5bfc\u5165\u3002</li> <li>\u68c0\u67e5 <code>@validator</code> \u548c <code>@app.exception_handler</code> \u88c5\u9970\u5668\u662f\u5426\u6ca1\u6709\u62fc\u5199\u9519\u8bef\u3002</li> </ul> <p>\u606d\u559c\u4f60\u5b8c\u6210\u7b2c 3 \u7ae0\uff01 \u4f60\u5df2\u7ecf\u4ece\u96f6\u5f00\u59cb\u6784\u5efa\u5e76\u542f\u52a8\u4e86\u4e00\u4e2a\u5f3a\u5927\u3001\u6709\u6587\u6863\u8bb0\u5f55\u4e14\u53d7\u4fdd\u62a4\u7684 FastAPI API\u3002\u4f60\u5df2\u51c6\u5907\u597d\u6267\u884c\u771f\u6b63\u7684\u592a\u7a7a\u4efb\u52a1\u3002</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/1/","title":"\u7b2c 4.1 \u7ae0\uff1aFetch API \u57fa\u7840","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 45 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/1/#1-fetch-api","title":"1. Fetch API\uff1a\u201c\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u201d\u7684\u4e3b\u5929\u7ebf","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u7684\u98de\u884c\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\uff08\u0426\u0423\u041f\uff09\u62e5\u6709\u4e00\u6839\u5de8\u5927\u7684\u65e0\u7ebf\u7535\u5929\u7ebf\uff0c\u7528\u4e8e\u4e0e\u822a\u5929\u5668\u901a\u4fe1\u3002\u4f60\u53ef\u4ee5\u5c06\u5176\u8c03\u8c10\u5230\u6240\u9700\u7684\u9891\u7387\uff0c\u53d1\u9001\u6307\u4ee4\u5e76\u7b49\u5f85\u54cd\u5e94\u3002</p> <p>Fetch API \u5c31\u662f\u73b0\u4ee3\u6d4f\u89c8\u5668\u4e2d\u8fd9\u6837\u4e00\u79cd\u201c\u5185\u7f6e\u5929\u7ebf\u201d\u3002\u5b83\u662f JavaScript \u7528\u4e8e\u5411\u670d\u52a1\u5668\u6267\u884c HTTP \u8bf7\u6c42\u7684\u6807\u51c6\u63a5\u53e3\u3002\u5b83\u5141\u8bb8\uff1a</p> <ul> <li>\ud83d\udce1 \u5411\u6211\u4eec\u7684 API \u53d1\u9001\u201c\u6307\u4ee4\u201d\uff08GET\u3001POST\u3001PUT\u3001DELETE\uff09\u3002</li> <li>\ud83d\udef0\ufe0f \u4ece\u670d\u52a1\u5668\u63a5\u6536\u201c\u9065\u6d4b\u6570\u636e\u201d\uff08JSON \u6570\u636e\uff09\u3002</li> <li>\u2699\ufe0f \u5f02\u6b65\u5de5\u4f5c\uff0c\u5728\u7b49\u5f85\u54cd\u5e94\u65f6\u4e0d\u4f1a\u201c\u51bb\u7ed3\u201d\u7528\u6237\u754c\u9762\u3002</li> </ul> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a</p> <p><code>fetch()</code> \u547d\u4ee4\u5c31\u50cf\u662f\u201c\u5929\u7ebf\uff0c\u5efa\u7acb\u8fde\u63a5\uff01\u201d\u3002\u4f60\u5411\u5b83\u4f20\u9012\uff1a</p> <ul> <li>\u76ee\u6807\u5750\u6807\uff08\u6211\u4eec API \u7684 URL\uff09\u3002</li> <li>\u6307\u4ee4\u7c7b\u578b\uff08\u65b9\u6cd5\uff1aGET\u3001POST\uff09\u3002</li> <li>\u6307\u4ee4\u5185\u5bb9\uff08\u8bf7\u6c42\u4f53\u3001\u8bf7\u6c42\u5934\uff09\u3002</li> </ul> <p>\u4f5c\u4e3a\u54cd\u5e94\uff0c\u4f60\u4e0d\u4f1a\u7acb\u5373\u6536\u5230\u6570\u636e\u672c\u8eab\uff0c\u800c\u662f\u6536\u5230\u4e00\u4e2a\u627f\u8bfa (Promise)\uff0c\u5373\u6570\u636e\u5c06\u4f1a\u5230\u6765\u3002</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/1/#2","title":"2. \u5f02\u6b65\uff1a\u5149\u901f\u901a\u4fe1","text":"<p>\u4e0e\u9065\u8fdc\u7684\u822a\u5929\u5668\u901a\u4fe1\u9700\u8981\u65f6\u95f4\u3002\u4f60\u4e0d\u80fd\u4ec5\u4ec5\u6682\u505c\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u7684\u6240\u6709\u5de5\u4f5c\uff0c\u7136\u540e\u7b49\u5f85\u54cd\u5e94\u5230\u6765\u3002\u4f60\u53d1\u9001\u6307\u4ee4\u5e76\u7ee7\u7eed\u5de5\u4f5c\uff0c\u5f53\u54cd\u5e94\u5230\u8fbe\u65f6\uff0c\u7cfb\u7edf\u4f1a\u901a\u77e5\u4f60\u3002</p> <p>\u8fd9\u5c31\u662f\u5f02\u6b65\u3002JavaScript \u5728\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u65f6\u4e0d\u4f1a\u963b\u585e\u5176\u4ed6\u4ee3\u7801\u7684\u6267\u884c\u3002\u4e3a\u4e86\u7ba1\u7406\u8fd9\u4e2a\u8fc7\u7a0b\uff0cFetch API \u4f7f\u7528\u4e86\u627f\u8bfa (Promises)\u3002</p> <p>\u627f\u8bfa (Promise) \u662f\u4f60\u53d1\u9001\u8bf7\u6c42\u7684\u201c\u6536\u636e\u201d\u3002\u5b83\u6709\u4e09\u79cd\u72b6\u6001\uff1a</p> <ul> <li><code>pending</code> (\u5f85\u5b9a)\uff1a \u4fe1\u53f7\u4ecd\u5728\u9014\u4e2d\u3002</li> <li><code>fulfilled</code> (\u5df2\u5b8c\u6210)\uff1a \u6210\u529f\u6536\u5230\u54cd\u5e94\uff01</li> <li><code>rejected</code> (\u5df2\u62d2\u7edd)\uff1a \u53d1\u751f\u4e86\u9519\u8bef\uff08\u4f8b\u5982\uff0c\u6ca1\u6709\u8fde\u63a5\uff09\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/1/#3","title":"3. \u7b2c\u4e00\u4e2a\u8bf7\u6c42\uff1a\u4e86\u89e3\u56fd\u9645\u7a7a\u95f4\u7ad9\u7684\u4f4d\u7f6e","text":"<p>\u8ba9\u6211\u4eec\u4f7f\u7528 <code>fetch</code> \u53d1\u9001\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684 HTML \u6587\u4ef6\u548c <code>&lt;script&gt;</code> \u6807\u7b7e\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u521b\u5efa <code>index.html</code> \u5728\u4e00\u4e2a\u65b0\u6587\u4ef6\u5939\u4e2d\uff08\u4f8b\u5982\uff0c<code>frontend_fleet_control</code>\uff09\u521b\u5efa\u4e00\u4e2a <code>index.html</code> \u6587\u4ef6\u3002 <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3 - Fetch API&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\u56fd\u9645\u7a7a\u95f4\u7ad9\u901a\u4fe1\u72b6\u6001&lt;/h1&gt;\n    &lt;div id=\"iss-status\"&gt;\u7b49\u5f85\u6570\u636e...&lt;/div&gt;\n\n    &lt;script&gt;\n        // \u6211\u4eec\u7684 JavaScript \u4ee3\u7801\u5c06\u5728\u8fd9\u91cc\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u7f16\u5199 <code>fetch</code> \u4ee3\u7801 \u5728 <code>&lt;script&gt;</code> \u6807\u7b7e\u5185\u90e8\uff0c\u6dfb\u52a0\u6211\u4eec\u5bf9 Open Notify \u516c\u5171 API \u7684\u7b2c\u4e00\u4e2a <code>fetch</code> \u8bf7\u6c42\u3002 <pre><code>// index.html -&gt; &lt;script&gt;\n\nconst issApiUrl = 'http://api.open-notify.org/iss-now.json';\nconst statusDiv = document.getElementById('iss-status');\n\nconsole.log('\u6b63\u5728\u53d1\u9001\u8bf7\u6c42\u4ee5\u83b7\u53d6\u56fd\u9645\u7a7a\u95f4\u7ad9\u5750\u6807...');\n\nfetch(issApiUrl)\n    .then(response =&gt; {\n        // \u7b2c\u4e00\u4e2a .then() \u5904\u7406 HTTP \u54cd\u5e94\u672c\u8eab\n        console.log('\u5df2\u4ece\u670d\u52a1\u5668\u6536\u5230\u54cd\u5e94\uff01', response);\n        // \u5c06\u54cd\u5e94\u4f53\u8f6c\u6362\u4e3a JSON\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c\n        return response.json();\n    })\n    .then(data =&gt; {\n        // \u7b2c\u4e8c\u4e2a .then() \u83b7\u53d6\u5df2\u89e3\u6790\u7684 JSON \u6570\u636e\n        console.log('\u6570\u636e\u5df2\u6210\u529f\u8f6c\u6362\u4e3a JSON\uff01', data);\n        const position = data.iss_position;\n        statusDiv.innerHTML = `\u56fd\u9645\u7a7a\u95f4\u7ad9\u5f53\u524d\u4f4d\u4e8e\u6b64\u5904\uff1a\n                               &lt;strong&gt;\u7eac\u5ea6\uff1a&lt;/strong&gt; ${position.latitude},\n                               &lt;strong&gt;\u7ecf\u5ea6\uff1a&lt;/strong&gt; ${position.longitude}`;\n    })\n    .catch(error =&gt; {\n        // .catch() \u5c06\u5728\u53d1\u751f\u7f51\u7edc\u9519\u8bef\u65f6\u89e6\u53d1\n        console.error('\u4e0e\u56fd\u9645\u7a7a\u95f4\u7ad9\u901a\u4fe1\u9519\u8bef\uff01', error);\n        statusDiv.textContent = '\u672a\u80fd\u83b7\u53d6\u6570\u636e\u3002\u8bf7\u68c0\u67e5\u8fde\u63a5\u3002';\n    });\n</code></pre></p> <ul> <li><code>fetch(url)</code>\uff1a \u53d1\u9001 GET \u8bf7\u6c42\u3002\u8fd4\u56de\u4e00\u4e2a Promise\u3002</li> <li><code>.then(callback)</code>\uff1a \u5f53 Promise \u6210\u529f\u89e3\u51b3\uff08<code>fulfilled</code>\uff09\u65f6\u6267\u884c\u3002\u7b2c\u4e00\u4e2a <code>.then</code> \u63a5\u6536\u4e00\u4e2a <code>Response</code> \u5bf9\u8c61\u3002</li> <li><code>response.json()</code>\uff1a \u8bfb\u53d6\u54cd\u5e94\u4f53\u5e76\u5c06\u5176\u89e3\u6790\u4e3a JSON \u7684\u65b9\u6cd5\u3002\u5b83\u4e5f\u8fd4\u56de\u4e00\u4e2a Promise\uff01</li> <li><code>.catch(callback)</code>\uff1a \u5f53 Promise \u88ab\u62d2\u7edd\uff08<code>rejected</code>\uff09\u65f6\u6267\u884c\uff0c\u4f8b\u5982\u7531\u4e8e\u7f51\u7edc\u9519\u8bef\u3002</li> </ul> <p>\u6b65\u9aa4 3\uff1a\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 \u53ea\u9700\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 <code>index.html</code> \u6587\u4ef6\u3002\u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u201c\u7b49\u5f85\u6570\u636e...\u201d\u53d8\u4e3a\u56fd\u9645\u7a7a\u95f4\u7ad9\u7684\u5f53\u524d\u5750\u6807\u3002\u6253\u5f00\u5f00\u53d1\u8005\u63a7\u5236\u53f0\uff08F12\uff09\u4ee5\u67e5\u770b\u65e5\u5fd7\u3002</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/1/#4","title":"4. \u201c\u5982\u679c\u2026\u2026\u201d\uff1a\u670d\u52a1\u5668\u9519\u8bef\u5904\u7406","text":"<p>\u5982\u679c\u6211\u4eec\u8bf7\u6c42\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684 URL \u4f1a\u600e\u6837\uff1f <code>fetch('http://api.open-notify.org/non-existent-endpoint')</code></p> <p>Fetch \u7684\u8bbe\u8ba1\u662f\uff0c<code>.catch()</code> \u53ea\u4f1a\u5728\u7f51\u7edc\u9519\u8bef\uff08\u65e0\u4e92\u8054\u7f51\u8fde\u63a5\u3001DNS \u672a\u627e\u5230\uff09\u65f6\u89e6\u53d1\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e <code>fetch</code> \u6765\u8bf4\uff0c\u8fd4\u56de <code>404</code> \u6216 <code>500</code> \u4ee3\u7801\u7684\u54cd\u5e94\u662f\u6210\u529f\u6536\u5230\u7684\u54cd\u5e94\uff01\u5b83\u53ea\u662f\u5305\u542b\u9519\u8bef\u4ee3\u7801\u3002</p> <p>\u6b63\u786e\u7684\u68c0\u67e5\u65b9\u6cd5\uff1a <pre><code>fetch('http://api.open-notify.org/non-existent-endpoint')\n    .then(response =&gt; {\n        // \u68c0\u67e5 .ok \u5c5e\u6027\uff0c\u5bf9\u4e8e 200-299 \u72b6\u6001\u7801\uff0c\u5b83\u4e3a true\n        if (!response.ok) {\n            // \u5982\u679c\u54cd\u5e94\u4e0d\u662f\u201cOK\u201d\uff0c\u5219\u521b\u5efa\u81ea\u5df1\u7684\u9519\u8bef\u4ee5\u8fdb\u5165 .catch()\n            throw new Error(`HTTP \u9519\u8bef\uff01\u72b6\u6001\u7801\uff1a${response.status}`);\n        }\n        return response.json();\n    })\n    .then(data =&gt; {\n        console.log(data);\n    })\n    .catch(error =&gt; {\n        console.error('\u6267\u884c\u8bf7\u6c42\u65f6\u53d1\u751f\u9519\u8bef\uff1a', error);\n    });\n</code></pre></p> <ul> <li><code>response.ok</code>\uff1a\u8fd9\u662f\u4f60\u4e3b\u8981\u7684\u6210\u529f\u6307\u793a\u5668\u3002</li> <li><code>throw new Error()</code>\uff1a\u6211\u4eec\u624b\u52a8\u201c\u4e2d\u65ad\u201dPromise \u94fe\uff0c\u4ee5\u8fdb\u5165 <code>.catch</code> \u5757\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/1/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u5c0f\u6d4b\u9a8c","text":"<p>1. Fetch API \u662f...</p>  a) \u4e00\u4e2a\u9700\u8981\u4e0b\u8f7d\u7684\u5916\u90e8\u5e93  b) \u4e00\u4e2a\u5185\u7f6e\u4e8e\u6d4f\u89c8\u5668\u7684 HTTP \u8bf7\u6c42\u63a5\u53e3  c) \u4e00\u79cd\u7528\u4e8e\u7f51\u7edc\u7f16\u7a0b\u7684\u8bed\u8a00 <p>2. \u8c03\u7528 `fetch(url)` \u8fd4\u56de\u4ec0\u4e48\uff1f</p>  a) \u76f4\u63a5\u8fd4\u56de JSON \u6570\u636e  b) \u4e00\u4e2a `Promise` \u5bf9\u8c61\uff08\u627f\u8bfa\uff09  c) \u4e00\u4e2a HTML \u9875\u9762 <p>3. Promise \u94fe\u4e2d\u7684 `.then()` \u65b9\u6cd5\u5728\u4ec0\u4e48\u65f6\u5019\u88ab\u8c03\u7528\uff1f</p>  a) \u53d1\u751f\u7f51\u7edc\u9519\u8bef\u65f6  b) \u8bf7\u6c42\u6210\u529f\u5b8c\u6210\u65f6  c) \u7528\u6237\u5173\u95ed\u6807\u7b7e\u9875\u65f6 <p>4. `response.json()` \u65b9\u6cd5\u7528\u4e8e...</p>  a) \u5c06\u54cd\u5e94\u4f53\u8f6c\u6362\u4e3a JavaScript \u5bf9\u8c61  b) \u68c0\u67e5\u54cd\u5e94\u662f\u5426\u662f\u6709\u6548\u7684 JSON  c) \u4ee5 JSON \u683c\u5f0f\u5411\u670d\u52a1\u5668\u53d1\u9001\u6570\u636e <p>5. \u5982\u4f55\u6b63\u786e\u68c0\u67e5\u670d\u52a1\u5668\u662f\u5426\u6ca1\u6709\u8fd4\u56de\u9519\u8bef\uff08\u4f8b\u5982 404\uff09\uff1f</p>  a) \u68c0\u67e5 `response.ok` \u5c5e\u6027  b) \u67e5\u770b `.catch()` \u5757\u662f\u5426\u4f1a\u89e6\u53d1  c) \u68c0\u67e5 `response.status` \u662f\u5426\u7b49\u4e8e\u201cOK\u201d \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u4f60\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\u4f60\u7684\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\uff08\u0426\u0423\u041f\uff09\u7684\u201c\u4e3b\u5929\u7ebf\u201d\uff0c\u5e76\u5b66\u4f1a\u4e86\u53d1\u9001\u8bf7\u6c42\u548c\u63a5\u6536\u54cd\u5e94\u3002</p> <ul> <li>\ud83d\udce1 \u4f60\u638c\u63e1\u4e86 <code>fetch()</code> \u7684\u57fa\u672c\u8bed\u6cd5\u3002</li> <li>\ud83d\udef0\ufe0f \u7406\u89e3\u4e86\u4ec0\u4e48\u662f\u627f\u8bfa (Promises) \u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 <code>.then()</code> \u548c <code>.catch()</code>\u3002</li> <li>\u2699\ufe0f \u5b66\u4f1a\u4e86\u901a\u8fc7\u68c0\u67e5 <code>response.ok</code> \u6765\u6b63\u786e\u5904\u7406\u670d\u52a1\u5668\u54cd\u5e94\u3002</li> </ul> <p>\u8fde\u63a5\u5df2\u5efa\u7acb\uff01 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u628a\u6211\u4eec\u7684\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u8fde\u63a5\u5230\u6211\u4eec\u4f7f\u7528 FastAPI \u521b\u5efa\u7684\u592a\u7a7a\u8230\u961f API\uff0c\u5e76\u5b66\u4e60\u5982\u4f55\u83b7\u53d6\u548c\u663e\u793a\u6211\u4eec\u7684\u98de\u8239\u5217\u8868\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li>\u786e\u4fdd\u4f60\u7684 <code>index.html</code> \u6587\u4ef6\u6b63\u786e\u663e\u793a\u56fd\u9645\u7a7a\u95f4\u7ad9\u7684\u5750\u6807\u3002</li> <li>\u5c1d\u8bd5\u6545\u610f\u7834\u574f URL\uff0c\u5e76\u5728\u5f00\u53d1\u8005\u63a7\u5236\u53f0\u4e2d\u67e5\u770b\u4f1a\u8f93\u51fa\u4ec0\u4e48\u9519\u8bef\u3002</li> </ul> <p>\u26a0\ufe0f \u5982\u679c\u4ee3\u7801\u4e0d\u5de5\u4f5c\uff1a</p> <ul> <li>CORS \u9519\u8bef\uff1a \u5982\u679c\u4f60\u5c1d\u8bd5\u4ece\u4e00\u4e2a\u4ee5 <code>file:///...</code> \u65b9\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\u5411\u4f60\u7684\u672c\u5730 FastAPI API\uff08\u4f8b\u5982 <code>http://127.0.0.1:8000</code>\uff09\u53d1\u9001\u8bf7\u6c42\uff0c\u6d4f\u89c8\u5668\u4f1a\u56e0\u4e3a CORS \u5b89\u5168\u7b56\u7565\u800c\u963b\u6b62\u8be5\u8bf7\u6c42\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u7ae0\u4e2d\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u76ee\u524d\u6211\u4eec\u4f7f\u7528\u7684\u662f\u5141\u8bb8\u8fd9\u79cd\u64cd\u4f5c\u7684\u516c\u5171 API\u3002</li> <li>HTTP/HTTPS\uff1a <code>http://api.open-notify.org</code> \u901a\u8fc7 HTTP \u5de5\u4f5c\u3002\u4e00\u4e9b\u6d4f\u89c8\u5668\u53ef\u80fd\u4f1a\u5bf9\u6b64\u53d1\u51fa\u8b66\u544a\u3002\u5982\u679c\u4f60\u4ece HTTPS \u7f51\u7ad9\u64cd\u4f5c\uff0c\u5bf9 HTTP \u8d44\u6e90\u7684\u8bf7\u6c42\u53ef\u80fd\u4f1a\u88ab\u963b\u6b62\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/2/","title":"\u7b2c4.2\u7ae0\uff1a\u53d1\u9001 GET \u8bf7\u6c42","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 45 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/2/#1-get","title":"1. GET\uff1a\u4ece\u592a\u7a7a\u8230\u961f\u8bf7\u6c42\u9065\u6d4b\u6570\u636e","text":"<p>GET \u8bf7\u6c42 \u662f\u83b7\u53d6\u6570\u636e\u7684\u57fa\u672c\u547d\u4ee4\u3002\u5728\u6211\u4eec\u7684\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\uff0c\u8fd9\u76f8\u5f53\u4e8e\u53d1\u51fa\u8bf7\u6c42\uff1a\u201c\u8230\u961f\u63a7\u5236\u4e2d\u5fc3\uff0c\u62a5\u544a\u5f53\u524d\u60c5\u51b5\uff01\u201d</p> <p>\u6211\u4eec\u5c06\u4f7f\u7528 <code>fetch</code> \u5411\u6211\u4eec\u7684 FastAPI \u670d\u52a1\u5668\u53d1\u9001\u4e24\u79cd\u7c7b\u578b\u7684 GET \u8bf7\u6c42\uff1a</p> <ol> <li>\u83b7\u53d6\u6574\u4e2a\u96c6\u5408\uff1a \u201c\u7ed9\u6211\u770b\u6211\u7684\u6574\u4e2a\u8230\u961f\u3002\u201d</li> <li>\u83b7\u53d6\u5355\u4e2a\u8d44\u6e90\uff1a \u201c\u7ed9\u6211 ID \u4e3a 2 \u7684\u98de\u8239\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u201d</li> </ol> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a</p> <p><code>GET /spaceships</code> \u662f\u5411\u6574\u4e2a\u8230\u961f\u53d1\u51fa\u7684\u5e7f\u64ad\u8bf7\u6c42\uff0c\u8981\u6c42\u5b83\u4eec\u62a5\u544a\u81ea\u5df1\u7684\u547c\u53f7\u3002</p> <p><code>GET /spaceships/3</code> \u662f\u5411\u7279\u5b9a\u98de\u8239\uff08\u56fd\u9645\u7a7a\u95f4\u7ad9\uff09\u53d1\u51fa\u7684\u5b9a\u5411\u8bf7\u6c42\uff0c\u8981\u6c42\u5b83\u4f20\u8f93\u5176\u7cfb\u7edf\u7684\u5b8c\u6574\u6570\u636e\u3002</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/2/#2-cors","title":"2. CORS \u95ee\u9898\uff1a\u201c\u884c\u661f\u9645\u5e72\u6270\u201d","text":"<p>\u5728\u6211\u4eec\u53d1\u9001\u8bf7\u6c42\u4e4b\u524d\uff0c\u9700\u8981\u89e3\u51b3\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u6d4f\u89c8\u5668\u7981\u6b62\u4ece\u4e00\u4e2a\u201c\u57df\u201d (<code>file:///...</code> \u6216 <code>http://localhost:5500</code>) \u52a0\u8f7d\u7684\u7f51\u9875\uff08\u6211\u4eec\u7684\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\uff09\u5411\u53e6\u4e00\u4e2a\u201c\u57df\u201d (<code>http://127.0.0.1:8000</code>) \u4e0a\u7684 API \u53d1\u51fa\u8bf7\u6c42\u3002</p> <p>\u6b64\u7b56\u7565\u79f0\u4e3a CORS (\u8de8\u57df\u8d44\u6e90\u5171\u4eab)\u3002</p> <p>\u4e3a\u4e86\u5141\u8bb8\u6211\u4eec\u7684\u524d\u7aef\u4e0e\u540e\u7aef\u901a\u4fe1\uff0c\u9700\u8981\u914d\u7f6e FastAPI \u670d\u52a1\u5668\uff0c\u4f7f\u5176\u544a\u8bc9\u6d4f\u89c8\u5668\uff1a\u201c\u6ca1\u95ee\u9898\uff0c\u6211\u4fe1\u4efb\u6765\u81ea\u8be5\u5730\u5740\u7684\u8bf7\u6c42\u3002\u201d</p> <p>\u6b65\u9aa4 1\uff1a\u5b89\u88c5 <code>python-multipart</code> \u8fd9\u5bf9\u4e8e\u4e2d\u95f4\u4ef6\u7684\u6b63\u5e38\u8fd0\u884c\u662f\u5fc5\u9700\u7684\u3002 <pre><code>pip install python-multipart\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u5728 <code>main.py</code> \u4e2d\u914d\u7f6e CORS \u6253\u5f00\u60a8\u7684 FastAPI \u9879\u76ee\u4e2d\u7684 <code>main.py</code> \u6587\u4ef6\uff0c\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware  # &lt;-- \u5bfc\u5165\u4e2d\u95f4\u4ef6\n\n# ... \u60a8\u7684\u5176\u4f59\u4ee3\u7801\uff08\u6a21\u578b\u3001db_spaceships\uff09 ...\n\napp = FastAPI(\n    title=\"Fleet Management API\",\n    # ...\n)\n\n# --- CORS \u914d\u7f6e ---\n# \u6307\u5b9a\u54ea\u4e9b\u201c\u57df\u201d\uff08origins\uff09\u53ef\u4ee5\u53d1\u9001\u8bf7\u6c42\norigins = [\n    \"http://localhost\",\n    \"http://localhost:8080\",\n    \"http://127.0.0.1:5500\",  # VS Code \u4e2d Live Server \u7684\u5730\u5740\n    \"null\"  # \u7528\u4e8e\u6765\u81ea\u672c\u5730\u6587\u4ef6 file:/// \u7684\u8bf7\u6c42\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # \u5141\u8bb8\u6307\u5b9a\u7684\u6e90\n    allow_credentials=True,\n    allow_methods=[\"*\"],  # \u5141\u8bb8\u6240\u6709\u65b9\u6cd5\uff08GET\u3001POST \u7b49\uff09\n    allow_headers=[\"*\"],  # \u5141\u8bb8\u6240\u6709\u5934\u90e8\n)\n\n# --- \u60a8\u7684\u7aef\u70b9\u5728\u4e0b\u65b9 ---\n@app.get(\"/\")\n# ...\n</code></pre> \u73b0\u5728\uff0c\u6211\u4eec\u7684 API \u670d\u52a1\u5668\u5df2\u51c6\u5907\u597d\u63a5\u6536\u6765\u81ea\u524d\u7aef\u7684\u8bf7\u6c42\u3002\u8bf7\u91cd\u65b0\u542f\u52a8 <code>uvicorn</code>\uff0c\u4ee5\u4f7f\u66f4\u6539\u751f\u6548\uff01</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/2/#3","title":"3. \u83b7\u53d6\u6240\u6709\u98de\u8239\u5217\u8868","text":"<p>\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u63a5\u53e3\u6765\u663e\u793a\u6211\u4eec\u7684\u8230\u961f\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u66f4\u65b0 <code>index.html</code> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3 - \u8230\u961f\u7ba1\u7406&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: sans-serif; }\n        .ship-list { list-style: none; padding: 0; }\n        .ship-list li { border: 1px solid #ccc; margin-bottom: 10px; padding: 15px; border-radius: 5px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\u592a\u7a7a\u8230\u961f\u63a7\u5236\u9762\u677f&lt;/h1&gt;\n\n    &lt;button id=\"load-fleet-btn\"&gt;\u8bf7\u6c42\u8230\u961f\u6570\u636e&lt;/button&gt;\n\n    &lt;h2&gt;\u98de\u884c\u5668\u5217\u8868\uff1a&lt;/h2&gt;\n    &lt;ul id=\"fleet-list\" class=\"ship-list\"&gt;\n        &lt;li&gt;\u7b49\u5f85\u547d\u4ee4...&lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt; &lt;!-- \u8fde\u63a5\u5916\u90e8\u811a\u672c --&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u521b\u5efa <code>app.js</code> \u5728 <code>index.html</code> \u65c1\u8fb9\u521b\u5efa\u4e00\u4e2a <code>app.js</code> \u6587\u4ef6\u3002\u6211\u4eec\u5c06\u6240\u6709\u903b\u8f91\u90fd\u653e\u5728\u5176\u4e2d\u3002 <pre><code>// app.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // \u6211\u4eec\u7684 FastAPI \u670d\u52a1\u5668\u7684 URL\n\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetList = document.getElementById('fleet-list');\n\n// \u52a0\u8f7d\u548c\u663e\u793a\u8230\u961f\u7684\u51fd\u6570\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;\u6b63\u5728\u52a0\u8f7d\u9065\u6d4b\u6570\u636e...&lt;/li&gt;';\n\n        // \u5411 /spaceships \u53d1\u9001 GET \u8bf7\u6c42\n        const response = await fetch(`${API_BASE_URL}/spaceships`);\n\n        if (!response.ok) {\n            throw new Error(`\u7f51\u7edc\u9519\u8bef\uff1a${response.status}`);\n        }\n\n        const ships = await response.json(); // \u83b7\u53d6\u98de\u8239\u6570\u7ec4\n\n        // \u6e05\u7a7a\u5217\u8868\u5e76\u663e\u793a\u6570\u636e\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;\u6ce8\u518c\u8868\u4e2d\u6ca1\u6709\u4efb\u4f55\u98de\u884c\u5668\u3002&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            const listItem = document.createElement('li');\n            listItem.innerHTML = `\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                \u7c7b\u578b\uff1a${ship.type}&lt;br&gt;\n                \u53d1\u5c04\u5e74\u4efd\uff1a${ship.launch_year}&lt;br&gt;\n                \u72b6\u6001\uff1a${ship.status}\n            `;\n            fleetList.appendChild(listItem);\n        });\n\n    } catch (error) {\n        console.error('\u65e0\u6cd5\u52a0\u8f7d\u8230\u961f\u6570\u636e\uff1a', error);\n        fleetList.innerHTML = `&lt;li&gt;\u9519\u8bef\uff1a${error.message}&lt;/li&gt;`;\n    }\n}\n\n// \u4e3a\u6309\u94ae\u6dfb\u52a0\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\n</code></pre></p> <ul> <li>async/await\uff1a \u6211\u4eec\u4f7f\u7528\u4e86\u5904\u7406 Promise \u7684\u65b0\u4e14\u66f4\u4fbf\u6377\u7684\u8bed\u6cd5\u3002\u6211\u4eec\u5c06\u5728\u7b2c 4.5 \u7ae0\u4e2d\u8be6\u7ec6\u63a2\u8ba8\u5b83\u3002\u73b0\u5728\u60a8\u53ea\u9700\u77e5\u9053 <code>await</code> \u4f1a\u201c\u7b49\u5f85\u201d Promise \u7684\u5b8c\u6210\uff0c\u800c\u4e0d\u4f1a\u963b\u585e\u9875\u9762\u3002</li> <li><code>try...catch</code>\uff1a\u5904\u7406 <code>async</code> \u51fd\u6570\u4e2d\u9519\u8bef\u7684\u597d\u65b9\u6cd5\u3002</li> </ul> <p>\u6b65\u9aa4 3\uff1a\u6d4b\u8bd5 \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 <code>index.html</code>\uff08\u6700\u597d\u901a\u8fc7 VS Code \u4e2d\u7684 Live Server \u6269\u5c55\uff0c\u5b83\u4f1a\u5c06\u5176\u8fd0\u884c\u5728 <code>http://127.0.0.1:5500</code>\uff09\u3002\u70b9\u51fb\u201c\u8bf7\u6c42\u8230\u961f\u6570\u636e\u201d\u6309\u94ae\u3002\u60a8\u6765\u81ea FastAPI \u7684\u98de\u8239\u5217\u8868\u5e94\u8be5\u4f1a\u663e\u793a\u5728\u9875\u9762\u4e0a\uff01</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/2/#4","title":"4. \u83b7\u53d6\u5355\u4e2a\u98de\u8239\u7684\u6570\u636e","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u4e00\u4e2a\u8868\u5355\uff0c\u7528\u4e8e\u6309\u7279\u5b9a ID \u8bf7\u6c42\u4fe1\u606f\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u5728 <code>index.html</code> \u4e2d\u6dfb\u52a0\u8868\u5355 <pre><code>&lt;!-- index.html\uff0c\u5728\u5217\u8868\u4e4b\u540e --&gt;\n&lt;hr&gt;\n&lt;h2&gt;\u6309 ID \u8bf7\u6c42&lt;/h2&gt;\n&lt;form id=\"ship-form\"&gt;\n    &lt;input type=\"number\" id=\"ship-id-input\" placeholder=\"\u8bf7\u8f93\u5165\u98de\u884c\u5668 ID\" required&gt;\n    &lt;button type=\"submit\"&gt;\u67e5\u627e\u98de\u884c\u5668&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"ship-details\" class=\"ship-list\"&gt;&lt;/div&gt;\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u5728 <code>app.js</code> \u4e2d\u6dfb\u52a0\u903b\u8f91 <pre><code>// app.js\uff0c\u6587\u4ef6\u672b\u5c3e\n\nconst shipForm = document.getElementById('ship-form');\nconst shipIdInput = document.getElementById('ship-id-input');\nconst shipDetails = document.getElementById('ship-details');\n\nasync function fetchShipById(event) {\n    event.preventDefault(); // \u963b\u6b62\u9875\u9762\u91cd\u65b0\u52a0\u8f7d\n    const shipId = shipIdInput.value;\n\n    if (!shipId) {\n        alert('\u8bf7\u8f93\u5165 ID\u3002');\n        return;\n    }\n\n    try {\n        shipDetails.innerHTML = '&lt;li&gt;\u6b63\u5728\u641c\u7d22\u98de\u884c\u5668...&lt;/li&gt;';\n\n        // \u5411 /spaceships/{id} \u53d1\u9001 GET \u8bf7\u6c42\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`);\n\n        if (response.status === 404) {\n             throw new Error('\u6ce8\u518c\u8868\u4e2d\u672a\u627e\u5230 ID \u4e3a\u6b64\u7684\u98de\u884c\u5668\u3002');\n        }\n        if (!response.ok) {\n            throw new Error(`\u7f51\u7edc\u9519\u8bef\uff1a${response.status}`);\n        }\n\n        const ship = await response.json();\n\n        shipDetails.innerHTML = `\n            &lt;li&gt;\n                &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n                \u7c7b\u578b\uff1a${ship.type}&lt;br&gt;\n                \u53d1\u5c04\u5e74\u4efd\uff1a${ship.launch_year}&lt;br&gt;\n                \u72b6\u6001\uff1a${ship.status}\n            &lt;/li&gt;\n        `;\n    } catch (error) {\n        console.error(`\u641c\u7d22\u98de\u884c\u5668\u65f6\u51fa\u9519 ${shipId}:`, error);\n        shipDetails.innerHTML = `&lt;li&gt;\u9519\u8bef\uff1a${error.message}&lt;/li&gt;`;\n    }\n}\n\nshipForm.addEventListener('submit', fetchShipById);\n</code></pre></p> <ul> <li>\u6211\u4eec\u6dfb\u52a0\u4e86\u5bf9 <code>404</code> \u72b6\u6001\u7801\u7684\u5355\u72ec\u5904\u7406\uff0c\u4ee5\u4fbf\u4e3a\u7528\u6237\u63d0\u4f9b\u66f4\u6e05\u6670\u7684\u9519\u8bef\u6d88\u606f\u3002</li> </ul> <p>\u6b65\u9aa4 3\uff1a\u6d4b\u8bd5 \u5237\u65b0\u9875\u9762\uff0c\u8f93\u5165\u73b0\u6709\u98de\u8239\u7684 ID\uff08\u4f8b\u5982\uff0c1\uff09\uff0c\u7136\u540e\u70b9\u51fb\u201c\u67e5\u627e\u98de\u884c\u5668\u201d\u3002\u60a8\u5e94\u8be5\u80fd\u770b\u5230\u5b83\u7684\u6570\u636e\u3002\u5c1d\u8bd5\u8f93\u5165\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684 ID\uff08\u4f8b\u5982\uff0c99\uff09\u2014\u2014\u60a8\u5c06\u770b\u5230\u9519\u8bef\u6d88\u606f\u3002</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/2/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. \u6d4f\u89c8\u5668\u4e2d\u7684 CORS \u7b56\u7565\u7528\u4e8e...</p>  a) \u52a0\u5feb\u9875\u9762\u52a0\u8f7d\u901f\u5ea6  b) \u9632\u5fa1\u6076\u610f\u8de8\u7ad9\u8bf7\u6c42  c) \u538b\u7f29 JSON \u6570\u636e <p>2. \u8981\u5141\u8bb8 `localhost:5500` \u4e0a\u7684\u524d\u7aef\u8bbf\u95ee FastAPI\uff0c\u9700\u8981...</p>  a) \u5728 FastAPI \u4e2d\u914d\u7f6e `CORSMiddleware`  b) \u66f4\u6539\u6d4f\u89c8\u5668\u8bbe\u7f6e  c) \u4ec0\u4e48\u90fd\u4e0d\u9700\u8981\uff0c\u8fd9\u662f\u9ed8\u8ba4\u5de5\u4f5c\u7684 <p>3. \u8981\u83b7\u53d6 ID=5 \u7684\u7279\u5b9a\u8d44\u6e90\u7684\u6570\u636e\uff0c\u8bf7\u6c42 URL \u5c06\u5982\u4e0b\u6240\u793a\uff1a</p>  a) `/resources?id=5`  b) `/resources/5`  c) `/get/resources/5` <p>4. JavaScript \u4e2d\u7684\u5173\u952e\u5b57 `await` \u53ea\u80fd\u5728\u7528...\u58f0\u660e\u7684\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u3002</p>  a) `function`  b) `promise`  c) `async` <p>5. \u8868\u5355\u63d0\u4ea4\u5904\u7406\u7a0b\u5e8f\u4e2d\u7684 `event.preventDefault()` \u7528\u4e8e...</p>  a) \u963b\u6b62\u6d4f\u89c8\u5668\u7684\u6807\u51c6\u884c\u4e3a\uff08\u9875\u9762\u91cd\u65b0\u52a0\u8f7d\uff09  b) \u505c\u6b62\u811a\u672c\u6267\u884c  c) \u53d6\u6d88\u8bf7\u6c42\u53d1\u9001 \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u6210\u529f\u8bbe\u7f6e\u201c\u5730\u7403\u201d\u4e0e\u201c\u592a\u7a7a\u201d\u4e4b\u95f4\u7684\u901a\u4fe1\u4fe1\u9053\uff0c\u5e76\u5b66\u4f1a\u4e86\u8bf7\u6c42\u9065\u6d4b\u6570\u636e\uff01</p> <ul> <li>\ud83d\udee1\ufe0f \u60a8\u901a\u8fc7\u5728 FastAPI \u670d\u52a1\u5668\u4e0a\u914d\u7f6e CORS \u89e3\u51b3\u4e86\u201c\u884c\u661f\u9645\u5e72\u6270\u201d\u95ee\u9898\u3002</li> <li>\ud83d\udef0\ufe0f \u5b9e\u73b0\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u83b7\u53d6\u548c\u663e\u793a\u6240\u6709\u822a\u5929\u5668\u7684\u5b8c\u6574\u5217\u8868\u3002</li> <li>\ud83d\udd2d \u521b\u5efa\u4e86\u4e00\u4e2a\u754c\u9762\uff0c\u7528\u4e8e\u901a\u8fc7 ID \u8bf7\u6c42\u7279\u5b9a\u822a\u5929\u5668\u7684\u6570\u636e\u3002</li> </ul> <p>\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u6b63\u5728\u63a5\u6536\u6570\u636e\uff01 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8fdb\u5165\u5b9e\u6218\u73af\u8282\uff1a\u53d1\u9001\u547d\u4ee4\u6765\u521b\u5efa\u3001\u66f4\u65b0\u548c\u5220\u9664\u6211\u4eec\u7684\u5b87\u5b99\u98de\u8239\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li>\u786e\u4fdd\u60a8\u7684 FastAPI \u670d\u52a1\u5668\u5df2\u542f\u52a8\u5e76\u914d\u7f6e\u4e86 <code>CORSMiddleware</code>\u3002</li> <li>\u68c0\u67e5\u5728\u9875\u9762\u4e0a\u70b9\u51fb\u201c\u8bf7\u6c42\u6570\u636e\u201d\u6309\u94ae\u65f6\u662f\u5426\u51fa\u73b0\u98de\u8239\u5217\u8868\u3002</li> <li>\u786e\u4fdd\u6309 ID \u641c\u7d22\u7684\u8868\u5355\u80fd\u6b63\u786e\u627e\u5230\u73b0\u6709\u8bbe\u5907\uff0c\u5e76\u5bf9\u4e0d\u5b58\u5728\u7684\u8bbe\u5907\u62a5\u544a\u9519\u8bef\u3002</li> </ul> <p>\u26a0\ufe0f \u5982\u679c\u51fa\u73b0\u9519\u8bef\uff1a</p> <ul> <li>\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u4e2d\u51fa\u73b0 CORS \u9519\u8bef\uff1a \u60a8\u53ef\u80fd\u5728\u6dfb\u52a0 <code>CORSMiddleware</code> \u540e\u672a\u91cd\u65b0\u542f\u52a8 <code>uvicorn</code>\uff0c\u6216\u8005\u60a8\u7684\u524d\u7aef\u5730\u5740\uff08\u4f8b\u5982 <code>http://127.0.0.1:5500</code>\uff09\u672a\u6dfb\u52a0\u5230 <code>origins</code> \u5217\u8868\u4e2d\u3002</li> <li>Failed to fetch\uff1a \u68c0\u67e5\u60a8\u7684 FastAPI \u670d\u52a1\u5668\u662f\u5426\u5df2\u542f\u52a8\u5e76\u53ef\u901a\u8fc7 <code>API_BASE_URL</code> \u4e2d\u6307\u5b9a\u7684\u5730\u5740\u8bbf\u95ee\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/3/","title":"\u7b2c4.3\u7ae0\uff1a\u53d1\u9001 POST/PUT/DELETE \u8bf7\u6c42","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 1 \u5c0f\u65f6</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/3/#1","title":"1. \u4e3b\u52a8\u547d\u4ee4\uff1a\u4ece\u542f\u52a8\u5230\u62a5\u5e9f","text":"<p>\u8fc4\u4eca\u4e3a\u6b62\uff0c\u6211\u4eec\u7684\u63a7\u5236\u4e2d\u5fc3\u53ea\u8bf7\u6c42\u4fe1\u606f (<code>GET</code>)\u3002\u73b0\u5728\u6211\u4eec\u5c06\u5b66\u4e60\u53d1\u9001\u4e3b\u52a8\u547d\u4ee4\uff1a</p> <ul> <li>POST\uff1a\u201c\u5c06\u65b0\u536b\u661f\u53d1\u5c04\u5230\u8f68\u9053\uff01\u201d</li> <li>PUT\uff1a\u201c\u5bf9\u56fd\u9645\u7a7a\u95f4\u7ad9\u7cfb\u7edf\u8fdb\u884c\u5168\u9762\u5347\u7ea7\uff01\u201d</li> <li>DELETE\uff1a\u201c\u5c06\u65e7\u8bbe\u5907 <code>Debris-123</code> \u8131\u79bb\u8f68\u9053\uff01\u201d</li> </ul> <p>\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 <code>fetch</code>\uff0c\u4f46\u4f1a\u9644\u52a0\u63cf\u8ff0\u6211\u4eec\u547d\u4ee4\u7684\u989d\u5916\u53c2\u6570\u3002</p> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a</p> <p>\u5982\u679c <code>GET</code> \u662f\u88ab\u52a8\u76d1\u542c\u65e0\u7ebf\u7535\u4fe1\u53f7\uff0c\u90a3\u4e48 <code>POST</code>\u3001<code>PUT</code> \u548c <code>DELETE</code> \u5219\u662f\u4e3b\u52a8\u53d1\u9001\u547d\u4ee4\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u4e0d\u4ec5\u9700\u8981\u6307\u5b9a\u201c\u9891\u7387\u201d\uff08URL\uff09\uff0c\u8fd8\u9700\u8981\u6307\u5b9a\u547d\u4ee4\u5185\u5bb9\uff08\u8bf7\u6c42\u4f53\uff09\u548c\u901a\u4fe1\u534f\u8bae\uff08\u8bf7\u6c42\u5934\uff09\u3002</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/3/#2-post","title":"2. \u53d1\u9001 POST \u8bf7\u6c42\uff1a\u542f\u52a8\u65b0\u98de\u8239","text":"<p>\u4e3a\u4e86\u521b\u5efa\u65b0\u8d44\u6e90\uff0c\u6211\u4eec\u53d1\u9001 <code>POST</code> \u8bf7\u6c42\u3002\u6700\u91cd\u8981\u7684\u662f\u4f20\u9012\u5305\u542b\u65b0\u5bf9\u8c61\u6570\u636e\u7684\u8bf7\u6c42\u4f53 (body)\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u5728 <code>index.html</code> \u4e2d\u6dfb\u52a0\u521b\u5efa\u8868\u5355 \u5c06\u5176\u653e\u7f6e\u5728\u201c\u6309 ID \u8bf7\u6c42\u201d\u5757\u4e4b\u540e\u3002 <pre><code>&lt;!-- index.html --&gt;\n&lt;hr&gt;\n&lt;h2&gt;\u542f\u52a8\u65b0\u8bbe\u5907&lt;/h2&gt;\n&lt;form id=\"create-ship-form\"&gt;\n    &lt;input type=\"text\" id=\"create-name\" placeholder=\"\u540d\u79f0\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-type\" placeholder=\"\u7c7b\u578b\" required&gt;&lt;br&gt;\n    &lt;input type=\"number\" id=\"create-year\" placeholder=\"\u53d1\u5c04\u5e74\u4efd\" required&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"create-status\" placeholder=\"\u72b6\u6001\" required&gt;&lt;br&gt;\n    &lt;button type=\"submit\"&gt;\u542f\u52a8&lt;/button&gt;\n&lt;/form&gt;\n&lt;div id=\"create-status-message\"&gt;&lt;/div&gt;\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u5728 <code>app.js</code> \u4e2d\u6dfb\u52a0\u903b\u8f91 <pre><code>// app.js\uff0c\u6587\u4ef6\u672b\u5c3e\n\nconst createShipForm = document.getElementById('create-ship-form');\nconst createStatusMessage = document.getElementById('create-status-message');\n\nasync function createShip(event) {\n    event.preventDefault();\n\n    // 1. \u5c06\u8868\u5355\u6570\u636e\u6536\u96c6\u5230\u5bf9\u8c61\u4e2d\n    const shipData = {\n        name: document.getElementById('create-name').value,\n        type: document.getElementById('create-type').value,\n        launch_year: parseInt(document.getElementById('create-year').value),\n        status: document.getElementById('create-status').value\n    };\n\n    try {\n        createStatusMessage.textContent = '\u6b63\u5728\u53d1\u9001\u542f\u52a8\u547d\u4ee4...';\n\n        // 2. \u53d1\u9001\u5e26\u53c2\u6570\u7684 fetch \u8bf7\u6c42\n        const response = await fetch(`${API_BASE_URL}/spaceships`, {\n            method: 'POST', // \u6307\u5b9a\u65b9\u6cd5\n            headers: {\n                'Content-Type': 'application/json' // \u544a\u8bc9\u670d\u52a1\u5668\u6211\u4eec\u53d1\u9001\u7684\u662f JSON\n            },\n            body: JSON.stringify(shipData) // \u5c06 JavaScript \u5bf9\u8c61\u8f6c\u6362\u4e3a JSON \u5b57\u7b26\u4e32\n        });\n\n        if (!response.ok) {\n            // \u5982\u679c\u670d\u52a1\u5668\u8fd4\u56de\u9519\u8bef\uff0c\u5c1d\u8bd5\u8bfb\u53d6\u5176\u54cd\u5e94\u4f53\n            const errorData = await response.json();\n            throw new Error(errorData.detail || `\u670d\u52a1\u5668\u9519\u8bef\uff1a${response.status}`);\n        }\n\n        const newShip = await response.json();\n        createStatusMessage.textContent = `\ud83d\ude80 \u6210\u529f\u542f\u52a8\uff01\u8bbe\u5907 ID \u5df2\u5206\u914d\uff1a${newShip.id}`;\n\n        createShipForm.reset(); // \u6e05\u7a7a\u8868\u5355\n        fetchAndDisplayFleet(); // \u66f4\u65b0\u8230\u961f\u603b\u5217\u8868\n\n    } catch (error) {\n        console.error('\u542f\u52a8\u8bbe\u5907\u65f6\u51fa\u9519\uff1a', error);\n        createStatusMessage.textContent = `\ud83d\udd34 \u9519\u8bef\uff1a${error.message}`;\n    }\n}\n\ncreateShipForm.addEventListener('submit', createShip);\n</code></pre> POST \u8bf7\u6c42\u4e2d <code>fetch</code> \u7684\u5173\u952e\u70b9\uff1a</p> <ul> <li><code>method: 'POST'</code>\uff1a \u5fc5\u987b\u6307\u5b9a HTTP \u65b9\u6cd5\u3002</li> <li><code>headers: { 'Content-Type': 'application/json' }</code>\uff1a \u6781\u5176\u91cd\u8981\u7684\u8bf7\u6c42\u5934\u3002\u5b83\u544a\u8bc9\u6211\u4eec\u7684 FastAPI \u670d\u52a1\u5668\u8bf7\u6c42\u4f53\u4e2d\u5305\u542b JSON\uff0c\u9700\u8981\u8fdb\u884c\u89e3\u6790\u3002</li> <li><code>body: JSON.stringify(shipData)</code>\uff1a \u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u53d1\u9001 JavaScript \u5bf9\u8c61\u3002\u9700\u8981\u5c06\u5176\u5e8f\u5217\u5316\uff08\u8f6c\u6362\uff09\u4e3a JSON \u5b57\u7b26\u4e32\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/3/#3-delete","title":"3. \u53d1\u9001 DELETE \u8bf7\u6c42\uff1a\u8bbe\u5907\u62a5\u5e9f","text":"<p>\u5220\u9664\u8bf7\u6c42\u66f4\u7b80\u5355\u2014\u2014\u5b83\u901a\u5e38\u4e0d\u9700\u8981\u8bf7\u6c42\u4f53\uff0c\u53ea\u9700\u5e26\u6709\u5bf9\u8c61 ID \u7684 URL\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u5728\u6211\u4eec\u7684\u98de\u8239\u5217\u8868\u4e2d\u6dfb\u52a0\u201c\u5220\u9664\u201d\u6309\u94ae \u4fee\u6539 <code>app.js</code> \u4e2d\u7684 <code>fetchAndDisplayFleet</code> \u51fd\u6570\uff0c\u4f7f\u5176\u4e3a\u6bcf\u4e2a\u5143\u7d20\u6dfb\u52a0\u5220\u9664\u6309\u94ae\u3002 <pre><code>// app.js\uff0c\u5728 fetchAndDisplayFleet \u51fd\u6570\u5185\u90e8\n\n// ...\nships.forEach(ship =&gt; {\n    const listItem = document.createElement('li');\n    // \u6dfb\u52a0\u4e00\u4e2a\u5e26\u6709\u5b58\u50a8 ID \u7684 data \u5c5e\u6027\u7684\u6309\u94ae\n    listItem.innerHTML = `\n        &lt;strong&gt;${ship.name} (ID: ${ship.id})&lt;/strong&gt;&lt;br&gt;\n        \u7c7b\u578b\uff1a${ship.type} | \u5e74\u4efd\uff1a${ship.launch_year} | \u72b6\u6001\uff1a${ship.status}&lt;br&gt;\n        &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;\u62a5\u5e9f\u8bbe\u5907&lt;/button&gt;\n    `;\n    fleetList.appendChild(listItem);\n});\n// ...\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u4e3a\u6240\u6709\u201c\u5220\u9664\u201d\u6309\u94ae\u6dfb\u52a0\u5904\u7406\u7a0b\u5e8f \u6211\u4eec\u4f7f\u7528\u4e8b\u4ef6\u59d4\u6258\u2014\u2014\u4e3a\u6574\u4e2a\u5217\u8868\u8bbe\u7f6e\u4e00\u4e2a\u5904\u7406\u7a0b\u5e8f\u3002 <pre><code>// app.js\uff0c\u6587\u4ef6\u672b\u5c3e\n\nasync function deleteShip(shipId) {\n    if (!confirm(`\u60a8\u786e\u5b9a\u8981\u62a5\u5e9f ID \u4e3a ${shipId} \u7684\u8bbe\u5907\u5417\uff1f\u6b64\u64cd\u4f5c\u4e0d\u53ef\u9006\u3002`)) {\n        return;\n    }\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/spaceships/${shipId}`, {\n            method: 'DELETE' // \u6307\u5b9a\u65b9\u6cd5\n        });\n\n        if (!response.ok) {\n            throw new Error(`\u65e0\u6cd5\u62a5\u5e9f\u8bbe\u5907\u3002\u72b6\u6001\uff1a${response.status}`);\n        }\n\n        alert(`ID \u4e3a ${shipId} \u7684\u8bbe\u5907\u5df2\u6210\u529f\u62a5\u5e9f\u3002`);\n        fetchAndDisplayFleet(); // \u66f4\u65b0\u5217\u8868\n\n    } catch (error) {\n        console.error('\u62a5\u5e9f\u65f6\u51fa\u9519\uff1a', error);\n        alert(`\u9519\u8bef\uff1a${error.message}`);\n    }\n}\n\n// \u4e8b\u4ef6\u59d4\u6258\uff1a\u76d1\u542c\u6574\u4e2a\u5217\u8868\u7684\u70b9\u51fb\u4e8b\u4ef6\nfleetList.addEventListener('click', (event) =&gt; {\n    // \u68c0\u67e5\u70b9\u51fb\u662f\u5426\u53d1\u751f\u5728\u7c7b\u540d\u4e3a 'delete-btn' \u7684\u6309\u94ae\u4e0a\n    if (event.target.classList.contains('delete-btn')) {\n        const shipId = event.target.dataset.shipId; // \u4ece data \u5c5e\u6027\u83b7\u53d6 ID\n        deleteShip(shipId);\n    }\n});\n</code></pre></p> <p>\u6b65\u9aa4 3\uff1a\u5728 Spaceship \u6a21\u578b\u4e2d\u6dfb\u52a0 id</p> <p>\u5728 <code>main.py</code> \u6587\u4ef6\u4e2d\u7684\u6a21\u578b\u548c\u6570\u636e\u5e93\u4e2d\u6dfb\u52a0 id</p> <pre><code>class Spaceship(BaseModel):\n    id: int\n    # \u6a21\u578b\u7684\u5176\u4f59\u4ee3\u7801...\n\ndb_spaceships = {\n    1: {\n        \"id\": 1,\n        # \u5143\u7d20 1 \u7684\u6570\u636e\n    },\n    2: {\n        \"id\": 2,\n        # \u5143\u7d20 2 \u7684\u6570\u636e\n    },\n    3: {\n        \"id\": 3,\n        # \u5143\u7d20 3 \u7684\u6570\u636e\n    }\n}\n</code></pre> <ul> <li><code>method: 'DELETE'</code>\uff1a \u6307\u5b9a\u65b9\u6cd5\u3002\u8fd9\u91cc\u4e0d\u9700\u8981\u8bf7\u6c42\u4f53\u548c\u8bf7\u6c42\u5934\u3002</li> <li><code>confirm()</code>\uff1a\u4e00\u4e2a\u7b80\u5355\u7684\u5185\u7f6e\u786e\u8ba4\u7a97\u53e3\uff0c\u4ee5\u9632\u610f\u5916\u5220\u9664\u91cd\u8981\u5185\u5bb9\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/3/#4-put","title":"4. \u53d1\u9001 PUT \u8bf7\u6c42\uff08\u81ea\u5b66\u4efb\u52a1\uff09","text":"<p>\u5b9e\u73b0 <code>PUT</code> \u8bf7\u6c42\u8fdb\u884c\u66f4\u65b0\u4e0e <code>POST</code> \u975e\u5e38\u76f8\u4f3c\u3002</p> <p>\u60a8\u7684\u4efb\u52a1\uff0c\u5982\u679c\u60a8\u9009\u62e9\u63a5\u53d7\u5b83\uff1a</p> <ol> <li>\u4e3a\u6bcf\u8258\u98de\u8239\u5728\u201c\u5220\u9664\u201d\u6309\u94ae\u65c1\u8fb9\u6dfb\u52a0\u4e00\u4e2a\u201c\u4fee\u6539\u201d\u6309\u94ae\u3002</li> <li>\u70b9\u51fb\u201c\u4fee\u6539\u201d\u65f6\uff0c\u4f7f\u7528\u98de\u8239\u7684\u5f53\u524d\u6570\u636e\u586b\u5145\u8868\u5355\uff08\u53ef\u4ee5\u4f7f\u7528\u521b\u5efa\u8868\u5355\uff09\u3002</li> <li>\u5c06\u201c\u542f\u52a8\u201d\u6309\u94ae\u7684\u6587\u672c\u66f4\u6539\u4e3a\u201c\u66f4\u65b0\u201d\u3002</li> <li>\u63d0\u4ea4\u8868\u5355\u65f6\uff0c\u5411 <code>/spaceships/{id}</code> \u53d1\u9001 <code>PUT</code> \u8bf7\u6c42\uff0c\u5e76\u9644\u5e26\u5b8c\u6574\u7684\u5bf9\u8c61\u4f53\u3002</li> <li>\u6210\u529f\u66f4\u65b0\u540e\uff0c\u66f4\u65b0\u8230\u961f\u5217\u8868\u3002</li> </ol> <p>\u63d0\u793a\uff1a \u60a8\u5c06\u9700\u8981\u4f7f\u7528 <code>method: 'PUT'</code>\u3001<code>Content-Type</code> \u8bf7\u6c42\u5934\u548c\u5e26\u6709 <code>JSON.stringify()</code> \u7684 <code>body</code> \u6765\u53d1\u9001 <code>fetch</code> \u8bf7\u6c42\uff0c\u5c31\u50cf\u5728 <code>POST</code> \u8bf7\u6c42\u4e2d\u4e00\u6837\u3002</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/3/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. `fetch` \u7684\u54ea\u4e2a\u53c2\u6570\u7528\u4e8e\u5728\u8bf7\u6c42\u4f53\u4e2d\u4f20\u9012\u6570\u636e\uff1f</p>  a) `data`  b) `body`  c) `payload` <p>2. \u8bf7\u6c42\u5934 `'Content-Type': 'application/json'` \u544a\u8bc9\u670d\u52a1\u5668\uff0c\u5b83...</p>  a) \u5ba2\u6237\u7aef\u671f\u671b\u63a5\u6536 JSON \u683c\u5f0f\u7684\u54cd\u5e94  b) \u5ba2\u6237\u7aef\u6b63\u5728\u4ee5 JSON \u683c\u5f0f\u53d1\u9001\u8bf7\u6c42\u4f53\u4e2d\u7684\u6570\u636e  c) \u8fde\u63a5\u5e94\u8be5\u88ab\u52a0\u5bc6 <p>3. JavaScript \u4e2d\u7684 `JSON.stringify(obj)` \u51fd\u6570\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f</p>  a) \u5c06 JSON \u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5bf9\u8c61  b) \u68c0\u67e5\u5bf9\u8c61\u7684\u6709\u6548\u6027  c) \u5c06 JavaScript \u5bf9\u8c61\u8f6c\u6362\u4e3a JSON \u5b57\u7b26\u4e32 <p>4. \u4f7f\u7528 `fetch` \u53d1\u9001 `DELETE` \u8bf7\u6c42\u65f6\uff0c\u5fc5\u987b\u6307\u5b9a\uff1a</p>  a) \u7a7a\u7684 `body` \u4f53  b) `method: 'DELETE'`  c) `Authorization` \u8bf7\u6c42\u5934 <p>5. JavaScript \u4e2d\u7684\u4e8b\u4ef6\u59d4\u6258\u662f\u6307...</p>  a) \u6211\u4eec\u5c06\u4e00\u4e2a\u5904\u7406\u7a0b\u5e8f\u9644\u52a0\u5230\u7236\u5143\u7d20\u4e0a\uff0c\u800c\u4e0d\u662f\u4e3a\u6bcf\u4e2a\u5b50\u5143\u7d20\u9644\u52a0\u591a\u4e2a\u5904\u7406\u7a0b\u5e8f  b) \u6211\u4eec\u5c06\u51fd\u6570\u6267\u884c\u6743\u9650\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u811a\u672c  c) \u4e8b\u4ef6\u5ef6\u8fdf\u53d1\u751f \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u7684\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u73b0\u5728\u62e5\u6709\u4e86\u7ba1\u7406\u8230\u961f\u7684\u5b8c\u6574\u6307\u4ee4\u96c6\uff01</p> <ul> <li>\u2705 \u60a8\u5b66\u4f1a\u4e86\u53d1\u9001\u5e26\u6709\u8bf7\u6c42\u4f53\u548c\u8bf7\u6c42\u5934\u7684 <code>POST</code> \u8bf7\u6c42\u6765\u521b\u5efa\u65b0\u8d44\u6e90\u3002</li> <li>\u2705 \u60a8\u5b9e\u73b0\u4e86 <code>DELETE</code> \u8bf7\u6c42\u6765\u62a5\u5e9f\u65e7\u8bbe\u5907\u3002</li> <li>\u2705 \u60a8\u6536\u5230\u4e86\u5b9e\u73b0 <code>PUT</code> \u8bf7\u6c42\u7684\u4efb\u52a1\uff0c\u5de9\u56fa\u4e86\u60a8\u7684\u77e5\u8bc6\u3002</li> </ul> <p>\u5168\u9762\u63a7\u5236\u5df2\u5efa\u7acb\uff01 \u4f46\u5982\u679c\u901a\u4fe1\u4e2d\u65ad\u6216\u670d\u52a1\u5668\u62a5\u544a\u9519\u8bef\u600e\u4e48\u529e\uff1f\u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5728\u524d\u7aef\u521b\u5efa\u4e00\u4e2a\u96c6\u4e2d\u7684\u9519\u8bef\u5904\u7406\u7cfb\u7edf\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li>\u786e\u4fdd\u521b\u5efa\u65b0\u98de\u8239\u7684\u8868\u5355\u6b63\u5e38\u5de5\u4f5c\uff0c\u5e76\u5728\u6210\u529f\u521b\u5efa\u540e\u9875\u9762\u4e0a\u7684\u5217\u8868\u5f97\u5230\u66f4\u65b0\u3002</li> <li>\u68c0\u67e5\u201c\u62a5\u5e9f\u8bbe\u5907\u201d\u6309\u94ae\u662f\u5426\u5de5\u4f5c\uff0c\u662f\u5426\u8bf7\u6c42\u786e\u8ba4\uff0c\u5e76\u4ece\u5217\u8868\u4e2d\u5220\u9664\u98de\u8239\u3002</li> <li>\u5c1d\u8bd5\u4f7f\u7528\u65e0\u6548\u6570\u636e\uff08\u4f8b\u5982\uff0c\u540d\u79f0\u975e\u5e38\u77ed\uff09\u521b\u5efa\u98de\u8239\uff0c\u5e76\u67e5\u770b\u60a8\u7684 FastAPI \u670d\u52a1\u5668\u5c06\u8fd4\u56de\u7684\u9519\u8bef\u3002</li> </ul> <p>\u26a0\ufe0f \u5982\u679c\u6709\u9519\u8bef\uff1a</p> <ul> <li>\u670d\u52a1\u5668\u8fd4\u56de <code>422</code> \u9519\u8bef\uff1a \u5f88\u53ef\u80fd\u60a8\u53d1\u9001\u7684\u6570\u636e\u672a\u901a\u8fc7 Pydantic \u9a8c\u8bc1\u3002\u68c0\u67e5\u6d4f\u89c8\u5668\u63a7\u5236\u53f0 \u2014 <code>errorData.detail</code> \u5c06\u663e\u793a\u54ea\u4e2a\u5b57\u6bb5\u6709\u95ee\u9898\u3002</li> <li><code>415 Unsupported Media Type</code> \u9519\u8bef\uff1a \u60a8\u5fd8\u8bb0\u6dfb\u52a0 <code>'Content-Type': 'application/json'</code> \u8bf7\u6c42\u5934\u3002</li> <li>\u5220\u9664\u6309\u94ae\u4e0d\u8d77\u4f5c\u7528\uff1a \u68c0\u67e5\u4e8b\u4ef6\u59d4\u6258\u662f\u5426\u6b63\u786e\u5de5\u4f5c\uff0c\u4ee5\u53ca\u60a8\u662f\u5426\u6b63\u786e\u4ece <code>data-ship-id</code> \u83b7\u53d6\u4e86 <code>shipId</code>\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/4/","title":"\u7b2c4.4\u7ae0\uff1a\u9519\u8bef\u5904\u7406","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 45\u5206\u949f</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/4/#1","title":"1. \u9519\u8bef\u5904\u7406\uff1a\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u7684\u7d27\u6025\u534f\u8bae","text":"<p>\u5728\u592a\u7a7a\u4e2d\uff0c\u4e00\u5207\u90fd\u53ef\u80fd\u4e0d\u5982\u9884\u671f\uff1a\u592a\u9633\u8000\u6591\u53ef\u80fd\u4e2d\u65ad\u901a\u4fe1\uff0c\u98de\u8239\u7684\u673a\u8f7d\u8ba1\u7b97\u673a\u53ef\u80fd\u53d1\u751f\u6545\u969c\uff0c\u6765\u81ea\u5730\u7403\u7684\u6307\u4ee4\u53ef\u80fd\u5305\u542b\u9519\u8bef\u7684\u5750\u6807\u3002</p> <p>\u524d\u7aef\u9519\u8bef\u5904\u7406\u662f\u60a8\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u7684\u7d27\u6025\u534f\u8bae\u3002\u5b83\u4eec\u5e94\u8be5\uff1a</p> <ul> <li>\ud83d\udea8 \u907f\u514d\u6574\u4e2a\u754c\u9762\u56e0\u4e00\u4e2a\u5931\u8d25\u7684\u547d\u4ee4\u800c\u201c\u5d29\u6e83\u201d\u3002</li> <li>\ud83d\udce1 \u6e05\u6670\u5730\u544a\u77e5\u64cd\u4f5c\u5458\uff08\u7528\u6237\uff09\u5177\u4f53\u51fa\u4e86\u4ec0\u4e48\u95ee\u9898\u3002</li> <li>\ud83d\udd27 \u5efa\u8bae\u53ef\u80fd\u7684\u540e\u7eed\u64cd\u4f5c\u3002</li> </ul> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a</p> <p>\u5982\u679c\u98de\u8239\u53d1\u56de\u4e00\u4e2a <code>500 Internal Server Error</code> \u4fe1\u53f7\uff0c\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u7684\u663e\u793a\u5c4f\u4e0a\u4e0d\u5e94\u8be5\u51fa\u73b0\u201cJavaScript \u5728\u7b2c57\u884c\u53d1\u751f\u4e25\u91cd\u9519\u8bef\u201d\u3002\u76f8\u53cd\uff0c\u5e94\u8be5\u663e\u793a\uff1a\u201c\ud83d\udea8 \u98de\u8239\u673a\u8f7d\u7cfb\u7edf\u6545\u969c\uff01 \u5de5\u7a0b\u5e08\u5df2\u88ab\u901a\u77e5\u3002\u8bf7\u7a0d\u540e\u518d\u8bd5\u4e00\u6b21\u547d\u4ee4\u3002\u201d</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/4/#2","title":"2. \u201c\u592a\u7a7a\u5f02\u5e38\u201d\u7c7b\u578b","text":"<p>\u5728\u524d\u7aef\uff0c\u6211\u4eec\u5904\u7406API\u65f6\u4f1a\u9047\u5230\u4e09\u79cd\u4e3b\u8981\u7684\u9519\u8bef\u7c7b\u578b\uff1a</p> <ol> <li>\u7f51\u7edc\u9519\u8bef\uff1a \u672a\u80fd\u4e0e\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u3002\u5929\u7ebf\u4e0d\u5de5\u4f5c\uff0c\u7535\u7f06\u88ab\u5207\u65ad\u3002<code>fetch</code> \u5c06\u201c\u843d\u5165\u201d<code>.catch()</code> \u5757\u3002</li> <li>\u5ba2\u6237\u7aef\u9519\u8bef (4xx)\uff1a \u6765\u81ea\u5730\u7403\u7684\u547d\u4ee4\u4e0d\u6b63\u786e\u3002ID\u9519\u8bef\uff0c\u9a8c\u8bc1\u5931\u8d25\u3002\u670d\u52a1\u5668\u54cd\u5e94\uff0c\u4f46\u72b6\u6001\u7801\u4e3a <code>4xx</code>\u3002</li> <li>\u670d\u52a1\u5668\u9519\u8bef (5xx)\uff1a \u98de\u8239\u672c\u8eab\u53d1\u751f\u6545\u969c\u3002API\u4ee3\u7801\u5b58\u5728\u95ee\u9898\u3002\u670d\u52a1\u5668\u54cd\u5e94\uff0c\u4f46\u72b6\u6001\u7801\u4e3a <code>500+</code>\u3002</li> </ol> <p>\u6211\u4eec\u5df2\u7ecf\u5f00\u59cb\u4f7f\u7528 <code>try...catch</code> \u548c <code>response.ok</code> \u68c0\u67e5\u6765\u5904\u7406\u5b83\u4eec\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u96c6\u4e2d\u5904\u7406\u3002</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/4/#3","title":"3. \u96c6\u4e2d\u5f0f\u5904\u7406\u51fd\u6570","text":"<p>\u5728\u6bcf\u4e2a\u51fd\u6570\u4e2d\u91cd\u590d\u76f8\u540c\u7684 <code>try...catch</code> \u4ee3\u7801\u662f\u4e00\u79cd\u4e0d\u597d\u7684\u505a\u6cd5\u3002\u8ba9\u6211\u4eec\u4e3a <code>fetch</code> \u8bf7\u6c42\u521b\u5efa\u4e00\u4e2a\u901a\u7528\u7684\u201c\u5305\u88c5\u5668\u201d\u3002</p> <p>\u6b65\u9aa41\uff1a\u521b\u5efa <code>api.js</code> \u5728 <code>app.js</code> \u65c1\u8fb9\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6 <code>api.js</code>\u3002\u6211\u4eec\u5c06\u628a\u6240\u6709\u4e0eAPI\u4ea4\u4e92\u7684\u903b\u8f91\u79fb\u5230\u8fd9\u91cc\u3002 <pre><code>// api.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\n/**\n * \u7528\u4e8e\u6267\u884cAPI\u8bf7\u6c42\u7684\u901a\u7528\u51fd\u6570\u3002\n * \u5904\u7406\u9519\u8bef\u5e76\u8fd4\u56deJSON\u3002\n * @param {string} endpoint - API\u7aef\u70b9\uff0c\u4f8b\u5982 '/spaceships'\n * @param {object} options - fetch\u7684\u53c2\u6570 (method, headers, body)\n */\nasync function apiRequest(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n\n    try {\n        const response = await fetch(url, options);\n\n        // \u5982\u679c\u54cd\u5e94\u6839\u672c\u4e0d\u662fJSON\uff0c\u5219\u7acb\u5373\u629b\u51fa\u9519\u8bef\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n            // \u5bf9\u4e8e\u6ca1\u6709\u54cd\u5e94\u4f53\u7684\u6210\u529fDELETE\u8bf7\u6c42\u7684\u7279\u6b8a\u5904\u7406\n            if (response.status === 204) return null;\n\n            throw new TypeError(`\u4ece\u670d\u52a1\u5668\u6536\u5230\u975eJSON\u54cd\u5e94\uff1a${response.statusText}`);\n        }\n\n        const data = await response.json();\n\n        if (!response.ok) {\n            // \u5982\u679c\u670d\u52a1\u5668\u8fd4\u56de\u4e86\u5305\u542b\u9519\u8bef\u7684JSON\uff08\u4f8b\u5982\uff0cFastAPI\u7684detail\u5b57\u6bb5\uff09\n            const errorMessage = data.detail || `HTTP\u9519\u8bef\uff01\u72b6\u6001\uff1a${response.status}`;\n            throw new Error(errorMessage);\n        }\n\n        return data;\n\n    } catch (error) {\n        console.error(`API\u8bf7\u6c42\u5230 ${endpoint} \u5931\u8d25\uff1a`, error);\n        // \u5c06\u9519\u8bef\u201c\u91cd\u65b0\u629b\u51fa\u201d\uff0c\u4ee5\u4fbfUI\u53ef\u4ee5\u6355\u83b7\u5b83\n        throw error;\n    }\n}\n</code></pre></p> <p>\u6b65\u9aa42\uff1a\u5728 <code>index.html</code> \u4e2d\u5f15\u5165 <code>api.js</code> \u91cd\u8981\u7684\u662f\u8981\u5728 <code>app.js</code> \u4e4b\u524d\u5f15\u5165\u5b83\uff0c\u56e0\u4e3a <code>app.js</code> \u5c06\u4f7f\u7528\u5176\u51fd\u6570\u3002 <pre><code>&lt;!-- index.html --&gt;\n&lt;body&gt;\n    &lt;!-- ... --&gt;\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</code></pre></p> <p>\u6b65\u9aa43\uff1a\u91cd\u6784 <code>app.js</code> \u73b0\u5728\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u65b0\u7684 <code>apiRequest</code> \u91cd\u5199\u6211\u4eec\u7684\u51fd\u6570\u3002 <pre><code>// app.js\n\n// const API_BASE_URL = ...; // \u8fd9\u884c\u53ef\u4ee5\u5220\u9664\uff0c\u5b83\u73b0\u5728\u5728 api.js \u4e2d\n\n// ...\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetList.innerHTML = '&lt;li&gt;\u6b63\u5728\u52a0\u8f7d\u9065\u6d4b\u6570\u636e...&lt;/li&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- \u4f7f\u7528\u6211\u4eec\u7684\u5305\u88c5\u5668\uff01\n\n        fleetList.innerHTML = '';\n        if (ships.length === 0) {\n            fleetList.innerHTML = '&lt;li&gt;\u6ce8\u518c\u8868\u4e2d\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u8bbe\u5907\u3002&lt;/li&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; { /* ... \u5176\u4ed6\u663e\u793a\u4ee3\u7801 ... */ });\n    } catch (error) {\n        fleetList.innerHTML = `&lt;li&gt;\ud83d\udd34 \u8230\u961f\u52a0\u8f7d\u9519\u8bef\uff1a${error.message}&lt;/li&gt;`;\n    }\n}\n\nasync function createShip(event) {\n    event.preventDefault();\n    const shipData = { /* ... \u4ece\u8868\u5355\u6536\u96c6\u6570\u636e ... */ };\n\n    try {\n        createStatusMessage.textContent = '\u6b63\u5728\u53d1\u9001\u542f\u52a8\u547d\u4ee4...';\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(shipData)\n        };\n        const newShip = await apiRequest('/spaceships', options); // &lt;-- \u4f7f\u7528\u6211\u4eec\u7684\u5305\u88c5\u5668\uff01\n\n        createStatusMessage.textContent = `\ud83d\ude80 \u542f\u52a8\u6210\u529f\uff01\u8bbe\u5907ID\uff1a${newShip.id}`;\n        createShipForm.reset();\n        fetchAndDisplayFleet();\n    } catch (error) {\n        createStatusMessage.textContent = `\ud83d\udd34 \u9519\u8bef\uff1a${error.message}`;\n    }\n}\n\n// \u53c2\u7167\u6b64\u4f8b\u91cd\u5199\u5176\u4ed6\u51fd\u6570 (fetchShipById, deleteShip)\uff01\n</code></pre> \u73b0\u5728\uff0c\u6240\u6709\u7f51\u7edc\u9519\u8bef\u5904\u7406\u3001<code>response.ok</code> \u68c0\u67e5\u548cJSON\u89e3\u6790\u7684\u903b\u8f91\u90fd\u96c6\u4e2d\u5728\u4e00\u4e2a\u5730\u65b9\uff0c<code>app.js</code> \u4e2d\u7684\u4ee3\u7801\u53d8\u5f97\u66f4\u52a0\u7b80\u6d01\u548c\u53ef\u8bfb\u3002</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/4/#4","title":"4. \u5411\u7528\u6237\u663e\u793a\u9519\u8bef","text":"<p>\u4e00\u4e2a\u597d\u7684\u754c\u9762\u4e0d\u5e94\u8be5\u4ec5\u4ec5\u5c06\u9519\u8bef\u5199\u5165\u63a7\u5236\u53f0\uff0c\u800c\u5e94\u8be5\u4ee5\u7528\u6237\u53ef\u7406\u89e3\u7684\u65b9\u5f0f\u663e\u793a\u7ed9\u7528\u6237\u3002</p> <p>\u793a\u4f8b\uff1a\u6539\u8fdb <code>createShip</code> \u6211\u4eec\u7684\u4ee3\u7801\u5df2\u7ecf\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff1a<code>createStatusMessage.textContent = ...</code>\u3002\u4f46\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u901a\u7528\u7684\u901a\u77e5\u663e\u793a\u51fd\u6570\u505a\u5f97\u66f4\u597d\u3002</p> <p>\u6dfb\u52a0\u5230 <code>app.js</code>\uff1a <pre><code>// app.js\nfunction showNotification(message, isError = false) {\n    const notificationArea = document.getElementById('create-status-message'); // \u6216\u5176\u4ed6\u5143\u7d20\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? 'red' : 'green';\n}\n\n// \u5728 createShip \u4e2d\u4f7f\u7528\uff1a\nasync function createShip(event) {\n    // ...\n    try {\n        // ...\n        const newShip = await apiRequest('/spaceships', options);\n        showNotification(`\ud83d\ude80 \u542f\u52a8\u6210\u529f\uff01ID\uff1a${newShip.id}`);\n        // ...\n    } catch (error) {\n        showNotification(`\ud83d\udd34 \u9519\u8bef\uff1a${error.message}`, true);\n    }\n}\n</code></pre> \u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u673a\u5236\u6765\u663e\u793a\u6210\u529f\u6d88\u606f\u548c\u9519\u8bef\u3002</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/4/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. `fetch` Promise \u4e2d\u7684 `.catch()` \u5757\u4f1a\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u89e6\u53d1...</p>  a) \u670d\u52a1\u5668\u8fd4\u56de\u4e86 404 Not Found \u9519\u8bef  b) \u53d1\u751f\u7f51\u7edc\u9519\u8bef\uff08\u4f8b\u5982\uff0c\u6ca1\u6709\u4e92\u8054\u7f51\u8fde\u63a5\uff09  c) \u670d\u52a1\u5668\u8fd4\u56de\u4e86 500 Internal Server Error \u9519\u8bef <p>2. \u4e3a\u4ec0\u4e48\u9700\u8981\u4e00\u4e2a\u96c6\u4e2d\u5f0f\u51fd\u6570\u6765\u5904\u7406API\u8bf7\u6c42\uff1f</p>  a) \u4e3a\u4e86\u907f\u514d\u91cd\u590d\u7684\u9519\u8bef\u5904\u7406\u4ee3\u7801\u5e76\u4f7fUI\u903b\u8f91\u66f4\u6e05\u6670  b) \u4e3a\u4e86\u540c\u65f6\u53d1\u9001\u6240\u6709\u8bf7\u6c42  c) \u8fd9\u662fFetch API\u6807\u51c6\u7684\u8981\u6c42 <p>3. `response.headers.get('content-type')` \u7528\u4e8e...</p>  a) \u5728\u4f20\u51fa\u8bf7\u6c42\u4e2d\u8bbe\u7f6e\u6807\u5934  b) \u68c0\u67e5\u4ece\u670d\u52a1\u5668\u6536\u5230\u7684\u54cd\u5e94\u4e2d\u7684\u5185\u5bb9\u7c7b\u578b  c) \u83b7\u53d6\u6240\u6709\u53ef\u7528\u7684\u5185\u5bb9\u7c7b\u578b <p>4. `try...catch` \u6216 `.then()` \u5185\u90e8\u7684 `throw new Error(...)` \u7528\u4e8e...</p>  a) \u505c\u6b62\u9875\u9762\u4e0a\u6240\u6709JavaScript\u7684\u6267\u884c  b) \u201c\u62d2\u7edd\u201dPromise \u5e76\u5c06\u63a7\u5236\u6743\u4f20\u9012\u7ed9\u6700\u8fd1\u7684 `.catch()` \u5757  c) \u5728 `alert` \u4e2d\u663e\u793a\u6d88\u606f <p>5. \u4e3a\u4ec0\u4e48\u5c06\u9519\u8bef\u663e\u793a\u7ed9\u7528\u6237\u800c\u4e0d\u4ec5\u4ec5\u662f\u663e\u793a\u5728\u63a7\u5236\u53f0\u4e2d\u5f88\u91cd\u8981\uff1f</p>  a) \u56e0\u4e3a\u5927\u591a\u6570\u7528\u6237\u4e0d\u67e5\u770b\u63a7\u5236\u53f0  b) \u4e3a\u4e86\u4f7f\u754c\u9762\u6613\u4e8e\u7406\u89e3\u548c\u53ef\u9884\u6d4b  c) \u4ee5\u4e0a\u4e24\u4e2a\u9009\u9879\u90fd\u6b63\u786e \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u901a\u8fc7\u521b\u5efa\u53ef\u9760\u7684\u7d27\u6025\u534f\u8bae\uff0c\u52a0\u5f3a\u4e86\u60a8\u7684\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u3002</p> <ul> <li>\ud83d\udee1\ufe0f \u60a8\u4e86\u89e3\u7f51\u7edc\u9519\u8bef\u3001\u5ba2\u6237\u7aef\u9519\u8bef\u548c\u670d\u52a1\u5668\u9519\u8bef\u4e4b\u95f4\u7684\u533a\u522b\u3002</li> <li>\u2699\ufe0f \u60a8\u521b\u5efa\u4e86\u4e00\u4e2a\u96c6\u4e2d\u5f0f\u51fd\u6570 <code>apiRequest</code> \u6765\u5904\u7406\u6240\u6709\u8bf7\u6c42\uff0c\u907f\u514d\u4e86\u4ee3\u7801\u91cd\u590d\u3002</li> <li>\ud83d\udce1 \u60a8\u7684\u754c\u9762\u73b0\u5728\u80fd\u591f\u6b63\u786e\u5730\u5411\u7528\u6237\u62a5\u544a\u9519\u8bef\uff0c\u4f7f\u5176\u66f4\u52a0\u7528\u6237\u53cb\u597d\u548c\u53ef\u9760\u3002 \u7d27\u6025\u62a4\u76fe\u5df2\u5347\u8d77\uff01 \u4f46\u662f\u54ea\u4e2a\u66f4\u597d\uff1a<code>.then()</code> \u94fe\u8fd8\u662f\u73b0\u4ee3\u7684 <code>async/await</code>\uff1f\u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5206\u6790\u8fd9\u4e24\u79cd\u65b9\u6cd5\uff0c\u5e76\u4e86\u89e3\u4f55\u65f6\u4f7f\u7528\u54ea\u79cd\u3002</li> </ul> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li>\u68c0\u67e5\u60a8\u7684 <code>app.js</code> \u4e2d\u7684\u4ee3\u7801\u662f\u5426\u5df2\u6210\u529f\u91cd\u6784\u5e76\u4f7f\u7528\u4e86\u65b0\u7684 <code>apiRequest</code> \u51fd\u6570\u3002</li> <li>\u5c1d\u8bd5\u505c\u6b62 FastAPI \u670d\u52a1\u5668\u5e76\u70b9\u51fb\u201c\u8bf7\u6c42\u6570\u636e\u201d\u6309\u94ae\u3002\u60a8\u5e94\u8be5\u4f1a\u5728\u9875\u9762\u4e0a\u770b\u5230\u8fde\u63a5\u9519\u8bef\u3002</li> <li>\u5c1d\u8bd5\u4f7f\u7528\u65e0\u6548\u6570\u636e\u521b\u5efa\u4e00\u8258\u98de\u8239\u3002\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u6765\u81ea FastAPI \u7684\u9a8c\u8bc1\u9519\u8bef\u6d88\u606f\u3002</li> </ul> <p>\u26a0\ufe0f \u5982\u679c\u51fa\u73b0\u9519\u8bef\uff1a</p> <ul> <li><code>apiRequest is not defined</code>\uff1a\u8bf7\u786e\u4fdd\u60a8\u5728 <code>index.html</code> \u4e2d\u5f15\u5165 <code>api.js</code> \u5728 <code>app.js</code> \u4e4b\u524d\u3002</li> <li>\u68c0\u67e5\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u662f\u5426\u5b58\u5728\u5176\u4ed6 JavaScript \u8bed\u6cd5\u9519\u8bef\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/5/","title":"\u7b2c 4.5 \u7ae0\uff1aAsync/await \u5bf9\u6bd4 Promise","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 30 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/5/#1","title":"1. \u5f02\u6b65\uff1a\u4e24\u79cd\u201c\u7a7a\u95f4\u901a\u4fe1\u201d\u7ba1\u7406\u65b9\u5f0f","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\uff08MCC\uff09\u5411\u706b\u661f\u53d1\u9001\u4e86\u4e00\u6761\u6307\u4ee4\u3002\u56de\u590d\u5c06\u5728\u51e0\u5206\u949f\u540e\u624d\u80fd\u6536\u5230\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u5982\u4f55\u5b89\u6392\u5de5\u4f5c\uff1f</p> <p>\u65b9\u5f0f 1\uff1a\u201c\u56de\u8c03\u534f\u8bae\u201d\uff08\u5e26 <code>.then()</code> \u7684 Promise\uff09 \u4f60\u53d1\u9001\u4e00\u6761\u6307\u4ee4\u5e76\u7ed9\u51fa\u6307\u793a\uff1a\u201c\u5f53\u6536\u5230\u56de\u590d\u65f6\uff0c\u90a3\u4e48\u6267\u884c\u8fd9\u4e2a\u51fd\u6570\u201d\u3002\u8fd9\u5c31\u50cf\u4e00\u4e2a\u4e8b\u4ef6\u94fe\u3002</p> <p>\u65b9\u5f0f 2\uff1a\u201c\u7b49\u5f85\u6a21\u5f0f\u201d\uff08Async/await\uff09 \u4f60\u8bf4\uff1a\u201c\u6211\u5c06\u7b49\u5f85\u8fd9\u6761\u6307\u4ee4\u7684\u56de\u590d\uff0c\u4f46\u4e0d\u4f1a\u963b\u585e\u5176\u4ed6\u63a7\u5236\u53f0\u3002\u201d \u4f60\u5c31\u50cf\u662f\u5c06\u8fd9\u4e2a\u7279\u5b9a\u4efb\u52a1\u7684\u6267\u884c\u6682\u505c\uff0c\u8ba9\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u7684\u5176\u4ed6\u90e8\u5206\u7ee7\u7eed\u5de5\u4f5c\u3002</p> <p>\u4e24\u79cd\u65b9\u5f0f\u90fd\u89e3\u51b3\u4e86\u540c\u4e00\u4e2a\u95ee\u9898\u2014\u2014\u7ba1\u7406\u5f02\u6b65\u64cd\u4f5c\u3002<code>async/await</code> \u53ea\u662f\u4e00\u79cd\u66f4\u73b0\u4ee3\u3001\u66f4\u6613\u8bfb\u7684\u8bed\u6cd5\uff0c\u5b83\u5728 Promise \u7684\u57fa\u7840\u4e0a\u5de5\u4f5c\u3002</p> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a</p> <ul> <li>\u5e26 <code>.then()</code> \u7684 Promise\uff1a\u8fd9\u5c31\u50cf\u5728\u4fbf\u5229\u8d34\u4e0a\u5199\u9053\uff1a\u201c\u5f53\u706b\u661f\u8f66\u53d1\u9001\u7167\u7247\u65f6\uff0c\u5c06\u5176\u4f20\u8f93\u5230\u5206\u6790\u90e8\u95e8\u3002\u201d</li> <li>Async/await\uff1a\u8fd9\u5c31\u50cf\u5bf9\u52a9\u624b\u8bf4\uff1a\u201c\u7b49\u7b49\u706b\u661f\u8f66\u7684\u7167\u7247\uff0c\u6211\u5148\u53bb\u8ba1\u7b97\u65b0\u706b\u7bad\u7684\u53d1\u5c04\u6570\u636e\u3002\u201d</li> </ul>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/5/#2-then-promise","title":"2. \u5e26 <code>.then()</code> \u7684 Promise\uff1a\u7ecf\u5178\u547d\u4ee4\u94fe","text":"<p>\u8fd9\u662f JavaScript \u4e2d\u5904\u7406\u5f02\u6b65\u7684\u57fa\u672c\u65b9\u5f0f\uff0c\u6211\u4eec\u5728\u7b2c 4.1 \u7ae0\u4e2d\u66fe\u4f7f\u7528\u8fc7\u3002</p> <p>\u56de\u987e\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u4ee3\u7801\uff1a <pre><code>function getIssPositionWithPromises() {\n    console.log('\u6b63\u5728\u901a\u8fc7\u201cPromise\u201d\u534f\u8bae\u53d1\u9001\u8bf7\u6c42...');\n\n    fetch('http://api.open-notify.org/iss-now.json')\n        .then(response =&gt; {\n            // \u9636\u6bb5 1\uff1a\u6536\u5230\u54cd\u5e94\n            if (!response.ok) {\n                throw new Error(`HTTP \u9519\u8bef\uff1a${response.status}`);\n            }\n            return response.json(); // \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 Promise\n        })\n        .then(data =&gt; {\n            // \u9636\u6bb5 2\uff1a\u6570\u636e\u5df2\u89e3\u6790\n            console.log('\u901a\u8fc7\u201cPromise\u201d\u534f\u8bae\u83b7\u53d6\u7684\u6570\u636e\uff1a', data.iss_position);\n        })\n        .catch(error =&gt; {\n            // \u9636\u6bb5 3\uff08\u9519\u8bef\uff09\uff1a\u5728\u4efb\u4f55\u9636\u6bb5\u90fd\u51fa\u9519\u4e86\n            console.error('\u201cPromise\u201d\u534f\u8bae\u901a\u4fe1\u5931\u8d25\uff1a', error);\n        });\n\n    console.log('...\u547d\u4ee4\u5df2\u53d1\u9001\uff0c\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u7ee7\u7eed\u5de5\u4f5c...');\n}\n</code></pre></p> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u6e05\u6670\u7684\u52a8\u4f5c\u94fe\u3002</li> <li>\u975e\u5e38\u9002\u5408\u7b80\u5355\u7684\u987a\u5e8f\u64cd\u4f5c\u3002</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u201c\u56de\u8c03\u5730\u72f1\u201d\uff08Callback Hell\uff09\uff1a \u5f53\u6709\u5927\u91cf\u5d4c\u5957\u5f02\u6b65\u64cd\u4f5c\u65f6\uff0c\u4ee3\u7801\u53ef\u80fd\u53d8\u6210\u4e00\u4e2a\u7531 <code>.then()</code> \u7ec4\u6210\u7684\u201c\u9636\u68af\u201d\uff0c\u96be\u4ee5\u9605\u8bfb\u3002</li> <li>\u9519\u8bef\u5904\u7406\u53ef\u80fd\u4e0d\u591f\u76f4\u89c2\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/5/#3-asyncawait","title":"3. Async/await\uff1a\u73b0\u4ee3\u540c\u6b65\u98ce\u683c","text":"<p><code>async/await</code> \u662f Promise \u4e4b\u4e0a\u7684\u201c\u8bed\u6cd5\u7cd6\u201d\uff0c\u5b83\u5141\u8bb8\u4f60\u50cf\u7f16\u5199\u540c\u6b65\u4ee3\u7801\u4e00\u6837\u7f16\u5199\u5f02\u6b65\u4ee3\u7801\u3002</p> <p>\u4f7f\u7528\u89c4\u5219\uff1a</p> <ol> <li>\u5173\u952e\u5b57 <code>await</code> \u53ea\u80fd\u5728\u6807\u8bb0\u4e3a <code>async</code> \u7684\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u3002</li> <li><code>await</code> \u653e\u7f6e\u5728\u8fd4\u56de Promise \u7684\u8c03\u7528\uff08\u4f8b\u5982 <code>fetch()</code> \u6216 <code>response.json()</code>\uff09\u4e4b\u524d\u3002</li> <li><code>await</code> \u4f1a\u201c\u6682\u505c\u201d <code>async</code> \u51fd\u6570\u7684\u6267\u884c\uff0c\u76f4\u5230 Promise \u88ab\u89e3\u51b3\uff08resolved\uff09\uff0c\u5e76\u8fd4\u56de\u5176\u7ed3\u679c\u3002</li> </ol> <p>\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u7528 <code>async/await</code> \u91cd\u5199\uff1a <pre><code>async function getIssPositionWithAsyncAwait() {\n    console.log('\u6b63\u5728\u901a\u8fc7\u201cAsync/await\u201d\u534f\u8bae\u53d1\u9001\u8bf7\u6c42...');\n\n    try {\n        // \u9636\u6bb5 1\uff1a\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\n        const response = await fetch('http://api.open-notify.org/iss-now.json');\n\n        if (!response.ok) {\n            throw new Error(`HTTP \u9519\u8bef\uff1a${response.status}`);\n        }\n\n        // \u9636\u6bb5 2\uff1a\u7b49\u5f85\u54cd\u5e94\u4f53\u8f6c\u6362\u4e3a JSON\n        const data = await response.json();\n\n        console.log('\u901a\u8fc7\u201cAsync/await\u201d\u534f\u8bae\u83b7\u53d6\u7684\u6570\u636e\uff1a', data.iss_position);\n    } catch (error) {\n        // \u9636\u6bb5 3\uff08\u9519\u8bef\uff09\uff1a\u6355\u83b7 try \u5757\u4e2d\u7684\u4efb\u4f55\u9519\u8bef\n        console.error('\u201cAsync/await\u201d\u534f\u8bae\u901a\u4fe1\u5931\u8d25\uff1a', error);\n    }\n\n    console.log('...\u547d\u4ee4\u5df2\u53d1\u9001\uff0c\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u7ee7\u7eed\u5de5\u4f5c...');\n}\n</code></pre></p> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u53ef\u8bfb\u6027\uff1a \u4ee3\u7801\u770b\u8d77\u6765\u51e0\u4e4e\u548c\u666e\u901a\u7684\u540c\u6b65\u4ee3\u7801\u4e00\u6837\uff0c\u5f88\u5bb9\u6613\u4ece\u4e0a\u5230\u4e0b\u9605\u8bfb\u3002</li> <li>\u9519\u8bef\u5904\u7406\uff1a \u4f7f\u7528\u6807\u51c6\u4e14\u719f\u6089\u7684 <code>try...catch</code> \u5757\u3002</li> <li>\u8c03\u8bd5\uff1a \u66f4\u5bb9\u6613\u8c03\u8bd5\uff0c\u56e0\u4e3a\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5e26\u6709 <code>await</code> \u7684\u884c\u4e0a\u8bbe\u7f6e\u65ad\u70b9\uff08breakpoints\uff09\u3002</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u5bb9\u6613\u5fd8\u8bb0 <code>await</code> \u6216 <code>async</code>\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/5/#4","title":"4. \u4f55\u65f6\u4f7f\u7528\u54ea\u79cd\u534f\u8bae\uff1f","text":"\u60c5\u51b5 \u63a8\u8350\u65b9\u6cd5 \u539f\u56e0\uff1f \u5927\u591a\u6570\u60c5\u51b5 <code>async/await</code> \u4ee3\u7801\u66f4\u6e05\u6670\uff0c\u66f4\u6613\u8bfb\u548c\u8c03\u8bd5\u3002\u8fd9\u662f\u73b0\u4ee3\u6807\u51c6\u3002 \u7b80\u5355 1-2 \u6b65\u94fe \u5e26 <code>.then()</code> \u7684 Promise \u5b8c\u5168\u9002\u7528\uff0c\u4ee3\u7801\u4fdd\u6301\u7d27\u51d1\u3002 \u5e76\u884c\u6267\u884c\u591a\u4e2a\u8bf7\u6c42 <code>Promise.all()</code> \u6b64\u65b9\u6cd5\u5141\u8bb8\u540c\u65f6\u542f\u52a8\u591a\u4e2a Promise \u5e76\u7b49\u5f85\u5b83\u4eec\u5168\u90e8\u5b8c\u6210\u3002<code>async/await</code> \u4e0e\u5b83\u5b8c\u7f8e\u7ed3\u5408\u3002 <p><code>Promise.all()</code> \u793a\u4f8b\uff1a <pre><code>async function getParallelData() {\n    try {\n        // \u540c\u65f6\u542f\u52a8\u4e24\u4e2a\u8bf7\u6c42\n        const [shipsResponse, launchesResponse] = await Promise.all([\n            fetch('https://api.spacexdata.com/v4/rockets'),\n            fetch('https://api.spacexdata.com/v4/launches/latest')\n        ]);\n\n        if (!shipsResponse.ok || !launchesResponse.ok) {\n            throw new Error('\u5176\u4e2d\u4e00\u4e2a\u8bf7\u6c42\u5931\u8d25\u4e86\uff01');\n        }\n\n        const rockets = await shipsResponse.json();\n        const latestLaunch = await launchesResponse.json();\n\n        console.log(`\u8230\u961f\u4e2d\u7684\u706b\u7bad\u603b\u6570\uff1a${rockets.length}`);\n        console.log(`\u6700\u65b0\u53d1\u5c04\uff1a${latestLaunch.name}`);\n    } catch (error) {\n        console.error('\u83b7\u53d6\u5e76\u884c\u6570\u636e\u65f6\u51fa\u9519\uff1a', error);\n    }\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/5/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. `async/await` \u662f...</p>  a) Promise \u7684\u66ff\u4ee3\u54c1\uff0c\u5de5\u4f5c\u65b9\u5f0f\u4e0d\u540c  b) \u5904\u7406 Promise \u66f4\u4fbf\u6377\u7684\u8bed\u6cd5  c) \u4f7f JavaScript \u540c\u6b65\u7684\u65b9\u5f0f <p>2. \u5728\u4f7f\u7528 `await` \u7684\u51fd\u6570\u5185\u90e8\uff0c\u54ea\u4e2a\u5173\u952e\u5b57\u662f\u5fc5\u9700\u7684\uff1f</p>  a) `promise`  b) `function`  c) `async` <p>3. `async/await` \u76f8\u5bf9\u4e8e `.then()` \u7684\u4e3b\u8981\u4f18\u52bf\u662f\uff1a</p>  a) \u66f4\u9ad8\u7684\u6267\u884c\u901f\u5ea6  b) \u66f4\u597d\u7684\u4ee3\u7801\u53ef\u8bfb\u6027\u548c\u901a\u8fc7 `try...catch` \u65b9\u4fbf\u7684\u9519\u8bef\u5904\u7406  c) \u65e0\u9700 Polyfill \u5373\u53ef\u5728\u65e7\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c <p>4. \u5982\u679c\u5728 `async` \u51fd\u6570\u5185\u90e8\u5fd8\u8bb0\u5728 `fetch()` \u524d\u6dfb\u52a0 `await`\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f</p>  a) \u4ee3\u7801\u4f1a\u6267\u884c\uff0c\u6ca1\u6709\u9519\u8bef\uff0c\u4f46\u53d8\u91cf\u5c06\u5305\u542b\u4e00\u4e2a Promise \u800c\u975e\u7ed3\u679c  b) JavaScript \u4f1a\u629b\u51fa\u8bed\u6cd5\u9519\u8bef  c) \u9875\u9762\u5c06\u201c\u6302\u8d77\u201d\u7b49\u5f85\u54cd\u5e94 <p>5. `Promise.all()` \u7528\u4e8e\uff1a</p>  a) \u4e25\u683c\u6309\u987a\u5e8f\u6267\u884c Promise  b) \u5e76\u884c\u542f\u52a8\u591a\u4e2a Promise \u5e76\u7b49\u5f85\u5b83\u4eec\u5168\u90e8\u5b8c\u6210  c) \u4ece\u591a\u4e2a Promise \u4e2d\u9009\u62e9\u6700\u5feb\u7684\u90a3\u4e2a \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u4f60\u5b66\u4e60\u4e86\u4e24\u79cd\u7ba1\u7406\u5f02\u6b65\u64cd\u4f5c\u7684\u8bed\u6cd5\uff0c\u5e76\u7406\u89e3\u4e86\u4e3a\u4ec0\u4e48 <code>async/await</code> \u5728\u5927\u591a\u6570\u73b0\u4ee3\u9879\u76ee\u4e2d\u662f\u9996\u9009\u3002</p> <ul> <li>\ud83d\udd17 \u4f60\u56de\u987e\u4e86\u5173\u4e8e\u5e26 <code>.then()</code> \u7684 Promise \u7684\u77e5\u8bc6\u3002</li> <li>\ud83d\udee0\ufe0f \u4f60\u6df1\u5165\u7406\u89e3\u4e86 <code>async/await</code> \u7684\u5de5\u4f5c\u539f\u7406\u53ca\u5176\u4f18\u52bf\u3002</li> <li>\u26a1 \u4f60\u4e86\u89e3\u4e86 <code>Promise.all</code> \u7528\u4e8e\u6267\u884c\u5e76\u884c\u8bf7\u6c42\u3002</li> </ul> <p>\u901a\u4fe1\u534f\u8bae\u5df2\u638c\u63e1\uff01 \u5728\u672c\u8282\u7684\u6700\u540e\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u628a\u6240\u6709\u77e5\u8bc6\u878d\u4f1a\u8d2f\u901a\uff0c\u5e76\u5b8c\u5584\u6211\u4eec\u7684\u201c\u98de\u884c\u63a7\u5236\u4e2d\u5fc3\u201d\uff0c\u4e3a\u6240\u6709 CRUD \u64cd\u4f5c\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u754c\u9762\u3002</p> <p>\ud83d\udccc \u5b9e\u8df5\uff1a</p> <ul> <li>\u5c06\u4f60 <code>app.js</code> \u4e2d\u6240\u6709\u4ecd\u7136\u4f7f\u7528 <code>.then()</code> \u7684\u51fd\u6570\u91cd\u5199\u4e3a <code>async/await</code> \u8bed\u6cd5\u3002</li> <li>\u5c1d\u8bd5\u5728 <code>Promise.all()</code> \u4e2d\u6dfb\u52a0\u53e6\u4e00\u4e2a\u8bf7\u6c42\uff08\u4f8b\u5982\uff0c\u8bbf\u95ee <code>https://api.spacexdata.com/v4/starlink</code>\uff09\u5e76\u8f93\u51fa\u6570\u636e\u3002</li> </ul> <p>\u26a0\ufe0f \u5982\u679c\u51fa\u73b0\u9519\u8bef\uff1a</p> <ul> <li><code>await is only valid in async functions</code>\uff1a\u786e\u4fdd\u4f60\u4f7f\u7528 <code>await</code> \u7684\u51fd\u6570\u5df2\u88ab\u6807\u8bb0\u4e3a <code>async</code>\u3002</li> <li>\u53d8\u91cf\u5305\u542b <code>[object Promise]</code>\uff1a\u4f60\u5fd8\u8bb0\u5728\u8fd4\u56de Promise \u7684\u51fd\u6570\u524d\u52a0\u4e0a <code>await</code>\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/6/","title":"\u7b2c 4.6 \u7ae0\uff1a\u521b\u5efa\u7b80\u5355\u7684 API \u63a5\u53e3","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 1 \u5c0f\u65f6 15 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/6/#1","title":"1. \u6700\u7ec8\u7ec4\u88c5\uff1a\u201c\u98de\u884c\u63a7\u5236\u4e2d\u5fc3\u201d\u542f\u52a8","text":"<p>\u6211\u4eec\u5df2\u7ecf\u5355\u72ec\u7814\u7a76\u4e86\u6240\u6709\u7cfb\u7edf\uff1a\u8bbe\u7f6e\u4e86\u201c\u5929\u7ebf\u201d\uff08<code>Fetch</code>\uff09\uff0c\u5b66\u4f1a\u4e86\u53d1\u9001\u201c\u547d\u4ee4\u201d\uff08<code>GET</code>\u3001<code>POST</code>\u3001<code>DELETE</code>\uff09\uff0c\u5e76\u5f00\u53d1\u4e86\u201c\u7d27\u6025\u534f\u8bae\u201d\uff08\u9519\u8bef\u5904\u7406\uff09\u3002</p> <p>\u73b0\u5728\u662f\u65f6\u5019\u5c06\u6240\u6709\u7ec4\u4ef6\u6574\u5408\u5728\u4e00\u8d77\u5e76\u542f\u52a8\u6211\u4eec\u7684\u98de\u63a7\u4e2d\u5fc3\u2014\u2014\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u3001\u4ea4\u4e92\u5f0f\u7684\u5b87\u5b99\u98de\u8239\u961f\u7ba1\u7406\u754c\u9762\u3002</p> <p>\u6211\u4eec\u7684\u76ee\u6807\uff1a</p> <ul> <li>\u521b\u5efa\u4e00\u4e2a\u7edf\u4e00\u3001\u6574\u6d01\u3001\u6613\u4e8e\u7406\u89e3\u7684\u754c\u9762\u3002</li> <li>\u5b9e\u73b0\u5b8c\u6574\u7684 CRUD \u5468\u671f\uff1a\u521b\u5efa\u3001\u663e\u793a\u3001\u66f4\u65b0\u548c\u5220\u9664\u98de\u8239\u3002</li> <li>\u4e3a\u7528\u6237\u6dfb\u52a0\u89c6\u89c9\u53cd\u9988\uff08\u52a0\u8f7d\u4e2d\u3001\u6210\u529f\u3001\u9519\u8bef\uff09\u3002</li> </ul> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a</p> <p>\u6211\u4eec\u5c06\u4ece\u72ec\u7acb\u7684\u6d4b\u8bd5\u63a7\u5236\u53f0\u8f6c\u5411\u98de\u63a7\u4e2d\u5fc3\u7684\u4e3b\u5c4f\u5e55\u3002\u4e3b\u5c4f\u5e55\u4e0a\u5e94\u6709\u6240\u6709\u5fc5\u8981\u7684\u6309\u94ae\u548c\u6307\u793a\u5668\uff0c\u4ee5\u4fbf\u4e00\u540d\u64cd\u4f5c\u5458\u65e0\u9700\u5728\u6570\u5341\u4e2a\u4e0d\u540c\u7cfb\u7edf\u4e4b\u95f4\u5207\u6362\u5373\u53ef\u7ba1\u7406\u6574\u4e2a\u8230\u961f\u3002</p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/6/#2","title":"2. \u754c\u9762\u8bbe\u8ba1\uff1a\u201c\u4eea\u8868\u76d8\u201d","text":"<p>\u6211\u4eec\u9700\u8981\u66f4\u7ed3\u6784\u5316\u7684 HTML\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u201c\u5361\u7247\u201d\u6765\u663e\u793a\u98de\u8239\uff0c\u5e76\u4f7f\u7528\u6a21\u6001\u7a97\u53e3\u8fdb\u884c\u7f16\u8f91\u3002</p> <p>\u66f4\u65b0 <code>index.html</code>\uff1a <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u0426\u0423\u041f v2.0 - \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0424\u043b\u043e\u0442\u043e\u043c&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt; &lt;!-- \u5f15\u5165\u6837\u5f0f --&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;\u5b87\u5b99\u98de\u8239\u961f\u63a7\u5236\u9762\u677f&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        &lt;section id=\"fleet-controls\"&gt;\n            &lt;button id=\"load-fleet-btn\"&gt;\u5237\u65b0\u8230\u961f\u5217\u8868&lt;/button&gt;\n            &lt;button id=\"show-create-form-btn\"&gt;\u53d1\u5c04\u65b0\u98de\u884c\u5668&lt;/button&gt;\n        &lt;/section&gt;\n\n        &lt;section id=\"fleet-display\"&gt;\n            &lt;h2&gt;\u5f53\u524d\u8230\u961f\u7ec4\u6210&lt;/h2&gt;\n            &lt;div id=\"fleet-list\" class=\"cards-container\"&gt;\n                &lt;!-- \u98de\u8239\u5361\u7247\u5c06\u5728\u6b64\u5904 --&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n\n    &lt;!-- \u7528\u4e8e\u521b\u5efa/\u7f16\u8f91\u7684\u6a21\u6001\u7a97\u53e3\uff08\u6700\u521d\u9690\u85cf\uff09 --&gt;\n    &lt;div id=\"modal\" class=\"modal-overlay\" style=\"display: none;\"&gt;\n        &lt;div class=\"modal-content\"&gt;\n            &lt;h2 id=\"modal-title\"&gt;\u53d1\u5c04\u65b0\u98de\u884c\u5668&lt;/h2&gt;\n            &lt;form id=\"ship-form\"&gt;\n                &lt;input type=\"hidden\" id=\"ship-id\"&gt;\n                &lt;input type=\"text\" id=\"ship-name\" placeholder=\"\u540d\u79f0\" required&gt;\n                &lt;input type=\"text\" id=\"ship-type\" placeholder=\"\u7c7b\u578b\" required&gt;\n                &lt;input type=\"number\" id=\"ship-year\" placeholder=\"\u53d1\u5c04\u5e74\u4efd\" required&gt;\n                &lt;input type=\"text\" id=\"ship-status\" placeholder=\"\u72b6\u6001\" required&gt;\n                &lt;div class=\"modal-actions\"&gt;\n                    &lt;button type=\"submit\" id=\"save-btn\"&gt;\u4fdd\u5b58&lt;/button&gt;\n                    &lt;button type=\"button\" id=\"cancel-btn\"&gt;\u53d6\u6d88&lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/form&gt;\n            &lt;div id=\"notification-area\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;script src=\"api.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/6/#3-stylecss","title":"3. \u6dfb\u52a0\u201c\u592a\u7a7a\u201d\u8bbe\u8ba1\uff1a<code>style.css</code>","text":"<p>\u521b\u5efa <code>style.css</code> \u6587\u4ef6\uff0c\u8ba9\u6211\u4eec\u7684\u98de\u63a7\u4e2d\u5fc3\u770b\u8d77\u6765\u66f4\u4f53\u9762\u3002 <pre><code>/* style.css */\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background-color: #1a1a2e;\n    color: #e0e0e0;\n    margin: 0;\n    padding: 20px;\n}\nheader { text-align: center; margin-bottom: 20px; }\nbutton {\n    background-color: #4a4e69;\n    color: white;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\nbutton:hover { background-color: #6a6e94; }\n.cards-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 20px;\n}\n.card {\n    background-color: #2a2a4e;\n    border: 1px solid #4a4e69;\n    border-radius: 8px;\n    padding: 15px;\n}\n.card h3 { margin-top: 0; color: #9394a5; }\n.card-actions { margin-top: 15px; }\n\n/* \u0421\u0442\u0438\u043b\u0438 \u0434\u043b\u044f \u043c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u043a\u043d\u0430 */\n.modal-overlay {\n    position: fixed;\n    top: 0; left: 0;\n    width: 100%; height: 100%;\n    background-color: rgba(0,0,0,0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.modal-content {\n    background: #1a1a2e;\n    padding: 20px;\n    border-radius: 8px;\n    border: 1px solid #4a4e69;\n    width: 90%;\n    max-width: 500px;\n}\n#ship-form input {\n    width: calc(100% - 20px);\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 4px;\n    border: 1px solid #4a4e69;\n    background-color: #2a2a4e;\n    color: white;\n}\n.modal-actions { text-align: right; }\n</code></pre></p>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/6/#4-appjs","title":"4. \u903b\u8f91\u7684\u5b8c\u6574\u91cd\u6784\uff1a<code>app.js</code>","text":"<p>\u73b0\u5728\u6211\u4eec\u5c06\u7f16\u5199 <code>app.js</code> \u7684\u6700\u7ec8\u7248\u672c\uff0c\u6574\u5408\u6211\u4eec\u6240\u6709\u7684\u77e5\u8bc6\u3002</p> <pre><code>// app.js\n\n// --- DOM \u5143\u7d20 ---\nconst loadFleetBtn = document.getElementById('load-fleet-btn');\nconst fleetListContainer = document.getElementById('fleet-list');\nconst modal = document.getElementById('modal');\nconst modalTitle = document.getElementById('modal-title');\nconst shipForm = document.getElementById('ship-form');\nconst saveBtn = document.getElementById('save-btn');\nconst cancelBtn = document.getElementById('cancel-btn');\nconst showCreateFormBtn = document.getElementById('show-create-form-btn');\nconst notificationArea = document.getElementById('notification-area');\n\n// --- UI \u529f\u80fd ---\n\nfunction showNotification(message, isError = false) {\n    notificationArea.textContent = message;\n    notificationArea.style.color = isError ? '#ff6b6b' : '#6bff6b';\n}\n\nfunction openModalForCreate() {\n    shipForm.reset();\n    document.getElementById('ship-id').value = '';\n    modalTitle.textContent = '\u53d1\u5c04\u65b0\u98de\u884c\u5668';\n    modal.style.display = 'flex';\n}\n\nfunction openModalForEdit(ship) {\n    shipForm.reset();\n    document.getElementById('ship-id').value = ship.id;\n    document.getElementById('ship-name').value = ship.name;\n    document.getElementById('ship-type').value = ship.type;\n    document.getElementById('ship-year').value = ship.launch_year;\n    document.getElementById('ship-status').value = ship.status;\n    modalTitle.textContent = `\u7f16\u8f91\uff1a${ship.name}`;\n    modal.style.display = 'flex';\n}\n\nfunction closeModal() {\n    modal.style.display = 'none';\n    notificationArea.textContent = '';\n}\n\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID\uff1a${ship.id})&lt;/h3&gt;\n        &lt;p&gt;\u7c7b\u578b\uff1a${ship.type}&lt;/p&gt;\n        &lt;p&gt;\u53d1\u5c04\u5e74\u4efd\uff1a${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;\u72b6\u6001\uff1a${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;\u4fee\u6539&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;\u62a5\u5e9f&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n\n// --- API \u548c\u663e\u793a\u903b\u8f91 ---\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;\u6b63\u5728\u52a0\u8f7d\u9065\u6d4b\u6570\u636e...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships');\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;\u6ce8\u518c\u8868\u4e2d\u6ca1\u6709\u98de\u884c\u5668\u3002&lt;/p&gt;';\n            return;\n        }\n        ships.forEach(ship =&gt; {\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;\u8230\u961f\u52a0\u8f7d\u9519\u8bef\uff1a${error.message}&lt;/p&gt;`;\n    }\n}\n\nasync function handleSaveShip(event) {\n    event.preventDefault();\n    const shipId = document.getElementById('ship-id').value;\n    const shipData = {\n        name: document.getElementById('ship-name').value,\n        type: document.getElementById('ship-type').value,\n        launch_year: parseInt(document.getElementById('ship-year').value),\n        status: document.getElementById('ship-status').value\n    };\n\n    try {\n        let response;\n        if (shipId) {\n            // \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 (PUT)\n            response = await apiRequest(`/spaceships/${shipId}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`\u98de\u884c\u5668\u201c${response.name}\u201d\u66f4\u65b0\u6210\u529f\uff01`);\n        } else {\n            // \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 (POST)\n            response = await apiRequest('/spaceships', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(shipData)\n            });\n            showNotification(`\u98de\u884c\u5668\u201c${response.name}\u201d\u53d1\u5c04\u6210\u529f\uff01ID\uff1a${response.id}`);\n        }\n\n        setTimeout(() =&gt; {\n            closeModal();\n            fetchAndDisplayFleet();\n        }, 1500);\n\n    } catch (error) {\n        showNotification(error.message, true);\n    }\n}\n\nasync function handleDeleteShip(shipId) {\n    if (!confirm(`\u60a8\u786e\u5b9a\u8981\u62a5\u5e9f ID \u4e3a ${shipId} \u7684\u98de\u884c\u5668\u5417\uff1f`)) return;\n\n    try {\n        await apiRequest(`/spaceships/${shipId}`, { method: 'DELETE' });\n        alert('\u98de\u884c\u5668\u62a5\u5e9f\u6210\u529f\u3002');\n        fetchAndDisplayFleet();\n    } catch (error) {\n        alert(`\u62a5\u5e9f\u9519\u8bef\uff1a${error.message}`);\n    }\n}\n\n// --- \u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f ---\n\ndocument.addEventListener('DOMContentLoaded', fetchAndDisplayFleet);\nloadFleetBtn.addEventListener('click', fetchAndDisplayFleet);\nshowCreateFormBtn.addEventListener('click', openModalForCreate);\ncancelBtn.addEventListener('click', closeModal);\nshipForm.addEventListener('submit', handleSaveShip);\n\nfleetListContainer.addEventListener('click', async (event) =&gt; {\n    const target = event.target;\n    if (target.classList.contains('delete-btn')) {\n        handleDeleteShip(target.dataset.shipId);\n    }\n    if (target.classList.contains('edit-btn')) {\n        try {\n            const ship = await apiRequest(`/spaceships/${target.dataset.shipId}`);\n            openModalForEdit(ship);\n        } catch (error) {\n            alert(`\u65e0\u6cd5\u52a0\u8f7d\u7f16\u8f91\u6570\u636e\uff1a${error.message}`);\n        }\n    }\n});\n</code></pre>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/6/#5","title":"5. \u6700\u7ec8\u6d4b\u8bd5","text":"<ol> <li>\u542f\u52a8 FastAPI \u670d\u52a1\u5668\uff1a <code>uvicorn main:app --reload</code></li> <li>\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 <code>index.html</code> (\u901a\u8fc7 Live Server)\u3002</li> <li>\u68c0\u67e5\u5b8c\u6574\u5468\u671f\uff1a<ul> <li>\u98de\u8239\u5217\u8868\u5e94\u81ea\u52a8\u52a0\u8f7d\u3002</li> <li>\u70b9\u51fb\u201c\u53d1\u5c04\u65b0\u98de\u884c\u5668\u201d\uff0c\u586b\u5199\u8868\u5355\u5e76\u4fdd\u5b58\u3002\u786e\u8ba4\u65b0\u98de\u8239\u51fa\u73b0\u5728\u5217\u8868\u4e2d\u3002</li> <li>\u5728\u4efb\u610f\u98de\u8239\u4e0a\u70b9\u51fb\u201c\u4fee\u6539\u201d\uff0c\u66f4\u6539\u6570\u636e\u5e76\u4fdd\u5b58\u3002\u786e\u8ba4\u4fe1\u606f\u5df2\u66f4\u65b0\u3002</li> <li>\u5728\u4efb\u610f\u98de\u8239\u4e0a\u70b9\u51fb\u201c\u62a5\u5e9f\u201d\uff0c\u786e\u8ba4\u64cd\u4f5c\u3002\u786e\u8ba4\u5b83\u4ece\u5217\u8868\u4e2d\u6d88\u5931\u3002</li> <li>\u68c0\u67e5\u6240\u6709\u9519\u8bef\u573a\u666f\uff08\u6570\u636e\u4e0d\u6b63\u786e\uff0c\u670d\u52a1\u5668\u505c\u6b62\uff09\u3002</li> </ul> </li> </ol>"},{"location":"zh/%E7%AC%AC4%E7%AB%A0%20-%20%E5%89%8D%E7%AB%AFAPI%E7%9A%84%E6%93%8D%E4%BD%9C/6/#_1","title":"\u5de9\u56fa\u7ec3\u4e60\u5c0f\u6d4b\u9a8c","text":"<p>1. Web \u754c\u9762\u4e2d\u7684\u6a21\u6001\u7a97\u53e3\u662f...</p>  a) HTML6 \u4e2d\u7684\u65b0\u6807\u7b7e  b) \u5f39\u51fa\u5f0f\u5bf9\u8bdd\u6846\uff0c\u5b83\u4f1a\u963b\u585e\u754c\u9762\u7684\u5176\u4ed6\u90e8\u5206  c) \u7528\u4e8e\u663e\u793a\u63a7\u5236\u53f0\u9519\u8bef\u4fe1\u606f\u7684\u7a97\u53e3 <p>2. `DOMContentLoaded` \u4e8b\u4ef6\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u53d1\u751f...</p>  a) \u6240\u6709\u56fe\u7247\u548c\u6837\u5f0f\u90fd\u5df2\u5b8c\u5168\u52a0\u8f7d  b) \u6d4f\u89c8\u5668\u5df2\u4ece HTML \u6784\u5efa\u4e86 DOM \u6811\uff0c\u4f46\u8d44\u6e90\u53ef\u80fd\u4ecd\u5728\u52a0\u8f7d\u4e2d  c) \u9875\u9762\u52a0\u8f7d\u53d1\u751f\u9519\u8bef <p>3. \u4e3a\u4ec0\u4e48\u5728\u6700\u7ec8\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u548c\u7f16\u8f91\u90fd\u4f7f\u7528\u540c\u4e00\u4e2a\u8868\u5355\uff1f</p>  a) \u4e3a\u4e86\u907f\u514d HTML \u4ee3\u7801\u91cd\u590d\u5e76\u7b80\u5316\u903b\u8f91  b) \u56e0\u4e3a\u6d4f\u89c8\u5668\u4e0d\u5141\u8bb8\u9875\u9762\u4e0a\u6709\u591a\u4e2a\u8868\u5355  c) \u8fd9\u662f FastAPI \u7684\u8981\u6c42 <p>4. `data-ship-id=\"${ship.id}\"` \u662f\u4e00\u4e2a...\u7684\u4f8b\u5b50</p>  a) CSS \u7c7b  b) JavaScript \u53d8\u91cf  c) \u7528\u4e8e\u5728 HTML \u4e2d\u5b58\u50a8\u6570\u636e\u7684\u81ea\u5b9a\u4e49 data \u5c5e\u6027 <p>5. \u4ee3\u7801\u91cd\u6784\uff08\u4f8b\u5982\uff0c\u5c06\u903b\u8f91\u79fb\u81f3 `api.js`\uff09\u662f\u4e3a\u4e86...</p>  a) \u4f7f\u4ee3\u7801\u590d\u6742\u5316\u4ee5\u9632\u6b62\u590d\u5236  b) \u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3001\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u91cd\u7528\u6027  c) \u51cf\u5c0f\u6700\u7ec8\u6587\u4ef6\u7684\u5927\u5c0f \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3</p> <p>\u60a8\u5df2\u6210\u529f\u6784\u5efa\u5e76\u542f\u52a8\u60a8\u7684\u201c\u98de\u884c\u63a7\u5236\u4e2d\u5fc3\u201d\u3002</p> <ul> <li>\ud83d\udda5\ufe0f \u60a8\u521b\u5efa\u4e86\u4e00\u4e2a\u7ed3\u6784\u5316\u4e14\u6837\u5f0f\u5316\u7684 HTML/CSS \u754c\u9762\u3002</li> <li>\u2699\ufe0f \u60a8\u7f16\u5199\u4e86\u6e05\u6670\u3001\u6a21\u5757\u5316\u7684 JavaScript \u4ee3\u7801\uff0c\u5b9e\u73b0\u4e86\u5b8c\u6574\u7684 CRUD \u5faa\u73af\u3002</li> <li>\ud83d\udef0\ufe0f \u60a8\u7684\u524d\u7aef\u73b0\u5728\u53ef\u4ee5\u5b8c\u5168\u7ba1\u7406\u4f7f\u7528 FastAPI \u6784\u5efa\u7684\u540e\u7aef\u3002</li> </ul> <p>\u606d\u559c\u60a8\u6210\u529f\u5b8c\u6210\u7b2c 4 \u7ae0\uff01 \u60a8\u5df2\u5b8c\u6210\u4e86\u4ece\u53d1\u9001\u7b80\u5355 <code>fetch</code> \u8bf7\u6c42\u5230\u521b\u5efa\u4e0e\u60a8\u81ea\u5df1\u7684 API \u4ea4\u4e92\u7684\u5b8c\u6574 Web \u5e94\u7528\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fc7\u7a0b\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/1/","title":"\u7b2c5.1\u7ae0\uff1aLaravel \u4e2d\u7684 Blade \u6a21\u677f","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 40\u5206\u949f</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/1/#1-blade","title":"1. \u4ec0\u4e48\u662f Blade\uff1f\u60a8\u7684\u201c\u667a\u80fd\u201d\u84dd\u56fe","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u63a5\u89e6\u8fc7\u4e24\u79cd\u6781\u7aef\u60c5\u51b5\uff1a\u7eaf <code>index.html</code> \u548c\u6765\u81ea API \u7684\u7eaf JSON \u54cd\u5e94\u3002\u4f46\u662f\uff0c\u5982\u4f55\u521b\u5efa\u80fd\u591f\u52a8\u6001\u663e\u793a\u6211\u4eec\u540e\u7aef\u6570\u636e\u7684\u5b8c\u6574\u7f51\u9875\u5462\uff1f</p> <p>Blade \u662f Laravel \u5185\u7f6e\u7684\u6a21\u677f\u5f15\u64ce\u3002\u5b83\u5141\u8bb8\u6211\u4eec\u7f16\u5199\u666e\u901a\u7684 HTML\uff0c\u4f46\u5177\u6709\u201c\u8d85\u80fd\u529b\u201d\uff1a</p> <ul> <li>\u4ee5\u4f18\u96c5\u7684\u8bed\u6cd5\u63d2\u5165\u53d8\u91cf\u5e76\u6267\u884c PHP \u4ee3\u7801\u3002</li> <li>\u521b\u5efa\u53ef\u91cd\u7528\u7684\u9875\u9762\u201c\u5e03\u5c40\u201d\uff08\u9875\u7709\u3001\u9875\u811a\uff09\u3002</li> <li>\u76f4\u63a5\u5728 HTML \u4ee3\u7801\u4e2d\u4f7f\u7528\u5faa\u73af\u548c\u6761\u4ef6\u8bed\u53e5\u3002</li> <li>\u81ea\u52a8\u9632\u8303 XSS \u653b\u51fb\u3002</li> </ul> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a</p> <p>\u60f3\u8c61\u4e00\u4e0b\uff0cHTML \u662f\u5b87\u5b99\u98de\u8239\u7684\u7b80\u5355\u84dd\u56fe\u3002Blade \u662f\u4e00\u4e2a\u5148\u8fdb\u7684 CAD \u7cfb\u7edf\u3002\u60a8\u4e0d\u4ec5\u7ed8\u5236\u7ebf\u6761\uff0c\u8fd8\u6dfb\u52a0\u201c\u667a\u80fd\u201d\u5bf9\u8c61\u3002\u60a8\u8bf4\uff1a\u201c\u8fd9\u91cc\u5c06\u662f\u8239\u5458\u5217\u8868\u201d\uff0cBlade \u5c31\u4f1a\u81ea\u52a8\u8bf7\u6c42\u6570\u636e\u5e76\u586b\u5145\u5b83\u3002\u201c\u8fd9\u91cc\u5c06\u662f\u4e3b\u5c4f\u5e55\u201d\uff0cBlade \u5c31\u4f1a\u63d2\u5165\u6807\u51c6\u754c\u9762\u3002</p> <p>\u6240\u6709 Blade \u6587\u4ef6\u90fd\u4ee5 <code>.blade.php</code> \u6269\u5c55\u540d\u7ed3\u5c3e\uff0c\u5e76\u5b58\u50a8\u5728 <code>resources/views/</code> \u6587\u4ef6\u5939\u4e2d\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/1/#2","title":"2. \u8bed\u6cd5\u57fa\u7840\uff1a\u6570\u636e\u663e\u793a","text":"<p>Blade \u6700\u7b80\u5355\u7684\u529f\u80fd\u5c31\u662f\u8f93\u51fa\u6570\u636e\u3002</p> <p><code>{{ }}</code> \u8bed\u6cd5</p> <p>\u8fd9\u5bf9\u53cc\u82b1\u62ec\u53f7\u662f Blade \u7684\u547d\u4ee4\uff1a\u201c\u83b7\u53d6\u53d8\u91cf\u5e76\u5b89\u5168\u5730\u8f93\u51fa\u5176\u5185\u5bb9\u201d\u3002</p> <p>\u793a\u4f8b\uff1a</p> <ol> <li> <p><code>routes/web.php</code> \u4e2d\u7684\u8def\u7531\uff1a <pre><code>&lt;?php\nRoute::get('/mission-briefing', function () {\n    $mission = '\u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 Kepler-186';\n    return view('briefing', ['mission_name' =&gt; $mission]);\n});\n</code></pre></p> <ul> <li><code>view('briefing', ...)</code> \u544a\u8bc9 Laravel \u67e5\u627e <code>resources/views/briefing.blade.php</code> \u6587\u4ef6\u3002</li> <li><code>['mission_name' =&gt; $mission]</code> \u2014 \u8fd9\u662f\u6211\u4eec\u201c\u4f20\u9012\u201d\u5230\u89c6\u56fe\u4e2d\u7684\u6570\u636e\u6570\u7ec4\u3002</li> </ul> </li> <li> <p><code>resources/views/briefing.blade.php</code> \u4e2d\u7684\u89c6\u56fe\uff1a <pre><code>&lt;h1&gt;\u041c\u0438\u0441\u0441\u0438\u044f \u0426\u0423\u041f&lt;/h1&gt;\n&lt;p&gt;\u0422\u0435\u043a\u0443\u0449\u0430\u044f \u0437\u0430\u0434\u0430\u0447\u0430: {{ $mission_name }}&lt;/p&gt;\n</code></pre></p> </li> </ol> <p>\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee <code>/mission-briefing</code> \u7684\u7ed3\u679c\uff1a <pre><code>&lt;h1&gt;\u041c\u0438\u0441\u0441\u0438\u044f \u0426\u0423\u041f&lt;/h1&gt;\n&lt;p&gt;\u0422\u0435\u043a\u0443\u0449\u0430\u044f \u0437\u0430\u0434\u0430\u0447\u0430: \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 Kepler-186&lt;/p&gt;\n</code></pre></p> <p>\ud83d\udee1\ufe0f \u91cd\u8981\u63d0\u793a\uff1a Blade \u4f1a\u81ea\u52a8\u8f6c\u4e49 <code>{{ }}</code> \u5185\u7684\u6240\u6709\u6570\u636e\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u53d8\u91cf\u5305\u542b HTML \u6807\u7b7e\u6216\u6076\u610f\u811a\u672c\uff0c\u5b83\u4eec\u5c06\u4f5c\u4e3a\u666e\u901a\u6587\u672c\u8f93\u51fa\uff0c\u800c\u4e0d\u662f\u6267\u884c\u3002\u8fd9\u662f\u5185\u7f6e\u7684 XSS \u653b\u51fb\u9632\u62a4\u3002</p> <p>\u8981\u8f93\u51fa\u672a\u8f6c\u4e49\u7684 HTML\uff08\u8bf7\u8c28\u614e\u64cd\u4f5c\uff01\uff09\uff0c\u8bf7\u4f7f\u7528 <code>{!! $variable !!}</code> \u8bed\u6cd5\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/1/#3-html","title":"3. \u6307\u4ee4\uff1a\u5728 HTML \u4e2d\u6dfb\u52a0\u903b\u8f91","text":"<p>Blade \u6307\u4ee4\u4ee5 <code>@</code> \u7b26\u53f7\u5f00\u5934\u3002\u5b83\u4eec\u5141\u8bb8\u4f7f\u7528\u5faa\u73af\u3001\u6761\u4ef6\u8bed\u53e5\u7b49\u3002</p> <p>\u6761\u4ef6 (<code>@if</code>, <code>@else</code>)\uff1a <pre><code>@if($planet-&gt;is_habitable)\n    &lt;p style=\"color: green;\"&gt;\u884c\u661f\u9002\u5b9c\u5c45\u4f4f\uff01&lt;/p&gt;\n@else\n    &lt;p style=\"color: red;\"&gt;\u9700\u8981\u5b87\u822a\u670d\u3002\u5927\u6c14\u5c42\u5145\u6ee1\u654c\u610f\u3002&lt;/p&gt;\n@endif\n</code></pre></p> <p>\u5faa\u73af (<code>@foreach</code>, <code>@forelse</code>)\uff1a</p> <p><code>@forelse</code> \u662f\u4e00\u4e2a\u975e\u5e38\u65b9\u4fbf\u7684\u6307\u4ee4\uff0c\u5b83\u7ed3\u5408\u4e86\u5faa\u73af\u548c\u7a7a\u68c0\u67e5\u3002 <pre><code>&lt;h2&gt;\u7cfb\u7edf\u4e2d\u7684\u884c\u661f\u5217\u8868\uff1a&lt;/h2&gt;\n&lt;ul&gt;\n    @forelse($planets as $planet)\n        &lt;li&gt;\n            {{ $loop-&gt;iteration }}. {{ $planet-&gt;name }}\n            &lt;!-- $loop - \u5faa\u73af\u4e2d\u53ef\u7528\u7684\u7279\u6b8a\u53d8\u91cf --&gt;\n        &lt;/li&gt;\n    @empty\n        &lt;li&gt;\u5728\u8be5\u7cfb\u7edf\u4e2d\u672a\u53d1\u73b0\u884c\u661f\u3002&lt;/li&gt;\n    @endforelse\n&lt;/ul&gt;\n</code></pre></p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/1/#4-dry","title":"4. \u5e03\u5c40\u548c\u533a\u57df\uff1a\u4e0d\u8981\u91cd\u590d\u81ea\u5df1 (DRY)","text":"<p>Blade \u6700\u5f3a\u5927\u7684\u529f\u80fd\u662f\u521b\u5efa\u53ef\u91cd\u7528\u5e03\u5c40\uff08layouts\uff09\u3002\u60a8\u65e0\u9700\u5c06\u7f51\u7ad9\u7684\u9875\u7709\u548c\u9875\u811a\u590d\u5236\u5230\u6bcf\u4e2a\u9875\u9762\u3002</p> <p>\u7b2c 1 \u6b65\uff1a\u521b\u5efa\u4e3b\u5e03\u5c40 (<code>layout</code>)</p> <p>\u521b\u5efa <code>resources/views/layouts/app.blade.php</code> \u6587\u4ef6\uff1a <pre><code>&lt;?php\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;title&gt;\u0426\u0423\u041f - @yield('title')&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"{{ asset('css/style.css') }}\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;\u94f6\u6cb3\u8230\u961f\u6307\u6325\u4e2d\u5fc3&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        @yield('content') &lt;!-- \u8fd9\u91cc\u5c06\u662f\u9875\u9762\u7684\u72ec\u7279\u5185\u5bb9 --&gt;\n    &lt;/main&gt;\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command. \u7248\u6743\u6240\u6709\u3002&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> -   <code>@yield('title')</code> \u548c <code>@yield('content')</code> \u662f\u201c\u63d2\u69fd\u201d\u6216\u201c\u5360\u4f4d\u7b26\u201d\u3002</p> <p>\u7b2c 2 \u6b65\uff1a\u521b\u5efa\u4f7f\u7528\u5e03\u5c40\u7684\u5b50\u89c6\u56fe</p> <p>\u521b\u5efa <code>resources/views/planets/index.blade.php</code> \u6587\u4ef6\uff1a <pre><code>&lt;?php\n@extends('layouts.app') {{-- \u7ee7\u627f\u6211\u4eec\u7684\u4e3b\u5e03\u5c40 --}}\n\n@section('title', '\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u0435\u0442') {{-- \u586b\u5145 'title' \u533a\u57df --}}\n\n@section('content') {{-- \u586b\u5145\u4e3b\u8981\u7684 'content' \u533a\u57df --}}\n    &lt;h2&gt;\u5df2\u6ce8\u518c\u884c\u661f&lt;/h2&gt;\n    &lt;p&gt;\u8fd9\u662f\u6211\u4eec\u5df2\u77e5\u7684\u6240\u6709\u4e16\u754c\u7684\u5217\u8868\u3002&lt;/p&gt;\n    {{-- \u8fd9\u91cc\u53ef\u4ee5\u662f\u60a8\u7684 @forelse \u5faa\u73af\u6765\u8f93\u51fa\u884c\u661f --}}\n@endsection\n</code></pre></p> <p>\u73b0\u5728\uff0c\u5f53 Laravel \u6e32\u67d3 <code>planets.index</code> \u65f6\uff0c\u5b83\u4f1a\u9996\u5148\u83b7\u53d6 <code>layouts.app</code>\uff0c\u7136\u540e\u5c06 <code>@section</code> \u533a\u57df\u4e2d\u7684\u5185\u5bb9\u63d2\u5165\u5230\u5176\u4e2d\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/1/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u5c0f\u6d4b\u9a8c","text":"<p>1. Blade \u6a21\u677f\u6587\u4ef6\u7684\u6269\u5c55\u540d\u662f\u4ec0\u4e48\uff1f</p>  a) .html  b) .blade.php  c) .php.blade <p>2. \u5982\u4f55\u5728 Blade \u4e2d\u5b89\u5168\u5730\u8f93\u51fa\u53d8\u91cf `$name`\uff1f</p>  a)   b) {{ $name }}  c) [[$name]] <p>3. \u54ea\u4e2a\u6307\u4ee4\u7528\u4e8e\u7ee7\u627f\u4e3b\u5e03\u5c40\uff1f</p>  a) @include('layouts.app')  b) @layout('layouts.app')  c) @extends('layouts.app') <p>4. `@yield('content')` \u6307\u4ee4\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f</p>  a) \u5b9a\u4e49\u5360\u4f4d\u7b26\uff08\u7528\u4e8e\u63d2\u5165\u5185\u5bb9\u7684\u4f4d\u7f6e\uff09  b) \u63d2\u5165 `content.blade.php` \u6587\u4ef6\u7684\u5185\u5bb9  c) \u7ed3\u675f\u5185\u5bb9\u533a\u57df <p>5. \u54ea\u4e2a\u6307\u4ee4\u975e\u5e38\u9002\u5408\u5bf9\u53ef\u80fd\u4e3a\u7a7a\u7684\u6570\u7ec4\u8fdb\u884c\u5faa\u73af\uff1f</p>  a) @foreach  b) @while  c) @forelse \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u7ecf\u5b66\u4e60\u4e86 Blade \u7684\u57fa\u7840\u77e5\u8bc6\u2014\u2014\u4e00\u4e2a\u521b\u5efa\u52a8\u6001\u7f51\u9875\u7684\u5f3a\u5927\u5de5\u5177\u3002\u73b0\u5728\u60a8\u80fd\u591f\uff1a</p> <ul> <li>\u8f93\u51fa\u6570\u636e\u5e76\u81ea\u52a8\u9632\u5fa1 XSS\u3002</li> <li>\u4f7f\u7528\u6307\u4ee4\u6dfb\u52a0\u903b\u8f91\uff08<code>@if</code>, <code>@forelse</code>\uff09\u3002</li> <li>\u4f7f\u7528 <code>@extends</code> \u548c <code>@yield</code> \u521b\u5efa\u53ef\u91cd\u7528\u5e03\u5c40\u3002</li> </ul> <p>\u6211\u4eec\u5df2\u7ecf\u4e3a\u98de\u8239\u7684\u63a7\u5236\u9762\u677f\u51c6\u5907\u597d\u4e86\u201c\u84dd\u56fe\u201d\u3002 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4e3a\u6211\u4eec\u7684 API \u521b\u5efa\u5177\u4f53\u7684\u201c\u9762\u677f\u201d\uff08\u89c6\u56fe\uff09\uff0c\u5e76\u5728\u4e0a\u9762\u663e\u793a\u771f\u5b9e\u6570\u636e\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/2/","title":"\u7b2c5.2\u7ae0\uff1a\u521b\u5efa\u7b80\u5355\u7684API\u89c6\u56fe","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 45\u5206\u949f</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/2/#1","title":"1. \u4efb\u52a1\uff1a\u53ef\u89c6\u5316\u6570\u636e","text":"<p>\u6211\u4eec\u5728\u7b2c2\u7ae0\u4e2d\u7684API\u80fd\u591f\u4ee5JSON\u683c\u5f0f\u8fd4\u56de\u6570\u636e\u3002\u8fd9\u5bf9\u4e8e\u673a\u5668\u6765\u8bf4\u5f88\u68d2\uff0c\u4f46\u4eba\u4eec\u66f4\u559c\u6b22\u5728\u7f8e\u89c2\u7684\u7f51\u9875\u4e0a\u67e5\u770b\u4fe1\u606f\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u521b\u5efa\u4e24\u4e2a\u8fd9\u6837\u7684\u9875\u9762\uff1a</p> <ol> <li>\u6240\u6709\u884c\u661f\u5217\u8868 (<code>/planets</code>)</li> <li>\u5355\u4e2a\u884c\u661f\u9875\u9762 (<code>/planets/{id}</code>)</li> </ol> <p>\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u201c\u8def\u7531 \u2192 \u63a7\u5236\u5668 \u2192 \u89c6\u56fe\u201d\u7ec4\u5408\u3002</p> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a</p> <p>\u60f3\u8c61\u4e00\u4e0b\uff0cAPI\u8fd4\u56de\u7684JSON\u662f\u539f\u59cb\u9065\u6d4b\u6570\u636e\uff0c\u53ea\u662f\u4e00\u4e32\u6570\u5b57\u6d41\u3002\u6211\u4eec\u4eca\u5929\u7684\u4efb\u52a1\u662f\u5728\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u521b\u5efa\u4e24\u4e2a\u5c4f\u5e55\uff08\u4e24\u4e2a\u201c\u89c6\u56fe\u201d\uff09\uff1a</p> <ul> <li>\u6982\u89c8\u5c4f\u5e55\uff1a \u663e\u793a\u7cfb\u7edf\u4e2d\u6240\u6709\u5bf9\u8c61\u7684\u72b6\u6001\uff08\u884c\u661f\u5217\u8868\uff09\u3002</li> <li>\u8be6\u7ec6\u5c4f\u5e55\uff1a \u70b9\u51fb\u5bf9\u8c61\u65f6\u663e\u793a\u5176\u6240\u6709\u4fe1\u606f\uff08\u5355\u4e2a\u884c\u661f\u9875\u9762\uff09\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/2/#2-1","title":"2. \u6b65\u9aa41\uff1a\u521b\u5efa\u7f51\u9875\u63a7\u5236\u5668","text":"<p>\u4e3a\u4e86\u67b6\u6784\u7684\u6e05\u6670\uff0c\u4e0d\u5e94\u5c06API\u903b\u8f91\u548c\u7f51\u9875\u903b\u8f91\u6df7\u5408\u5728\u540c\u4e00\u4e2a\u63a7\u5236\u5668\u4e2d\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u63a7\u5236\u5668\uff0c\u4e13\u95e8\u7528\u4e8e\u663e\u793a\u6211\u4eec\u7684Blade\u89c6\u56fe\u3002</p> <p>\u5728\u7ec8\u7aef\u4e2d\u6267\u884c\uff1a <pre><code>php artisan make:controller Web/PlanetPageController\n</code></pre> \u6211\u4eec\u5c06\u5176\u521b\u5efa\u5728 <code>Web</code> \u5b50\u6587\u4ef6\u5939\u4e2d\uff0c\u4ee5\u4fbf\u4e0eAPI\u63a7\u5236\u5668\u533a\u5206\u5f00\u6765\u3002</p> <p>\u6253\u5f00\u521b\u5efa\u7684\u6587\u4ef6 <code>app/Http/Controllers/Web/PlanetPageController.php</code>\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/2/#2","title":"\u6b65\u9aa42\uff1a\u6240\u6709\u884c\u661f\u5217\u8868\u9875\u9762","text":"<p>1. \u5728\u63a7\u5236\u5668\u4e2d\u521b\u5efa\u65b9\u6cd5\uff1a \u5728 <code>PlanetPageController</code> \u4e2d\u6dfb\u52a0 <code>index</code> \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u4ece\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u6240\u6709\u884c\u661f\u5e76\u5c06\u5176\u4f20\u9012\u7ed9\u89c6\u56fe\u3002 <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers\\Web;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Planet; // \u522b\u5fd8\u4e86\u5bfc\u5165\u6a21\u578b\n\nclass PlanetPageController extends Controller\n{\n    /**\n     * \u663e\u793a\u6240\u6709\u884c\u661f\u5217\u8868\u9875\u9762\u3002\n     */\n    public function index()\n    {\n        // 1. \u4ece\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u6240\u6709\u884c\u661f\n        $planets = Planet::all();\n\n        // 2. \u8fd4\u56de\u89c6\u56fe\u5e76\u4f20\u9012\u6570\u636e\n        return view('planets.index', ['planets' =&gt; $planets]);\n    }\n}\n</code></pre></p> <p>2. \u521b\u5efaBlade\u89c6\u56fe\uff1a \u521b\u5efa\u6587\u4ef6 <code>resources/views/planets/index.blade.php</code>\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e0a\u4e00\u7ae0\u4e2d\u521b\u5efa\u7684\u5e03\u5c40\u3002</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;\u884c\u661f&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n        }\n        .container {\n            max-width: 960px;\n            margin: 0 auto;\n        }\n        h2 {\n            color: #1a202c;\n        }\n        hr {\n            border: none;\n            border-top: 1px solid #e2e8f0;\n            margin: 1.5em 0;\n        }\n        .planet-list {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n            gap: 1.5em;\n        }\n        .planet-card {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 1.5em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n            transition: transform 0.2s;\n        }\n        .planet-card:hover {\n            transform: translateY(-5px);\n        }\n        .planet-card h3 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-card p {\n            margin-bottom: 0.5em;\n            color: #4a5568;\n        }\n        .planet-card a {\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .planet-card a:hover {\n            text-decoration: underline;\n        }\n        .no-planets {\n            color: #718096;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h2&gt;\u6240\u6709\u5df2\u77e5\u884c\u661f\u5217\u8868&lt;/h2&gt;\n        &lt;hr&gt;\n        &lt;div class=\"planet-list\"&gt;\n            @forelse($planets as $planet)\n                &lt;div class=\"planet-card\"&gt;\n                    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n                    &lt;p&gt;\u592a\u9633\u7cfb\uff1a{{ $planet-&gt;solar_system }}&lt;/p&gt;\n                    &lt;p&gt;\u76f4\u5f84\uff1a{{ number_format($planet-&gt;size_km, 0, '.', ' ') }} \u516c\u91cc&lt;/p&gt;\n                    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;\u4e86\u89e3\u66f4\u591a &amp;rarr;&lt;/a&gt;\n                &lt;/div&gt;\n            @empty\n                &lt;p class=\"no-planets\"&gt;\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u884c\u661f\u3002\u8bf7\u8fd0\u884c\u6570\u636e\u586b\u5145\u5668\u3002&lt;/p&gt;\n            @endforelse\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li><code>number_format(...)</code> \u662f\u4e00\u4e2a\u666e\u901a\u7684PHP\u51fd\u6570\uff0c\u7528\u4e8e\u7f8e\u89c2\u5730\u683c\u5f0f\u5316\u6570\u5b57\u3002\u5b83\u53ef\u4ee5\u5728Blade\u4e2d\u76f4\u63a5\u4f7f\u7528\u3002</li> </ul> <p>3. \u5728 <code>routes/web.php</code> \u4e2d\u521b\u5efa\u8def\u7531\uff1a <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// ...\n\nRoute::get('/planets', [PlanetPageController::class, 'index']);\n</code></pre> \u73b0\u5728\uff0c\u5982\u679c\u60a8\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee <code>/planets</code> \u5730\u5740\uff0c\u60a8\u5c06\u770b\u5230\u884c\u661f\u5217\u8868\u9875\u9762\uff01</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/2/#4-3","title":"4. \u6b65\u9aa43\uff1a\u5355\u4e2a\u884c\u661f\u9875\u9762","text":"<p>1. \u5728\u63a7\u5236\u5668\u4e2d\u521b\u5efa\u65b9\u6cd5\uff1a</p> <p>\u5728 <code>PlanetPageController</code> \u4e2d\u6dfb\u52a0 <code>show</code> \u65b9\u6cd5\u3002\u901a\u8fc7\u8def\u7531\u6a21\u578b\u7ed1\u5b9a\uff08Route Model Binding\uff09\uff0cLaravel\u5c06\u6839\u636eID\u81ea\u52a8\u627e\u5230\u884c\u661f\u5e76\u5c06\u5176\u4f20\u9012\u7ed9\u65b9\u6cd5\u3002</p> <pre><code>&lt;?php\n// \u5728 PlanetPageController \u7c7b\u5185\u90e8\n/**\n * \u663e\u793a\u5355\u4e2a\u5177\u4f53\u884c\u661f\u7684\u9875\u9762\u3002\n */\npublic function show(Planet $planet)\n{\n    // Laravel \u5df2\u7ecf\u4e3a\u6211\u4eec\u627e\u5230\u4e86\u884c\u661f\u3002\n    // \u5982\u679c\u672a\u627e\u5230\uff0c\u5b83\u5c06\u81ea\u52a8\u8fd4\u56de 404 \u9519\u8bef\u3002\n\n    return view('planets.show', ['planet' =&gt; $planet]);\n}\n</code></pre> <p>2. \u521b\u5efaBlade\u89c6\u56fe\uff1a</p> <p>\u521b\u5efa\u6587\u4ef6 <code>resources/views/planets/show.blade.php</code>\u3002</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;{{ $planet-&gt;name }}&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: sans-serif;\n            background-color: #f4f4f9;\n            color: #333;\n            margin: 0;\n            padding: 2em;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n        }\n        .container {\n            max-width: 600px;\n            width: 100%;\n        }\n        .planet-detail {\n            background-color: #fff;\n            border: 1px solid #e2e8f0;\n            border-radius: 0.5em;\n            padding: 2em;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n        }\n        .planet-detail h1 {\n            margin-top: 0;\n            color: #2d3748;\n        }\n        .planet-detail p {\n            margin-bottom: 1em;\n            color: #4a5568;\n            font-size: 1.1em;\n        }\n        .back-link {\n            display: inline-block;\n            margin-top: 1.5em;\n            color: #4299e1;\n            text-decoration: none;\n            font-weight: bold;\n        }\n        .back-link:hover {\n            text-decoration: underline;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"planet-detail\"&gt;\n            @if($planet-&gt;image_url)\n                &lt;img src=\"{{ $planet-&gt;image_url }}\" alt=\"{{ $planet-&gt;name }}\u7684\u56fe\u7247\" style=\"max-width: 100%; height: auto; border-radius: 0.5em; margin-bottom: 1em;\"&gt;\n            @endif\n            &lt;h1&gt;{{ $planet-&gt;name }}&lt;/h1&gt;\n            @if($planet-&gt;description)\n                &lt;p&gt;{{ $planet-&gt;description }}&lt;/p&gt;\n            @endif\n            &lt;p&gt;&lt;strong&gt;\u592a\u9633\u7cfb\uff1a&lt;/strong&gt; {{ $planet-&gt;solar_system }}&lt;/p&gt;\n            &lt;p&gt;&lt;strong&gt;\u76f4\u5f84\uff1a&lt;/strong&gt; {{ number_format($planet-&gt;size_km, 0, '.', ' ') }} \u516c\u91cc&lt;/p&gt;\n            &lt;a href=\"/planets\" class=\"back-link\"&gt;&amp;larr; \u8fd4\u56de\u884c\u661f\u5217\u8868&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>3. \u5728 <code>routes/web.php</code> \u4e2d\u521b\u5efa\u8def\u7531\uff1a <pre><code>// \u5728 /planets \u8def\u7531\u4e4b\u540e\u6dfb\u52a0\u6b64\u8def\u7531\nRoute::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n</code></pre> -   \u53c2\u6570\u540d\u79f0 <code>{planet}</code> \u5fc5\u987b\u4e0e\u63a7\u5236\u5668\u65b9\u6cd5\u4e2d\u7684\u53d8\u91cf\u540d\u79f0 (<code>show(Planet $planet)</code>) \u5339\u914d\uff0c\u4ee5\u4fbf\u8def\u7531\u6a21\u578b\u7ed1\u5b9a\u6b63\u5e38\u5de5\u4f5c\u3002</p> <p>\u73b0\u5728\uff0c\u70b9\u51fb\u5217\u8868\u9875\u9762\u4e0a\u7684\u201c\u4e86\u89e3\u66f4\u591a\u201d\u94fe\u63a5\uff0c\u60a8\u5c06\u8fdb\u5165\u7279\u5b9a\u884c\u661f\u7684\u8be6\u7ec6\u9875\u9762\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/2/#_1","title":"\u5de9\u56fa\u7ec3\u4e60\u5c0f\u6d4b\u9a8c","text":"<p>1. \u5206\u79bbAPI\u548c\u7f51\u9875\u903b\u8f91\u7684\u6700\u4f73\u5b9e\u8df5\u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f</p>  a) \u4e3a\u6240\u6709\u5185\u5bb9\u4f7f\u7528\u4e00\u4e2a\u63a7\u5236\u5668  b) \u521b\u5efa\u5355\u72ec\u7684\u63a7\u5236\u5668\uff08\u4f8b\u5982\uff0c\u5728`Web`\u548c`Api`\u6587\u4ef6\u5939\u4e2d\uff09  c) \u5c06\u6240\u6709\u903b\u8f91\u653e\u5728\u8def\u7531\u6587\u4ef6\u4e2d <p>2. return view('planets.index', ['planets' =&gt; $planets]); \u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f</p>  a) \u8fd4\u56de\u5305\u542b\u884c\u661f\u6570\u636e\u7684JSON\u6570\u7ec4  b) \u6e32\u67d3 resources/views/planets/index.blade.php \u6587\u4ef6\uff0c\u5e76\u5411\u5176\u4f20\u9012 `$planets` \u53d8\u91cf  c) \u91cd\u5b9a\u5411\u5230 URL /planets/index <p>3. \u5728 `show(Planet $planet)` \u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u8def\u7531\u6a21\u578b\u7ed1\u5b9a\uff08Route Model Binding\uff09\u662f\u4ec0\u4e48\uff1f</p>  a) Laravel \u624b\u52a8\u5728\u914d\u7f6e\u4e2d\u5c06\u8def\u7531\u4e0e\u6a21\u578b\u7ed1\u5b9a  b) Laravel \u6839\u636eURL\u4e2d\u7684\u53c2\u6570 (`{planet}`) \u81ea\u52a8\u5728\u6570\u636e\u5e93\u4e2d\u67e5\u627e `Planet` \u8bb0\u5f55  c) \u5982\u679c\u672a\u627e\u5230\u884c\u661f\uff0cLaravel \u4f1a\u521b\u5efa\u4e00\u9897\u65b0\u884c\u661f <p>4. \u5982\u4f55\u5728Blade\u4e2d\u683c\u5f0f\u5316 `created_at` \u5b57\u6bb5\u7684\u65e5\u671f\uff1f</p>  a) {{ $planet-&gt;created_at-&gt;format('Y-m-d') }}  b) {{ format_date($planet-&gt;created_at) }}  c) \u8fd9\u53ea\u80fd\u5728\u63a7\u5236\u5668\u4e2d\u5b8c\u6210 <p>5. \u5982\u679c\u8def\u7531\u4e2d\u6307\u5b9a\u4e86 `/posts/{post}`\uff0c\u63a7\u5236\u5668\u4e2d\u65b9\u6cd5\u7684\u7b7e\u540d\u5e94\u8be5\u5982\u4f55\u7f16\u5199\u624d\u80fd\u4f7f\u8def\u7531\u6a21\u578b\u7ed1\u5b9a\uff08Route Model Binding\uff09\u5de5\u4f5c\uff1f</p>  a) public function show(Post $post)  b) public function show(Post $p)  c) public function show($post) \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u6210\u529f\u4f7f\u7528 Laravel MVC \u67b6\u6784\u4e3a\u60a8\u7684 API \u521b\u5efa\u4e86\u201c\u524d\u7aef\u5c55\u793a\u201d\u3002\u73b0\u5728\u60a8\u62e5\u6709\uff1a</p> <ul> <li>\u7528\u4e8e\u7f51\u9875\u903b\u8f91\u7684\u72ec\u7acb\u63a7\u5236\u5668\u3002</li> <li>\u4e00\u4e2a\u52a8\u6001\u9875\u9762\uff0c\u5217\u51fa\u6240\u6709\u884c\u661f\uff0c\u5e76\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u6570\u636e\u3002</li> <li>\u6bcf\u4e2a\u884c\u661f\u7684\u8be6\u7ec6\u9875\u9762\uff0c\u4f7f\u7528\u8def\u7531\u6a21\u578b\u7ed1\u5b9a\uff08Route Model Binding\uff09\u3002</li> <li>\u5728 <code>routes/web.php</code> \u4e2d\u5b9a\u4e49\u4e86\u4e24\u4e2a Web \u8def\u7531\uff0c\u7528\u4e8e\u8bbf\u95ee\u8fd9\u4e9b\u9875\u9762\u3002</li> </ul> <p>\u60a8\u5df2\u5c06\u539f\u59cb\u6570\u636e\u8f6c\u6362\u4e3a\u7528\u6237\u53ef\u7406\u89e3\u4e14\u6709\u7528\u7684\u4fe1\u606f\u3002 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u5c06 JavaScript \u5d4c\u5165\u5230\u6211\u4eec\u7684 Blade \u89c6\u56fe\u4e2d\u6765\u589e\u52a0\u4ea4\u4e92\u6027\uff0c\u4ee5\u5b9e\u73b0\u5728\u4e0d\u91cd\u65b0\u52a0\u8f7d\u9875\u9762\u7684\u60c5\u51b5\u4e0b\u4e0e API \u8fdb\u884c\u4ea4\u4e92\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/3/","title":"\u7b2c 5.3 \u7ae0\uff1a\u5728 Laravel \u89c6\u56fe\u4e2d\u5d4c\u5165 JavaScript","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 50 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/3/#1-web-javascript","title":"1. Web \u4e2d JavaScript \u7684\u4e24\u79cd\u65b9\u6cd5","text":"<p>\u8fc4\u4eca\u4e3a\u6b62\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u4f7f\u7528 \u670d\u52a1\u5668\u7aef\u6e32\u67d3 (SSR) \u2014 \u670d\u52a1\u5668 (Laravel) \u751f\u6210\u5b8c\u6574\u7684 HTML\uff08\u901a\u8fc7 Blade\uff09\u5e76\u5c06\u5176\u53d1\u9001\u5230\u6d4f\u89c8\u5668\u3002\u8fd9\u5bf9\u4e8e SEO \u548c\u5feb\u901f\u9996\u6b21\u52a0\u8f7d\u975e\u5e38\u6709\u5229\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u5c06\u6dfb\u52a0\u5ba2\u6237\u7aef\u4ea4\u4e92\u2014\u2014\u6d4f\u89c8\u5668\u5728\u52a0\u8f7d\u9875\u9762\u540e\u5c06\u6267\u884c JavaScript \u4ee3\u7801\u6765\u5b8c\u6210\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li>\u65e0\u9700\u91cd\u65b0\u52a0\u8f7d\u9875\u9762\u5373\u53ef\u5411\u6211\u4eec\u7684 API \u53d1\u9001\u8bf7\u6c42\u3002</li> <li>\u52a8\u6001\u66f4\u65b0\u9875\u9762\u90e8\u5206\uff08\u4f8b\u5982\uff0c\u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u65b0\u884c\u661f\uff09\u3002</li> <li>\u663e\u793a\u901a\u77e5\u548c\u6a21\u6001\u7a97\u53e3\u3002</li> </ul> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a</p> <p>\u60f3\u8c61\u4e00\u4e0b\uff0cSSR \u5c31\u50cf\u5728\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3 (\u670d\u52a1\u5668) \u83b7\u53d6\u6253\u5370\u51fa\u6765\u7684\u5b8c\u6574\u661f\u7cfb\u56fe\u3002\u60a8\u53ef\u4ee5\u770b\u5230\u6253\u5370\u65f6\u7684\u6240\u6709\u5bf9\u8c61\u3002</p> <p>\u5ba2\u6237\u7aef JS \u5c31\u50cf\u60a8\u7684\u4e2a\u4eba\u5e73\u677f\u7535\u8111 (\u6d4f\u89c8\u5668)\uff0c\u5b83\u5b9e\u65f6\u4e0e\u536b\u661f (API) \u901a\u4fe1\u5e76\u66f4\u65b0\u60a8\u5730\u56fe\u4e0a\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u800c\u65e0\u9700\u5411\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u8bf7\u6c42\u65b0\u7684\u7eb8\u8d28\u5730\u56fe\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/3/#2-js","title":"2. JS \u4ee3\u7801\u7684\u5b58\u50a8\u4f4d\u7f6e\u548c\u5f15\u5165\u65b9\u5f0f","text":"<p>\u5982\u6211\u4eec\u6240\u77e5\uff0c\u6240\u6709\u516c\u5171\u8d44\u6e90\uff08CSS\u3001JS\u3001\u56fe\u50cf\uff09\u90fd\u5e94\u4f4d\u4e8e <code>public</code> \u6587\u4ef6\u5939\u4e2d\u3002</p> <p>\u6b63\u786e\u7ed3\u6784\uff1a</p> <ol> <li>\u6e90\u6587\u4ef6\uff1a \u60a8\u6240\u6709\u7684\u4e3b\u8981 JS \u4ee3\u7801\u90fd\u5e94\u4f4d\u4e8e <code>public/js/</code> \u4e2d\u3002\u4f8b\u5982\uff0c<code>public/js/planets.js</code>\u3002</li> <li>Blade \u4e2d\u5f15\u5165\uff1a \u4f7f\u7528 <code>asset()</code> \u8f85\u52a9\u51fd\u6570\u751f\u6210\u6b63\u786e\u7684 URL\u3002</li> </ol> <p>\u5728 <code>layouts/app.blade.php</code> \u5e03\u5c40\u4e2d\u5f15\u5165\u7684\u793a\u4f8b\uff1a <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    {{-- ... --}}\n&lt;/head&gt;\n&lt;body&gt;\n    {{-- ... \u5934\u90e8\u548c\u4e3b\u4f53 ... --}}\n\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; {{ date('Y') }} Space Command.&lt;/p&gt;\n    &lt;/footer&gt;\n\n    {{-- \u811a\u672c\u6700\u597d\u653e\u5728 body \u6807\u7b7e\u7684\u672b\u5c3e\uff0c\u4ee5\u52a0\u5feb\u9875\u9762\u6e32\u67d3\u901f\u5ea6 --}}\n    &lt;script src=\"{{ asset('js/planets.js') }}\"&gt;&lt;/script&gt;\n    @stack('scripts') {{-- \u4e3a\u7279\u5b9a\u9875\u9762\u7684\u811a\u672c\u521b\u5efa\u4e00\u4e2a\u201c\u69fd\u4f4d\u201d --}}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <ul> <li><code>@stack('scripts')</code> \u662f\u4e00\u4e2a\u5f3a\u5927\u7684 Blade \u6307\u4ee4\u3002\u5b83\u5141\u8bb8\u5b50\u89c6\u56fe\u5c06\u81ea\u5df1\u7684 JS \u4ee3\u7801\u201c\u63a8\u5165\u201d\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u3002\u8fd9\u5728\u67d0\u4e2a\u9875\u9762\u9700\u8981\u72ec\u7279\u811a\u672c\u800c\u53e6\u4e00\u4e2a\u9875\u9762\u4e0d\u9700\u8981\u65f6\u975e\u5e38\u6709\u7528\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/3/#3","title":"3. \u793a\u4f8b\uff1a\u201c\u5220\u9664\u201d\u786e\u8ba4\u6309\u94ae","text":"<p>\u8ba9\u6211\u4eec\u5728\u884c\u661f\u5217\u8868\u9875\u9762 (<code>planets/index.blade.php</code>) \u4e0a\u4e3a\u6bcf\u4e2a\u884c\u661f\u6dfb\u52a0\u4e00\u4e2a\u201c\u5220\u9664\u201d\u6309\u94ae\uff0c\u8be5\u6309\u94ae\u5c06\u901a\u8fc7 JavaScript \u548c Fetch API \u5de5\u4f5c\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u5728 <code>resources/views/planets/index.blade.php</code> \u4e2d\u6dfb\u52a0\u6309\u94ae</p> <p>\u4fee\u6539\u884c\u661f\u5361\u7247\uff0c\u6dfb\u52a0\u5e26\u6709 data \u5c5e\u6027\u7684\u6309\u94ae\uff1a <pre><code>{{-- ... \u5728 @forelse \u5faa\u73af\u5185\u90e8 ... --}}\n&lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n    &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n    &lt;p&gt;\u592a\u9633\u7cfb\uff1a{{ $planet-&gt;solar_system }}&lt;/p&gt;\n    &lt;p&gt;\u76f4\u5f84\uff1a{{ number_format($planet-&gt;size_km, 0, '.', ' ') }} \u516c\u91cc&lt;/p&gt;\n    &lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;\u4e86\u89e3\u66f4\u591a &amp;rarr;&lt;/a&gt;\n    &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"/api/planets/{{ $planet-&gt;id }}\"&gt;\n        \u62a5\u5e9f\n    &lt;/button&gt;\n&lt;/div&gt;\n&lt;!-- ... \u5728 body \u7ed3\u675f\u6807\u7b7e\u4e4b\u524d ... --&gt;\n&lt;script src=\"{{ asset('js/planets.js') }}\" defer&gt;&lt;/script&gt;\n</code></pre></p> <ul> <li><code>id=\"planet-card-{{ $planet-&gt;id }}\"</code> \u2014 \u6574\u4e2a\u5361\u7247\u7684\u552f\u4e00 ID\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u5728 DOM \u4e2d\u5c06\u5176\u5220\u9664\u3002</li> <li><code>data-id</code> \u548c <code>data-url</code> \u2014 \u5c06\u6570\u636e\u4ece PHP (Blade) \u4f20\u9012\u5230 JavaScript \u7684\u4fbf\u6377\u65b9\u5f0f\u3002</li> </ul> <p>\u6b65\u9aa4 2\uff1a\u7f16\u5199 JavaScript \u903b\u8f91</p> <p>\u521b\u5efa\u6587\u4ef6 <code>public/js/planets.js</code> \u5e76\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    // \u67e5\u627e\u6240\u6709\u201c\u5220\u9664\u201d\u6309\u94ae\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            const planetId = event.target.dataset.id;\n            const apiUrl = event.target.dataset.url;\n\n            if (!confirm(`\u60a8\u786e\u5b9a\u8981\u62a5\u5e9f ID \u4e3a ${planetId} \u7684\u884c\u661f\u5417\uff1f\u6b64\u64cd\u4f5c\u4e0d\u53ef\u9006\u3002`)) {\n                return; // \u7528\u6237\u70b9\u51fb\u4e86\u201c\u53d6\u6d88\u201d\n            }\n\n            try {\n                // \u5411\u6211\u4eec\u7684 API \u53d1\u9001 DELETE \u8bf7\u6c42\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        // \u7a0d\u540e\u6211\u4eec\u5c06\u5728\u6b64\u5904\u6dfb\u52a0 CSRF \u4ee4\u724c\n                    }\n                });\n\n                if (response.status === 204) { // 204 \u65e0\u5185\u5bb9 - \u6210\u529f\u5220\u9664\n                    // \u4ece\u9875\u9762\u4e2d\u79fb\u9664\u884c\u661f\u5361\u7247\n                    const cardToRemove = document.getElementById(`planet-card-${planetId}`);\n                    if (cardToRemove) {\n                        cardToRemove.remove();\n                    }\n                    alert('\u884c\u661f\u5df2\u6210\u529f\u62a5\u5e9f\u3002');\n                } else {\n                    // \u5982\u679c API \u8fd4\u56de\u9519\u8bef\n                    const errorData = await response.json();\n                    alert(`\u9519\u8bef\uff1a${errorData.message || '\u672a\u80fd\u5220\u9664\u884c\u661f\u3002'}`);\n                }\n            } catch (error) {\n                console.error('\u53d1\u9001\u8bf7\u6c42\u65f6\u51fa\u9519\uff1a', error);\n                alert('\u53d1\u751f\u7f51\u7edc\u9519\u8bef\u3002\u8bf7\u91cd\u8bd5\u3002');\n            }\n        });\n    });\n});\n</code></pre></p> <p>\u73b0\u5728\uff0c\u5982\u679c\u60a8\u5237\u65b0 <code>/planets</code> \u9875\u9762\uff0c\u60a8\u5c06\u770b\u5230\u201c\u62a5\u5e9f\u201d\u6309\u94ae\uff0c\u70b9\u51fb\u5b83\u4eec\u5c06\u89e6\u53d1\u6211\u4eec\u7684 JavaScript \u4ee3\u7801\uff01</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/3/#4-blade-javascript","title":"4. \u4ece Blade \u5411 JavaScript \u4f20\u9012\u6570\u636e","text":"<p>\u6709\u65f6\u9700\u8981\u5411 JS \u4f20\u9012\u7684\u4e0d\u4ec5\u4ec5\u662f\u5b57\u7b26\u4e32\uff0c\u800c\u662f\u6574\u4e2a\u6570\u7ec4\u6216\u5bf9\u8c61\u3002</p> <p>\u9519\u8bef\u7684\u65b9\u6cd5\uff08\u6613\u53d7\u653b\u51fb\uff09\uff1a <pre><code>let planets = {{ $planets }}; // \u8fd9\u5c06\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef\u4e14\u4e0d\u5b89\u5168\n</code></pre></p> <p>\u6b63\u786e\u7684\u65b9\u6cd5\uff08\u901a\u8fc7 JSON\uff09\uff1a \u4f7f\u7528 <code>@json</code> \u6307\u4ee4\u3002\u5b83\u80fd\u5b89\u5168\u5730\u5c06 PHP \u6570\u7ec4/\u5bf9\u8c61\u8f6c\u6362\u4e3a\u6709\u6548\u7684 JSON \u5bf9\u8c61\u3002</p> <p>\u5728 <code>planets/index.blade.php</code> \u4e2d\u7684\u793a\u4f8b\uff1a <pre><code>@extends('layouts.app')\n{{-- ... --}}\n@section('content')\n    {{-- ... --}}\n@endsection\n\n@push('scripts') {{-- \u5c06\u6211\u4eec\u7684\u811a\u672c\u201c\u63a8\u5165\u201d\u5e03\u5c40\u4e2d\u7684 @stack('scripts') \u69fd\u4f4d --}}\n&lt;script&gt;\n    // Laravel \u5b89\u5168\u5730\u5c06 $planets \u96c6\u5408\u8f6c\u6362\u4e3a JSON \u6570\u7ec4\n    const planetsData = @json($planets);\n\n    // \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5728 JS \u4e2d\u4f7f\u7528\u8fd9\u4e2a\u6570\u7ec4\u4e86\n    console.log('\u4ece Blade \u4f20\u9012\u7684\u884c\u661f\u6570\u636e\uff1a', planetsData);\n    alert(`\u5df2\u52a0\u8f7d ${planetsData.length} \u9897\u884c\u661f\uff01`);\n&lt;/script&gt;\n@endpush\n</code></pre></p> <ul> <li><code>@push('scripts')</code> \u5c06\u5185\u5bb9\u653e\u5165 <code>layouts/app.blade.php</code> \u4e2d\u7684 <code>@stack('scripts')</code> \u5185\u90e8\u3002\u8fd9\u5141\u8bb8\u4ec5\u5728\u771f\u6b63\u9700\u8981\u811a\u672c\u7684\u9875\u9762\u4e0a\u6dfb\u52a0\u5b83\u4eec\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/3/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u5c0f\u6d4b\u9a8c","text":"<p>1. \u5728 Laravel \u9879\u76ee\u4e2d\uff0c\u516c\u5171 JS \u548c CSS \u6587\u4ef6\u5e94\u8be5\u5b58\u50a8\u5728\u54ea\u91cc\uff1f</p>  a) resources/js  b) storage/app/public  c) public/ <p>2. \u54ea\u4e2a Blade \u8f85\u52a9\u51fd\u6570\u7528\u4e8e\u6b63\u786e\u751f\u6210\u8d44\u4ea7\uff08JS\u3001CSS\uff09\u7684 URL\uff1f</p>  a) url()  b) asset()  c) public_path() <p>3. `@push('scripts')` / `@stack('scripts')` \u8fd9\u5bf9\u6307\u4ee4\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f</p>  a) \u5141\u8bb8\u5b50\u89c6\u56fe\u5c06\u81ea\u5df1\u7684 JS \u4ee3\u7801\u6dfb\u52a0\u5230\u7236\u5e03\u5c40\u4e2d\u7684\u7279\u5b9a\u4f4d\u7f6e  b) \u5c06\u6240\u6709 JS \u6587\u4ef6\u5408\u5e76\u4e3a\u4e00\u4e2a  c) \u5c06 JS \u4ee3\u7801\u53d1\u9001\u5230\u670d\u52a1\u5668 <p>4. \u5982\u4f55\u5b89\u5168\u5730\u5c06 PHP \u6570\u7ec4 `$data` \u4ece Blade \u4f20\u9012\u5230 JavaScript\uff1f</p>  a) let jsData = {{ $data }};  b) let jsData = '@php echo json_encode($data); @endphp';  c) let jsData = @json($data); <p>5. \u4e3a\u4ec0\u4e48\u5efa\u8bae\u5c06 JS \u811a\u672c\u653e\u5728 body \u6807\u7b7e\u7684\u672b\u5c3e\u5f15\u5165\uff1f</p>  a) \u4e3a\u4e86\u907f\u514d\u5b83\u4eec\u963b\u585e\u9875\u9762\u4e3b\u8981 HTML \u5185\u5bb9\u7684\u6e32\u67d3  b) \u8fd9\u662f HTML5 \u6807\u51c6\u7684\u8981\u6c42  c) \u8fd9\u6837\u811a\u672c\u6267\u884c\u5f97\u66f4\u5feb \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u5b66\u4f1a\u901a\u8fc7\u6dfb\u52a0\u5ba2\u6237\u7aef\u903b\u8f91\u6765\u4e3a\u9759\u6001 Blade \u9875\u9762\u6ce8\u5165\u6d3b\u529b\u3002\u5173\u952e\u6280\u80fd\u5305\u62ec\uff1a</p> <ul> <li>\u5728 Laravel \u9879\u76ee\u4e2d\u6b63\u786e\u7ec4\u7ec7\u548c\u5f15\u5165 JS \u6587\u4ef6\u3002</li> <li>\u4f7f\u7528 <code>data-*</code> \u5c5e\u6027\u5c06\u6570\u636e\u4ece HTML \u4f20\u9012\u5230 JS\u3002</li> <li>\u4f7f\u7528 Fetch \u52a8\u6001\u4e0e API \u4ea4\u4e92\uff0c\u65e0\u9700\u91cd\u65b0\u52a0\u8f7d\u9875\u9762\u3002</li> <li>\u4f7f\u7528 <code>@json</code> \u6307\u4ee4\u5b89\u5168\u5730\u5c06 PHP \u53d8\u91cf\u4f20\u9012\u7ed9 JavaScript\u3002</li> <li>\u4f7f\u7528 <code>@push</code> \u548c <code>@stack</code> \u6765\u7ec4\u7ec7\u811a\u672c\u3002 \u60a8\u7684\"\u63a7\u5236\u9762\u677f\"\u53d8\u5f97\u53ef\u4ea4\u4e92\u4e86\u3002\u7136\u800c\uff0c\u76ee\u524d\u6211\u4eec\u7684\u4fee\u6539\u8bf7\u6c42\uff08POST\u3001PUT\u3001DELETE\uff09\u5b58\u5728\u6f0f\u6d1e\u3002\u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u4fdd\u62a4\u673a\u5236\u2014\u2014CSRF \u4ee4\u724c\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/4/","title":"\u7b2c\u4e94\u7ae0\u7b2c\u56db\u8282\uff1a\u5904\u7406 CSRF \u4ee4\u724c","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 30 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/4/#1-csrf","title":"1. \u4ec0\u4e48\u662f CSRF \u653b\u51fb\uff1f\u201c\u52ab\u6301\u201d\u60a8\u7684\u98de\u8239","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u60a8\u5df2\u767b\u5f55\u5230\u60a8\u7684\u592a\u7a7a\u8230\u961f\u63a7\u5236\u9762\u677f (<code>space-api.test</code>)\u3002\u5728\u76f8\u90bb\u7684\u6807\u7b7e\u9875\u4e2d\uff0c\u60a8\u6253\u5f00\u4e86\u4e00\u4e2a\u65e0\u5bb3\u7684\u732b\u54aa\u7f51\u7ad9 (<code>evil-cats.com</code>)\u3002\u8be5\u7f51\u7ad9\u6709\u4e00\u4e2a\u9690\u85cf\u7684\u8868\u5355\uff0c\u4f1a\u81ea\u52a8\u5411\u60a8\u7684\u7f51\u7ad9 <code>POST /api/planets/1/delete</code> \u5730\u5740\u53d1\u9001\u8bf7\u6c42\u3002</p> <p>\u7531\u4e8e\u60a8\u5df2\u5728 <code>space-api.test</code> \u4e0a\u6388\u6743\uff0c\u60a8\u7684\u6d4f\u89c8\u5668\u4f1a\u53cb\u597d\u5730\u5c06\u60a8\u7684\u6240\u6709 Cookie \u9644\u52a0\u5230\u6b64\u8bf7\u6c42\u4e2d\u3002Laravel \u670d\u52a1\u5668\u5c06\u770b\u5230\u6709\u6548\u7684\u4f1a\u8bdd\uff0c\u5e76\u8ba4\u4e3a\u8fd9\u662f\u60a8\u81ea\u5df1\u51b3\u5b9a\u62a5\u5e9f\u884c\u661f\u3002\u884c\u661f\u5c06\u5728\u60a8\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u88ab\u5220\u9664\u3002</p> <p>\u8fd9\u5c31\u662f CSRF (Cross-Site Request Forgery) \u2014\u2014 \u4e00\u79cd\u653b\u51fb\uff0c\u653b\u51fb\u8005\u8bf1\u9a97\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u6d4f\u89c8\u5668\u5728\u53d7\u4fe1\u4efb\u7684\u7f51\u7ad9\u4e0a\u6267\u884c\u4e0d\u5e0c\u671b\u7684\u64cd\u4f5c\u3002</p> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a</p> <p>\u60a8\u662f\u98de\u8239\u7684\u8239\u957f\uff0c\u62e5\u6709\u4e00\u5f20\u94a5\u5319\u5361\uff08\u4f1a\u8bdd/Cookie\uff09\u3002\u653b\u51fb\u8005\u65e0\u6cd5\u7a83\u53d6\u60a8\u7684\u5361\u3002\u4f46\u4ed6\u4eec\u53ef\u4ee5\u5728\u60a8\u5206\u5fc3\u65f6\uff0c\u6b3a\u9a97\u60a8\u5c06\u5361\u5237\u5411\u8d44\u6e90\u62a5\u5e9f\u7ec8\u7aef\u3002CSRF \u4ee4\u724c\u5c31\u50cf\u4e00\u4e2a PIN \u7801\uff0c\u9700\u8981\u4e0e\u5361\u4e00\u8d77\u8f93\u5165\u3002\u653b\u51fb\u8005\u4e0d\u77e5\u9053 PIN \u7801\uff0c\u4ed6\u4eec\u7684\u653b\u51fb\u5c31\u4f1a\u5931\u8d25\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/4/#2-laravel-csrf","title":"2. Laravel \u5982\u4f55\u9632\u8303 CSRF\uff1f","text":"<p>Laravel \u9ed8\u8ba4\u4f7f\u7528 CSRF \u4ee4\u724c\u4fdd\u62a4\u6240\u6709\u201c\u4e0d\u5b89\u5168\u201d\u7684 Web \u8bf7\u6c42 (POST, PUT, PATCH, DELETE)\u3002</p> <ol> <li>\u751f\u6210\u9875\u9762\u65f6\uff0cLaravel \u4f1a\u4e3a\u7528\u6237\u4f1a\u8bdd\u521b\u5efa\u4e00\u4e2a\u72ec\u7279\u7684\u968f\u673a\u4ee4\u724c\u3002</li> <li>\u6b64\u4ee4\u724c\u88ab\u5d4c\u5165\u5230 HTML \u8868\u5355\u4e2d\u3002</li> <li>\u63d0\u4ea4\u8868\u5355\u65f6\uff0c\u4ee4\u724c\u968f\u8bf7\u6c42\u4e00\u8d77\u53d1\u9001\u3002</li> <li>\u5728\u670d\u52a1\u5668\u7aef\uff0c<code>VerifyCsrfToken</code> \u4e2d\u95f4\u4ef6\u4f1a\u5c06\u8bf7\u6c42\u4e2d\u7684\u4ee4\u724c\u4e0e\u4f1a\u8bdd\u4e2d\u5b58\u50a8\u7684\u4ee4\u724c\u8fdb\u884c\u6bd4\u8f83\u3002</li> <li>\u5982\u679c\u4ee4\u724c\u4e0d\u5339\u914d\uff0cLaravel \u4f1a\u4ee5 419 \u9519\u8bef\uff08\u4f1a\u8bdd\u8fc7\u671f/\u9875\u9762\u8fc7\u671f\uff09\u4e2d\u65ad\u8bf7\u6c42\u3002</li> </ol> <p>\u91cd\u8981\u63d0\u793a\uff1a <code>routes/api.php</code> \u4e2d\u7684 API \u8def\u7531\u4e0d\u53d7 CSRF \u4fdd\u62a4\uff0c\u56e0\u4e3a\u5b83\u4eec\u5047\u5b9a\u4f7f\u7528\u4e0d\u540c\u7684\u8eab\u4efd\u9a8c\u8bc1\u673a\u5236\uff08\u4f8b\u5982 Sanctum \u4ee4\u724c\uff09\uff0c\u800c\u4e0d\u662f\u57fa\u4e8e Cookie \u7684\u4f1a\u8bdd\u3002\u6211\u4eec\u5f53\u524d\u7684\u95ee\u9898\u4e13\u95e8\u6d89\u53ca\u6211\u4eec\u5728 <code>routes/web.php</code> \u4e2d\u521b\u5efa\u7684 Web \u8def\u7531\u548c\u9875\u9762\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/4/#3-html-csrf","title":"3. \u5728 HTML \u8868\u5355\u4e2d\u4f7f\u7528 CSRF \u4ee4\u724c","text":"<p>\u8fd9\u662f\u6700\u7b80\u5355\u7684\u573a\u666f\u3002Laravel \u4e3a\u6b64\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684 Blade \u6307\u4ee4\u3002</p> <p>\u793a\u4f8b\uff1a\u521b\u5efa\u661f\u7403\u7684\u8868\u5355 \u6211\u4eec\u5c06\u5728 <code>resources/views/planets/create.blade.php</code> \u6587\u4ef6\u4e2d\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u8868\u5355\uff1a</p> <pre><code>&lt;h2&gt;\u542f\u52a8\u65b0\u661f\u7403\u8868\u5355&lt;/h2&gt;\n&lt;form action=\"/planets\" method=\"POST\"&gt;\n    @csrf {{-- \u8fd9\u5c31\u662f\u9b54\u6cd5\uff01 --}}\n\n    &lt;label for=\"name\"&gt;\u540d\u79f0\uff1a&lt;/label&gt;\n    &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;\n\n    &lt;label for=\"solar_system\"&gt;\u592a\u9633\u7cfb\uff1a&lt;/label&gt;\n    &lt;input type=\"text\" id=\"solar_system\" name=\"solar_system\" required&gt;\n\n    {{-- ... \u5176\u4ed6\u5b57\u6bb5 ... --}}\n\n    &lt;button type=\"submit\"&gt;\u542f\u52a8&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p><code>@csrf</code> \u6307\u4ee4\u5c06\u81ea\u52a8\u5728\u8868\u5355\u4e2d\u751f\u6210\u4e00\u4e2a\u9690\u85cf\u5b57\u6bb5\uff1a <pre><code>&lt;input type=\"hidden\" name=\"_token\" value=\"j2aK3dLf4gH5...\u552f\u4e00\u4ee4\u724c...\"&gt;\n</code></pre></p> <p>\u8fd9\u8db3\u4ee5\u4fdd\u62a4\u6807\u51c6 HTML \u8868\u5355\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/4/#4-ajaxfetch-csrf","title":"4. \u5728 AJAX/Fetch \u8bf7\u6c42\u4e2d\u4f7f\u7528 CSRF \u4ee4\u724c","text":"<p>\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 JavaScript \u53d1\u9001\u4e86 <code>DELETE</code> \u8bf7\u6c42\u3002\u73b0\u5728 Laravel \u5c06\u4ee5 419 \u9519\u8bef\u963b\u6b62\u5b83\u3002\u6211\u4eec\u9700\u8981\u5c06 CSRF \u4ee4\u724c\u6dfb\u52a0\u5230\u6211\u4eec\u7684 Fetch \u8bf7\u6c42\u5934\u4e2d\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u4f7f\u4ee4\u724c\u53ef\u4f9b JavaScript \u8bbf\u95ee</p> <p>\u5c06\u5e26\u6709\u4ee4\u724c\u7684 meta \u6807\u7b7e\u6dfb\u52a0\u5230\u60a8\u7684\u4e3b\u5e03\u5c40 <code>resources/views/app.blade.php</code> \u7684 <code>&lt;head&gt;</code> \u4e2d\u3002\u8fd9\u662f Laravel \u4e2d\u7684\u6807\u51c6\u505a\u6cd5\u3002</p> <pre><code>&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n\n    {{-- \u5c06 CSRF \u4ee4\u724c\u6dfb\u52a0\u5230 meta \u6807\u7b7e\u4e2d --}}\n    &lt;meta name=\"csrf-token\" content=\"{{ csrf_token() }}\"&gt;\n\n    {{-- ... --}}\n&lt;/head&gt;\n</code></pre> <p><code>csrf_token()</code> \u51fd\u6570\u8fd4\u56de\u5f53\u524d\u7684\u4ee4\u724c\u3002</p> <p>\u6b65\u9aa4 2\uff1a\u4fee\u6539 JavaScript \u4ee5\u53d1\u9001\u4ee4\u724c</p> <p>\u73b0\u5728\u5728\u6211\u4eec\u7684 <code>public/js/planets.js</code> \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8bfb\u53d6\u6b64\u4ee4\u724c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u6240\u6709\u201c\u4e0d\u5b89\u5168\u201d\u8bf7\u6c42\u7684\u8bf7\u6c42\u5934\u4e2d\u3002</p> <pre><code>// ... \u5728 public/js/planets.js \u6587\u4ef6\u4e2d ...\n\ndocument.addEventListener('DOMContentLoaded', () =&gt; {\n    // \u4ece meta \u6807\u7b7e\u4e2d\u83b7\u53d6\u4ee4\u724c\n    const csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\n    const deleteButtons = document.querySelectorAll('.delete-btn');\n\n    deleteButtons.forEach(button =&gt; {\n        button.addEventListener('click', async (event) =&gt; {\n            // ... \u786e\u8ba4\u903b\u8f91 ...\n\n            try {\n                const response = await fetch(apiUrl, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        'X-CSRF-TOKEN': csrfToken // &lt;-- \u5c06\u4ee4\u724c\u6dfb\u52a0\u5230\u8bf7\u6c42\u5934\u4e2d\uff01\n                    }\n                });\n\n                // ... \u5269\u4f59\u7684\u54cd\u5e94\u5904\u7406\u903b\u8f91 ...\n            } catch (error) {\n                // ...\n            }\n        });\n    });\n});\n</code></pre> <ul> <li>\u8bf7\u6c42\u5934\u540d\u79f0 <code>X-CSRF-TOKEN</code> \u662f Laravel \u9ed8\u8ba4\u68c0\u67e5\u7684\u6807\u51c6\u3002</li> </ul> <p>\u73b0\u5728\u6211\u4eec\u7684 AJAX \u8bf7\u6c42\u4e5f\u53d7\u5230\u4fdd\u62a4\u4e86\u3002\u5c1d\u8bd5\u518d\u6b21\u5220\u9664\u661f\u7403\u2014\u2014\u8fd9\u6b21\u8bf7\u6c42\u5c06\u6210\u529f\u901a\u8fc7\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/4/#_1","title":"\u5de9\u56fa\u7ec3\u4e60\u5c0f\u6d4b","text":"<p>1. CSRF \u4ee4\u724c\u53ef\u4ee5\u9632\u6b62\u54ea\u79cd\u653b\u51fb\uff1f</p>  a) SQL \u6ce8\u5165  b) \u8de8\u7ad9\u811a\u672c  c) \u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020 <p>2. \u54ea\u4e2a Blade \u6307\u4ee4\u4f1a\u5411\u8868\u5355\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5e26\u6709 CSRF \u4ee4\u724c\u7684\u9690\u85cf\u5b57\u6bb5\uff1f</p>  a) @token  b) @csrf  c) @form_token <p>3. \u5982\u679c\u5411 Web \u8def\u7531\u53d1\u9001\u4e0d\u5e26 CSRF \u4ee4\u724c\u7684 POST \u8bf7\u6c42\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f</p>  a) 500 \u9519\u8bef (Internal Server Error)  b) 403 \u9519\u8bef (Forbidden)  c) 419 \u9519\u8bef (Page Expired / Session Expired) <p>4. \u5728 AJAX \u8bf7\u6c42\u4e2d\uff0c\u54ea\u4e2a\u6807\u51c6\u7684 HTTP \u5934\u7528\u4e8e\u53d1\u9001 CSRF \u4ee4\u724c\uff1f</p>  a) Authorization  b) X-CSRF-TOKEN  c) Content-Type <p>5. \u4e3a\u4ec0\u4e48 API \u8def\u7531 (`routes/api.php`) \u9ed8\u8ba4\u4e0d\u4f7f\u7528 CSRF \u4fdd\u62a4\uff1f</p>  a) \u56e0\u4e3a\u5b83\u4eec\u65e8\u5728\u7528\u4e8e\u65e0\u72b6\u6001\u8ba4\u8bc1  b) \u8fd9\u662f Laravel \u4e2d\u7684\u4e00\u4e2a\u9519\u8bef\uff0c\u9700\u8981\u624b\u52a8\u542f\u7528  c) \u56e0\u4e3a API \u8bf7\u6c42\u65e0\u6cd5\u88ab\u4f2a\u9020 \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u5728\u60a8\u7684\u5b87\u5b99\u98de\u8239\u4e0a\u5b89\u88c5\u4e86\u201c\u654c\u6211\u8bc6\u522b\u7cfb\u7edf\u201d\uff0c\u4fdd\u62a4\u5b83\u514d\u53d7 CSRF \u653b\u51fb\u3002\u60a8\u5b66\u4f1a\u4e86\uff1a</p> <ul> <li>\u7406\u89e3 CSRF \u653b\u51fb\u7684\u672c\u8d28\u548c\u5371\u9669\u6027\u3002</li> <li>\u4f7f\u7528 <code>@csrf</code> \u6307\u4ee4\u4fdd\u62a4\u6807\u51c6 HTML \u8868\u5355\u3002</li> <li>\u901a\u8fc7 meta \u6807\u7b7e\u5c06 CSRF \u4ee4\u724c\u4f20\u9012\u7ed9 JavaScript\u3002</li> <li>\u5c06\u4ee4\u724c\u5305\u542b\u5728 AJAX/Fetch \u8bf7\u6c42\u5934\u4e2d\u4ee5\u786e\u4fdd\u5176\u6210\u529f\u6267\u884c\u3002</li> </ul> <p>\u60a8\u7684 Web \u754c\u9762\u73b0\u5728\u4e0d\u4ec5\u5177\u6709\u4ea4\u4e92\u6027\uff0c\u800c\u4e14\u662f\u5b89\u5168\u7684\u3002 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u63a2\u8ba8\u5982\u4f55\u6b63\u786e\u7ec4\u7ec7 Web \u9875\u9762\u7684\u8def\u7531\u6765\u5b8c\u6210\u6211\u4eec\u7684 Web \u754c\u9762\u521b\u5efa\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/5/","title":"\u7b2c5.5\u7ae0\uff1a\u7f51\u9875\u8def\u7531","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 40\u5206\u949f</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/5/#1-routeswebphp-routesapiphp","title":"1. <code>routes/web.php</code> \u4e0e <code>routes/api.php</code>\uff1a\u4e24\u79cd\u4e0d\u540c\u7684\u63a7\u5236\u53f0","text":"<p>\u518d\u6b21\u5f3a\u8c03\u5b83\u4eec\u4e4b\u95f4\u7684\u6839\u672c\u533a\u522b\u81f3\u5173\u91cd\u8981\uff1a</p> \u7279\u6027 <code>routes/web.php</code> (Web \u63a7\u5236\u53f0) <code>routes/api.php</code> (API \u63a7\u5236\u53f0) \u4e3b\u8981\u4efb\u52a1 \u663e\u793a HTML \u9875\u9762\uff0c\u5904\u7406\u8868\u5355 \u4ee5 JSON \u683c\u5f0f\u4e3a\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u6570\u636e \u72b6\u6001 (State) \u6709\u72b6\u6001 (Stateful) \u2014 \u4f7f\u7528\u4f1a\u8bdd\u548c Cookie \u65e0\u72b6\u6001 (Stateless) \u2014 \u6bcf\u4e2a\u8bf7\u6c42\u72ec\u7acb \u9ed8\u8ba4\u4e2d\u95f4\u4ef6 <code>web</code> (\u5305\u62ec\u4f1a\u8bdd\u3001CSRF \u4fdd\u62a4\u3001Cookie \u52a0\u5bc6) <code>api</code> (\u5305\u62ec\u201c\u8282\u6d41\u201d\u2014\u2014\u8bf7\u6c42\u9891\u7387\u9650\u5236) URL \u524d\u7f00 \u65e0 (\u60a8\u7684\u7f51\u7ad9\u6839\u76ee\u5f55) <code>/api/</code> (\u5728 <code>RouteServiceProvider</code> \u4e2d\u914d\u7f6e) \u8eab\u4efd\u9a8c\u8bc1 \u901a\u5e38\u901a\u8fc7\u4f1a\u8bdd (\u767b\u5f55/\u5bc6\u7801) \u901a\u5e38\u901a\u8fc7\u4ee4\u724c (Sanctum, Passport) <p>\u6211\u4eec\u4f7f\u7528 <code>routes/web.php</code> \u6765\u6784\u5efa\u4f9b\u771f\u4eba\u4f7f\u7528\u7684\u754c\u9762\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/5/#2","title":"2. \u7f51\u9875\u8d44\u6e90\u8def\u7531","text":"<p>\u7c7b\u4f3c\u4e8e <code>Route::apiResource</code>\uff0c\u7f51\u9875\u4e5f\u6709 <code>Route::resource</code>\u3002\u5b83\u4e3a\u5b8c\u6574\u7684 CRUD \u5468\u671f\u521b\u5efa\u8def\u7531\uff0c\u5305\u62ec\u663e\u793a\u521b\u5efa\u548c\u7f16\u8f91\u8868\u5355\u7684\u9875\u9762\u3002</p> <p>\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u8def\u7531\u96c6\uff0c\u901a\u8fc7 Web \u754c\u9762\u7ba1\u7406\u6211\u4eec\u7684\u884c\u661f\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u5728 <code>routes/web.php</code> \u4e2d\u521b\u5efa\u8def\u7531</p> <p>\u6ce8\u91ca\u6216\u5220\u9664 <code>/planets</code> \u7684\u65e7\u8def\u7531\uff0c\u5e76\u7528\u4e00\u884c\u4ee3\u7801\u66ff\u6362\u5b83\u4eec\uff1a</p> <pre><code>use App\\Http\\Controllers\\Web\\PlanetPageController;\n\n// Route::get('/planets', [PlanetPageController::class, 'index']);\n// Route::get('/planets/{planet}', [PlanetPageController::class, 'show']);\n\nRoute::resource('planets', PlanetPageController::class);\n</code></pre> <p>\u6b65\u9aa4 2\uff1a\u67e5\u770b\u5df2\u521b\u5efa\u7684\u5185\u5bb9 \u5728\u7ec8\u7aef\u4e2d\u6267\u884c\u547d\u4ee4 <code>php artisan route:list --except-vendor</code>\uff1a</p> <pre><code>+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| Method | URI       | Name                   | Action           | Middleware                                      |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n| GET|HEAD | planets                | planets.index          | ...\\PlanetPageController@index                    | web        |\n| POST   | planets                | planets.store          | ...\\PlanetPageController@store                    | web        |\n| GET|HEAD | planets/create         | planets.create         | ...\\PlanetPageController@create                   | web        |\n| GET|HEAD | planets/{planet}       | planets.show           | ...\\PlanetPageController@show                     | web        |\n| PUT|PATCH | planets/{planet}       | planets.update         | ...\\PlanetPageController@update                   | web        |\n| DELETE | planets/{planet}       | planets.destroy        | ...\\PlanetPageController@destroy                  | web        |\n| GET|HEAD | planets/{planet}/edit  | planets.edit           | ...\\PlanetPageController@edit                     | web        |\n+--------+-----------+------------------------+------------------+-------------------------------------------------+------------+\n</code></pre> <p><code>Route::resource</code> \u4e3a\u6211\u4eec\u521b\u5efa\u4e86 7 \u6761\u8def\u7531\uff0c\u5305\u62ec\uff1a</p> <ul> <li><code>planets.create</code> (GET <code>/planets/create</code>): \u5e26\u6709\u521b\u5efa\u8868\u5355\u7684\u9875\u9762\u3002</li> <li><code>planets.store</code> (POST <code>/planets</code>): \u5904\u7406\u6b64\u8868\u5355\u3002</li> <li><code>planets.edit</code> (GET <code>/planets/{planet}/edit</code>): \u5e26\u6709\u7f16\u8f91\u8868\u5355\u7684\u9875\u9762\u3002</li> <li><code>planets.update</code> (PUT/PATCH <code>/planets/{planet}</code>): \u5904\u7406\u7f16\u8f91\u8868\u5355\u3002</li> <li><code>planets.destroy</code> (DELETE <code>/planets/{planet}</code>): \u5220\u9664\u8d44\u6e90\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/5/#3","title":"3. \u547d\u540d\u8def\u7531\uff1a\u4fbf\u6377\u7684\u201c\u5b87\u5b99\u5750\u6807\u201d","text":"<p>\u8bf7\u6ce8\u610f <code>Name</code> \u5217\u3002Laravel \u81ea\u52a8\u4e3a\u6bcf\u6761\u8def\u7531\u5206\u914d\u4e86\u4e00\u4e2a\u552f\u4e00\u7684\u540d\u79f0\uff08\u4f8b\u5982 <code>planets.index</code>\uff09\u3002\u4f7f\u7528\u540d\u79f0\u800c\u4e0d\u662f\u786c\u7f16\u7801\u7684 URL \u662f\u4e00\u79cd\u6700\u4f73\u5b9e\u8df5\u3002</p> <p>\u4e3a\u4ec0\u4e48\uff1f \u5982\u679c\u60a8\u51b3\u5b9a\u5c06 URL \u4ece <code>/planets</code> \u66f4\u6539\u4e3a <code>/worlds</code>\uff0c\u60a8\u65e0\u9700\u5728\u6240\u6709\u6a21\u677f\u4e2d\u67e5\u627e\u5e76\u66f4\u6539\u6240\u6709\u94fe\u63a5\u3002\u60a8\u53ea\u9700\u5728\u4e00\u4e2a\u5730\u65b9\u2014\u2014\u8def\u7531\u6587\u4ef6\u4e2d\u8fdb\u884c\u66f4\u6539\uff0c\u800c\u540d\u79f0\u4fdd\u6301\u4e0d\u53d8\u3002</p> <p>\u5728 Blade \u4e2d\u7684\u4f7f\u7528\u793a\u4f8b\uff1a</p> <p>\u4ee5\u524d\u6211\u4eec\u8fd9\u6837\u5199\uff1a</p> <pre><code>&lt;a href=\"/planets/{{ $planet-&gt;id }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u5c06\u4f7f\u7528 <code>route()</code> \u52a9\u624b\u51fd\u6570\u8fd9\u6837\u5199\uff1a <pre><code>&lt;a href=\"{{ route('planets.show', ['planet' =&gt; $planet-&gt;id]) }}\"&gt;\u0423\u0437\u043d\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 &amp;rarr;&lt;/a&gt;\n</code></pre></p> <ul> <li><code>route('planets.show', ...)</code> \u2014 \u4e3a\u540d\u4e3a <code>planets.show</code> \u7684\u8def\u7531\u751f\u6210 URL\u3002</li> <li><code>['planet' =&gt; $planet-&gt;id]</code> \u2014 \u5c06\u6240\u9700\u7684\u53c2\u6570\u4f20\u9012\u5230 URL \u4e2d\u3002Laravel \u4f1a\u81ea\u52a8\u5c06 ID \u66ff\u6362\u5230 <code>{planet}</code> \u4e2d\u3002\u751a\u81f3\u53ef\u4ee5\u4f20\u9012\u6574\u4e2a\u6a21\u578b\uff1a<code>['planet' =&gt; $planet]</code>\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/5/#4","title":"4. \u5b9e\u73b0\u63a7\u5236\u5668\u4e2d\u7f3a\u5931\u7684\u65b9\u6cd5","text":"<p><code>Route::resource</code> \u521b\u5efa\u4e86\u8def\u7531\uff0c\u4f46 <code>PlanetPageController</code> \u4e2d\u76f8\u5e94\u7684\u65b9\u6cd5\u9700\u8981\u6211\u4eec\u81ea\u5df1\u521b\u5efa\u3002</p> <p>\u6253\u5f00 <code>app/Http/Controllers/Web/PlanetPageController.php</code> \u5e76\u6dfb\u52a0\u5b83\u4eec\u3002</p> <pre><code>&lt;?php\nuse Illuminate\\Http\\Request; // &lt;-- \u6dfb\u52a0\n\nclass PlanetPageController extends Controller\n{\n    // \u6211\u4eec\u5df2\u7ecf\u6709\u4e86 index() \u548c show()\n\n    /**\n     * \u663e\u793a\u521b\u5efa\u65b0\u884c\u661f\u7684\u8868\u5355\u3002\n     */\n    public function create()\n    {\n        return view('planets.create'); // \u53ea\u9700\u8fd4\u56de\u5e26\u6709\u8868\u5355\u7684\u89c6\u56fe\n    }\n\n    /**\n     * \u5c06\u65b0\u884c\u661f\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u3002\n     */\n    public function store(Request $request)\n    {\n        // \u9a8c\u8bc1\u8868\u5355\u6570\u636e\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets',\n            'solar_system' =&gt; 'required|string|max:100',\n            // ... \u5176\u4ed6\u89c4\u5219\n        ]);\n\n        Planet::create($validated);\n\n        // \u5c06\u7528\u6237\u91cd\u5b9a\u5411\u5230\u5e26\u6709\u6210\u529f\u6d88\u606f\u7684\u5217\u8868\u9875\u9762\n        return redirect()-&gt;route('planets.index')-&gt;with('success', '\u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0430!');\n    }\n\n    /**\n     * \u663e\u793a\u7f16\u8f91\u884c\u661f\u7684\u8868\u5355\u3002\n     */\n    public function edit(Planet $planet)\n    {\n        return view('planets.edit', ['planet' =&gt; $planet]);\n    }\n\n    /**\n     * \u66f4\u65b0\u6570\u636e\u5e93\u4e2d\u7684\u884c\u661f\u6570\u636e\u3002\n     */\n    public function update(Request $request, Planet $planet)\n    {\n        $validated = $request-&gt;validate([\n            'name' =&gt; 'required|string|max:255|unique:planets,name,' . $planet-&gt;id,\n            'solar_system' =&gt; 'required|string|max:100',\n        ]);\n\n        $planet-&gt;update($validated);\n\n        return redirect()-&gt;route('planets.show', $planet)-&gt;with('success', '\u0414\u0430\u043d\u043d\u044b\u0435 \u043e \u043f\u043b\u0430\u043d\u0435\u0442\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u044b!');\n    }\n\n    /**\n     * \u5220\u9664\u884c\u661f\u3002\n     */\n    public function destroy(Planet $planet)\n    {\n        $planet-&gt;delete();\n\n        return redirect()-&gt;route('planets.index')-&gt;with('success', '\u041f\u043b\u0430\u043d\u0435\u0442\u0430 \u0441\u043f\u0438\u0441\u0430\u043d\u0430.');\n    }\n}\n</code></pre> <ul> <li><code>redirect()-&gt;route(...)</code> \u2014 \u5c06\u7528\u6237\u91cd\u5b9a\u5411\u5230\u53e6\u4e00\u4e2a\u547d\u540d\u8def\u7531\u3002</li> <li><code>-&gt;with('success', '...')</code> \u2014 \u5728\u4f1a\u8bdd\u4e2d\u6dfb\u52a0\u201c\u95ea\u5b58\u6d88\u606f\u201d\uff0c\u8be5\u6d88\u606f\u5c06\u5728\u4e0b\u4e00\u9875\u4e0a\u4ec5\u53ef\u7528\u4e00\u6b21\u3002\u6211\u4eec\u53ef\u4ee5\u5728 Blade \u6a21\u677f\u4e2d\u663e\u793a\u5b83\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/5/#5","title":"5. \u8def\u7531\u5206\u7ec4","text":"<p>\u5982\u679c\u60a8\u6709\u8bb8\u591a\u5177\u6709\u5171\u540c\u7279\u5f81\u7684\u8def\u7531\uff08\u4f8b\u5982\uff0c\u5b83\u4eec\u90fd\u7528\u4e8e\u7ba1\u7406\u9762\u677f\uff0c\u5e76\u4e14\u5e94\u5177\u6709 <code>/admin</code> \u524d\u7f00\u548c\u7279\u6b8a\u7684\u4e2d\u95f4\u4ef6\uff09\uff0c\u5219\u53ef\u4ee5\u5bf9\u5b83\u4eec\u8fdb\u884c\u5206\u7ec4\u3002</p> <pre><code>&lt;?php\nRoute::middleware(['auth', 'admin'])-&gt;prefix('admin')-&gt;name('admin.')-&gt;group(function () {\n    // \u6b64\u7ec4\u5185\u7684\u6240\u6709\u8def\u7531\u5c06\u5177\u6709\uff1a\n    // 1. 'auth' \u548c 'admin' \u4e2d\u95f4\u4ef6\n    // 2. URL \u524d\u7f00 '/admin' (\u4f8b\u5982, /admin/planets)\n    // 3. \u540d\u79f0\u524d\u7f00 'admin.' (\u4f8b\u5982, admin.planets.index)\n\n    Route::resource('planets', PlanetPageController::class);\n    // Route::get('/dashboard', ...)-&gt;name('dashboard'); // -&gt; admin.dashboard\n});\n</code></pre>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/5/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u5c0f\u6d4b\u9a8c","text":"<p>1. \u5728 `routes/web.php` \u4e2d\uff0c\u54ea\u4e2a\u547d\u4ee4\u5c06\u4e3a Web \u754c\u9762\u521b\u5efa\u4e00\u5957\u5b8c\u6574\u7684 CRUD \u8def\u7531\uff1f</p>  a) Route::crud('planets', Controller::class)  b) Route::apiResource('planets', Controller::class)  c) Route::resource('planets', Controller::class) <p>2. \u4f7f\u7528\u547d\u540d\u8def\u7531\u7684\u4e3b\u8981\u4f18\u70b9\u662f\u4ec0\u4e48\uff1f</p>  a) \u5b83\u4eec\u6bd4\u76f4\u63a5 URL \u8fd0\u884c\u66f4\u5feb  b) \u5141\u8bb8\u8f7b\u677e\u66f4\u6539\u8def\u7531\u6587\u4ef6\u4e2d\u7684 URL\uff0c\u800c\u4e0d\u4f1a\u7834\u574f\u6a21\u677f\u4e2d\u7684\u94fe\u63a5  c) \u5b83\u4eec\u81ea\u52a8\u53d7\u5230 CSRF \u4fdd\u62a4 <p>3. \u5bf9\u4e8e `Route::resource('articles', ...)` \u4e2d\u7684 `create()` \u65b9\u6cd5\uff0c\u5c06\u751f\u6210\u54ea\u4e2a\u8def\u7531\uff1f</p>  a) GET `/articles/new`  b) GET `/articles/create`  c) POST `/articles/create` <p>4. \u4ee3\u7801 `redirect()-&gt;route('home')-&gt;with('status', 'OK')` \u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f</p>  a) \u5728 URL `/home` \u8fd4\u56de\u5e26\u6709 'status' =&gt; 'OK' \u7684 JSON  b) \u91cd\u5b9a\u5411\u5230\u540d\u4e3a `home` \u7684\u8def\u7531\uff0c\u5e76\u5411\u4f1a\u8bdd\u6dfb\u52a0\u4e00\u6b21\u6027\u6d88\u606f 'status'  c) \u663e\u793a\u5e26\u6709\u53d8\u91cf `$status` \u7684 `home.blade.php` \u89c6\u56fe <p>5. `Route::prefix('dashboard')` \u7684\u7528\u9014\u662f\u4ec0\u4e48\uff1f</p>  a) \u7528\u4e8e\u4e3a\u7ec4\u5185\u7684\u6240\u6709 URL \u6dfb\u52a0\u524d\u7f00  b) \u7528\u4e8e\u4e3a\u7ec4\u5185\u7684\u6240\u6709\u8def\u7531\u540d\u79f0\u6dfb\u52a0\u524d\u7f00  c) \u7528\u4e8e\u5e94\u7528 `dashboard` \u4e2d\u95f4\u4ef6 \u68c0\u67e5 <p>for (const [question, correctAnswer] of Object.entries(correctAnswers)) {       const questionDiv = form.querySelector(<code>input[name=\"${question}\"]</code>).closest('.question');       const labels = questionDiv.querySelectorAll('label');       labels.forEach(l =&gt; {           l.style.color = 'inherit';           l.style.fontWeight = 'normal';           l.style.border = 'none';       });</p> <pre><code>  const userAnswer = form.elements[question] ? form.elements[question].value : undefined;\n\n  if (userAnswer) {\n    const selectedLabel = form.querySelector(`input[name=\"${question}\"][value=\"${userAnswer}\"]`).parentElement;\n    if (userAnswer === correctAnswer) {\n      score++;\n      selectedLabel.style.fontWeight = 'bold';\n      resultsHTML += `&lt;li&gt;\u95ee\u9898 ${question.slice(1)}: &lt;span style=\"color:green;\"&gt;\u6b63\u786e\uff01&lt;/span&gt;&lt;/li&gt;`;\n    } else {\n      selectedLabel.style.fontWeight = 'bold';\n      const correctLabel = form.querySelector(`input[name=\"${question}\"][value=\"${correctAnswer}\"]`).parentElement;\n      correctLabel.style.fontWeight = 'bold';\n      resultsHTML += `&lt;li&gt;\u95ee\u9898 ${question.slice(1)}: &lt;span style=\"color:red;\"&gt;\u9519\u8bef\u3002&lt;/span&gt; \u6b63\u786e\u7b54\u6848: &lt;b&gt;${correctAnswer.toUpperCase()}&lt;/b&gt;&lt;/li&gt;`;\n    }\n  } else {\n    resultsHTML += `&lt;li&gt;\u95ee\u9898 ${question.slice(1)}: &lt;span style=\"color:orange;\"&gt;\u672a\u4f5c\u7b54\u3002&lt;/span&gt;&lt;/li&gt;`;\n  }\n}\n\nresultsHTML += `&lt;/ul&gt;&lt;p&gt;&lt;b&gt;\u60a8\u7684\u5206\u6570\uff1a${score} / ${Object.keys(correctAnswers).length}&lt;/b&gt;&lt;/p&gt;`;\nresultsContainer.innerHTML = resultsHTML;\nresultsContainer.style.display = 'block';\n</code></pre> <p>} </p> <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u638c\u63e1\u5728 Laravel \u4e2d\u7ec4\u7ec7 Web \u8def\u7531\u7684\u7ed3\u6784\u5316\u548c\u4e13\u4e1a\u65b9\u6cd5\u3002\u73b0\u5728\u60a8\u80fd\u591f\uff1a</p> <ul> <li>\u533a\u5206 <code>web</code> \u548c <code>api</code> \u8def\u7531\u53ca\u5176\u7528\u9014\u3002</li> <li>\u4f7f\u7528 <code>Route::resource</code> \u5feb\u901f\u751f\u6210\u6807\u51c6 CRUD \u8def\u7531\u3002</li> <li>\u5e94\u7528\u547d\u540d\u8def\u7531\u6765\u521b\u5efa\u7075\u6d3b\u4e14\u53ef\u7ef4\u62a4\u7684\u4ee3\u7801\u3002</li> <li>\u5728\u63a7\u5236\u5668\u4e2d\u521b\u5efa\u5b8c\u6574\u7684 CRUD \u64cd\u4f5c\uff0c\u5305\u62ec\u9a8c\u8bc1\u548c\u91cd\u5b9a\u5411\u3002</li> <li>\u5206\u7ec4\u8def\u7531\u4ee5\u5e94\u7528\u901a\u7528\u89c4\u5219\u3002</li> </ul> <p>\u60a8\u201c\u98de\u8239\u201d\u7684\u5bfc\u822a\u7cfb\u7edf\u73b0\u5728\u5df2\u5177\u5907\u5bb9\u9519\u6027\uff0c\u5e76\u51c6\u5907\u597d\u8fdb\u884c\u6269\u5c55\u3002 \u5728\u672c\u8282\u7684\u6700\u540e\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u6574\u5408\u6240\u6709\u83b7\u5f97\u7684\u77e5\u8bc6\uff0c\u5e76\u5728\u6211\u4eec\u7684 Blade \u9875\u9762\u4e0a\u663e\u793a\u901a\u8fc7 Fetch \u83b7\u53d6\u7684\u884c\u661f\u6570\u636e\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/6/","title":"\u7b2c5.6\u7ae0\uff1a\u901a\u8fc7 Blade + Fetch \u663e\u793a\u6570\u636e","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 50\u5206\u949f</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/6/#1","title":"1. \u6df7\u5408\u65b9\u6cd5\uff1a\u4e24\u5168\u5176\u7f8e","text":"<p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u6784\u5efa\u9875\u9762\uff1a</p> <ol> <li>\u5b8c\u6574\u670d\u52a1\u5668\u7aef\u6e32\u67d3 (SSR)\uff1a Laravel \u751f\u6210\u6240\u6709 HTML\uff0c\u5305\u62ec\u884c\u661f\u5217\u8868\u3002\u5bf9\u4e8e\u4efb\u4f55\u66f4\u65b0\uff08\u5220\u9664\u3001\u6dfb\u52a0\uff09\uff0c\u9875\u9762\u90fd\u4f1a\u5b8c\u5168\u91cd\u65b0\u52a0\u8f7d\u3002</li> <li>\u5b8c\u6574\u5ba2\u6237\u7aef\u6e32\u67d3 (CSR)\uff1a Laravel \u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684 HTML\u201c\u5916\u58f3\u201d\uff0c\u7136\u540e JavaScript \u4ece API \u8bf7\u6c42\u6240\u6709\u6570\u636e\u5e76\u5728\u5ba2\u6237\u7aef\u6e32\u67d3\u5b83\u4eec\u3002\uff08\u8fd9\u662f\u5355\u9875\u5e94\u7528\u7a0b\u5e8f - SPA \u7684\u65b9\u6cd5\uff09\u3002</li> </ol> <p>\u6211\u4eec\u7684\u9009\u62e9\u662f\u6df7\u5408\u65b9\u6cd5\uff1a</p> <ul> <li>\u9996\u6b21\u52a0\u8f7d (SSR)\uff1a Laravel \u7acb\u5373\u8fd4\u56de\u5e26\u6709\u9884\u5148\u51c6\u5907\u597d\u7684\u884c\u661f\u5217\u8868\u7684\u9875\u9762\u3002\u8fd9\u901f\u5ea6\u5feb\uff0c\u5bf9 SEO \u53cb\u597d\u3002\u7528\u6237\u7acb\u5373\u770b\u5230\u5185\u5bb9\u3002</li> <li>\u540e\u7eed\u64cd\u4f5c (CSR)\uff1a JavaScript \u6355\u83b7\u7528\u6237\u64cd\u4f5c\uff08\u6309\u94ae\u70b9\u51fb\uff09\u5e76\u4e0e API \u4ea4\u4e92\uff0c\u4ec5\u66f4\u65b0\u9875\u9762\u6240\u9700\u90e8\u5206\uff0c\u800c\u65e0\u9700\u5b8c\u5168\u91cd\u65b0\u52a0\u8f7d\u3002</li> </ul> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a</p> <p>\u5f53\u4f60\u8fdb\u5165\u8230\u6865\u65f6\uff0c\u6307\u6325\u4e2d\u5fc3\uff08SSR\uff09\u7acb\u5373\u7ed9\u4f60\u4e00\u5f20\u4e3b\u5bfc\u822a\u56fe\u3002\u5b83\u5df2\u7ecf\u5728\u4f60\u624b\u4e2d\uff0c\u65e0\u9700\u7b49\u5f85\u3002\u4f46\u968f\u540e\u4f60\u4f1a\u5728\u4f60\u7684\u5e73\u677f\u7535\u8111\u4e0a\u6fc0\u6d3b\u201c\u5b9e\u65f6\u6a21\u5f0f\u201d\uff08CSR\uff09\uff0c\u5b83\u5c06\u5f00\u59cb\u4ece\u536b\u661f\u63a5\u6536\u5b9e\u65f6\u66f4\u65b0\uff0c\u91cd\u65b0\u7ed8\u5236\u4f60\u5730\u56fe\u4e0a\u7684\u7269\u4f53\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/6/#2-1","title":"2. \u6b65\u9aa4 1\uff1a\u51c6\u5907\u9875\u9762","text":"<p>\u6211\u4eec\u5c06\u4f7f\u7528\u6211\u4eec\u7684\u884c\u661f\u5217\u8868\u9875\u9762 <code>resources/views/planets/index.blade.php</code>\u3002\u5b83\u5df2\u7ecf\u80fd\u591f\u663e\u793a\u4ece\u63a7\u5236\u5668\u4f20\u9012\u7684\u6570\u636e\u3002\u73b0\u5728\u6211\u4eec\u5c06\u5728\u5176\u4e0a\u6dfb\u52a0\u901a\u8fc7 JS \u5de5\u4f5c\u63a7\u4ef6\u3002</p> <p>\u6dfb\u52a0\u201c\u5237\u65b0\u5217\u8868\u201d\u6309\u94ae\u548c\u901a\u77e5\u5bb9\u5668\uff1a <pre><code>    &lt;div class=\"controls\"&gt;\n        &lt;h2&gt;\u6240\u6709\u5df2\u77e5\u884c\u661f\u5217\u8868&lt;/h2&gt;\n        &lt;button id=\"refresh-btn\"&gt;\u901a\u8fc7 API \u5237\u65b0&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div id=\"notification-area\" class=\"notification\"&gt;&lt;/div&gt;\n    &lt;hr&gt;\n    {{-- \u8fd9\u4e2a div \u5c06\u4f5c\u4e3a\u6211\u4eec\u52a8\u6001\u66f4\u65b0\u7684\u5bb9\u5668 --}}\n    &lt;div id=\"planet-list-container\" class=\"planet-list\"&gt;\n        {{-- \u5305\u542b\u201c\u5b50\u201d\u89c6\u56fe\uff0c\u5b83\u6e32\u67d3\u521d\u59cb\u5217\u8868 --}}\n        @include('planets.partials.list', ['planets' =&gt; $planets])\n    &lt;/div&gt;\n</code></pre></p> <p>\u8bf7\u6ce8\u610f <code>@include('planets.partials.list', ...)</code>\u3002\u6211\u4eec\u5c06\u5217\u8868\u663e\u793a\u903b\u8f91\u63d0\u53d6\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u53ef\u91cd\u7528\u6587\u4ef6\u4e2d\u3002</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/6/#2-partial","title":"\u6b65\u9aa4 2\uff1a\u521b\u5efa\u53ef\u91cd\u7528\u201c\u5c40\u90e8\u201d\u89c6\u56fe (Partial)","text":"<p>\u5c06\u91cd\u590d\u7684\u90e8\u5206\u63d0\u53d6\u5230\u5355\u72ec\u7684\u6587\u4ef6\u4e2d\u662f\u4e00\u4e2a\u597d\u4e60\u60ef\u3002</p> <p>\u521b\u5efa\u6587\u4ef6 <code>resources/views/planets/partials/list.blade.php</code>\uff1a</p> <pre><code>@forelse($planets as $planet)\n    &lt;div class=\"planet-card\" id=\"planet-card-{{ $planet-&gt;id }}\"&gt;\n        &lt;h3&gt;{{ $planet-&gt;name }}&lt;/h3&gt;\n        &lt;p&gt;\u592a\u9633\u7cfb\uff1a{{ $planet-&gt;solar_system }}&lt;/p&gt;\n        &lt;p&gt;\u76f4\u5f84\uff1a{{ number_format($planet-&gt;size_km, 0, '.', ' ') }} \u516c\u91cc&lt;/p&gt;\n        &lt;a href=\"{{ route('planets.show', $planet) }}\"&gt;\u4e86\u89e3\u66f4\u591a &amp;rarr;&lt;/a&gt;\n        &lt;button class=\"delete-btn\" data-id=\"{{ $planet-&gt;id }}\" data-url=\"{{ route('api.planets.destroy', $planet) }}\"&gt;\n            \u9000\u5f79\n        &lt;/button&gt;\n    &lt;/div&gt;\n@empty\n    &lt;p&gt;\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u884c\u661f\u3002&lt;/p&gt;\n@endforelse\n</code></pre> <ul> <li>\u91cd\u8981\uff1a \u8bf7\u6ce8\u610f\uff0c\u5220\u9664\u6309\u94ae\u7684 URL \u73b0\u5728\u662f\u4e3a API \u8def\u7531\u751f\u6210\u7684\uff1a<code>route('api.planets.destroy', $planet)</code>\u3002\u4e3a\u6b64\uff0c\u8bf7\u786e\u4fdd\u5728 <code>routes/api.php</code> \u4e2d\u60a8\u6709\u4e00\u4e2a\u547d\u540d\u8d44\u6e90\uff1a<code>Route::apiResource('planets', ...)-&gt;name('api.planets');</code></li> </ul>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/6/#3-javascript","title":"\u6b65\u9aa4 3\uff1a\u7f16\u5199\u7528\u4e8e\u52a8\u6001\u66f4\u65b0\u7684 JavaScript","text":"<p>\u73b0\u5728\u662f\u6700\u6709\u8da3\u7684\u90e8\u5206\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a JavaScript\uff0c\u5b83\u5c06\u901a\u8fc7\u6309\u94ae\u5411 API \u8bf7\u6c42\u6700\u65b0\u7684\u884c\u661f\u5217\u8868\u5e76\u91cd\u65b0\u6e32\u67d3\u5b83\u3002</p> <p>\u521b\u5efa\u6587\u4ef6 <code>public/js/planet-manager.js</code> \u5e76\u5c06\u5176\u5f15\u5165\u5230 <code>layouts/app.blade.php</code> \u4e2d\u3002</p> <pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {\n    const refreshBtn = document.getElementById('refresh-btn');\n    const planetListContainer = document.getElementById('planet-list-container');\n    const notificationArea = document.getElementById('notification-area');\n\n    // \u7528\u4e8e\u663e\u793a\u901a\u77e5\u7684\u51fd\u6570\n    function showNotification(message, isError = false) {\n        notificationArea.textContent = message;\n        notificationArea.className = isError ? 'notification error' : 'notification success';\n        setTimeout(() =&gt; {\n            notificationArea.textContent = '';\n            notificationArea.className = 'notification';\n        }, 3000);\n    }\n\n    // \u7528\u4e8e\u6e32\u67d3\u5355\u4e2a\u884c\u661f\u5361\u7684\u51fd\u6570\n    function createPlanetCardHtml(planet) {\n        // \u91cd\u8981\uff1a\u6211\u4eec\u751f\u6210\u4e0e\u6211\u4eec\u7684 partial \u89c6\u56fe\u76f8\u540c\u7684 HTML\n        return `\n            &lt;div class=\"planet-card\" id=\"planet-card-${planet.id}\"&gt;\n                &lt;h3&gt;${planet.name}&lt;/h3&gt;\n                &lt;p&gt;\u592a\u9633\u7cfb\uff1a${planet.solar_system}&lt;/p&gt;\n                &lt;p&gt;\u76f4\u5f84\uff1a${new Intl.NumberFormat().format(planet.size_km)} \u516c\u91cc&lt;/p&gt;\n                &lt;a href=\"/planets/${planet.id}\"&gt;\u4e86\u89e3\u66f4\u591a &amp;rarr;&lt;/a&gt;\n                &lt;button class=\"delete-btn\" data-id=\"${planet.id}\" data-url=\"/api/planets/${planet.id}\"&gt;\n                    \u9000\u5f79 (JS)\n                &lt;/button&gt;\n            &lt;/div&gt;\n        `;\n    }\n\n    // \u7528\u4e8e\u8bf7\u6c42\u548c\u91cd\u65b0\u6e32\u67d3\u884c\u661f\u5217\u8868\u7684\u51fd\u6570\n    async function fetchAndRenderPlanets() {\n        showNotification('\u6b63\u5728\u4ece\u8f68\u9053\u536b\u661f\u8bf7\u6c42\u6700\u65b0\u6570\u636e...');\n        try {\n            const response = await fetch('/api/planets', {\n                headers: { 'Accept': 'application/json' }\n            });\n\n            if (!response.ok) {\n                throw new Error('\u83b7\u53d6\u6570\u636e\u65f6\u53d1\u751f\u7f51\u7edc\u9519\u8bef\u3002');\n            }\n\n            const planets = await response.json(); // Laravel \u9ed8\u8ba4\u4f1a\u4e3a\u5206\u9875\u8d44\u6e90\u8fd4\u56de { data: [...] }\n\n            planetListContainer.innerHTML = ''; // \u6e05\u9664\u65e7\u5217\u8868\n\n            if (planets.data.length === 0) {\n                planetListContainer.innerHTML = '&lt;p&gt;\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u884c\u661f\u3002&lt;/p&gt;';\n            } else {\n                planets.data.forEach(planet =&gt; {\n                    const cardHtml = createPlanetCardHtml(planet);\n                    planetListContainer.innerHTML += cardHtml;\n                });\n            }\n            showNotification('\u6570\u636e\u5df2\u6210\u529f\u66f4\u65b0\uff01', false);\n        } catch (error) {\n            console.error('\u66f4\u65b0\u884c\u661f\u5217\u8868\u65f6\u51fa\u9519\uff1a', error);\n            showNotification(error.message, true);\n        }\n    }\n\n    // \u4e3a\u6309\u94ae\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c\u5668\n    if (refreshBtn) {\n        refreshBtn.addEventListener('click', fetchAndRenderPlanets);\n    }\n\n    // \u53ef\u4ee5\u5c06\u4e0a\u4e00\u7ae0\u7684\u5220\u9664\u903b\u8f91\u79fb\u5230\u8fd9\u91cc\uff0c\n    // \u4ee5\u4fbf\u6240\u6709 JS \u90fd\u96c6\u4e2d\u5728\u4e00\u4e2a\u5730\u65b9\u3002\n});\n</code></pre>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/6/#3","title":"3. \u6700\u7ec8\u68c0\u67e5","text":"<ol> <li>\u542f\u52a8\u670d\u52a1\u5668\uff08<code>php artisan serve</code> \u6216\u786e\u4fdd Herd \u6b63\u5728\u8fd0\u884c\uff09\u3002</li> <li>\u5982\u679c\u9700\u8981\uff0c\u91cd\u65b0\u521b\u5efa\u6570\u636e\u5e93\uff1a<code>php artisan migrate:fresh --seed</code>\u3002</li> <li>\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 <code>/planets</code> \u9875\u9762\u3002<ul> <li>\u60a8\u5e94\u8be5\u7acb\u5373\u770b\u5230\u670d\u52a1\u5668\u751f\u6210\u7684\u884c\u661f\u5217\u8868\u3002</li> </ul> </li> <li>\u70b9\u51fb\u201c\u901a\u8fc7 API \u5237\u65b0\u201d\u6309\u94ae\u3002<ul> <li>\u60a8\u5c06\u770b\u5230\u52a0\u8f7d\u901a\u77e5\u3002</li> <li>\u5217\u8868\u5e94\u8be5\u4f1a\u77ed\u6682\u6d88\u5931\u5e76\u91cd\u65b0\u51fa\u73b0\uff0c\u4f46\u8fd9\u6b21\u5b83\u5c06\u662f\u57fa\u4e8e\u4ece API \u83b7\u53d6\u7684\u6570\u636e\u7531 JavaScript \u751f\u6210\u7684\u3002</li> </ul> </li> </ol> <p>\u60a8\u5df2\u6210\u529f\u5b9e\u73b0\u6df7\u5408\u6a21\u578b\uff01</p>"},{"location":"zh/%E7%AC%AC5%E7%AB%A0%20-%20Laravel%E4%B8%8E%E5%89%8D%E7%AB%AF%E9%9B%86%E6%88%90/6/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u5c0f\u6d4b\u9a8c","text":"<p>1. \u4ec0\u4e48\u662f\u6df7\u5408\u6e32\u67d3\u65b9\u6cd5\uff08SSR + CSR\uff09\uff1f</p>  a) \u9996\u5148\u6e32\u67d3\u4e00\u4e2a\u7a7a\u9875\u9762\uff0c\u7136\u540e JS \u52a0\u8f7d\u6240\u6709\u5185\u5bb9  b) \u670d\u52a1\u5668\u8fd4\u56de\u4e00\u4e2a\u5b8c\u5168\u51c6\u5907\u597d\u7684\u9875\u9762\uff0c\u5e76\u4e14\u5b83\u5728\u5ba2\u6237\u7aef\u6c38\u4e0d\u6539\u53d8  c) \u670d\u52a1\u5668\u8fd4\u56de\u4e00\u4e2a\u51c6\u5907\u597d\u7684\u9875\u9762\u4ee5\u5b9e\u73b0\u5feb\u901f\u9996\u6b21\u52a0\u8f7d\uff0c\u540e\u7eed\u66f4\u65b0\u901a\u8fc7 JS \u5728\u5ba2\u6237\u7aef\u8fdb\u884c <p>2. \u521d\u59cb\u670d\u52a1\u5668\u7aef\u6e32\u67d3 (SSR) \u7684\u4e3b\u8981\u4f18\u70b9\u662f\u4ec0\u4e48\uff1f</p>  a) \u51cf\u5c11\u670d\u52a1\u5668\u8d1f\u8f7d  b) \u4e3a\u7528\u6237\u5feb\u901f\u9996\u6b21\u6e32\u67d3\u5185\u5bb9\u4ee5\u53ca\u826f\u597d\u7684 SEO \u7d22\u5f15  c) \u7b80\u5316 JavaScript \u4ee3\u7801 <p>3. \u793a\u4f8b\u4e2d\u4e3a\u4ec0\u4e48\u4f7f\u7528 `@include('planets.partials.list')`\uff1f</p>  a) \u8fd9\u662f Blade \u5faa\u73af\u7684\u8981\u6c42  b) \u4e3a\u4e86\u4ee3\u7801\u91cd\u7528\u548c\u5206\u79bb\u5217\u8868\u663e\u793a\u903b\u8f91  c) \u7528\u4e8e\u5f02\u6b65\u52a0\u8f7d\u9875\u9762\u7684\u4e00\u90e8\u5206 <p>4. \u5728 JavaScript \u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u590d\u5236\u4e86\u5361\u7247\u7684 HTML \u7ed3\u6784\u3002\u6709\u4ec0\u4e48\u66f4\u9ad8\u7ea7\u7684\u65b9\u6cd5\u53ef\u4ee5\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff1f</p>  a) \u4e0d\u5411 API \u8bf7\u6c42 JSON\uff0c\u800c\u662f\u8bf7\u6c42\u5df2\u6e32\u67d3\u597d\u7684\u5355\u4e2a\u5361\u7247 HTML  b) \u4f7f\u7528 JavaScript \u6a21\u677f\u5f15\u64ce\uff08\u5982 Mustache, Handlebars\uff09\u6216\u6846\u67b6\uff08Vue, React\uff09  c) \u4e24\u4e2a\u9009\u9879\u90fd\u6b63\u786e <p>5. \u4e3a\u4ec0\u4e48 API (`/api/planets`) \u548c JavaScript \u4ee3\u7801 (`createPlanetCardHtml`) \u751f\u6210\u4e00\u81f4\u7684\u6570\u636e/HTML \u5f88\u91cd\u8981\uff1f</p>  a) \u5426\u5219\u7528\u6237\u5728\u901a\u8fc7 API \u66f4\u65b0\u65f6\u4f1a\u770b\u5230\u754c\u9762\u201c\u8df3\u52a8\u201d\u6216\u6539\u53d8  b) \u8fd9\u662f Fetch API \u89c4\u8303\u7684\u8981\u6c42  c) \u5426\u5219 Laravel \u5c06\u8fd4\u56de 500 \u9519\u8bef \u68c0\u67e5 <p>\ud83d\ude80 \u606d\u559c\u60a8\u5b8c\u6210\u7b2c5\u7ae0\uff01</p> <p>\u60a8\u5df2\u7ecf\u4ece Blade \u57fa\u7840\u77e5\u8bc6\u5b66\u5230\u4e86\u521b\u5efa\u4ea4\u4e92\u5f0f\u6df7\u5408\u9875\u9762\u7684\u5de8\u5927\u8fdb\u6b65\u3002\u60a8\u5b66\u4f1a\u4e86\uff1a</p> <ul> <li>\u521b\u5efa\u548c\u4f7f\u7528 Blade \u6a21\u677f\u548c\u5e03\u5c40\u3002</li> <li>\u7ec4\u7ec7\u7528\u4e8e CRUD \u64cd\u4f5c\u7684 Web \u8def\u7531\u548c\u63a7\u5236\u5668\u3002</li> <li>\u4f7f\u7528 CSRF \u4ee4\u724c\u4fdd\u62a4 Web \u8868\u5355\u548c AJAX \u8bf7\u6c42\u3002</li> <li>\u96c6\u6210 JavaScript \u4ee5\u5728\u4e0d\u91cd\u65b0\u52a0\u8f7d\u9875\u9762\u7684\u60c5\u51b5\u4e0b\u4e0e API \u8fdb\u884c\u52a8\u6001\u4ea4\u4e92\u3002</li> </ul> <p>\u60a8\u7684\u98de\u884c\u63a7\u5236\u4e2d\u5fc3\u5df2\u5b8c\u5168\u529f\u80fd\u5316\u3001\u5b89\u5168\u4e14\u4ea4\u4e92\u6027\u5f3a\u3002 \u60a8\u5df2\u51c6\u5907\u597d\u8fdb\u5165\u4e0b\u4e00\u4e2a\u91cd\u8981\u9636\u6bb5 \u2014 \u5c06\u6b64\u65b9\u6cd5\u4e0e\u5176\u4ed6\u6846\u67b6\u8fdb\u884c\u6bd4\u8f83\uff0c\u5e76\u5b66\u4e60\u751f\u4ea7\u73af\u5883\u7684\u6700\u4f73\u5b9e\u8df5\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/1/","title":"\u7b2c6.1\u7ae0\uff1a\u5c06FastAPI\u4e0e\u524d\u7aef\u8fde\u63a5","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 30\u5206\u949f</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/1/#1","title":"1. \u56de\u5f52\u201c\u8d85\u5149\u901f\u5f15\u64ce\u201d\uff1a\u534f\u8bae\u6bd4\u8f83","text":"<p>\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\uff08\u524d\u7aef\uff09\u4e0e\u201c\u56fd\u9645\u7a7a\u95f4\u7ad9\u201d\uff08Laravel API\uff09\u6210\u529f\u5bf9\u63a5\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u56de\u5230\u6211\u4eec\u7684\u8d85\u5149\u901f\u6218\u6597\u673a\uff08FastAPI\uff09\uff0c\u5e76\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002</p> <p>\u672c\u7ae0\u7684\u76ee\u6807\u4e0d\u4ec5\u4ec5\u662f\u91cd\u590d\u64cd\u4f5c\uff0c\u800c\u662f\u6bd4\u8f83\u4e24\u79cd\u65b9\u6cd5\u3002\u8fd9\u5c31\u50cf\u540c\u4e00\u8258\u9f99\u98de\u8239\uff0c\u5148\u4e0e\u56fd\u9645\u7a7a\u95f4\u7ad9\u5bf9\u63a5\uff0c\u7136\u540e\u4e0e\u4e2d\u56fd\u7a7a\u95f4\u7ad9\u201c\u5929\u5bab\u201d\u5bf9\u63a5\u3002\u5bf9\u63a5\u63a5\u53e3\u76f8\u540c\uff08REST\uff09\uff0c\u4f46\u5728\u7a0b\u5e8f\u548c\u7aef\u53e3\u4f4d\u7f6e\u4e0a\u53ef\u80fd\u4f1a\u6709\u7ec6\u5fae\u5dee\u522b\u3002</p> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a</p> <p>\u8fc7\u7a0b\u76f8\u540c\uff1a\u9760\u8fd1\u3001\u5bf9\u9f50\u3001\u5bf9\u63a5\u3002\u4f46\u5bf9\u4e8e\u201c\u56fd\u9645\u7a7a\u95f4\u7ad9\u201d\uff0c\u9700\u8981\u4f7f\u7528 <code>/api/planets</code> \u7aef\u53e3\uff0c\u800c\u5bf9\u4e8e\u201c\u5929\u5bab\u201d\uff0c\u5219\u9700\u8981\u4f7f\u7528 <code>/spaceships</code> \u7aef\u53e3\u3002\u6211\u4eec\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u7684\u64cd\u4f5c\u5458\u5fc5\u987b\u4e86\u89e3\u8fd9\u4e9b\u7ec6\u8282\uff0c\u624d\u80fd\u786e\u4fdd\u4efb\u52a1\u6210\u529f\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/1/#2-fastapi","title":"2. \u51c6\u5907\u201c\u6218\u6597\u673a\u201d\uff08FastAPI\uff09\u8fdb\u884c\u5bf9\u63a5","text":"<p>\u6211\u4eec\u5df2\u5728\u7b2c4.2\u7ae0\u4e2d\u5b8c\u6210\u6b64\u64cd\u4f5c\uff0c\u4f46\u8ba9\u6211\u4eec\u786e\u4fdd\u4e00\u5207\u5c31\u7eea\u3002</p> <p>\u6b65\u9aa41\uff1a\u542f\u52a8FastAPI\u670d\u52a1\u5668</p> <ol> <li>\u5982\u679cLaravel\u670d\u52a1\u5668\u6b63\u5728\u8fd0\u884c\uff0c\u8bf7\u5c06\u5176\u505c\u6b62\uff08\u4ee5\u907f\u514d\u7aef\u53e3\u51b2\u7a81\uff09\u3002</li> <li>\u5728\u4f60\u7684FastAPI\u9879\u76ee\u6587\u4ef6\u5939\u4e2d\u6253\u5f00\u7ec8\u7aef\u3002</li> <li> <p>\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff1a</p> <ul> <li>Windows\uff1a <code>.\\venv\\Scripts\\Activate.ps1</code></li> <li>macOS / Linux\uff1a <code>source venv/bin/activate</code></li> </ul> </li> <li> <p>\u542f\u52a8\u670d\u52a1\u5668\uff1a     <pre><code>uvicorn main:app --reload\n</code></pre>     \u670d\u52a1\u5668\u5c06\u901a\u8fc7 <code>http://127.0.0.1:8000</code> \u5730\u5740\u8bbf\u95ee\u3002</p> </li> </ol> <p>\u6b65\u9aa42\uff1a\u68c0\u67e5 <code>main.py</code> \u4e2d\u7684CORS\u8bbe\u7f6e</p> <p>\u786e\u4fdd\u4f60\u7684FastAPI\u9879\u76ee\u4e2d\u914d\u7f6e\u4e86\u6211\u4eec\u4e4b\u524d\u6dfb\u52a0\u7684 <code>CORSMiddleware</code>\u3002\u5b83\u5e94\u8be5\u5141\u8bb8\u6765\u81ea\u524d\u7aef\u5730\u5740\u7684\u8bf7\u6c42\u3002 <pre><code># main.py\nfrom fastapi.middleware.cors import CORSMiddleware\n\n# ...\n\norigins = [\n    \"http://127.0.0.1:5500\", # Live Server\u5730\u5740\n    \"null\", # \u7528\u4e8e file:///\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n# ...\n</code></pre> \u5982\u679c\u4e00\u5207\u5c31\u7eea\uff0c\u4f60\u7684FastAPI\u670d\u52a1\u5668\u5df2\u5b8c\u5168\u51c6\u5907\u597d\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/1/#3-fastapi","title":"3. \u5c06\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u7684\u201c\u5929\u7ebf\u201d\u91cd\u65b0\u6307\u5411FastAPI","text":"<p>\u73b0\u5728\u6700\u6709\u8da3\u7684\u90e8\u5206\u6765\u4e86\u2014\u2014\u6211\u4eec\u9700\u8981\u5bf9JavaScript\u8fdb\u884c\u6700\u5c0f\u7684\u66f4\u6539\uff0c\u4f7f\u5176\u518d\u6b21\u4e0eFastAPI\u534f\u540c\u5de5\u4f5c\u3002</p> <p>\u6b65\u9aa41\uff1a\u66f4\u6539\u57fa\u7840URL</p> <p>\u6253\u5f00 <code>api.js</code> \u5e76\u5c06 <code>API_BASE_URL</code> \u6062\u590d\u4e3a\u5176\u521d\u59cb\u503c\u3002 <pre><code>// api.js\n\n// \u6307\u5b9a\u6211\u4eec\u7684FastAPI API\u7684URL\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // &lt;-- \u4e0d\u5e26 /api\uff01\n\n// ... apiRequest \u7684\u5176\u4f59\u4ee3\u7801 ...\n</code></pre></p> <p>\u6b65\u9aa42\uff1a\u9002\u5e94FastAPI\u7684\u54cd\u5e94\u7ed3\u6784</p> <p>\u56de\u60f3\u4e00\u4e0b\uff0c\u6211\u4eec\u7684FastAPI\u4e2d\u7684 <code>GET /spaceships</code> \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u7b80\u5355\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5e26\u5206\u9875\u7684\u5bf9\u8c61\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u5c06 <code>fetchAndDisplayFleet</code> \u4ee3\u7801\u6062\u590d\u5230\u5176\u539f\u59cb\u72b6\u6001\u3002</p> <p>\u4fee\u6539 <code>app.js</code> \u4e2d\u7684 <code>fetchAndDisplayFleet</code> \u51fd\u6570\uff1a <pre><code>// app.js\n\nasync function fetchAndDisplayFleet() {\n    try {\n        fleetListContainer.innerHTML = '&lt;p&gt;\u6b63\u5728\u4eceFastAPI\u52a0\u8f7d\u9065\u6d4b\u6570\u636e...&lt;/p&gt;';\n        const ships = await apiRequest('/spaceships'); // &lt;-- \u8bf7\u6c42 /spaceships\n\n        // \u5728FastAPI\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u7b80\u5355\u6570\u7ec4\uff0c\u56e0\u6b64\u4e0d\u9700\u8981 .data \u952e\uff01\n\n        fleetListContainer.innerHTML = '';\n        if (ships.length === 0) {\n            fleetListContainer.innerHTML = '&lt;p&gt;\u6ce8\u518c\u8868\u4e2d\u6ca1\u6709\u8bbe\u5907\u3002&lt;/p&gt;';\n            return;\n        }\n\n        ships.forEach(ship =&gt; {\n            // \u6062\u590d\u6211\u4eec\u539f\u59cb\u7684\u521b\u5efa\u5361\u7247\u51fd\u6570\n            const card = createShipCard(ship);\n            fleetListContainer.appendChild(card);\n        });\n    } catch (error) {\n        fleetListContainer.innerHTML = `&lt;p style=\"color: #ff6b6b;\"&gt;\u8230\u961f\u52a0\u8f7d\u9519\u8bef\uff1a${error.message}&lt;/p&gt;`;\n    }\n}\n\n// \u521b\u5efa\u98de\u8239\u5361\u7247\u7684\u539f\u59cb\u51fd\u6570\nfunction createShipCard(ship) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.innerHTML = `\n        &lt;h3&gt;${ship.name} (ID: ${ship.id})&lt;/h3&gt;\n        &lt;p&gt;\u7c7b\u578b: ${ship.type}&lt;/p&gt;\n        &lt;p&gt;\u53d1\u5c04\u5e74\u4efd: ${ship.launch_year}&lt;/p&gt;\n        &lt;p&gt;\u72b6\u6001: ${ship.status}&lt;/p&gt;\n        &lt;div class=\"card-actions\"&gt;\n            &lt;button class=\"edit-btn\" data-ship-id=\"${ship.id}\"&gt;\u4fee\u6539&lt;/button&gt;\n            &lt;button class=\"delete-btn\" data-ship-id=\"${ship.id}\"&gt;\u62a5\u5e9f&lt;/button&gt;\n        &lt;/div&gt;\n    `;\n    return card;\n}\n</code></pre></p> <p>\u6b65\u9aa43\uff1aCRUD\u64cd\u4f5c\u68c0\u67e5</p> <p>\u7531\u4e8eFastAPI\u4e2d\u7684Pydantic\u6a21\u578b\u548cHTML\u8868\u5355\u4e2d\u7684\u5b57\u6bb5\uff08<code>name</code>\u3001<code>type</code>\u3001<code>launch_year</code>\u3001<code>status</code>\uff09\u662f\u5339\u914d\u7684\uff0c<code>handleSaveShip</code> \u548c <code>handleDeleteShip</code> \u51fd\u6570\u5e94\u8be5\u65e0\u9700\u66f4\u6539\u5373\u53ef\u5de5\u4f5c\uff0c\u56e0\u4e3a\u5b83\u4eec\u5df2\u7ecf\u6307\u5411 <code>/spaceships</code> \u7aef\u70b9\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/1/#4","title":"4. \u6bd4\u8f83\u603b\u7ed3\uff1a\u8fd9\u5bf9\u524d\u7aef\u5f00\u53d1\u8005\u610f\u5473\u7740\u4ec0\u4e48\uff1f","text":"<ul> <li>REST\u7684\u901a\u7528\u6027\uff1a \u4f60\u4eb2\u8eab\u9a8c\u8bc1\u4e86\uff0c\u5982\u679c\u9075\u5faaREST\u539f\u5219\uff0c\u524d\u7aef\u5bf9\u4e8e\u540e\u7aef\u662f\u7528\u4ec0\u4e48\u8bed\u8a00\u7f16\u5199\uff08PHP/Laravel\u8fd8\u662fPython/FastAPI\uff09\u5e76\u4e0d\u91cd\u8981\u3002</li> <li>\u6587\u6863\u7684\u91cd\u8981\u6027\uff1a \u4e3b\u8981\u533a\u522b\u5728\u4e8e\u7aef\u70b9URL\u548cJSON\u54cd\u5e94\u7ed3\u6784\u3002\u8fd9\u6b63\u662fAPI\u6587\u6863\u4e2d\u5e94\u8be5\u63cf\u8ff0\u7684\u5185\u5bb9\u3002\u6ca1\u6709\u6587\u6863\uff0c\u524d\u7aef\u5f00\u53d1\u8005\u5c06\u201c\u76f2\u76ee\u201d\u5de5\u4f5c\u3002</li> <li>\u524d\u7aef\u7684\u7075\u6d3b\u6027\uff1a \u4f60\u7684JavaScript\u4ee3\u7801\u5e94\u8be5\u8db3\u591f\u7075\u6d3b\uff0c\u4ee5\u4fbf\u8f7b\u677e\u9002\u5e94\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\uff08\u4f8b\u5982\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728 <code>data</code> \u952e\uff0c\u6216\u8005\u5b83\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u6570\u7ec4\uff09\u3002</li> </ul> <p>\u7ed3\u8bba\uff1a \u4f7f\u7528REST API\u7684\u6280\u80fd\u662f\u4e00\u628a\u901a\u7528\u94a5\u5319\uff0c\u5b83\u80fd\u6253\u5f00\u4e0e\u4efb\u4f55\u73b0\u4ee3\u540e\u7aef\u4ea4\u4e92\u7684\u5927\u95e8\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/1/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u5c0f\u6d4b\u9a8c","text":"<p>1. \u6211\u4eec\u7684Laravel API\u548cFastAPI API\u4e4b\u95f4URL\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e...</p>  a) \u4f7f\u7528\u4e0d\u540c\u7684\u7aef\u53e3  b) Laravel\u5e26\u6709 `/api` \u524d\u7f00  c) FastAPI\u4f7f\u7528HTTPS <p>2. \u4eceLaravel\u7684\u5206\u9875\u54cd\u5e94\u5207\u6362\u5230FastAPI\u7684\u7b80\u5355\u6570\u7ec4\u65f6\uff0cJS\u4ee3\u7801\u9700\u8981\u8fdb\u884c\u54ea\u4e9b\u4e3b\u8981\u66f4\u6539\uff1f</p>  a) \u505c\u6b62\u8bbf\u95ee `responseData.data`\uff0c\u76f4\u63a5\u4f7f\u7528 `responseData`  b) \u4f7f\u7528\u4e0d\u540c\u7684 `fetch` \u65b9\u6cd5  c) \u66f4\u6539HTTP\u5934\u4e2d\u7684 `Content-Type` <p>3. \u8fd9\u9879\u5b9e\u9a8c\u8bc1\u660e\uff0c\u5bf9\u4e8e\u524d\u7aef\u5f00\u53d1\u8005\u6765\u8bf4...</p>  a) \u4e86\u89e3PHP\u548cPython\u90fd\u5f88\u91cd\u8981  b) \u91cd\u8981\u7684\u662f\u7406\u89e3REST\u539f\u5219\u5e76\u80fd\u591f\u9605\u8bfbAPI\u6587\u6863  c) Laravel\u548cFastAPI\u662f\u5b8c\u5168\u76f8\u540c\u7684 <p>4. CORS\u7684\u914d\u7f6e\u662f...</p>  a) \u524d\u7aef\u5f00\u53d1\u8005\u7684\u4efb\u52a1  b) \u7cfb\u7edf\u7ba1\u7406\u5458\u7684\u4efb\u52a1  c) \u540e\u7aef\u5f00\u53d1\u8005\u7684\u4efb\u52a1 <p>5. \u5982\u679cFastAPI\u4e5f\u50cfLaravel\u4e00\u6837\u4f7f\u7528\u5206\u9875\uff0c\u524d\u7aef\u9700\u8981\u505a\u4ec0\u4e48\uff1f</p>  a) \u4ec0\u4e48\u90fd\u4e0d\u7528\u505a\uff0c\u4ee3\u7801\u4f1a\u81ea\u52a8\u8fd0\u884c  b) \u518d\u6b21\u4fee\u6539\u903b\u8f91\uff0c\u4ece `data` \u952e\uff08\u6216\u7c7b\u4f3c\u952e\uff09\u4e2d\u63d0\u53d6\u6570\u7ec4  c) \u4ece `fetch` \u5207\u6362\u5230 Axios \u5e93 \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u4f60\u6210\u529f\u5207\u6362\u4e86\u4efb\u52a1\u63a7\u5236\u4e2d\u5fc3\u7684\u201c\u901a\u4fe1\u534f\u8bae\u201d\uff0c\u5e76\u5b9e\u8df5\u6bd4\u8f83\u4e86\u4e0e\u4e24\u79cd\u4e0d\u540c\u540e\u7aef\u7cfb\u7edf\u7684\u5de5\u4f5c\u3002</p> <ul> <li>\u2705 \u4f60\u5de9\u56fa\u4e86\u8c03\u6574 <code>API_BASE_URL</code> \u4ee5\u5728\u670d\u52a1\u5668\u4e4b\u95f4\u5207\u6362\u7684\u6280\u80fd\u3002</li> <li>\u2705 \u4f60\u7406\u89e3\u4e86\u54cd\u5e94\u7ed3\u6784\uff08<code>data</code> \u4e0e\u7b80\u5355\u6570\u7ec4\uff09\u7684\u91cd\u8981\u6027\u4ee5\u53ca\u5982\u4f55\u4f7f\u524d\u7aef\u9002\u5e94\u5b83\u3002</li> <li>\u2705 \u4f60\u610f\u8bc6\u5230\u4e00\u540d\u4f18\u79c0\u7684\u524d\u7aef\u5f00\u53d1\u8005\u5e94\u8be5\u51c6\u5907\u597d\u5904\u7406\u4efb\u4f55RESTful API\uff0c\u5e76\u4ed4\u7ec6\u7814\u7a76\u5176\u6587\u6863\u3002</li> </ul> <p>\u901a\u7528\u5bf9\u63a5\u6280\u80fd\u5df2\u83b7\u5f97\uff01 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u638c\u63e1\u4e86\u57fa\u672c\u8fde\u63a5\u7684\u8bbe\u7f6e\uff0c\u662f\u65f6\u5019\u8ba8\u8bba\u66f4\u590d\u6742\u7684\u534f\u8bae\u4e86\u2014\u2014CORS\u3001\u8eab\u4efd\u9a8c\u8bc1\u548c\u5b89\u5168\u6027\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\u70b9\uff1a</p> <ul> <li>\u786e\u4fdd\u4f60\u7684FastAPI\u670d\u52a1\u5668\u6b63\u5728\u8fd0\u884c\u3002</li> <li>\u786e\u4fdd\u4f60\u5df2\u5c06 <code>API_BASE_URL</code> \u548c <code>app.js</code> \u4e2d\u7684\u54cd\u5e94\u5904\u7406\u903b\u8f91\u6062\u590d\u5230FastAPI\u7248\u672c\u3002</li> <li>\u68c0\u67e5\u4f60\u7684\u524d\u7aef\u662f\u5426\u518d\u6b21\u6b63\u786e\u6267\u884c\u4e0eFastAPI\u540e\u7aef\u7684\u6240\u6709CRUD\u64cd\u4f5c\u3002</li> </ul> <p>\u26a0\ufe0f \u5982\u679c\u51fa\u73b0\u9519\u8bef\uff1a</p> <ul> <li>CORS error\uff1a \u786e\u4fddFastAPI\u670d\u52a1\u5668\u4ee5\u6b63\u786e\u7684CORS\u8bbe\u7f6e\u8fd0\u884c\u3002</li> <li>\u9519\u8bef <code>Cannot read properties of undefined (reading 'length')</code>\uff1a \u4f60\u53ef\u80fd\u5fd8\u8bb0\u4ece <code>responseData</code> \u4e2d\u79fb\u9664 <code>.data</code> \u7684\u8bbf\u95ee\u3002</li> <li>404 Not Found\uff1a \u68c0\u67e5 <code>API_BASE_URL</code> \u2014\u2014 FastAPI\u6ca1\u6709 <code>/api</code> \u524d\u7f00\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/2/","title":"\u7b2c6.2\u7ae0\uff1aCORS\u8bbe\u7f6e","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 30\u5206\u949f</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/2/#1-cors","title":"1. CORS\uff1a\u5b83\u662f\u4ec0\u4e48\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u9700\u8981\uff1f","text":"<p>\u6b63\u5982\u6211\u4eec\u6240\u77e5\uff0cCORS\uff08\u8de8\u57df\u8d44\u6e90\u5171\u4eab\uff09 \u662f\u4e00\u79cd\u6d4f\u89c8\u5668\u5b89\u5168\u7b56\u7565\u3002\u5b83\u65e8\u5728\u9632\u6b62\u6076\u610f\u7f51\u7ad9 <code>evil-site.com</code> \u4ee3\u8868\u60a8\uff08\u4f7f\u7528\u60a8\u7684 Cookie\uff09\u5411 <code>your-bank.com</code> \u53d1\u9001\u8bf7\u6c42\u5e76\u7a83\u53d6\u6570\u636e\u7684\u60c5\u51b5\u53d1\u751f\u3002</p> <p>\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f</p> <ol> <li>\u524d\u7aef\uff08\u6d4f\u89c8\u5668\uff09 \u4ece\u57df <code>A</code> \u8bf7\u6c42\u83b7\u53d6\u57df <code>B</code> \u7684\u6570\u636e\u3002</li> <li>\u6d4f\u89c8\u5668\u5411\u57df <code>B</code> \u53d1\u9001\u4e00\u4e2a\u7279\u6b8a\u7684\u201c\u9884\u68c0\u201d\u8bf7\u6c42\uff08preflight request\uff09\uff0c\u4f7f\u7528 <code>OPTIONS</code> \u65b9\u6cd5\u8be2\u95ee\uff1a\u201c\u563f\uff0c\u57df <code>B</code>\uff0c\u57df <code>A</code> \u53ef\u4ee5\u5411\u4f60\u53d1\u9001 <code>GET</code> \u8bf7\u6c42\u5417\uff1f\u201d</li> <li>\u540e\u7aef\uff08\u57df <code>B</code> \u4e0a\u7684\u670d\u52a1\u5668\uff09 \u5fc5\u987b\u4f7f\u7528\u7279\u6b8a\u7684 HTTP \u5934\u8fdb\u884c\u54cd\u5e94\uff0c\u4f8b\u5982\uff1a<code>Access-Control-Allow-Origin: A</code>\u3002</li> <li>\u5982\u679c\u670d\u52a1\u5668\u54cd\u5e94\u5141\u8bb8\u8be5\u8bf7\u6c42\uff0c\u6d4f\u89c8\u5668\u4f1a\u53d1\u9001\u4e3b <code>GET</code> \u8bf7\u6c42\u3002\u5426\u5219\uff0c\u5b83\u4f1a\u963b\u6b62\u8be5\u8bf7\u6c42\u5e76\u53d1\u51fa CORS \u9519\u8bef\u3002</li> </ol> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a</p> <p>\u5728\u5c06\u8239\u957f\u4f20\u9001\u5230\u5916\u661f\u7ad9\uff08\u53d1\u9001 <code>POST</code> \u8bf7\u6c42\uff09\u4e4b\u524d\uff0c\u98de\u8239\uff08\u6d4f\u89c8\u5668\uff09\u4f1a\u6d3e\u51fa\u4e00\u67b6\u65e0\u4eba\u673a\uff08<code>OPTIONS</code> \u8bf7\u6c42\uff09\u8be2\u95ee\uff1a\u201c\u7a7a\u95f4\u7ad9\uff0c\u4f60\u4eec\u63a5\u53d7\u2018\u4f01\u4e1a\u53f7\u2019\u98de\u8239\u7684\u4f20\u9001\u5417\uff1f\u201d\u7a7a\u95f4\u7ad9\uff08API\uff09\u56de\u7b54\uff1a\u201c\u662f\u7684\uff0c\u5141\u8bb8\u2018\u4f01\u4e1a\u53f7\u2019\u7684\u4f20\u9001\u201d\uff08<code>Access-Control-Allow-Origin</code> \u5934\uff09\u3002\u53ea\u6709\u5728\u90a3\u4e4b\u540e\uff0c\u4f20\u9001\u624d\u4f1a\u5f00\u59cb\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/2/#2-laravel-cors-laravel-11","title":"2. Laravel \u4e2d\u7684 CORS \u8bbe\u7f6e\uff08Laravel 11+ \u7684\u73b0\u4ee3\u65b9\u6cd5\uff09","text":"<p>\u5728 Laravel 11+ \u4e2d\uff0cCORS \u914d\u7f6e\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\uff0c\u5982\u679c\u60a8\u53ea\u9700\u8981\u57fa\u672c\u8bbe\u7f6e\uff0c\u5219\u65e0\u9700\u53d1\u5e03 <code>config/cors.php</code> \u6587\u4ef6\u3002\u6240\u6709\u5185\u5bb9\u90fd\u901a\u8fc7 <code>.env</code> \u6587\u4ef6\u548c <code>bootstrap/app.php</code> \u8fdb\u884c\u7ba1\u7406\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u914d\u7f6e</p> <p>\u6253\u5f00\u60a8\u7684 <code>.env</code> \u6587\u4ef6\u3002Laravel \u9ed8\u8ba4\u5df2\u7ecf\u63d0\u4f9b\u4e86\u7528\u4e8e\u7ba1\u7406 API CORS \u7684\u53d8\u91cf\u3002</p> <pre><code># .env\n\n# ... \u5176\u4ed6\u53d8\u91cf\n\n# \u6307\u5b9a CORS \u5c06\u751f\u6548\u7684\u8def\u5f84\u3002\n# 'api/*' - \u6240\u6709 API \u8def\u7531\u7684\u6807\u51c6\u503c\u3002\nCORS_PATHS=api/*\n\n# \u6307\u5b9a\u5141\u8bb8\u7684\u6765\u6e90\uff08\u57df\uff09\u3002\n# \u5bf9\u4e8e\u5f00\u53d1\u73af\u5883\uff0c\u8bf7\u6307\u5b9a\u60a8\u524d\u7aef\u7684\u5730\u5740\u3002\n# \u53ef\u4ee5\u7528\u9017\u53f7\u5206\u9694\uff0c\u4e0d\u8981\u6709\u7a7a\u683c\u3002\nCORS_ALLOWED_ORIGINS=http://localhost:5500,http://127.0.0.1:5500\n\n# \u5176\u4ed6\u8bbe\u7f6e\uff08\u901a\u5e38\u53ef\u4ee5\u4fdd\u7559\u9ed8\u8ba4\u503c\uff09\nCORS_ALLOWED_METHODS=*\nCORS_ALLOWED_HEADERS=*\nCORS_EXPOSED_HEADERS=\nCORS_MAX_AGE=0\nCORS_SUPPORTS_CREDENTIALS=false\n</code></pre> <p>\u5173\u952e\u53d8\u91cf\uff1a</p> <ul> <li> <p><code>CORS_ALLOWED_ORIGINS</code>\uff1a\u6700\u91cd\u8981\u7684\u53d8\u91cf\u3002 \u60a8\u5728\u6b64\u5904\u5217\u51fa\u5141\u8bb8\u8bf7\u6c42\u7684\u57df\u3002 <code>*</code> \u5141\u8bb8\u6240\u6709\u57df\uff0c\u4f46\u8fd9\u5bf9\u4e8e\u751f\u4ea7\u73af\u5883\u6765\u8bf4\u6781\u4e0d\u5b89\u5168\u3002</p> </li> <li> <p><code>CORS_PATHS</code>\uff1a\u8fd9\u4e9b\u89c4\u5219\u9002\u7528\u7684\u8def\u5f84\u3002<code>api/*</code> \u8868\u793a\u6240\u6709\u4ee5 <code>/api/</code> \u5f00\u5934\u7684\u8def\u5f84\u3002</p> </li> </ul> <p>\u66f4\u6539 <code>.env</code> \u540e\uff0c\u5982\u679c\u60a8\u4f7f\u7528 <code>php artisan serve</code>\uff0c\u5219\u65e0\u9700\u91cd\u542f\u670d\u52a1\u5668\u3002\u66f4\u6539\u4f1a\u81ea\u52a8\u751f\u6548\u3002</p> <p>\u6b65\u9aa4 2\uff08\u53ef\u9009\uff09\uff1a<code>bootstrap/app.php</code> \u4e2d\u7684\u9ad8\u7ea7\u8bbe\u7f6e</p> <p>\u5982\u679c\u60a8\u9700\u8981\u66f4\u590d\u6742\u7684\u903b\u8f91\uff08\u4f8b\u5982\uff0c\u4f7f\u7528\u6a21\u5f0f\u5141\u8bb8\u5b50\u57df\uff09\uff0c\u60a8\u4ecd\u7136\u9700\u8981\u53d1\u5e03\u914d\u7f6e\u6587\u4ef6\u5e76\u8bbe\u7f6e\u4e2d\u95f4\u4ef6\u3002\u4f46\u5bf9\u4e8e 95% \u7684\u60c5\u51b5\uff0c<code>.env</code> \u6587\u4ef6\u5c31\u8db3\u591f\u4e86\u3002</p> <p>\u547d\u4ee4 <code>php artisan install:api</code> \u4f1a\u81ea\u52a8\u5728 <code>bootstrap/app.php</code> \u6587\u4ef6\u4e2d\u4e3a API \u8def\u7531\u914d\u7f6e\u57fa\u672c\u7684 CORS \u4e2d\u95f4\u4ef6\u3002\u5b83\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>// bootstrap/app.php\n-&gt;withMiddleware(function (Middleware $middleware) {\n    // \u8fd9\u4e00\u884c\u5c06\u7531 install:api \u547d\u4ee4\u81ea\u52a8\u6dfb\u52a0\n    // \u5b83\u5305\u542b\u4e86\u6240\u6709 API \u8def\u7531\u7684 CORS \u5904\u7406\n    $middleware-&gt;api(base_path('routes/api.php'));\n})\n</code></pre> <p>\u5728 <code>-&gt;api()</code> \u5185\u90e8\uff0cLaravel \u5df2\u7ecf\u4f7f\u7528\u4e86 <code>HandleCors</code> \u4e2d\u95f4\u4ef6\uff0c\u5b83\u4f1a\u4ece\u60a8\u7684 <code>.env</code> \u6587\u4ef6\u4e2d\u8bfb\u53d6\u8bbe\u7f6e\u3002\u4e00\u5207\u90fd\u975e\u5e38\u7b80\u5355\uff0c\u5f00\u7bb1\u5373\u7528\u3002</p> <p>\u26a0\ufe0f \u91cd\u8981\uff01 \u5982\u679c\u60a8\u7684 API \u5e76\u975e\u5b8c\u5168\u516c\u5f00\uff0c\u8bf7\u52ff\u5728\u751f\u4ea7\u670d\u52a1\u5668\u4e0a\u4f7f\u7528 <code>CORS_ALLOWED_ORIGINS='*'</code>\u3002\u8fd9\u4f1a\u5e26\u6765\u6f5c\u5728\u7684\u5b89\u5168\u6f0f\u6d1e\u3002\u8bf7\u52a1\u5fc5\u5217\u51fa\u60a8\u524d\u7aef\u7684\u5177\u4f53\u57df\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/2/#3-fastapi-cors","title":"3. FastAPI \u4e2d\u7684 CORS \u8bbe\u7f6e","text":"<p>FastAPI \u4f7f\u7528 \u4e2d\u95f4\u4ef6\uff08Middleware\uff09 \u7684\u6982\u5ff5\u6765\u5904\u7406 CORS \u7b49\u6a2a\u5207\u5173\u6ce8\u70b9\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u6253\u5f00\u60a8\u7684\u4e3b\u5e94\u7528\u7a0b\u5e8f\u6587\u4ef6</p> <p>\u8fd9\u662f\u60a8\u521b\u5efa FastAPI \u5b9e\u4f8b\u7684\u6587\u4ef6\uff08\u901a\u5e38\u662f <code>main.py</code>\uff09\u3002</p> <p>\u6b65\u9aa4 2\uff1a\u6dfb\u52a0 <code>CORSMiddleware</code></p> <p>FastAPI \u63d0\u4f9b\u4e86\u73b0\u6210\u7684\u4e2d\u95f4\u4ef6\u7528\u4e8e CORS \u914d\u7f6e\u3002</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware # 1. \u5bfc\u5165\u4e2d\u95f4\u4ef6\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"API \u7528\u4e8e\u7ba1\u7406\u94f6\u6cb3\u7cfb\u4e2d\u7684\u884c\u661f\",\n    version=\"1.0.0\"\n)\n\n# 2. \u5141\u8bb8\u7684\u6765\u6e90\u5217\u8868\uff08origins\uff09\norigins = [\n    \"http://localhost:5500\",\n    \"http://127.0.0.1:5500\",\n    # \u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u8fd9\u91cc\u4f1a\u662f\u60a8\u524d\u7aef\u7684\u57df\u540d\n    # \"https://my-awesome-app.com\",\n]\n\n# 3. \u5c06\u4e2d\u95f4\u4ef6\u6dfb\u52a0\u5230\u5e94\u7528\u7a0b\u5e8f\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,  # \u5141\u8bb8\u6307\u5b9a\u7684\u6765\u6e90\n    allow_credentials=True, # \u5141\u8bb8 Cookie\uff08\u8eab\u4efd\u9a8c\u8bc1\u65f6\u9700\u8981\uff09\n    allow_methods=[\"*\"],    # \u5141\u8bb8\u6240\u6709\u65b9\u6cd5\uff08GET, POST \u7b49\uff09\n    allow_headers=[\"*\"],    # \u5141\u8bb8\u6240\u6709\u5934\u90e8\n)\n\n# ... \u6b64\u5904\u662f\u60a8\u7684\u8def\u7531\u548c\u5176\u4ed6\u4ee3\u7801\n</code></pre> <p>\u6b65\u9aa4 3\uff1a\u91cd\u542f Uvicorn \u670d\u52a1\u5668 Uvicorn \u670d\u52a1\u5668\u901a\u5e38\u5728\u4ee3\u7801\u66f4\u6539\u65f6\u81ea\u52a8\u91cd\u8f7d\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u624b\u52a8\u91cd\u542f\u3002\u73b0\u5728\u60a8\u7684 FastAPI \u670d\u52a1\u5668\u5c06\u6b63\u786e\u54cd\u5e94\u6765\u81ea\u524d\u7aef\u7684 <code>OPTIONS</code> \u8bf7\u6c42\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/2/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u5c0f\u6d4b\u9a8c","text":"<p>1. \u6d4f\u89c8\u5668\u5728\u4e3b\u8981\u8bf7\u6c42\u4e4b\u524d\u53d1\u9001\u7684\u7528\u4e8e\u68c0\u67e5 CORS \u7684\u8bf7\u6c42\u79f0\u4e3a\uff1a</p>  a) CHECK request  b) Preflight request  c) Handshake request <p>2. \u5728\u73b0\u4ee3 Laravel (11+) \u4e2d\uff0cCORS \u7684\u57fa\u672c\u8bbe\u7f6e\u4e3b\u8981\u5728\u54ea\u91cc\u914d\u7f6e\uff1a</p>  a) bootstrap/app.php \u6587\u4ef6  b) .env \u6587\u4ef6  c) routes/api.php \u6587\u4ef6 <p>3. \u5728 FastAPI \u4e2d\uff0c\u7528\u4e8e\u914d\u7f6e CORS \u7684\u662f\uff1a</p>  a) @app.cors() \u88c5\u9970\u5668  b) \u5185\u7f6e\u7684 Security \u7c7b  c) \u4e2d\u95f4\u4ef6\uff08`Middleware`\uff09 <p>4. \u5bf9\u4e8e\u751f\u4ea7\u73af\u5883\uff0c\u54ea\u4e2a CORS_ALLOWED_ORIGINS \u503c\u6700\u5b89\u5168\uff1f</p>  a) CORS_ALLOWED_ORIGINS='*'  b) CORS_ALLOWED_ORIGINS=http://my-frontend.com,https://my-frontend.com`  c) \u4e0d\u8bbe\u7f6e\u6b64\u53d8\u91cf \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u60a8\u5df2\u6210\u4e3a\u201c\u661f\u9645\u901a\u4fe1\u5916\u4ea4\u5b98\u201d\uff01\u60a8\u7684 API \u73b0\u5728\u53ef\u4ee5\u5b89\u5168\u5730\u4e0e\u5916\u90e8\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4e92\uff0c\u91c7\u7528\u73b0\u4ee3\u4e14\u6b63\u786e\u7684\u65b9\u6cd5\u3002</p> <ul> <li>\u2705 \u7406\u89e3\u4e86 CORS \u548c\u9884\u68c0\u8bf7\u6c42\u7684\u5de5\u4f5c\u673a\u5236\u3002</li> <li>\ud83d\udd27 \u901a\u8fc7 <code>.env</code> \u6587\u4ef6\u4e3a Laravel 11+ \u914d\u7f6e\u4e86 CORS\u3002</li> <li>\u2699\ufe0f \u4f7f\u7528 <code>CORSMiddleware</code> \u4e3a FastAPI \u914d\u7f6e\u4e86 CORS\u3002</li> <li>\ud83d\udef0\ufe0f \u6210\u529f\u5efa\u7acb\u4e86\u524d\u7aef\u548c\u540e\u7aef\u4e4b\u95f4\u7684\u8fde\u63a5\u3002</li> </ul> <p>\u901a\u4fe1\u6865\u6881\u5df2\u5efa\u6210\u5e76\u53d7\u5230\u4fdd\u62a4\u3002 \u73b0\u5728\u53ef\u4ee5\u8003\u8651\u5982\u4f55\u53ea\u5141\u8bb8\u201c\u6388\u6743\u4eba\u5458\u201d\u901a\u8fc7\u8fd9\u5ea7\u6865\u6881\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li>\u6210\u529f\u7684\u4e3b\u8981\u6807\u51c6\u662f\uff1a\u5f53\u524d\u7aef\u8bf7\u6c42\u6570\u636e\u65f6\uff0c\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u4e2d\u6ca1\u6709 CORS \u9519\u8bef\u3002</li> <li>\u5728\u5f00\u53d1\u8005\u5de5\u5177\u7684\u201c\u7f51\u7edc\u201d\uff08Network\uff09\u9009\u9879\u5361\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u5bf9\u60a8\u7684 API \u53d1\u9001\u4e86\u4e24\u4e2a\u8bf7\u6c42\uff1a\u7b2c\u4e00\u4e2a\u662f <code>OPTIONS</code> \u65b9\u6cd5\uff08\u72b6\u6001 200/204\uff09\uff0c\u7b2c\u4e8c\u4e2a\u662f <code>GET</code> \u65b9\u6cd5\uff08\u72b6\u6001 200\uff09\u3002\u8fd9\u662f CORS \u5de5\u4f5c\u539f\u7406\u7684\u76f4\u89c2\u6f14\u793a\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/3/","title":"\u7b2c\u516d\u7ae0 6.3: \u57fa\u7840\u8ba4\u8bc1","text":"<p>\u5b66\u4e60\u65f6\u95f4: 1 \u5c0f\u65f6</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/3/#1-api","title":"1. API \u8ba4\u8bc1: \u8fdb\u5165\u98de\u884c\u63a7\u5236\u4e2d\u5fc3\u7684\u901a\u884c\u8bc1","text":"<p>\u8ba4\u8bc1 \u662f\u9a8c\u8bc1\u7528\u6237\u8eab\u4efd\u7684\u8fc7\u7a0b\u3002\u4e0e\u4f7f\u7528\u4f1a\u8bdd\u548c Cookie \u7684\u7f51\u7ad9\u4e0d\u540c\uff0c\u65e0\u72b6\u6001 (stateless) API \u901a\u5e38\u4f7f\u7528 \u4ee4\u724c\u3002</p> <p>\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u7528\u6237\u5c06\u5176\u767b\u5f55\u540d\u548c\u5bc6\u7801\u53d1\u9001\u5230\u7279\u5b9a\u7684\u7aef\u70b9\uff08\u4f8b\u5982\uff0c<code>/login</code>\uff09\u3002</li> <li>\u670d\u52a1\u5668\u9a8c\u8bc1\u5b83\u4eec\u3002\u5982\u679c\u6b63\u786e\uff0c\u5b83\u4f1a\u751f\u6210\u4e00\u4e2a\u552f\u4e00\u7684\u3001\u52a0\u5bc6\u7684 \u4ee4\u724c\uff08\u4e00\u4e2a\u957f\u5b57\u7b26\u4e32\uff09\u5e76\u5c06\u5176\u53d1\u9001\u56de\u3002</li> <li>\u6bcf\u6b21\u540e\u7eed\u8bf7\u6c42\u8bbf\u95ee\u53d7\u4fdd\u62a4\u8d44\u6e90\uff08\u4f8b\u5982\uff0c<code>POST /planets</code>\uff09\u65f6\uff0c\u7528\u6237\u5fc5\u987b\u5728 <code>Authorization</code> \u5934\u90e8\u4e2d\u9644\u52a0\u6b64\u4ee4\u724c\u3002</li> <li>\u670d\u52a1\u5668\u9a8c\u8bc1\u4ee4\u724c\u7684\u6709\u6548\u6027\uff0c\u5982\u679c\u4ee4\u724c\u6b63\u786e\uff0c\u5219\u6267\u884c\u8bf7\u6c42\u3002</li> </ol> <p>\ud83d\udca1 \u592a\u7a7a\u7c7b\u6bd4\uff1a</p> <ul> <li>\u767b\u5f55\u540d/\u5bc6\u7801 = \u60a8\u7684\u751f\u7269\u8bc6\u522b\u626b\u63cf\uff0c\u7528\u4e8e\u83b7\u53d6\u901a\u884c\u8bc1\u3002</li> <li>\u4ee4\u724c = \u60a8\u5728\u8fdb\u5165\u98de\u884c\u63a7\u5236\u4e2d\u5fc3\u65f6\u83b7\u5f97\u7684\u7535\u5b50\u901a\u884c\u8bc1\uff08ID \u5361\uff09\u3002</li> <li><code>Authorization: Bearer &lt;\u4ee4\u724c&gt;</code> \u5934\u90e8 = \u60a8\u5c06\u901a\u884c\u8bc1\u8d34\u5728\u6bcf\u4e2a\u53d7\u4fdd\u62a4\u95e8\u65c1\u7684\u8bfb\u5361\u5668\u4e0a\u3002</li> <li>\u53d7\u4fdd\u62a4\u7684\u7aef\u70b9 (POST, PUT, DELETE) = \u670d\u52a1\u5668\u673a\u623f\u6216\u542f\u52a8\u63a7\u5236\u53f0\u7684\u95e8\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/3/#2-laravel-sanctum","title":"2. Laravel \u4e2d\u7684\u8ba4\u8bc1: Sanctum","text":"<p>Laravel \u4e3a API \u8ba4\u8bc1\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f18\u96c5\u7684\u89e3\u51b3\u65b9\u6848\u2014\u2014Laravel Sanctum\u3002\u5b83\u975e\u5e38\u9002\u5408 SPA\uff08\u5355\u9875\u5e94\u7528\u7a0b\u5e8f\uff09\u3001\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u548c\u7b80\u5355\u7684\u57fa\u4e8e\u4ee4\u724c\u7684 API\u3002</p> <p>\u6b65\u9aa4 1: \u5b89\u88c5\u548c\u914d\u7f6e Sanctum</p> <p>Sanctum \u5df2\u5728\u6807\u51c6\u7684 Laravel \u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b89\u88c5\uff0c\u4f46\u6211\u4eec\u5c06\u68c0\u67e5\u914d\u7f6e\u3002</p> <ol> <li>\u53d1\u5e03\u914d\u7f6e (\u5982\u679c\u5c1a\u672a\u5b8c\u6210): <pre><code>php artisan vendor:publish --provider=\"Laravel\\Sanctum\\SanctumServiceProvider\"\n</code></pre></li> <li>\u8fd0\u884c\u8fc1\u79fb (\u5c06\u521b\u5efa <code>personal_access_tokens</code> \u8868): <pre><code>php artisan migrate\n</code></pre></li> <li>\u5728 <code>User</code> \u6a21\u578b\u4e2d\u6dfb\u52a0 Trait:     \u6253\u5f00 <code>app/Models/User.php</code> \u5e76\u786e\u4fdd\u5b83\u4f7f\u7528\u4e86 <code>HasApiTokens</code> trait\u3002     <pre><code>// app/Models/User.php\nuse Laravel\\Sanctum\\HasApiTokens;\n\nclass User extends Authenticatable\n{\n    use HasApiTokens, HasFactory, Notifiable;\n    // ...\n}\n</code></pre></li> </ol> <p>\u6b65\u9aa4 2: \u521b\u5efa\u4ee4\u724c\u9881\u53d1\u7aef\u70b9 \u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7528\u6237\u5c06\u53d1\u9001\u767b\u5f55\u540d/\u5bc6\u7801\u7684\u8def\u7531\u3002</p> <p>\u6dfb\u52a0\u5230 <code>routes/api.php</code>\uff1a <pre><code>// routes/api.php\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Models\\User;\nuse Illuminate\\Validation\\ValidationException;\n\nRoute::post('/login', function (Request $request) {\n    $request-&gt;validate([\n        'email' =&gt; 'required|email',\n        'password' =&gt; 'required',\n    ]);\n\n    $user = User::where('email', $request-&gt;email)-&gt;first();\n\n    if (! $user || ! Hash::check($request-&gt;password, $user-&gt;password)) {\n        throw ValidationException::withMessages([\n            'email' =&gt; ['\u51ed\u636e\u65e0\u6548\u3002'],\n        ]);\n    }\n\n    // \u8fd4\u56de\u4ee4\u724c\n    return response()-&gt;json([\n        'token' =&gt; $user-&gt;createToken('api-token')-&gt;plainTextToken\n    ]);\n});\n</code></pre></p> <p>\u60a8\u53ef\u4ee5\u901a\u8fc7 Seeder \u6216 Tinker \u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u7528\u6237\u3002</p> <p>\u6b65\u9aa4 3: \u4fdd\u62a4\u8def\u7531 \u73b0\u5728\uff0c\u6211\u4eec\u5c06\u4fdd\u62a4\u6211\u4eec\u7684 CRUD \u64cd\u4f5c\u3002\u4fee\u6539 <code>routes/api.php</code>\uff1a</p> <pre><code>// routes/api.php\nuse App\\Http\\Controllers\\PlanetController;\n\n// \u7528\u4e8e\u67e5\u770b\u884c\u661f\u7684\u516c\u5171\u8def\u7531\nRoute::get('/planets', [PlanetController::class, 'index']);\nRoute::get('/planets/{planet}', [PlanetController::class, 'show']);\n\n// \u53d7\u4fdd\u62a4\u7684\u8def\u7531\u7ec4\nRoute::middleware('auth:sanctum')-&gt;group(function () {\n    Route::post('/planets', [PlanetController::class, 'store']);\n    Route::put('/planets/{planet}', [PlanetController::class, 'update']);\n    Route::delete('/planets/{planet}', [PlanetController::class, 'destroy']);\n\n    // \u9000\u51fa\u8def\u7531 (\u5220\u9664\u4ee4\u724c)\n    Route::post('/logout', function (Request $request) {\n        $request-&gt;user()-&gt;currentAccessToken()-&gt;delete();\n        return response()-&gt;json(['message' =&gt; '\u60a8\u5df2\u6210\u529f\u9000\u51fa'], 200);\n    });\n});\n</code></pre> <p>\u4e2d\u95f4\u4ef6 <code>auth:sanctum</code> \u5c06\u68c0\u67e5 <code>Authorization</code> \u5934\u90e8\u4e2d\u662f\u5426\u5b58\u5728\u6709\u6548\u7684\u4ee4\u724c\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/3/#3-fastapi-oauth2-jwt","title":"3. FastAPI \u4e2d\u7684\u8ba4\u8bc1: OAuth2 \u548c JWT","text":"<p>FastAPI \u6ca1\u6709\u5185\u7f6e\u7684\u8ba4\u8bc1\u7cfb\u7edf\uff0c\u4f46\u6709\u5f3a\u5927\u7684\u5de5\u5177\u6765\u5b9e\u73b0\u5728\u6b64\u3002\u4e8b\u5b9e\u6807\u51c6\u662f OAuth2 \u4e0e JWT \u4ee4\u724c\u3002</p> <p>\u6b65\u9aa4 1: \u5b89\u88c5\u4f9d\u8d56 <pre><code>pip install \"python-jose[cryptography]\" \"passlib[bcrypt]\" \"python-multipart\"\n</code></pre></p> <ul> <li><code>python-jose</code>: \u7528\u4e8e\u521b\u5efa\u548c\u9a8c\u8bc1 JWT \u4ee4\u724c\u3002</li> <li><code>passlib</code>: \u7528\u4e8e\u54c8\u5e0c\u548c\u9a8c\u8bc1\u5bc6\u7801\u3002</li> <li><code>python-multipart</code>: \u7528\u4e8e\u5904\u7406\u8868\u5355\u6570\u636e (<code>username</code> \u548c <code>password</code>)\u3002</li> </ul> <p>\u6b65\u9aa4 2: \u521b\u5efa\u5b89\u5168\u6a21\u5757 (<code>security.py</code>) \u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5b9e\u8df5\u2014\u2014\u5c06\u6240\u6709\u8ba4\u8bc1\u903b\u8f91\u63d0\u53d6\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\u4e2d\u3002</p> <p>\u521b\u5efa\u6587\u4ef6 <code>security.py</code>\uff1a</p> <pre><code># security.py\nfrom fastapi import Depends, HTTPException, status\nfrom fastapi.security import OAuth2PasswordBearer\nfrom jose import JWTError, jwt\nfrom passlib.context import CryptContext\nfrom datetime import datetime, timedelta, timezone\n\n# --- \u8bbe\u7f6e ---\nSECRET_KEY = \"your-super-secret-key-that-is-long-and-random\" # \u26a0\ufe0f \u8bf7\u66ff\u6362\u4e3a\u60a8\u7684\u5bc6\u94a5\uff01\nALGORITHM = \"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES = 30\n\n# --- \u5de5\u5177 ---\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/api/v1/login\")\n\n# --- \u51fd\u6570 ---\ndef verify_password(plain_password, hashed_password):\n    return pwd_context.verify(plain_password, hashed_password)\n\ndef get_password_hash(password):\n    return pwd_context.hash(password)\n\ndef create_access_token(data: dict):\n    to_encode = data.copy()\n    expire = datetime.now(timezone.utc) + timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    to_encode.update({\"exp\": expire})\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n    return encoded_jwt\n\n# --- \u4ee4\u724c\u9a8c\u8bc1\u4f9d\u8d56\u51fd\u6570 ---\ndef get_current_user(token: str = Depends(oauth2_scheme)):\n    credentials_exception = HTTPException(\n        status_code=status.HTTP_401_UNAUTHORIZED,\n        detail=\"\u65e0\u6cd5\u9a8c\u8bc1\u51ed\u636e\",\n        headers={\"WWW-Authenticate\": \"Bearer\"},\n    )\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\n        username: str = payload.get(\"sub\")\n        if username is None:\n            raise credentials_exception\n    except JWTError:\n        raise credentials_exception\n    # \u5728\u8fd9\u91cc\u53ef\u4ee5\u4ece\u6570\u636e\u5e93\u8fd4\u56de\u7528\u6237\uff0c\u76ee\u524d\u53ea\u662f\u8fd4\u56de\u7528\u6237\u540d\n    return {\"username\": username}\n</code></pre> <p>\u6b65\u9aa4 3: \u96c6\u6210\u5230 <code>main.py</code> \u73b0\u5728\uff0c\u6211\u4eec\u5c06\u5176\u8fde\u63a5\u5230\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</p> <ol> <li> <p>\u521b\u5efa <code>/login</code> \u7aef\u70b9: <pre><code># main.py\nfrom fastapi.security import OAuth2PasswordRequestForm\nfrom fastapi import Depends, APIRouter\nfrom . import security # \u5bfc\u5165\u6211\u4eec\u7684\u6a21\u5757\n\n# ... \u60a8\u7684 FastAPI \u4ee3\u7801 ...\nrouter = APIRouter(prefix=\"/api/v1\")\n\n@router.post(\"/login\")\ndef login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):\n    # \u8fd9\u91cc\u5e94\u8be5\u6709\u6570\u636e\u5e93\u4e2d\u7684\u7528\u6237\u9a8c\u8bc1\n    # \u4f8b\u5982\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u6d4b\u8bd5\u7528\u6237\n    is_user_valid = (form_data.username == \"testuser\" and\n                     security.verify_password(\"testpass\", security.get_password_hash(\"testpass\")))\n\n    if not is_user_valid:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\",\n        )\n    access_token = security.create_access_token(data={\"sub\": form_data.username})\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\n\n# ...\napp.include_router(router)\n</code></pre></p> </li> <li> <p>\u4fdd\u62a4\u7aef\u70b9:</p> <p>\u6211\u4eec\u4f7f\u7528 <code>get_current_user</code> \u4f9d\u8d56\u3002 <pre><code># main.py \u6216\u5728\u60a8\u7684\u884c\u661f\u8def\u7531\u4e2d\n\n@router.post(\"/planets\", status_code=status.HTTP_201_CREATED)\ndef create_planet(\n    planet: PlanetCreate,\n    current_user: dict = Depends(security.get_current_user) # &lt;-- \u4fdd\u62a4\uff01\n):\n    # \u521b\u5efa\u884c\u661f\u7684\u903b\u8f91...\n    print(f\"\u7528\u6237 {current_user['username']} \u6b63\u5728\u521b\u5efa\u884c\u661f\u3002\")\n    # ...\n    return new_planet\n\n# \u540c\u6837\u4fdd\u62a4 PUT \u548c DELETE\n</code></pre></p> </li> </ol>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/3/#4","title":"4. \u524d\u7aef\u4f7f\u7528\u4ee4\u724c","text":"<p>\u6211\u4eec\u7684\u524d\u7aef\u73b0\u5728\u5e94\u8be5\u9996\u5148\u83b7\u53d6\u4ee4\u724c\uff0c\u4fdd\u5b58\u5b83\uff08\u4f8b\u5982\uff0c\u5728 <code>localStorage</code> \u4e2d\uff09\uff0c\u5e76\u5c06\u5176\u9644\u52a0\u5230\u6bcf\u4e2a\u53d7\u4fdd\u62a4\u7684\u8bf7\u6c42\u4e2d\u3002</p> <p>JavaScript \u793a\u4f8b (<code>fetch</code>): <pre><code>// 1. \u767b\u5f55\nasync function login(email, password) {\n    const response = await fetch('http://localhost:8001/api/login', { // Laravel API \u5730\u5740\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({email, password})\n    });\n    const data = await response.json();\n\n    if (data.token) {\n        localStorage.setItem('api_token', data.token); // \u4fdd\u5b58\u4ee4\u724c\n    }\n}\n\n// 2. \u53d1\u9001\u53d7\u4fdd\u62a4\u7684\u8bf7\u6c42\nasync function createPlanet(planetData) {\n    const token = localStorage.getItem('api_token');\n\n    const response = await fetch('http://localhost:8001/api/planets', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` // &lt;--- \u9644\u52a0\u4ee4\u724c\uff01\n        },\n        body: JSON.stringify(planetData)\n    });\n    // ...\n}\n</code></pre></p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/3/#_1","title":"\u5de9\u56fa\u7ec3\u4e60","text":"<p>1. \u65e0\u72b6\u6001 API \u6700\u5e38\u7528\u4e8e\u8ba4\u8bc1\uff1a</p>  a) \u4f1a\u8bdd\u548c Cookie  b) \u4ee4\u724c (\u4f8b\u5982\uff0cJWT)  c) IP \u5730\u5740 <p>2. \u5728 Laravel \u4e2d\uff0c\u4f7f\u7528\u4ee4\u724c\u4fdd\u62a4\u8def\u7531\u6240\u4f7f\u7528\u7684\u4e2d\u95f4\u4ef6\u662f\uff1a</p>  a) auth:api  b) auth:sanctum  c) verified <p>3. \u5728 FastAPI \u4e2d\uff0c\u7528\u4e8e\u4ece\u767b\u5f55\u8868\u5355\u83b7\u53d6\u6570\u636e\u7684\u4f9d\u8d56\u9879\u662f\uff1a</p>  a) Body()  b) Form()  c) OAuth2PasswordRequestForm = Depends() <p>4. \u4ee4\u724c\u5982\u4f55\u5728\u53d7\u4fdd\u62a4\u7684\u8bf7\u6c42\u4e2d\u4ece\u5ba2\u6237\u7aef\u4f20\u8f93\u5230\u670d\u52a1\u5668\uff1f</p>  a) \u5728 URL \u53c2\u6570\u4e2d `?token=...`  b) \u5728\u8bf7\u6c42\u4f53\u4e2d  c) \u5728 HTTP \u5934\u90e8 `Authorization: Bearer &lt;\u4ee4\u724c&gt;` \u4e2d \u68c0\u67e5 <p>\ud83d\ude80 \u7ae0\u8282\u603b\u7ed3:</p> <p>\u60a8\u5df2\u4e3a\u60a8\u7684 API \u8bbe\u7f6e\u4e86\u201c\u8bbf\u95ee\u63a7\u5236\u7cfb\u7edf\u201d\u3002\u73b0\u5728\uff0c\u4e0d\u662f\u6bcf\u4e2a\u60f3\u8981\u7684\u4eba\u90fd\u80fd\u4fee\u6539\u60a8\u7684\u201c\u94f6\u6cb3\u6570\u636e\u5e93\u201d\u4e86\u3002</p> <ul> <li>\u2705 \u7406\u89e3\u4e86\u57fa\u4e8e\u4ee4\u724c\u7684\u8eab\u4efd\u9a8c\u8bc1\u539f\u5219\u3002</li> <li>\ud83d\udd10 \u5728 Laravel Sanctum \u4e2d\u5b9e\u73b0\u4e86\u4ee4\u724c\u9881\u53d1\u548c\u8def\u7531\u4fdd\u62a4\u3002</li> <li>\u2699\ufe0f \u5728 FastAPI \u4e2d\u914d\u7f6e\u4e86\u57fa\u4e8e OAuth2 \u548c JWT \u7684\u8eab\u4efd\u9a8c\u8bc1\u3002</li> <li>\ud83d\udef0\ufe0f \u4e86\u89e3\u4e86\u524d\u7aef\u5982\u4f55\u4fdd\u5b58\u548c\u4f7f\u7528\u4ee4\u724c\u3002</li> </ul> <p>\u60a8\u7684 API \u4e0d\u4ec5\u529f\u80fd\u9f50\u5168\uff0c\u800c\u4e14\u5b89\u5168\u53ef\u9760\u3002 \u7136\u800c\uff0c\u4e3a\u4e86\u8ba9\u5176\u4ed6\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u4f7f\u7528\u5b83\u4eec\uff0c\u4ed6\u4eec\u9700\u8981\u201c\u64cd\u4f5c\u8bf4\u660e\u201d\u3002</p> <p>\ud83d\udccc \u68c0\u67e5:</p> <ul> <li>\u5c1d\u8bd5\u4f7f\u7528 Postman \u6216 Insomnia \u5bf9 <code>/api/planets</code> (\u5728 Laravel \u4e2d) \u6216 <code>/api/v1/planets</code> (\u5728 FastAPI \u4e2d) \u53d1\u9001\u4e0d\u5e26\u4ee4\u724c\u7684 <code>POST</code> \u8bf7\u6c42\u3002\u60a8\u5e94\u8be5\u4f1a\u6536\u5230 <code>401 Unauthorized</code> \u9519\u8bef\u3002</li> <li>\u8bf7\u6c42 <code>/login</code>\uff0c\u83b7\u53d6\u4ee4\u724c\uff0c\u5c06\u5176\u6dfb\u52a0\u5230 <code>Authorization</code> \u6807\u5934\u4e2d\uff0c\u7136\u540e\u91cd\u590d <code>POST</code> \u8bf7\u6c42\u3002\u5b83\u5e94\u8be5\u4f1a\u6210\u529f\u6267\u884c\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/4/","title":"\u7b2c 6.4 \u7ae0\uff1aAPI \u6587\u6863\u5316","text":"<p>\u5b66\u4e60\u65f6\u95f4\uff1a 30 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/4/#1-api","title":"1. \u4e3a\u4ec0\u4e48\u9700\u8981 API \u6587\u6863\uff1f","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u62ff\u5230\u4e00\u4e2a\u590d\u6742\u5b87\u5b99\u98de\u8239\u7684\u63a7\u5236\u53f0\uff0c\u4e0a\u9762\u6ca1\u6709\u4efb\u4f55\u6309\u94ae\u7684\u6807\u7b7e\u3002\u4f60\u4f1a\u968f\u610f\u6309\u4e0b\u5b83\u4eec\uff0c\u5192\u7740\u542f\u52a8\u5f39\u5c04\u800c\u975e\u6253\u5f00\u706f\u5149\u7684\u98ce\u9669\u3002API \u6587\u6863\u6b63\u662f\u90a3\u4e9b\u6807\u7b7e\u548c\u8bf4\u660e\u3002</p> <p>\u597d\u7684\u6587\u6863\uff1a</p> <ul> <li>\u8282\u7701\u65f6\u95f4\uff1a \u5f00\u53d1\u8005\u65e0\u9700\u731c\u6d4b\u5b58\u5728\u54ea\u4e9b\u7aef\u70b9\u3001\u5b83\u4eec\u63a5\u53d7\u4ec0\u4e48\u53c2\u6570\u4ee5\u53ca\u8fd4\u56de\u4ec0\u4e48\u3002</li> <li>\u51cf\u5c11\u9519\u8bef\uff1a \u6e05\u6670\u7684\u6570\u636e\u683c\u5f0f\u548c\u9519\u8bef\u4ee3\u7801\u63cf\u8ff0\u6709\u52a9\u4e8e\u907f\u514d\u4e0d\u6b63\u786e\u5730\u4f7f\u7528 API\u3002</li> <li>\u7b80\u5316\u96c6\u6210\uff1a \u524d\u7aef\u56e2\u961f\u53ef\u4ee5\u4e0e\u540e\u7aef\u56e2\u961f\u5e76\u884c\u5de5\u4f5c\uff0c\u5c06\u6587\u6863\u4f5c\u4e3a\u5951\u7ea6\u3002</li> <li>\u662f\u4f60\u7684\u9057\u4ea7\uff1a \u534a\u5e74\u540e\u5f53\u4f60\u56de\u5230\u9879\u76ee\u65f6\uff0c\u4f60\u4f1a\u611f\u8c22\u81ea\u5df1\u3002</li> </ul> <p>\ud83d\udca1 \u5b87\u5b99\u7c7b\u6bd4\uff1a</p> <ul> <li>API = \u590d\u6742\u7684\u7a7a\u95f4\u7ad9\u7ba1\u7406\u7cfb\u7edf\u3002</li> <li>API \u6587\u6863 = \u5b87\u822a\u5458\u624b\u518c\u3002\u5176\u4e2d\u63cf\u8ff0\u4e86\uff1a</li> <li>\u53d1\u9001\u4ec0\u4e48\u547d\u4ee4\uff08<code>\u7aef\u70b9</code>\uff09\u6765\u6253\u5f00\u6c14\u95f8\u3002</li> <li>\u4f20\u9012\u4ec0\u4e48\u53c2\u6570\uff08<code>\u8bf7\u6c42\u4f53</code>\uff09\u6765\u914d\u7f6e\u751f\u547d\u7ef4\u6301\u7cfb\u7edf\u3002</li> <li>\u671f\u671b\u6536\u5230\u4ec0\u4e48\u4fe1\u53f7\uff08<code>API \u54cd\u5e94</code>\uff09\u4f5c\u4e3a\u56de\u5e94\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/4/#2-fastapi","title":"2. FastAPI \u4e2d\u7684\u6587\u6863\uff1a\u81ea\u52a8\u5316\u9b54\u6cd5","text":"<p>FastAPI \u8ba9\u6587\u6863\u5316\u53d8\u5f97\u5f02\u5e38\u7b80\u5355\u3002\u5b83\u5229\u7528 OpenAPI \u548c Swagger UI \u6807\u51c6\uff0c\u6839\u636e\u4f60\u7684\u4ee3\u7801\u81ea\u52a8\u751f\u6210\u4ea4\u4e92\u5f0f\u6587\u6863\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u5728\u4f60\u7684\u5e94\u7528\u4e2d\u6dfb\u52a0\u5143\u6570\u636e</p> <p>\u5728 <code>main.py</code> \u4e2d\u53ef\u4ee5\u6dfb\u52a0\u5c06\u51fa\u73b0\u5728\u6587\u6863\u4e2d\u7684\u63cf\u8ff0\u3002</p> <pre><code># main.py\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel, Field\n\n# ... (FastAPI \u4ee3\u7801)\n\napp = FastAPI(\n    title=\"SpaceAPI\",\n    description=\"\"\"\n\u63a2\u7d22\u94f6\u6cb3\u7cfb\u7684 API\u3002\ud83d\ude80\n\n\u4f60\u5c06\u80fd\u591f\uff1a\n* **\u67e5\u770b\u884c\u661f**\u3002\n* **\u6dfb\u52a0\u65b0\u4e16\u754c**\uff08\u9700\u8981\u8eab\u4efd\u9a8c\u8bc1\uff09\u3002\n    \"\"\",\n    version=\"1.0.0\",\n    contact={\n        \"name\": \"\u63a7\u5236\u4e2d\u5fc3\u603b\u5de5\u7a0b\u5e08\",\n        \"url\": \"https://example.com/contact\",\n        \"email\": \"engineer@example.com\",\n    },\n)\n</code></pre> <p>\u6b65\u9aa4 2\uff1a\u63cf\u8ff0\u4f60\u7684\u6a21\u578b\u548c\u7aef\u70b9</p> <p>\u4f60\u5bf9 Pydantic \u6a21\u578b\u548c\u7aef\u70b9\u53c2\u6570\u7684\u63cf\u8ff0\u8d8a\u8be6\u7ec6\uff0c\u6587\u6863\u5c31\u8d8a\u597d\u3002</p> <pre><code># \u5728 Pydantic \u6a21\u578b\u6587\u4ef6\u6216 main.py \u4e2d\n\nclass PlanetBase(BaseModel):\n    name: str = Field(..., example=\"\u5730\u7403\", description=\"\u884c\u661f\u540d\u79f0\")\n    description: str = Field(..., example=\"\u4e00\u9897\u62e5\u6709\u591a\u6837\u751f\u547d\u7684\u84dd\u8272\u661f\u7403\", description=\"\u7b80\u77ed\u63cf\u8ff0\")\n    # ...\n\nclass Planet(PlanetBase):\n    id: int\n    is_habitable: bool\n\n    class Config:\n        orm_mode = True # \u6216 Pydantic v2 \u4e2d\u7684 from_attributes = True\n\n# \u5728\u8def\u7531\u6587\u4ef6\u4e2d\n@router.get(\n    \"/planets\",\n    response_model=list[Planet],\n    summary=\"\u83b7\u53d6\u6240\u6709\u884c\u661f\u5217\u8868\",\n    description=\"\u8fd4\u56de\u6240\u6709\u5df2\u77e5\u884c\u661f\u7684\u5217\u8868\uff0c\uff08\u672a\u6765\uff09\u5e26\u5206\u9875\u3002\"\n)\ndef get_planets():\n    # ...\n\n@router.post(\n    \"/planets\",\n    # ...\n    summary=\"\u521b\u5efa\u65b0\u884c\u661f\",\n    responses={\n        401: {\"description\": \"\u7528\u6237\u672a\u6388\u6743\"},\n        422: {\"description\": \"\u6570\u636e\u9a8c\u8bc1\u9519\u8bef\"}\n    }\n)\ndef create_planet(planet: PlanetCreate, ...):\n    # ...\n</code></pre> <ul> <li><code>Field(..., example=\"...\")</code>: \u5728\u6587\u6863\u4e2d\u6dfb\u52a0\u793a\u4f8b\u3002</li> <li><code>summary</code>: \u7aef\u70b9\u7684\u7b80\u8981\u63cf\u8ff0\u3002</li> <li><code>description</code>: \u8be6\u7ec6\u63cf\u8ff0\u3002</li> <li><code>responses</code>: \u63cf\u8ff0\u9664\u6210\u529f\u54cd\u5e94\u5916\u7684\u53ef\u80fd\u72b6\u6001\u7801\u3002</li> </ul> <p>\u6b65\u9aa4 3\uff1a\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u6587\u6863</p> <p>\u542f\u52a8\u4f60\u7684 FastAPI \u670d\u52a1\u5668\u5e76\u6253\u5f00\u4e24\u4e2a\u795e\u5947\u7684 URL\uff1a</p> <ol> <li><code>http://127.0.0.1:8000/docs</code> \u2014 \u5c06\u6253\u5f00\u4ea4\u4e92\u5f0f Swagger UI \u6587\u6863\u3002\u4f60\u4e0d\u4ec5\u53ef\u4ee5\u5728\u8fd9\u91cc\u9605\u8bfb\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4ece\u6d4f\u89c8\u5668\u4e2d\u6d4b\u8bd5\u4f60\u7684\u7aef\u70b9\uff01</li> <li><code>http://127.0.0.1:8000/redoc</code> \u2014 \u5c06\u6253\u5f00\u53e6\u4e00\u79cd\u6587\u6863\u89c6\u56fe ReDoc\u3002\u5b83\u4ea4\u4e92\u6027\u8f83\u5dee\uff0c\u4f46\u901a\u5e38\u66f4\u5177\u53ef\u8bfb\u6027\u3002</li> </ol>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/4/#3-laravel","title":"3. Laravel \u4e2d\u7684\u6587\u6863\uff1a\u4f7f\u7528\u7b2c\u4e09\u65b9\u5305","text":"<p>\u4e0e FastAPI \u4e0d\u540c\uff0cLaravel \u4e0d\u4f1a\u201c\u5f00\u7bb1\u5373\u7528\u201d\u5730\u751f\u6210\u6587\u6863\u3002\u7136\u800c\uff0c\u6709\u4e00\u4e9b\u4f18\u79c0\u7684\u5305\u53ef\u4ee5\u901a\u8fc7\u5206\u6790\u4f60\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\u6700\u53d7\u6b22\u8fce\u7684\u662f Scribe\u3002</p> <p>\u6b65\u9aa4 1\uff1a\u5b89\u88c5 Scribe <pre><code>composer require --dev \"knuckleswtf/scribe\"\n</code></pre> <pre><code>php artisan vendor:publish --tag=scribe-config\nphp artisan scribe:generate\n</code></pre></p> <p>\u6b65\u9aa4 2\uff1a\u4f7f\u7528 DocBlocks \u63cf\u8ff0\u7aef\u70b9</p> <p>Scribe \u4f1a\u8bfb\u53d6\u4f60\u7684\u63a7\u5236\u5668\u65b9\u6cd5\u4e0a\u65b9\u7684 PHP DocBlocks\uff08<code>/** ... */</code> \u5f62\u5f0f\u7684\u6ce8\u91ca\uff09\u3002</p> <p>\u6253\u5f00 <code>app/Http/Controllers/PlanetController.php</code>:</p> <pre><code>// app/Http/Controllers/PlanetController.php\n\n/**\n * @group \u884c\u661f\n * \u884c\u661f\u7ba1\u7406 API\n */\nclass PlanetController extends Controller\n{\n    /**\n     * \u83b7\u53d6\u884c\u661f\u5217\u8868\n     *\n     * \u8fd4\u56de\u94f6\u6cb3\u7cfb\u4e2d\u6240\u6709\u884c\u661f\u7684\u5206\u9875\u5217\u8868\u3002\n     *\n     * @unauthenticated\n     */\n    public function index()\n    {\n        // ...\n    }\n\n    /**\n     * \u521b\u5efa\u65b0\u884c\u661f\n     *\n     * @authenticated\n     *\n     * @bodyParam name string required \u884c\u661f\u540d\u79f0\u3002Example: Kepler-186f\n     * @bodyParam description string required \u884c\u661f\u63cf\u8ff0\u3002\n     * @bodyParam size_km integer required \u76f4\u5f84\uff08\u516c\u91cc\uff09\u3002Example: 14000\n     * @bodyParam is_habitable boolean \u884c\u661f\u662f\u5426\u5b9c\u5c45\u3002Example: true\n     *\n     * @response 201 {\n     *  \"id\": 4,\n     *  \"name\": \"Kepler-186f\",\n     *  \"description\": \"\u7b2c\u4e00\u9897\u5728\u5176\u4ed6\u6052\u661f\u5b9c\u5c45\u5e26\u4e2d\u786e\u8ba4\u7684\u5730\u7403\u5927\u5c0f\u884c\u661f\u3002\",\n     *  \"size_km\": 14000,\n     *  \"is_habitable\": true,\n     *  \"created_at\": \"2023-10-27T12:00:00.000000Z\",\n     *  \"updated_at\": \"2023-10-27T12:00:00.000000Z\"\n     * }\n     */\n    public function store(Request $request)\n    {\n        // ...\n    }\n    // ... \u5176\u4ed6\u65b9\u6cd5\u4ee5\u6b64\u7c7b\u63a8\n}\n</code></pre> <p>Scribe \u5173\u952e\u6807\u7b7e\uff1a</p> <ul> <li><code>@group</code>: \u5bf9\u7aef\u70b9\u8fdb\u884c\u5206\u7ec4\u3002</li> <li><code>@unauthenticated</code> / <code>@authenticated</code>: \u6307\u793a\u662f\u5426\u9700\u8981\u4ee4\u724c\u3002</li> <li><code>@bodyParam</code>: \u63cf\u8ff0\u8bf7\u6c42\u4f53\u4e2d\u7684\u53c2\u6570\u3002</li> <li><code>@response</code>: \u6210\u529f\u54cd\u5e94\u7684\u793a\u4f8b\u3002</li> </ul> <p>\u6b65\u9aa4 3\uff1a\u751f\u6210\u548c\u67e5\u770b\u6587\u6863</p> <p>\u6bcf\u6b21\u4fee\u6539 DocBlocks \u540e\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <p><pre><code>php artisan scribe:generate\n</code></pre> Scribe \u5c06\u521b\u5efa\u5305\u542b\u4f60\u6587\u6863\u7684\u9759\u6001 HTML \u9875\u9762\u3002\u5728\u4ee5\u4e0b\u5730\u5740\u6253\u5f00\u5b83\uff1a<code>http://your-app-url/docs</code>\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/4/#_1","title":"\u5de9\u56fa\u6d4b\u9a8c","text":"<p>1. FastAPI \u6839\u636e\u4ee5\u4e0b\u6807\u51c6\u751f\u6210\u6587\u6863\uff1a</p>  a) GraphQL  b) OpenAPI (Swagger)  c) WSDL <p>2. FastAPI \u4e2d\u9ed8\u8ba4\u6253\u5f00 Swagger UI \u7684 URL \u662f\u54ea\u4e2a\uff1f</p>  a) /api/docs  b) /swagger  c) /docs <p>3. Laravel \u4e2d\u7528\u4e8e\u751f\u6210\u6587\u6863\u7684\u6d41\u884c\u5305\u662f\uff1a</p>  a) Telescope  b) Scribe  c) Horizon <p>4. \u5728 Scribe \u4e2d\uff0c\u7528\u4e8e\u63cf\u8ff0\u8bf7\u6c42\u4f53\u53c2\u6570\u7684\u6807\u7b7e\u662f\uff1a</p>  a) @param  b) @bodyParam  c) @request \u68c0\u67e5 <p>\ud83d\ude80 \u672c\u7ae0\u603b\u7ed3\uff1a</p> <p>\u4f60\u5df2\u7ecf\u521b\u5efa\u4e86\u4e13\u4e1a\u7684\u6587\u6863\uff0c\u5c06\u4f60\u7684 API \u4ece\u201c\u9ed1\u76d2\u5b50\u201d\u53d8\u6210\u4e86\u6e05\u6670\u6613\u7528\u7684\u5de5\u5177\u3002</p> <ul> <li>\u2705 \u7406\u89e3\u4e86 API \u6587\u6863\u5316\u7684\u5173\u952e\u91cd\u8981\u6027\u3002</li> <li>\ud83e\ude84 \u5b66\u4f1a\u4e86\u5982\u4f55\u5728 FastAPI \u4e2d\u4f7f\u7528\u81ea\u52a8\u6587\u6863\u751f\u6210\u3002</li> <li>\u2699\ufe0f \u638c\u63e1\u4e86 Scribe \u5305\u5728 Laravel \u4e2d\u8fdb\u884c API \u6587\u6863\u5316\u7684\u57fa\u7840\u77e5\u8bc6\u3002</li> <li>\ud83d\udef0\ufe0f \u786e\u4fe1\u826f\u597d\u7684\u6587\u6863\u662f\u4efb\u4f55\u5f00\u53d1\u8005\u7684\u6700\u4f73\u5e2e\u624b\u3002</li> </ul> <p>\u4f60\u7684 API \u73b0\u5728\u4e0d\u4ec5\u53ef\u4ee5\u5de5\u4f5c\u5e76\u53d7\u5230\u4fdd\u62a4\uff0c\u800c\u4e14\u5df2\u5b8c\u5168\u51c6\u5907\u597d\u4f9b\u56e2\u961f\u5176\u4ed6\u6210\u5458\u4f7f\u7528\u3002 \u5269\u4e0b\u6700\u540e\u4f46\u6700\u91cd\u8981\u7684\u4e00\u6b65\u2014\u2014\u6700\u7ec8\u5b89\u5168\u68c0\u67e5\u3002</p> <p>\ud83d\udccc \u68c0\u67e5\uff1a</p> <ul> <li>\u5bf9\u4e8e FastAPI\uff1a\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 <code>/docs</code> \u5e76\u5c1d\u8bd5\u76f4\u63a5\u4ece Swagger UI \u754c\u9762\u5bf9\u884c\u661f\u5217\u8868\u6267\u884c <code>GET</code> \u8bf7\u6c42\u3002</li> <li>\u5bf9\u4e8e Laravel\uff1a\u6267\u884c <code>php artisan scribe:generate</code> \u5e76\u6253\u5f00 <code>/docs</code>\u3002\u786e\u4fdd\u7aef\u70b9\u5df2\u5206\u7ec4\uff0c\u5e76\u4e14 <code>store</code> \u65b9\u6cd5\u6709\u53c2\u6570\u63cf\u8ff0\u3002</li> </ul>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/5/","title":"\u7b2c 6.5 \u7ae0\uff1aAPI \u5b89\u5168\u57fa\u7840","text":"<p>\u5b66\u4e60\u65f6\u957f\uff1a 45 \u5206\u949f</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/5/#1-api","title":"1. API \u5b89\u5168\uff1a\u7a7a\u95f4\u7ad9\u7684\u591a\u5c42\u9632\u5fa1","text":"<p>\u60f3\u8c61\u4e00\u4e0b\u60a8\u7684\u7a7a\u95f4\u7ad9 (API) \u4f4d\u4e8e\u654c\u5bf9\u7684\u592a\u7a7a\u533a\u57df\u3002\u4e00\u4e2a\u529b\u573a\uff08\u8eab\u4efd\u9a8c\u8bc1\uff09\u662f\u8fdc\u8fdc\u4e0d\u591f\u7684\u3002\u60a8\u9700\u8981\u4e00\u4e2a\u7efc\u5408\u9632\u5fa1\u7cfb\u7edf\uff1a</p> <ul> <li>\u62a4\u76fe (HTTPS)\uff1a \u52a0\u5bc6\u6240\u6709\u6d41\u91cf\u3002</li> <li>\u5f02\u5e38\u4f20\u611f\u5668 (\u901f\u7387\u9650\u5236)\uff1a \u9632\u6b62\u8fc7\u4e8e\u9891\u7e41\u7684\u8bf7\u6c42\u3002</li> <li>\u5185\u90e8\u9694\u8231 (\u6388\u6743)\uff1a \u5206\u79bb\u8bbf\u95ee\u6743\u9650\u3002</li> <li>\u8d27\u7269\u68c0\u67e5 (\u9a8c\u8bc1)\uff1a \u4e0d\u4fe1\u4efb\u4efb\u4f55\u4f20\u5165\u6570\u636e\u3002</li> <li>\u79d8\u5bc6\u4fdd\u9669\u7bb1 (\u73af\u5883\u53d8\u91cf)\uff1a \u5b89\u5168\u5b58\u50a8\u5bc6\u94a5\u3002</li> </ul> <p>\u8ba9\u6211\u4eec\u6765\u914d\u7f6e\u6bcf\u4e2a\u5c42\u9762\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/5/#2-https","title":"2. \u62a4\u76fe\uff1a\u59cb\u7ec8\u4f7f\u7528 HTTPS","text":"<p>\u8fd9\u662f\u4ec0\u4e48\uff1f HTTPS (HyperText Transfer Protocol Secure) \u662f HTTP \u534f\u8bae\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u5b83\u52a0\u5bc6\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6240\u6709\u6570\u636e\u3002\u5982\u679c\u6ca1\u6709\u5b83\uff0c\u4efb\u4f55\u201c\u76d1\u542c\u201d\u7f51\u7edc\u7684\u4eba\uff08\u4f8b\u5982\uff0c\u5728\u516c\u5171 Wi-Fi \u4e2d\uff09\u90fd\u53ef\u4ee5\u62e6\u622a\u767b\u5f55\u4fe1\u606f\u3001\u5bc6\u7801\u548c\u4ee4\u724c\u3002</p> <p>\u5982\u4f55\u5b9e\u73b0\uff1f</p> <ul> <li>\u5728\u751f\u4ea7\u73af\u5883\u4e2d \u2014 \u5fc5\u987b\u3002 \u5c06\u60a8\u7684 API \u90e8\u7f72\u5230\u771f\u5b9e\u670d\u52a1\u5668\uff08Heroku\u3001DigitalOcean \u7b49\uff09\u65f6\uff0c\u914d\u7f6e Web \u670d\u52a1\u5668\uff08Nginx\u3001Apache\uff09\u4ee5\u4f7f\u7528 SSL \u8bc1\u4e66\u3002Let's Encrypt \u7b49\u670d\u52a1\u63d0\u4f9b\u514d\u8d39\u8bc1\u4e66\u3002</li> <li>\u5728\u672c\u5730\u5f00\u53d1\u4e2d\uff0c\u8fd9\u4e0d\u90a3\u4e48\u5173\u952e\uff0c\u4f46\u50cf Laravel Herd \u6216 mkcert \u8fd9\u6837\u7684\u5de5\u5177\u53ef\u4ee5\u8f7b\u677e\u914d\u7f6e\u672c\u5730 HTTPS\u3002</li> </ul> <p>\ud83d\udca1 API \u5b89\u5168\u7b2c\u4e00\u6761\u89c4\u5219\uff1a \u6ca1\u6709 HTTPS \u2014 \u5c31\u6ca1\u6709\u5b89\u5168\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/5/#3-rate-limiting","title":"3. \u5f02\u5e38\u4f20\u611f\u5668\uff1a\u901f\u7387\u9650\u5236 (Rate Limiting)","text":"<p>\u8fd9\u662f\u4ec0\u4e48\uff1f \u9632\u6b62\u66b4\u529b\u7834\u89e3\u653b\u51fb\uff08\u5f53\u653b\u51fb\u8005\u8bd5\u56fe\u901a\u8fc7\u6bcf\u79d2\u53d1\u9001\u6570\u5343\u4e2a\u8bf7\u6c42\u6765\u731c\u6d4b\u5bc6\u7801\u65f6\uff09\u548c DoS \u653b\u51fb\uff08\u5f53\u670d\u52a1\u5668\u88ab\u8bf7\u6c42\u201c\u6df9\u6ca1\u201d\u4ee5\u4f7f\u5176\u505c\u6b62\u54cd\u5e94\u65f6\uff09\u3002\u901f\u7387\u9650\u5236\u9650\u5236\u4e86\u5355\u4e2a\u7528\u6237\uff08\u6216 IP \u5730\u5740\uff09\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u53ef\u4ee5\u53d1\u51fa\u7684\u8bf7\u6c42\u6570\u91cf\u3002</p> <p>\u5982\u4f55\u5b9e\u73b0\uff1f</p> <ul> <li> <p>\u5728 Laravel \u4e2d\uff1a \u901f\u7387\u9650\u5236\u7684\u4e2d\u95f4\u4ef6\u5df2\u7ecf\u5185\u7f6e\uff01   \u6253\u5f00 <code>app/Http/Kernel.php</code> \u5e76\u67e5\u770b <code>middlewareGroups['api']</code> \u952e\u3002\u90a3\u91cc\u5df2\u7ecf\u6709 <code>'throttle:api'</code>\u3002\u6b64\u9650\u5236\u7684\u8bbe\u7f6e\u4f4d\u4e8e <code>app/Providers/RouteServiceProvider.php</code> \u7684 <code>configureRateLimiting()</code> \u65b9\u6cd5\u4e2d\u3002   <pre><code>// app/Providers/RouteServiceProvider.php\nprotected function configureRateLimiting()\n{\n    RateLimiter::for('api', function (Request $request) {\n        return Limit::perMinute(60)-&gt;by($request-&gt;user()?-&gt;id ?: $request-&gt;ip());\n    });\n}\n</code></pre>   \u8fd9\u610f\u5473\u7740\uff1a\u6bcf\u4e2a\u7528\u6237\uff08\u5982\u679c\u5df2\u6388\u6743\uff09\u6216\u6bcf\u4e2a IP \u5730\u5740\u6bcf\u5206\u949f 60 \u4e2a\u8bf7\u6c42\u3002</p> </li> <li> <p>\u5728 FastAPI \u4e2d\uff1a \u4f7f\u7528\u7b2c\u4e09\u65b9\u5305\uff0c\u4f8b\u5982 <code>slowapi</code>\u3002</p> </li> <li> <p>\u5b89\u88c5\uff1a<code>pip install slowapi</code></p> </li> <li>\u5728 <code>main.py</code> \u4e2d\u96c6\u6210\uff1a       <pre><code># main.py\nfrom slowapi import Limiter, _rate_limit_exceeded_handler\nfrom slowapi.util import get_remote_address\nfrom slowapi.errors import RateLimitExceeded\n\nlimiter = Limiter(key_func=get_remote_address)\napp = FastAPI(...)\n\n# \u8fde\u63a5\u9519\u8bef\u5904\u7406\u5668\u548c\u9650\u901f\u5668\u672c\u8eab\napp.state.limiter = limiter\napp.add_exception_handler(RateLimitExceeded, _rate_limit_exceeded_handler)\n\n# \u5e94\u7528\u4e8e\u7279\u5b9a\u7684\u7aef\u70b9\n@router.get(\"/planets\")\n@limiter.limit(\"5/minute\") # \u6bcf\u5206\u949f 5 \u4e2a\u8bf7\u6c42\ndef get_planets(request: Request):\n    # ...\n</code></pre></li> </ul>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/5/#4","title":"4. \u5185\u90e8\u9694\u8231\uff1a\u6388\u6743\uff08\u4e0d\u8981\u4e0e\u8eab\u4efd\u9a8c\u8bc1\u6df7\u6dc6\uff01\uff09","text":"<p>\u8fd9\u662f\u4ec0\u4e48\uff1f</p> <ul> <li>\u8eab\u4efd\u9a8c\u8bc1 \u56de\u7b54\u201c\u4f60\u662f\u8c01\uff1f\u201d\u8fd9\u4e2a\u95ee\u9898\u3002</li> <li>\u6388\u6743 \u56de\u7b54\u201c\u4f60\u88ab\u5141\u8bb8\u505a\u4ec0\u4e48\uff1f\u201d\u8fd9\u4e2a\u95ee\u9898\u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u666e\u901a\u7528\u6237\u53ef\u4ee5\u67e5\u770b\u884c\u661f\uff0c\u4f46\u53ea\u6709\u5177\u6709\u201c\u7ba1\u7406\u5458\u201d\u89d2\u8272\u7684\u7528\u6237\u624d\u80fd\u5220\u9664\u5b83\u4eec\u3002</p> <p>\u5982\u4f55\u5b9e\u73b0\uff1f</p> <ul> <li> <p>\u5728 Laravel \u4e2d\uff1a \u4f7f\u7528 Policies\uff08\u7b56\u7565\uff09\u6216 Gates\uff08\u95e8\uff09\u3002</p> </li> <li> <p>\u521b\u5efa\u7b56\u7565\uff1a<code>php artisan make:policy PlanetPolicy --model=Planet</code></p> </li> <li>\u5728 <code>app/Policies/PlanetPolicy.php</code> \u4e2d\u63cf\u8ff0\u89c4\u5219\uff1a       <pre><code>class PlanetPolicy\n{\n    // \u53ea\u5141\u8bb8 'admin' \u89d2\u8272\u7684\u7528\u6237\u5220\u9664\n    public function delete(User $user, Planet $planet): bool\n    {\n        return $user-&gt;role === 'admin';\n    }\n}\n</code></pre></li> <li> <p>\u5728\u63a7\u5236\u5668 <code>PlanetController.php</code> \u4e2d\u5e94\u7528\u7b56\u7565\uff1a       <pre><code>public function destroy(Planet $planet)\n{\n    // \u68c0\u67e5\u5f53\u524d\u7528\u6237\u662f\u5426\u6709\u5220\u9664\u6743\u9650\n    $this-&gt;authorize('delete', $planet);\n\n    $planet-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre></p> </li> <li> <p>\u5728 FastAPI \u4e2d\uff1a \u6388\u6743\u903b\u8f91\u901a\u5e38\u662f\u624b\u52a8\u5728\u7aef\u70b9\u5185\u90e8\u7f16\u5199\uff0c\u4f7f\u7528\u4ece\u4ee4\u724c\u4e2d\u83b7\u53d6\u7684\u7528\u6237\u4fe1\u606f\u3002</p> </li> </ul> <pre><code># (\u5047\u8bbe\u4ee4\u724c\u4e2d\u6709 'roles' \u5b57\u6bb5)\ndef get_current_active_user(token: str = Depends(oauth2_scheme)):\n    # ... \u89e3\u7801\u4ee4\u724c\u5e76\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u5e26\u6709\u89d2\u8272\u7684\u7528\u6237\n    # user = get_user_from_db(username)\n    return user # \u8fd4\u56de\u7528\u6237\u5bf9\u8c61\n\n@router.delete(\"/planets/{planet_id}\")\ndef delete_planet(\n    planet_id: int,\n    current_user: User = Depends(get_current_active_user)\n):\n    if \"admin\" not in current_user.roles:\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail=\"\u6ca1\u6709\u8db3\u591f\u7684\u6743\u9650\u6267\u884c\u6b64\u64cd\u4f5c\",\n        )\n    # ... \u5220\u9664\u903b\u8f91 ...\n</code></pre>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/5/#5","title":"5. \u8d27\u7269\u68c0\u67e5\u548c\u79d8\u5bc6\u4fdd\u9669\u7bb1\uff1a\u9a8c\u8bc1\u548c\u73af\u5883\u53d8\u91cf","text":"<p>\u8fd9\u4e24\u4e2a\u70b9\u6211\u4eec\u5df2\u7ecf\u5b9e\u73b0\u8fc7\uff0c\u4f46\u91cd\u8981\u7684\u662f\u8981\u5f3a\u8c03\u5b83\u4eec\u5728\u5b89\u5168\u4e2d\u7684\u4f5c\u7528\u3002</p> <ul> <li> <p>\u6c38\u8fdc\u4e0d\u8981\u4fe1\u4efb\u4f20\u5165\u6570\u636e\uff08\u9a8c\u8bc1\uff09\uff1a</p> </li> <li> <p>\u6211\u4eec\u5728 Laravel \u4e2d\u4f7f\u7528\u4e86 <code>$request-&gt;validate()</code>\uff0c\u5728 FastAPI \u4e2d\u4f7f\u7528\u4e86 Pydantic \u6a21\u578b\u3002\u8fd9\u4fdd\u62a4\u6211\u4eec\u514d\u53d7 SQL \u6ce8\u5165\uff08\u5728\u4f7f\u7528 Eloquent/SQLAlchemy \u65f6\uff09\u548c\u53ef\u80fd\u7834\u574f\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u6b63\u786e\u6570\u636e\u3002\u59cb\u7ec8\u9a8c\u8bc1\u6240\u6709\u6765\u81ea\u5916\u90e8\u7684\u6570\u636e\uff01</p> </li> <li> <p>\u5c06\u79d8\u5bc6\u5b58\u50a8\u5728 <code>.env</code> \u4e2d\uff08\u73af\u5883\u53d8\u91cf\uff09\uff1a</p> </li> <li> <p>\u6570\u636e\u5e93\u5bc6\u94a5\u3001JWT \u7684\u5bc6\u94a5 (<code>SECRET_KEY</code>)\u3001\u7b2c\u4e09\u65b9\u670d\u52a1\u5bc6\u94a5 \u2014 \u6240\u6709\u8fd9\u4e9b\u7edd\u4e0d\u5e94\u8be5\u8fdb\u5165\u7248\u672c\u63a7\u5236\u7cfb\u7edf (Git)\u3002\u8fd9\u5c31\u662f <code>.env</code> \u6587\u4ef6\u7684\u4f5c\u7528\uff0c\u5b83\u4eec\u88ab\u6dfb\u52a0\u5230 <code>.gitignore</code> \u4e2d\u3002</p> </li> </ul>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/5/#_1","title":"\u5de9\u56fa\u77e5\u8bc6\u5c0f\u6d4b\u9a8c","text":"<p>1. \u4e3a\u4e86\u9632\u6b62\u6570\u636e\u5728\u516c\u5171\u7f51\u7edc\u4e2d\u88ab\u62e6\u622a\uff0c\u5e94\u4f7f\u7528\uff1a</p>  a) \u901f\u7387\u9650\u5236  b) HTTPS  c) CORS <p>2. \u901f\u7387\u9650\u5236 (Rate Limiting) \u4e3b\u8981\u7528\u4e8e\u9632\u5fa1\uff1a</p>  a) SQL \u6ce8\u5165  b) \u66b4\u529b\u7834\u89e3\u548c DoS \u653b\u51fb  c) \u8de8\u7ad9\u811a\u672c (XSS) <p>3. \u89e3\u51b3\u201c\u8fd9\u4e2a\u7528\u6237\u88ab\u5141\u8bb8\u505a\u4ec0\u4e48\uff1f\u201d\u7684\u95ee\u9898\u662f\uff1a</p>  a) \u8eab\u4efd\u9a8c\u8bc1  b) \u6388\u6743  c) \u9a8c\u8bc1 <p>4. API \u5bc6\u94a5\u548c\u6570\u636e\u5e93\u5bc6\u7801\u5e94\u5b58\u50a8\u5728\uff1a</p>  a) \u4e3a\u4e86\u65b9\u4fbf\u76f4\u63a5\u5199\u5728\u4ee3\u7801\u4e2d  b) \u5728 GitHub \u4e0a\u7684\u516c\u5171\u4ed3\u5e93\u4e2d  c) \u88ab Git \u6392\u9664\u7684 `.env` \u6587\u4ef6\u4e2d \u68c0\u67e5 <p>\ud83d\ude80 \u8bfe\u7a0b\u5b8c\u6210 \u606d\u559c\u60a8\uff0c\u6307\u6325\u5b98\uff01\u60a8\u5df2\u6210\u529f\u5b8c\u6210\u6240\u6709\u4efb\u52a1\u3002</p> <p>\u60a8\u4ece\u4e00\u4e2a\u53ea\u542c\u8bf4\u8fc7 API \u7684\u65b0\u624b\uff0c\u6210\u957f\u4e3a\u4e00\u540d\u80fd\u591f\u72ec\u7acb\u8bbe\u8ba1\u3001\u5f00\u53d1\u3001\u7f16\u5199\u6587\u6863\u3001\u4fdd\u62a4\u548c\u6d4b\u8bd5\u5b8c\u6574\u7684 Web \u670d\u52a1\u5de5\u7a0b\u5e08\uff0c\u5e76\u4e14\u638c\u63e1\u4e86\u5176\u751f\u6001\u7cfb\u7edf\u4e2d\u6700\u6d41\u884c\u7684\u4e24\u79cd\u6280\u672f\u3002</p> <p>\u60a8\u638c\u63e1\u4e86\u901a\u7528\u7684 REST \u8bed\u8a00\uff0c\u5b66\u4f1a\u4e86 Laravel \u548c FastAPI\uff0c\u5e76\u7528\u7eaf JavaScript \u4e3a\u5b83\u4eec\u6784\u5efa\u4e86\u4e00\u4e2a\u201c\u98de\u884c\u63a7\u5236\u4e2d\u5fc3\u201d\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6210\u5c31\u3002 API \u5f00\u53d1\u7684\u4e16\u754c\u73b0\u5728\u5411\u60a8\u655e\u5f00\u3002\u7ee7\u7eed\u63a2\u7d22\u3001\u5b66\u4e60\u5e76\u6784\u5efa\u4ee4\u4eba\u60ca\u53f9\u7684\u4e8b\u7269\u3002</p>"},{"location":"zh/%E7%AC%AC%E5%85%AD%E7%AB%A0%20-%20%E9%9B%86%E6%88%90%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/5/#_2","title":"\u901a\u8baf\u7ed3\u675f\u3002 \ud83d\ude80\u2604 \u652f\u6301\u6211\u4eec\u7684\u4efb\u52a1","text":"<p>\u521b\u5efa\u672c\u6559\u7a0b\u662f\u4e00\u6b21\u6f2b\u957f\u800c\u590d\u6742\u7684\u98de\u884c\uff0c\u9700\u8981\u5927\u91cf\u65f6\u95f4\u548c\u7cbe\u529b\u3002\u5982\u679c\u8fd9\u4e9b\u6750\u6599\u5bf9\u60a8\u6709\u7528\uff0c\u60a8\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8865\u5145\u8fdc\u5f81\u961f\u7684\u71c3\u6599\u7bb1\u3002 \u6bcf\u4e00\u6b21\u652f\u6301\u90fd\u662f\u6211\u4eec\u8fc8\u5411\u65b0\u6709\u7528\u6750\u6599\u7684\u53c8\u4e00\u4e2a\u8f68\u9053\u3002 </p> <p></p>"}]}